Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 gtsam (4.1.0-1ubuntu2~134.gbpb2b7b6) UNRELEASED; urgency=medium
 .
   ** SNAPSHOT build @b2b7b6c8ad0814fbec5df6de23d178ff19c04bb9 **
 .
   [ Borglab Builder ]
   ** SNAPSHOT build @3bafe02c6532d57ea46cc4e6f82eb3540402d33b **
 .
   * modified changelog for distro focal
   * commit of final snapshot version number update
 .
   [ Varun Agrawal ]
   * Squashed 'wrap/' changes from 96ccdfd0b..5ddaff8ba
   * operator overloading for compose
   * add operator overloading and fix some TODOs in the wrapper
Author: Borglab Builder <borglab.launchpad@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2021-04-03

--- /dev/null
+++ gtsam-4.1.0/.github/scripts/boost.sh
@@ -0,0 +1,18 @@
+### Script to install Boost
+BOOST_FOLDER=boost_${BOOST_VERSION//./_}
+
+# Download Boost
+wget https://dl.bintray.com/boostorg/release/${BOOST_VERSION}/source/${BOOST_FOLDER}.tar.gz
+
+# Unzip
+tar -zxf ${BOOST_FOLDER}.tar.gz
+
+# Bootstrap
+cd ${BOOST_FOLDER}/
+./bootstrap.sh
+
+# Build and install
+sudo ./b2 install
+
+# Rebuild ld cache
+sudo ldconfig
--- gtsam-4.1.0.orig/.github/scripts/python.sh
+++ gtsam-4.1.0/.github/scripts/python.sh
@@ -43,11 +43,6 @@ if [ -z ${PYTHON_VERSION+x} ]; then
     exit 127
 fi
 
-if [ -z ${WRAPPER+x} ]; then
-    echo "Please provide the wrapper to build!"
-    exit 126
-fi
-
 PYTHON="python${PYTHON_VERSION}"
 
 if [[ $(uname) == "Darwin" ]]; then
@@ -61,67 +56,33 @@ PATH=$PATH:$($PYTHON -c "import site; pr
 
 [ "${GTSAM_WITH_TBB:-OFF}" = "ON" ] && install_tbb
 
-case $WRAPPER in
-"cython")
-    BUILD_CYTHON="ON"
-    BUILD_PYBIND="OFF"
-    TYPEDEF_POINTS_TO_VECTORS="OFF"
-
-    sudo $PYTHON -m pip install -r $GITHUB_WORKSPACE/cython/requirements.txt
-    ;;
-"pybind")
-    BUILD_CYTHON="OFF"
-    BUILD_PYBIND="ON"
-    TYPEDEF_POINTS_TO_VECTORS="ON"
-
-    sudo $PYTHON -m pip install -r $GITHUB_WORKSPACE/python/requirements.txt
-    ;;
-*)
-    exit 126
-    ;;
-esac
+
+BUILD_PYBIND="ON"
+
+sudo $PYTHON -m pip install -r $GITHUB_WORKSPACE/python/requirements.txt
 
 mkdir $GITHUB_WORKSPACE/build
 cd $GITHUB_WORKSPACE/build
 
-cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release \
-    -DGTSAM_BUILD_TESTS=OFF -DGTSAM_BUILD_UNSTABLE=ON \
+cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} \
+    -DGTSAM_BUILD_TESTS=OFF \
+    -DGTSAM_BUILD_UNSTABLE=${GTSAM_BUILD_UNSTABLE:-ON} \
     -DGTSAM_USE_QUATERNIONS=OFF \
     -DGTSAM_WITH_TBB=${GTSAM_WITH_TBB:-OFF} \
     -DGTSAM_BUILD_EXAMPLES_ALWAYS=OFF \
     -DGTSAM_BUILD_WITH_MARCH_NATIVE=OFF \
-    -DGTSAM_INSTALL_CYTHON_TOOLBOX=${BUILD_CYTHON} \
     -DGTSAM_BUILD_PYTHON=${BUILD_PYBIND} \
-    -DGTSAM_TYPEDEF_POINTS_TO_VECTORS=${TYPEDEF_POINTS_TO_VECTORS} \
+    -DGTSAM_UNSTABLE_BUILD_PYTHON=${GTSAM_BUILD_UNSTABLE:-ON} \
     -DGTSAM_PYTHON_VERSION=$PYTHON_VERSION \
     -DPYTHON_EXECUTABLE:FILEPATH=$(which $PYTHON) \
     -DGTSAM_ALLOW_DEPRECATED_SINCE_V41=OFF \
     -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/gtsam_install
 
-make -j$(nproc) install &
 
-while ps -p $! > /dev/null
-do
-  sleep 60
-  now=$(date +%s)
-  printf "%d seconds have elapsed\n" $(( (now - start) ))
-done
-
-case $WRAPPER in
-"cython")
-    cd $GITHUB_WORKSPACE/build/cython
-    $PYTHON setup.py install --user --prefix=
-    cd $GITHUB_WORKSPACE/build/cython/gtsam/tests
-    $PYTHON -m unittest discover
-    ;;
-"pybind")
-    cd $GITHUB_WORKSPACE/build/python
-    $PYTHON setup.py install --user --prefix=
-    cd $GITHUB_WORKSPACE/python/gtsam/tests
-    $PYTHON -m unittest discover
-    ;;
-*)
-    echo "THIS SHOULD NEVER HAPPEN!"
-    exit 125
-    ;;
-esac
\ No newline at end of file
+# Set to 2 cores so that Actions does not error out during resource provisioning.
+make -j2 install
+
+cd $GITHUB_WORKSPACE/build/python
+$PYTHON setup.py install --user --prefix=
+cd $GITHUB_WORKSPACE/python/gtsam/tests
+$PYTHON -m unittest discover
--- gtsam-4.1.0.orig/.github/scripts/unix.sh
+++ gtsam-4.1.0/.github/scripts/unix.sh
@@ -66,6 +66,8 @@ function configure()
       -DGTSAM_BUILD_EXAMPLES_ALWAYS=${GTSAM_BUILD_EXAMPLES_ALWAYS:-ON} \
       -DGTSAM_ALLOW_DEPRECATED_SINCE_V41=${GTSAM_ALLOW_DEPRECATED_SINCE_V41:-OFF} \
       -DGTSAM_USE_QUATERNIONS=${GTSAM_USE_QUATERNIONS:-OFF} \
+      -DGTSAM_ROT3_EXPMAP=${GTSAM_ROT3_EXPMAP:-ON} \
+      -DGTSAM_POSE3_EXPMAP=${GTSAM_POSE3_EXPMAP:-ON} \
       -DGTSAM_BUILD_WITH_MARCH_NATIVE=OFF \
       -DBOOST_ROOT=$BOOST_ROOT \
       -DBoost_NO_SYSTEM_PATHS=ON \
--- gtsam-4.1.0.orig/.github/workflows/build-linux.yml
+++ gtsam-4.1.0/.github/workflows/build-linux.yml
@@ -12,6 +12,7 @@ jobs:
       CTEST_PARALLEL_LEVEL: 2
       CMAKE_BUILD_TYPE: ${{ matrix.build_type }}
       GTSAM_BUILD_UNSTABLE: ${{ matrix.build_unstable }}
+      BOOST_VERSION: 1.67.0
 
     strategy:
       fail-fast: false
@@ -44,35 +45,41 @@ jobs:
 
     steps:
       - name: Checkout
-        uses: actions/checkout@master
+        uses: actions/checkout@v2
+
       - name: Install (Linux)
         if: runner.os == 'Linux'
         run: |
-          # LLVM 9 is not in Bionic's repositories so we add the official LLVM repository.
+          # LLVM (clang) 9 is not in Bionic's repositories so we add the official LLVM repository.
           if [ "${{ matrix.compiler }}" = "clang" ] && [ "${{ matrix.version }}" = "9" ]; then
+            # (ipv4|ha).pool.sks-keyservers.net is the SKS GPG global keyserver pool
+            # ipv4 avoids potential timeouts because of crappy IPv6 infrastructure
+            # 15CF4D18AF4F7421 is the GPG key for the LLVM apt repository
+            # This key is not in the keystore by default for Ubuntu so we need to add it.
+            LLVM_KEY=15CF4D18AF4F7421
+            gpg --keyserver ipv4.pool.sks-keyservers.net --recv-key $LLVM_KEY || gpg --keyserver ha.pool.sks-keyservers.net --recv-key $LLVM_KEY
+            gpg -a --export $LLVM_KEY | sudo apt-key add -
             sudo add-apt-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main"
           fi
           sudo apt-get -y update
 
-          sudo apt install cmake build-essential pkg-config libpython-dev python-numpy
-          
-          echo "::set-env name=BOOST_ROOT::$(echo $BOOST_ROOT_1_69_0)"
-          echo "::set-env name=LD_LIBRARY_PATH::$(echo $BOOST_ROOT_1_69_0/lib)"
-          
+          sudo apt-get install cmake build-essential pkg-config libpython-dev python-numpy libicu-dev
+
           if [ "${{ matrix.compiler }}" = "gcc" ]; then
             sudo apt-get install -y g++-${{ matrix.version }} g++-${{ matrix.version }}-multilib
-            echo "::set-env name=CC::gcc-${{ matrix.version }}"
-            echo "::set-env name=CXX::g++-${{ matrix.version }}"
+            echo "CC=gcc-${{ matrix.version }}" >> $GITHUB_ENV
+            echo "CXX=g++-${{ matrix.version }}" >> $GITHUB_ENV
           else
             sudo apt-get install -y clang-${{ matrix.version }} g++-multilib
-            echo "::set-env name=CC::clang-${{ matrix.version }}"
-            echo "::set-env name=CXX::clang++-${{ matrix.version }}"
+            echo "CC=clang-${{ matrix.version }}" >> $GITHUB_ENV
+            echo "CXX=clang++-${{ matrix.version }}" >> $GITHUB_ENV
           fi
-      - name: Check Boost version
-        if: runner.os == 'Linux'
+
+      - name: Install Boost
         run: |
-          echo "BOOST_ROOT = $BOOST_ROOT"
+          bash .github/scripts/boost.sh
+
       - name: Build and Test (Linux)
         if: runner.os == 'Linux'
         run: |
-          bash .github/scripts/unix.sh -t
\ No newline at end of file
+          bash .github/scripts/unix.sh -t
--- gtsam-4.1.0.orig/.github/workflows/build-macos.yml
+++ gtsam-4.1.0/.github/workflows/build-macos.yml
@@ -12,6 +12,7 @@ jobs:
       CTEST_PARALLEL_LEVEL: 2
       CMAKE_BUILD_TYPE: ${{ matrix.build_type }}
       GTSAM_BUILD_UNSTABLE: ${{ matrix.build_unstable }}
+
     strategy:
       fail-fast: false
       matrix:
@@ -31,21 +32,23 @@ jobs:
 
     steps:
       - name: Checkout
-        uses: actions/checkout@master
+        uses: actions/checkout@v2
+
       - name: Install (macOS)
         if: runner.os == 'macOS'
         run: |
-          brew install cmake ninja boost
+          brew install cmake ninja
+          brew install boost
           if [ "${{ matrix.compiler }}" = "gcc" ]; then
             brew install gcc@${{ matrix.version }}
-            echo "::set-env name=CC::gcc-${{ matrix.version }}"
-            echo "::set-env name=CXX::g++-${{ matrix.version }}"
+            echo "CC=gcc-${{ matrix.version }}" >> $GITHUB_ENV
+            echo "CXX=g++-${{ matrix.version }}" >> $GITHUB_ENV
           else
             sudo xcode-select -switch /Applications/Xcode_${{ matrix.version }}.app
-            echo "::set-env name=CC::clang"
-            echo "::set-env name=CXX::clang++"
+            echo "CC=clang" >> $GITHUB_ENV
+            echo "CXX=clang++" >> $GITHUB_ENV
           fi
       - name: Build and Test (macOS)
         if: runner.os == 'macOS'
         run: |
-          bash .github/scripts/unix.sh -t
\ No newline at end of file
+          bash .github/scripts/unix.sh -t
--- gtsam-4.1.0.orig/.github/workflows/build-python.yml
+++ gtsam-4.1.0/.github/workflows/build-python.yml
@@ -12,7 +12,7 @@ jobs:
       CTEST_PARALLEL_LEVEL: 2
       CMAKE_BUILD_TYPE: ${{ matrix.build_type }}
       PYTHON_VERSION: ${{ matrix.python_version }}
-      WRAPPER: ${{ matrix.wrapper }}
+
     strategy:
       fail-fast: false
       matrix:
@@ -20,51 +20,65 @@ jobs:
         # See https://help.github.com/en/articles/workflow-syntax-for-github-actions.
         name: [
           ubuntu-18.04-gcc-5,
-          # ubuntu-18.04-gcc-9,  # TODO Disabled for now because of timeouts
+          ubuntu-18.04-gcc-9,
           ubuntu-18.04-clang-9,
           macOS-10.15-xcode-11.3.1,
-          ubuntu-18.04-gcc-5-tbb,
+          # ubuntu-18.04-gcc-5-tbb,
         ]
 
-        build_type: [Debug, Release]
+        #TODO update wrapper to prevent OOM
+        # build_type: [Debug, Release]
+        build_type: [Release]
         python_version: [3]
-        wrapper: [pybind]
         include:
           - name: ubuntu-18.04-gcc-5
             os: ubuntu-18.04
             compiler: gcc
             version: "5"
 
-          # TODO Disabled for now because of timeouts
-          # - name: ubuntu-18.04-gcc-9
-          #   os: ubuntu-18.04
-          #   compiler: gcc
-          #   version: "9"
+          - name: ubuntu-18.04-gcc-9
+            os: ubuntu-18.04
+            compiler: gcc
+            version: "9"
 
           - name: ubuntu-18.04-clang-9
             os: ubuntu-18.04
             compiler: clang
             version: "9"
 
+          #NOTE temporarily added this as it is a required check.
+          - name: ubuntu-18.04-clang-9
+            os: ubuntu-18.04
+            compiler: clang
+            version: "9"
+            build_type: Debug
+            python_version: "3"
+
           - name: macOS-10.15-xcode-11.3.1
             os: macOS-10.15
             compiler: xcode
             version: "11.3.1"
 
-          - name: ubuntu-18.04-gcc-5-tbb
-            os: ubuntu-18.04
-            compiler: gcc
-            version: "5"
-            flag: tbb
+          # - name: ubuntu-18.04-gcc-5-tbb
+          #   os: ubuntu-18.04
+          #   compiler: gcc
+          #   version: "5"
+          #   flag: tbb
 
     steps:
       - name: Checkout
-        uses: actions/checkout@master
+        uses: actions/checkout@v2
       - name: Install (Linux)
         if: runner.os == 'Linux'
         run: |
-          # LLVM 9 is not in Bionic's repositories so we add the official LLVM repository.
           if [ "${{ matrix.compiler }}" = "clang" ] && [ "${{ matrix.version }}" = "9" ]; then
+            # (ipv4|ha).pool.sks-keyservers.net is the SKS GPG global keyserver pool
+            # ipv4 avoids potential timeouts because of crappy IPv6 infrastructure
+            # 15CF4D18AF4F7421 is the GPG key for the LLVM apt repository
+            # This key is not in the keystore by default for Ubuntu so we need to add it.
+            LLVM_KEY=15CF4D18AF4F7421
+            gpg --keyserver ipv4.pool.sks-keyservers.net --recv-key $LLVM_KEY || gpg --keyserver ha.pool.sks-keyservers.net --recv-key $LLVM_KEY
+            gpg -a --export $LLVM_KEY | sudo apt-key add -
             sudo add-apt-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main"
           fi
           sudo apt-get -y update
@@ -73,30 +87,32 @@ jobs:
           
           if [ "${{ matrix.compiler }}" = "gcc" ]; then
             sudo apt-get install -y g++-${{ matrix.version }} g++-${{ matrix.version }}-multilib
-            echo "::set-env name=CC::gcc-${{ matrix.version }}"
-            echo "::set-env name=CXX::g++-${{ matrix.version }}"
+            echo "CC=gcc-${{ matrix.version }}" >> $GITHUB_ENV
+            echo "CXX=g++-${{ matrix.version }}" >> $GITHUB_ENV
           else
             sudo apt-get install -y clang-${{ matrix.version }} g++-multilib
-            echo "::set-env name=CC::clang-${{ matrix.version }}"
-            echo "::set-env name=CXX::clang++-${{ matrix.version }}"
+            echo "CC=clang-${{ matrix.version }}" >> $GITHUB_ENV
+            echo "CXX=clang++-${{ matrix.version }}" >> $GITHUB_ENV
           fi
       - name: Install (macOS)
         if: runner.os == 'macOS'
         run: |
-          brew install cmake ninja boost
+          brew tap ProfFan/robotics
+          brew install cmake ninja
+          brew install boost
           if [ "${{ matrix.compiler }}" = "gcc" ]; then
             brew install gcc@${{ matrix.version }}
-            echo "::set-env name=CC::gcc-${{ matrix.version }}"
-            echo "::set-env name=CXX::g++-${{ matrix.version }}"
+            echo "CC=gcc-${{ matrix.version }}" >> $GITHUB_ENV
+            echo "CXX=g++-${{ matrix.version }}" >> $GITHUB_ENV
           else
             sudo xcode-select -switch /Applications/Xcode_${{ matrix.version }}.app
-            echo "::set-env name=CC::clang"
-            echo "::set-env name=CXX::clang++"
+            echo "CC=clang" >> $GITHUB_ENV
+            echo "CXX=clang++" >> $GITHUB_ENV
           fi
       - name: Set GTSAM_WITH_TBB Flag
         if: matrix.flag == 'tbb'
         run: |
-          echo "::set-env name=GTSAM_WITH_TBB::ON"
+          echo "GTSAM_WITH_TBB=ON" >> $GITHUB_ENV
           echo "GTSAM Uses TBB"
       - name: Build (Linux)
         if: runner.os == 'Linux'
@@ -105,4 +121,4 @@ jobs:
       - name: Build (macOS)
         if: runner.os == 'macOS'
         run: |
-          bash .github/scripts/python.sh
\ No newline at end of file
+          bash .github/scripts/python.sh
--- gtsam-4.1.0.orig/.github/workflows/build-special.yml
+++ gtsam-4.1.0/.github/workflows/build-special.yml
@@ -12,6 +12,7 @@ jobs:
       CTEST_PARALLEL_LEVEL: 2
       CMAKE_BUILD_TYPE: ${{ matrix.build_type }}
       GTSAM_BUILD_UNSTABLE: ON
+      BOOST_VERSION: 1.67.0
 
     strategy:
       fail-fast: false
@@ -24,6 +25,7 @@ jobs:
             ubuntu-gcc-deprecated,
             ubuntu-gcc-quaternions,
             ubuntu-gcc-tbb,
+            ubuntu-cayleymap,
           ]
 
         build_type: [Debug, Release]
@@ -47,66 +49,83 @@ jobs:
             version: "9"
             flag: tbb
 
+          - name: ubuntu-cayleymap
+            os: ubuntu-18.04
+            compiler: gcc
+            version: "9"
+            flag: cayley
+
     steps:
       - name: Checkout
-        uses: actions/checkout@master
+        uses: actions/checkout@v2
 
       - name: Install (Linux)
         if: runner.os == 'Linux'
         run: |
           # LLVM 9 is not in Bionic's repositories so we add the official LLVM repository.
           if [ "${{ matrix.compiler }}" = "clang" ] && [ "${{ matrix.version }}" = "9" ]; then
+            gpg --keyserver pool.sks-keyservers.net --recv-key 15CF4D18AF4F7421
+            gpg -a --export 15CF4D18AF4F7421 | sudo apt-key add -
             sudo add-apt-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main"
           fi
           sudo apt-get -y update
 
-          sudo apt install cmake build-essential pkg-config libpython-dev python-numpy
-
-          echo "::set-env name=BOOST_ROOT::$(echo $BOOST_ROOT_1_69_0)"
-          echo "::set-env name=LD_LIBRARY_PATH::$(echo $BOOST_ROOT_1_69_0/lib)"
+          sudo apt install cmake build-essential pkg-config libpython-dev python-numpy libicu-dev
 
           if [ "${{ matrix.compiler }}" = "gcc" ]; then
             sudo apt-get install -y g++-${{ matrix.version }} g++-${{ matrix.version }}-multilib
-            echo "::set-env name=CC::gcc-${{ matrix.version }}"
-            echo "::set-env name=CXX::g++-${{ matrix.version }}"
+            echo "CC=gcc-${{ matrix.version }}" >> $GITHUB_ENV
+            echo "CXX=g++-${{ matrix.version }}" >> $GITHUB_ENV
           else
             sudo apt-get install -y clang-${{ matrix.version }} g++-multilib
-            echo "::set-env name=CC::clang-${{ matrix.version }}"
-            echo "::set-env name=CXX::clang++-${{ matrix.version }}"
+            echo "CC=clang-${{ matrix.version }}" >> $GITHUB_ENV
+            echo "CXX=clang++-${{ matrix.version }}" >> $GITHUB_ENV
           fi
 
+      - name: Install Boost
+        if: runner.os == 'Linux'
+        run: |
+          bash .github/scripts/boost.sh
+
       - name: Install (macOS)
         if: runner.os == 'macOS'
         run: |
           brew install cmake ninja boost
           if [ "${{ matrix.compiler }}" = "gcc" ]; then
             brew install gcc@${{ matrix.version }}
-            echo "::set-env name=CC::gcc-${{ matrix.version }}"
-            echo "::set-env name=CXX::g++-${{ matrix.version }}"
+            echo "CC=gcc-${{ matrix.version }}" >> $GITHUB_ENV
+            echo "CXX=g++-${{ matrix.version }}" >> $GITHUB_ENV
           else
             sudo xcode-select -switch /Applications/Xcode_${{ matrix.version }}.app
-            echo "::set-env name=CC::clang"
-            echo "::set-env name=CXX::clang++"
+            echo "CC=clang" >> $GITHUB_ENV
+            echo "CXX=clang++" >> $GITHUB_ENV
             fi
 
       - name: Set Allow Deprecated Flag
         if: matrix.flag == 'deprecated'
         run: |
-          echo "::set-env name=GTSAM_ALLOW_DEPRECATED_SINCE_V41::ON"
+          echo "GTSAM_ALLOW_DEPRECATED_SINCE_V41=ON" >> $GITHUB_ENV
           echo "Allow deprecated since version 4.1"
 
       - name: Set Use Quaternions Flag
         if: matrix.flag == 'quaternions'
         run: |
-          echo "::set-env name=GTSAM_USE_QUATERNIONS::ON"
+          echo "GTSAM_USE_QUATERNIONS=ON" >> $GITHUB_ENV
           echo "Use Quaternions for rotations"
 
       - name: Set GTSAM_WITH_TBB Flag
         if: matrix.flag == 'tbb'
         run: |
-          echo "::set-env name=GTSAM_WITH_TBB::ON"
+          echo "GTSAM_WITH_TBB=ON" >> $GITHUB_ENV
           echo "GTSAM Uses TBB"
 
+      - name: Use Cayley Transform for Rot3
+        if: matrix.flag == 'cayley'
+        run: |
+          echo "GTSAM_POSE3_EXPMAP=OFF" >> $GITHUB_ENV
+          echo "GTSAM_ROT3_EXPMAP=OFF" >> $GITHUB_ENV
+          echo "GTSAM Uses Cayley map for Rot3"
+
       - name: Build & Test
         run: |
           bash .github/scripts/unix.sh -t
--- gtsam-4.1.0.orig/.github/workflows/build-windows.yml
+++ gtsam-4.1.0/.github/workflows/build-windows.yml
@@ -18,16 +18,19 @@ jobs:
         # Github Actions requires a single row to be added to the build matrix.
         # See https://help.github.com/en/articles/workflow-syntax-for-github-actions.
         name: [
-          windows-2016-cl,
+          #TODO This build keeps timing out, need to understand why.
+          # windows-2016-cl,
           windows-2019-cl,
         ]
 
         build_type: [Debug, Release]
         build_unstable: [ON]
         include:
-          - name: windows-2016-cl
-            os: windows-2016
-            compiler: cl
+
+          #TODO This build keeps timing out, need to understand why.
+          # - name: windows-2016-cl
+          #   os: windows-2016
+          #   compiler: cl
 
           - name: windows-2019-cl
             os: windows-2019
@@ -35,7 +38,7 @@ jobs:
 
     steps:
       - name: Checkout
-        uses: actions/checkout@master
+        uses: actions/checkout@v2
       - name: Install (Windows)
         if: runner.os == 'Windows'
         shell: powershell
@@ -50,26 +53,35 @@ jobs:
             # See: https://github.com/DaanDeMeyer/doctest/runs/231595515
             # See: https://github.community/t5/GitHub-Actions/Something-is-wrong-with-the-chocolatey-installed-version-of-gcc/td-p/32413
             scoop install gcc --global
-            echo "::set-env name=CC::gcc"
-            echo "::set-env name=CXX::g++"
+            echo "CC=gcc" >> $GITHUB_ENV
+            echo "CXX=g++" >> $GITHUB_ENV
           } elseif ("${{ matrix.compiler }}" -eq "clang") {
-            echo "::set-env name=CC::clang"
-            echo "::set-env name=CXX::clang++"
+            echo "CC=clang" >> $GITHUB_ENV
+            echo "CXX=clang++" >> $GITHUB_ENV
           } else {
-            echo "::set-env name=CC::${{ matrix.compiler }}"
-            echo "::set-env name=CXX::${{ matrix.compiler }}"
+            echo "CC=${{ matrix.compiler }}" >> $GITHUB_ENV
+            echo "CXX=${{ matrix.compiler }}" >> $GITHUB_ENV
           }
           # Scoop modifies the PATH so we make the modified PATH global.
-          echo "::set-env name=PATH::$env:PATH"
+          echo "$env:PATH" >> $GITHUB_PATH
+
+      - name: Download and install Boost
+        uses: MarkusJx/install-boost@v1.0.1
+        id: install-boost
+        with:
+          boost_version: 1.72.0
+          toolset: msvc14.2
+
       - name: Build (Windows)
         if: runner.os == 'Windows'
+        env:
+          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
         run: |
           cmake -E remove_directory build
-          echo "BOOST_ROOT_1_72_0: ${env:BOOST_ROOT_1_72_0}"
-          cmake -B build -S . -DGTSAM_BUILD_EXAMPLES_ALWAYS=OFF -DBOOST_ROOT="${env:BOOST_ROOT_1_72_0}" -DBOOST_INCLUDEDIR="${env:BOOST_ROOT_1_72_0}\boost\include" -DBOOST_LIBRARYDIR="${env:BOOST_ROOT_1_72_0}\lib"
+          cmake -B build -S . -DGTSAM_BUILD_EXAMPLES_ALWAYS=OFF -DBOOST_ROOT="${env:BOOST_ROOT}" -DBOOST_INCLUDEDIR="${env:BOOST_ROOT}\boost\include" -DBOOST_LIBRARYDIR="${env:BOOST_ROOT}\lib"
           cmake --build build --config ${{ matrix.build_type }} --target gtsam
           cmake --build build --config ${{ matrix.build_type }} --target gtsam_unstable
           cmake --build build --config ${{ matrix.build_type }} --target wrap
           cmake --build build --config ${{ matrix.build_type }} --target check.base
           cmake --build build --config ${{ matrix.build_type }} --target check.base_unstable
-          cmake --build build --config ${{ matrix.build_type }} --target check.linear
\ No newline at end of file
+          cmake --build build --config ${{ matrix.build_type }} --target check.linear
--- gtsam-4.1.0.orig/.github/workflows/trigger-python.yml
+++ gtsam-4.1.0/.github/workflows/trigger-python.yml
@@ -1,11 +1,11 @@
-# This triggers Cython builds on `gtsam-manylinux-build`
+# This triggers Python builds on `gtsam-manylinux-build`
 name: Trigger Python Builds
 on:
   push:
     branches:
       - develop
 jobs:
-  triggerCython:
+  triggerPython:
     runs-on: ubuntu-latest
     steps:
       - name: Repository Dispatch
@@ -13,5 +13,5 @@ jobs:
         with:
           token: ${{ secrets.PYTHON_CI_REPO_ACCESS_TOKEN }}
           repository: borglab/gtsam-manylinux-build
-          event-type: cython-wrapper
+          event-type: python-wrapper
           client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
--- gtsam-4.1.0.orig/CMakeLists.txt
+++ gtsam-4.1.0/CMakeLists.txt
@@ -14,20 +14,18 @@ set (GTSAM_VERSION_PATCH 0)
 math (EXPR GTSAM_VERSION_NUMERIC "10000 * ${GTSAM_VERSION_MAJOR} + 100 * ${GTSAM_VERSION_MINOR} + ${GTSAM_VERSION_PATCH}")
 set (GTSAM_VERSION_STRING "${GTSAM_VERSION_MAJOR}.${GTSAM_VERSION_MINOR}.${GTSAM_VERSION_PATCH}")
 
+set (CMAKE_PROJECT_VERSION ${GTSAM_VERSION_STRING})
+set (CMAKE_PROJECT_VERSION_MAJOR ${GTSAM_VERSION_MAJOR})
+set (CMAKE_PROJECT_VERSION_MINOR ${GTSAM_VERSION_MINOR})
+set (CMAKE_PROJECT_VERSION_PATCH ${GTSAM_VERSION_PATCH})
+
 ###############################################################################
 # Gather information, perform checks, set defaults
 
-# Set the default install path to home
-#set (CMAKE_INSTALL_PREFIX ${HOME} CACHE PATH "Install prefix for library")
-
 set(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH}" "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
 include(GtsamMakeConfigFile)
 include(GNUInstallDirs)
 
-# Record the root dir for gtsam - needed during external builds, e.g., ROS
-set(GTSAM_SOURCE_ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR})
-message(STATUS "GTSAM_SOURCE_ROOT_DIR: [${GTSAM_SOURCE_ROOT_DIR}]")
-
 # Load build type flags and default to Debug mode
 include(GtsamBuildTypes)
 
@@ -36,387 +34,25 @@ include(GtsamTesting)
 include(GtsamPrinting)
 
 # guard against in-source builds
-if(${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_BINARY_DIR})
+if(${GTSAM_SOURCE_DIR} STREQUAL ${GTSAM_BINARY_DIR})
   message(FATAL_ERROR "In-source builds not allowed. Please make a new directory (called a build directory) and run CMake from there. You may need to remove CMakeCache.txt. ")
 endif()
 
-# See whether gtsam_unstable is available (it will be present only if we're using a git checkout)
-if(EXISTS "${PROJECT_SOURCE_DIR}/gtsam_unstable" AND IS_DIRECTORY "${PROJECT_SOURCE_DIR}/gtsam_unstable")
-    set(GTSAM_UNSTABLE_AVAILABLE 1)
-else()
-    set(GTSAM_UNSTABLE_AVAILABLE 0)
-endif()
-
-# ----------------------------------------------------------------------------
-#   Uninstall target, for "make uninstall"
-# ----------------------------------------------------------------------------
-configure_file(
-  "${CMAKE_CURRENT_SOURCE_DIR}/cmake/cmake_uninstall.cmake.in"
-  "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake"
-  IMMEDIATE @ONLY)
-
-add_custom_target(uninstall
-  "${CMAKE_COMMAND}" -P "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake")
-
-
-###############################################################################
-# Set up options
-
-# Configurable Options
-if(GTSAM_UNSTABLE_AVAILABLE)
-    option(GTSAM_BUILD_UNSTABLE              "Enable/Disable libgtsam_unstable"          ON)
-    option(GTSAM_UNSTABLE_BUILD_PYTHON       "Enable/Disable Python wrapper for libgtsam_unstable" ON)
-    option(GTSAM_UNSTABLE_INSTALL_MATLAB_TOOLBOX "Enable/Disable MATLAB wrapper for libgtsam_unstable" OFF)
-endif()
-option(BUILD_SHARED_LIBS                 "Build shared gtsam library, instead of static" ON)
-option(GTSAM_USE_QUATERNIONS             "Enable/Disable using an internal Quaternion representation for rotations instead of rotation matrices. If enable, Rot3::EXPMAP is enforced by default." OFF)
-option(GTSAM_POSE3_EXPMAP                "Enable/Disable using Pose3::EXPMAP as the default mode. If disabled, Pose3::FIRST_ORDER will be used." ON)
-option(GTSAM_ROT3_EXPMAP                 "Ignore if GTSAM_USE_QUATERNIONS is OFF (Rot3::EXPMAP by default). Otherwise, enable Rot3::EXPMAP, or if disabled, use Rot3::CAYLEY." ON)
-option(GTSAM_ENABLE_CONSISTENCY_CHECKS   "Enable/Disable expensive consistency checks"       OFF)
-option(GTSAM_WITH_TBB                    "Use Intel Threaded Building Blocks (TBB) if available" ON)
-option(GTSAM_WITH_EIGEN_MKL              "Eigen will use Intel MKL if available" OFF)
-option(GTSAM_WITH_EIGEN_MKL_OPENMP       "Eigen, when using Intel MKL, will also use OpenMP for multithreading if available" OFF)
-option(GTSAM_THROW_CHEIRALITY_EXCEPTION  "Throw exception when a triangulated point is behind a camera" ON)
-option(GTSAM_BUILD_PYTHON                "Enable/Disable building & installation of Python module with pybind11" OFF)
-option(GTSAM_ALLOW_DEPRECATED_SINCE_V41  "Allow use of methods/functions deprecated in GTSAM 4.1" ON)
-option(GTSAM_SUPPORT_NESTED_DISSECTION   "Support Metis-based nested dissection" ON)
-option(GTSAM_TANGENT_PREINTEGRATION      "Use new ImuFactor with integration on tangent space" ON)
-if(NOT MSVC AND NOT XCODE_VERSION)
-    option(GTSAM_BUILD_WITH_CCACHE           "Use ccache compiler cache" ON)
-endif()
-
-if(NOT MSVC AND NOT XCODE_VERSION)
-  # Set the build type to upper case for downstream use
-  string(TOUPPER "${CMAKE_BUILD_TYPE}" CMAKE_BUILD_TYPE_UPPER)
-
-  # Set the GTSAM_BUILD_TAG variable.
-  # If build type is Release, set to blank (""), else set to the build type.
-  if(${CMAKE_BUILD_TYPE_UPPER} STREQUAL "RELEASE")
-   set(GTSAM_BUILD_TAG "") # Don't create release mode tag on installed directory
-  else()
-   set(GTSAM_BUILD_TAG "${CMAKE_BUILD_TYPE}")
-  endif()
-endif()
-
-# Options relating to MATLAB wrapper
-# TODO: Check for matlab mex binary before handling building of binaries
-option(GTSAM_INSTALL_MATLAB_TOOLBOX      "Enable/Disable installation of matlab toolbox"  OFF)
-set(GTSAM_PYTHON_VERSION "Default" CACHE STRING "The version of Python to build the wrappers against.")
-
-# Check / set dependent variables for MATLAB wrapper
-if(GTSAM_INSTALL_MATLAB_TOOLBOX AND GTSAM_BUILD_TYPE_POSTFIXES)
-    set(CURRENT_POSTFIX ${CMAKE_${CMAKE_BUILD_TYPE_UPPER}_POSTFIX})
-endif()
-
-if(GTSAM_INSTALL_MATLAB_TOOLBOX AND NOT BUILD_SHARED_LIBS)
-    message(FATAL_ERROR "GTSAM_INSTALL_MATLAB_TOOLBOX and BUILD_SHARED_LIBS=OFF. The MATLAB wrapper cannot be compiled with a static GTSAM library because mex modules are themselves shared libraries.  If you want a self-contained mex module, enable GTSAM_MEX_BUILD_STATIC_MODULE instead of BUILD_SHARED_LIBS=OFF.")
-endif()
-
-if(GTSAM_BUILD_PYTHON)
-    if(GTSAM_UNSTABLE_BUILD_PYTHON)
-        if (NOT GTSAM_BUILD_UNSTABLE)
-            message(WARNING "GTSAM_UNSTABLE_BUILD_PYTHON requires the unstable module to be enabled.")
-            set(GTSAM_UNSTABLE_BUILD_PYTHON OFF)
-        endif()
-    endif()
-
-    set(GTSAM_PY_INSTALL_PATH "${CMAKE_INSTALL_PREFIX}/python")
-endif()
-
-# Flags for choosing default packaging tools
-set(CPACK_SOURCE_GENERATOR "TGZ" CACHE STRING "CPack Default Source Generator")
-set(CPACK_GENERATOR        "TGZ" CACHE STRING "CPack Default Binary Generator")
-
-if (CMAKE_GENERATOR STREQUAL "Ninja" AND
-    ((CMAKE_CXX_COMPILER_ID STREQUAL "GNU" AND NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.9) OR
-     (CMAKE_CXX_COMPILER_ID STREQUAL "Clang" AND NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.5)))
-    # Force colored warnings in Ninja's output, if the compiler has -fdiagnostics-color support.
-    # Rationale in https://github.com/ninja-build/ninja/issues/814
-    add_compile_options(-fdiagnostics-color=always)
-endif()
-
-###############################################################################
-# Find boost
-
-# To change the path for boost, you will need to set:
-# BOOST_ROOT: path to install prefix for boost
-# Boost_NO_SYSTEM_PATHS: set to true to keep the find script from ignoring BOOST_ROOT
-
-if(MSVC)
-    # By default, boost only builds static libraries on windows
-    set(Boost_USE_STATIC_LIBS ON)  # only find static libs
-    # If we ever reset above on windows and, ...
-    # If we use Boost shared libs, disable auto linking.
-    # Some libraries, at least Boost Program Options, rely on this to export DLL symbols.
-    if(NOT Boost_USE_STATIC_LIBS)
-        list_append_cache(GTSAM_COMPILE_DEFINITIONS_PUBLIC BOOST_ALL_NO_LIB BOOST_ALL_DYN_LINK)
-    endif()
-    # Virtual memory range for PCH exceeded on VS2015
-    if(MSVC_VERSION LESS 1910) # older than VS2017
-      list_append_cache(GTSAM_COMPILE_OPTIONS_PRIVATE -Zm295)
-    endif()
-endif()
-
-# If building DLLs in MSVC, we need to avoid EIGEN_STATIC_ASSERT()
-# or explicit instantiation will generate build errors.
-# See: https://bitbucket.org/gtborg/gtsam/issues/417/fail-to-build-on-msvc-2017
-#
-if(MSVC AND BUILD_SHARED_LIBS)
-    list_append_cache(GTSAM_COMPILE_DEFINITIONS_PUBLIC EIGEN_NO_STATIC_ASSERT)
-endif()
-
-# Store these in variables so they are automatically replicated in GTSAMConfig.cmake and such.
-set(BOOST_FIND_MINIMUM_VERSION 1.43)
-set(BOOST_FIND_MINIMUM_COMPONENTS serialization system filesystem thread program_options date_time timer chrono regex)
-
-find_package(Boost ${BOOST_FIND_MINIMUM_VERSION} COMPONENTS ${BOOST_FIND_MINIMUM_COMPONENTS})
-
-# Required components
-if(NOT Boost_SERIALIZATION_LIBRARY OR NOT Boost_SYSTEM_LIBRARY OR NOT Boost_FILESYSTEM_LIBRARY OR
-    NOT Boost_THREAD_LIBRARY OR NOT Boost_DATE_TIME_LIBRARY)
-  message(FATAL_ERROR "Missing required Boost components >= v1.43, please install/upgrade Boost or configure your search paths.")
-endif()
-
-option(GTSAM_DISABLE_NEW_TIMERS "Disables using Boost.chrono for timing" OFF)
-# Allow for not using the timer libraries on boost < 1.48 (GTSAM timing code falls back to old timer library)
-set(GTSAM_BOOST_LIBRARIES
-  Boost::serialization
-  Boost::system
-  Boost::filesystem
-  Boost::thread
-  Boost::date_time
-  Boost::regex
-)
-if (GTSAM_DISABLE_NEW_TIMERS)
-    message("WARNING:  GTSAM timing instrumentation manually disabled")
-    list_append_cache(GTSAM_COMPILE_DEFINITIONS_PUBLIC DGTSAM_DISABLE_NEW_TIMERS)
-else()
-    if(Boost_TIMER_LIBRARY)
-      list(APPEND GTSAM_BOOST_LIBRARIES Boost::timer Boost::chrono)
-    else()
-      list(APPEND GTSAM_BOOST_LIBRARIES rt) # When using the header-only boost timer library, need -lrt
-      message("WARNING:  GTSAM timing instrumentation will use the older, less accurate, Boost timer library because boost older than 1.48 was found.")
-    endif()
-endif()
-
-###############################################################################
-# Find TBB
-find_package(TBB 4.4 COMPONENTS tbb tbbmalloc)
-
-# Set up variables if we're using TBB
-if(TBB_FOUND AND GTSAM_WITH_TBB)
-    set(GTSAM_USE_TBB 1)  # This will go into config.h
-    if ((${TBB_VERSION_MAJOR} GREATER 2020) OR (${TBB_VERSION_MAJOR} EQUAL 2020))
-        set(TBB_GREATER_EQUAL_2020 1)
-    else()
-        set(TBB_GREATER_EQUAL_2020 0)
-    endif()
-    # all definitions and link requisites will go via imported targets:
-    # tbb & tbbmalloc
-    list(APPEND GTSAM_ADDITIONAL_LIBRARIES tbb tbbmalloc)
-else()
-    set(GTSAM_USE_TBB 0)  # This will go into config.h
-endif()
-
-###############################################################################
-# Prohibit Timing build mode in combination with TBB
-if(GTSAM_USE_TBB AND (CMAKE_BUILD_TYPE  STREQUAL "Timing"))
-      message(FATAL_ERROR "Timing build mode cannot be used together with TBB. Use a sampling profiler such as Instruments or Intel VTune Amplifier instead.")
-endif()
-
-
-###############################################################################
-# Find Google perftools
-find_package(GooglePerfTools)
-
-###############################################################################
-# Support ccache, if installed
-if(NOT MSVC AND NOT XCODE_VERSION)
-    find_program(CCACHE_FOUND ccache)
-    if(CCACHE_FOUND)
-        if(GTSAM_BUILD_WITH_CCACHE)
-            set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ccache)
-            set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ccache)
-        else()
-            set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE "")
-            set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK "")
-        endif()
-    endif(CCACHE_FOUND)
-endif()
-
-###############################################################################
-# Find MKL
-find_package(MKL)
-
-if(MKL_FOUND AND GTSAM_WITH_EIGEN_MKL)
-    set(GTSAM_USE_EIGEN_MKL 1) # This will go into config.h
-    set(EIGEN_USE_MKL_ALL 1) # This will go into config.h - it makes Eigen use MKL
-    list(APPEND GTSAM_ADDITIONAL_LIBRARIES ${MKL_LIBRARIES})
-
-    # --no-as-needed is required with gcc according to the MKL link advisor
-    if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
-        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,--no-as-needed")
-    endif()
-else()
-    set(GTSAM_USE_EIGEN_MKL 0)
-    set(EIGEN_USE_MKL_ALL 0)
-endif()
-
-###############################################################################
-# Find OpenMP (if we're also using MKL)
-find_package(OpenMP)  # do this here to generate correct message if disabled
-
-if(GTSAM_WITH_EIGEN_MKL AND GTSAM_WITH_EIGEN_MKL_OPENMP AND GTSAM_USE_EIGEN_MKL)
-    if(OPENMP_FOUND AND GTSAM_USE_EIGEN_MKL AND GTSAM_WITH_EIGEN_MKL_OPENMP)
-        set(GTSAM_USE_EIGEN_MKL_OPENMP 1) # This will go into config.h
-        list_append_cache(GTSAM_COMPILE_OPTIONS_PUBLIC ${OpenMP_CXX_FLAGS})
-    endif()
-endif()
-
-
-###############################################################################
-# Option for using system Eigen or GTSAM-bundled Eigen
-### These patches only affect usage of MKL. If you want to enable MKL, you *must*
-### use our patched version of Eigen
-### See:  http://eigen.tuxfamily.org/bz/show_bug.cgi?id=704 (Householder QR MKL selection)
-###       http://eigen.tuxfamily.org/bz/show_bug.cgi?id=705 (Fix MKL LLT return code)
-option(GTSAM_USE_SYSTEM_EIGEN "Find and use system-installed Eigen. If 'off', use the one bundled with GTSAM" OFF)
-option(GTSAM_WITH_EIGEN_UNSUPPORTED "Install Eigen's unsupported modules" OFF)
-
-# Switch for using system Eigen or GTSAM-bundled Eigen
-if(GTSAM_USE_SYSTEM_EIGEN)
-    find_package(Eigen3 REQUIRED)
-
-    # Use generic Eigen include paths e.g. <Eigen/Core>
-    set(GTSAM_EIGEN_INCLUDE_FOR_INSTALL "${EIGEN3_INCLUDE_DIR}")
-
-    # check if MKL is also enabled - can have one or the other, but not both!
-    # Note: Eigen >= v3.2.5 includes our patches
-    if(EIGEN_USE_MKL_ALL AND (EIGEN3_VERSION VERSION_LESS 3.2.5))
-      message(FATAL_ERROR "MKL requires at least Eigen 3.2.5, and your system appears to have an older version. Disable GTSAM_USE_SYSTEM_EIGEN to use GTSAM's copy of Eigen, or disable GTSAM_WITH_EIGEN_MKL")
-    endif()
-
-    # Check for Eigen version which doesn't work with MKL
-    # See http://eigen.tuxfamily.org/bz/show_bug.cgi?id=1527 for details.
-    if(EIGEN_USE_MKL_ALL AND (EIGEN3_VERSION VERSION_EQUAL 3.3.4))
-        message(FATAL_ERROR "MKL does not work with Eigen 3.3.4 because of a bug in Eigen. See http://eigen.tuxfamily.org/bz/show_bug.cgi?id=1527. Disable GTSAM_USE_SYSTEM_EIGEN to use GTSAM's copy of Eigen, disable GTSAM_WITH_EIGEN_MKL, or upgrade/patch your installation of Eigen.")
-    endif()
-
-    # The actual include directory (for BUILD cmake target interface):
-    set(GTSAM_EIGEN_INCLUDE_FOR_BUILD "${EIGEN3_INCLUDE_DIR}")
-else()
-    # Use bundled Eigen include path.
-    # Clear any variables set by FindEigen3
-    if(EIGEN3_INCLUDE_DIR)
-        set(EIGEN3_INCLUDE_DIR NOTFOUND CACHE STRING "" FORCE)
-    endif()
-
-    # set full path to be used by external projects
-    # this will be added to GTSAM_INCLUDE_DIR by gtsam_extra.cmake.in
-    set(GTSAM_EIGEN_INCLUDE_FOR_INSTALL "include/gtsam/3rdparty/Eigen/")
-
-    # The actual include directory (for BUILD cmake target interface):
-    set(GTSAM_EIGEN_INCLUDE_FOR_BUILD "${CMAKE_SOURCE_DIR}/gtsam/3rdparty/Eigen/")
-endif()
-
-# Detect Eigen version:
-set(EIGEN_VER_H "${GTSAM_EIGEN_INCLUDE_FOR_BUILD}/Eigen/src/Core/util/Macros.h")
-if (EXISTS ${EIGEN_VER_H})
-    file(READ "${EIGEN_VER_H}" STR_EIGEN_VERSION)
-
-    # Extract the Eigen version from the Macros.h file, lines "#define EIGEN_WORLD_VERSION  XX", etc...
-
-    string(REGEX MATCH "EIGEN_WORLD_VERSION[ ]+[0-9]+" GTSAM_EIGEN_VERSION_WORLD "${STR_EIGEN_VERSION}")
-    string(REGEX MATCH "[0-9]+" GTSAM_EIGEN_VERSION_WORLD "${GTSAM_EIGEN_VERSION_WORLD}")
-
-    string(REGEX MATCH "EIGEN_MAJOR_VERSION[ ]+[0-9]+" GTSAM_EIGEN_VERSION_MAJOR "${STR_EIGEN_VERSION}")
-    string(REGEX MATCH "[0-9]+" GTSAM_EIGEN_VERSION_MAJOR "${GTSAM_EIGEN_VERSION_MAJOR}")
-
-    string(REGEX MATCH "EIGEN_MINOR_VERSION[ ]+[0-9]+" GTSAM_EIGEN_VERSION_MINOR "${STR_EIGEN_VERSION}")
-    string(REGEX MATCH "[0-9]+" GTSAM_EIGEN_VERSION_MINOR "${GTSAM_EIGEN_VERSION_MINOR}")
-
-    set(GTSAM_EIGEN_VERSION "${GTSAM_EIGEN_VERSION_WORLD}.${GTSAM_EIGEN_VERSION_MAJOR}.${GTSAM_EIGEN_VERSION_MINOR}")
-
-    message(STATUS "Found Eigen version: ${GTSAM_EIGEN_VERSION}")
-else()
-    message(WARNING "Cannot determine Eigen version, missing file: `${EIGEN_VER_H}`")
-endif ()
-
-if (MSVC)
-    if (BUILD_SHARED_LIBS)
-        # mute eigen static assert to avoid errors in shared lib
-        list_append_cache(GTSAM_COMPILE_DEFINITIONS_PUBLIC EIGEN_NO_STATIC_ASSERT)
-    endif()
-    list_append_cache(GTSAM_COMPILE_OPTIONS_PRIVATE "/wd4244") # Disable loss of precision which is thrown all over our Eigen
-endif()
-
-if (APPLE AND BUILD_SHARED_LIBS)
-    # Set the default install directory on macOS
-    set(CMAKE_INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
-endif()
-
-###############################################################################
-# Global compile options
-
-# Build list of possible allocators
-set(possible_allocators "")
-if(GTSAM_USE_TBB)
-    list(APPEND possible_allocators TBB)
-    set(preferred_allocator TBB)
-else()
-    list(APPEND possible_allocators BoostPool STL)
-    set(preferred_allocator STL)
-endif()
-if(GOOGLE_PERFTOOLS_FOUND)
-    list(APPEND possible_allocators tcmalloc)
-endif()
+include(cmake/HandleBoost.cmake)            # Boost
+include(cmake/HandleCCache.cmake)           # ccache
+include(cmake/HandleCPack.cmake)            # CPack
+include(cmake/HandleEigen.cmake)            # Eigen3
+include(cmake/HandleGeneralOptions.cmake)  # CMake build options
+include(cmake/HandleMKL.cmake)              # MKL
+include(cmake/HandleOpenMP.cmake)           # OpenMP
+include(cmake/HandlePerfTools.cmake)        # Google perftools
+include(cmake/HandlePython.cmake)           # Python options and commands
+include(cmake/HandleTBB.cmake)              # TBB
+include(cmake/HandleUninstall.cmake)        # for "make uninstall"
 
-# Check if current allocator choice is valid and set cache option
-list(FIND possible_allocators "${GTSAM_DEFAULT_ALLOCATOR}" allocator_valid)
-if(allocator_valid EQUAL -1)
-    set(GTSAM_DEFAULT_ALLOCATOR ${preferred_allocator} CACHE STRING "Default allocator" FORCE)
-else()
-    set(GTSAM_DEFAULT_ALLOCATOR ${preferred_allocator} CACHE STRING "Default allocator")
-endif()
-set_property(CACHE GTSAM_DEFAULT_ALLOCATOR PROPERTY STRINGS ${possible_allocators})
-mark_as_advanced(GTSAM_DEFAULT_ALLOCATOR)
-
-# Define compile flags depending on allocator
-if("${GTSAM_DEFAULT_ALLOCATOR}" STREQUAL "BoostPool")
-    set(GTSAM_ALLOCATOR_BOOSTPOOL 1)
-elseif("${GTSAM_DEFAULT_ALLOCATOR}" STREQUAL "STL")
-    set(GTSAM_ALLOCATOR_STL 1)
-elseif("${GTSAM_DEFAULT_ALLOCATOR}" STREQUAL "TBB")
-    set(GTSAM_ALLOCATOR_TBB 1)
-elseif("${GTSAM_DEFAULT_ALLOCATOR}" STREQUAL "tcmalloc")
-    set(GTSAM_ALLOCATOR_STL 1) # tcmalloc replaces malloc, so to use it we use the STL allocator
-    list(APPEND GTSAM_ADDITIONAL_LIBRARIES "tcmalloc")
-endif()
-
-if(MSVC)
-    list_append_cache(GTSAM_COMPILE_DEFINITIONS_PRIVATE _CRT_SECURE_NO_WARNINGS _SCL_SECURE_NO_WARNINGS)
-    list_append_cache(GTSAM_COMPILE_OPTIONS_PRIVATE /wd4251 /wd4275 /wd4251 /wd4661 /wd4344 /wd4503) # Disable non-DLL-exported base class and other warnings
-    list_append_cache(GTSAM_COMPILE_OPTIONS_PRIVATE /bigobj) # Allow large object files for template-based code
-endif()
-
-# GCC 4.8+ complains about local typedefs which we use for shared_ptr etc.
-if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
-  if (NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.8)
-    list_append_cache(GTSAM_COMPILE_OPTIONS_PRIVATE -Wno-unused-local-typedefs)
-  endif()
-endif()
+include(cmake/HandleAllocators.cmake)       # Must be after tbb, pertools
 
-# As of XCode 7, clang also complains about this
-if(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
-  if (NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 7.0)
-    list_append_cache(GTSAM_COMPILE_OPTIONS_PRIVATE -Wno-unused-local-typedefs)
-  endif()
-endif()
-
-if(GTSAM_ENABLE_CONSISTENCY_CHECKS)
-  # This should be made PUBLIC if GTSAM_EXTRA_CONSISTENCY_CHECKS is someday used in a public .h
-  list_append_cache(GTSAM_COMPILE_DEFINITIONS_PRIVATE GTSAM_EXTRA_CONSISTENCY_CHECKS)
-endif()
+include(cmake/HandleGlobalBuildFlags.cmake) # Build flags
 
 ###############################################################################
 # Add components
@@ -424,12 +60,6 @@ endif()
 # Build CppUnitLite
 add_subdirectory(CppUnitLite)
 
-# This is the new wrapper
-if(GTSAM_BUILD_PYTHON)
-    list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/wrap/cmake")
-    add_subdirectory(python)
-endif()
-
 # Build GTSAM library
 add_subdirectory(gtsam)
 
@@ -447,8 +77,24 @@ if (GTSAM_BUILD_UNSTABLE)
     add_subdirectory(gtsam_unstable)
 endif()
 
+# This is the new wrapper
+if(GTSAM_BUILD_PYTHON OR GTSAM_INSTALL_MATLAB_TOOLBOX)
+    # Need to set this for the wrap package so we don't use the default value.
+    set(WRAP_PYTHON_VERSION ${GTSAM_PYTHON_VERSION}
+        CACHE STRING "The Python version to use for wrapping")
+    # Set the include directory for matlab.h
+    set(GTWRAP_INCLUDE_NAME "wrap")
+    add_subdirectory(wrap)
+    list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/wrap/cmake")
+endif()
+
+# Python toolbox
+if(GTSAM_BUILD_PYTHON)
+    add_subdirectory(python)
+endif()
+
 # Matlab toolbox
-if (GTSAM_INSTALL_MATLAB_TOOLBOX)
+if(GTSAM_INSTALL_MATLAB_TOOLBOX)
     add_subdirectory(matlab)
 endif()
 
@@ -456,7 +102,6 @@ endif()
 GtsamMakeConfigFile(GTSAM "${CMAKE_CURRENT_SOURCE_DIR}/gtsam_extra.cmake.in")
 export(TARGETS ${GTSAM_EXPORTED_TARGETS} FILE GTSAM-exports.cmake)
 
-
 # Check for doxygen availability - optional dependency
 find_package(Doxygen)
 
@@ -468,146 +113,11 @@ endif()
 # CMake Tools
 add_subdirectory(cmake)
 
-
-###############################################################################
-# Set up CPack
-set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "GTSAM")
-set(CPACK_PACKAGE_VENDOR "Frank Dellaert, Georgia Institute of Technology")
-set(CPACK_PACKAGE_CONTACT "Frank Dellaert, dellaert@cc.gatech.edu")
-set(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/README.md")
-set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE")
-set(CPACK_PACKAGE_VERSION_MAJOR ${GTSAM_VERSION_MAJOR})
-set(CPACK_PACKAGE_VERSION_MINOR ${GTSAM_VERSION_MINOR})
-set(CPACK_PACKAGE_VERSION_PATCH ${GTSAM_VERSION_PATCH})
-set(CPACK_PACKAGE_INSTALL_DIRECTORY "CMake ${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")
-#set(CPACK_INSTALLED_DIRECTORIES "doc;.") # Include doc directory
-#set(CPACK_INSTALLED_DIRECTORIES ".") # FIXME: throws error
-set(CPACK_SOURCE_IGNORE_FILES "/build*;/\\\\.;/makestats.sh$")
-set(CPACK_SOURCE_IGNORE_FILES "${CPACK_SOURCE_IGNORE_FILES}" "/gtsam_unstable/")
-set(CPACK_SOURCE_IGNORE_FILES "${CPACK_SOURCE_IGNORE_FILES}" "/package_scripts/")
-set(CPACK_SOURCE_PACKAGE_FILE_NAME "gtsam-${GTSAM_VERSION_MAJOR}.${GTSAM_VERSION_MINOR}.${GTSAM_VERSION_PATCH}")
-#set(CPACK_SOURCE_PACKAGE_FILE_NAME "gtsam-aspn${GTSAM_VERSION_PATCH}") # Used for creating ASPN tarballs
-
-# Deb-package specific cpack
-set(CPACK_DEBIAN_PACKAGE_NAME "libgtsam-dev")
-set(CPACK_DEBIAN_PACKAGE_DEPENDS "libboost-dev (>= 1.43)") #Example: "libc6 (>= 2.3.1-6), libgcc1 (>= 1:3.4.2-12)")
-
-
-###############################################################################
 # Print configuration variables
-message(STATUS "===============================================================")
-message(STATUS "================  Configuration Options  ======================")
-print_config("CMAKE_CXX_COMPILER_ID type" "${CMAKE_CXX_COMPILER_ID}")
-print_config("CMAKE_CXX_COMPILER_VERSION" "${CMAKE_CXX_COMPILER_VERSION}")
-print_config("CMake version"    "${CMAKE_VERSION}")
-print_config("CMake generator"  "${CMAKE_GENERATOR}")
-print_config("CMake build tool" "${CMAKE_BUILD_TOOL}")
-message(STATUS "Build flags                                               ")
-print_enabled_config(${GTSAM_BUILD_TESTS}                 "Build Tests")
-print_enabled_config(${GTSAM_BUILD_EXAMPLES_ALWAYS}       "Build examples with 'make all'")
-print_enabled_config(${GTSAM_BUILD_TIMING_ALWAYS}         "Build timing scripts with 'make all'")
-if (DOXYGEN_FOUND)
-    print_enabled_config(${GTSAM_BUILD_DOCS}              "Build Docs")
-endif()
-print_enabled_config(${BUILD_SHARED_LIBS}                 "Build shared GTSAM libraries")
-print_enabled_config(${GTSAM_BUILD_TYPE_POSTFIXES}        "Put build type in library name")
-if(GTSAM_UNSTABLE_AVAILABLE)
-    print_enabled_config(${GTSAM_BUILD_UNSTABLE}          "Build libgtsam_unstable        ")
-    print_enabled_config(${GTSAM_UNSTABLE_BUILD_PYTHON}   "Build GTSAM unstable Python    ")
-    print_enabled_config(${GTSAM_UNSTABLE_INSTALL_MATLAB_TOOLBOX} "Build MATLAB Toolbox for unstable")
-endif()
-
-if(NOT MSVC AND NOT XCODE_VERSION)
-    print_enabled_config(${GTSAM_BUILD_WITH_MARCH_NATIVE}     "Build for native architecture  ")
-    print_config("Build type" "${CMAKE_BUILD_TYPE}")
-    print_config("C compilation flags" "${CMAKE_C_FLAGS} ${CMAKE_C_FLAGS_${CMAKE_BUILD_TYPE_UPPER}}")
-    print_config("C++ compilation flags" "${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE_UPPER}}")
-endif()
-
-print_build_options_for_target(gtsam)
-
-print_config("Use System Eigen" "${GTSAM_USE_SYSTEM_EIGEN} (Using version: ${GTSAM_EIGEN_VERSION})")
-
-if(GTSAM_USE_TBB)
-    print_config("Use Intel TBB" "Yes")
-elseif(TBB_FOUND)
-    print_config("Use Intel TBB" "TBB found but GTSAM_WITH_TBB is disabled")
-else()
-    print_config("Use Intel TBB" "TBB not found")
-endif()
-if(GTSAM_USE_EIGEN_MKL)
-    print_config("Eigen will use MKL" "Yes")
-elseif(MKL_FOUND)
-    print_config("Eigen will use MKL" "MKL found but GTSAM_WITH_EIGEN_MKL is disabled")
-else()
-    print_config("Eigen will use MKL" "MKL not found")
-endif()
-if(GTSAM_USE_EIGEN_MKL_OPENMP)
-    print_config("Eigen will use MKL and OpenMP" "Yes")
-elseif(OPENMP_FOUND AND NOT GTSAM_WITH_EIGEN_MKL)
-    print_config("Eigen will use MKL and OpenMP" "OpenMP found but GTSAM_WITH_EIGEN_MKL is disabled")
-elseif(OPENMP_FOUND AND NOT MKL_FOUND)
-    print_config("Eigen will use MKL and OpenMP" "OpenMP found but MKL not found")
-elseif(OPENMP_FOUND)
-    print_config("Eigen will use MKL and OpenMP" "OpenMP found but GTSAM_WITH_EIGEN_MKL_OPENMP is disabled")
-else()
-    print_config("Eigen will use MKL and OpenMP" "OpenMP not found")
-endif()
-print_config("Default allocator" "${GTSAM_DEFAULT_ALLOCATOR}")
-
-if(GTSAM_THROW_CHEIRALITY_EXCEPTION)
-    print_config("Cheirality exceptions enabled" "YES")
-else()
-    print_config("Cheirality exceptions enabled" "NO")
-endif()
-
-if(NOT MSVC AND NOT XCODE_VERSION)
-    if(CCACHE_FOUND AND GTSAM_BUILD_WITH_CCACHE)
-        print_config("Build with ccache" "Yes")
-    elseif(CCACHE_FOUND)
-        print_config("Build with ccache" "ccache found but GTSAM_BUILD_WITH_CCACHE is disabled")
-    else()
-        print_config("Build with ccache" "No")
-    endif()
-endif()
-
-message(STATUS "Packaging flags")
-print_config("CPack Source Generator" "${CPACK_SOURCE_GENERATOR}")
-print_config("CPack Generator" "${CPACK_GENERATOR}")
-
-message(STATUS "GTSAM flags                                               ")
-print_enabled_config(${GTSAM_USE_QUATERNIONS}             "Quaternions as default Rot3     ")
-print_enabled_config(${GTSAM_ENABLE_CONSISTENCY_CHECKS}   "Runtime consistency checking    ")
-print_enabled_config(${GTSAM_ROT3_EXPMAP}                 "Rot3 retract is full ExpMap     ")
-print_enabled_config(${GTSAM_POSE3_EXPMAP}                "Pose3 retract is full ExpMap    ")
-print_enabled_config(${GTSAM_ALLOW_DEPRECATED_SINCE_V41}  "Allow features deprecated in GTSAM 4.1")
-print_enabled_config(${GTSAM_SUPPORT_NESTED_DISSECTION}   "Metis-based Nested Dissection   ")
-print_enabled_config(${GTSAM_TANGENT_PREINTEGRATION}      "Use tangent-space preintegration")
-
-message(STATUS "MATLAB toolbox flags")
-print_enabled_config(${GTSAM_INSTALL_MATLAB_TOOLBOX}      "Install MATLAB toolbox          ")
-if (${GTSAM_INSTALL_MATLAB_TOOLBOX})
-    print_config("MATLAB root" "${MATLAB_ROOT}")
-    print_config("MEX binary" "${MEX_COMMAND}")
-endif()
-message(STATUS "Python toolbox flags                                      ")
-print_enabled_config(${GTSAM_BUILD_PYTHON}                "Build Python module with pybind ")
-if(GTSAM_BUILD_PYTHON)
-    print_config("Python version" ${GTSAM_PYTHON_VERSION})
-endif()
-
-message(STATUS "===============================================================")
+include(cmake/HandlePrintConfiguration.cmake)
 
 # Print warnings at the end
-if(GTSAM_WITH_TBB AND NOT TBB_FOUND)
-    message(WARNING "TBB 4.4 or newer was not found - this is ok, but note that GTSAM parallelization will be disabled.  Set GTSAM_WITH_TBB to 'Off' to avoid this warning.")
-endif()
-if(GTSAM_WITH_EIGEN_MKL AND NOT MKL_FOUND)
-    message(WARNING "MKL was not found - this is ok, but note that MKL will be disabled.  Set GTSAM_WITH_EIGEN_MKL to 'Off' to disable this warning.  See INSTALL.md for notes on performance.")
-endif()
-if(GTSAM_WITH_EIGEN_MKL_OPENMP AND NOT OPENMP_FOUND AND MKL_FOUND)
-    message(WARNING "Your compiler does not support OpenMP.  Set GTSAM_WITH_EIGEN_MKL_OPENMP to 'Off' to avoid this warning. See INSTALL.md for notes on performance.")
-endif()
+include(cmake/HandleFinalChecks.cmake)
 
 # Include CPack *after* all flags
 include(CPack)
--- gtsam-4.1.0.orig/INSTALL.md
+++ gtsam-4.1.0/INSTALL.md
@@ -13,7 +13,7 @@ $ make install
 ## Important Installation Notes
 
 1. GTSAM requires the following libraries to be installed on your system:
-    - BOOST version 1.43 or greater (install through Linux repositories or MacPorts)
+    - BOOST version 1.58 or greater (install through Linux repositories or MacPorts)
     - Cmake version 3.0 or higher
     - Support for XCode 4.3 command line tools on Mac requires CMake 2.8.8 or higher
 
@@ -41,11 +41,6 @@ $ make install
     - MacOS 10.6 - 10.14
     - Windows 7, 8, 8.1, 10
 
-    Known issues:
-
-    - MSVC 2013 is not yet supported because it cannot build the serialization module
-      of Boost 1.55 (or earlier).
-
 2. GTSAM makes extensive use of debug assertions, and we highly recommend you work
 in Debug mode while developing (enabled by default). Likewise, it is imperative
 that you switch to release mode when running finished code and for timing. GTSAM
@@ -70,7 +65,41 @@ execute commands as follows for an out-o
   This will build the library and unit tests, run all of the unit tests,
   and then install the library itself.
 
-## CMake Configuration Options and Details
+## Known Issues
+
+- When using `GTSAM_BUILD_WITH_MARCH_NATIVE=ON`, you may encounter issues in running tests which we are still investigating:
+  - Use of a version of GCC < 7.5 results in an "Indeterminant Linear System" error for `testSmartProjectionFactor`.
+  - Use of Boost version < 1.67 with clang will give a segfault for mulitple test cases.
+- MSVC 2013 is not yet supported because it cannot build the serialization module of Boost 1.55 (or earlier).
+
+# Windows Installation
+
+This section details how to build a GTSAM `.sln` file using Visual Studio.
+
+### Prerequisites
+
+- Visual Studio with C++ CMake tools for Windows
+- All the other pre-requisites listed above.
+
+### Steps
+
+1. Open Visual Studio.
+2. Select `Open a local folder` and select the GTSAM source directory.
+3. Go to `Project -> CMake Settings`.
+  - (Optional) Set `Configuration name`.
+  - (Optional) Set `Configuration type`.
+  - Set the `Toolset` to `msvc_x64_x64`. If you know what toolset you require, then skip this step.
+  - Update the `Build root` to `${projectDir}\build\${name}`.
+  - You can optionally create a new configuration for a `Release` build.
+  - Set the necessary CMake variables for your use case.
+  - Click on `Show advanced settings`.
+  - For `CMake generator`, select a version which matches `Visual Studio <Version> <Year> Win64`, e.g. `Visual Studio 16 2019 Win64`.
+  - Save the settings (Ctrl + S).
+4. Click on `Project -> Generate Cache`. This will generate the CMake build files (as seen in the Output window).
+5. The last step will generate a `GTSAM.sln` file in the `build` directory. At this point, GTSAM can be used as a regular Visual Studio project.
+
+
+# CMake Configuration Options and Details
 
 GTSAM has a number of options that can be configured, which is best done with
 one of the following:
@@ -78,7 +107,7 @@ one of the following:
   - ccmake      the curses GUI for cmake
   - cmake-gui   a real GUI for cmake
 
-### Important Options:
+## Important Options:
 
 #### CMAKE_BUILD_TYPE
 We support several build configurations for GTSAM (case insensitive)
@@ -173,7 +202,7 @@ NOTE:  If _GLIBCXX_DEBUG is used to comp
 Intel has a guide for installing MKL on Linux through APT repositories at <https://software.intel.com/en-us/articles/installing-intel-free-libs-and-python-apt-repo>.
 
 After following the instructions, add the following to your `~/.bashrc` (and afterwards, open a new terminal before compiling GTSAM):
-`LD_PRELOAD` need only be set if you are building the cython wrapper to use GTSAM from python.
+`LD_PRELOAD` need only be set if you are building the python wrapper to use GTSAM from python.
 ```sh
 source /opt/intel/mkl/bin/mklvars.sh intel64
 export LD_PRELOAD="$LD_PRELOAD:/opt/intel/mkl/lib/intel64/libmkl_core.so:/opt/intel/mkl/lib/intel64/libmkl_sequential.so"
@@ -190,6 +219,6 @@ Failing to specify `LD_PRELOAD` may lead
 `ImportError: /opt/intel/mkl/lib/intel64/libmkl_vml_avx2.so: undefined symbol: mkl_serv_getenv`
 or
 `Intel MKL FATAL ERROR: Cannot load libmkl_avx2.so or libmkl_def.so.`
-when importing GTSAM using the cython wrapper in python.
+when importing GTSAM using the python wrapper.
 
 
--- gtsam-4.1.0.orig/README.md
+++ gtsam-4.1.0/README.md
@@ -40,7 +40,7 @@ $ make install
 
 Prerequisites:
 
-- [Boost](http://www.boost.org/users/download/) >= 1.43 (Ubuntu: `sudo apt-get install libboost-all-dev`)
+- [Boost](http://www.boost.org/users/download/) >= 1.58 (Ubuntu: `sudo apt-get install libboost-all-dev`)
 - [CMake](http://www.cmake.org/cmake/resources/software.html) >= 3.0 (Ubuntu: `sudo apt-get install cmake`)
 - A modern compiler, i.e., at least gcc 4.7.3 on Linux.
 
@@ -62,7 +62,7 @@ GTSAM 4.1 added a new pybind wrapper, an
 
 ## Wrappers
 
-We provide support for [MATLAB](matlab/README.md) and [Python](cython/README.md) wrappers for GTSAM. Please refer to the linked documents for more details.
+We provide support for [MATLAB](matlab/README.md) and [Python](python/README.md) wrappers for GTSAM. Please refer to the linked documents for more details.
 
 ## The Preintegrated IMU Factor
 
--- gtsam-4.1.0.orig/cmake/CMakeLists.txt
+++ gtsam-4.1.0/cmake/CMakeLists.txt
@@ -16,12 +16,8 @@ install(FILES
   dllexport.h.in
   GtsamBuildTypes.cmake
   GtsamMakeConfigFile.cmake
-  GtsamMatlabWrap.cmake
   GtsamTesting.cmake
   GtsamPrinting.cmake
-  FindCython.cmake
   FindNumPy.cmake
   README.html
   DESTINATION "${SCRIPT_INSTALL_DIR}/GTSAMCMakeTools")
-
-
--- gtsam-4.1.0.orig/cmake/Config.cmake.in
+++ gtsam-4.1.0/cmake/Config.cmake.in
@@ -6,7 +6,7 @@
 get_filename_component(OUR_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
 if(EXISTS "${OUR_CMAKE_DIR}/CMakeCache.txt")
   # In build tree
-  set(@PACKAGE_NAME@_INCLUDE_DIR @CMAKE_SOURCE_DIR@ CACHE PATH "@PACKAGE_NAME@ include directory")
+  set(@PACKAGE_NAME@_INCLUDE_DIR @GTSAM_SOURCE_DIR@ CACHE PATH "@PACKAGE_NAME@ include directory")
 else()
   # Find installed library
   set(@PACKAGE_NAME@_INCLUDE_DIR "${OUR_CMAKE_DIR}/@CONF_REL_INCLUDE_DIR@" CACHE PATH "@PACKAGE_NAME@ include directory")
@@ -15,7 +15,7 @@ endif()
 # Find dependencies, required by cmake exported targets:
 include(CMakeFindDependencyMacro)
 # Allow using cmake < 3.8
-if(${CMAKE_VERSION} VERSION_LESS "3.8.0") 
+if(${CMAKE_VERSION} VERSION_LESS "3.8.0")
 find_package(Boost @BOOST_FIND_MINIMUM_VERSION@ COMPONENTS @BOOST_FIND_MINIMUM_COMPONENTS@)
 else()
 find_dependency(Boost @BOOST_FIND_MINIMUM_VERSION@ COMPONENTS @BOOST_FIND_MINIMUM_COMPONENTS@)
--- gtsam-4.1.0.orig/cmake/FindNumPy.cmake
+++ gtsam-4.1.0/cmake/FindNumPy.cmake
@@ -40,17 +40,9 @@
 
 # Finding NumPy involves calling the Python interpreter
 if(NumPy_FIND_REQUIRED)
-  if(GTSAM_PYTHON_VERSION STREQUAL "Default")
-    find_package(PythonInterp REQUIRED)
-  else()
-      find_package(PythonInterp ${GTSAM_PYTHON_VERSION} EXACT REQUIRED)
-  endif()
+  find_package(PythonInterp ${GTSAM_PYTHON_VERSION} EXACT REQUIRED)
 else()
-  if(GTSAM_PYTHON_VERSION STREQUAL "Default")
-    find_package(PythonInterp)
-  else()
-    find_package(PythonInterp ${GTSAM_PYTHON_VERSION} EXACT)
-  endif()
+  find_package(PythonInterp ${GTSAM_PYTHON_VERSION} EXACT)
 endif()
 
 if(NOT PYTHONINTERP_FOUND)
--- gtsam-4.1.0.orig/cmake/FindTBB.cmake
+++ gtsam-4.1.0/cmake/FindTBB.cmake
@@ -99,11 +99,8 @@ if(NOT TBB_FOUND)
   ##################################
 
   if(NOT DEFINED TBB_USE_DEBUG_BUILD)
-    if(CMAKE_BUILD_TYPE MATCHES "(Debug|DEBUG|debug|RelWithDebInfo|RELWITHDEBINFO|relwithdebinfo)")
-      set(TBB_BUILD_TYPE DEBUG)
-    else()
-      set(TBB_BUILD_TYPE RELEASE)
-    endif()
+    # Set build type to RELEASE by default for optimization.
+    set(TBB_BUILD_TYPE RELEASE)
   elseif(TBB_USE_DEBUG_BUILD)
     set(TBB_BUILD_TYPE DEBUG)
   else()
--- gtsam-4.1.0.orig/cmake/GtsamBuildTypes.cmake
+++ gtsam-4.1.0/cmake/GtsamBuildTypes.cmake
@@ -1,3 +1,5 @@
+include(CheckCXXCompilerFlag) # for check_cxx_compiler_flag()
+
 # Set cmake policy to recognize the AppleClang compiler
 # independently from the Clang compiler.
 if(POLICY CMP0025)
@@ -57,10 +59,10 @@ endif()
 option(GTSAM_BUILD_TYPE_POSTFIXES        "Enable/Disable appending the build type to the name of compiled libraries" ON)
 
 # Define all cache variables, to be populated below depending on the OS/compiler:
-set(GTSAM_COMPILE_OPTIONS_PRIVATE        "" CACHE STRING "(Do not edit) Private compiler flags for all build configurations." FORCE)
-set(GTSAM_COMPILE_OPTIONS_PUBLIC         "" CACHE STRING "(Do not edit) Public compiler flags (exported to user projects) for all build configurations."  FORCE)
-set(GTSAM_COMPILE_DEFINITIONS_PRIVATE    "" CACHE STRING "(Do not edit) Private preprocessor macros for all build configurations." FORCE)
-set(GTSAM_COMPILE_DEFINITIONS_PUBLIC     "" CACHE STRING "(Do not edit) Public preprocessor macros for all build configurations." FORCE)
+set(GTSAM_COMPILE_OPTIONS_PRIVATE        "" CACHE INTERNAL "(Do not edit) Private compiler flags for all build configurations." FORCE)
+set(GTSAM_COMPILE_OPTIONS_PUBLIC         "" CACHE INTERNAL "(Do not edit) Public compiler flags (exported to user projects) for all build configurations."  FORCE)
+set(GTSAM_COMPILE_DEFINITIONS_PRIVATE    "" CACHE INTERNAL "(Do not edit) Private preprocessor macros for all build configurations." FORCE)
+set(GTSAM_COMPILE_DEFINITIONS_PUBLIC     "" CACHE INTERNAL "(Do not edit) Public preprocessor macros for all build configurations." FORCE)
 mark_as_advanced(GTSAM_COMPILE_OPTIONS_PRIVATE)
 mark_as_advanced(GTSAM_COMPILE_OPTIONS_PUBLIC)
 mark_as_advanced(GTSAM_COMPILE_DEFINITIONS_PRIVATE)
@@ -69,7 +71,7 @@ mark_as_advanced(GTSAM_COMPILE_DEFINITIO
 foreach(build_type ${GTSAM_CMAKE_CONFIGURATION_TYPES})
   string(TOUPPER "${build_type}" build_type_toupper)
 
-  # Define empty cache variables for "public". "private" are creaed below.
+  # Define empty cache variables for "public". "private" are created below.
   set(GTSAM_COMPILE_OPTIONS_PUBLIC_${build_type_toupper}      "" CACHE STRING "(User editable) Public compiler flags (exported to user projects) for `${build_type_toupper}` configuration.")
   set(GTSAM_COMPILE_DEFINITIONS_PUBLIC_${build_type_toupper}  "" CACHE STRING "(User editable) Public preprocessor macros for `${build_type_toupper}` configuration.")
 endforeach()
@@ -105,11 +107,14 @@ if(MSVC)
 else()
   # Common to all configurations, next for each configuration:
 
-  if (
-      ((CMAKE_CXX_COMPILER_ID MATCHES "Clang") AND (NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 12.0.0)) OR
-      (CMAKE_CXX_COMPILER_ID MATCHES "GNU")
-     )
-    set(flag_override_ -Wsuggest-override) # -Werror=suggest-override: Add again someday
+  if (NOT MSVC)
+    check_cxx_compiler_flag(-Wsuggest-override COMPILER_HAS_WSUGGEST_OVERRIDE)
+    check_cxx_compiler_flag(-Wmissing COMPILER_HAS_WMISSING_OVERRIDE)
+    if (COMPILER_HAS_WSUGGEST_OVERRIDE)
+      set(flag_override_ -Wsuggest-override) # -Werror=suggest-override: Add again someday
+    elseif(COMPILER_HAS_WMISSING_OVERRIDE)
+      set(flag_override_ -Wmissing-override) # -Werror=missing-override: Add again someday
+    endif()
   endif()
 
   set(GTSAM_COMPILE_OPTIONS_PRIVATE_COMMON
@@ -199,9 +204,9 @@ endif()
 
 # Make common binary output directory when on Windows
 if(WIN32)
-  set(RUNTIME_OUTPUT_PATH "${CMAKE_BINARY_DIR}/bin")
-  set(EXECUTABLE_OUTPUT_PATH "${CMAKE_BINARY_DIR}/bin")
-  set(LIBRARY_OUTPUT_PATH "${CMAKE_BINARY_DIR}/lib")
+  set(RUNTIME_OUTPUT_PATH "${GTSAM_BINARY_DIR}/bin")
+  set(EXECUTABLE_OUTPUT_PATH "${GTSAM_BINARY_DIR}/bin")
+  set(LIBRARY_OUTPUT_PATH "${GTSAM_BINARY_DIR}/lib")
 endif()
 
 # Set up build type list for cmake-gui
@@ -263,3 +268,17 @@ function(gtsam_apply_build_flags target_
   target_compile_options(${target_name_} PRIVATE ${GTSAM_COMPILE_OPTIONS_PRIVATE})
 
 endfunction(gtsam_apply_build_flags)
+
+
+if(NOT MSVC AND NOT XCODE_VERSION)
+  # Set the build type to upper case for downstream use
+  string(TOUPPER "${CMAKE_BUILD_TYPE}" CMAKE_BUILD_TYPE_UPPER)
+
+  # Set the GTSAM_BUILD_TAG variable.
+  # If build type is Release, set to blank (""), else set to the build type.
+  if(${CMAKE_BUILD_TYPE_UPPER} STREQUAL "RELEASE")
+   set(GTSAM_BUILD_TAG "") # Don't create release mode tag on installed directory
+  else()
+   set(GTSAM_BUILD_TAG "${CMAKE_BUILD_TYPE}")
+  endif()
+endif()
--- gtsam-4.1.0.orig/cmake/GtsamPrinting.cmake
+++ gtsam-4.1.0/cmake/GtsamPrinting.cmake
@@ -46,16 +46,16 @@ endfunction()
 # Prints all the relevant CMake build options for a given target:
 function(print_build_options_for_target target_name_)
   print_padded(GTSAM_COMPILE_FEATURES_PUBLIC)
-  print_padded(GTSAM_COMPILE_OPTIONS_PRIVATE)
+  # print_padded(GTSAM_COMPILE_OPTIONS_PRIVATE)
   print_padded(GTSAM_COMPILE_OPTIONS_PUBLIC)
-  print_padded(GTSAM_COMPILE_DEFINITIONS_PRIVATE)
+  # print_padded(GTSAM_COMPILE_DEFINITIONS_PRIVATE)
   print_padded(GTSAM_COMPILE_DEFINITIONS_PUBLIC)
 
   foreach(build_type ${GTSAM_CMAKE_CONFIGURATION_TYPES})
     string(TOUPPER "${build_type}" build_type_toupper)
-    print_padded(GTSAM_COMPILE_OPTIONS_PRIVATE_${build_type_toupper})
+    # print_padded(GTSAM_COMPILE_OPTIONS_PRIVATE_${build_type_toupper})
     print_padded(GTSAM_COMPILE_OPTIONS_PUBLIC_${build_type_toupper})
-    print_padded(GTSAM_COMPILE_DEFINITIONS_PRIVATE_${build_type_toupper})
+    # print_padded(GTSAM_COMPILE_DEFINITIONS_PRIVATE_${build_type_toupper})
     print_padded(GTSAM_COMPILE_DEFINITIONS_PUBLIC_${build_type_toupper})
   endforeach()
 endfunction()
--- gtsam-4.1.0.orig/cmake/GtsamTesting.cmake
+++ gtsam-4.1.0/cmake/GtsamTesting.cmake
@@ -88,36 +88,36 @@ enable_testing()
 
 option(GTSAM_BUILD_TESTS                 "Enable/Disable building of tests"          ON)
 option(GTSAM_BUILD_EXAMPLES_ALWAYS       "Build examples with 'make all' (build with 'make examples' if not)"       ON)
-	option(GTSAM_BUILD_TIMING_ALWAYS         "Build timing scripts with 'make all' (build with 'make timing' if not"    OFF)
+option(GTSAM_BUILD_TIMING_ALWAYS         "Build timing scripts with 'make all' (build with 'make timing' if not"    OFF)
 
-		# Add option for combining unit tests
-		if(MSVC OR XCODE_VERSION)
-			option(GTSAM_SINGLE_TEST_EXE "Combine unit tests into single executable (faster compile)" ON)
-		else()
-			option(GTSAM_SINGLE_TEST_EXE "Combine unit tests into single executable (faster compile)" OFF)
-		endif()
-		mark_as_advanced(GTSAM_SINGLE_TEST_EXE)
-
-		# Enable make check (http://www.cmake.org/Wiki/CMakeEmulateMakeCheck)
-		if(GTSAM_BUILD_TESTS)
-			add_custom_target(check COMMAND ${CMAKE_CTEST_COMMAND} -C $<CONFIGURATION> --output-on-failure)
-			# Also add alternative checks using valgrind.
-			# We don't look for valgrind being installed in the system, since these
-			# targets are not invoked unless directly instructed by the user.
-			if (UNIX)
-				# Run all tests using valgrind:
-				add_custom_target(check_valgrind)
-			endif()
-
-			# Add target to build tests without running
-			add_custom_target(all.tests)
-		endif()
+# Add option for combining unit tests
+if(MSVC OR XCODE_VERSION)
+	option(GTSAM_SINGLE_TEST_EXE "Combine unit tests into single executable (faster compile)" ON)
+else()
+	option(GTSAM_SINGLE_TEST_EXE "Combine unit tests into single executable (faster compile)" OFF)
+endif()
+mark_as_advanced(GTSAM_SINGLE_TEST_EXE)
+
+# Enable make check (http://www.cmake.org/Wiki/CMakeEmulateMakeCheck)
+if(GTSAM_BUILD_TESTS)
+	add_custom_target(check COMMAND ${CMAKE_CTEST_COMMAND} -C $<CONFIGURATION> --output-on-failure)
+	# Also add alternative checks using valgrind.
+	# We don't look for valgrind being installed in the system, since these
+	# targets are not invoked unless directly instructed by the user.
+	if (UNIX)
+		# Run all tests using valgrind:
+		add_custom_target(check_valgrind)
+	endif()
+
+	# Add target to build tests without running
+	add_custom_target(all.tests)
+endif()
 
-		# Add examples target
-		add_custom_target(examples)
+# Add examples target
+add_custom_target(examples)
 
-		# Add timing target
-		add_custom_target(timing)
+# Add timing target
+add_custom_target(timing)
 
 
 # Implementations of this file's macros:
--- /dev/null
+++ gtsam-4.1.0/cmake/HandleAllocators.cmake
@@ -0,0 +1,34 @@
+# Build list of possible allocators
+set(possible_allocators "")
+if(GTSAM_USE_TBB)
+    list(APPEND possible_allocators TBB)
+    set(preferred_allocator TBB)
+else()
+    list(APPEND possible_allocators BoostPool STL)
+    set(preferred_allocator STL)
+endif()
+if(GOOGLE_PERFTOOLS_FOUND)
+    list(APPEND possible_allocators tcmalloc)
+endif()
+
+# Check if current allocator choice is valid and set cache option
+list(FIND possible_allocators "${GTSAM_DEFAULT_ALLOCATOR}" allocator_valid)
+if(allocator_valid EQUAL -1)
+    set(GTSAM_DEFAULT_ALLOCATOR ${preferred_allocator} CACHE STRING "Default allocator" FORCE)
+else()
+    set(GTSAM_DEFAULT_ALLOCATOR ${preferred_allocator} CACHE STRING "Default allocator")
+endif()
+set_property(CACHE GTSAM_DEFAULT_ALLOCATOR PROPERTY STRINGS ${possible_allocators})
+mark_as_advanced(GTSAM_DEFAULT_ALLOCATOR)
+
+# Define compile flags depending on allocator
+if("${GTSAM_DEFAULT_ALLOCATOR}" STREQUAL "BoostPool")
+    set(GTSAM_ALLOCATOR_BOOSTPOOL 1)
+elseif("${GTSAM_DEFAULT_ALLOCATOR}" STREQUAL "STL")
+    set(GTSAM_ALLOCATOR_STL 1)
+elseif("${GTSAM_DEFAULT_ALLOCATOR}" STREQUAL "TBB")
+    set(GTSAM_ALLOCATOR_TBB 1)
+elseif("${GTSAM_DEFAULT_ALLOCATOR}" STREQUAL "tcmalloc")
+    set(GTSAM_ALLOCATOR_STL 1) # tcmalloc replaces malloc, so to use it we use the STL allocator
+    list(APPEND GTSAM_ADDITIONAL_LIBRARIES "tcmalloc")
+endif()
--- /dev/null
+++ gtsam-4.1.0/cmake/HandleBoost.cmake
@@ -0,0 +1,56 @@
+###############################################################################
+# Find boost
+
+# To change the path for boost, you will need to set:
+# BOOST_ROOT: path to install prefix for boost
+# Boost_NO_SYSTEM_PATHS: set to true to keep the find script from ignoring BOOST_ROOT
+
+if(MSVC)
+    # By default, boost only builds static libraries on windows
+    set(Boost_USE_STATIC_LIBS ON)  # only find static libs
+    # If we ever reset above on windows and, ...
+    # If we use Boost shared libs, disable auto linking.
+    # Some libraries, at least Boost Program Options, rely on this to export DLL symbols.
+    if(NOT Boost_USE_STATIC_LIBS)
+        list_append_cache(GTSAM_COMPILE_DEFINITIONS_PUBLIC BOOST_ALL_NO_LIB BOOST_ALL_DYN_LINK)
+    endif()
+    # Virtual memory range for PCH exceeded on VS2015
+    if(MSVC_VERSION LESS 1910) # older than VS2017
+      list_append_cache(GTSAM_COMPILE_OPTIONS_PRIVATE -Zm295)
+    endif()
+endif()
+
+
+# Store these in variables so they are automatically replicated in GTSAMConfig.cmake and such.
+set(BOOST_FIND_MINIMUM_VERSION 1.58)
+set(BOOST_FIND_MINIMUM_COMPONENTS serialization system filesystem thread program_options date_time timer chrono regex)
+
+find_package(Boost ${BOOST_FIND_MINIMUM_VERSION} COMPONENTS ${BOOST_FIND_MINIMUM_COMPONENTS})
+
+# Required components
+if(NOT Boost_SERIALIZATION_LIBRARY OR NOT Boost_SYSTEM_LIBRARY OR NOT Boost_FILESYSTEM_LIBRARY OR
+    NOT Boost_THREAD_LIBRARY OR NOT Boost_DATE_TIME_LIBRARY)
+  message(FATAL_ERROR "Missing required Boost components >= v1.58, please install/upgrade Boost or configure your search paths.")
+endif()
+
+option(GTSAM_DISABLE_NEW_TIMERS "Disables using Boost.chrono for timing" OFF)
+# Allow for not using the timer libraries on boost < 1.48 (GTSAM timing code falls back to old timer library)
+set(GTSAM_BOOST_LIBRARIES
+  Boost::serialization
+  Boost::system
+  Boost::filesystem
+  Boost::thread
+  Boost::date_time
+  Boost::regex
+)
+if (GTSAM_DISABLE_NEW_TIMERS)
+    message("WARNING:  GTSAM timing instrumentation manually disabled")
+    list_append_cache(GTSAM_COMPILE_DEFINITIONS_PUBLIC DGTSAM_DISABLE_NEW_TIMERS)
+else()
+    if(Boost_TIMER_LIBRARY)
+      list(APPEND GTSAM_BOOST_LIBRARIES Boost::timer Boost::chrono)
+    else()
+      list(APPEND GTSAM_BOOST_LIBRARIES rt) # When using the header-only boost timer library, need -lrt
+      message("WARNING:  GTSAM timing instrumentation will use the older, less accurate, Boost timer library because boost older than 1.48 was found.")
+    endif()
+endif()
--- /dev/null
+++ gtsam-4.1.0/cmake/HandleCCache.cmake
@@ -0,0 +1,14 @@
+###############################################################################
+# Support ccache, if installed
+if(NOT MSVC AND NOT XCODE_VERSION)
+    find_program(CCACHE_FOUND ccache)
+    if(CCACHE_FOUND)
+        if(GTSAM_BUILD_WITH_CCACHE)
+            set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ccache)
+            set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ccache)
+        else()
+            set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE "")
+            set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK "")
+        endif()
+    endif(CCACHE_FOUND)
+endif()
--- /dev/null
+++ gtsam-4.1.0/cmake/HandleCPack.cmake
@@ -0,0 +1,28 @@
+#JLBC: is all this actually used by someone? could it be removed?
+
+# Flags for choosing default packaging tools
+set(CPACK_SOURCE_GENERATOR "TGZ" CACHE STRING "CPack Default Source Generator")
+set(CPACK_GENERATOR        "TGZ" CACHE STRING "CPack Default Binary Generator")
+
+###############################################################################
+# Set up CPack
+set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "GTSAM")
+set(CPACK_PACKAGE_VENDOR "Frank Dellaert, Georgia Institute of Technology")
+set(CPACK_PACKAGE_CONTACT "Frank Dellaert, dellaert@cc.gatech.edu")
+set(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/README.md")
+set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE")
+set(CPACK_PACKAGE_VERSION_MAJOR ${GTSAM_VERSION_MAJOR})
+set(CPACK_PACKAGE_VERSION_MINOR ${GTSAM_VERSION_MINOR})
+set(CPACK_PACKAGE_VERSION_PATCH ${GTSAM_VERSION_PATCH})
+set(CPACK_PACKAGE_INSTALL_DIRECTORY "CMake ${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")
+#set(CPACK_INSTALLED_DIRECTORIES "doc;.") # Include doc directory
+#set(CPACK_INSTALLED_DIRECTORIES ".") # FIXME: throws error
+set(CPACK_SOURCE_IGNORE_FILES "/build*;/\\\\.;/makestats.sh$")
+set(CPACK_SOURCE_IGNORE_FILES "${CPACK_SOURCE_IGNORE_FILES}" "/gtsam_unstable/")
+set(CPACK_SOURCE_IGNORE_FILES "${CPACK_SOURCE_IGNORE_FILES}" "/package_scripts/")
+set(CPACK_SOURCE_PACKAGE_FILE_NAME "gtsam-${GTSAM_VERSION_MAJOR}.${GTSAM_VERSION_MINOR}.${GTSAM_VERSION_PATCH}")
+#set(CPACK_SOURCE_PACKAGE_FILE_NAME "gtsam-aspn${GTSAM_VERSION_PATCH}") # Used for creating ASPN tarballs
+
+# Deb-package specific cpack
+set(CPACK_DEBIAN_PACKAGE_NAME "libgtsam-dev")
+set(CPACK_DEBIAN_PACKAGE_DEPENDS "libboost-dev (>= 1.58)") #Example: "libc6 (>= 2.3.1-6), libgcc1 (>= 1:3.4.2-12)")
--- /dev/null
+++ gtsam-4.1.0/cmake/HandleEigen.cmake
@@ -0,0 +1,77 @@
+###############################################################################
+# Option for using system Eigen or GTSAM-bundled Eigen
+
+option(GTSAM_USE_SYSTEM_EIGEN "Find and use system-installed Eigen. If 'off', use the one bundled with GTSAM" OFF)
+
+if(NOT GTSAM_USE_SYSTEM_EIGEN)
+  # This option only makes sense if using the embedded copy of Eigen, it is
+  # used to decide whether to *install* the "unsupported" module:
+  option(GTSAM_WITH_EIGEN_UNSUPPORTED "Install Eigen's unsupported modules" OFF)
+endif()
+
+# Switch for using system Eigen or GTSAM-bundled Eigen
+if(GTSAM_USE_SYSTEM_EIGEN)
+    find_package(Eigen3 REQUIRED)
+
+    # Use generic Eigen include paths e.g. <Eigen/Core>
+    set(GTSAM_EIGEN_INCLUDE_FOR_INSTALL "${EIGEN3_INCLUDE_DIR}")
+
+    # check if MKL is also enabled - can have one or the other, but not both!
+    # Note: Eigen >= v3.2.5 includes our patches
+    if(EIGEN_USE_MKL_ALL AND (EIGEN3_VERSION VERSION_LESS 3.2.5))
+      message(FATAL_ERROR "MKL requires at least Eigen 3.2.5, and your system appears to have an older version. Disable GTSAM_USE_SYSTEM_EIGEN to use GTSAM's copy of Eigen, or disable GTSAM_WITH_EIGEN_MKL")
+    endif()
+
+    # Check for Eigen version which doesn't work with MKL
+    # See http://eigen.tuxfamily.org/bz/show_bug.cgi?id=1527 for details.
+    if(EIGEN_USE_MKL_ALL AND (EIGEN3_VERSION VERSION_EQUAL 3.3.4))
+        message(FATAL_ERROR "MKL does not work with Eigen 3.3.4 because of a bug in Eigen. See http://eigen.tuxfamily.org/bz/show_bug.cgi?id=1527. Disable GTSAM_USE_SYSTEM_EIGEN to use GTSAM's copy of Eigen, disable GTSAM_WITH_EIGEN_MKL, or upgrade/patch your installation of Eigen.")
+    endif()
+
+    # The actual include directory (for BUILD cmake target interface):
+    set(GTSAM_EIGEN_INCLUDE_FOR_BUILD "${EIGEN3_INCLUDE_DIR}")
+else()
+    # Use bundled Eigen include path.
+    # Clear any variables set by FindEigen3
+    if(EIGEN3_INCLUDE_DIR)
+        set(EIGEN3_INCLUDE_DIR NOTFOUND CACHE STRING "" FORCE)
+    endif()
+
+    # set full path to be used by external projects
+    # this will be added to GTSAM_INCLUDE_DIR by gtsam_extra.cmake.in
+    set(GTSAM_EIGEN_INCLUDE_FOR_INSTALL "include/gtsam/3rdparty/Eigen/")
+
+    # The actual include directory (for BUILD cmake target interface):
+    set(GTSAM_EIGEN_INCLUDE_FOR_BUILD "${GTSAM_SOURCE_DIR}/gtsam/3rdparty/Eigen/")
+endif()
+
+# Detect Eigen version:
+set(EIGEN_VER_H "${GTSAM_EIGEN_INCLUDE_FOR_BUILD}/Eigen/src/Core/util/Macros.h")
+if (EXISTS ${EIGEN_VER_H})
+    file(READ "${EIGEN_VER_H}" STR_EIGEN_VERSION)
+
+    # Extract the Eigen version from the Macros.h file, lines "#define EIGEN_WORLD_VERSION  XX", etc...
+
+    string(REGEX MATCH "EIGEN_WORLD_VERSION[ ]+[0-9]+" GTSAM_EIGEN_VERSION_WORLD "${STR_EIGEN_VERSION}")
+    string(REGEX MATCH "[0-9]+" GTSAM_EIGEN_VERSION_WORLD "${GTSAM_EIGEN_VERSION_WORLD}")
+
+    string(REGEX MATCH "EIGEN_MAJOR_VERSION[ ]+[0-9]+" GTSAM_EIGEN_VERSION_MAJOR "${STR_EIGEN_VERSION}")
+    string(REGEX MATCH "[0-9]+" GTSAM_EIGEN_VERSION_MAJOR "${GTSAM_EIGEN_VERSION_MAJOR}")
+
+    string(REGEX MATCH "EIGEN_MINOR_VERSION[ ]+[0-9]+" GTSAM_EIGEN_VERSION_MINOR "${STR_EIGEN_VERSION}")
+    string(REGEX MATCH "[0-9]+" GTSAM_EIGEN_VERSION_MINOR "${GTSAM_EIGEN_VERSION_MINOR}")
+
+    set(GTSAM_EIGEN_VERSION "${GTSAM_EIGEN_VERSION_WORLD}.${GTSAM_EIGEN_VERSION_MAJOR}.${GTSAM_EIGEN_VERSION_MINOR}")
+
+    message(STATUS "Found Eigen version: ${GTSAM_EIGEN_VERSION}")
+else()
+    message(WARNING "Cannot determine Eigen version, missing file: `${EIGEN_VER_H}`")
+endif ()
+
+if (MSVC)
+    if (BUILD_SHARED_LIBS)
+        # mute eigen static assert to avoid errors in shared lib
+        list_append_cache(GTSAM_COMPILE_DEFINITIONS_PUBLIC EIGEN_NO_STATIC_ASSERT)
+    endif()
+    list_append_cache(GTSAM_COMPILE_OPTIONS_PRIVATE "/wd4244") # Disable loss of precision which is thrown all over our Eigen
+endif()
--- /dev/null
+++ gtsam-4.1.0/cmake/HandleFinalChecks.cmake
@@ -0,0 +1,10 @@
+# Print warnings at the end
+if(GTSAM_WITH_TBB AND NOT TBB_FOUND)
+    message(WARNING "TBB 4.4 or newer was not found - this is ok, but note that GTSAM parallelization will be disabled.  Set GTSAM_WITH_TBB to 'Off' to avoid this warning.")
+endif()
+if(GTSAM_WITH_EIGEN_MKL AND NOT MKL_FOUND)
+    message(WARNING "MKL was not found - this is ok, but note that MKL will be disabled.  Set GTSAM_WITH_EIGEN_MKL to 'Off' to disable this warning.  See INSTALL.md for notes on performance.")
+endif()
+if(GTSAM_WITH_EIGEN_MKL_OPENMP AND NOT OPENMP_FOUND AND MKL_FOUND)
+    message(WARNING "Your compiler does not support OpenMP.  Set GTSAM_WITH_EIGEN_MKL_OPENMP to 'Off' to avoid this warning. See INSTALL.md for notes on performance.")
+endif()
--- /dev/null
+++ gtsam-4.1.0/cmake/HandleGeneralOptions.cmake
@@ -0,0 +1,45 @@
+###############################################################################
+# Set up options
+
+# See whether gtsam_unstable is available (it will be present only if we're using a git checkout)
+if(EXISTS "${PROJECT_SOURCE_DIR}/gtsam_unstable" AND IS_DIRECTORY "${PROJECT_SOURCE_DIR}/gtsam_unstable")
+    set(GTSAM_UNSTABLE_AVAILABLE 1)
+else()
+    set(GTSAM_UNSTABLE_AVAILABLE 0)
+endif()
+
+# Configurable Options
+if(GTSAM_UNSTABLE_AVAILABLE)
+    option(GTSAM_BUILD_UNSTABLE              "Enable/Disable libgtsam_unstable"          ON)
+    option(GTSAM_UNSTABLE_BUILD_PYTHON       "Enable/Disable Python wrapper for libgtsam_unstable" ON)
+    option(GTSAM_UNSTABLE_INSTALL_MATLAB_TOOLBOX "Enable/Disable MATLAB wrapper for libgtsam_unstable" OFF)
+endif()
+option(BUILD_SHARED_LIBS                 "Build shared gtsam library, instead of static" ON)
+option(GTSAM_USE_QUATERNIONS             "Enable/Disable using an internal Quaternion representation for rotations instead of rotation matrices. If enable, Rot3::EXPMAP is enforced by default." OFF)
+option(GTSAM_POSE3_EXPMAP                "Enable/Disable using Pose3::EXPMAP as the default mode. If disabled, Pose3::FIRST_ORDER will be used." ON)
+option(GTSAM_ROT3_EXPMAP                 "Ignore if GTSAM_USE_QUATERNIONS is OFF (Rot3::EXPMAP by default). Otherwise, enable Rot3::EXPMAP, or if disabled, use Rot3::CAYLEY." ON)
+option(GTSAM_ENABLE_CONSISTENCY_CHECKS   "Enable/Disable expensive consistency checks"       OFF)
+option(GTSAM_WITH_TBB                    "Use Intel Threaded Building Blocks (TBB) if available" ON)
+option(GTSAM_WITH_EIGEN_MKL              "Eigen will use Intel MKL if available" OFF)
+option(GTSAM_WITH_EIGEN_MKL_OPENMP       "Eigen, when using Intel MKL, will also use OpenMP for multithreading if available" OFF)
+option(GTSAM_THROW_CHEIRALITY_EXCEPTION  "Throw exception when a triangulated point is behind a camera" ON)
+option(GTSAM_BUILD_PYTHON                "Enable/Disable building & installation of Python module with pybind11" OFF)
+option(GTSAM_INSTALL_MATLAB_TOOLBOX      "Enable/Disable installation of matlab toolbox"  OFF)
+option(GTSAM_ALLOW_DEPRECATED_SINCE_V41  "Allow use of methods/functions deprecated in GTSAM 4.1" ON)
+option(GTSAM_SUPPORT_NESTED_DISSECTION   "Support Metis-based nested dissection" ON)
+option(GTSAM_TANGENT_PREINTEGRATION      "Use new ImuFactor with integration on tangent space" ON)
+if(NOT MSVC AND NOT XCODE_VERSION)
+    option(GTSAM_BUILD_WITH_CCACHE           "Use ccache compiler cache" ON)
+endif()
+
+# Enable GTSAM_ROT3_EXPMAP if GTSAM_POSE3_EXPMAP is enabled, and vice versa.
+if(GTSAM_POSE3_EXPMAP)
+    message(STATUS "GTSAM_POSE3_EXPMAP=ON, enabling GTSAM_ROT3_EXPMAP as well")
+    set(GTSAM_ROT3_EXPMAP 1 CACHE BOOL "" FORCE)
+elseif(GTSAM_ROT3_EXPMAP)
+    message(STATUS "GTSAM_ROT3_EXPMAP=ON, enabling GTSAM_POSE3_EXPMAP as well")
+    set(GTSAM_POSE3_EXPMAP 1 CACHE BOOL "" FORCE)
+endif()
+
+# Set the default Python version. This is later updated in HandlePython.cmake.
+set(GTSAM_PYTHON_VERSION "Default" CACHE STRING "The version of Python to build the wrappers against.")
--- /dev/null
+++ gtsam-4.1.0/cmake/HandleGlobalBuildFlags.cmake
@@ -0,0 +1,52 @@
+# JLBC: These should ideally be ported to "modern cmake" via target properties.
+#
+
+if (CMAKE_GENERATOR STREQUAL "Ninja" AND
+    ((CMAKE_CXX_COMPILER_ID STREQUAL "GNU" AND NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.9) OR
+     (CMAKE_CXX_COMPILER_ID STREQUAL "Clang" AND NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.5)))
+    # Force colored warnings in Ninja's output, if the compiler has -fdiagnostics-color support.
+    # Rationale in https://github.com/ninja-build/ninja/issues/814
+    add_compile_options(-fdiagnostics-color=always)
+endif()
+
+
+# If building DLLs in MSVC, we need to avoid EIGEN_STATIC_ASSERT()
+# or explicit instantiation will generate build errors.
+# See: https://bitbucket.org/gtborg/gtsam/issues/417/fail-to-build-on-msvc-2017
+#
+if(MSVC AND BUILD_SHARED_LIBS)
+    list_append_cache(GTSAM_COMPILE_DEFINITIONS_PUBLIC EIGEN_NO_STATIC_ASSERT)
+endif()
+
+if (APPLE AND BUILD_SHARED_LIBS)
+    # Set the default install directory on macOS
+    set(CMAKE_INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
+endif()
+
+###############################################################################
+# Global compile options
+
+if(MSVC)
+    list_append_cache(GTSAM_COMPILE_DEFINITIONS_PRIVATE _CRT_SECURE_NO_WARNINGS _SCL_SECURE_NO_WARNINGS)
+    list_append_cache(GTSAM_COMPILE_OPTIONS_PRIVATE /wd4251 /wd4275 /wd4251 /wd4661 /wd4344 /wd4503) # Disable non-DLL-exported base class and other warnings
+    list_append_cache(GTSAM_COMPILE_OPTIONS_PRIVATE /bigobj) # Allow large object files for template-based code
+endif()
+
+# GCC 4.8+ complains about local typedefs which we use for shared_ptr etc.
+if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
+  if (NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.8)
+    list_append_cache(GTSAM_COMPILE_OPTIONS_PRIVATE -Wno-unused-local-typedefs)
+  endif()
+endif()
+
+# As of XCode 7, clang also complains about this
+if(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
+  if (NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 7.0)
+    list_append_cache(GTSAM_COMPILE_OPTIONS_PRIVATE -Wno-unused-local-typedefs)
+  endif()
+endif()
+
+if(GTSAM_ENABLE_CONSISTENCY_CHECKS)
+  # This should be made PUBLIC if GTSAM_EXTRA_CONSISTENCY_CHECKS is someday used in a public .h
+  list_append_cache(GTSAM_COMPILE_DEFINITIONS_PRIVATE GTSAM_EXTRA_CONSISTENCY_CHECKS)
+endif()
--- /dev/null
+++ gtsam-4.1.0/cmake/HandleMKL.cmake
@@ -0,0 +1,17 @@
+###############################################################################
+# Find MKL
+find_package(MKL)
+
+if(MKL_FOUND AND GTSAM_WITH_EIGEN_MKL)
+    set(GTSAM_USE_EIGEN_MKL 1) # This will go into config.h
+    set(EIGEN_USE_MKL_ALL 1) # This will go into config.h - it makes Eigen use MKL
+    list(APPEND GTSAM_ADDITIONAL_LIBRARIES ${MKL_LIBRARIES})
+
+    # --no-as-needed is required with gcc according to the MKL link advisor
+    if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
+        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,--no-as-needed")
+    endif()
+else()
+    set(GTSAM_USE_EIGEN_MKL 0)
+    set(EIGEN_USE_MKL_ALL 0)
+endif()
--- /dev/null
+++ gtsam-4.1.0/cmake/HandleOpenMP.cmake
@@ -0,0 +1,11 @@
+
+###############################################################################
+# Find OpenMP (if we're also using MKL)
+find_package(OpenMP)  # do this here to generate correct message if disabled
+
+if(GTSAM_WITH_EIGEN_MKL AND GTSAM_WITH_EIGEN_MKL_OPENMP AND GTSAM_USE_EIGEN_MKL)
+    if(OPENMP_FOUND AND GTSAM_USE_EIGEN_MKL AND GTSAM_WITH_EIGEN_MKL_OPENMP)
+        set(GTSAM_USE_EIGEN_MKL_OPENMP 1) # This will go into config.h
+        list_append_cache(GTSAM_COMPILE_OPTIONS_PUBLIC ${OpenMP_CXX_FLAGS})
+    endif()
+endif()
--- /dev/null
+++ gtsam-4.1.0/cmake/HandlePerfTools.cmake
@@ -0,0 +1,4 @@
+
+###############################################################################
+# Find Google perftools
+find_package(GooglePerfTools)
--- /dev/null
+++ gtsam-4.1.0/cmake/HandlePrintConfiguration.cmake
@@ -0,0 +1,104 @@
+###############################################################################
+# Print configuration variables
+message(STATUS "===============================================================")
+message(STATUS "================  Configuration Options  ======================")
+print_config("CMAKE_CXX_COMPILER_ID type" "${CMAKE_CXX_COMPILER_ID}")
+print_config("CMAKE_CXX_COMPILER_VERSION" "${CMAKE_CXX_COMPILER_VERSION}")
+print_config("CMake version"    "${CMAKE_VERSION}")
+print_config("CMake generator"  "${CMAKE_GENERATOR}")
+print_config("CMake build tool" "${CMAKE_BUILD_TOOL}")
+message(STATUS "Build flags                                               ")
+print_enabled_config(${GTSAM_BUILD_TESTS}                 "Build Tests")
+print_enabled_config(${GTSAM_BUILD_EXAMPLES_ALWAYS}       "Build examples with 'make all'")
+print_enabled_config(${GTSAM_BUILD_TIMING_ALWAYS}         "Build timing scripts with 'make all'")
+if (DOXYGEN_FOUND)
+    print_enabled_config(${GTSAM_BUILD_DOCS}              "Build Docs")
+endif()
+print_enabled_config(${BUILD_SHARED_LIBS}                 "Build shared GTSAM libraries")
+print_enabled_config(${GTSAM_BUILD_TYPE_POSTFIXES}        "Put build type in library name")
+if(GTSAM_UNSTABLE_AVAILABLE)
+    print_enabled_config(${GTSAM_BUILD_UNSTABLE}          "Build libgtsam_unstable        ")
+    print_enabled_config(${GTSAM_UNSTABLE_BUILD_PYTHON}   "Build GTSAM unstable Python    ")
+    print_enabled_config(${GTSAM_UNSTABLE_INSTALL_MATLAB_TOOLBOX} "Build MATLAB Toolbox for unstable")
+endif()
+
+if(NOT MSVC AND NOT XCODE_VERSION)
+    print_enabled_config(${GTSAM_BUILD_WITH_MARCH_NATIVE}     "Build for native architecture  ")
+    print_config("Build type" "${CMAKE_BUILD_TYPE}")
+    print_config("C compilation flags" "${CMAKE_C_FLAGS} ${CMAKE_C_FLAGS_${CMAKE_BUILD_TYPE_UPPER}}")
+    print_config("C++ compilation flags" "${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE_UPPER}}")
+endif()
+
+print_build_options_for_target(gtsam)
+
+print_config("Use System Eigen" "${GTSAM_USE_SYSTEM_EIGEN} (Using version: ${GTSAM_EIGEN_VERSION})")
+
+if(GTSAM_USE_TBB)
+    print_config("Use Intel TBB" "Yes (Version: ${TBB_VERSION})")
+elseif(TBB_FOUND)
+    print_config("Use Intel TBB" "TBB (Version: ${TBB_VERSION}) found but GTSAM_WITH_TBB is disabled")
+else()
+    print_config("Use Intel TBB" "TBB not found")
+endif()
+if(GTSAM_USE_EIGEN_MKL)
+    print_config("Eigen will use MKL" "Yes")
+elseif(MKL_FOUND)
+    print_config("Eigen will use MKL" "MKL found but GTSAM_WITH_EIGEN_MKL is disabled")
+else()
+    print_config("Eigen will use MKL" "MKL not found")
+endif()
+if(GTSAM_USE_EIGEN_MKL_OPENMP)
+    print_config("Eigen will use MKL and OpenMP" "Yes")
+elseif(OPENMP_FOUND AND NOT GTSAM_WITH_EIGEN_MKL)
+    print_config("Eigen will use MKL and OpenMP" "OpenMP found but GTSAM_WITH_EIGEN_MKL is disabled")
+elseif(OPENMP_FOUND AND NOT MKL_FOUND)
+    print_config("Eigen will use MKL and OpenMP" "OpenMP found but MKL not found")
+elseif(OPENMP_FOUND)
+    print_config("Eigen will use MKL and OpenMP" "OpenMP found but GTSAM_WITH_EIGEN_MKL_OPENMP is disabled")
+else()
+    print_config("Eigen will use MKL and OpenMP" "OpenMP not found")
+endif()
+print_config("Default allocator" "${GTSAM_DEFAULT_ALLOCATOR}")
+
+if(GTSAM_THROW_CHEIRALITY_EXCEPTION)
+    print_config("Cheirality exceptions enabled" "YES")
+else()
+    print_config("Cheirality exceptions enabled" "NO")
+endif()
+
+if(NOT MSVC AND NOT XCODE_VERSION)
+    if(CCACHE_FOUND AND GTSAM_BUILD_WITH_CCACHE)
+        print_config("Build with ccache" "Yes")
+    elseif(CCACHE_FOUND)
+        print_config("Build with ccache" "ccache found but GTSAM_BUILD_WITH_CCACHE is disabled")
+    else()
+        print_config("Build with ccache" "No")
+    endif()
+endif()
+
+message(STATUS "Packaging flags")
+print_config("CPack Source Generator" "${CPACK_SOURCE_GENERATOR}")
+print_config("CPack Generator" "${CPACK_GENERATOR}")
+
+message(STATUS "GTSAM flags                                               ")
+print_enabled_config(${GTSAM_USE_QUATERNIONS}             "Quaternions as default Rot3     ")
+print_enabled_config(${GTSAM_ENABLE_CONSISTENCY_CHECKS}   "Runtime consistency checking    ")
+print_enabled_config(${GTSAM_ROT3_EXPMAP}                 "Rot3 retract is full ExpMap     ")
+print_enabled_config(${GTSAM_POSE3_EXPMAP}                "Pose3 retract is full ExpMap    ")
+print_enabled_config(${GTSAM_ALLOW_DEPRECATED_SINCE_V41}  "Allow features deprecated in GTSAM 4.1")
+print_enabled_config(${GTSAM_SUPPORT_NESTED_DISSECTION}   "Metis-based Nested Dissection   ")
+print_enabled_config(${GTSAM_TANGENT_PREINTEGRATION}      "Use tangent-space preintegration")
+
+message(STATUS "MATLAB toolbox flags")
+print_enabled_config(${GTSAM_INSTALL_MATLAB_TOOLBOX}      "Install MATLAB toolbox          ")
+if (${GTSAM_INSTALL_MATLAB_TOOLBOX})
+    print_config("MATLAB root" "${MATLAB_ROOT}")
+    print_config("MEX binary" "${MEX_COMMAND}")
+endif()
+message(STATUS "Python toolbox flags                                      ")
+print_enabled_config(${GTSAM_BUILD_PYTHON}                "Build Python module with pybind ")
+if(GTSAM_BUILD_PYTHON)
+    print_config("Python version" ${GTSAM_PYTHON_VERSION})
+endif()
+
+message(STATUS "===============================================================")
--- /dev/null
+++ gtsam-4.1.0/cmake/HandlePython.cmake
@@ -0,0 +1,55 @@
+# Set Python version if either Python or MATLAB wrapper is requested.
+if(GTSAM_BUILD_PYTHON OR GTSAM_INSTALL_MATLAB_TOOLBOX)
+  if(${GTSAM_PYTHON_VERSION} STREQUAL "Default")
+
+    if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
+      # Use older version of cmake's find_python
+      find_package(PythonInterp)
+
+      if(NOT ${PYTHONINTERP_FOUND})
+        message(
+          FATAL_ERROR
+            "Cannot find Python interpreter. Please install Python >= 3.6.")
+      endif()
+
+      find_package(PythonLibs ${PYTHON_VERSION_STRING})
+
+      set(Python_VERSION_MAJOR ${PYTHON_VERSION_MAJOR})
+      set(Python_VERSION_MINOR ${PYTHON_VERSION_MINOR})
+      set(Python_EXECUTABLE ${PYTHON_EXECUTABLE})
+
+    else()
+      # Get info about the Python3 interpreter
+      # https://cmake.org/cmake/help/latest/module/FindPython3.html#module:FindPython3
+      find_package(Python3 COMPONENTS Interpreter Development)
+
+      if(NOT ${Python3_FOUND})
+        message(
+          FATAL_ERROR
+            "Cannot find Python3 interpreter. Please install Python >= 3.6.")
+      endif()
+
+      set(Python_VERSION_MAJOR ${Python3_VERSION_MAJOR})
+      set(Python_VERSION_MINOR ${Python3_VERSION_MINOR})
+
+    endif()
+
+    set(GTSAM_PYTHON_VERSION
+        "${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}"
+        CACHE STRING "The version of Python to build the wrappers against."
+              FORCE)
+
+  endif()
+endif()
+
+# Check for build of Unstable modules
+if(GTSAM_BUILD_PYTHON)
+    if(GTSAM_UNSTABLE_BUILD_PYTHON)
+        if (NOT GTSAM_BUILD_UNSTABLE)
+            message(WARNING "GTSAM_UNSTABLE_BUILD_PYTHON requires the unstable module to be enabled.")
+            set(GTSAM_UNSTABLE_BUILD_PYTHON OFF)
+        endif()
+    endif()
+
+    set(GTSAM_PY_INSTALL_PATH "${CMAKE_INSTALL_PREFIX}/python")
+endif()
--- /dev/null
+++ gtsam-4.1.0/cmake/HandleTBB.cmake
@@ -0,0 +1,24 @@
+###############################################################################
+# Find TBB
+find_package(TBB 4.4 COMPONENTS tbb tbbmalloc)
+
+# Set up variables if we're using TBB
+if(TBB_FOUND AND GTSAM_WITH_TBB)
+    set(GTSAM_USE_TBB 1)  # This will go into config.h
+    if ((${TBB_VERSION_MAJOR} GREATER 2020) OR (${TBB_VERSION_MAJOR} EQUAL 2020))
+        set(TBB_GREATER_EQUAL_2020 1)
+    else()
+        set(TBB_GREATER_EQUAL_2020 0)
+    endif()
+    # all definitions and link requisites will go via imported targets:
+    # tbb & tbbmalloc
+    list(APPEND GTSAM_ADDITIONAL_LIBRARIES tbb tbbmalloc)
+else()
+    set(GTSAM_USE_TBB 0)  # This will go into config.h
+endif()
+
+###############################################################################
+# Prohibit Timing build mode in combination with TBB
+if(GTSAM_USE_TBB AND (CMAKE_BUILD_TYPE  STREQUAL "Timing"))
+      message(FATAL_ERROR "Timing build mode cannot be used together with TBB. Use a sampling profiler such as Instruments or Intel VTune Amplifier instead.")
+endif()
--- /dev/null
+++ gtsam-4.1.0/cmake/HandleUninstall.cmake
@@ -0,0 +1,16 @@
+# ----------------------------------------------------------------------------
+#   Uninstall target, for "make uninstall"
+# ----------------------------------------------------------------------------
+configure_file(
+  "${CMAKE_CURRENT_SOURCE_DIR}/cmake/cmake_uninstall.cmake.in"
+  "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake"
+  IMMEDIATE @ONLY)
+
+if (NOT TARGET uninstall) # avoid duplicating this target
+  add_custom_target(uninstall
+    "${CMAKE_COMMAND}" -P "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake")
+else()
+    add_custom_target(uninstall_gtsam
+      "${CMAKE_COMMAND}" -P "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake")
+    add_dependencies(uninstall uninstall_gtsam)
+endif()
--- gtsam-4.1.0.orig/cmake/README.md
+++ gtsam-4.1.0/cmake/README.md
@@ -67,32 +67,6 @@ Defines two useful functions for creatin
                        an empty string "" if nothing needs to be excluded.
         linkLibraries: The list of libraries to link to.
 
-## GtsamMatlabWrap
-
-    include(GtsamMatlabWrap)
-    
-Defines functions for generating MATLAB wrappers.  Also immediately creates several CMake options for configuring the wrapper.
-
-*   `wrap_and_install_library(interfaceHeader linkLibraries extraIncludeDirs extraMexFlags)` Generates wrap code and compiles the wrapper.
-
-    Usage example:
-    
-        `wrap_and_install_library("lba.h" "" "" "")`
-    
-    Arguments:
-    
-        interfaceHeader:  The relative or absolute path to the wrapper interface
-                          definition file.
-        linkLibraries:    Any *additional* libraries to link.  Your project library
-                          (e.g. `lba`), libraries it depends on, and any necessary
-                          MATLAB libraries will be linked automatically.  So normally,
-                          leave this empty.
-        extraIncludeDirs: Any *additional* include paths required by dependent
-                          libraries that have not already been added by
-                          include_directories.  Again, normally, leave this empty.
-        extraMexFlags:    Any *additional* flags to pass to the compiler when building
-                          the wrap code.  Normally, leave this empty.
-
 ## GtsamMakeConfigFile
 
     include(GtsamMakeConfigFile)
--- gtsam-4.1.0.orig/doc/Doxyfile.in
+++ gtsam-4.1.0/doc/Doxyfile.in
@@ -1188,7 +1188,7 @@ USE_MATHJAX            = YES
 # MathJax, but it is strongly recommended to install a local copy of MathJax 
 # before deployment.
 
-MATHJAX_RELPATH        = http://cdn.mathjax.org/mathjax/latest
+MATHJAX_RELPATH        = https://cdn.mathjax.org/mathjax/latest
 
 # The MATHJAX_EXTENSIONS tag can be used to specify one or MathJax extension 
 # names that should be enabled during MathJax rendering.
--- gtsam-4.1.0.orig/doc/LieGroups.lyx
+++ gtsam-4.1.0/doc/LieGroups.lyx
@@ -2452,7 +2452,7 @@ First transform
 , and then rotate back:
 \begin_inset Formula 
 \[
-q=Re^{\Skew{\omega}}R^{T}
+q=Re^{\Skew{\omega}}R^{T}p
 \]
 
 \end_inset
--- gtsam-4.1.0.orig/docker/ubuntu-gtsam-python/Dockerfile
+++ gtsam-4.1.0/docker/ubuntu-gtsam-python/Dockerfile
@@ -7,9 +7,9 @@ FROM dellaert/ubuntu-gtsam:bionic
 RUN apt-get install -y python3-pip python3-dev
 
 # Install python wrapper requirements
-RUN python3 -m pip install -U -r /usr/src/gtsam/cython/requirements.txt
+RUN python3 -m pip install -U -r /usr/src/gtsam/python/requirements.txt
 
-# Run cmake again, now with cython toolbox on
+# Run cmake again, now with python toolbox on
 WORKDIR /usr/src/gtsam/build
 RUN cmake \
     -DCMAKE_BUILD_TYPE=Release \
@@ -17,7 +17,7 @@ RUN cmake \
     -DGTSAM_BUILD_EXAMPLES_ALWAYS=OFF \
     -DGTSAM_BUILD_TIMING_ALWAYS=OFF \
     -DGTSAM_BUILD_TESTS=OFF \
-    -DGTSAM_INSTALL_CYTHON_TOOLBOX=ON \
+    -DGTSAM_BUILD_PYTHON=ON \
     -DGTSAM_PYTHON_VERSION=3\
     ..
 
@@ -25,7 +25,7 @@ RUN cmake \
 RUN make -j4 install && make clean
 
 # Needed to run python wrapper:
-RUN echo 'export PYTHONPATH=/usr/local/cython/:$PYTHONPATH' >> /root/.bashrc
+RUN echo 'export PYTHONPATH=/usr/local/python/:$PYTHONPATH' >> /root/.bashrc
 
 # Run bash
 CMD ["bash"]
--- gtsam-4.1.0.orig/docker/ubuntu-gtsam/Dockerfile
+++ gtsam-4.1.0/docker/ubuntu-gtsam/Dockerfile
@@ -23,7 +23,6 @@ RUN cmake \
     -DGTSAM_BUILD_EXAMPLES_ALWAYS=OFF \
     -DGTSAM_BUILD_TIMING_ALWAYS=OFF \
     -DGTSAM_BUILD_TESTS=OFF \
-    -DGTSAM_INSTALL_CYTHON_TOOLBOX=OFF \
     ..
 
 # Build
--- /dev/null
+++ gtsam-4.1.0/examples/CombinedImuFactorsExample.cpp
@@ -0,0 +1,303 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * @file CombinedImuFactorsExample
+ * @brief Test example for using GTSAM ImuCombinedFactor
+ * navigation code.
+ * @author Varun Agrawal
+ */
+
+/**
+ * Example of use of the CombinedImuFactor in
+ * conjunction with GPS
+ *  - we read IMU and GPS data from a CSV file, with the following format:
+ *  A row starting with "i" is the first initial position formatted with
+ *  N, E, D, qx, qY, qZ, qW, velN, velE, velD
+ *  A row starting with "0" is an imu measurement
+ *  linAccN, linAccE, linAccD, angVelN, angVelE, angVelD
+ *  A row starting with "1" is a gps correction formatted with
+ *  N, E, D, qX, qY, qZ, qW
+ * Note that for GPS correction, we're only using the position not the
+ * rotation. The rotation is provided in the file for ground truth comparison.
+ *
+ *  See usage: ./CombinedImuFactorsExample --help
+ */
+
+#include <boost/program_options.hpp>
+
+// GTSAM related includes.
+#include <gtsam/inference/Symbol.h>
+#include <gtsam/navigation/CombinedImuFactor.h>
+#include <gtsam/navigation/GPSFactor.h>
+#include <gtsam/navigation/ImuFactor.h>
+#include <gtsam/nonlinear/LevenbergMarquardtOptimizer.h>
+#include <gtsam/nonlinear/NonlinearFactorGraph.h>
+#include <gtsam/slam/BetweenFactor.h>
+#include <gtsam/slam/dataset.h>
+
+#include <cstring>
+#include <fstream>
+#include <iostream>
+
+using namespace gtsam;
+using namespace std;
+
+using symbol_shorthand::B;  // Bias  (ax,ay,az,gx,gy,gz)
+using symbol_shorthand::V;  // Vel   (xdot,ydot,zdot)
+using symbol_shorthand::X;  // Pose3 (x,y,z,r,p,y)
+
+namespace po = boost::program_options;
+
+po::variables_map parseOptions(int argc, char* argv[]) {
+  po::options_description desc;
+  desc.add_options()("help,h", "produce help message")(
+      "data_csv_path", po::value<string>()->default_value("imuAndGPSdata.csv"),
+      "path to the CSV file with the IMU data")(
+      "output_filename",
+      po::value<string>()->default_value("imuFactorExampleResults.csv"),
+      "path to the result file to use")("use_isam", po::bool_switch(),
+                                        "use ISAM as the optimizer");
+
+  po::variables_map vm;
+  po::store(po::parse_command_line(argc, argv, desc), vm);
+
+  if (vm.count("help")) {
+    cout << desc << "\n";
+    exit(1);
+  }
+
+  return vm;
+}
+
+Vector10 readInitialState(ifstream& file) {
+  string value;
+  // Format is (N,E,D,qX,qY,qZ,qW,velN,velE,velD)
+  Vector10 initial_state;
+  getline(file, value, ',');  // i
+  for (int i = 0; i < 9; i++) {
+    getline(file, value, ',');
+    initial_state(i) = stof(value.c_str());
+  }
+  getline(file, value, '\n');
+  initial_state(9) = stof(value.c_str());
+
+  return initial_state;
+}
+
+boost::shared_ptr<PreintegratedCombinedMeasurements::Params> imuParams() {
+  // We use the sensor specs to build the noise model for the IMU factor.
+  double accel_noise_sigma = 0.0003924;
+  double gyro_noise_sigma = 0.000205689024915;
+  double accel_bias_rw_sigma = 0.004905;
+  double gyro_bias_rw_sigma = 0.000001454441043;
+  Matrix33 measured_acc_cov = I_3x3 * pow(accel_noise_sigma, 2);
+  Matrix33 measured_omega_cov = I_3x3 * pow(gyro_noise_sigma, 2);
+  Matrix33 integration_error_cov =
+      I_3x3 * 1e-8;  // error committed in integrating position from velocities
+  Matrix33 bias_acc_cov = I_3x3 * pow(accel_bias_rw_sigma, 2);
+  Matrix33 bias_omega_cov = I_3x3 * pow(gyro_bias_rw_sigma, 2);
+  Matrix66 bias_acc_omega_int =
+      I_6x6 * 1e-5;  // error in the bias used for preintegration
+
+  auto p = PreintegratedCombinedMeasurements::Params::MakeSharedD(0.0);
+  // PreintegrationBase params:
+  p->accelerometerCovariance =
+      measured_acc_cov;  // acc white noise in continuous
+  p->integrationCovariance =
+      integration_error_cov;  // integration uncertainty continuous
+  // should be using 2nd order integration
+  // PreintegratedRotation params:
+  p->gyroscopeCovariance =
+      measured_omega_cov;  // gyro white noise in continuous
+  // PreintegrationCombinedMeasurements params:
+  p->biasAccCovariance = bias_acc_cov;      // acc bias in continuous
+  p->biasOmegaCovariance = bias_omega_cov;  // gyro bias in continuous
+  p->biasAccOmegaInt = bias_acc_omega_int;
+
+  return p;
+}
+
+int main(int argc, char* argv[]) {
+  string data_filename, output_filename;
+  po::variables_map var_map = parseOptions(argc, argv);
+
+  data_filename = findExampleDataFile(var_map["data_csv_path"].as<string>());
+  output_filename = var_map["output_filename"].as<string>();
+
+  // Set up output file for plotting errors
+  FILE* fp_out = fopen(output_filename.c_str(), "w+");
+  fprintf(fp_out,
+          "#time(s),x(m),y(m),z(m),qx,qy,qz,qw,gt_x(m),gt_y(m),gt_z(m),gt_qx,"
+          "gt_qy,gt_qz,gt_qw\n");
+
+  // Begin parsing the CSV file.  Input the first line for initialization.
+  // From there, we'll iterate through the file and we'll preintegrate the IMU
+  // or add in the GPS given the input.
+  ifstream file(data_filename.c_str());
+
+  Vector10 initial_state = readInitialState(file);
+  cout << "initial state:\n" << initial_state.transpose() << "\n\n";
+
+  // Assemble initial quaternion through GTSAM constructor
+  // ::Quaternion(w,x,y,z);
+  Rot3 prior_rotation = Rot3::Quaternion(initial_state(6), initial_state(3),
+                                         initial_state(4), initial_state(5));
+  Point3 prior_point(initial_state.head<3>());
+  Pose3 prior_pose(prior_rotation, prior_point);
+  Vector3 prior_velocity(initial_state.tail<3>());
+
+  imuBias::ConstantBias prior_imu_bias;  // assume zero initial bias
+
+  int index = 0;
+
+  Values initial_values;
+
+  // insert pose at initialization
+  initial_values.insert(X(index), prior_pose);
+  initial_values.insert(V(index), prior_velocity);
+  initial_values.insert(B(index), prior_imu_bias);
+
+  // Assemble prior noise model and add it the graph.`
+  auto pose_noise_model = noiseModel::Diagonal::Sigmas(
+      (Vector(6) << 0.01, 0.01, 0.01, 0.5, 0.5, 0.5)
+          .finished());  // rad,rad,rad,m, m, m
+  auto velocity_noise_model = noiseModel::Isotropic::Sigma(3, 0.1);  // m/s
+  auto bias_noise_model = noiseModel::Isotropic::Sigma(6, 1e-3);
+
+  // Add all prior factors (pose, velocity, bias) to the graph.
+  NonlinearFactorGraph graph;
+  graph.addPrior<Pose3>(X(index), prior_pose, pose_noise_model);
+  graph.addPrior<Vector3>(V(index), prior_velocity, velocity_noise_model);
+  graph.addPrior<imuBias::ConstantBias>(B(index), prior_imu_bias,
+                                        bias_noise_model);
+
+  auto p = imuParams();
+
+  std::shared_ptr<PreintegrationType> preintegrated =
+      std::make_shared<PreintegratedCombinedMeasurements>(p, prior_imu_bias);
+
+  assert(preintegrated);
+
+  // Store previous state for imu integration and latest predicted outcome.
+  NavState prev_state(prior_pose, prior_velocity);
+  NavState prop_state = prev_state;
+  imuBias::ConstantBias prev_bias = prior_imu_bias;
+
+  // Keep track of total error over the entire run as simple performance metric.
+  double current_position_error = 0.0, current_orientation_error = 0.0;
+
+  double output_time = 0.0;
+  double dt = 0.005;  // The real system has noise, but here, results are nearly
+                      // exactly the same, so keeping this for simplicity.
+
+  // All priors have been set up, now iterate through the data file.
+  while (file.good()) {
+    // Parse out first value
+    string value;
+    getline(file, value, ',');
+    int type = stoi(value.c_str());
+
+    if (type == 0) {  // IMU measurement
+      Vector6 imu;
+      for (int i = 0; i < 5; ++i) {
+        getline(file, value, ',');
+        imu(i) = stof(value.c_str());
+      }
+      getline(file, value, '\n');
+      imu(5) = stof(value.c_str());
+
+      // Adding the IMU preintegration.
+      preintegrated->integrateMeasurement(imu.head<3>(), imu.tail<3>(), dt);
+
+    } else if (type == 1) {  // GPS measurement
+      Vector7 gps;
+      for (int i = 0; i < 6; ++i) {
+        getline(file, value, ',');
+        gps(i) = stof(value.c_str());
+      }
+      getline(file, value, '\n');
+      gps(6) = stof(value.c_str());
+
+      index++;
+
+      // Adding IMU factor and GPS factor and optimizing.
+      auto preint_imu_combined =
+          dynamic_cast<const PreintegratedCombinedMeasurements&>(
+              *preintegrated);
+      CombinedImuFactor imu_factor(X(index - 1), V(index - 1), X(index),
+                                   V(index), B(index - 1), B(index),
+                                   preint_imu_combined);
+      graph.add(imu_factor);
+
+      auto correction_noise = noiseModel::Isotropic::Sigma(3, 1.0);
+      GPSFactor gps_factor(X(index),
+                           Point3(gps(0),   // N,
+                                  gps(1),   // E,
+                                  gps(2)),  // D,
+                           correction_noise);
+      graph.add(gps_factor);
+
+      // Now optimize and compare results.
+      prop_state = preintegrated->predict(prev_state, prev_bias);
+      initial_values.insert(X(index), prop_state.pose());
+      initial_values.insert(V(index), prop_state.v());
+      initial_values.insert(B(index), prev_bias);
+
+      LevenbergMarquardtParams params;
+      params.setVerbosityLM("SUMMARY");
+      LevenbergMarquardtOptimizer optimizer(graph, initial_values, params);
+      Values result = optimizer.optimize();
+
+      // Overwrite the beginning of the preintegration for the next step.
+      prev_state =
+          NavState(result.at<Pose3>(X(index)), result.at<Vector3>(V(index)));
+      prev_bias = result.at<imuBias::ConstantBias>(B(index));
+
+      // Reset the preintegration object.
+      preintegrated->resetIntegrationAndSetBias(prev_bias);
+
+      // Print out the position and orientation error for comparison.
+      Vector3 result_position = prev_state.pose().translation();
+      Vector3 position_error = result_position - gps.head<3>();
+      current_position_error = position_error.norm();
+
+      Quaternion result_quat = prev_state.pose().rotation().toQuaternion();
+      Quaternion gps_quat(gps(6), gps(3), gps(4), gps(5));
+      Quaternion quat_error = result_quat * gps_quat.inverse();
+      quat_error.normalize();
+      Vector3 euler_angle_error(quat_error.x() * 2, quat_error.y() * 2,
+                                quat_error.z() * 2);
+      current_orientation_error = euler_angle_error.norm();
+
+      // display statistics
+      cout << "Position error:" << current_position_error << "\t "
+           << "Angular error:" << current_orientation_error << "\n"
+           << endl;
+
+      fprintf(fp_out, "%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f\n",
+              output_time, result_position(0), result_position(1),
+              result_position(2), result_quat.x(), result_quat.y(),
+              result_quat.z(), result_quat.w(), gps(0), gps(1), gps(2),
+              gps_quat.x(), gps_quat.y(), gps_quat.z(), gps_quat.w());
+
+      output_time += 1.0;
+
+    } else {
+      cerr << "ERROR parsing file\n";
+      return 1;
+    }
+  }
+  fclose(fp_out);
+  cout << "Complete, results written to " << output_filename << "\n\n";
+
+  return 0;
+}
--- /dev/null
+++ gtsam-4.1.0/examples/Data/quadraped_imu_data.csv
@@ -0,0 +1,2636 @@
+%time,field.header.seq,field.header.stamp,field.header.frame_id,field.orientation.x,field.orientation.y,field.orientation.z,field.orientation.w,field.orientation_covariance0,field.orientation_covariance1,field.orientation_covariance2,field.orientation_covariance3,field.orientation_covariance4,field.orientation_covariance5,field.orientation_covariance6,field.orientation_covariance7,field.orientation_covariance8,field.angular_velocity.x,field.angular_velocity.y,field.angular_velocity.z,field.angular_velocity_covariance0,field.angular_velocity_covariance1,field.angular_velocity_covariance2,field.angular_velocity_covariance3,field.angular_velocity_covariance4,field.angular_velocity_covariance5,field.angular_velocity_covariance6,field.angular_velocity_covariance7,field.angular_velocity_covariance8,field.linear_acceleration.x,field.linear_acceleration.y,field.linear_acceleration.z,field.linear_acceleration_covariance0,field.linear_acceleration_covariance1,field.linear_acceleration_covariance2,field.linear_acceleration_covariance3,field.linear_acceleration_covariance4,field.linear_acceleration_covariance5,field.linear_acceleration_covariance6,field.linear_acceleration_covariance7,field.linear_acceleration_covariance8
+117735250000,11048,117735250000,RH_EXTIMU,2.2932715788e-06,1.53196171221e-05,-0.703285780478,0.71090724482,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.19800998937e-07,-8.13380203893e-09,-7.22038459104e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245457587107,-0.000181612558247,9.8100077031,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117737750000,11049,117737750000,RH_EXTIMU,2.29313402886e-06,1.53196621872e-05,-0.70328584464,0.710907181346,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0268029415e-07,-5.10996651005e-08,-7.22029453453e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246233372419,-0.00017714749759,9.81001157075,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117737750000,11050,117740250000,RH_EXTIMU,2.29307998339e-06,1.53197209386e-05,-0.703285908801,0.710907117872,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.28894961166e-08,3.66612768662e-09,-7.22022488535e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244992819707,-0.000178649476366,9.80999936342,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117742750000,11051,117742750000,RH_EXTIMU,2.29322015822e-06,1.531966497e-05,-0.703285972962,0.710907054399,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.12113343221e-07,4.76958204019e-08,-7.22016100777e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244525990158,-0.000181660653484,9.80999679571,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117745250000,11052,117745250000,RH_EXTIMU,2.293183196e-06,1.53196615055e-05,-0.703286037122,0.710906990927,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.81693540833e-08,-2.21061727875e-08,-7.22009336014e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246087327017,-0.000178542674556,9.80998704598,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117747750000,11053,117747750000,RH_EXTIMU,2.29329139507e-06,1.53195613238e-05,-0.703286101282,0.710906927455,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.18803441961e-07,4.56022684731e-09,-7.22002706405e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244808220716,-0.000181947765531,9.81000178509,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117750250000,11054,117750250000,RH_EXTIMU,2.29320463572e-06,1.53195684906e-05,-0.703286165441,0.710906863984,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.24717115333e-08,-4.40772440141e-08,-7.21995169286e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246213828915,-0.000178047842864,9.80999242585,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117750250000,11055,117752750000,RH_EXTIMU,2.2932913045e-06,1.53195007692e-05,-0.703286229599,0.710906800514,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.82954801468e-08,1.09076674284e-08,-7.21985776802e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024522225298,-0.000180891416039,9.81003509629,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117755250000,11056,117755250000,RH_EXTIMU,2.29309344794e-06,1.53196727566e-05,-0.703286293756,0.710906737044,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.08388404483e-07,-1.28460937909e-08,-7.21977440579e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245213461921,-0.000175906863484,9.81000608935,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117757750000,11057,117757750000,RH_EXTIMU,2.29316299034e-06,1.53196814379e-05,-0.703286357913,0.710906673575,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.55688884737e-08,4.47240318075e-08,-7.21971848869e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244776732528,-0.000180521462445,9.80998867347,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117762750000,11058,117760250000,RH_EXTIMU,2.29329336854e-06,1.53195824688e-05,-0.703286422069,0.710906610106,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.30734970339e-07,1.77285196194e-08,-7.21965870892e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244880811467,-0.00018178797353,9.80998622901,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117762750000,11059,117762750000,RH_EXTIMU,2.29346102476e-06,1.53194455635e-05,-0.703286486225,0.710906546638,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.73279948265e-07,1.71269066204e-08,-7.21959389915e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245332844923,-0.000182313647277,9.80999880236,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117765250000,11060,117765250000,RH_EXTIMU,2.29328861395e-06,1.53194931639e-05,-0.70328655038,0.710906483171,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.23933033463e-07,-6.92717073101e-08,-7.21950602553e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246438505825,-0.000176454593377,9.81000353275,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117767750000,11061,117767750000,RH_EXTIMU,2.2932347149e-06,1.53195711494e-05,-0.703286614534,0.710906419704,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.36279925846e-08,1.46872759233e-08,-7.21944124447e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244868756476,-0.000178376840913,9.80999213137,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117770250000,11062,117770250000,RH_EXTIMU,2.29324288354e-06,1.53194222205e-05,-0.703286678688,0.710906356238,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.93401640611e-08,-7.94435817158e-08,-7.21937101628e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246818966152,-0.000181203011244,9.80999464601,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117772750000,11063,117772750000,RH_EXTIMU,2.29334011956e-06,1.53193373544e-05,-0.703286742841,0.710906292773,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.03951387808e-07,7.10245973005e-09,-7.21930125849e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244546602605,-0.000181295434791,9.81000279832,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117775250000,11064,117775250000,RH_EXTIMU,2.29339758781e-06,1.53193252454e-05,-0.703286806993,0.710906229308,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.03991495598e-08,2.61067521579e-08,-7.21921821507e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024530078765,-0.000179816386255,9.81001520402,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117777750000,11065,117777750000,RH_EXTIMU,2.29321328605e-06,1.53194107569e-05,-0.703286871145,0.710906165844,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.52025648402e-07,-5.44010003828e-08,-7.21914868296e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246114543589,-0.000176779202578,9.80998767173,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117780250000,11066,117780250000,RH_EXTIMU,2.29346682906e-06,1.53193439089e-05,-0.703286935296,0.71090610238,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.82709551224e-07,1.05292710498e-07,-7.21908096192e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243455110003,-0.000182903971445,9.81001128283,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117782750000,11067,117782750000,RH_EXTIMU,2.29346689621e-06,1.53194037111e-05,-0.703286999447,0.710906038917,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.2705656399e-08,3.47088488136e-08,-7.21901204274e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244904453409,-0.000178694839104,9.80999319876,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117785250000,11068,117785250000,RH_EXTIMU,2.29354782256e-06,1.53193775937e-05,-0.703287063597,0.710905975455,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.16218465478e-08,3.1338040657e-08,-7.21894458253e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244950317669,-0.000180523918674,9.80999732479,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117787750000,11069,117787750000,RH_EXTIMU,2.29347003814e-06,1.53193682817e-05,-0.703287127746,0.710905911993,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.80961105574e-08,-4.83997246667e-08,-7.21887250549e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246498335555,-0.000178285597786,9.80999058003,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117790250000,11070,117790250000,RH_EXTIMU,2.29348046574e-06,1.53192806352e-05,-0.703287191895,0.710905848532,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.6145567215e-08,-4.3319799211e-08,-7.21880606691e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245644492047,-0.000180658336284,9.80999408856,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117792750000,11071,117792750000,RH_EXTIMU,2.29357044321e-06,1.53191846988e-05,-0.703287256043,0.710905785072,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.06051697715e-07,-3.27738287266e-09,-7.21873195951e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245212177494,-0.000181344617064,9.81000696248,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117795250000,11072,117795250000,RH_EXTIMU,2.29356910901e-06,1.53191888447e-05,-0.70328732019,0.710905721612,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.18879634395e-09,2.2672175202e-09,-7.21864858755e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245192142085,-0.000179227576991,9.8100126012,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117797750000,11073,117797750000,RH_EXTIMU,2.293528312e-06,1.53192850058e-05,-0.703287384336,0.710905658153,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.64028065804e-08,3.2395600678e-08,-7.21857442193e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244845794011,-0.00017800513415,9.81000374321,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117800250000,11074,117800250000,RH_EXTIMU,2.2934606798e-06,1.531933274e-05,-0.703287448482,0.710905594694,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.44181789099e-08,-1.02443096786e-08,-7.21850481782e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245794011011,-0.000178191663677,9.80999156635,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117802750000,11075,117802750000,RH_EXTIMU,2.29352055818e-06,1.531923889e-05,-0.703287512628,0.710905531236,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.77596523245e-08,-1.90253739978e-08,-7.21843798182e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245466932176,-0.000181250623895,9.8099973546,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117805250000,11076,117805250000,RH_EXTIMU,2.29352719295e-06,1.53191733903e-05,-0.703287576772,0.710905467779,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.15280027586e-08,-3.28583567766e-08,-7.21836499285e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245872566982,-0.000179979310376,9.80999779452,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117807750000,11077,117807750000,RH_EXTIMU,2.29361719919e-06,1.53191164788e-05,-0.703287640916,0.710905404322,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.41113856269e-08,1.89332654046e-08,-7.218295102e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244600681146,-0.000181032282798,9.81000410965,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117810250000,11078,117810250000,RH_EXTIMU,2.29370588681e-06,1.53191312664e-05,-0.70328770506,0.710905340866,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.30214152016e-08,5.89683425628e-08,-7.2182156293e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244495852793,-0.000180157932095,9.81001515412,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117812750000,11079,117812750000,RH_EXTIMU,2.293627173e-06,1.53192368722e-05,-0.703287769202,0.710905277411,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.03280942112e-07,1.64337949599e-08,-7.21815268012e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245120458682,-0.000177534796119,9.80998176238,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117815250000,11080,117815250000,RH_EXTIMU,2.29371554886e-06,1.53191212973e-05,-0.703287833345,0.710905213956,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.16189917151e-07,-1.53473252791e-08,-7.21807632984e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245919893263,-0.000181354425988,9.81000829963,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117817750000,11081,117817750000,RH_EXTIMU,2.29356483423e-06,1.53191175175e-05,-0.703287897486,0.710905150502,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.26858616952e-08,-8.62863758714e-08,-7.21800781003e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024653876675,-0.000177867782103,9.80998484886,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117820250000,11082,117820250000,RH_EXTIMU,2.29366496674e-06,1.53190255687e-05,-0.703287961627,0.710905087048,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.09583408647e-07,4.70408199622e-09,-7.21794474583e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245039319774,-0.000181355682441,9.80999444568,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117822750000,11083,117822750000,RH_EXTIMU,2.29378833295e-06,1.5318962477e-05,-0.703288025767,0.710905023595,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.06561128218e-07,3.41877406042e-08,-7.21785992039e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024468876112,-0.000181171616384,9.81002275371,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117825250000,11084,117825250000,RH_EXTIMU,2.29360382653e-06,1.53191384861e-05,-0.703288089907,0.710904960143,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.03058814858e-07,-3.04841443468e-09,-7.21777533142e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245584579378,-0.000175469957056,9.8100033381,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117827750000,11085,117827750000,RH_EXTIMU,2.29369030993e-06,1.53190989107e-05,-0.703288154045,0.710904896691,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.23539533095e-08,2.68106682297e-08,-7.21771742482e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244759855336,-0.000181412439511,9.80999313688,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117830250000,11086,117830250000,RH_EXTIMU,2.29370369771e-06,1.53189843271e-05,-0.703288218184,0.71090483324,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.29846682943e-08,-5.69741562039e-08,-7.2176460484e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246457784194,-0.000180494376204,9.80999361466,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117834000000,11087,117832750000,RH_EXTIMU,2.29374880968e-06,1.53189861815e-05,-0.703288282321,0.710904769789,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.55153657902e-08,2.70959136944e-08,-7.21758906825e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024444089491,-0.000179724970632,9.80998414998,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117835250000,11088,117835250000,RH_EXTIMU,2.29384431474e-06,1.53188992091e-05,-0.703288346459,0.710904706339,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.04151767937e-07,4.93070927492e-09,-7.21752027048e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0002456763195,-0.000181035924299,9.80999620849,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117837750000,11089,117837750000,RH_EXTIMU,2.29392503979e-06,1.53188568556e-05,-0.703288410595,0.71090464289,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.06420829626e-08,2.19908083707e-08,-7.21743933102e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244774548526,-0.000180472599878,9.81001374013,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117840250000,11090,117840250000,RH_EXTIMU,2.29383411463e-06,1.53189095618e-05,-0.703288474731,0.710904579442,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.0462997141e-08,-2.05221520842e-08,-7.21736130557e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245817253437,-0.000177933731246,9.81000238445,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117842750000,11091,117842750000,RH_EXTIMU,2.29379940787e-06,1.53189257598e-05,-0.703288538866,0.710904515994,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.79496434611e-08,-9.65502627624e-09,-7.21729035466e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245269647221,-0.000179062655707,9.80999963835,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117845250000,11092,117845250000,RH_EXTIMU,2.29391580474e-06,1.5318897069e-05,-0.703288603,0.710904452546,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.32423725969e-08,4.98312058449e-08,-7.21720619108e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244577714384,-0.000180931907794,9.81002265529,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117847750000,11093,117847750000,RH_EXTIMU,2.29378125018e-06,1.53189690913e-05,-0.703288667134,0.7109043891,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.16143928999e-07,-3.40839139757e-08,-7.21712456183e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245952644073,-0.000177430983727,9.8100057464,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117850250000,11094,117850250000,RH_EXTIMU,2.29376947572e-06,1.53189997021e-05,-0.703288731267,0.710904325654,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.30165903617e-08,1.14442430487e-08,-7.21705877692e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244928200716,-0.00017919965894,9.80999257573,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117852750000,11095,117852750000,RH_EXTIMU,2.29391222813e-06,1.53189241669e-05,-0.703288795399,0.710904262209,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.24587473043e-07,3.80181438574e-08,-7.21700115213e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244793051607,-0.000181736454851,9.80999089093,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117855250000,11096,117855250000,RH_EXTIMU,2.29408158877e-06,1.53188375657e-05,-0.703288859531,0.710904198764,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.45946262954e-07,4.66952492771e-08,-7.21692462596e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244319275825,-0.000182160434341,9.81001263084,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117857750000,11097,117857750000,RH_EXTIMU,2.29385849259e-06,1.53189249544e-05,-0.703288923662,0.71090413532,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.75145237034e-07,-7.51610452355e-08,-7.2168400897e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024749135331,-0.000175272691117,9.80999484185,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117860250000,11098,117860250000,RH_EXTIMU,2.29387030537e-06,1.53188320026e-05,-0.703288987792,0.710904071876,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.99181116813e-08,-4.55577702514e-08,-7.21678356225e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245247084824,-0.000181255984365,9.80998723431,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117862750000,11099,117862750000,RH_EXTIMU,2.29399719621e-06,1.53187233327e-05,-0.703289051922,0.710904008433,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.34209171098e-07,1.02494809842e-08,-7.21671997493e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245240994457,-0.00018153057982,9.80999387768,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117865250000,11100,117865250000,RH_EXTIMU,2.29399746803e-06,1.53186713293e-05,-0.703289116052,0.710903944991,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.03156707213e-08,-2.87628271839e-08,-7.21663940848e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024574933073,-0.00017974890485,9.81000663858,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117867750000,11101,117867750000,RH_EXTIMU,2.29396440763e-06,1.53186907067e-05,-0.70328918018,0.710903881549,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.88022297627e-08,-6.92065188331e-09,-7.21656007441e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024525769481,-0.000178826343134,9.8100085921,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117870250000,11102,117870250000,RH_EXTIMU,2.29394633718e-06,1.53187487937e-05,-0.703289244308,0.710903818108,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.20563221765e-08,2.35281775551e-08,-7.21648537229e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024497837777,-0.000178712729759,9.81000443016,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117872750000,11103,117872750000,RH_EXTIMU,2.29395143597e-06,1.53187564506e-05,-0.703289308435,0.710903754668,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.05902162341e-10,7.88316821443e-09,-7.21641320151e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245254080177,-0.000179525852995,9.81000090119,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117875250000,11104,117875250000,RH_EXTIMU,2.2940317782e-06,1.53187306818e-05,-0.703289372562,0.710903691228,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.10931029064e-08,3.12075283234e-08,-7.21634365474e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244781079594,-0.000180580237773,9.81000131487,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117875250000,11105,117877750000,RH_EXTIMU,2.29407251297e-06,1.53187061399e-05,-0.703289436688,0.710903627789,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.78770899998e-08,9.62091861207e-09,-7.21627167673e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024525321109,-0.000180024442593,9.81000030626,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117880250000,11106,117880250000,RH_EXTIMU,2.29394346129e-06,1.53187137403e-05,-0.703289500813,0.710903564351,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.67685911979e-08,-6.7626273803e-08,-7.21620025486e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246825806567,-0.000177526781539,9.80998713842,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117884000000,11107,117882750000,RH_EXTIMU,2.29404581733e-06,1.53186108043e-05,-0.703289564938,0.710903500913,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.17029581377e-07,-2.93608688345e-10,-7.21614199097e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244569905607,-0.000182029511277,9.80999251816,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117884000000,11108,117885250000,RH_EXTIMU,2.29414299372e-06,1.53185815823e-05,-0.703289629062,0.710903437475,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.26098806917e-08,3.87150493313e-08,-7.21607138281e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244850404153,-0.000180295769757,9.80999865111,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117884000000,11109,117887750000,RH_EXTIMU,2.29426229492e-06,1.53185869049e-05,-0.703289693185,0.710903374039,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.57568843785e-08,7.08094613516e-08,-7.21600789352e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244120720586,-0.000180585559964,9.80999456027,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117890250000,11110,117890250000,RH_EXTIMU,2.29429101847e-06,1.53185391872e-05,-0.703289757308,0.710903310602,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.40854787474e-08,-1.03176479115e-08,-7.21593485472e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024598638619,-0.000179927910379,9.80999922387,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117892750000,11111,117892750000,RH_EXTIMU,2.2941041534e-06,1.53184819463e-05,-0.70328982143,0.710903247167,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.31666244212e-08,-1.37030714333e-07,-7.2158588209e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247453395218,-0.00017797132513,9.8099900986,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117895250000,11112,117895250000,RH_EXTIMU,2.29425346957e-06,1.53183901638e-05,-0.703289885552,0.710903183732,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.37461504593e-07,3.24709042037e-08,-7.21579061012e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244139082073,-0.000182088026236,9.81000856193,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117897750000,11113,117897750000,RH_EXTIMU,2.29416494343e-06,1.53184488473e-05,-0.703289949673,0.710903120298,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.24618317088e-08,-1.57733085925e-08,-7.21570918639e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246119398294,-0.000177390627532,9.8100015463,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117900250000,11114,117900250000,RH_EXTIMU,2.29410472943e-06,1.53184276885e-05,-0.703290013793,0.710903056864,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.14382408851e-08,-4.52521220134e-08,-7.21564083489e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245812946347,-0.000179235755088,9.80999377703,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117902750000,11115,117902750000,RH_EXTIMU,2.29432176047e-06,1.53183109613e-05,-0.703290077913,0.710902993431,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.90007068417e-07,5.63829202735e-08,-7.21556984201e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243933948847,-0.000183371690358,9.81001690066,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117905250000,11116,117905250000,RH_EXTIMU,2.29425633309e-06,1.53184307013e-05,-0.703290142032,0.710902929999,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.03677417063e-07,3.19469480106e-08,-7.21547740435e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245241122195,-0.000176858238855,9.81001561565,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117907750000,11117,117907750000,RH_EXTIMU,2.29409991426e-06,1.53185055725e-05,-0.70329020615,0.710902866567,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.30181623199e-07,-4.47657064785e-08,-7.21541414544e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246038366215,-0.000177480854079,9.80998410192,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117910250000,11118,117910250000,RH_EXTIMU,2.29422321576e-06,1.53184521757e-05,-0.703290270267,0.710902803136,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.01069203007e-07,3.96651282868e-08,-7.21534736193e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244570304429,-0.000181155932692,9.81000127256,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117912750000,11119,117912750000,RH_EXTIMU,2.29421699811e-06,1.53184450626e-05,-0.703290334384,0.710902739706,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.3681109972e-09,-6.88399752662e-09,-7.21527374875e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245617227321,-0.000179260069057,9.8099970186,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117915250000,11120,117915250000,RH_EXTIMU,2.2943531705e-06,1.53183193664e-05,-0.703290398501,0.710902676276,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.49067136159e-07,5.78841071652e-09,-7.21520554986e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245044336547,-0.000182469486928,9.81000417563,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117917750000,11121,117917750000,RH_EXTIMU,2.2943312631e-06,1.53183068237e-05,-0.703290462616,0.710902612847,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.50014401742e-09,-1.87995163783e-08,-7.21512374153e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245691520598,-0.000178766145237,9.81000834715,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117920250000,11122,117920250000,RH_EXTIMU,2.29433251426e-06,1.53183856406e-05,-0.703290526731,0.710902549419,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.27312668137e-08,4.61884903714e-08,-7.21505018464e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244474272161,-0.000178791389872,9.81000506184,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117922750000,11123,117922750000,RH_EXTIMU,2.29438340581e-06,1.53183650263e-05,-0.703290590846,0.710902485991,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.14435740743e-08,1.75690012982e-08,-7.21497643765e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245179737269,-0.000180409699523,9.81000577403,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117926500000,11124,117925250000,RH_EXTIMU,2.29420480503e-06,1.53184063003e-05,-0.70329065496,0.710902422564,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.23894194024e-07,-7.63535399714e-08,-7.21491804472e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246497012585,-0.000177008695411,9.80996950736,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117927750000,11125,117927750000,RH_EXTIMU,2.2944291238e-06,1.53182289498e-05,-0.703290719073,0.710902359137,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.28260309748e-07,2.60054786683e-08,-7.21485600015e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244791117847,-0.000183519759132,9.81000039953,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117930250000,11126,117930250000,RH_EXTIMU,2.29456070467e-06,1.53182530912e-05,-0.703290783185,0.710902295711,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.21522549129e-08,8.84210301812e-08,-7.2147751644e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243852531168,-0.000180016919264,9.81001333144,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117932750000,11127,117932750000,RH_EXTIMU,2.29431967544e-06,1.53183222486e-05,-0.703290847297,0.710902232285,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.75086705629e-07,-9.56200179694e-08,-7.21469529981e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247275199491,-0.000176145473723,9.80999474039,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117935250000,11128,117935250000,RH_EXTIMU,2.29440937657e-06,1.53181998972e-05,-0.703290911408,0.710902168861,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.20755944298e-07,-1.84555310997e-08,-7.21462475188e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245400806271,-0.000181936345996,9.81000467535,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117937750000,11129,117937750000,RH_EXTIMU,2.29436909093e-06,1.53181554056e-05,-0.703290975519,0.710902105436,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.02317338339e-09,-4.73098011689e-08,-7.21455129095e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245992317878,-0.000179262093885,9.80999842626,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117940250000,11130,117940250000,RH_EXTIMU,2.29437377465e-06,1.5318132894e-05,-0.703291039629,0.710902042013,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.62315722049e-08,-9.50810329743e-09,-7.21448137131e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245353748295,-0.000179655494027,9.80999737692,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117942750000,11131,117942750000,RH_EXTIMU,2.29442410713e-06,1.53180828491e-05,-0.703291103738,0.71090197859,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.7684126442e-08,5.16629073019e-10,-7.21441333636e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245253499565,-0.000180441821452,9.80999696906,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117945250000,11132,117945250000,RH_EXTIMU,2.29449498249e-06,1.53181308138e-05,-0.703291167846,0.710901915168,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.42238122146e-08,6.78149387639e-08,-7.21434120757e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0002440680045,-0.000179432803297,9.81000557869,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117950250000,11133,117947750000,RH_EXTIMU,2.29443659611e-06,1.53181433149e-05,-0.703291231954,0.710901851746,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.93370569492e-08,-2.50809626356e-08,-7.21427477903e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024598606336,-0.000178794836883,9.80998606516,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117950250000,11134,117950250000,RH_EXTIMU,2.29451989816e-06,1.53180412625e-05,-0.703291296062,0.710901788325,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.05695690891e-07,-1.05113526324e-08,-7.21420160606e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245512957839,-0.000181131501575,9.81000448162,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117952750000,11135,117952750000,RH_EXTIMU,2.29452616437e-06,1.53180299509e-05,-0.703291360169,0.710901724905,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.08300273081e-08,-2.24807237174e-09,-7.21412979535e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245217353355,-0.000179529803524,9.80999875337,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117955250000,11136,117955250000,RH_EXTIMU,2.29456191799e-06,1.53180276648e-05,-0.703291424275,0.710901661485,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.25220707437e-08,1.9475521828e-08,-7.21405611531e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024499357425,-0.000179714071188,9.81000483327,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117957750000,11137,117957750000,RH_EXTIMU,2.29450678974e-06,1.53180162433e-05,-0.70329148838,0.710901598066,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.40245027533e-08,-3.68531515094e-08,-7.2139773708e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246065338548,-0.000178947436708,9.8100037468,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117960250000,11138,117960250000,RH_EXTIMU,2.29454110508e-06,1.53179932928e-05,-0.703291552485,0.710901534647,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.33305641514e-08,6.91399423605e-09,-7.21390818704e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244997922495,-0.000180144171537,9.81000021635,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117962750000,11139,117962750000,RH_EXTIMU,2.2945599764e-06,1.53179904013e-05,-0.703291616589,0.710901471229,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.32613578165e-08,9.63263566091e-09,-7.21384489064e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245037057529,-0.000179652255868,9.80998890925,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117965250000,11140,117965250000,RH_EXTIMU,2.29476396381e-06,1.53178906141e-05,-0.703291680692,0.710901407812,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.73057519201e-07,5.86784837545e-08,-7.21377540944e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244314314458,-0.000182595470489,9.81000894169,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117967750000,11141,117967750000,RH_EXTIMU,2.29458851795e-06,1.53179588095e-05,-0.703291744795,0.710901344395,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.37246831623e-07,-5.92680635913e-08,-7.21369385449e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246655155014,-0.000176350795034,9.80999536948,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117970250000,11142,117970250000,RH_EXTIMU,2.29457988502e-06,1.53179808714e-05,-0.703291808897,0.710901280979,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.64205169058e-08,8.34931302744e-09,-7.21362904981e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244928119295,-0.000179123446168,9.80999339681,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117972750000,11143,117972750000,RH_EXTIMU,2.29487254989e-06,1.53179011831e-05,-0.703291872999,0.710901217564,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.12181903804e-07,1.20002088873e-07,-7.21356470307e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024294471992,-0.000183896397151,9.81001080849,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117975250000,11144,117975250000,RH_EXTIMU,2.29470655891e-06,1.53179740384e-05,-0.7032919371,0.710901154149,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.34491494367e-07,-5.12982867263e-08,-7.21347489318e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247387977689,-0.000175771425055,9.8100018062,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117977750000,11145,117977750000,RH_EXTIMU,2.29474459421e-06,1.53179363488e-05,-0.7032920012,0.710901090735,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.37388541048e-08,6.24478350098e-10,-7.21340481274e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244292799577,-0.000181157166198,9.8100100892,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117980250000,11146,117980250000,RH_EXTIMU,2.29475249471e-06,1.53179650765e-05,-0.7032920653,0.710901027321,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.07680644751e-08,2.14425323898e-08,-7.21333083103e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245356689708,-0.000178900479343,9.80999906106,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117982750000,11147,117982750000,RH_EXTIMU,2.29475599279e-06,1.53179545147e-05,-0.703292129399,0.710900963908,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.83374506784e-09,-3.37915677452e-09,-7.21326432379e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245451278688,-0.000179489694006,9.80999178746,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117985250000,11148,117985250000,RH_EXTIMU,2.29492038147e-06,1.53178730901e-05,-0.703292193497,0.710900900496,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.40205384598e-07,4.68421482061e-08,-7.21319344338e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024447977043,-0.000181965865006,9.81000892619,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117987750000,11149,117987750000,RH_EXTIMU,2.29472278314e-06,1.53178623356e-05,-0.703292257595,0.710900837085,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.05425544851e-07,-1.16632396966e-07,-7.21311187582e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247493566079,-0.000177246084925,9.8099961299,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117990250000,11150,117990250000,RH_EXTIMU,2.29471291297e-06,1.53178238356e-05,-0.703292321692,0.710900773674,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.69499258989e-08,-2.67896608166e-08,-7.21304292352e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245299268502,-0.00017981566964,9.809998558,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117992750000,11151,117992750000,RH_EXTIMU,2.29487490078e-06,1.53177743856e-05,-0.703292385788,0.710900710263,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.20849877791e-07,6.3676002744e-08,-7.21297231453e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243973748896,-0.000181830880042,9.81001112392,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117995250000,11152,117995250000,RH_EXTIMU,2.29470271854e-06,1.53178921731e-05,-0.703292449884,0.710900646854,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.63292963512e-07,-2.92280333964e-08,-7.21288893694e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246538263906,-0.000175678977443,9.80999563973,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+117997750000,11153,117997750000,RH_EXTIMU,2.29479577892e-06,1.5317776804e-05,-0.703292513979,0.710900583445,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.1873777786e-07,-1.25944895054e-08,-7.21283315069e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245066689004,-0.000182291407342,9.80999207723,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118000250000,11154,118000250000,RH_EXTIMU,2.29470991182e-06,1.53177367941e-05,-0.703292578073,0.710900520036,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.54215914612e-08,-7.04068569309e-08,-7.21275955105e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024654861863,-0.000178374003025,9.80999064678,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118002750000,11155,118002750000,RH_EXTIMU,2.2948727564e-06,1.53176947204e-05,-0.703292642167,0.710900456628,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.17186961571e-07,6.83530747235e-08,-7.21268891277e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243925612119,-0.000181520462694,9.81000906816,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118005250000,11156,118005250000,RH_EXTIMU,2.29480205256e-06,1.53177109545e-05,-0.70329270626,0.710900393221,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.8442768903e-08,-2.98883780686e-08,-7.21261265037e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246271617064,-0.000178291519161,9.80999716458,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118007750000,11157,118007750000,RH_EXTIMU,2.2948404439e-06,1.53176537834e-05,-0.703292770353,0.710900329814,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.49021542833e-08,-1.02547559566e-08,-7.21254773706e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244924939374,-0.00018060466832,9.80999428621,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118010250000,11158,118010250000,RH_EXTIMU,2.29495114122e-06,1.53176236779e-05,-0.703292834444,0.710900266408,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.07959773286e-08,4.58198222257e-08,-7.212484162e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024481014205,-0.000180667825335,9.80999390266,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118012750000,11159,118012750000,RH_EXTIMU,2.29500992391e-06,1.53175423162e-05,-0.703292898536,0.710900203003,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.01095496325e-08,-1.25395546367e-08,-7.21240971674e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245515656616,-0.00018076863324,9.81000375961,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118015250000,11160,118015250000,RH_EXTIMU,2.29496472284e-06,1.53175735559e-05,-0.703292962626,0.710900139598,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.23815085437e-08,-7.00572964288e-09,-7.21232346707e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245490282352,-0.000178289855974,9.81001472363,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118017750000,11161,118017750000,RH_EXTIMU,2.29481227567e-06,1.53176557041e-05,-0.703293026716,0.710900076194,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.32017392431e-07,-3.83934091443e-08,-7.21225440758e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245823151737,-0.0001772444407,9.80999029849,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118020250000,11162,118020250000,RH_EXTIMU,2.29505289223e-06,1.53176334366e-05,-0.703293090806,0.71090001279,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.50273679607e-07,1.23374492494e-07,-7.21219215234e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243080902751,-0.000182263773304,9.8100042213,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118022750000,11163,118022750000,RH_EXTIMU,2.2949684849e-06,1.53176358508e-05,-0.703293154894,0.710899949387,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.84606848508e-08,-4.54582002935e-08,-7.21211664071e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0002465428001,-0.000178229191035,9.8099932519,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118025250000,11164,118025250000,RH_EXTIMU,2.2950193336e-06,1.53175568799e-05,-0.703293218982,0.710899885985,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.42521981142e-08,-1.56438481482e-08,-7.21204438871e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245375855196,-0.000180873394636,9.81000468018,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118027750000,11165,118027750000,RH_EXTIMU,2.29506380793e-06,1.53175325644e-05,-0.70329328307,0.710899822584,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.98759173412e-08,1.18533396239e-08,-7.21196443822e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244940439218,-0.000180079158255,9.81001256123,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118030250000,11166,118030250000,RH_EXTIMU,2.29487577296e-06,1.53175929927e-05,-0.703293347156,0.710899759183,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.40036564543e-07,-7.07689400556e-08,-7.21190270456e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246607838819,-0.000176757339901,9.80997395283,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118032750000,11167,118032750000,RH_EXTIMU,2.29498295959e-06,1.53174114095e-05,-0.703293411242,0.710899695782,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.64025882922e-07,-4.23037852573e-08,-7.2118377418e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246030759473,-0.000182246166926,9.8099945412,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118035250000,11168,118035250000,RH_EXTIMU,2.29511026078e-06,1.53173478217e-05,-0.703293475328,0.710899632382,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.09077120621e-07,3.61196448822e-08,-7.21176282619e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244474101917,-0.000181055228124,9.81000934319,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118037750000,11169,118037750000,RH_EXTIMU,2.29513783342e-06,1.53173738748e-05,-0.703293539413,0.710899568983,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.92442598814e-09,3.09894571349e-08,-7.21168684544e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244790041385,-0.000179498931566,9.81000673781,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118040250000,11170,118040250000,RH_EXTIMU,2.29519068294e-06,1.53174070777e-05,-0.703293603497,0.710899505585,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.22771396327e-08,4.92773309288e-08,-7.21161440503e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244459632514,-0.000179624486301,9.81000397547,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118040250000,11171,118042750000,RH_EXTIMU,2.29515879296e-06,1.53174529688e-05,-0.70329366758,0.710899442187,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.30547139138e-08,8.8159657784e-09,-7.21154273389e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245714026909,-0.000178361505674,9.80999680709,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118040250000,11172,118045250000,RH_EXTIMU,2.29523033615e-06,1.53173704695e-05,-0.703293731663,0.710899378789,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.80066536826e-08,-6.00704295366e-09,-7.21146712631e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245005149329,-0.000181476813612,9.81001147265,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118040250000,11173,118047750000,RH_EXTIMU,2.29509301758e-06,1.53174281956e-05,-0.703293795745,0.710899315393,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.09672826373e-07,-4.37710589092e-08,-7.21139059111e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246205483512,-0.000176997696647,9.80999408067,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118040250000,11174,118050250000,RH_EXTIMU,2.29514866856e-06,1.53173859557e-05,-0.703293859827,0.710899251997,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.63171216641e-08,7.94769853547e-09,-7.21132360473e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245079316151,-0.000180565813704,9.80999981617,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118052750000,11175,118052750000,RH_EXTIMU,2.29514522694e-06,1.5317357738e-05,-0.703293923908,0.710899188602,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.48205826273e-08,-1.732514071e-08,-7.211248038e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245656989698,-0.000179480457234,9.8100012566,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118055250000,11176,118055250000,RH_EXTIMU,2.29514375644e-06,1.53173421959e-05,-0.703293987988,0.710899125207,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.8098541508e-09,-9.0072603374e-09,-7.21117579523e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245380688407,-0.000179527590557,9.81000060117,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118057750000,11177,118057750000,RH_EXTIMU,2.29515942901e-06,1.53173259898e-05,-0.703294052068,0.710899061813,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.89330486572e-08,2.60362656333e-10,-7.21110430045e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245278189195,-0.000179707112884,9.80999998931,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118060250000,11178,118060250000,RH_EXTIMU,2.29517928844e-06,1.5317306654e-05,-0.703294116147,0.710898998419,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.30750502845e-08,8.36146795156e-10,-7.21103282311e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245295186887,-0.000179759119289,9.80999978535,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118062750000,11179,118062750000,RH_EXTIMU,2.29519878806e-06,1.53172868563e-05,-0.703294180225,0.710898935026,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.3130317767e-08,3.70963379457e-10,-7.21096123454e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245302320899,-0.000179750126366,9.80999980036,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118066500000,11180,118065250000,RH_EXTIMU,2.29521739346e-06,1.53172678279e-05,-0.703294244303,0.710898871634,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.21888984091e-08,3.05379324332e-10,-7.21088962368e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024530217568,-0.000179731853147,9.80999985802,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118067750000,11181,118067750000,RH_EXTIMU,2.29525604965e-06,1.53172569055e-05,-0.70329430838,0.710898808243,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.90313896388e-08,1.61967292548e-08,-7.2108147517e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024504564988,-0.000179837194819,9.81000579726,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118070250000,11182,118070250000,RH_EXTIMU,2.29529013601e-06,1.53172042188e-05,-0.703294372456,0.710898744852,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.99305864697e-08,-1.01266490193e-08,-7.21075113715e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245104237657,-0.000180772333058,9.80999282896,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118072750000,11183,118072750000,RH_EXTIMU,2.29535234281e-06,1.53172057889e-05,-0.703294436532,0.710898681461,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.53963294564e-08,3.65518414923e-08,-7.21067372813e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245094660916,-0.000179359947686,9.81000558277,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118075250000,11184,118075250000,RH_EXTIMU,2.29536758646e-06,1.53172398496e-05,-0.703294500607,0.710898618072,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.59281351456e-09,2.86066545124e-08,-7.21060337595e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024475803752,-0.000179323358023,9.80999864387,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118077750000,11185,118077750000,RH_EXTIMU,2.2955383739e-06,1.53171956956e-05,-0.703294564681,0.710898554682,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.228741988e-07,7.16389976973e-08,-7.21053896203e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244124300974,-0.000181758381979,9.81000362467,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118080250000,11186,118080250000,RH_EXTIMU,2.29532883035e-06,1.53172863788e-05,-0.703294628755,0.710898491294,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.6929139515e-07,-6.56643653835e-08,-7.21045772239e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024725621286,-0.000175456709363,9.80998911769,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118080250000,11187,118082750000,RH_EXTIMU,2.29541267421e-06,1.53171439419e-05,-0.703294692829,0.710898427906,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.28725158506e-07,-3.31738639653e-08,-7.2103951642e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245218083916,-0.000182365548537,9.80999936879,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118085250000,11188,118085250000,RH_EXTIMU,2.29543098756e-06,1.53170942121e-05,-0.703294756901,0.710898364519,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.92964313222e-08,-1.73194485263e-08,-7.21032137121e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245520941168,-0.000179799090243,9.80999945376,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118087750000,11189,118087750000,RH_EXTIMU,2.2953762389e-06,1.53170929754e-05,-0.703294820973,0.710898301132,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.95392585995e-08,-3.0847822823e-08,-7.21024930052e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245772414654,-0.000178711439336,9.80999635995,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118090250000,11190,118090250000,RH_EXTIMU,2.29543427136e-06,1.53170214686e-05,-0.703294885044,0.710898237746,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.41379407535e-08,-7.35705764149e-09,-7.21017797137e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024532167667,-0.000180896150825,9.81000221238,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118092750000,11191,118092750000,RH_EXTIMU,2.29534889124e-06,1.53170207812e-05,-0.703294949115,0.710898174361,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.72689847979e-08,-4.77698444232e-08,-7.21010457894e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246329518893,-0.000177968702191,9.80999307379,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118092750000,11192,118095250000,RH_EXTIMU,2.2954739403e-06,1.53169573867e-05,-0.703295013185,0.710898110976,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.07687194587e-07,3.49625441982e-08,-7.2100410719e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244151319976,-0.000181839236718,9.81000084708,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118096500000,11193,118097750000,RH_EXTIMU,2.295516623e-06,1.53169446613e-05,-0.703295077254,0.710898047592,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.23357309636e-08,1.7436637262e-08,-7.20996399136e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245422337511,-0.00017954715839,9.81000387263,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118096500000,11194,118100250000,RH_EXTIMU,2.2954732079e-06,1.53169417133e-05,-0.703295141323,0.710897984208,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.21308543231e-08,-2.54444610262e-08,-7.20988661846e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245748426563,-0.00017893664418,9.8100047751,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118102750000,11195,118102750000,RH_EXTIMU,2.29538945314e-06,1.53169694303e-05,-0.703295205391,0.710897920826,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.23260436561e-08,-3.07012329187e-08,-7.20981245457e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245806903094,-0.000178160564857,9.80999722081,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118105250000,11196,118105250000,RH_EXTIMU,2.29544144208e-06,1.53168974305e-05,-0.703295269458,0.710897857443,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.09782405812e-08,-1.10377759489e-08,-7.20974955398e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245374121313,-0.000180913348319,9.80999188097,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118107750000,11197,118107750000,RH_EXTIMU,2.29554492211e-06,1.53168140643e-05,-0.703295333525,0.710897794062,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.06657251708e-07,1.14687461558e-08,-7.20968436491e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244873809324,-0.000181103128422,9.80999512481,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118110250000,11198,118110250000,RH_EXTIMU,2.29565155442e-06,1.5316839988e-05,-0.703295397592,0.71089773068,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.69595358076e-08,7.53974857666e-08,-7.209612231e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244062207555,-0.000180025294643,9.81000768095,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118112750000,11199,118112750000,RH_EXTIMU,2.2956704661e-06,1.53169207425e-05,-0.703295461657,0.7108976673,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.37785693463e-08,5.7225914668e-08,-7.20952683505e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244541465689,-0.000178815452228,9.81001728413,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118115250000,11200,118115250000,RH_EXTIMU,2.29546719499e-06,1.53169523258e-05,-0.703295525722,0.71089760392,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.32472445552e-07,-9.57467658182e-08,-7.20945459646e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247267015004,-0.000177026788555,9.80998573346,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118117750000,11201,118117750000,RH_EXTIMU,2.29563009387e-06,1.53168069563e-05,-0.703295589786,0.710897540541,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.75335116397e-07,9.63755171533e-09,-7.20939011787e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244683309633,-0.000182842922134,9.81000458195,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118120250000,11202,118120250000,RH_EXTIMU,2.29554774263e-06,1.53168300759e-05,-0.70329565385,0.710897477163,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.89411696264e-08,-3.2526336294e-08,-7.20930678808e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246243879713,-0.000177643351221,9.81000289837,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118122750000,11203,118122750000,RH_EXTIMU,2.29545358789e-06,1.53168498868e-05,-0.703295717912,0.710897413785,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.37924711963e-08,-4.10490975785e-08,-7.20924170713e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245775213651,-0.000178230673598,9.80998710083,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118125250000,11204,118125250000,RH_EXTIMU,2.29578371256e-06,1.53166984899e-05,-0.703295781975,0.710897350408,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.73830626066e-07,1.00297022009e-07,-7.20918273719e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243041520616,-0.000185137313605,9.81000914788,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118127750000,11205,118127750000,RH_EXTIMU,2.29560273549e-06,1.53167995745e-05,-0.703295846036,0.710897287031,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.58897390766e-07,-4.36768155547e-08,-7.20909214473e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247079751899,-0.000175108887501,9.80999782559,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118130250000,11206,118130250000,RH_EXTIMU,2.2956382615e-06,1.53167348366e-05,-0.703295910097,0.710897223655,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.75295239329e-08,-1.61704139009e-08,-7.20903602709e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245022524097,-0.000181185683112,9.80999050196,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118130250000,11207,118132750000,RH_EXTIMU,2.29576425607e-06,1.5316679455e-05,-0.703295974158,0.71089716028,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.03716398572e-07,4.005160669e-08,-7.20895827219e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024468982538,-0.000180889868269,9.81001176601,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118135250000,11208,118135250000,RH_EXTIMU,2.29569509041e-06,1.53167044353e-05,-0.703296038217,0.710897096905,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.24892302827e-08,-2.40495061725e-08,-7.20888997992e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245732026344,-0.000178490268038,9.80998935256,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118137750000,11209,118137750000,RH_EXTIMU,2.29589011429e-06,1.53166002857e-05,-0.703296102277,0.710897033531,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.70413310581e-07,5.1154751572e-08,-7.20882086302e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244076591358,-0.000182753552568,9.81001071824,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118140250000,11210,118140250000,RH_EXTIMU,2.29579942433e-06,1.53167174515e-05,-0.703296166335,0.710896970157,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.16597487329e-07,1.62676417032e-08,-7.20873151097e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245614338167,-0.000176475157353,9.8100126023,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118142750000,11211,118142750000,RH_EXTIMU,2.29571836944e-06,1.53167990202e-05,-0.703296230393,0.710896906785,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.10896026573e-08,1.44397435842e-09,-7.20865177213e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245208168795,-0.000178228435544,9.81001139819,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118146500000,11212,118145250000,RH_EXTIMU,2.29567663966e-06,1.53168200257e-05,-0.703296294449,0.710896843412,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.46496257236e-08,-1.08736433083e-08,-7.20857793907e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245512293085,-0.000178915159277,9.8099986001,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118147750000,11213,118147750000,RH_EXTIMU,2.29583128639e-06,1.53167170281e-05,-0.703296358506,0.710896780041,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.46801864932e-07,2.90923217905e-08,-7.20851839459e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244693362198,-0.000182285597004,9.8099963476,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118150250000,11214,118150250000,RH_EXTIMU,2.29572244565e-06,1.53167531459e-05,-0.703296422562,0.71089671667,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.13195112951e-08,-4.00381977953e-08,-7.20844355202e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246401124769,-0.000177023092602,9.80998997506,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118152750000,11215,118152750000,RH_EXTIMU,2.29577278202e-06,1.53166454946e-05,-0.703296486617,0.7108966533,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.00970197005e-08,-3.22431510008e-08,-7.20837706736e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245544995389,-0.000181461301604,9.80999748064,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118152750000,11216,118155250000,RH_EXTIMU,2.29578066453e-06,1.53165954393e-05,-0.703296550671,0.71089658993,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.35471638624e-08,-2.33734784591e-08,-7.20830823868e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245568726252,-0.000179661114086,9.80999222166,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118157750000,11217,118157750000,RH_EXTIMU,2.29593741223e-06,1.53165133658e-05,-0.703296614725,0.710896526561,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.36223998231e-07,4.21743014039e-08,-7.20824571434e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244397808301,-0.000181986692327,9.80999859276,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118160250000,11218,118160250000,RH_EXTIMU,2.29597391489e-06,1.53165040218e-05,-0.703296678779,0.710896463192,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.6918246874e-08,1.58824597921e-08,-7.20816790886e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245246632602,-0.000179455071648,9.81000469251,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118162750000,11219,118162750000,RH_EXTIMU,2.29588754308e-06,1.53165387407e-05,-0.703296742831,0.710896399824,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.77540676761e-08,-2.81919346859e-08,-7.20809178924e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246040111909,-0.000177935451458,9.80999928258,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118165250000,11220,118165250000,RH_EXTIMU,2.29591306465e-06,1.53164975755e-05,-0.703296806883,0.710896336457,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.85768799141e-08,-8.39316957653e-09,-7.20802116901e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245045231325,-0.000180385875488,9.81000284063,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118167750000,11221,118167750000,RH_EXTIMU,2.29594419494e-06,1.53165268436e-05,-0.703296870934,0.710896273091,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.13824200444e-09,3.48191159607e-08,-7.20794743852e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244771822934,-0.000179231180711,9.81000310777,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118170250000,11222,118170250000,RH_EXTIMU,2.29593229682e-06,1.53165274372e-05,-0.703296934985,0.710896209725,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.19946801878e-09,-5.69791267423e-09,-7.20787586472e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245711174995,-0.000179228291908,9.8099972411,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118172750000,11223,118172750000,RH_EXTIMU,2.29603215107e-06,1.53164637577e-05,-0.703296999035,0.710896146359,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.3518528514e-08,2.0624883608e-08,-7.20779727202e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244843113992,-0.000181073578323,9.81001500486,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118175250000,11224,118175250000,RH_EXTIMU,2.29586261303e-06,1.53165799528e-05,-0.703297063084,0.710896082995,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.60893732956e-07,-2.86475404974e-08,-7.20772376939e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245905086496,-0.00017607085898,9.80998977579,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118177750000,11225,118177750000,RH_EXTIMU,2.29602386253e-06,1.5316507759e-05,-0.703297127133,0.710896019631,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.33225448783e-07,5.03259851455e-08,-7.20767035311e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244157494815,-0.000182429928317,9.80999186052,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118180250000,11226,118180250000,RH_EXTIMU,2.29607348132e-06,1.53164047812e-05,-0.703297191181,0.710895956267,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.70594496101e-08,-2.99890747672e-08,-7.20758769797e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024619012487,-0.000180453208165,9.81000678586,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118182750000,11227,118182750000,RH_EXTIMU,2.29597293064e-06,1.53164228941e-05,-0.703297255229,0.710895892904,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.64747082117e-08,-4.56137385069e-08,-7.20751842521e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024578531632,-0.000178096793879,9.80999257552,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118185250000,11228,118185250000,RH_EXTIMU,2.29606664129e-06,1.53164022819e-05,-0.703297319275,0.710895829542,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.57931757454e-08,4.16613992476e-08,-7.20744756614e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244546296473,-0.000180525933757,9.81000499318,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118187750000,11229,118187750000,RH_EXTIMU,2.29610442674e-06,1.53163438382e-05,-0.703297383321,0.71089576618,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.5272985478e-08,-1.13196302517e-08,-7.20736790574e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245725612831,-0.00018036643885,9.81000861777,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118189000000,11230,118190250000,RH_EXTIMU,2.29596222889e-06,1.53163704426e-05,-0.703297447367,0.71089570282,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.49377477086e-08,-6.42168479541e-08,-7.20729687392e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024621793105,-0.000177567839035,9.80999154602,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118192750000,11231,118192750000,RH_EXTIMU,2.29611607596e-06,1.53163535861e-05,-0.703297511412,0.710895639459,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.78806071502e-08,7.76323535434e-08,-7.2072393824e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243723057841,-0.000181276661949,9.80999240216,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118195250000,11232,118195250000,RH_EXTIMU,2.29622992554e-06,1.53163104778e-05,-0.703297575456,0.710895576099,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.9903608662e-08,4.019842956e-08,-7.20716169808e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024501680359,-0.000180653466573,9.81000916177,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118197750000,11233,118197750000,RH_EXTIMU,2.29610608417e-06,1.53163001479e-05,-0.7032976395,0.71089551274,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.37175229113e-08,-7.48939457131e-08,-7.20707325593e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246766467911,-0.000178086072873,9.8100120346,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118200250000,11234,118200250000,RH_EXTIMU,2.29603804663e-06,1.53163556509e-05,-0.703297703542,0.710895449382,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.90210675214e-08,-6.05634813807e-09,-7.20700774632e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244958408266,-0.000178393015492,9.8099932227,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118202750000,11235,118202750000,RH_EXTIMU,2.29603354822e-06,1.53163831996e-05,-0.703297767585,0.710895386024,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.71571700125e-08,1.37951072831e-08,-7.20693922443e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245120589189,-0.000178908215002,9.809995919,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118205250000,11236,118205250000,RH_EXTIMU,2.29613754557e-06,1.53163190366e-05,-0.703297831626,0.710895322667,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.61466155257e-08,2.26810419176e-08,-7.20687736802e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244976304966,-0.000181250084773,9.80998932484,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118207750000,11237,118207750000,RH_EXTIMU,2.29616001043e-06,1.53161602593e-05,-0.703297895667,0.71089525931,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.03011446234e-07,-7.70010240907e-08,-7.20681567723e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246730805528,-0.00018097712229,9.80998147845,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118210250000,11238,118210250000,RH_EXTIMU,2.29633084116e-06,1.53160203535e-05,-0.703297959708,0.710895195954,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.7677162124e-07,1.7207891677e-08,-7.20674879722e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244542260518,-0.000182354293094,9.81000287747,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118212750000,11239,118212750000,RH_EXTIMU,2.29631224199e-06,1.53160817511e-05,-0.703298023748,0.710895132599,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.42212455369e-08,2.51118498801e-08,-7.20666676543e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245159701527,-0.000178006723626,9.81000772604,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118215250000,11240,118215250000,RH_EXTIMU,2.29626936764e-06,1.53161353165e-05,-0.703298087787,0.710895069244,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.36202259789e-08,6.99937178809e-09,-7.20659146207e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245238276395,-0.000178537729762,9.81000399978,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118217750000,11241,118217750000,RH_EXTIMU,2.29626884338e-06,1.53161391437e-05,-0.703298151825,0.71089500589,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.55048774945e-09,2.54029376065e-09,-7.20651928628e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245285411061,-0.000179436017773,9.81000099005,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118220250000,11242,118220250000,RH_EXTIMU,2.29628628153e-06,1.53161200928e-05,-0.703298215863,0.710894942536,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.15371969176e-08,-3.64590714957e-10,-7.20644793399e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245316149774,-0.000179745505544,9.80999980907,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118222750000,11243,118222750000,RH_EXTIMU,2.29630722062e-06,1.53160970507e-05,-0.703298279901,0.710894879183,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.57737819693e-08,-6.64635859697e-10,-7.2063765628e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245312697487,-0.000179772533305,9.80999964999,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118227750000,11244,118225250000,RH_EXTIMU,2.29632704164e-06,1.53160757212e-05,-0.703298343937,0.710894815831,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.41743419953e-08,-3.19747138526e-10,-7.20630501351e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245307228101,-0.000179732807783,9.80999976693,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118227750000,11245,118227750000,RH_EXTIMU,2.29634537205e-06,1.53160562234e-05,-0.703298407973,0.710894752479,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.22960302147e-08,-1.16719883086e-10,-7.20623336261e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245305267905,-0.000179700764115,9.80999987604,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118230250000,11246,118230250000,RH_EXTIMU,2.29635491769e-06,1.53160162697e-05,-0.703298472008,0.710894689128,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.88092084478e-08,-1.66929272346e-08,-7.20615715893e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024567137569,-0.000179848493948,9.81000664659,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118232750000,11247,118232750000,RH_EXTIMU,2.29628267165e-06,1.53160373382e-05,-0.703298536043,0.710894625778,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.20403963882e-08,-2.80078913584e-08,-7.20607398773e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245591648637,-0.000178374549012,9.81000898594,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118235250000,11248,118235250000,RH_EXTIMU,2.29629151623e-06,1.53160588797e-05,-0.703298600077,0.710894562429,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.18905974388e-09,1.78858726275e-08,-7.20600368723e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244976819145,-0.000179382238518,9.81000180957,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118237750000,11249,118237750000,RH_EXTIMU,2.29632280872e-06,1.53160443181e-05,-0.70329866411,0.710894499079,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.68904095665e-08,9.98354576452e-09,-7.20593319879e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245202435032,-0.000179874490478,9.8099994029,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118240250000,11250,118240250000,RH_EXTIMU,2.29635170156e-06,1.53160157119e-05,-0.703298728142,0.710894435731,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.34277153432e-08,6.46017618605e-10,-7.20586224175e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245319725342,-0.000179902697073,9.80999920237,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118242750000,11251,118242750000,RH_EXTIMU,2.29643172632e-06,1.53160434777e-05,-0.703298792174,0.710894372383,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.07901627201e-08,6.14744341978e-08,-7.20579635688e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244148594714,-0.0001798508387,9.80999772821,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118245250000,11252,118245250000,RH_EXTIMU,2.2964936268e-06,1.5316040275e-05,-0.703298856206,0.710894309036,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.79066523053e-08,3.36647740225e-08,-7.20572578672e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244991148464,-0.000179950812288,9.80999894912,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118247750000,11253,118247750000,RH_EXTIMU,2.29652522951e-06,1.53160160132e-05,-0.703298920236,0.710894245689,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.25245587693e-08,4.64136467497e-09,-7.20564894571e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245358316778,-0.000179823451296,9.810006677,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118250250000,11254,118250250000,RH_EXTIMU,2.29649642392e-06,1.53160317806e-05,-0.703298984266,0.710894182344,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.43526327158e-08,-6.58143769324e-09,-7.20557414875e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245389264528,-0.00017891763618,9.81000259427,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118252750000,11255,118252750000,RH_EXTIMU,2.29650142525e-06,1.5316026333e-05,-0.703299048296,0.710894118998,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.81030682161e-09,3.74307809152e-10,-7.20550231362e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245286197813,-0.000179530244982,9.81000058692,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118255250000,11256,118255250000,RH_EXTIMU,2.29642432566e-06,1.53160398557e-05,-0.703299112325,0.710894055654,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.05552251638e-08,-3.50301540732e-08,-7.20543316074e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024608642516,-0.000178122507332,9.80998898301,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118257750000,11257,118257750000,RH_EXTIMU,2.29651370932e-06,1.53159462179e-05,-0.703299176353,0.710893992309,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.04419034965e-07,-2.30394602462e-09,-7.2053738062e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245019893075,-0.000181514266954,9.80999045207,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118260250000,11258,118260250000,RH_EXTIMU,2.29668075561e-06,1.53158542109e-05,-0.70329924038,0.710893928966,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.47669430944e-07,4.23195103653e-08,-7.2053021181e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244645362311,-0.00018175323915,9.8100045473,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118260250000,11259,118262750000,RH_EXTIMU,2.29655858388e-06,1.53158573536e-05,-0.703299304407,0.710893865623,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.03482631949e-08,-6.62928184554e-08,-7.20522502086e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246860033984,-0.000177606728252,9.8099949743,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118265250000,11260,118265250000,RH_EXTIMU,2.29656804419e-06,1.53157541653e-05,-0.703299368434,0.710893802281,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.4338883351e-08,-5.27035067116e-08,-7.20515401611e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245603813851,-0.000180940622289,9.81000266615,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118270250000,11261,118267750000,RH_EXTIMU,2.29654684811e-06,1.53157402492e-05,-0.703299432459,0.710893738939,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.32390111754e-09,-1.91816034525e-08,-7.20507618358e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245606923027,-0.000178972660722,9.81000411652,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118270250000,11262,118270250000,RH_EXTIMU,2.2964228453e-06,1.5315798617e-05,-0.703299496484,0.710893675598,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.02461430951e-07,-3.59157941411e-08,-7.20500666191e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246014903042,-0.000177187518519,9.80998825822,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118272750000,11263,118272750000,RH_EXTIMU,2.29653627508e-06,1.53157082852e-05,-0.703299560508,0.710893612258,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.16234290569e-07,1.31055141993e-08,-7.20495074235e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244748907209,-0.000181876889748,9.80998852841,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118275250000,11264,118275250000,RH_EXTIMU,2.29662763877e-06,1.53156219445e-05,-0.703299624532,0.710893548918,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.01439432307e-07,2.96002562274e-09,-7.20488139651e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245346416571,-0.000180801272317,9.80999578129,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118279000000,11265,118277750000,RH_EXTIMU,2.29665075829e-06,1.53155941454e-05,-0.703299688555,0.710893485579,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.96900730145e-08,-2.14333655874e-09,-7.20480896956e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245332434046,-0.000179645705846,9.80999975981,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118280250000,11266,118280250000,RH_EXTIMU,2.29666469036e-06,1.53155846832e-05,-0.703299752578,0.71089342224,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.41479829023e-08,3.11587432716e-09,-7.20472872119e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245303553759,-0.000179473568891,9.81001137997,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118282750000,11267,118282750000,RH_EXTIMU,2.29659949771e-06,1.53156288579e-05,-0.7032998166,0.710893358902,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.10296317459e-08,-1.08987992275e-08,-7.20465134386e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245450082528,-0.00017832022622,9.81000469631,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118285250000,11268,118285250000,RH_EXTIMU,2.29659343403e-06,1.5315634369e-05,-0.703299880621,0.710893295565,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.64852441366e-09,3.8103384071e-10,-7.20457939969e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245265630354,-0.000179379674519,9.81000117256,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118287750000,11269,118287750000,RH_EXTIMU,2.2966548071e-06,1.53155897606e-05,-0.703299944641,0.710893232228,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.09030317174e-08,9.81987570421e-09,-7.20450901279e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245087414206,-0.000180611947825,9.8100008703,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118290250000,11270,118290250000,RH_EXTIMU,2.29670426584e-06,1.53155345192e-05,-0.703300008661,0.710893168892,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.01097124331e-08,-2.93074523711e-09,-7.20443879663e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245434307056,-0.000180271339319,9.8099986852,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118292750000,11271,118292750000,RH_EXTIMU,2.29673284905e-06,1.53155052708e-05,-0.70330007268,0.710893105557,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.36127584357e-08,1.06464382156e-10,-7.20436801518e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245274678933,-0.000179840785567,9.80999924936,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118295250000,11272,118295250000,RH_EXTIMU,2.29675358812e-06,1.53154860529e-05,-0.703300136699,0.710893042222,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.35080997034e-08,1.39753741529e-09,-7.20429638314e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245281967878,-0.000179689279532,9.80999981662,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118297750000,11273,118297750000,RH_EXTIMU,2.29685019739e-06,1.53155164254e-05,-0.703300200717,0.710892978888,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.87550491352e-08,7.22878865755e-08,-7.20422418879e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244018769597,-0.000179977300016,9.81000723618,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118300250000,11274,118300250000,RH_EXTIMU,2.29683557822e-06,1.53155466578e-05,-0.703300264734,0.710892915554,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.44233431429e-08,9.62661297642e-09,-7.20414869223e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245468426459,-0.000178894965288,9.81000196081,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118302750000,11275,118302750000,RH_EXTIMU,2.2969030706e-06,1.53155269109e-05,-0.70330032875,0.710892852222,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.03950178433e-08,2.7401933631e-08,-7.20407606341e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244534356412,-0.000180466862729,9.81000743082,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118305250000,11276,118305250000,RH_EXTIMU,2.29675771302e-06,1.53156271678e-05,-0.703300392766,0.710892788889,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.38174782364e-07,-2.41081444611e-08,-7.20399926944e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246402448752,-0.000176235354694,9.80999255601,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118307750000,11277,118307750000,RH_EXTIMU,2.29671834007e-06,1.53155387909e-05,-0.703300456782,0.710892725558,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.8233158564e-08,-7.17556665236e-08,-7.20392473987e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246165774649,-0.000180251247923,9.81000546676,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118310250000,11278,118310250000,RH_EXTIMU,2.29680074132e-06,1.53154708446e-05,-0.703300520796,0.710892662227,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.59927830339e-08,8.37858796919e-09,-7.20384849236e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244670136885,-0.00018129331168,9.81001133211,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118312750000,11279,118312750000,RH_EXTIMU,2.29670493451e-06,1.53155229833e-05,-0.70330058481,0.710892598897,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.29213244669e-08,-2.35944507043e-08,-7.20377561305e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246162193991,-0.000177129835432,9.8099907848,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118315250000,11280,118315250000,RH_EXTIMU,2.29687400923e-06,1.53154517154e-05,-0.703300648823,0.710892535567,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.37154064108e-07,5.52555315258e-08,-7.20372143591e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243864438056,-0.000182450704185,9.80999348435,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118317750000,11281,118317750000,RH_EXTIMU,2.29695463045e-06,1.53153930392e-05,-0.703300712836,0.710892472238,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.97647006491e-08,1.26490990275e-08,-7.20364633977e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245581418056,-0.000180323712323,9.81000038212,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118320250000,11282,118320250000,RH_EXTIMU,2.29685844683e-06,1.53153925919e-05,-0.703300776848,0.710892408909,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.35486417547e-08,-5.3712893316e-08,-7.20357322634e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246200190261,-0.000177967838184,9.80999268903,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118322750000,11283,118322750000,RH_EXTIMU,2.29688282178e-06,1.5315366731e-05,-0.70330084086,0.710892345581,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.93133875491e-08,-3.34783837383e-10,-7.20350880136e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245046852145,-0.000180041502404,9.80999537531,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118325250000,11284,118325250000,RH_EXTIMU,2.29707820781e-06,1.53152524499e-05,-0.70330090487,0.710892282254,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.76318629507e-07,4.55971118002e-08,-7.20343114906e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244325254463,-0.00018293660317,9.81001933449,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118327750000,11285,118327750000,RH_EXTIMU,2.29691460341e-06,1.53153393463e-05,-0.70330096888,0.710892218928,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.41034895238e-07,-4.19730587742e-08,-7.20333534887e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246537966141,-0.000176019968235,9.81001524606,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118330250000,11286,118330250000,RH_EXTIMU,2.29683739991e-06,1.53154746992e-05,-0.70330103289,0.710892155602,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.19161179442e-07,3.41975437642e-08,-7.20327627675e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244259095182,-0.000177722520258,9.80998922839,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118332750000,11287,118332750000,RH_EXTIMU,2.29691839547e-06,1.53153750925e-05,-0.703301096899,0.710892092277,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0300671805e-07,-1.04180376345e-08,-7.20320908954e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245852586944,-0.000181244554837,9.80999413298,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118335250000,11288,118335250000,RH_EXTIMU,2.29702873492e-06,1.53152377358e-05,-0.703301160907,0.710892028952,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.4093464306e-07,-1.5376883093e-08,-7.20313370899e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245546782509,-0.000181716929093,9.81000708,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118337750000,11289,118337750000,RH_EXTIMU,2.29690727289e-06,1.53152784803e-05,-0.703301224914,0.710891965628,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.11009919477e-08,-4.45093614634e-08,-7.20307385772e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245758746656,-0.000177529960755,9.80997743535,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118340250000,11290,118340250000,RH_EXTIMU,2.29716766168e-06,1.53151235397e-05,-0.703301288921,0.710891902304,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.36163130968e-07,5.90468435273e-08,-7.20301134822e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244181151556,-0.000183858327771,9.810001715,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118342750000,11291,118342750000,RH_EXTIMU,2.29708672293e-06,1.53150976599e-05,-0.703301352928,0.710891838981,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.05693499646e-08,-5.95994270243e-08,-7.20292134691e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246748695237,-0.000177925983794,9.81001101134,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118345250000,11292,118345250000,RH_EXTIMU,2.29703764226e-06,1.5315151016e-05,-0.703301416933,0.710891775659,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.70325821453e-08,3.38770914342e-09,-7.20284357387e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244808679495,-0.000178633669777,9.81001128872,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118347750000,11293,118347750000,RH_EXTIMU,2.29682895193e-06,1.53152848294e-05,-0.703301480938,0.710891712338,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.93073384331e-07,-4.06580584685e-08,-7.202772701e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024652741742,-0.000175289840187,9.8099822123,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118351500000,11294,118350250000,RH_EXTIMU,2.29708895821e-06,1.53151616449e-05,-0.703301544942,0.710891649017,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.18078263107e-07,7.68918003316e-08,-7.202715001e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243480907878,-0.000184023261071,9.81000500716,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118352750000,11295,118352750000,RH_EXTIMU,2.29713285907e-06,1.53151303688e-05,-0.703301608946,0.710891585696,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.34648147323e-08,7.57144517685e-09,-7.20263628173e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245409803025,-0.000179872184694,9.810004054,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118355250000,11296,118355250000,RH_EXTIMU,2.29717939994e-06,1.53151409311e-05,-0.703301672949,0.710891522377,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.14261317473e-08,3.28509423978e-08,-7.20255792581e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244777538693,-0.000179584078063,9.81001164072,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118357750000,11297,118357750000,RH_EXTIMU,2.29693746797e-06,1.53152342865e-05,-0.703301736951,0.710891459058,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.89215018154e-07,-8.23702788951e-08,-7.20248345738e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247250626271,-0.000175433032443,9.80998583536,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118360250000,11298,118360250000,RH_EXTIMU,2.29711829715e-06,1.53151237222e-05,-0.703301800953,0.710891395739,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.65948516373e-07,3.9520775609e-08,-7.20241915396e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243912895784,-0.000183011917424,9.81000812106,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118362750000,11299,118362750000,RH_EXTIMU,2.29712133108e-06,1.53151531115e-05,-0.703301864954,0.710891332422,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.39096911755e-08,1.90792417062e-08,-7.20234725571e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024504896608,-0.000178850809819,9.80999613464,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118365250000,11300,118365250000,RH_EXTIMU,2.29710779713e-06,1.53150990878e-05,-0.703301928955,0.710891269104,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.35995407472e-08,-3.76805823079e-08,-7.20227404374e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246124683244,-0.000179706751565,9.80999822589,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118367750000,11301,118367750000,RH_EXTIMU,2.29731849491e-06,1.53151104257e-05,-0.703301992954,0.710891205788,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.14347914728e-07,1.25653449018e-07,-7.20221024041e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000242837982861,-0.000181440426918,9.81000517731,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118370250000,11302,118370250000,RH_EXTIMU,2.29728884234e-06,1.53151134245e-05,-0.703302056954,0.710891142472,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.76505836123e-08,-1.43201554653e-08,-7.20213826017e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246056821977,-0.000178864583989,9.80999238221,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118372750000,11303,118372750000,RH_EXTIMU,2.297224263e-06,1.53150597585e-05,-0.703302120952,0.710891079157,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.63191995011e-09,-6.61974236528e-08,-7.20206776878e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246628977274,-0.000178897330424,9.80999186816,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118376500000,11304,118375250000,RH_EXTIMU,2.29728479442e-06,1.53149234235e-05,-0.70330218495,0.710891015842,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.12033245584e-07,-4.28198745927e-08,-7.20199455261e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245507170473,-0.000181727057179,9.81000752958,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118377750000,11305,118377750000,RH_EXTIMU,2.29716906213e-06,1.53149536227e-05,-0.703302248947,0.710890952528,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.1909356676e-08,-4.7283009795e-08,-7.20191183856e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246138427965,-0.000177260897142,9.81000137083,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118380250000,11306,118380250000,RH_EXTIMU,2.29720447179e-06,1.53149535458e-05,-0.703302312944,0.710890889214,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.10816595926e-08,2.05372990969e-08,-7.20185209504e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244719485611,-0.000179964438403,9.8099920058,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118382750000,11307,118382750000,RH_EXTIMU,2.29727936307e-06,1.53149421752e-05,-0.70330237694,0.710890825901,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.98896313777e-08,3.63284552894e-08,-7.20178695593e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244717017091,-0.000180083606432,9.80999274519,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118385250000,11308,118385250000,RH_EXTIMU,2.29742177536e-06,1.53148570339e-05,-0.703302440935,0.710890762589,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.29796158181e-07,3.23642823329e-08,-7.20171404475e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244891769814,-0.000181832078653,9.81000983832,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118387750000,11309,118387750000,RH_EXTIMU,2.29732912314e-06,1.53149402915e-05,-0.70330250493,0.710890699278,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.86362970567e-08,-4.1222985011e-09,-7.20162487998e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245475468458,-0.000177025948651,9.81001328774,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118390250000,11310,118390250000,RH_EXTIMU,2.29722730817e-06,1.53149716598e-05,-0.703302568924,0.710890635967,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.46521546121e-08,-3.87877774331e-08,-7.20156489778e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245878355765,-0.000178435966681,9.80998143376,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118392750000,11311,118392750000,RH_EXTIMU,2.29731056875e-06,1.53147876828e-05,-0.703302632918,0.710890572656,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.51764927867e-07,-5.71260433994e-08,-7.20150210056e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246315653872,-0.000181958326003,9.80998850658,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118395250000,11312,118395250000,RH_EXTIMU,2.29752457596e-06,1.53146954884e-05,-0.70330269691,0.710890509346,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.74481378703e-07,6.86354299347e-08,-7.20142098753e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243946865669,-0.000182080207042,9.81002351759,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118397750000,11313,118397750000,RH_EXTIMU,2.29733992192e-06,1.53148258664e-05,-0.703302760902,0.710890446037,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.77470817998e-07,-2.90885397075e-08,-7.2013363071e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245933990447,-0.000176016222997,9.81000586635,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118400250000,11314,118400250000,RH_EXTIMU,2.29728272043e-06,1.53148836739e-05,-0.703302824894,0.710890382729,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.41557302096e-08,1.34987552092e-09,-7.20126559359e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245203743075,-0.000178379225345,9.8099987066,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118402750000,11315,118402750000,RH_EXTIMU,2.29745264328e-06,1.53148393157e-05,-0.703302888885,0.710890319421,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.22495326535e-07,7.10367990141e-08,-7.20120138187e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243821937946,-0.000182053322903,9.81000212815,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118405250000,11316,118405250000,RH_EXTIMU,2.29752265881e-06,1.53148479213e-05,-0.703302952875,0.710890256114,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.58771766004e-08,4.49458244015e-08,-7.20113287623e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244984500734,-0.000179448196615,9.80999343574,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118407750000,11317,118407750000,RH_EXTIMU,2.29757891849e-06,1.53148017047e-05,-0.703303016864,0.710890192807,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.88993363032e-08,6.02814787819e-09,-7.20106960689e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245485514873,-0.000180337880343,9.80999229179,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118410250000,11318,118410250000,RH_EXTIMU,2.29758479213e-06,1.53147031141e-05,-0.703303080853,0.710890129501,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.97120221686e-08,-5.21069378188e-08,-7.20098321415e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246186536703,-0.000180192401036,9.81001429041,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118412750000,11319,118412750000,RH_EXTIMU,2.29734073047e-06,1.53147372445e-05,-0.703303144841,0.710890066196,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.57103683204e-07,-1.17251114174e-07,-7.20090861328e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246996611364,-0.000176467553441,9.80999068156,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118415250000,11320,118415250000,RH_EXTIMU,2.2973594195e-06,1.53146580945e-05,-0.703303208829,0.710890002891,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.60621079505e-08,-3.38402889488e-08,-7.20084858196e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245559894714,-0.000180505593988,9.80998728982,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118417750000,11321,118417750000,RH_EXTIMU,2.29750861102e-06,1.53145558754e-05,-0.703303272816,0.710889939587,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.43260150776e-07,2.64662303072e-08,-7.20078161308e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244635968413,-0.000181785499324,9.81000085064,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118420250000,11322,118420250000,RH_EXTIMU,2.297628206e-06,1.53145735535e-05,-0.703303336802,0.710889876284,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.89689157589e-08,7.80009622038e-08,-7.20070513869e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243901159533,-0.00018025384162,9.81001097055,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118422750000,11323,118422750000,RH_EXTIMU,2.29762118911e-06,1.53146635005e-05,-0.703303400788,0.710889812981,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.36983068673e-08,4.78638639271e-08,-7.20062705868e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245044826066,-0.000178071107023,9.81000741844,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118425250000,11324,118425250000,RH_EXTIMU,2.29756083755e-06,1.53146975984e-05,-0.703303464773,0.710889749679,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.26073183641e-08,-1.39065227016e-08,-7.20055405977e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245600898478,-0.00017859062772,9.80999826609,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118427750000,11325,118427750000,RH_EXTIMU,2.29758795189e-06,1.53146180992e-05,-0.703303528758,0.710889686377,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.10501525045e-08,-2.92984730022e-08,-7.20048505704e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245899622751,-0.000180540511941,9.80999618787,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118430250000,11326,118430250000,RH_EXTIMU,2.29763539233e-06,1.53145165306e-05,-0.703303592741,0.710889623076,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.50270359387e-08,-3.04132957007e-08,-7.20041450865e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245496626757,-0.00018069516055,9.8100014385,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118430250000,11327,118432750000,RH_EXTIMU,2.29758272422e-06,1.53146009187e-05,-0.703303656724,0.710889559776,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.65330733794e-08,1.90170712502e-08,-7.20033941606e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245018938019,-0.000177598380344,9.80999854343,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118430250000,11328,118435250000,RH_EXTIMU,2.29763855299e-06,1.53145758371e-05,-0.703303720707,0.710889496476,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.67627320131e-08,1.78053651818e-08,-7.20027866879e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245030435349,-0.000180357583015,9.80998980383,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118437750000,11329,118437750000,RH_EXTIMU,2.29769334261e-06,1.531451353e-05,-0.703303784689,0.710889433177,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.71163865056e-08,-3.94986724905e-09,-7.200212769e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245496342398,-0.000180274620909,9.80999318377,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118440250000,11330,118440250000,RH_EXTIMU,2.2976969468e-06,1.53144579033e-05,-0.70330384867,0.710889369878,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.42479077871e-08,-2.89497435644e-08,-7.20013542803e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245738598237,-0.000179867645482,9.81000455243,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118442750000,11331,118442750000,RH_EXTIMU,2.29762950522e-06,1.53144468892e-05,-0.703303912651,0.710889306581,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.12575900276e-08,-4.3551479874e-08,-7.20005588758e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245960347987,-0.000178578951806,9.81000483426,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118445250000,11332,118445250000,RH_EXTIMU,2.2977420542e-06,1.53144545523e-05,-0.703303976631,0.710889243283,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.05965403993e-08,6.8340851425e-08,-7.19998718181e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024357510954,-0.000180818834255,9.81000646852,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118449000000,11333,118447750000,RH_EXTIMU,2.29786554059e-06,1.53145024339e-05,-0.70330404061,0.710889179987,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.41880335326e-08,9.73674968749e-08,-7.19991879514e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244194728948,-0.000179899402569,9.81000107443,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118454000000,11334,118450250000,RH_EXTIMU,2.29786980768e-06,1.53144846575e-05,-0.703304104588,0.710889116691,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.33287075911e-08,-7.05092116484e-09,-7.19984456252e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245872015512,-0.000179479268711,9.81000081948,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118454000000,11335,118452750000,RH_EXTIMU,2.29781343838e-06,1.5314441893e-05,-0.703304168566,0.710889053395,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.09648033192e-09,-5.53786394345e-08,-7.19976773551e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246101297936,-0.000179138957373,9.81000180296,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118455250000,11336,118455250000,RH_EXTIMU,2.29785688127e-06,1.53144281368e-05,-0.703304232544,0.710888990101,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.334644353e-08,1.72774225514e-08,-7.19969687168e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244798120207,-0.000179960850674,9.81000307713,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118457750000,11337,118457750000,RH_EXTIMU,2.29779443624e-06,1.5314425503e-05,-0.70330429652,0.710888926807,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.31311064718e-08,-3.59743350329e-08,-7.19962476285e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246218662097,-0.000178497003377,9.80999327311,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118460250000,11338,118460250000,RH_EXTIMU,2.29782087292e-06,1.53143201396e-05,-0.703304360497,0.710888863513,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.52170022881e-08,-4.43890641636e-08,-7.19955913154e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245726399633,-0.000180852408431,9.80999380741,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118462750000,11339,118462750000,RH_EXTIMU,2.29785978596e-06,1.53142980721e-05,-0.703304424472,0.71088880022,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.54465508996e-08,1.00019643488e-08,-7.19948843592e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244965029843,-0.000179659980738,9.81000001381,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118465250000,11340,118465250000,RH_EXTIMU,2.2978701852e-06,1.53143088759e-05,-0.703304488447,0.710888736928,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.35597594879e-10,1.26531259349e-08,-7.19941512129e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245152958118,-0.000179244407712,9.81000118147,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118467750000,11341,118467750000,RH_EXTIMU,2.29793408117e-06,1.53142683218e-05,-0.703304552421,0.710888673636,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.00559708002e-08,1.35449032976e-08,-7.19933239803e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245219433401,-0.000180384078403,9.81001698925,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118470250000,11342,118470250000,RH_EXTIMU,2.29763556345e-06,1.53143581595e-05,-0.703304616394,0.710888610345,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.19416813146e-07,-1.16209591112e-07,-7.19925334796e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247713224344,-0.000174842591132,9.80998968098,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118472750000,11343,118472750000,RH_EXTIMU,2.29762454737e-06,1.53142396302e-05,-0.703304680367,0.710888547055,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.13248934824e-08,-7.2949210782e-08,-7.19919334632e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245710216623,-0.000181168425078,9.80998986224,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118475250000,11344,118475250000,RH_EXTIMU,2.29802899009e-06,1.53142154701e-05,-0.703304744339,0.710888483765,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.44504597908e-07,2.14474816687e-07,-7.19912167398e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000241368876447,-0.000183529629143,9.81002497082,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118477750000,11345,118477750000,RH_EXTIMU,2.29774741947e-06,1.53143274179e-05,-0.703304808311,0.710888420476,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.22218898358e-07,-9.41002585882e-08,-7.19904836256e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247566873087,-0.000175149021475,9.80997780393,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118480250000,11346,118480250000,RH_EXTIMU,2.29798875764e-06,1.53141426883e-05,-0.703304872282,0.710888357188,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.42088669067e-07,3.13874996566e-08,-7.19899174943e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244371924291,-0.000184043828791,9.80999576754,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118482750000,11347,118482750000,RH_EXTIMU,2.29812282047e-06,1.53140913387e-05,-0.703304936252,0.7108882939,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.06034559224e-07,4.68843337375e-08,-7.19891855361e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244587335786,-0.00018073362525,9.81000639375,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118485250000,11348,118485250000,RH_EXTIMU,2.29787920782e-06,1.53142344503e-05,-0.703305000222,0.710888230613,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.18165913975e-07,-5.50203566967e-08,-7.19883584954e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0002469140934,-0.000174533797668,9.8099941555,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118487750000,11349,118487750000,RH_EXTIMU,2.29792794306e-06,1.53141367742e-05,-0.703305064191,0.710888167326,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.35731603893e-08,-2.74710803779e-08,-7.19877175464e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245087002873,-0.000181809566033,9.81000072311,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118490250000,11350,118490250000,RH_EXTIMU,2.29794975655e-06,1.53140864369e-05,-0.703305128159,0.71088810404,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.1627569556e-08,-1.56963633274e-08,-7.19869184015e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245575249481,-0.00017968810747,9.8100061752,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118492750000,11351,118492750000,RH_EXTIMU,2.29794462272e-06,1.53141153171e-05,-0.703305192127,0.710888040755,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.8268873383e-08,1.41936404711e-08,-7.19861802296e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244993985017,-0.000178918081433,9.81000462457,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118495250000,11352,118495250000,RH_EXTIMU,2.29806010011e-06,1.53141722086e-05,-0.703305256094,0.71088797747,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.45635210838e-08,9.79852204093e-08,-7.19854620124e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243669702038,-0.000180033465509,9.81000889144,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118497750000,11353,118497750000,RH_EXTIMU,2.29791565082e-06,1.53142320003e-05,-0.70330532006,0.710887914186,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.14891254061e-07,-4.66116786436e-08,-7.19847290928e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246804782722,-0.000176860869076,9.80998809959,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118501500000,11354,118500250000,RH_EXTIMU,2.29803393919e-06,1.53140512746e-05,-0.703305384026,0.710887850902,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.69856102448e-07,-3.55685804809e-08,-7.19841216654e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245265473779,-0.000183105341117,9.80999632148,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118501500000,11355,118502750000,RH_EXTIMU,2.29807066846e-06,1.53139832226e-05,-0.703305447991,0.71088778762,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.00773574858e-08,-1.73786360329e-08,-7.19833330821e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245585786318,-0.000179764806985,9.81000624401,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118501500000,11356,118505250000,RH_EXTIMU,2.2980764256e-06,1.53140328485e-05,-0.703305511955,0.710887724337,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.3747561416e-08,3.2119623691e-08,-7.19825267137e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024460366892,-0.000178987919978,9.81001441813,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118507750000,11357,118507750000,RH_EXTIMU,2.29801821787e-06,1.53141036054e-05,-0.703305575919,0.710887661056,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.20143663837e-08,8.14763379734e-09,-7.19817557755e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245402788246,-0.000177961864172,9.81000093957,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118510250000,11358,118510250000,RH_EXTIMU,2.29806198359e-06,1.5314071017e-05,-0.703305639882,0.710887597775,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.41256640023e-08,6.74886023764e-09,-7.1981165931e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245234735356,-0.000180202294002,9.8099891025,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118512750000,11359,118512750000,RH_EXTIMU,2.2980727639e-06,1.53140437409e-05,-0.703305703845,0.710887534495,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.23776104461e-08,-8.78906736868e-09,-7.19805238343e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245507525941,-0.000179424497538,9.80998637124,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118515250000,11360,118515250000,RH_EXTIMU,2.29816347994e-06,1.53139334904e-05,-0.703305767807,0.710887471215,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.14522874878e-07,-1.100197592e-08,-7.19798953579e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245394683863,-0.000181404140991,9.80999146797,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118517750000,11361,118517750000,RH_EXTIMU,2.29822593088e-06,1.53138530551e-05,-0.703305831768,0.710887407936,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.16729348623e-08,-9.94905790035e-09,-7.19791522883e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245333254287,-0.000180505462484,9.81000402535,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118520250000,11362,118520250000,RH_EXTIMU,2.29816571232e-06,1.53139061956e-05,-0.703305895729,0.710887344657,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.32461831353e-08,-3.00249390249e-09,-7.19783401277e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245405912924,-0.000177876117986,9.8100071924,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118522750000,11363,118522750000,RH_EXTIMU,2.29814985812e-06,1.53139085559e-05,-0.703305959688,0.710887281379,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.44455725567e-09,-6.92029316271e-09,-7.19775598482e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245459213313,-0.000179322062323,9.8100087216,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118525250000,11364,118525250000,RH_EXTIMU,2.29812258416e-06,1.53139128136e-05,-0.703306023648,0.710887218102,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.70066176574e-08,-1.22665380873e-08,-7.19768164723e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245438907381,-0.000179091791602,9.81000301934,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118527750000,11365,118527750000,RH_EXTIMU,2.29811655013e-06,1.53139058965e-05,-0.703306087606,0.710887154826,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.36014180073e-09,-6.67120937426e-09,-7.19761253598e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245350928201,-0.000179385675741,9.80999655156,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118531500000,11366,118530250000,RH_EXTIMU,2.29829529112e-06,1.53139115111e-05,-0.703306151564,0.71088709155,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.93926403595e-08,1.0441836231e-07,-7.19754713206e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243420570285,-0.000181106654628,9.81000359945,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118532750000,11367,118532750000,RH_EXTIMU,2.2981906813e-06,1.53138804268e-05,-0.703306215522,0.710887028274,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.11033279378e-08,-7.58785029485e-08,-7.19747644179e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247121936874,-0.000178340919529,9.80998530577,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118535250000,11368,118535250000,RH_EXTIMU,2.29838413565e-06,1.53137457144e-05,-0.703306279479,0.710886964999,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.86714483703e-07,3.28914753744e-08,-7.19741086829e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243967752398,-0.000183016850195,9.81000616483,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118537750000,11369,118537750000,RH_EXTIMU,2.29827437567e-06,1.53138171503e-05,-0.703306343435,0.710886901725,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.01714722814e-07,-2.047206687e-08,-7.19733353805e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246134550589,-0.000176745022673,9.80999517789,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118540250000,11370,118540250000,RH_EXTIMU,2.29828677322e-06,1.53138112713e-05,-0.70330640739,0.710886838452,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.12582484408e-08,4.28956619461e-09,-7.19726380402e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245171425881,-0.000179624532321,9.81000000659,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118542750000,11371,118542750000,RH_EXTIMU,2.29838457314e-06,1.5313748428e-05,-0.703306471345,0.710886775179,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.18780329211e-08,1.99446644857e-08,-7.19719431255e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244993010961,-0.000181024778162,9.81000076712,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118545250000,11372,118545250000,RH_EXTIMU,2.29837732454e-06,1.53136807979e-05,-0.703306535299,0.710886711907,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.48292719876e-08,-4.18827338679e-08,-7.19711962832e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024587396203,-0.000179956459845,9.81000123768,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118547750000,11373,118547750000,RH_EXTIMU,2.29841794656e-06,1.53137133377e-05,-0.703306599253,0.710886648635,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.69360997786e-09,4.20189984004e-08,-7.19704705929e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244587741659,-0.000179100204225,9.81000435694,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118550250000,11374,118550250000,RH_EXTIMU,2.29835866041e-06,1.53137776795e-05,-0.703306663206,0.710886585364,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.90184053377e-08,3.89227851323e-09,-7.19697500004e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245514746739,-0.000177861104226,9.80999588554,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118552750000,11375,118552750000,RH_EXTIMU,2.29857513226e-06,1.53136933414e-05,-0.703306727158,0.710886522094,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.71461808179e-07,7.44905479253e-08,-7.19690455083e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243506124291,-0.000183207539998,9.8100162791,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118555250000,11376,118555250000,RH_EXTIMU,2.29831940106e-06,1.5313826931e-05,-0.70330679111,0.710886458824,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.19700427756e-07,-6.72548425635e-08,-7.19681571715e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247609381465,-0.00017405210554,9.8099952123,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118557750000,11377,118557750000,RH_EXTIMU,2.29829613858e-06,1.53137455835e-05,-0.703306855061,0.710886395555,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.34400057316e-08,-5.86940641144e-08,-7.19676045915e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245541529804,-0.000180718388885,9.80998706557,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118560250000,11378,118560250000,RH_EXTIMU,2.29846561551e-06,1.53136372664e-05,-0.703306919011,0.710886332286,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.58226973031e-07,3.4412045519e-08,-7.1966941827e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244393739344,-0.00018219602755,9.80999901763,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118564000000,11379,118562750000,RH_EXTIMU,2.29868313937e-06,1.53135549669e-05,-0.703306982961,0.710886269018,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.70912999775e-07,7.62418640891e-08,-7.19661773972e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243990170485,-0.000182382239416,9.81001810308,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118565250000,11380,118565250000,RH_EXTIMU,2.29839670596e-06,1.53137392143e-05,-0.70330704691,0.710886205751,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.65663470569e-07,-5.5719866535e-08,-7.19652824663e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247173249735,-0.000173367865894,9.80999769245,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118567750000,11381,118567750000,RH_EXTIMU,2.29846871625e-06,1.53136652037e-05,-0.703307110858,0.710886142485,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.34944329949e-08,-9.16751678174e-10,-7.19647884926e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244628845382,-0.000181917511131,9.80998514973,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118570250000,11382,118570250000,RH_EXTIMU,2.29860105202e-06,1.53135510696e-05,-0.703307174806,0.710886079219,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.40377312524e-07,1.02065894621e-08,-7.19641466718e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245229153596,-0.000181370717918,9.80999106945,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118572750000,11383,118572750000,RH_EXTIMU,2.29864472509e-06,1.53134814913e-05,-0.703307238753,0.710886015953,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.488494444e-08,-1.43398661856e-08,-7.19633853461e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245649156764,-0.000180235693037,9.81000595613,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118575250000,11384,118575250000,RH_EXTIMU,2.29843525828e-06,1.53135401087e-05,-0.7033073027,0.710885952688,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.51206708922e-07,-8.3861945454e-08,-7.19625340002e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246767681266,-0.000176046941941,9.8100003918,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118577750000,11385,118577750000,RH_EXTIMU,2.29856973491e-06,1.5313483661e-05,-0.703307366645,0.710885889424,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0913778224e-07,4.42179041696e-08,-7.19618060479e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244208452927,-0.000181812181409,9.81001627228,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118580250000,11386,118580250000,RH_EXTIMU,2.29851722343e-06,1.53135291027e-05,-0.703307430591,0.710885826161,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.45315571127e-08,-3.04489074357e-09,-7.19611151684e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245350620972,-0.00017832854179,9.80999203723,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118582750000,11387,118582750000,RH_EXTIMU,2.29866182111e-06,1.53134639416e-05,-0.703307494535,0.710885762898,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.19796240464e-07,4.49570954562e-08,-7.19604435764e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024444772038,-0.000181618267906,9.81000361412,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118585250000,11388,118585250000,RH_EXTIMU,2.29851115606e-06,1.53134837211e-05,-0.703307558479,0.710885699636,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.59136286663e-08,-7.28649296074e-08,-7.19596511235e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247266612801,-0.000176864476755,9.80999194005,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118587750000,11389,118587750000,RH_EXTIMU,2.29854788036e-06,1.53133564971e-05,-0.703307622422,0.710885636374,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.3367177389e-08,-5.10331673398e-08,-7.19590428375e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245315315719,-0.000181426746934,9.80999372524,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118590250000,11390,118590250000,RH_EXTIMU,2.29863457937e-06,1.53133483355e-05,-0.703307686365,0.710885573113,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.47981893739e-08,4.47967441272e-08,-7.1958322153e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244545094786,-0.000180015661254,9.81000287432,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118592750000,11391,118592750000,RH_EXTIMU,2.29866617634e-06,1.53133390967e-05,-0.703307750307,0.710885509853,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.40673431488e-08,1.3181079083e-08,-7.19575319412e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245291140023,-0.000179587595425,9.81000850355,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118595250000,11392,118595250000,RH_EXTIMU,2.29870353046e-06,1.53133189932e-05,-0.703307814248,0.710885446593,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.34544023606e-08,1.02415340809e-08,-7.19567669657e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245148003989,-0.00018001817734,9.8100087413,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118597750000,11393,118597750000,RH_EXTIMU,2.29862435097e-06,1.5313377844e-05,-0.703307878189,0.710885383334,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.72425682484e-08,-1.04237337883e-08,-7.19560530907e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245386984878,-0.000177844656161,9.8099967776,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118600250000,11394,118600250000,RH_EXTIMU,2.29867754397e-06,1.53133896416e-05,-0.703307942129,0.710885320075,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.45130507789e-08,3.72956342867e-08,-7.19553627495e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244593153189,-0.000179790379258,9.81000093551,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118602750000,11395,118602750000,RH_EXTIMU,2.29856603335e-06,1.53134355445e-05,-0.703308006068,0.710885256818,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.83444584957e-08,-3.5978331218e-08,-7.1954647761e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246472692743,-0.000177260420551,9.80998726821,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118605250000,11396,118605250000,RH_EXTIMU,2.2988351552e-06,1.531322149e-05,-0.703308070007,0.71088519356,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.7438840806e-07,3.03432703646e-08,-7.19540274091e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243900261899,-0.000185235937118,9.81001066336,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118607750000,11397,118607750000,RH_EXTIMU,2.29870186239e-06,1.53133351833e-05,-0.703308133945,0.710885130304,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.38874266038e-07,-9.68103211183e-09,-7.19532445856e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245893010737,-0.000175743296254,9.80999083851,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118610250000,11398,118610250000,RH_EXTIMU,2.29870018804e-06,1.53133300585e-05,-0.703308197883,0.710885067048,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.83085153301e-09,-3.19924869938e-09,-7.19526076562e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245559582096,-0.000179339954601,9.80998970981,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118612750000,11399,118612750000,RH_EXTIMU,2.29902682373e-06,1.53132095657e-05,-0.70330826182,0.710885003792,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.54454811859e-07,1.15912553232e-07,-7.19518566508e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243199244619,-0.000184024654843,9.81002410934,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118615250000,11400,118615250000,RH_EXTIMU,2.29865563073e-06,1.5313251597e-05,-0.703308325756,0.710884940537,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.33849635509e-07,-1.84289601244e-07,-7.19510458435e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000248766295482,-0.000174788895277,9.80998370048,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118617750000,11401,118617750000,RH_EXTIMU,2.29870670094e-06,1.53131786434e-05,-0.703308389691,0.710884877283,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.09907427553e-08,-1.20975250323e-08,-7.19504418922e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244778633486,-0.000180700269656,9.80999365735,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118620250000,11402,118620250000,RH_EXTIMU,2.29880698735e-06,1.53131495201e-05,-0.703308453626,0.71088481403,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.43193432023e-08,4.05205096016e-08,-7.19498104984e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244691867085,-0.000180492997048,9.80999223842,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118622750000,11403,118622750000,RH_EXTIMU,2.29889776638e-06,1.5313119991e-05,-0.703308517561,0.710884750777,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.91407773684e-08,3.49403693496e-08,-7.19490288186e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244891404741,-0.000180237237009,9.81001075629,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118625250000,11404,118625250000,RH_EXTIMU,2.29875815354e-06,1.53131756586e-05,-0.703308581494,0.710884687524,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.09820605616e-07,-4.623678149e-08,-7.19482110391e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246496141071,-0.000176918394826,9.81000008753,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118627750000,11405,118627750000,RH_EXTIMU,2.29880007896e-06,1.53130899821e-05,-0.703308645427,0.710884624273,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.29484612758e-08,-2.44783955294e-08,-7.19476368919e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245169245203,-0.000181262324935,9.80998992623,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118630250000,11406,118630250000,RH_EXTIMU,2.29902683977e-06,1.53129569881e-05,-0.70330870936,0.710884561022,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0468884077e-07,5.26088113902e-08,-7.19469276307e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244121105502,-0.000183094475655,9.81001123736,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118632750000,11407,118632750000,RH_EXTIMU,2.29895302205e-06,1.5313042344e-05,-0.703308773292,0.710884497771,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.91064248241e-08,7.66649171451e-09,-7.19460297676e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245634577052,-0.000176969021046,9.81001327649,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118635250000,11408,118635250000,RH_EXTIMU,2.29880865281e-06,1.53131146298e-05,-0.703308837223,0.710884434521,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.21875795948e-07,-3.94621495667e-08,-7.19453096114e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245916926444,-0.000177382545382,9.80999603076,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118637750000,11409,118637750000,RH_EXTIMU,2.29901128518e-06,1.53130561542e-05,-0.703308901153,0.710884371272,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.49039223005e-07,8.14122179179e-08,-7.19446807278e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243777686295,-0.000182253175307,9.81000219259,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118640250000,11410,118640250000,RH_EXTIMU,2.29908024294e-06,1.53130328358e-05,-0.703308965083,0.710884308024,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.32362879161e-08,2.61948134098e-08,-7.19439766912e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245095539756,-0.000180029738817,9.80999830041,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118642750000,11411,118642750000,RH_EXTIMU,2.29902770854e-06,1.53130393174e-05,-0.703309029012,0.710884244776,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.26240804563e-08,-2.52149641296e-08,-7.19432574818e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245962408828,-0.000178323756051,9.80999474626,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118645250000,11412,118645250000,RH_EXTIMU,2.2988751021e-06,1.53130371917e-05,-0.703309092941,0.710884181528,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.46928609969e-08,-8.64153127537e-08,-7.19425710457e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246897145429,-0.000177494859289,9.80998406191,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118647750000,11413,118647750000,RH_EXTIMU,2.29916984533e-06,1.53128256046e-05,-0.703309156868,0.710884118282,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.87570980908e-07,4.61625928234e-08,-7.19419418422e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243354739118,-0.000185469464098,9.81001309394,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118650250000,11414,118650250000,RH_EXTIMU,2.29911805827e-06,1.5312946578e-05,-0.703309220796,0.710884055036,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.66175692438e-08,4.03177917063e-08,-7.19409891947e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245371516886,-0.000176384824486,9.81001784435,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118652750000,11415,118652750000,RH_EXTIMU,2.29890414181e-06,1.53130978521e-05,-0.703309284722,0.710883991791,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0587036584e-07,-3.36716647937e-08,-7.1940182588e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245907387819,-0.000175836316243,9.81000600444,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118655250000,11416,118655250000,RH_EXTIMU,2.2988749688e-06,1.53130299882e-05,-0.703309348648,0.710883928546,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.24919768595e-08,-5.43515897948e-08,-7.19396195277e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246130296027,-0.000180280441315,9.80997799013,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118661500000,11417,118657750000,RH_EXTIMU,2.29908940474e-06,1.53128760214e-05,-0.703309412573,0.710883865302,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.09479709292e-07,3.37470201725e-08,-7.19389711333e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244578739262,-0.000182704828472,9.81000194886,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118661500000,11418,118660250000,RH_EXTIMU,2.29909912736e-06,1.53128592321e-05,-0.703309476498,0.710883802058,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.58752030459e-08,-3.42060893449e-09,-7.19382755465e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245385063168,-0.000179432862742,9.80999337583,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118661500000,11419,118662750000,RH_EXTIMU,2.29921664753e-06,1.53127986332e-05,-0.703309540422,0.710883738815,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.01829763863e-07,3.23166036539e-08,-7.1937555008e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244568438153,-0.000181004183896,9.81000725224,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118661500000,11420,118665250000,RH_EXTIMU,2.29917730888e-06,1.5312870676e-05,-0.703309604345,0.710883675573,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.20074855847e-08,1.9494616135e-08,-7.19367297615e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245394735887,-0.000177875305666,9.81000915838,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118667750000,11421,118667750000,RH_EXTIMU,2.29896494013e-06,1.53129258864e-05,-0.703309668268,0.710883612331,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.50940178936e-07,-8.74331027454e-08,-7.19359889734e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247012607298,-0.000176267007268,9.80998901342,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118670250000,11422,118670250000,RH_EXTIMU,2.29919255447e-06,1.53128014245e-05,-0.70330973219,0.71088354909,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.00373422498e-07,5.79415168307e-08,-7.19354335452e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243346905336,-0.000183884185458,9.81000023882,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118672750000,11423,118672750000,RH_EXTIMU,2.29923916111e-06,1.53128077381e-05,-0.703309796112,0.71088348585,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.38525605871e-08,3.04708418743e-08,-7.19346630986e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245503786814,-0.000178814828598,9.80999979327,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118675250000,11424,118675250000,RH_EXTIMU,2.29923471127e-06,1.5312764819e-05,-0.703309860032,0.71088342261,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.25170848285e-08,-2.6254982018e-08,-7.19338557054e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245779595116,-0.000179759613687,9.81001191086,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118677750000,11425,118677750000,RH_EXTIMU,2.29912824659e-06,1.53128020715e-05,-0.703309923952,0.710883359371,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.0607905792e-08,-3.80592278756e-08,-7.19330980677e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245839467145,-0.000177771413483,9.80999960246,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118680250000,11426,118680250000,RH_EXTIMU,2.2991662983e-06,1.53128043187e-05,-0.703309987872,0.710883296132,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.12752539542e-08,2.33448061733e-08,-7.1932466732e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244612009756,-0.00017983305996,9.80999394363,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118682750000,11427,118682750000,RH_EXTIMU,2.29924074293e-06,1.53128053902e-05,-0.703310051791,0.710883232894,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.26335981663e-08,4.3152627001e-08,-7.19318332911e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244768445058,-0.000179883081963,9.80999072663,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118685250000,11428,118685250000,RH_EXTIMU,2.29936116261e-06,1.53126897015e-05,-0.703310115709,0.710883169657,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.34474821628e-07,2.61806617434e-09,-7.19311254302e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245382922668,-0.000181828990045,9.81000483571,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118687750000,11429,118687750000,RH_EXTIMU,2.29927620918e-06,1.53126954019e-05,-0.703310179627,0.71088310642,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.06215894418e-08,-4.38999205258e-08,-7.19302589596e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245942755598,-0.000177935228854,9.81000853403,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118690250000,11430,118690250000,RH_EXTIMU,2.29927527673e-06,1.53127369054e-05,-0.703310243543,0.710883043184,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.29828522809e-08,2.37357526442e-08,-7.19295858935e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244823305112,-0.000178990446073,9.80999911515,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118692750000,11431,118692750000,RH_EXTIMU,2.29935809042e-06,1.53127156701e-05,-0.70331030746,0.710882979949,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.99440021516e-08,3.51753724292e-08,-7.19288877291e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244668184993,-0.000180520321999,9.81000274747,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118695250000,11432,118695250000,RH_EXTIMU,2.29923880519e-06,1.53127584195e-05,-0.703310371375,0.710882916714,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.09918258608e-08,-4.21467275018e-08,-7.19281481463e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024651220972,-0.000177083658028,9.80998912545,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118697750000,11433,118697750000,RH_EXTIMU,2.29924430517e-06,1.5312647216e-05,-0.70331043529,0.71088285348,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.65956169069e-08,-5.94905032546e-08,-7.19275694914e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246046927973,-0.000180670959335,9.80998570554,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118700250000,11434,118700250000,RH_EXTIMU,2.29941291698e-06,1.53124929651e-05,-0.703310499205,0.710882790246,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.83578852151e-07,7.80277574962e-09,-7.19267807576e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244964339537,-0.000182482852085,9.81001395734,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118702750000,11435,118702750000,RH_EXTIMU,2.29927520847e-06,1.53125606677e-05,-0.703310563119,0.710882727013,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.15509171908e-07,-3.83215579709e-08,-7.19260086851e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245928307624,-0.000176750800242,9.80999751772,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118705250000,11436,118705250000,RH_EXTIMU,2.29930126177e-06,1.53125639959e-05,-0.703310627032,0.710882663781,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.38433082481e-08,1.72086588609e-08,-7.19253813684e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244828819816,-0.000179882594748,9.80999317854,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118707750000,11437,118707750000,RH_EXTIMU,2.29947816355e-06,1.53124821305e-05,-0.703310690944,0.710882600549,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.4756580996e-07,5.36332043148e-08,-7.19247017937e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244154345352,-0.000182071640268,9.81000589296,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118710250000,11438,118710250000,RH_EXTIMU,2.29950496901e-06,1.5312544037e-05,-0.703310754856,0.710882537318,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.86879367779e-08,5.09456546395e-08,-7.19238703722e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244796746332,-0.00017860858891,9.81001154405,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118712750000,11439,118712750000,RH_EXTIMU,2.29937609166e-06,1.5312608721e-05,-0.703310818767,0.710882474088,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.08788436929e-07,-3.50694950528e-08,-7.19231379703e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246283696347,-0.000177035094614,9.80999357604,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118715250000,11440,118715250000,RH_EXTIMU,2.29940686723e-06,1.53125559376e-05,-0.703310882678,0.710882410858,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.80999657249e-08,-1.20453719122e-08,-7.1922524785e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245188377956,-0.000180508024905,9.80999165939,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118717750000,11441,118717750000,RH_EXTIMU,2.29960567145e-06,1.53124368337e-05,-0.703310946588,0.710882347629,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.80973996498e-07,4.47788423519e-08,-7.19218165476e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244244550599,-0.00018277801232,9.81000926365,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118720250000,11442,118720250000,RH_EXTIMU,2.29931756168e-06,1.53124634359e-05,-0.703311010497,0.7108822844,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.77918184513e-07,-1.4631882809e-07,-7.19210016436e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000248237512031,-0.000175305257228,9.80998766986,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118722750000,11443,118722750000,RH_EXTIMU,2.29932715024e-06,1.53123935206e-05,-0.703311074405,0.710882221172,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.56900276979e-08,-3.37092755427e-08,-7.19203411184e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245405416832,-0.000180250890704,9.80999782818,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118725250000,11444,118725250000,RH_EXTIMU,2.29935396326e-06,1.53123546197e-05,-0.703311138313,0.710882157945,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.80354129119e-08,-6.37985568423e-09,-7.19196300358e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245318851242,-0.000179820535249,9.80999906601,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118727750000,11445,118727750000,RH_EXTIMU,2.29937190375e-06,1.5312335753e-05,-0.703311202221,0.710882094718,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.17173430952e-08,2.15704527894e-11,-7.19189130544e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245273530225,-0.000179567540908,9.80999995815,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118730250000,11446,118730250000,RH_EXTIMU,2.2996595528e-06,1.53123117006e-05,-0.703311266127,0.710882031492,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.78019880135e-07,1.48823640108e-07,-7.19181929692e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000242733380887,-0.000182604668716,9.81001829467,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118732750000,11447,118732750000,RH_EXTIMU,2.2994560132e-06,1.53124385681e-05,-0.703311330033,0.710881968267,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.86236820114e-07,-4.17141784133e-08,-7.19173633369e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246421159968,-0.00017560000154,9.81000038941,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118735250000,11448,118735250000,RH_EXTIMU,2.29942763366e-06,1.53124576106e-05,-0.703311393939,0.710881905042,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.59547319617e-08,-4.48117309585e-09,-7.19166445237e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245265728628,-0.000179086444014,9.81000203088,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118735250000,11449,118737750000,RH_EXTIMU,2.29947521351e-06,1.53124050731e-05,-0.703311457843,0.710881841818,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.75182261021e-08,-2.45065893406e-09,-7.19159498669e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245321339584,-0.000180497123023,9.80999809643,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118740250000,11450,118740250000,RH_EXTIMU,2.29950180062e-06,1.531229707e-05,-0.703311521748,0.710881778594,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.67872043862e-08,-4.58057990029e-08,-7.1915412132e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245990127598,-0.000180599893494,9.80997507814,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118742750000,11451,118742750000,RH_EXTIMU,2.29971326111e-06,1.53121798124e-05,-0.703311585651,0.710881715371,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.87132739666e-07,5.29499530056e-08,-7.19146762816e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244372554059,-0.000182121298448,9.81001205634,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118745250000,11452,118745250000,RH_EXTIMU,2.29964788107e-06,1.53122578203e-05,-0.703311649554,0.710881652149,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.01739171178e-08,8.23432754862e-09,-7.19137909677e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245300578352,-0.000177564131124,9.81001644789,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118747750000,11453,118747750000,RH_EXTIMU,2.29939275542e-06,1.53123578064e-05,-0.703311713456,0.710881588927,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.00449346593e-07,-8.60267393079e-08,-7.19130782753e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246954480904,-0.000175551181,9.80998347672,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118750250000,11454,118750250000,RH_EXTIMU,2.29968941985e-06,1.53122222402e-05,-0.703311777358,0.710881525706,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.4588996796e-07,9.04777318095e-08,-7.1912592687e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000242824946308,-0.000184683966289,9.80999552122,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118752750000,11455,118752750000,RH_EXTIMU,2.29980818288e-06,1.53121534232e-05,-0.703311841259,0.710881462486,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.07160039458e-07,2.83422758423e-08,-7.19118166052e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245798681917,-0.000180405183624,9.810003232,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118755250000,11456,118755250000,RH_EXTIMU,2.29963625422e-06,1.53121433993e-05,-0.703311905159,0.710881399266,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.12376602433e-08,-1.01779390283e-07,-7.19109873327e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246952922638,-0.000177177851219,9.81000224805,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118757750000,11457,118757750000,RH_EXTIMU,2.29959106672e-06,1.53121605226e-05,-0.703311969058,0.710881336047,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.44337662666e-08,-1.50297104877e-08,-7.19102553055e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245162561631,-0.000179009130719,9.81000420392,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118760250000,11458,118760250000,RH_EXTIMU,2.29960637783e-06,1.53121468786e-05,-0.703312032957,0.710881272828,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.72833632615e-08,1.51220625959e-09,-7.19095572808e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245126523239,-0.000179568122214,9.80999656522,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118762750000,11459,118762750000,RH_EXTIMU,2.29976516562e-06,1.53121217784e-05,-0.703312096856,0.71088120961,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.05325083325e-07,7.57241268067e-08,-7.19089549358e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244030790116,-0.000181217029459,9.8099958273,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118765250000,11460,118765250000,RH_EXTIMU,2.29973320171e-06,1.5312078439e-05,-0.703312160754,0.710881146393,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.10589446845e-09,-4.19749844939e-08,-7.19082146816e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246335803296,-0.000179081327233,9.80999507582,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118767750000,11461,118767750000,RH_EXTIMU,2.29979502387e-06,1.53120164841e-05,-0.703312224651,0.710881083176,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.09165127479e-08,2.06980862682e-10,-7.1907475021e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245000189618,-0.000180628463143,9.81000841028,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118770250000,11462,118770250000,RH_EXTIMU,2.29965988404e-06,1.5312080525e-05,-0.703312288547,0.71088101996,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.11988301184e-07,-3.89591773594e-08,-7.19066592332e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246285613657,-0.000176753868115,9.80999991035,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118772750000,11463,118772750000,RH_EXTIMU,2.29988700041e-06,1.53119965286e-05,-0.703312352443,0.710880956744,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.77321723105e-07,8.06746603783e-08,-7.19060204093e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024306912965,-0.000183436432751,9.81001301025,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118775250000,11464,118775250000,RH_EXTIMU,2.29980414392e-06,1.53121438006e-05,-0.703312416338,0.710880893529,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.29084441354e-07,3.77918743906e-08,-7.19052028271e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245626895704,-0.000175878601483,9.8099982329,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118777750000,11465,118777750000,RH_EXTIMU,2.29980502773e-06,1.53121214433e-05,-0.703312480232,0.710880830315,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.39809861284e-08,-1.15606605838e-08,-7.19046204119e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245483655051,-0.000179944482862,9.80998833476,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118780250000,11466,118780250000,RH_EXTIMU,2.29978992524e-06,1.53120316748e-05,-0.703312544126,0.710880767102,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.28183506972e-08,-5.88923616806e-08,-7.19039038904e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246313920361,-0.000179827579352,9.80999367593,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118782750000,11467,118782750000,RH_EXTIMU,2.29977620514e-06,1.53119531685e-05,-0.703312608019,0.710880703889,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.72678326798e-08,-5.17097031922e-08,-7.19031834885e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245860781089,-0.000179823703384,9.80999820447,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118785250000,11468,118785250000,RH_EXTIMU,2.29999233301e-06,1.53118063003e-05,-0.703312671912,0.710880640676,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.06447281333e-07,3.87365068755e-08,-7.19024905055e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243961051983,-0.000183537853331,9.81001106913,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118787750000,11469,118787750000,RH_EXTIMU,2.29987785238e-06,1.53119398457e-05,-0.703312735804,0.710880577464,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.39346057677e-07,1.21920946268e-08,-7.19016672064e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024606167012,-0.00017553330297,9.81000043692,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118790250000,11470,118790250000,RH_EXTIMU,2.29992258527e-06,1.53119173211e-05,-0.703312799695,0.710880514253,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.90122347213e-08,1.30158622527e-08,-7.19009781113e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244529846164,-0.000180842783235,9.81000684181,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118792750000,11471,118792750000,RH_EXTIMU,2.29986655193e-06,1.53119563392e-05,-0.703312863586,0.710880451043,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.29209988284e-08,-8.68068514347e-09,-7.19001783286e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245840249251,-0.000177842315244,9.81000258138,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118792750000,11472,118795250000,RH_EXTIMU,2.29981646535e-06,1.53119523332e-05,-0.703312927476,0.710880387833,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.53315803873e-08,-2.98026965171e-08,-7.18994821205e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245626471728,-0.000179006862531,9.80999699332,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118797750000,11473,118797750000,RH_EXTIMU,2.29980743999e-06,1.53119583044e-05,-0.703312991365,0.710880324624,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.59353229066e-09,-1.02554320097e-09,-7.18988352768e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245229789245,-0.000178901757585,9.80998766544,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118800250000,11474,118800250000,RH_EXTIMU,2.29999357505e-06,1.53118763339e-05,-0.703313055254,0.710880261415,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.52875427004e-07,5.87687392172e-08,-7.18983029276e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244205072322,-0.000182196849303,9.8099879293,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118802750000,11475,118802750000,RH_EXTIMU,2.30007570144e-06,1.53117687923e-05,-0.703313119142,0.710880198207,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.08112858049e-07,-1.4294204951e-08,-7.18974333236e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245972920881,-0.000180718311595,9.81001634894,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118805250000,11476,118805250000,RH_EXTIMU,2.29999684956e-06,1.53117715139e-05,-0.703313183029,0.710880135,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.54758133078e-08,-4.21615744867e-08,-7.18965987977e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245685017198,-0.000178585418594,9.81001280379,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118807750000,11477,118807750000,RH_EXTIMU,2.29988150215e-06,1.53118322786e-05,-0.703313246916,0.710880071793,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.88889691476e-08,-2.96864444265e-08,-7.1895893087e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245744620072,-0.000177477439484,9.80999393125,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118809000000,11478,118810250000,RH_EXTIMU,2.29998204924e-06,1.53117865407e-05,-0.703313310802,0.710880008587,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.38148652762e-08,3.12182416832e-08,-7.18952440361e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024460341278,-0.000180960651474,9.80999786709,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118814000000,11479,118812750000,RH_EXTIMU,2.30017502192e-06,1.53117248472e-05,-0.703313374688,0.710879945382,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.45355093965e-07,7.41475326965e-08,-7.18945428641e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243976113905,-0.00018197658349,9.81000920782,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118815250000,11480,118815250000,RH_EXTIMU,2.29991877363e-06,1.53118412364e-05,-0.703313438572,0.710879882177,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.10317016176e-07,-7.73306366727e-08,-7.18937263638e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247629724118,-0.000174321360216,9.80998788161,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118830250000,11481,118817750000,RH_EXTIMU,2.30011159642e-06,1.53116587977e-05,-0.703313502457,0.710879818973,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.13207173264e-07,5.39498405914e-09,-7.18931478131e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244036200779,-0.000184478135499,9.81000601553,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118830250000,11482,118820250000,RH_EXTIMU,2.30004089704e-06,1.53117231843e-05,-0.70331356634,0.710879755769,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.55353787148e-08,-2.50548984592e-09,-7.18922618089e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245809709547,-0.000176775836362,9.8100067797,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118830250000,11483,118822750000,RH_EXTIMU,2.30005839509e-06,1.53117379472e-05,-0.703313630223,0.710879692566,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.54371063024e-09,1.88976288087e-08,-7.18915884627e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244875789003,-0.000179766840811,9.81000079642,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118830250000,11484,118825250000,RH_EXTIMU,2.30002502984e-06,1.53117380257e-05,-0.703313694105,0.710879629364,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.81203230616e-08,-1.80716750254e-08,-7.18908988086e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245789784332,-0.000178646437463,9.80999188476,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118830250000,11485,118827750000,RH_EXTIMU,2.30016743218e-06,1.53117141645e-05,-0.703313757987,0.710879566162,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.53090712141e-08,6.72094901147e-08,-7.18902271894e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024391760367,-0.000181120919778,9.81000456599,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118830250000,11486,118830250000,RH_EXTIMU,2.30022350863e-06,1.53117024704e-05,-0.703313821868,0.710879502961,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.93693934118e-08,2.55575996955e-08,-7.18894687315e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245046865423,-0.000179978797769,9.81000581277,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118834000000,11487,118832750000,RH_EXTIMU,2.30020234249e-06,1.53117017702e-05,-0.703313885748,0.710879439761,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.07445262243e-08,-1.16507115854e-08,-7.18887005329e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245627554606,-0.00017889897065,9.81000375894,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118835250000,11488,118835250000,RH_EXTIMU,2.30019610677e-06,1.53116992574e-05,-0.703313949628,0.710879376561,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.2336310772e-09,-4.28099875494e-09,-7.18879823621e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245301560473,-0.000179286486716,9.81000101322,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118837750000,11489,118837750000,RH_EXTIMU,2.30021411304e-06,1.53116815245e-05,-0.703314013506,0.710879313362,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.11163889521e-08,7.03140540886e-10,-7.18872718724e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245273476203,-0.000179629448036,9.80999980457,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118841500000,11490,118840250000,RH_EXTIMU,2.300236549e-06,1.5311658263e-05,-0.703314077385,0.710879250163,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.67463313428e-08,5.12664690937e-11,-7.18865612351e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245293545296,-0.000179681283697,9.80999956216,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118842750000,11491,118842750000,RH_EXTIMU,2.30025773681e-06,1.53116361712e-05,-0.703314141263,0.710879186965,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.53783116401e-08,1.42545233217e-11,-7.18858487015e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245291439577,-0.000179642364922,9.8099996701,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118845250000,11492,118845250000,RH_EXTIMU,2.30020447164e-06,1.53116235784e-05,-0.70331420514,0.710879123768,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.23079769583e-08,-3.64747110832e-08,-7.1885143779e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024610651426,-0.000178598365432,9.80999199326,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118847750000,11493,118847750000,RH_EXTIMU,2.30028946307e-06,1.53115265536e-05,-0.703314269016,0.710879060571,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.03824764255e-07,-6.70119703579e-09,-7.18844861237e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244987646168,-0.000181336565965,9.81000036276,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118850250000,11494,118850250000,RH_EXTIMU,2.30025867283e-06,1.53115745099e-05,-0.703314332892,0.710878997375,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.35944740925e-08,1.06052990824e-08,-7.18837032883e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245230372423,-0.000178028318872,9.81000147562,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118852750000,11495,118852750000,RH_EXTIMU,2.3002615217e-06,1.53115662752e-05,-0.703314396767,0.71087893418,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.15213502396e-09,-2.42361327336e-09,-7.18830468513e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245439840996,-0.000179459134852,9.80999328585,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118855250000,11496,118855250000,RH_EXTIMU,2.30041646332e-06,1.5311449797e-05,-0.703314460642,0.710878870985,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.54551154369e-07,2.15931347526e-08,-7.18823662672e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244657930042,-0.000182372975237,9.81000429453,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118857750000,11497,118857750000,RH_EXTIMU,2.30029488176e-06,1.53114541903e-05,-0.703314524515,0.710878807791,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.07170523004e-08,-6.5252997228e-08,-7.18815574957e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246981134787,-0.000177115116465,9.80999764535,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118860250000,11498,118860250000,RH_EXTIMU,2.30024314207e-06,1.53114487936e-05,-0.703314588389,0.710878744597,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.54893260981e-08,-3.15240659467e-08,-7.18809045431e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245181528944,-0.000179057427418,9.80999257246,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118862750000,11499,118862750000,RH_EXTIMU,2.30053907576e-06,1.53113735282e-05,-0.703314652261,0.710878681404,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.11545231549e-07,1.24360482333e-07,-7.18802734633e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000242789757375,-0.000183573862222,9.81001050486,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118865250000,11500,118865250000,RH_EXTIMU,2.30027145129e-06,1.53115361271e-05,-0.703314716133,0.710878618212,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.42786674406e-07,-5.74524343785e-08,-7.18794351134e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247638874374,-0.000173358422182,9.80998477415,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118867750000,11501,118867750000,RH_EXTIMU,2.30047348321e-06,1.53114233213e-05,-0.703314780005,0.71087855502,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.79265150019e-07,5.01771894132e-08,-7.1878895187e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243577596328,-0.000183530998595,9.8100008654,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118870250000,11502,118870250000,RH_EXTIMU,2.30044226676e-06,1.53113396064e-05,-0.703314843875,0.710878491829,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.02481130027e-08,-6.45164084124e-08,-7.18780052672e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246793749279,-0.000179311372566,9.81001127604,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118872750000,11503,118872750000,RH_EXTIMU,2.30033309036e-06,1.53113791185e-05,-0.703314907745,0.710878428638,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.34218229177e-08,-3.83011955695e-08,-7.18772327038e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245538562124,-0.000177765148034,9.81000462149,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118876500000,11504,118875250000,RH_EXTIMU,2.30032573537e-06,1.53114122141e-05,-0.703314971615,0.710878365448,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.190546859e-08,1.53397284113e-08,-7.18766804287e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024485397912,-0.00017912709849,9.80998052959,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118877750000,11505,118877750000,RH_EXTIMU,2.30036599694e-06,1.53112857635e-05,-0.703315035484,0.710878302259,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.4943125801e-08,-4.8603028159e-08,-7.18759628677e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247046191521,-0.000180191012266,9.80999173277,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118880250000,11506,118880250000,RH_EXTIMU,2.30034838619e-06,1.53110859662e-05,-0.703315099352,0.71087823907,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.03299728967e-07,-1.22877555479e-07,-7.18753483076e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246471178478,-0.000181485294274,9.80998693351,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118882750000,11507,118882750000,RH_EXTIMU,2.30068610404e-06,1.53109506148e-05,-0.70331516322,0.710878175882,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.69115323219e-07,1.13699447638e-07,-7.18746252769e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000242330273785,-0.000184382045358,9.81002561241,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118886500000,11508,118885250000,RH_EXTIMU,2.30039251178e-06,1.5311299933e-05,-0.703315227086,0.710878112695,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.62612718678e-07,3.41242592315e-08,-7.1873635405e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246106817098,-0.000171117823792,9.81000602549,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118887750000,11509,118887750000,RH_EXTIMU,2.3004566791e-06,1.53112952352e-05,-0.703315290953,0.710878049508,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.00339312464e-08,3.40886735354e-08,-7.18730855675e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244295361834,-0.000181462375645,9.80999640958,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118890250000,11510,118890250000,RH_EXTIMU,2.3006114968e-06,1.53112419196e-05,-0.703315354818,0.710877986322,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.18941968718e-07,5.74441983007e-08,-7.18723387861e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244550340907,-0.000181055841863,9.81000719167,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118892750000,11511,118892750000,RH_EXTIMU,2.30052409729e-06,1.53112964934e-05,-0.703315418683,0.710877923136,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.9511846586e-08,-1.7482828937e-08,-7.18716807726e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245616105226,-0.000177686380948,9.80998623829,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118897750000,11512,118895250000,RH_EXTIMU,2.30064178817e-06,1.53112056463e-05,-0.703315482548,0.710877859951,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.18944964461e-07,1.52105164745e-08,-7.18710196872e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245100343864,-0.000181445218514,9.80999818632,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118897750000,11513,118897750000,RH_EXTIMU,2.30058218765e-06,1.53111428635e-05,-0.703315546411,0.710877796767,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.32854076759e-09,-6.85827373163e-08,-7.18702627322e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246531402093,-0.000178912528303,9.80999623644,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118900250000,11514,118900250000,RH_EXTIMU,2.3006630814e-06,1.53110554941e-05,-0.703315610274,0.710877733583,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.60615816631e-08,-3.5156899599e-09,-7.18695270604e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245019720211,-0.000181202225593,9.81000980893,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118904000000,11515,118902750000,RH_EXTIMU,2.30063707974e-06,1.53110635425e-05,-0.703315674137,0.7108776704,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.84171271653e-08,-9.39638054446e-09,-7.1868658448e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245490068876,-0.000178649289788,9.81001739439,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118905250000,11516,118905250000,RH_EXTIMU,2.30036882652e-06,1.53112102981e-05,-0.703315737998,0.710877607218,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.34230066862e-07,-6.6816763816e-08,-7.18678575105e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024682725291,-0.000174616967951,9.80999271053,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118907750000,11517,118907750000,RH_EXTIMU,2.30053928778e-06,1.5311097427e-05,-0.703315801859,0.710877544036,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.61347409942e-07,3.23768138713e-08,-7.18673906769e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243853633475,-0.000183084265794,9.80998663213,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118910250000,11518,118910250000,RH_EXTIMU,2.30073567967e-06,1.5311038328e-05,-0.70331586572,0.710877480855,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.45839151051e-07,7.75470920924e-08,-7.18667551149e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244396607745,-0.000181360603899,9.80999281185,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118912750000,11519,118912750000,RH_EXTIMU,2.30079084878e-06,1.53109960301e-05,-0.70331592958,0.710877417675,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.60722920305e-08,7.64251698874e-09,-7.18658646492e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245486867287,-0.000179784748981,9.81002206126,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118915250000,11520,118915250000,RH_EXTIMU,2.3005982083e-06,1.53110578709e-05,-0.703315993439,0.710877354495,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.43451415011e-07,-7.25643923588e-08,-7.18651372669e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246389971429,-0.000176884423418,9.80999076699,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118917750000,11521,118917750000,RH_EXTIMU,2.30061042504e-06,1.53110170519e-05,-0.703316057297,0.710877291315,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.08131112624e-08,-1.56837380223e-08,-7.18645117065e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245473935532,-0.000179641280301,9.80999020031,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118920250000,11522,118920250000,RH_EXTIMU,2.30068846657e-06,1.53109542382e-05,-0.703316121155,0.710877228137,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.06231154009e-08,8.84437518634e-09,-7.18638274829e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244981513148,-0.000180789643594,9.80999940388,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118920250000,11523,118922750000,RH_EXTIMU,2.30067711638e-06,1.5310927011e-05,-0.703316185013,0.710877164959,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.76307720234e-09,-2.1214088736e-08,-7.18630546429e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024574356903,-0.000179104869778,9.81000252561,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118925250000,11524,118925250000,RH_EXTIMU,2.3007684136e-06,1.53109839439e-05,-0.703316248869,0.710877101781,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.07858356853e-08,8.44028357334e-08,-7.18623885814e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024362805567,-0.000179647847934,9.81000264834,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118927750000,11525,118927750000,RH_EXTIMU,2.30076097344e-06,1.53109238339e-05,-0.703316312725,0.710877038604,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.04883138745e-08,-3.77146151228e-08,-7.18616545607e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246396250724,-0.0001798125984,9.8099958908,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118930250000,11526,118930250000,RH_EXTIMU,2.30092901305e-06,1.53109004657e-05,-0.703316376581,0.710876975428,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0961097901e-07,8.1914807758e-08,-7.18609023964e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243771503967,-0.000181126716108,9.81001808347,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118932750000,11527,118932750000,RH_EXTIMU,2.30086539153e-06,1.53109431674e-05,-0.703316440435,0.710876912253,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.93094686343e-08,-1.08560586289e-08,-7.18600316317e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024552685718,-0.00017824263166,9.81001527755,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118936500000,11528,118935250000,RH_EXTIMU,2.30065873416e-06,1.53109721114e-05,-0.703316504289,0.710876849078,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.32913381504e-07,-9.91596346818e-08,-7.18594428185e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246960776673,-0.000177044022196,9.80997032527,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118937750000,11529,118937750000,RH_EXTIMU,2.30106892271e-06,1.5310733266e-05,-0.703316568143,0.710876785903,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.68560389611e-07,9.56184245366e-08,-7.18588706958e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000242973609847,-0.000186343379564,9.81000980701,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118940250000,11530,118940250000,RH_EXTIMU,2.30102271343e-06,1.53108404337e-05,-0.703316631995,0.71087672273,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.56791726614e-08,3.56028991813e-08,-7.18579192232e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245504749304,-0.000176485787939,9.81001631896,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118942750000,11531,118942750000,RH_EXTIMU,2.30069391376e-06,1.53109350062e-05,-0.703316695847,0.710876659557,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.39301933703e-07,-1.30560488269e-07,-7.18572245484e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247753411979,-0.000174990836815,9.80998063804,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118945250000,11532,118945250000,RH_EXTIMU,2.30084148912e-06,1.53107634944e-05,-0.703316759699,0.710876596384,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.81326381729e-07,-1.38489715207e-08,-7.18566153337e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0002449880311,-0.000182952321582,9.80999744585,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118947750000,11533,118947750000,RH_EXTIMU,2.30080446535e-06,1.53107080205e-05,-0.70331682355,0.710876533212,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.10554684593e-08,-5.17233813919e-08,-7.18559152472e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246091316105,-0.000179005598914,9.8099905344,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118950250000,11534,118950250000,RH_EXTIMU,2.30096948962e-06,1.53106441016e-05,-0.7033168874,0.710876470041,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.3071201103e-07,5.71569818255e-08,-7.18552120454e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243861289684,-0.000181762388276,9.81001066627,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118952750000,11535,118952750000,RH_EXTIMU,2.30083411672e-06,1.53107669142e-05,-0.70331695125,0.710876406871,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.45189288005e-07,-5.66819163469e-09,-7.18544633535e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245817072458,-0.000176091460718,9.80999149536,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118955250000,11536,118955250000,RH_EXTIMU,2.30103355874e-06,1.53107072836e-05,-0.703317015099,0.710876343701,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.47872603142e-07,7.89609977476e-08,-7.18537919275e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243644436176,-0.00018245824975,9.81001034507,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118957750000,11537,118957750000,RH_EXTIMU,2.30102213693e-06,1.53107395477e-05,-0.703317078947,0.710876280531,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.37507970582e-08,1.25783242001e-08,-7.18529365259e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245775953304,-0.000178271336307,9.81001215072,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118960250000,11538,118960250000,RH_EXTIMU,2.30076659914e-06,1.53108152602e-05,-0.703317142794,0.710876217363,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.87026207247e-07,-1.00065290215e-07,-7.18521548898e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247171548826,-0.000175573453036,9.80999137924,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118962750000,11539,118962750000,RH_EXTIMU,2.30098856441e-06,1.5310651074e-05,-0.703317206641,0.710876154195,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.1951014669e-07,3.21729490355e-08,-7.18516014409e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243846822931,-0.000184268970567,9.81000170364,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118965250000,11540,118965250000,RH_EXTIMU,2.30110087882e-06,1.5310643797e-05,-0.703317270487,0.710876091027,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.88660550504e-08,5.97118479526e-08,-7.18508066437e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024469814116,-0.000179712985118,9.81000796648,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118970250000,11541,118967750000,RH_EXTIMU,2.30093614441e-06,1.53106868244e-05,-0.703317334333,0.710876027861,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.16995830639e-07,-6.75625649637e-08,-7.18501221088e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246549250235,-0.000177070495496,9.8099857224,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118970250000,11542,118970250000,RH_EXTIMU,2.30108397787e-06,1.53105979296e-05,-0.703317398178,0.710875964694,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.34988307317e-07,3.32806878292e-08,-7.18494770803e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244370530068,-0.000181845707889,9.81000071415,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118972750000,11543,118972750000,RH_EXTIMU,2.30108908731e-06,1.53105894648e-05,-0.703317462023,0.710875901529,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.56675772645e-09,-1.28292449174e-09,-7.18487161429e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024577931488,-0.000178910109971,9.81000104192,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118975250000,11544,118975250000,RH_EXTIMU,2.30109008211e-06,1.53106147083e-05,-0.703317525866,0.710875838364,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.27393422326e-08,1.55718669075e-08,-7.18480569515e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244732147533,-0.000179054167079,9.80999426662,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118977750000,11545,118977750000,RH_EXTIMU,2.30107585695e-06,1.53105677947e-05,-0.70331758971,0.710875775199,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.92045075208e-08,-3.40274746258e-08,-7.18473066267e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246092603535,-0.000179417173072,9.81000024074,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118981500000,11546,118980250000,RH_EXTIMU,2.30110586052e-06,1.53105363489e-05,-0.703317653552,0.710875712036,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.56544179604e-08,-3.45502536724e-10,-7.18465774326e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245000243074,-0.000179946788382,9.81000432755,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118982750000,11547,118982750000,RH_EXTIMU,2.30118427563e-06,1.53105470985e-05,-0.703317717394,0.710875648873,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.94446719237e-08,5.08899861593e-08,-7.18458351625e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244388559601,-0.000179935890018,9.81000947982,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118985250000,11548,118985250000,RH_EXTIMU,2.30115078848e-06,1.53106276265e-05,-0.703317781235,0.71087558571,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.34553420808e-08,2.76107466746e-08,-7.18450354105e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245135427178,-0.000177907638502,9.81000748769,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118987750000,11549,118987750000,RH_EXTIMU,2.30112987104e-06,1.53106549218e-05,-0.703317845075,0.710875522549,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.63553567644e-08,4.40967899108e-09,-7.18443059754e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245274085992,-0.000178937441679,9.81000228179,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118990250000,11550,118990250000,RH_EXTIMU,2.30097604188e-06,1.53106478064e-05,-0.703317908915,0.710875459387,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.25810130219e-08,-8.99430167479e-08,-7.18436151225e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247306615269,-0.000177371232849,9.80998238188,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118992750000,11551,118992750000,RH_EXTIMU,2.30118204525e-06,1.53104149267e-05,-0.703317972755,0.710875396227,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.49083196325e-07,-1.58740090783e-08,-7.18430901198e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244502776517,-0.000184448233113,9.809991375,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118995250000,11552,118995250000,RH_EXTIMU,2.30126052714e-06,1.53103464612e-05,-0.703318036593,0.710875333067,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.40532631433e-08,5.87792598343e-09,-7.18423800175e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245491412785,-0.00017991559081,9.80999475859,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+118997750000,11553,118997750000,RH_EXTIMU,2.30135343022e-06,1.53103240157e-05,-0.703318100431,0.710875269907,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.63612564712e-08,4.01636328908e-08,-7.18416786074e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244400382392,-0.000180397306375,9.81000323007,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119000250000,11554,119000250000,RH_EXTIMU,2.30134980268e-06,1.53103469206e-05,-0.703318164269,0.710875206749,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.40523510379e-08,1.16410274038e-08,-7.18409152529e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245564217901,-0.000178637325965,9.81000442423,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119000250000,11555,119002750000,RH_EXTIMU,2.30124940702e-06,1.53103737515e-05,-0.703318228106,0.71087514359,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.1293397122e-08,-4.05732823855e-08,-7.1840134793e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245867660918,-0.00017795223176,9.81000049844,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119000250000,11556,119005250000,RH_EXTIMU,2.3013077944e-06,1.53103240987e-05,-0.703318291942,0.710875080433,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.20404489054e-08,5.27041577011e-09,-7.18394972138e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245048028642,-0.000180553844963,9.80999570379,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119007750000,11557,119007750000,RH_EXTIMU,2.30132168938e-06,1.53102774267e-05,-0.703318355777,0.710875017276,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.50604753019e-08,-1.8068287626e-08,-7.18387843515e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245748986802,-0.000179568165411,9.80999761549,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119010250000,11558,119010250000,RH_EXTIMU,2.30125506725e-06,1.53102473337e-05,-0.703318419612,0.71087495412,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0057898386e-08,-5.3943117932e-08,-7.18380798799e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246035453499,-0.00017879401619,9.80999272676,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119012750000,11559,119012750000,RH_EXTIMU,2.30140185257e-06,1.5310234669e-05,-0.703318483446,0.710874890964,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.15007304928e-08,7.60431151317e-08,-7.18373377456e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243998278711,-0.000180748217405,9.81001449218,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119015250000,11560,119015250000,RH_EXTIMU,2.3013284946e-06,1.53102586488e-05,-0.70331854728,0.710874827809,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.43128879729e-08,-2.69818994364e-08,-7.18364903366e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245774168752,-0.000178355796363,9.8100092115,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119017750000,11561,119017750000,RH_EXTIMU,2.30132938036e-06,1.53102534919e-05,-0.703318611113,0.710874764655,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.30341513463e-09,-1.77836752095e-09,-7.18357830377e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245284116921,-0.000179397709391,9.81000167328,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119020250000,11562,119020250000,RH_EXTIMU,2.30128875976e-06,1.53102420392e-05,-0.703318674945,0.710874701501,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.5758937571e-08,-2.87124964812e-08,-7.18350888046e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245947677636,-0.000178767914524,9.80999273389,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119022750000,11563,119022750000,RH_EXTIMU,2.30141467473e-06,1.53101904212e-05,-0.703318738776,0.710874638348,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.01549031161e-07,4.21475193406e-08,-7.18344568401e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243951315066,-0.000181264340152,9.80999962464,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119025250000,11564,119025250000,RH_EXTIMU,2.30146989402e-06,1.5310228288e-05,-0.703318802607,0.710874575196,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.09953253279e-08,5.32602390834e-08,-7.18336769819e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024505203212,-0.000179100831442,9.81000888158,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119027750000,11565,119027750000,RH_EXTIMU,2.30129364933e-06,1.53102460349e-05,-0.703318866437,0.710874512044,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.09317601079e-07,-8.84163331416e-08,-7.18328266923e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246866820923,-0.000177073354342,9.81000288242,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119030250000,11566,119030250000,RH_EXTIMU,2.30140707516e-06,1.53102174524e-05,-0.703318930267,0.710874448893,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.14853869845e-08,4.82207207636e-08,-7.18322091057e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243759044843,-0.000181265266232,9.81000085733,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119032750000,11567,119032750000,RH_EXTIMU,2.30139006155e-06,1.53102265036e-05,-0.703318994096,0.710874385742,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.38702830628e-08,-3.76941663083e-09,-7.18315144085e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246241795843,-0.000178324466939,9.80998969781,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119035250000,11568,119035250000,RH_EXTIMU,2.30138013084e-06,1.5310105327e-05,-0.703319057924,0.710874322592,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.34311111623e-08,-7.3844692749e-08,-7.18308519606e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246137674803,-0.000180577590674,9.80999111002,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119037750000,11569,119037750000,RH_EXTIMU,2.30158517238e-06,1.53099941516e-05,-0.703319121752,0.710874259443,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.80058456018e-07,5.27982719816e-08,-7.18301877193e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024378791623,-0.000182593494716,9.8100063886,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119040250000,11570,119040250000,RH_EXTIMU,2.30142206651e-06,1.53101350693e-05,-0.703319185579,0.710874196294,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.71148261871e-07,-1.0976658944e-08,-7.18294089874e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024639915489,-0.000174943335191,9.80999021748,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119042750000,11571,119042750000,RH_EXTIMU,2.30152601383e-06,1.53100848342e-05,-0.703319249406,0.710874133146,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.82778564789e-08,3.05737591361e-08,-7.18288012157e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244275215848,-0.000181556333509,9.80999861997,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119042750000,11572,119045250000,RH_EXTIMU,2.30161396104e-06,1.53100611456e-05,-0.703319313232,0.710874069998,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.42420446411e-08,3.6668210284e-08,-7.18279722958e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244864475798,-0.000180059794978,9.81001578784,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119047750000,11573,119047750000,RH_EXTIMU,2.3015268295e-06,1.53101348494e-05,-0.703319377057,0.710874006851,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.01234781982e-08,-6.4538424993e-09,-7.18271756872e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245434091289,-0.000177637342477,9.81000651046,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119050250000,11574,119050250000,RH_EXTIMU,2.30151282557e-06,1.53101518837e-05,-0.703319440881,0.710873943705,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.66504803924e-08,2.46391781766e-09,-7.18264565865e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245230835303,-0.000179114507233,9.81000169653,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119051500000,11575,119052750000,RH_EXTIMU,2.30153351483e-06,1.5310130114e-05,-0.703319504705,0.71087388056,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.49128096575e-08,-8.35918763012e-11,-7.18257506231e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245299005349,-0.000179696279604,9.80999952293,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119055250000,11576,119055250000,RH_EXTIMU,2.30156022014e-06,1.53101005541e-05,-0.703319568528,0.710873817415,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.27172972473e-08,-1.12890400422e-09,-7.18250442236e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245303328509,-0.000179746811987,9.80999922342,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119055250000,11577,119057750000,RH_EXTIMU,2.30158424159e-06,1.53100747516e-05,-0.703319632351,0.71087375427,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.90768634697e-08,-5.0215862755e-10,-7.18243343657e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245291565666,-0.000179660507826,9.80999947868,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119060250000,11578,119060250000,RH_EXTIMU,2.30160489484e-06,1.5310053119e-05,-0.703319696173,0.710873691127,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.48151607024e-08,-2.59135901467e-11,-7.18236216932e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245286467182,-0.000179588200187,9.80999972383,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119062750000,11579,119062750000,RH_EXTIMU,2.30162557279e-06,1.53100246022e-05,-0.703319759994,0.710873627984,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.87025850198e-08,-3.92700542945e-09,-7.18228937851e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245374408368,-0.000179666708607,9.81000161133,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119065250000,11580,119065250000,RH_EXTIMU,2.3015235785e-06,1.53099540168e-05,-0.703319823815,0.710873564841,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.73908004204e-08,-9.6873668359e-08,-7.18222934218e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246888687076,-0.000178936037556,9.80997523838,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119067750000,11581,119067750000,RH_EXTIMU,2.30171690962e-06,1.5309855316e-05,-0.703319887635,0.710873501699,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.66379680201e-07,5.33037224381e-08,-7.18215683832e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244477553177,-0.000181577019523,9.81001043191,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119070250000,11582,119070250000,RH_EXTIMU,2.30158224444e-06,1.5309893693e-05,-0.703319951454,0.710873438558,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.72790265171e-08,-5.32893989128e-08,-7.18208390238e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246056871943,-0.000177368731992,9.80999164087,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119072750000,11583,119072750000,RH_EXTIMU,2.30182011687e-06,1.53098435841e-05,-0.703320015273,0.710873375417,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.64369697663e-07,1.0599933161e-07,-7.18201407314e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243274037043,-0.000182468929968,9.8100154687,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119075250000,11584,119075250000,RH_EXTIMU,2.30167555079e-06,1.53098819504e-05,-0.703320079091,0.710873312277,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.02903649676e-07,-5.88663052159e-08,-7.18193488998e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246621463268,-0.000177168466249,9.80999624028,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119077750000,11585,119077750000,RH_EXTIMU,2.30169254088e-06,1.53098205353e-05,-0.703320142908,0.710873249138,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.51157383162e-08,-2.4711322738e-08,-7.18186229231e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245529913689,-0.000180202932619,9.81000562528,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119080250000,11586,119080250000,RH_EXTIMU,2.30149846039e-06,1.53098670306e-05,-0.703320206725,0.710873185999,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.35636316123e-07,-8.21029372508e-08,-7.18178334164e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246889711361,-0.00017619435273,9.80999333953,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119082750000,11587,119082750000,RH_EXTIMU,2.30160800701e-06,1.53097768835e-05,-0.703320270541,0.710873122861,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.13918719202e-07,1.1026344947e-08,-7.18172596248e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244364686037,-0.000181962176949,9.80999410006,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119085250000,11588,119085250000,RH_EXTIMU,2.30189717744e-06,1.53096820928e-05,-0.703320334357,0.710873059723,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.18683201477e-07,1.09452019376e-07,-7.18165402963e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243288542074,-0.000183234265739,9.81001689635,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119087750000,11589,119087750000,RH_EXTIMU,2.30163674143e-06,1.5309804901e-05,-0.703320398172,0.710872996587,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.1631049643e-07,-7.60393575084e-08,-7.18157362e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247267634183,-0.000174552467986,9.80998733804,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119090250000,11590,119090250000,RH_EXTIMU,2.30191255588e-06,1.53097106418e-05,-0.703320461986,0.71087293345,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.10788571525e-07,1.02239511511e-07,-7.1815110273e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000242768750111,-0.000183836861679,9.81001325118,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119094000000,11591,119092750000,RH_EXTIMU,2.30181701541e-06,1.53098231571e-05,-0.703320525799,0.710872870315,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.16743298303e-07,1.08865415534e-08,-7.18142681621e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246338164188,-0.000175973443186,9.81000105704,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119095250000,11592,119095250000,RH_EXTIMU,2.30175155741e-06,1.5309787793e-05,-0.703320589612,0.71087280718,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.64301961194e-08,-5.62860946455e-08,-7.18135768174e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245875579918,-0.000179465720088,9.80999728537,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119097750000,11593,119097750000,RH_EXTIMU,2.30178140384e-06,1.53097271512e-05,-0.703320653425,0.710872744045,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.19919351595e-08,-1.70378392e-08,-7.18128805612e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245425129787,-0.000180082213398,9.80999814089,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119100250000,11594,119100250000,RH_EXTIMU,2.30169607733e-06,1.53097084009e-05,-0.703320717236,0.710872680912,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.70772211482e-08,-5.80170657499e-08,-7.18121692216e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246506496314,-0.000178117669431,9.80999085736,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119102750000,11595,119102750000,RH_EXTIMU,2.30182971746e-06,1.53096034771e-05,-0.703320781047,0.710872617778,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.35934762653e-07,1.61792564239e-08,-7.1811534756e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244244277441,-0.000182162467499,9.80999998024,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119105250000,11596,119105250000,RH_EXTIMU,2.30189589439e-06,1.53096354513e-05,-0.703320844858,0.710872554646,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.05419559323e-08,5.6074309502e-08,-7.1810812623e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244661701445,-0.000179019652565,9.81000119407,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119107750000,11597,119107750000,RH_EXTIMU,2.30190535741e-06,1.53096623741e-05,-0.703320908668,0.710872491514,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.86889940599e-09,2.12910784172e-08,-7.18100811078e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245108104108,-0.000179022984532,9.81000159337,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119110250000,11598,119110250000,RH_EXTIMU,2.30191356004e-06,1.53096626869e-05,-0.703320972477,0.710872428383,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.38659307458e-09,5.44886229728e-09,-7.18093752814e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245238778552,-0.000179309713767,9.80999845544,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119112750000,11599,119112750000,RH_EXTIMU,2.30205028752e-06,1.53096003875e-05,-0.703321036285,0.710872365252,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.13707563515e-07,4.2156826076e-08,-7.18086680841e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244378749707,-0.000181541867647,9.81000724945,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119116500000,11600,119115250000,RH_EXTIMU,2.30195155955e-06,1.53096120897e-05,-0.703321100093,0.710872302122,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.18329513297e-08,-4.82392675189e-08,-7.18078874437e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024679812514,-0.000177420891802,9.80999637888,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119119000000,11601,119117750000,RH_EXTIMU,2.30193685786e-06,1.53095309935e-05,-0.7033211639,0.710872238993,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.816625875e-08,-5.37355436919e-08,-7.18072006681e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245653145633,-0.000180229183682,9.81000010914,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119120250000,11602,119120250000,RH_EXTIMU,2.30191235958e-06,1.53095494888e-05,-0.703321227707,0.710872175864,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.34408441265e-08,-2.61027298652e-09,-7.18064529071e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245226303946,-0.000178539870522,9.80999920359,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119122750000,11603,119122750000,RH_EXTIMU,2.30210369478e-06,1.53095207948e-05,-0.703321291513,0.710872112736,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.25854471094e-07,9.19935730968e-08,-7.1805811851e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243674848472,-0.00018166117097,9.81000446708,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119125250000,11604,119125250000,RH_EXTIMU,2.30204516954e-06,1.53095084593e-05,-0.703321355318,0.710872049608,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.5444810204e-08,-3.92891334758e-08,-7.18050781696e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246286236135,-0.000178528233118,9.80999321761,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119127750000,11605,119127750000,RH_EXTIMU,2.30203392843e-06,1.53094838606e-05,-0.703321419123,0.710871986481,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.3455472549e-09,-1.96584633186e-08,-7.18043637208e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245471552701,-0.000179216464956,9.8099999915,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119130250000,11606,119130250000,RH_EXTIMU,2.30217834053e-06,1.53094531864e-05,-0.703321482927,0.710871923355,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.00283602667e-07,6.44657632398e-08,-7.18036206236e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243789316838,-0.000181353323665,9.81001519119,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119132750000,11607,119132750000,RH_EXTIMU,2.30209141331e-06,1.53095809086e-05,-0.70332154673,0.710871860229,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.20401416893e-07,2.43807106025e-08,-7.18027915204e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245551368209,-0.000176456052905,9.81000404551,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119135250000,11608,119135250000,RH_EXTIMU,2.3020694065e-06,1.53095512055e-05,-0.703321610532,0.710871797104,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.09513399287e-09,-2.86187364231e-08,-7.18021402113e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245822705612,-0.00017965251997,9.80999442481,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119137750000,11609,119137750000,RH_EXTIMU,2.30201771122e-06,1.53095064949e-05,-0.703321674334,0.71087173398,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.34453261602e-09,-5.38579320066e-08,-7.18014465394e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024608215557,-0.000178897804033,9.80998986928,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119140250000,11610,119140250000,RH_EXTIMU,2.30208922373e-06,1.53093977664e-05,-0.703321738136,0.710871670856,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.02743495956e-07,-2.09409211275e-08,-7.18008184432e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245405745439,-0.000181146850883,9.80999313556,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119142750000,11611,119142750000,RH_EXTIMU,2.30218793612e-06,1.53093190996e-05,-0.703321801937,0.710871607733,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.01297613568e-07,1.14592347502e-08,-7.18001247056e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024493198005,-0.0001808911861,9.80999917459,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119146500000,11612,119145250000,RH_EXTIMU,2.30216608948e-06,1.5309308074e-05,-0.703321865737,0.71087154461,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.32287863837e-09,-1.79067805604e-08,-7.17994023913e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245892897122,-0.000178597924474,9.8099970559,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119149000000,11613,119147750000,RH_EXTIMU,2.30213099894e-06,1.53092960057e-05,-0.703321929536,0.710871481488,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.22678880729e-08,-2.59516374768e-08,-7.17986666915e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245517053946,-0.000179080215574,9.80999997988,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119149000000,11614,119150250000,RH_EXTIMU,2.30215833419e-06,1.53092835707e-05,-0.703321993335,0.710871418367,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.3439733238e-08,8.96423426214e-09,-7.17979615868e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024496456698,-0.000179545363939,9.81000184672,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119152750000,11615,119152750000,RH_EXTIMU,2.30215292161e-06,1.5309345173e-05,-0.703322057134,0.710871355246,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.68414896042e-08,3.26431653047e-08,-7.17972090693e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024483269711,-0.000178425826399,9.8100039471,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119155250000,11616,119155250000,RH_EXTIMU,2.30216564122e-06,1.53093269679e-05,-0.703322120931,0.710871292126,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.83743976479e-08,-2.54078159433e-09,-7.17964657523e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245490626892,-0.000179728320485,9.81000360754,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119157750000,11617,119157750000,RH_EXTIMU,2.30221563812e-06,1.53093109067e-05,-0.703322184728,0.710871229007,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.83677002233e-08,1.96526907078e-08,-7.17957769938e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024461482271,-0.00017986594149,9.80999868072,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119160250000,11618,119160250000,RH_EXTIMU,2.30224605109e-06,1.53093037205e-05,-0.703322248524,0.710871165888,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.22367150379e-08,1.36808874807e-08,-7.17951480091e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245751487824,-0.000179316698551,9.80998877103,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119162750000,11619,119162750000,RH_EXTIMU,2.30227728616e-06,1.53091578739e-05,-0.70332231232,0.71087110277,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.00722613579e-07,-6.47123360723e-08,-7.17944397401e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024593899594,-0.000181120257172,9.80999820529,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119169000000,11620,119165250000,RH_EXTIMU,2.30232278487e-06,1.53091510594e-05,-0.703322376115,0.710871039652,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.06067701017e-08,2.23803509728e-08,-7.17936808022e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244720957295,-0.000179493403684,9.81000777946,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119169000000,11621,119167750000,RH_EXTIMU,2.30227539876e-06,1.53092203255e-05,-0.70332243991,0.710870976535,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.50239199347e-08,1.33847848463e-08,-7.17929145833e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245249561589,-0.000177847119323,9.81000235965,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119174000000,11622,119170250000,RH_EXTIMU,2.302333864e-06,1.53091929601e-05,-0.703322503703,0.710870913419,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.95439362246e-08,1.79888070798e-08,-7.17922320837e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244972819822,-0.000180401850965,9.81000178299,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119174000000,11623,119172750000,RH_EXTIMU,2.30222185152e-06,1.5309204642e-05,-0.703322567497,0.710870850303,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.93764925945e-08,-5.57257639892e-08,-7.17914908923e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246531915235,-0.000177409158786,9.80999088391,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119175250000,11624,119175250000,RH_EXTIMU,2.30229315997e-06,1.53091232615e-05,-0.703322631289,0.710870787188,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.72397819675e-08,-5.50301902451e-09,-7.1790905205e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244937106394,-0.000181123083873,9.80999101119,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119177750000,11625,119177750000,RH_EXTIMU,2.30248534972e-06,1.53090123026e-05,-0.703322695081,0.710870724073,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.72627124821e-07,4.56906496704e-08,-7.17901897479e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244336207717,-0.00018236159589,9.81000900797,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119180250000,11626,119180250000,RH_EXTIMU,2.30243437867e-06,1.53090653608e-05,-0.703322758872,0.710870660959,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.79431969141e-08,2.15022678033e-09,-7.17893337984e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245636266701,-0.000177551490232,9.81001016554,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119182750000,11627,119182750000,RH_EXTIMU,2.30238076818e-06,1.53091170985e-05,-0.703322822663,0.710870597846,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.87012150399e-08,-8.58801335335e-11,-7.17885915855e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245237929798,-0.000178349085623,9.81000413055,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119185250000,11628,119185250000,RH_EXTIMU,2.30244817563e-06,1.530911216e-05,-0.703322886453,0.710870534734,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.2010594835e-08,3.57742795198e-08,-7.17878161573e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244650129197,-0.000180026377129,9.8100122384,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119187750000,11629,119187750000,RH_EXTIMU,2.30227711491e-06,1.53092151464e-05,-0.703322950242,0.710870471622,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.543302908e-07,-3.70252646447e-08,-7.17871249307e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246408327855,-0.000176001945639,9.80998479576,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119191500000,11630,119190250000,RH_EXTIMU,2.30244747574e-06,1.53090673372e-05,-0.70332301403,0.71087040851,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.80947163308e-07,1.24518337787e-08,-7.1786578835e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244365746065,-0.000183288554385,9.80999243926,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119192750000,11631,119192750000,RH_EXTIMU,2.30256459416e-06,1.53089846519e-05,-0.703323077818,0.710870345399,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.14025872561e-07,1.95302815808e-08,-7.17858819917e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245246258987,-0.000180657862811,9.80999456437,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119195250000,11632,119195250000,RH_EXTIMU,2.30262297749e-06,1.53088855695e-05,-0.703323141606,0.710870282289,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.98493605708e-08,-2.28424569932e-08,-7.17852149273e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245811977246,-0.000180605277712,9.80999526641,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119195250000,11633,119197750000,RH_EXTIMU,2.30262092097e-06,1.53088533341e-05,-0.703323205393,0.71087021918,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.78654922794e-08,-1.88339049975e-08,-7.17844311239e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245328473445,-0.000179255156506,9.81000893383,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119200250000,11634,119200250000,RH_EXTIMU,2.30250466786e-06,1.53089864752e-05,-0.703323269179,0.710870156071,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.40128265109e-07,1.0961455269e-08,-7.17835741662e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245166503387,-0.000176475805306,9.81001187531,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119202750000,11635,119202750000,RH_EXTIMU,2.30239372784e-06,1.53090677959e-05,-0.703323332964,0.710870092963,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0794949123e-07,-1.55192171687e-08,-7.1782861542e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245681872695,-0.000177415648867,9.80999390154,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119205250000,11636,119205250000,RH_EXTIMU,2.30252281593e-06,1.53089601352e-05,-0.703323396749,0.710870029855,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.34885525685e-07,1.20617504325e-08,-7.17823082509e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244878054315,-0.000182013733534,9.80998893525,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119207750000,11637,119207750000,RH_EXTIMU,2.30262515219e-06,1.53088654717e-05,-0.703323460533,0.710869966748,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.12358875134e-07,4.4010336848e-09,-7.17816313411e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245284423447,-0.000180836434259,9.809995072,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119210250000,11638,119210250000,RH_EXTIMU,2.30272678711e-06,1.53087964579e-05,-0.703323524317,0.710869903641,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.75279916524e-08,1.85932958902e-08,-7.17808828306e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244862451544,-0.000180922194716,9.81000963734,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119212750000,11639,119212750000,RH_EXTIMU,2.30263548948e-06,1.53088532219e-05,-0.7033235881,0.710869840536,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.296194234e-08,-1.84326064412e-08,-7.17800204666e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245821085511,-0.000177288972324,9.81001038677,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119215250000,11640,119215250000,RH_EXTIMU,2.30257805773e-06,1.53088974058e-05,-0.703323651882,0.71086977743,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.66242755892e-08,-6.53192545089e-09,-7.17792807583e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245290313914,-0.000178412085585,9.81000396786,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119217750000,11641,119217750000,RH_EXTIMU,2.30258694575e-06,1.5308890681e-05,-0.703323715663,0.710869714326,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.73576054742e-09,1.83188781465e-09,-7.17785728013e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245244027738,-0.000179477074136,9.81000027003,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119221500000,11642,119220250000,RH_EXTIMU,2.30260720348e-06,1.53088474048e-05,-0.703323779444,0.710869651222,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.67675584952e-08,-1.25574076657e-08,-7.17778748089e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245571340382,-0.00017978808734,9.80999857744,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119222750000,11643,119222750000,RH_EXTIMU,2.30259597983e-06,1.53088354977e-05,-0.703323843224,0.710869588119,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.21417895248e-09,-1.2431279398e-08,-7.17771459836e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245374844807,-0.000179121810338,9.80999844687,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119225250000,11644,119225250000,RH_EXTIMU,2.30266872983e-06,1.53087830897e-05,-0.703323907004,0.710869525016,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.17578098535e-08,1.17845689864e-08,-7.17764965021e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245044363128,-0.000180514756722,9.80999596374,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119227750000,11645,119227750000,RH_EXTIMU,2.30272068719e-06,1.53087409761e-05,-0.703323970783,0.710869461914,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.41408645342e-08,5.93979788665e-09,-7.17757973351e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245231648447,-0.000179975862238,9.80999815722,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119230250000,11646,119230250000,RH_EXTIMU,2.3027435407e-06,1.53087184713e-05,-0.703324034562,0.710869398813,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.65565739113e-08,7.15651672982e-10,-7.177508158e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245286927738,-0.000179528102785,9.8099997197,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119232750000,11647,119232750000,RH_EXTIMU,2.30275743297e-06,1.53087043777e-05,-0.703324098339,0.710869335712,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.6727703664e-08,4.56940753171e-10,-7.17743637001e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245277655663,-0.000179408211762,9.81000019944,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119235250000,11648,119235250000,RH_EXTIMU,2.30289498358e-06,1.53087140186e-05,-0.703324162116,0.710869272612,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.36971903906e-08,8.35321547177e-08,-7.17736207107e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243843252669,-0.000180490081974,9.81001258593,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119237750000,11649,119237750000,RH_EXTIMU,2.30287065984e-06,1.53087709633e-05,-0.703324225893,0.710869209512,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.49759812454e-08,1.93535254349e-08,-7.1772855744e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245197054535,-0.000178370953051,9.81000384553,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119240250000,11650,119240250000,RH_EXTIMU,2.30287443746e-06,1.53087745857e-05,-0.703324289668,0.710869146414,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.00746440156e-09,4.84081702023e-09,-7.17721405936e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245254015115,-0.000179299866485,9.81000080501,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119244000000,11651,119242750000,RH_EXTIMU,2.30276881556e-06,1.53087236211e-05,-0.703324353444,0.710869083315,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.04936859699e-08,-8.7757194688e-08,-7.17715075816e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246725947372,-0.00017865097518,9.80998043396,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119245250000,11652,119245250000,RH_EXTIMU,2.30294146959e-06,1.53085677793e-05,-0.703324417218,0.710869020217,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.86770674738e-07,9.17421041001e-09,-7.17708467997e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244897405834,-0.000182521804085,9.81000346499,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119247750000,11653,119247750000,RH_EXTIMU,2.30286362041e-06,1.53085814219e-05,-0.703324480992,0.71086895712,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.10513027302e-08,-3.53888775545e-08,-7.17699838527e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024603739059,-0.000177662331515,9.81000860246,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119251500000,11654,119250250000,RH_EXTIMU,2.30280374658e-06,1.53086225559e-05,-0.703324544765,0.710868894024,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.62971441733e-08,-9.6406281513e-09,-7.17692403381e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245289809227,-0.000178333460829,9.81000408578,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119252750000,11655,119252750000,RH_EXTIMU,2.30276403416e-06,1.53086465075e-05,-0.703324608538,0.710868830928,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.51635889689e-08,-8.06818672726e-09,-7.17685519818e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245466697905,-0.000178501691778,9.80999338018,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119255250000,11656,119255250000,RH_EXTIMU,2.30286556476e-06,1.53085786245e-05,-0.70332467231,0.710868767833,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.68322364874e-08,1.91776763239e-08,-7.17679471103e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244824681682,-0.000181105098358,9.80999260256,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119260250000,11657,119257750000,RH_EXTIMU,2.30293602309e-06,1.53085228278e-05,-0.703324736081,0.710868704739,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.23610925952e-08,8.56799455262e-09,-7.17672495222e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245233357935,-0.000180200240874,9.80999731626,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119260250000,11658,119260250000,RH_EXTIMU,2.30288205267e-06,1.53084682065e-05,-0.703324799852,0.710868641645,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.37725922536e-10,-6.07746353996e-08,-7.17664830853e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246419692279,-0.000178973108901,9.80999982486,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119262750000,11659,119262750000,RH_EXTIMU,2.30287188355e-06,1.53084268782e-05,-0.703324863622,0.710868578551,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.83678710102e-08,-2.85697470103e-08,-7.1765793442e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245433127212,-0.000179601893978,9.80999782821,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119265250000,11660,119265250000,RH_EXTIMU,2.30288627038e-06,1.53084138722e-05,-0.703324927391,0.710868515459,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.63968719739e-08,1.35364285352e-09,-7.17650547669e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245293018319,-0.000179237760425,9.8100021188,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119267750000,11661,119267750000,RH_EXTIMU,2.30285109423e-06,1.53084393236e-05,-0.70332499116,0.710868452367,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.34278108269e-08,-4.6629123178e-09,-7.17643479433e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024538819961,-0.000178413510737,9.80999597643,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119267750000,11662,119270250000,RH_EXTIMU,2.30290481188e-06,1.53084323078e-05,-0.703325054928,0.710868389275,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.5393680332e-08,2.68900723288e-08,-7.17637072442e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244718813583,-0.000179930818651,9.80999469307,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119272750000,11663,119272750000,RH_EXTIMU,2.3031615076e-06,1.53083897595e-05,-0.703325118696,0.710868326184,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.70818896154e-07,1.20890621624e-07,-7.17630423163e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243301722887,-0.00018226107794,9.81000639816,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119276500000,11664,119275250000,RH_EXTIMU,2.30312987499e-06,1.530837984e-05,-0.703325182463,0.710868263094,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.15107985566e-08,-2.27844263708e-08,-7.1762252219e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246306582983,-0.000178642502497,9.81000384091,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119276500000,11665,119277750000,RH_EXTIMU,2.30296498397e-06,1.53083804567e-05,-0.703325246229,0.710868200004,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.32224585659e-08,-9.17717429729e-08,-7.17613498908e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246623718421,-0.000177399911336,9.81001425513,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119276500000,11666,119280250000,RH_EXTIMU,2.30289902997e-06,1.53084656145e-05,-0.703325309994,0.710868136916,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.4525483609e-08,1.19742813139e-08,-7.17605969556e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244686070383,-0.000177911158012,9.810007752,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119286500000,11667,119282750000,RH_EXTIMU,2.30290083237e-06,1.53084910786e-05,-0.703325373759,0.710868073827,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.24054840821e-08,1.61505849298e-08,-7.17598787027e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024510020849,-0.000179158911439,9.81000144684,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119286500000,11668,119285250000,RH_EXTIMU,2.30285805284e-06,1.53084990858e-05,-0.703325437523,0.71086801074,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.79366723027e-08,-1.88615511927e-08,-7.1759221575e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245756895611,-0.000178463549432,9.80998630985,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119290250000,11669,119287750000,RH_EXTIMU,2.3030312283e-06,1.53083682822e-05,-0.703325501287,0.710867947653,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.72979034443e-07,2.37068390366e-08,-7.17587010737e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244634566879,-0.000182554880031,9.80998601141,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119290250000,11670,119290250000,RH_EXTIMU,2.3032314446e-06,1.53082624523e-05,-0.70332556505,0.710867884566,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.74305328058e-07,5.31240012947e-08,-7.17579951967e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244519430299,-0.0001818768111,9.8100037224,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119295250000,11671,119292750000,RH_EXTIMU,2.30322843454e-06,1.53082758147e-05,-0.703325628812,0.71086782148,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.33318603105e-09,6.56058164531e-09,-7.17572414977e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245286810595,-0.000178754351684,9.81000212436,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119295250000,11672,119295250000,RH_EXTIMU,2.30318889616e-06,1.53082364811e-05,-0.703325692574,0.710867758395,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.43330930894e-10,-4.39603974458e-08,-7.17563864652e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246214514056,-0.000179125234949,9.81001452015,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119297750000,11673,119297750000,RH_EXTIMU,2.30308125688e-06,1.5308266889e-05,-0.703325756335,0.710867695311,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.74260982374e-08,-4.26164663402e-08,-7.17556038766e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245757342594,-0.000177899196889,9.81000561759,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119300250000,11674,119300250000,RH_EXTIMU,2.30312400508e-06,1.530826075e-05,-0.703325820095,0.710867632227,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.86618997121e-08,2.12166151426e-08,-7.17550049808e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244716024411,-0.000179984553147,9.80998941912,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119302750000,11675,119302750000,RH_EXTIMU,2.30324981861e-06,1.53081755153e-05,-0.703325883855,0.710867569143,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.20404696058e-07,2.29729294698e-08,-7.17543634473e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245020220241,-0.000181171335039,9.8099940744,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119305250000,11676,119305250000,RH_EXTIMU,2.30313858771e-06,1.5308132739e-05,-0.703325947614,0.710867506061,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.82907172303e-08,-8.62568469646e-08,-7.17536678286e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246816771677,-0.000178094563723,9.80998628923,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119307750000,11677,119307750000,RH_EXTIMU,2.30320018083e-06,1.53080977058e-05,-0.703326011373,0.710867442978,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.56364944994e-08,1.53879205754e-08,-7.17529597131e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244767662023,-0.000179983511845,9.81000364391,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119310250000,11678,119310250000,RH_EXTIMU,2.30330163811e-06,1.53081583307e-05,-0.703326075131,0.710867379897,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.44839244127e-08,9.22180940548e-08,-7.17521245753e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243783224034,-0.000179481588876,9.81002242446,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119312750000,11679,119312750000,RH_EXTIMU,2.30306102173e-06,1.5308314293e-05,-0.703326138888,0.710867316816,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.23693921196e-07,-4.60355628779e-08,-7.17513108264e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246547392092,-0.000174840181039,9.80999466292,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119315250000,11680,119315250000,RH_EXTIMU,2.30333778733e-06,1.53081451808e-05,-0.703326202644,0.710867253736,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.53444725908e-07,6.02071965479e-08,-7.17507626514e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243639678845,-0.000185172992074,9.81000704015,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119317750000,11681,119317750000,RH_EXTIMU,2.30328342351e-06,1.53081476868e-05,-0.7033262664,0.710867190656,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.14293445666e-08,-2.85082598003e-08,-7.17500614239e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246105411874,-0.000177717700197,9.80998166422,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119320250000,11682,119320250000,RH_EXTIMU,2.30345078531e-06,1.53080456959e-05,-0.703326330156,0.710867127577,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.53460899765e-07,3.68214198502e-08,-7.17494286081e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244569803743,-0.000181926118082,9.81000165316,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119322750000,11683,119322750000,RH_EXTIMU,2.30339220711e-06,1.53080812161e-05,-0.70332639391,0.710867064499,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.24018629033e-08,-1.21045763181e-08,-7.17485840564e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245704976202,-0.000177715076167,9.81000768474,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119326500000,11684,119325250000,RH_EXTIMU,2.30321613141e-06,1.53081302627e-05,-0.703326457664,0.710867001421,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.26832787511e-07,-7.05234296037e-08,-7.1747823467e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246747253616,-0.000176716841127,9.80999644229,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119327750000,11685,119327750000,RH_EXTIMU,2.30318172122e-06,1.53080584803e-05,-0.703326521418,0.710866938344,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.17172992857e-08,-5.95284682304e-08,-7.17471466193e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245776695901,-0.000179941279989,9.80999603909,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119330250000,11686,119330250000,RH_EXTIMU,2.30325888673e-06,1.53079560093e-05,-0.70332658517,0.710866875268,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.02436996473e-07,-1.4201602257e-08,-7.17464737246e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245399495862,-0.000180975319616,9.80999597765,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119332750000,11687,119332750000,RH_EXTIMU,2.3033569668e-06,1.53079356534e-05,-0.703326648922,0.710866812192,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.81279332261e-08,4.42645627933e-08,-7.17456915276e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244519363044,-0.000180043259283,9.81001245171,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119335250000,11688,119335250000,RH_EXTIMU,2.30317632148e-06,1.53080311878e-05,-0.703326712674,0.710866749117,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.55588376617e-07,-4.66573795968e-08,-7.1745003158e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246437695484,-0.000175983770273,9.80998365445,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119337750000,11689,119337750000,RH_EXTIMU,2.30329512696e-06,1.53079110163e-05,-0.703326776425,0.710866686042,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.36076673551e-07,-8.38479856376e-10,-7.1744481023e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244793378711,-0.000182202317089,9.80998544875,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119340250000,11690,119340250000,RH_EXTIMU,2.30343461947e-06,1.53077727161e-05,-0.703326840175,0.710866622968,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.58041592029e-07,4.91587060364e-10,-7.17437828354e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245337687347,-0.000181693170379,9.80999880051,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119342750000,11691,119342750000,RH_EXTIMU,2.30347106461e-06,1.53077152206e-05,-0.703326903925,0.710866559894,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.3973538453e-08,-1.15361018233e-08,-7.17429865711e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245412099683,-0.000179866657683,9.81001034341,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119345250000,11692,119345250000,RH_EXTIMU,2.30342752664e-06,1.53077684889e-05,-0.703326967674,0.710866496822,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.38348808311e-08,6.45112922272e-09,-7.17421906165e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245216089067,-0.000178031597148,9.81000749297,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119347750000,11693,119347750000,RH_EXTIMU,2.30349171412e-06,1.53077764144e-05,-0.703327031422,0.710866433749,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.29404979295e-08,4.12779368475e-08,-7.17414521704e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244404774841,-0.000180140686106,9.81001151317,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119350250000,11694,119350250000,RH_EXTIMU,2.30339931723e-06,1.53078821034e-05,-0.703327095169,0.710866370678,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.11115716798e-07,8.77132503058e-09,-7.17406343323e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245478098887,-0.000176741258242,9.81000568719,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119352750000,11695,119352750000,RH_EXTIMU,2.30344236867e-06,1.53078919565e-05,-0.703327158916,0.710866307607,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.98359893438e-08,3.04816946534e-08,-7.17399686513e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244710974955,-0.000180003843765,9.80999972567,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119355250000,11696,119355250000,RH_EXTIMU,2.30337269043e-06,1.53078857699e-05,-0.703327222663,0.710866244537,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.52477232708e-08,-4.20686002118e-08,-7.17392909193e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246356749665,-0.000178072036597,9.80998652735,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119357750000,11697,119357750000,RH_EXTIMU,2.30357713877e-06,1.53077516648e-05,-0.703327286408,0.710866181467,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.92621049231e-07,3.94255061825e-08,-7.17386593225e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243878459031,-0.000183286080066,9.8100059482,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119360250000,11698,119360250000,RH_EXTIMU,2.30343361309e-06,1.53077994107e-05,-0.703327350153,0.710866118398,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.07589968511e-07,-5.29487836576e-08,-7.17378110355e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247093304603,-0.000176170453991,9.80999654072,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119362750000,11699,119362750000,RH_EXTIMU,2.30350914153e-06,1.53076716459e-05,-0.703327413898,0.71086605533,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.15737683382e-07,-2.9507046165e-08,-7.17371959614e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024494425067,-0.00018197715633,9.80999896044,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119362750000,11700,119365250000,RH_EXTIMU,2.3035541118e-06,1.53076751945e-05,-0.703327477641,0.710865992262,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.44744689365e-08,2.79759741293e-08,-7.17364439473e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244976564889,-0.000179109497171,9.81000312052,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119367750000,11701,119367750000,RH_EXTIMU,2.30357287156e-06,1.53077227524e-05,-0.703327541385,0.710865929195,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.51936825539e-08,3.82561216365e-08,-7.17357338893e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244537646711,-0.000178864894566,9.81000131946,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119370250000,11702,119370250000,RH_EXTIMU,2.30355833338e-06,1.53077778778e-05,-0.703327605127,0.710865866128,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.83878847309e-08,2.38241717513e-08,-7.17350706669e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245306276799,-0.000178277290351,9.80999035984,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119372750000,11703,119372750000,RH_EXTIMU,2.30381493145e-06,1.53076778491e-05,-0.703327668869,0.710865803062,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.03104637437e-07,8.81472582826e-08,-7.17344016148e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243665902288,-0.000183093667122,9.81000974922,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119376500000,11704,119375250000,RH_EXTIMU,2.30367499678e-06,1.53077150238e-05,-0.70332773261,0.710865739997,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.95997922575e-08,-5.6940136786e-08,-7.17336301516e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246827322359,-0.000176734752273,9.8099921705,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119377750000,11705,119377750000,RH_EXTIMU,2.30367329466e-06,1.53076307385e-05,-0.703327796351,0.710865676932,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.7352973366e-08,-4.82353187287e-08,-7.1732988388e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245582814214,-0.000180395724414,9.80999357295,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119380250000,11706,119380250000,RH_EXTIMU,2.30385132448e-06,1.53076242395e-05,-0.703327860091,0.710865613868,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.05797737161e-07,9.71295665086e-08,-7.17321358917e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243568049357,-0.000180745072349,9.81002869088,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119382750000,11707,119382750000,RH_EXTIMU,2.30366652543e-06,1.53077216675e-05,-0.70332792383,0.710865550805,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.59016097738e-07,-4.79180791107e-08,-7.17314024481e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246257192343,-0.000176541755251,9.80999140602,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119385250000,11708,119385250000,RH_EXTIMU,2.30366158201e-06,1.53077052446e-05,-0.703327987569,0.710865487742,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.32606137504e-09,-1.14662672703e-08,-7.17307382798e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245513525653,-0.000179190039533,9.80999236161,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119387750000,11709,119387750000,RH_EXTIMU,2.30386003564e-06,1.53075740927e-05,-0.703328051307,0.71086542468,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.87550053317e-07,3.77321287011e-08,-7.17300842433e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244245320753,-0.000182971781137,9.8100061033,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119391500000,11710,119390250000,RH_EXTIMU,2.30382986991e-06,1.53076169244e-05,-0.703328115044,0.710865361619,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.03580347927e-08,8.03970110221e-09,-7.17292322514e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245550667125,-0.000177736723274,9.81000954214,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119392750000,11711,119392750000,RH_EXTIMU,2.3037373709e-06,1.53076476678e-05,-0.703328178781,0.710865298558,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.90049115435e-08,-3.39073809334e-08,-7.17285047406e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245840797249,-0.000178102704036,9.8099987969,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119395250000,11712,119395250000,RH_EXTIMU,2.30387312238e-06,1.53076513105e-05,-0.703328242517,0.710865235497,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.60479812004e-08,7.91085903431e-08,-7.17278386851e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243766554879,-0.000180637755288,9.81000445185,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119397750000,11713,119397750000,RH_EXTIMU,2.30391110158e-06,1.53076660662e-05,-0.703328306252,0.710865172438,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.41927162521e-08,3.04157034026e-08,-7.17271154101e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245042485995,-0.000179323655897,9.81000039264,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119400250000,11714,119400250000,RH_EXTIMU,2.30368220482e-06,1.53076135514e-05,-0.703328369987,0.710865109379,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.97269210654e-08,-1.58001673666e-07,-7.17263995814e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000248137771084,-0.000177204667965,9.80998215579,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119402750000,11715,119402750000,RH_EXTIMU,2.30370487858e-06,1.53074736233e-05,-0.703328433721,0.71086504632,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.25233635169e-08,-6.61635091283e-08,-7.17257311792e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245992246548,-0.00018071705414,9.80999605618,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119405250000,11716,119405250000,RH_EXTIMU,2.30377185302e-06,1.53074049403e-05,-0.703328497454,0.710864983263,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.76299197545e-08,-7.20734018354e-10,-7.17250162342e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024485708162,-0.000180531534543,9.81000160579,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119407750000,11717,119407750000,RH_EXTIMU,2.3038557369e-06,1.53074199357e-05,-0.703328561187,0.710864920205,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.01634254858e-08,5.63808283172e-08,-7.17242729114e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244487645246,-0.000179569033751,9.81000897331,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119410250000,11718,119410250000,RH_EXTIMU,2.30374510891e-06,1.53074170074e-05,-0.70332862492,0.710864857149,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.03689445002e-08,-6.3256816616e-08,-7.1723634666e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246496763824,-0.00017819117618,9.80998021786,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119412750000,11719,119412750000,RH_EXTIMU,2.30393125135e-06,1.53073327586e-05,-0.703328688651,0.710864794093,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.54158065837e-07,5.74785276312e-08,-7.17229215938e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244159502142,-0.000181678719292,9.81001162561,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119415250000,11720,119415250000,RH_EXTIMU,2.30391412718e-06,1.53073917086e-05,-0.703328752382,0.710864731038,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.20107048954e-08,2.45439619037e-08,-7.17220979664e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245013102685,-0.000178232060066,9.8100108198,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119417750000,11721,119417750000,RH_EXTIMU,2.30382635715e-06,1.53074790101e-05,-0.703328816112,0.710864667983,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.81387712081e-08,9.17396741329e-10,-7.17214135165e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245390436102,-0.000177350651513,9.80999079298,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119420250000,11722,119420250000,RH_EXTIMU,2.30398107352e-06,1.53073884712e-05,-0.703328879842,0.710864604929,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.39825434912e-07,3.62191878894e-08,-7.17208767424e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244529510517,-0.000182060634915,9.80998799331,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119422750000,11723,119422750000,RH_EXTIMU,2.30402529755e-06,1.53073001026e-05,-0.703328943571,0.710864541875,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.57682435011e-08,-2.47165822483e-08,-7.17200856424e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246317001312,-0.000179752279358,9.81000244109,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119425250000,11724,119425250000,RH_EXTIMU,2.30396903054e-06,1.53072197686e-05,-0.7033290073,0.710864478822,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.40990151476e-08,-7.6689965526e-08,-7.17193917365e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246049309444,-0.000179649328111,9.80999569515,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119427750000,11725,119427750000,RH_EXTIMU,2.30395251002e-06,1.5307186608e-05,-0.703329071027,0.71086441577,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0159813157e-08,-2.74990109669e-08,-7.17186351676e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245734784332,-0.000179006788568,9.8100037373,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119430250000,11726,119430250000,RH_EXTIMU,2.30394567493e-06,1.53071961696e-05,-0.703329134755,0.710864352718,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.37040248691e-09,2.24638559566e-09,-7.17178755586e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244793098346,-0.000179186221584,9.81000790961,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119434000000,11727,119432750000,RH_EXTIMU,2.30391622323e-06,1.53072817528e-05,-0.703329198481,0.710864289667,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.40069057333e-08,3.27537410343e-08,-7.17171138654e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244963667679,-0.00017783781551,9.81000361907,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119435250000,11728,119435250000,RH_EXTIMU,2.30398335355e-06,1.53072485581e-05,-0.703329262207,0.710864226617,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.77504732773e-08,1.95488654115e-08,-7.1716417534e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244957918176,-0.000180589261813,9.81000352925,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119437750000,11729,119437750000,RH_EXTIMU,2.30402418364e-06,1.53072315358e-05,-0.703329325932,0.710864163568,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.36941289331e-08,1.39477948943e-08,-7.17156717666e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245010658267,-0.000179554254395,9.81000460914,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119440250000,11730,119440250000,RH_EXTIMU,2.30395626302e-06,1.53072858116e-05,-0.703329389656,0.710864100518,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.82682893498e-08,-6.69567289315e-09,-7.17149412419e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245776433985,-0.000177654223242,9.80999631206,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119442750000,11731,119442750000,RH_EXTIMU,2.30403008879e-06,1.53072004218e-05,-0.70332945338,0.71086403747,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.09263292536e-08,-6.36671037091e-09,-7.17142729041e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245007717621,-0.000181194299046,9.81000096707,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119445250000,11732,119445250000,RH_EXTIMU,2.30404515784e-06,1.53072028613e-05,-0.703329517103,0.710863974422,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.09359974542e-09,1.05207112161e-08,-7.17135133649e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024523709078,-0.00017892816689,9.81000335191,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119447750000,11733,119447750000,RH_EXTIMU,2.30399458724e-06,1.53072068948e-05,-0.703329580826,0.710863911375,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.01320393934e-08,-2.55057950188e-08,-7.17128010004e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245879474664,-0.000178532304735,9.80999469607,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119450250000,11734,119450250000,RH_EXTIMU,2.30409551557e-06,1.53071143733e-05,-0.703329644548,0.710863848328,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.10352054825e-07,4.82716537843e-09,-7.17121649366e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244812404468,-0.000181341577317,9.80999796157,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119452750000,11735,119452750000,RH_EXTIMU,2.30416093507e-06,1.53070907681e-05,-0.703329708269,0.710863785283,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.13818395734e-08,2.40396504033e-08,-7.17113793574e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245076382035,-0.000179867984276,9.81001077323,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119455250000,11736,119455250000,RH_EXTIMU,2.30393520252e-06,1.53071885279e-05,-0.70332977199,0.710863722237,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.8248149717e-07,-7.07617955036e-08,-7.17105847424e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246724358233,-0.000175250676392,9.80999091634,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119457750000,11737,119457750000,RH_EXTIMU,2.30409439592e-06,1.530709526e-05,-0.70332983571,0.710863659192,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.43906841822e-07,3.71863276106e-08,-7.17101231463e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244134044486,-0.000182482936665,9.80998474924,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119460250000,11738,119460250000,RH_EXTIMU,2.30434250501e-06,1.53070284766e-05,-0.703329899429,0.710863596148,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.79570494249e-07,1.02277466866e-07,-7.1709351113e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243777902524,-0.000181848809065,9.810015981,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119462750000,11739,119462750000,RH_EXTIMU,2.30426000176e-06,1.53071194879e-05,-0.703329963148,0.710863533105,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.72311569891e-08,5.99026920142e-09,-7.17085257842e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245427318845,-0.000177246355406,9.8100073359,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119464000000,11740,119465250000,RH_EXTIMU,2.30423208089e-06,1.53071526837e-05,-0.703330026866,0.710863470062,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.36599093497e-08,3.82259448525e-09,-7.17077979134e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245223019395,-0.000178746990654,9.81000266511,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119464000000,11741,119467750000,RH_EXTIMU,2.30399875263e-06,1.53070841349e-05,-0.703330090584,0.71086340702,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.32251974561e-08,-1.69613960569e-07,-7.1707122298e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000248253063262,-0.000177455105705,9.809977069,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119470250000,11742,119470250000,RH_EXTIMU,2.30423291184e-06,1.53068708779e-05,-0.703330154301,0.710863343978,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.54052636391e-07,1.11302838527e-08,-7.17064778398e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244264594297,-0.000184034399557,9.8100089419,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119472750000,11743,119472750000,RH_EXTIMU,2.30407314901e-06,1.5306980969e-05,-0.703330218017,0.710863280937,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.51903493159e-07,-2.66305252473e-08,-7.17056491311e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246293862532,-0.000175185768829,9.80999427207,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119475250000,11744,119475250000,RH_EXTIMU,2.30419091796e-06,1.53069226362e-05,-0.703330281732,0.710863217897,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.00692319715e-07,3.37455733721e-08,-7.17051448084e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244303171653,-0.000181690618206,9.8099876062,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119477750000,11745,119477750000,RH_EXTIMU,2.30431044514e-06,1.53068305681e-05,-0.703330345448,0.710863154857,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.20673858413e-07,1.55498904009e-08,-7.1704469184e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245205890516,-0.000180939506822,9.80999457708,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119480250000,11746,119480250000,RH_EXTIMU,2.30434204957e-06,1.53067950212e-05,-0.703330409162,0.710863091818,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.88705006463e-08,-1.77797503785e-09,-7.17037502377e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245334447543,-0.000179552185094,9.80999925998,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119482750000,11747,119482750000,RH_EXTIMU,2.30436463212e-06,1.53067798695e-05,-0.703330472876,0.710863028779,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.22642417366e-08,4.74421582527e-09,-7.17030086253e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245167209446,-0.000179483733421,9.81000480945,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119485250000,11748,119485250000,RH_EXTIMU,2.30440092354e-06,1.53068283946e-05,-0.703330536589,0.710862965741,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.76837981514e-09,4.86701406385e-08,-7.17022529714e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244215449478,-0.000179044739824,9.81000809292,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119487750000,11749,119487750000,RH_EXTIMU,2.30435021957e-06,1.53068714757e-05,-0.703330600301,0.710862902704,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.2178629666e-08,-3.37507977332e-09,-7.17015072512e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246133703293,-0.000178027882598,9.80999917295,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119490250000,11750,119490250000,RH_EXTIMU,2.30433851399e-06,1.53067875721e-05,-0.703330664013,0.710862839667,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.1449106008e-08,-5.36470063672e-08,-7.17008014871e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245582669731,-0.000180143530797,9.80999837892,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119492750000,11751,119492750000,RH_EXTIMU,2.30449912229e-06,1.53067543782e-05,-0.703330727724,0.710862776631,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.10909768742e-07,7.21460238305e-08,-7.17001238403e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243982298512,-0.000181214800787,9.81000731222,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119495250000,11752,119495250000,RH_EXTIMU,2.30445434194e-06,1.53067888215e-05,-0.703330791435,0.710862713595,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.39498028092e-08,-4.95431415869e-09,-7.16992892092e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245748094025,-0.000177953272507,9.8100076032,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119497750000,11753,119497750000,RH_EXTIMU,2.3044021738e-06,1.53068136972e-05,-0.703330855145,0.710862650561,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.2767839374e-08,-1.45521534591e-08,-7.16985899771e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245425576367,-0.000178535565834,9.80999767252,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119500250000,11754,119500250000,RH_EXTIMU,2.30447146154e-06,1.5306797559e-05,-0.703330918854,0.710862587526,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.93800288232e-08,3.04625434683e-08,-7.16978703682e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244750290456,-0.000180014878986,9.81000534189,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119502750000,11755,119502750000,RH_EXTIMU,2.30442340286e-06,1.53068269659e-05,-0.703330982562,0.710862524493,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.29803926699e-08,-9.66307787801e-09,-7.16971580436e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245602893295,-0.000178176403054,9.80999383889,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119505250000,11756,119505250000,RH_EXTIMU,2.30457820098e-06,1.53067053159e-05,-0.70333104627,0.71086246146,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.57376670095e-07,1.85727184212e-08,-7.16964930286e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244765927323,-0.000182430599812,9.81000651301,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119507750000,11757,119507750000,RH_EXTIMU,2.30447044739e-06,1.53067302107e-05,-0.703331109977,0.710862398428,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.43894878339e-08,-4.5817342519e-08,-7.16955892574e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246290949994,-0.000177157602976,9.81001132405,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119510250000,11758,119510250000,RH_EXTIMU,2.30440417769e-06,1.53068093902e-05,-0.703331173684,0.710862335396,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.13421174153e-08,8.39534776287e-09,-7.16950021959e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244905074154,-0.000177865208687,9.80998559653,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119512750000,11759,119512750000,RH_EXTIMU,2.30453063447e-06,1.53066999135e-05,-0.70333123739,0.710862272365,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.34409701336e-07,9.54890806792e-09,-7.16943452416e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245239191973,-0.000181762436215,9.80999749513,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119515250000,11760,119515250000,RH_EXTIMU,2.30458016295e-06,1.53066086908e-05,-0.703331301095,0.710862209335,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.03904494422e-08,-2.33550929818e-08,-7.16935730084e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245462196727,-0.000180320096638,9.81000553394,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119517750000,11761,119517750000,RH_EXTIMU,2.30450387064e-06,1.53066416211e-05,-0.7033313648,0.710862146305,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.10190645203e-08,-2.35455489203e-08,-7.16928214664e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246043188774,-0.000177630429853,9.8099991645,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119520250000,11762,119520250000,RH_EXTIMU,2.30437141923e-06,1.53066067555e-05,-0.703331428504,0.710862083276,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.48098736272e-08,-9.3699078439e-08,-7.16921935783e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246486660923,-0.000178349386516,9.80998163816,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119521500000,11763,119522750000,RH_EXTIMU,2.30463563054e-06,1.53065863277e-05,-0.703331492208,0.710862020247,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.62644531396e-07,1.37699768533e-07,-7.16916220514e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000242564351525,-0.000181932808194,9.80999913102,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119525250000,11764,119525250000,RH_EXTIMU,2.30455710714e-06,1.53065822302e-05,-0.70333155591,0.710861957219,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.14536614374e-08,-4.5858242544e-08,-7.16908493394e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024712964604,-0.000177783799506,9.80999287286,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119527750000,11765,119527750000,RH_EXTIMU,2.30454524106e-06,1.53064622445e-05,-0.703331619613,0.710861894191,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.16599195265e-08,-7.42569038345e-08,-7.16901397317e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245630569342,-0.000180587981616,9.80999984992,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119530250000,11766,119530250000,RH_EXTIMU,2.30473434493e-06,1.53064127143e-05,-0.703331683314,0.710861831165,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.36306538066e-07,7.88892280545e-08,-7.1689381748e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024378080386,-0.000181703081815,9.8100217243,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119532750000,11767,119532750000,RH_EXTIMU,2.30449977033e-06,1.53065954503e-05,-0.703331747015,0.710861768139,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.35323048352e-07,-2.74126996745e-08,-7.16884061801e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246302416748,-0.000174181323118,9.81001178203,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119539000000,11768,119535250000,RH_EXTIMU,2.30449890696e-06,1.53066171738e-05,-0.703331810715,0.710861705113,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.18178691062e-08,1.25225020431e-08,-7.16877992274e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244830274889,-0.000179662930878,9.80999658414,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119539000000,11769,119537750000,RH_EXTIMU,2.30459713811e-06,1.53065786816e-05,-0.703331874415,0.710861642089,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.84174984426e-08,3.40354436919e-08,-7.16871701676e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244638815485,-0.000180586436721,9.80998990693,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119540250000,11770,119540250000,RH_EXTIMU,2.30478356526e-06,1.53064178983e-05,-0.703331938114,0.710861579064,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.97382525815e-07,1.41147231989e-08,-7.16865817257e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245395840962,-0.000182618391622,9.80999312295,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119542750000,11771,119542750000,RH_EXTIMU,2.30472880453e-06,1.53063355796e-05,-0.703332001812,0.710861516041,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.60722688422e-08,-7.69714716644e-08,-7.1685761012e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246543550419,-0.000178855193813,9.81000264114,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119545250000,11772,119545250000,RH_EXTIMU,2.30480680295e-06,1.53063950987e-05,-0.70333206551,0.710861453018,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.17636728299e-08,7.83891963288e-08,-7.16850266764e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024357270155,-0.000179319384644,9.8100124907,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119547750000,11773,119547750000,RH_EXTIMU,2.30460411849e-06,1.53064277858e-05,-0.703332129206,0.710861389995,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.32760201203e-07,-9.48005042546e-08,-7.16841514216e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247361361854,-0.000176670621946,9.81000556517,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119550250000,11774,119550250000,RH_EXTIMU,2.30449991768e-06,1.53064816315e-05,-0.703332192903,0.710861326974,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.86588047635e-08,-2.73545156322e-08,-7.16835939887e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245239057058,-0.000177742037095,9.80997870723,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119552750000,11775,119552750000,RH_EXTIMU,2.30485390063e-06,1.53063414126e-05,-0.703332256599,0.710861263953,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.81098726151e-07,1.20087441256e-07,-7.16829660589e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243256361082,-0.000184276143923,9.81000796566,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119555250000,11776,119555250000,RH_EXTIMU,2.30472817956e-06,1.53063281822e-05,-0.703332320294,0.710861200932,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.31556868162e-08,-7.76087391987e-08,-7.16822181822e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246927243835,-0.00017755029837,9.80998892082,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119557750000,11777,119557750000,RH_EXTIMU,2.30476308722e-06,1.53062606019e-05,-0.703332383988,0.710861137912,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.87728367708e-08,-1.81365510303e-08,-7.168154469e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245347704089,-0.000180136120788,9.80999752652,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119560250000,11778,119560250000,RH_EXTIMU,2.3047857986e-06,1.53062299891e-05,-0.703332447682,0.710861074893,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.10365938338e-08,-3.97598542065e-09,-7.16808299035e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245297250652,-0.000179519260197,9.80999950218,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119562750000,11779,119562750000,RH_EXTIMU,2.3047609668e-06,1.5306233047e-05,-0.703332511375,0.710861011874,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.49460005091e-08,-1.15788212278e-08,-7.16800965185e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0002455235415,-0.00017863878774,9.8100005003,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119566500000,11780,119565250000,RH_EXTIMU,2.30474409945e-06,1.53062508343e-05,-0.703332575068,0.710860948856,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.87044671097e-08,1.27896689658e-09,-7.16793662998e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245117235559,-0.000178855224014,9.81000030714,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119569000000,11781,119567750000,RH_EXTIMU,2.30480753262e-06,1.53062191555e-05,-0.70333263876,0.710860885839,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.47944014249e-08,1.83305423554e-08,-7.16787031335e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244993913421,-0.000180153949694,9.80999731986,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119570250000,11782,119570250000,RH_EXTIMU,2.30485253748e-06,1.53061860797e-05,-0.703332702451,0.710860822822,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.51004910553e-08,7.1670655964e-09,-7.16780015088e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245219862408,-0.000179794266971,9.80999861735,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119572750000,11783,119572750000,RH_EXTIMU,2.30493525194e-06,1.53061503961e-05,-0.703332766142,0.710860759806,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.80128020945e-08,2.69019707075e-08,-7.16771784908e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244928260756,-0.000180209112643,9.81001775033,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119575250000,11784,119575250000,RH_EXTIMU,2.30484063088e-06,1.53062154261e-05,-0.703332829832,0.71086069679,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.95040424097e-08,-1.56040552847e-08,-7.16763816025e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245533194062,-0.000177567710515,9.81000648715,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119577750000,11785,119577750000,RH_EXTIMU,2.30482855385e-06,1.53062286698e-05,-0.703332893521,0.710860633775,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.34237935317e-08,1.39038445552e-09,-7.16756683956e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245205989067,-0.000179081570625,9.81000149069,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119582750000,11786,119580250000,RH_EXTIMU,2.30484835664e-06,1.53062253771e-05,-0.70333295721,0.710860570761,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.40103785047e-08,9.92401113627e-09,-7.1675106814e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244987209722,-0.000179478071987,9.8099806972,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119582750000,11787,119582750000,RH_EXTIMU,2.30500864449e-06,1.53061116934e-05,-0.703333020898,0.710860507747,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.56015905261e-07,2.61921323579e-08,-7.16744885947e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244963394819,-0.000181685036913,9.80999203694,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119587750000,11788,119585250000,RH_EXTIMU,2.30506345264e-06,1.53060555745e-05,-0.703333084586,0.710860444734,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.36410072627e-08,-4.21295513037e-10,-7.167377819e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024535101003,-0.000179894909849,9.80999796439,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119587750000,11789,119587750000,RH_EXTIMU,2.30517346279e-06,1.53060622594e-05,-0.703333148273,0.710860381722,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.96961494742e-08,6.63547875593e-08,-7.16730069313e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244139937694,-0.000180035464161,9.81001414423,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119590250000,11790,119590250000,RH_EXTIMU,2.30508806517e-06,1.53061199549e-05,-0.703333211959,0.71086031871,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.01319010145e-08,-1.45855166521e-08,-7.16722191768e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245859289302,-0.00017765552688,9.81000329437,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119592750000,11791,119592750000,RH_EXTIMU,2.30509956413e-06,1.53060678034e-05,-0.703333275644,0.710860255699,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.67792626695e-08,-2.25337598105e-08,-7.16714840247e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245408878422,-0.00018010190418,9.81000648572,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119595250000,11792,119595250000,RH_EXTIMU,2.30509872933e-06,1.53061112627e-05,-0.703333339329,0.710860192688,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.40318420256e-08,2.489920011e-08,-7.16707013684e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244703593082,-0.00017852900614,9.81000957237,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119597750000,11793,119597750000,RH_EXTIMU,2.30493307174e-06,1.53062148727e-05,-0.703333403013,0.710860129678,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.51609424334e-07,-3.36340893959e-08,-7.16699636258e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246484850591,-0.000176045192916,9.80999008239,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119600250000,11794,119600250000,RH_EXTIMU,2.30503916412e-06,1.53060558791e-05,-0.703333466697,0.710860066669,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.50689913126e-07,-3.00690394389e-08,-7.16693807727e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245135406434,-0.000182529931676,9.80999416539,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119602750000,11795,119602750000,RH_EXTIMU,2.30506572117e-06,1.53060058864e-05,-0.70333353038,0.71086000366,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.41278856426e-08,-1.28333771547e-08,-7.16686218023e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024568206826,-0.000179354087564,9.81000072443,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119605250000,11796,119605250000,RH_EXTIMU,2.3050411606e-06,1.53059623889e-05,-0.703333594062,0.710859940652,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.14032299394e-08,-3.79018005185e-08,-7.16678894848e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245826015075,-0.000179275991822,9.81000008501,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119607750000,11797,119607750000,RH_EXTIMU,2.30497618289e-06,1.53059755057e-05,-0.703333657744,0.710859877645,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.34364461908e-08,-2.84473946899e-08,-7.16672152938e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245668158128,-0.000178022606696,9.80998903586,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119610250000,11798,119610250000,RH_EXTIMU,2.3052848331e-06,1.5305846144e-05,-0.703333721425,0.710859814638,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.49209130556e-07,1.00754914803e-07,-7.1666609728e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243028255606,-0.000184410566292,9.81001037513,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119612750000,11799,119612750000,RH_EXTIMU,2.30518891959e-06,1.53059195645e-05,-0.703333785105,0.710859751632,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.49602044463e-08,-1.15599568704e-08,-7.16656745648e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246335508739,-0.000176324621797,9.81001123603,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119615250000,11800,119615250000,RH_EXTIMU,2.30514324311e-06,1.53059972194e-05,-0.703333848785,0.710859688626,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.87735885597e-08,1.91148027426e-08,-7.16649519957e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244667035801,-0.00017828134462,9.81000655943,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119621500000,11801,119617750000,RH_EXTIMU,2.30523371993e-06,1.53060235454e-05,-0.703333912464,0.710859625621,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.75362344866e-08,6.65336358682e-08,-7.16642988138e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244187923072,-0.000180029947392,9.80999816062,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119621500000,11802,119620250000,RH_EXTIMU,2.30513555755e-06,1.53060238387e-05,-0.703333976142,0.710859562617,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.50928591927e-08,-5.44119005855e-08,-7.16635859096e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246521184326,-0.000177724612522,9.80998789719,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119622750000,11803,119622750000,RH_EXTIMU,2.3050921188e-06,1.53059495767e-05,-0.70333403982,0.710859499613,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.79776291468e-08,-6.60194037489e-08,-7.16630127883e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246530770412,-0.000179219779416,9.80997876934,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119625250000,11804,119625250000,RH_EXTIMU,2.30528915437e-06,1.53057338263e-05,-0.703334103498,0.71085943661,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.34343241224e-07,-1.11750610041e-08,-7.16623335043e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244656352119,-0.000183831975127,9.81000884661,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119627750000,11805,119627750000,RH_EXTIMU,2.30530483795e-06,1.53057592602e-05,-0.703334167174,0.710859373608,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.49587536059e-09,2.39425734622e-08,-7.16613880573e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244929195509,-0.000178490200366,9.81002412189,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119630250000,11806,119630250000,RH_EXTIMU,2.30518597582e-06,1.5305895904e-05,-0.70333423085,0.710859310606,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.43584535916e-07,1.14817745316e-08,-7.16606241064e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024543030643,-0.000176396060281,9.81000097742,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119632750000,11807,119632750000,RH_EXTIMU,2.30529145787e-06,1.53059103922e-05,-0.703334294525,0.710859247605,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.27301862055e-08,6.82445370754e-08,-7.16601448136e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024385879061,-0.000180592078911,9.80998227887,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119635250000,11808,119635250000,RH_EXTIMU,2.30532361534e-06,1.53057830091e-05,-0.7033343582,0.710859184604,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.08577373739e-08,-5.36932041487e-08,-7.1659466361e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247060270106,-0.000180176379728,9.80998609826,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119635250000,11809,119637750000,RH_EXTIMU,2.30539564203e-06,1.53055784625e-05,-0.703334421874,0.710859121604,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.56948234631e-07,-7.51419942413e-08,-7.16587370139e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245635315866,-0.00018214667119,9.81000572166,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119640250000,11810,119640250000,RH_EXTIMU,2.3053033438e-06,1.53056690204e-05,-0.703334485547,0.710859058605,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0254697875e-07,2.19855754725e-10,-7.16579099934e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245325780914,-0.000176541421746,9.81000804125,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119642750000,11811,119642750000,RH_EXTIMU,2.30522600924e-06,1.53057504493e-05,-0.70333454922,0.710858995606,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.89007766264e-08,3.44791241182e-09,-7.16571790497e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245295137222,-0.000177682748192,9.8099994252,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119645250000,11812,119645250000,RH_EXTIMU,2.30531936999e-06,1.53056835898e-05,-0.703334612892,0.710858932608,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.1608556837e-08,1.51628978143e-08,-7.16565408461e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244906768229,-0.000181126646262,9.80999686629,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119647750000,11813,119647750000,RH_EXTIMU,2.30538331317e-06,1.53056207854e-05,-0.703334676564,0.71085886961,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.25974649279e-08,9.16679262086e-10,-7.16558394732e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245374529046,-0.000180137635586,9.80999813634,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119650250000,11814,119650250000,RH_EXTIMU,2.30541655549e-06,1.53056458037e-05,-0.703334740235,0.710858806613,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.7233245427e-09,3.35858703984e-08,-7.16550782092e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244671958343,-0.000178971736767,9.81000837919,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119652750000,11815,119652750000,RH_EXTIMU,2.30533990048e-06,1.5305653605e-05,-0.703334803905,0.710858743617,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.70864682472e-08,-3.80408691559e-08,-7.16544141462e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246006735287,-0.000178408701378,9.80998699047,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119655250000,11816,119655250000,RH_EXTIMU,2.30545202821e-06,1.5305580401e-05,-0.703334867574,0.710858680621,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.05850889799e-07,2.21144524572e-08,-7.16536660494e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244802220921,-0.00018093199673,9.81001327476,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119657750000,11817,119657750000,RH_EXTIMU,2.30530852252e-06,1.53056540451e-05,-0.703334931243,0.710858617626,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.22151163097e-07,-3.82117437698e-08,-7.16527710944e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246074335778,-0.000176601386425,9.81001174737,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119660250000,11818,119660250000,RH_EXTIMU,2.3054130959e-06,1.53056597126e-05,-0.703334994911,0.710858554632,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.71763245713e-08,6.2717069165e-08,-7.1652008248e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244080090573,-0.000180595934108,9.81001783741,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119662750000,11819,119662750000,RH_EXTIMU,2.30546739767e-06,1.53057518226e-05,-0.703335058579,0.710858491639,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.00508810697e-08,8.35895078796e-08,-7.16514475701e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243769422778,-0.000178976533856,9.80998549124,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119665250000,11820,119665250000,RH_EXTIMU,2.30552500418e-06,1.53056593678e-05,-0.703335122246,0.710858428645,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.56771469411e-08,-1.95105499501e-08,-7.16507474999e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246125644288,-0.000180411249917,9.8099954231,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119667750000,11821,119667750000,RH_EXTIMU,2.30552089541e-06,1.53056033691e-05,-0.703335185912,0.710858365653,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.00678609035e-08,-3.35037355167e-08,-7.16500178986e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245710995101,-0.000179429932881,9.8099997238,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119670250000,11822,119670250000,RH_EXTIMU,2.30557366147e-06,1.53055538334e-05,-0.703335249578,0.710858302661,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.87752495126e-08,2.17336436955e-09,-7.16493371483e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244834800211,-0.00018039250199,9.81000096569,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119672750000,11823,119672750000,RH_EXTIMU,2.30550902465e-06,1.53056057365e-05,-0.703335313242,0.71085823967,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.50665976436e-08,-6.19860781158e-09,-7.16485678199e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245931391946,-0.000177261324227,9.80999698257,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119675250000,11824,119675250000,RH_EXTIMU,2.30554476113e-06,1.53055235935e-05,-0.703335376907,0.710858176679,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.74378338107e-08,-2.59519834602e-08,-7.16479414241e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245448618658,-0.000180686488006,9.8099931091,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119677750000,11825,119677750000,RH_EXTIMU,2.30560485182e-06,1.53054511167e-05,-0.703335440571,0.710858113689,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.58488879173e-08,-6.75161240286e-09,-7.16472526096e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245334041324,-0.000180232396332,9.80999700293,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119680250000,11826,119680250000,RH_EXTIMU,2.30562941321e-06,1.53054230496e-05,-0.703335504234,0.7108580507,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.06558576411e-08,-1.48758531488e-09,-7.16465384784e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245277210112,-0.00017947060872,9.80999956811,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119682750000,11827,119682750000,RH_EXTIMU,2.30564120485e-06,1.53054119914e-05,-0.703335567896,0.710857987711,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.38235851551e-08,9.99919053304e-10,-7.16458194911e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245255963532,-0.000179262514926,9.8100004006,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119685250000,11828,119685250000,RH_EXTIMU,2.30565218697e-06,1.53054015344e-05,-0.703335631558,0.710857924723,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.30248363666e-08,8.86408726968e-10,-7.16451021717e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245264323708,-0.000179285404939,9.81000037857,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119687750000,11829,119687750000,RH_EXTIMU,2.30566551261e-06,1.53053879377e-05,-0.703335695219,0.710857861735,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.61242632747e-08,4.19426177395e-10,-7.16443870947e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245270548044,-0.00017934491202,9.81000018599,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119690250000,11830,119690250000,RH_EXTIMU,2.30554732993e-06,1.53054001289e-05,-0.70333575888,0.710857798748,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.31728539327e-08,-5.89108645092e-08,-7.16436652744e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246587657024,-0.00017735129766,9.80999126708,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119692750000,11831,119692750000,RH_EXTIMU,2.30571095184e-06,1.53053309859e-05,-0.70333582254,0.710857735762,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.32849773719e-07,5.33980443458e-08,-7.16430610073e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243812991835,-0.000181926719098,9.8099984656,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119695250000,11832,119695250000,RH_EXTIMU,2.30578586049e-06,1.53052984857e-05,-0.703335886199,0.710857672776,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.17820015622e-08,2.43201314724e-08,-7.16423565442e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245079342467,-0.000179926746493,9.80999797487,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119697750000,11833,119697750000,RH_EXTIMU,2.30580924775e-06,1.53052817053e-05,-0.703335949858,0.710857609791,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.36374805429e-08,4.27024946027e-09,-7.16416389912e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245266925808,-0.000179377997684,9.80999992116,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119700250000,11834,119700250000,RH_EXTIMU,2.305770327e-06,1.53052865997e-05,-0.703336013516,0.710857546806,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.39919669982e-08,-1.84623586873e-08,-7.16409374476e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245575142512,-0.000178554278138,9.80999539548,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119702750000,11835,119702750000,RH_EXTIMU,2.30576733049e-06,1.530527222e-05,-0.703336077174,0.710857483822,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.2825292849e-09,-9.20979173751e-09,-7.16401497385e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245468964276,-0.000179075568584,9.81000902231,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119705250000,11836,119705250000,RH_EXTIMU,2.30565991023e-06,1.53052676437e-05,-0.70333614083,0.710857420839,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.76178845633e-08,-6.2390722241e-08,-7.16393692137e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246321968181,-0.00017811503038,9.81000170613,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119707750000,11837,119707750000,RH_EXTIMU,2.30570894102e-06,1.53052655596e-05,-0.703336204487,0.710857357857,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.99514126782e-08,2.7056620338e-08,-7.16386818292e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244539454595,-0.000179739913371,9.81000294312,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119710250000,11838,119710250000,RH_EXTIMU,2.30573724054e-06,1.53052672725e-05,-0.703336268142,0.710857294875,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.60253252553e-08,1.75511160086e-08,-7.16379677013e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245094150753,-0.000179353086717,9.81000017791,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119712750000,11839,119712750000,RH_EXTIMU,2.305748791e-06,1.53052456129e-05,-0.703336331797,0.710857231893,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.96513528472e-08,-5.16468894765e-09,-7.16373193261e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245370449767,-0.000179454058018,9.80999047817,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119712750000,11840,119715250000,RH_EXTIMU,2.30580151279e-06,1.5305180366e-05,-0.703336395451,0.710857168912,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.75901093373e-08,-6.78632649868e-09,-7.16366567289e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245478817108,-0.000180080386987,9.80999327753,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119717750000,11841,119717750000,RH_EXTIMU,2.30584629167e-06,1.53051171335e-05,-0.703336459105,0.710857105932,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.19396112348e-08,-1.01099646437e-08,-7.1635972574e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245349924127,-0.000180085088307,9.80999660554,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119722750000,11842,119720250000,RH_EXTIMU,2.30602388886e-06,1.53050881507e-05,-0.703336522758,0.710857042953,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.18200276639e-07,8.41000427316e-08,-7.16351442373e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243883457728,-0.00018105535455,9.8100249087,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119722750000,11843,119722750000,RH_EXTIMU,2.30577063486e-06,1.53052001233e-05,-0.70333658641,0.710856979974,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.06129898752e-07,-7.81673327016e-08,-7.16343152551e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246796891037,-0.000175348064401,9.80999962839,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119725250000,11844,119725250000,RH_EXTIMU,2.30584355863e-06,1.53051413361e-05,-0.703336650062,0.710856916996,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.54439859003e-08,8.25422191974e-09,-7.163366392e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244446246671,-0.00018122789599,9.81000266299,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119727750000,11845,119727750000,RH_EXTIMU,2.3058790397e-06,1.53051708906e-05,-0.703336713713,0.710856854018,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.44367440327e-09,3.74250312506e-08,-7.16329186523e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245237789785,-0.000178497713637,9.81000061417,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119730250000,11846,119730250000,RH_EXTIMU,2.3057868153e-06,1.53051517566e-05,-0.703336777363,0.710856791041,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.07850456928e-08,-6.21193908479e-08,-7.16322214001e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246627310859,-0.000178259216923,9.80999180347,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119732750000,11847,119732750000,RH_EXTIMU,2.3057615124e-06,1.5305043418e-05,-0.703336841013,0.710856728065,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.74649330135e-08,-7.51940754652e-08,-7.16315252968e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246095444978,-0.000180083173032,9.80999563579,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119735250000,11848,119735250000,RH_EXTIMU,2.3059680305e-06,1.53050119453e-05,-0.703336904662,0.710856665089,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.360480289e-07,9.89570532357e-08,-7.16309534154e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243204229029,-0.000181548841625,9.80999464794,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119737750000,11849,119737750000,RH_EXTIMU,2.30609087805e-06,1.53049889831e-05,-0.70333696831,0.710856602114,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.36772278392e-08,5.67179490811e-08,-7.16302777887e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244703387457,-0.000180308775165,9.80999652167,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119737750000,11850,119740250000,RH_EXTIMU,2.30612583463e-06,1.53049698168e-05,-0.703337031958,0.710856539139,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.15590589147e-08,9.42306193418e-09,-7.1629558351e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245277579507,-0.000179457788789,9.80999954323,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119742750000,11851,119742750000,RH_EXTIMU,2.30612492569e-06,1.53049274423e-05,-0.703337095605,0.710856476165,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.42214289265e-08,-2.3955567406e-08,-7.16287103221e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245838818949,-0.000179372282322,9.81001540499,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119745250000,11852,119745250000,RH_EXTIMU,2.30599040173e-06,1.53049978975e-05,-0.703337159252,0.710856413192,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.15249324389e-07,-3.49721081677e-08,-7.16279204806e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245690821079,-0.00017698625442,9.81000537836,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119747750000,11853,119747750000,RH_EXTIMU,2.3059704079e-06,1.53050456358e-05,-0.703337222898,0.710856350219,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.73356062919e-08,1.65517234974e-08,-7.1627210022e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024486931238,-0.00017868771849,9.81000206507,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119750250000,11854,119750250000,RH_EXTIMU,2.30608724018e-06,1.53050307407e-05,-0.703337286543,0.710856287247,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.57172179326e-08,5.79210136322e-08,-7.1626456209e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244392159494,-0.000180543110114,9.8100118408,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119754000000,11855,119752750000,RH_EXTIMU,2.3059724588e-06,1.53050662629e-05,-0.703337350187,0.710856224276,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.43663096169e-08,-4.37294417271e-08,-7.16257212015e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246381058948,-0.0001773485962,9.8099919402,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119755250000,11856,119755250000,RH_EXTIMU,2.30605379664e-06,1.53049355051e-05,-0.703337413831,0.710856161305,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.20724520497e-07,-2.79400409668e-08,-7.16251423633e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245359618509,-0.000181629288321,9.80998955955,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119757750000,11857,119757750000,RH_EXTIMU,2.30612284593e-06,1.53048300504e-05,-0.703337477475,0.710856098335,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.94989279151e-08,-2.04649811465e-08,-7.16244410417e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024565113337,-0.000180508098987,9.80999797362,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119760250000,11858,119760250000,RH_EXTIMU,2.30608209202e-06,1.53048086984e-05,-0.703337541117,0.710856035365,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.02665940635e-08,-3.4419992365e-08,-7.16236670504e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024575379725,-0.000178630988665,9.81000277206,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119762750000,11859,119762750000,RH_EXTIMU,2.30606296449e-06,1.53048131352e-05,-0.703337604759,0.710855972397,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.24786059245e-08,-7.58576659739e-09,-7.16229395115e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245286580624,-0.000178874437894,9.81000178678,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119765250000,11860,119765250000,RH_EXTIMU,2.30607081121e-06,1.53048062859e-05,-0.703337668401,0.710855909428,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.2115728539e-09,1.17360405878e-09,-7.16222248818e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245238023805,-0.000179262175962,9.8100004904,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119767750000,11861,119767750000,RH_EXTIMU,2.306087884e-06,1.53047895301e-05,-0.703337732041,0.710855846461,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.00323720143e-08,7.31165829709e-10,-7.16215137345e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245263832104,-0.000179413485741,9.80999992558,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119770250000,11862,119770250000,RH_EXTIMU,2.30614980188e-06,1.53048262647e-05,-0.703337795682,0.710855783494,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.5437648892e-08,5.63832951953e-08,-7.16209453867e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244136154574,-0.000179376035423,9.80998541654,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119772750000,11863,119772750000,RH_EXTIMU,2.30627688434e-06,1.53047418856e-05,-0.703337859321,0.710855720527,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.20642835141e-07,2.41739399398e-08,-7.16202755803e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245292846858,-0.000181059684405,9.80999701964,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119775250000,11864,119775250000,RH_EXTIMU,2.30619866916e-06,1.53046947264e-05,-0.70333792296,0.710855657561,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.70493216539e-08,-7.01745478863e-08,-7.16194481564e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246497195515,-0.000178386648837,9.81000512967,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119777750000,11865,119777750000,RH_EXTIMU,2.30613873331e-06,1.53047053863e-05,-0.703337986598,0.710855594596,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.91872448475e-08,-2.70085013583e-08,-7.16187026088e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245465524241,-0.000178423438426,9.81000335416,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119780250000,11866,119780250000,RH_EXTIMU,2.30613582365e-06,1.5304705351e-05,-0.703338050236,0.710855531631,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.39526192825e-10,-1.00369986395e-09,-7.16179867302e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245223502376,-0.000179138607961,9.81000097916,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119780250000,11867,119782750000,RH_EXTIMU,2.30626638562e-06,1.53046580377e-05,-0.703338113873,0.710855468667,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0176566549e-07,4.7210547054e-08,-7.16172709355e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024422468419,-0.000181243816923,9.81000924184,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119780250000,11868,119785250000,RH_EXTIMU,2.30625942018e-06,1.53047107276e-05,-0.703338177509,0.710855405704,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.27128491783e-08,2.66981356126e-08,-7.16164942328e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245191813223,-0.000178054465539,9.81000402403,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119787750000,11869,119787750000,RH_EXTIMU,2.30618933941e-06,1.53047058146e-05,-0.703338241145,0.710855342741,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.61941131513e-08,-4.15728484364e-08,-7.16158175578e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246052141015,-0.000178591759367,9.80999189462,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119790250000,11870,119790250000,RH_EXTIMU,2.30624063789e-06,1.53046307176e-05,-0.70333830478,0.710855279779,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.23228015042e-08,-1.31888429262e-08,-7.16151430746e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245381828826,-0.000180325078427,9.80999680867,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119792750000,11871,119792750000,RH_EXTIMU,2.30617881325e-06,1.53045764778e-05,-0.703338368414,0.710855216818,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.74429057674e-09,-6.4978725211e-08,-7.1614552954e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246272000585,-0.00017887889771,9.80997653868,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119795250000,11872,119795250000,RH_EXTIMU,2.30631885884e-06,1.53044406514e-05,-0.703338432048,0.710855153857,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.56962529242e-07,2.21067694633e-09,-7.1613938327e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245110126994,-0.000181626508781,9.80999201387,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119797750000,11873,119797750000,RH_EXTIMU,2.30649699009e-06,1.53043584485e-05,-0.703338495681,0.710855090896,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.48448835679e-07,5.41352229262e-08,-7.16131905152e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244058006212,-0.000181747212526,9.81001476737,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119800250000,11874,119800250000,RH_EXTIMU,2.30643365451e-06,1.53044779265e-05,-0.703338559314,0.710855027937,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.02349449925e-07,3.29615753479e-08,-7.16122680366e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245161271075,-0.000176768789633,9.81002010181,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119802750000,11875,119802750000,RH_EXTIMU,2.30631878587e-06,1.5304580403e-05,-0.703338622945,0.710854964978,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.22089253036e-07,-5.70305457985e-09,-7.16114630417e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245487754692,-0.000177140593935,9.81000945313,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119805250000,11876,119805250000,RH_EXTIMU,2.30629933052e-06,1.530459709e-05,-0.703338686576,0.71085490202,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.95579849472e-08,-8.03908001022e-10,-7.16107516289e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245252226827,-0.000179025783788,9.81000166173,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119807750000,11877,119807750000,RH_EXTIMU,2.30632755406e-06,1.53045667888e-05,-0.703338750207,0.710854839062,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.39950900905e-08,-6.97784625994e-10,-7.16100557617e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245282408741,-0.000179737494735,9.80999894883,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119810250000,11878,119810250000,RH_EXTIMU,2.30633510839e-06,1.53045676353e-05,-0.703338813837,0.710854776105,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.71494939608e-09,5.38541105044e-09,-7.16094545414e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245059497332,-0.000179102618644,9.80998525279,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119812750000,11879,119812750000,RH_EXTIMU,2.30650358911e-06,1.53044590865e-05,-0.703338877466,0.710854713148,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.57784725861e-07,3.3722713473e-08,-7.16087816074e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244859661371,-0.000181783184669,9.81000022072,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119815250000,11880,119815250000,RH_EXTIMU,2.30651882691e-06,1.53043938394e-05,-0.703338941095,0.710854650192,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.62733735684e-08,-2.78777131444e-08,-7.1608012015e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245893912448,-0.000179710462672,9.8100052709,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119817750000,11881,119817750000,RH_EXTIMU,2.30646594096e-06,1.53043964278e-05,-0.703339004723,0.710854587237,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.06365899436e-08,-2.76320442153e-08,-7.16071778037e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245448835075,-0.000178420758529,9.81001328162,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119821500000,11882,119820250000,RH_EXTIMU,2.30636920297e-06,1.53045206932e-05,-0.70333906835,0.710854524283,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.24038733372e-07,1.68894372128e-08,-7.160640223e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245051889899,-0.000176767347512,9.81000361791,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119822750000,11883,119822750000,RH_EXTIMU,2.30640082647e-06,1.53045228725e-05,-0.703339131976,0.710854461329,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.76527436067e-08,1.9686327391e-08,-7.16057727808e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244981621099,-0.00017968126241,9.8099942663,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119825250000,11884,119825250000,RH_EXTIMU,2.30645753863e-06,1.53044780982e-05,-0.703339195602,0.710854398376,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.83396223583e-08,7.10130688345e-09,-7.16050881216e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245186982868,-0.000180073751764,9.80999687512,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119827750000,11885,119827750000,RH_EXTIMU,2.30648919959e-06,1.53044403711e-05,-0.703339259228,0.710854335423,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.01281793718e-08,-2.98669148012e-09,-7.16043784887e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024534250181,-0.00017964377074,9.80999897957,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119830250000,11886,119830250000,RH_EXTIMU,2.30650744779e-06,1.53044189714e-05,-0.703339322852,0.710854272471,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.33136449943e-08,-1.24860204078e-09,-7.16036654987e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245279299474,-0.000179395071418,9.80999986136,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119832750000,11887,119832750000,RH_EXTIMU,2.3064361981e-06,1.53043670312e-05,-0.703339386476,0.710854209519,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0398150715e-08,-6.89743082522e-08,-7.16028986736e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246534914168,-0.000178768430921,9.81000030057,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119835250000,11888,119835250000,RH_EXTIMU,2.30637370085e-06,1.53043359119e-05,-0.7033394501,0.710854146568,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.71360273824e-08,-5.22091525153e-08,-7.16023285646e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245783563893,-0.00017883835013,9.80997814325,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119837750000,11889,119837750000,RH_EXTIMU,2.30664828729e-06,1.53041986458e-05,-0.703339513723,0.710854083618,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.34283554072e-07,7.7094392793e-08,-7.16017251916e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243593245015,-0.000183354502,9.81000096693,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119840250000,11890,119840250000,RH_EXTIMU,2.30666171838e-06,1.53042039421e-05,-0.703339577345,0.710854020668,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.55306055091e-09,1.12225413219e-08,-7.16009491407e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245650618821,-0.000178498349157,9.8100006363,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119842750000,11891,119842750000,RH_EXTIMU,2.30672159647e-06,1.53041841827e-05,-0.703339640967,0.710853957719,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.6064815061e-08,2.31081797232e-08,-7.16002072901e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244721887388,-0.000180108405349,9.81000999252,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119845250000,11892,119845250000,RH_EXTIMU,2.30660849827e-06,1.53042503341e-05,-0.703339704588,0.710853894771,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.00643474299e-07,-2.53646737691e-08,-7.159939477e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024608480013,-0.000176849204546,9.81000244113,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119847750000,11893,119847750000,RH_EXTIMU,2.30660230516e-06,1.53042206488e-05,-0.703339768208,0.710853831823,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.4076260699e-08,-1.97129296362e-08,-7.15987269355e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245352985713,-0.000179693830572,9.80999747074,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119850250000,11894,119850250000,RH_EXTIMU,2.30670910903e-06,1.53041925749e-05,-0.703339831828,0.710853768876,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.74290390804e-08,4.47836501715e-08,-7.15980420661e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244217920729,-0.00018048240675,9.81000337613,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119852750000,11895,119852750000,RH_EXTIMU,2.30676334054e-06,1.53042538233e-05,-0.703339895447,0.710853705929,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.72717019332e-09,6.59987631274e-08,-7.1597248035e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244544309831,-0.000178746020359,9.81001184404,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119855250000,11896,119855250000,RH_EXTIMU,2.30660906829e-06,1.53043334294e-05,-0.703339959065,0.710853642984,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.31629042162e-07,-4.08807668563e-08,-7.15965017289e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246356467277,-0.000176525691811,9.80999271154,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119857750000,11897,119857750000,RH_EXTIMU,2.30666050438e-06,1.53042067238e-05,-0.703340022683,0.710853580038,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.01439575828e-07,-4.24603913449e-08,-7.15958775956e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245738093398,-0.000181378239912,9.80999571867,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119860250000,11898,119860250000,RH_EXTIMU,2.30670660004e-06,1.53041948482e-05,-0.7033400863,0.710853517094,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.37909260918e-08,1.98365345539e-08,-7.15951537414e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244659011451,-0.000179324891069,9.81000058413,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119862750000,11899,119862750000,RH_EXTIMU,2.30681741133e-06,1.53041598637e-05,-0.703340149916,0.710853454149,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.3596329897e-08,4.31085676759e-08,-7.1594458218e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244554424227,-0.00018081396415,9.81000243692,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119865250000,11900,119865250000,RH_EXTIMU,2.30684846913e-06,1.53040863033e-05,-0.703340213532,0.710853391206,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.9947438582e-08,-2.37039220472e-08,-7.15937426004e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024602733694,-0.000179818827859,9.80999860761,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119867750000,11901,119867750000,RH_EXTIMU,2.30676768906e-06,1.53040760867e-05,-0.703340277147,0.710853328263,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.92946321188e-08,-5.06094577527e-08,-7.15929482085e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245973487634,-0.000178155777815,9.8100057033,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119870250000,11902,119870250000,RH_EXTIMU,2.30665178031e-06,1.53040798491e-05,-0.703340340762,0.710853265321,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.7137258797e-08,-6.24258323171e-08,-7.15922282469e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246180088825,-0.00017794369476,9.80999441655,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119872750000,11903,119872750000,RH_EXTIMU,2.30668844205e-06,1.53040319722e-05,-0.703340404376,0.71085320238,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.86828359309e-08,-5.94494846376e-09,-7.159157097e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245155318453,-0.000179942661407,9.80999455344,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119875250000,11904,119875250000,RH_EXTIMU,2.306761444e-06,1.53039564248e-05,-0.703340467989,0.710853139439,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.49183704856e-08,-1.23312323802e-09,-7.15909087424e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245423415653,-0.000180511024892,9.80999672395,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119877750000,11905,119877750000,RH_EXTIMU,2.30675446215e-06,1.53039517837e-05,-0.703340531601,0.710853076498,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.64046326726e-10,-5.91462511191e-09,-7.15902042742e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245088152405,-0.000178740210416,9.80999357058,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119880250000,11906,119880250000,RH_EXTIMU,2.30696372849e-06,1.53039146335e-05,-0.703340595214,0.710853013558,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.40804444742e-07,9.72749308862e-08,-7.15896114742e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243620128695,-0.000181854456128,9.81000080469,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119882750000,11907,119882750000,RH_EXTIMU,2.3069261766e-06,1.53039159249e-05,-0.703340658825,0.710852950619,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.11867946469e-08,-1.97418237607e-08,-7.1588646127e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024618999581,-0.000178085385704,9.81002227857,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119885250000,11908,119885250000,RH_EXTIMU,2.30684351019e-06,1.53040354376e-05,-0.703340722435,0.710852887681,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.13362493249e-07,2.21038135708e-08,-7.15879298067e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244546119544,-0.000177386501241,9.81000263313,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119887750000,11909,119887750000,RH_EXTIMU,2.30687578886e-06,1.53040826938e-05,-0.703340786046,0.710852824743,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.33851288841e-09,4.56892524387e-08,-7.15873514785e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244546103759,-0.000179131419869,9.80998582188,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119890250000,11910,119890250000,RH_EXTIMU,2.30694080407e-06,1.53039926302e-05,-0.703340849655,0.710852761806,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.85442439697e-08,-1.39821054057e-08,-7.15867354809e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245740977463,-0.000180495144525,9.80998540404,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119892750000,11911,119892750000,RH_EXTIMU,2.30709390358e-06,1.53038357725e-05,-0.703340913264,0.710852698869,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.76219438091e-07,-2.40412595239e-09,-7.15860289739e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245231889951,-0.000182205200626,9.81000532096,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119895250000,11912,119895250000,RH_EXTIMU,2.30700036378e-06,1.53038277149e-05,-0.703340976872,0.710852635933,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.77656791449e-08,-5.6561405239e-08,-7.15851682811e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024636854508,-0.000177563339649,9.81000909452,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119897750000,11913,119897750000,RH_EXTIMU,2.30682058807e-06,1.53039049106e-05,-0.70334104048,0.710852572998,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.4477627552e-07,-5.66019275091e-08,-7.158440842e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246177608895,-0.000176374996513,9.80999747371,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119900250000,11914,119900250000,RH_EXTIMU,2.30687811591e-06,1.53038520306e-05,-0.703341104086,0.710852510063,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.33641105417e-08,2.95055079992e-09,-7.15838028468e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244758328043,-0.000180689639962,9.80999280689,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119902750000,11915,119902750000,RH_EXTIMU,2.30696758962e-06,1.53038033354e-05,-0.703341167693,0.710852447129,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.91764409456e-08,2.33054632898e-08,-7.15831065784e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024501161701,-0.000180200791232,9.8100001384,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119905250000,11916,119905250000,RH_EXTIMU,2.30686126131e-06,1.53037657463e-05,-0.703341231298,0.710852384195,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.84217618786e-08,-8.05511755338e-08,-7.15823439301e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246770582798,-0.000178170055758,9.809996045,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119907750000,11917,119907750000,RH_EXTIMU,2.3068549426e-06,1.53037169842e-05,-0.703341294903,0.710852321262,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.47386463514e-08,-3.06323890791e-08,-7.15816401774e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245508834883,-0.00017948844175,9.80999960567,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119910250000,11918,119910250000,RH_EXTIMU,2.30702539224e-06,1.53037034551e-05,-0.703341358508,0.71085225833,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0543892103e-07,8.88667586914e-08,-7.15809135155e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243634159679,-0.000180977718061,9.81001189986,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119912750000,11919,119912750000,RH_EXTIMU,2.30699829613e-06,1.530371625e-05,-0.703341422111,0.710852195399,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.17135756899e-08,-7.31693660976e-09,-7.15801681669e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024584684975,-0.000178574093639,9.81000084871,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119915250000,11920,119915250000,RH_EXTIMU,2.30707810559e-06,1.53037143861e-05,-0.703341485714,0.710852132468,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.73297905917e-08,4.44997508535e-08,-7.15794643188e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243853979034,-0.000180190387774,9.81000553949,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119919000000,11921,119917750000,RH_EXTIMU,2.30715906392e-06,1.53037755212e-05,-0.703341549317,0.710852069537,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.25352946045e-08,8.0972529561e-08,-7.15787562542e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244612097351,-0.000179047592442,9.81000354634,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119920250000,11922,119920250000,RH_EXTIMU,2.30701796119e-06,1.5303776565e-05,-0.703341612918,0.710852006607,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.99350269321e-08,-7.81480772736e-08,-7.15779729844e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246898039207,-0.00017740511952,9.80999521825,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119922750000,11923,119922750000,RH_EXTIMU,2.30713825272e-06,1.53037234386e-05,-0.703341676519,0.710851943678,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.91951754417e-08,3.81259104575e-08,-7.15772463338e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244204549729,-0.000181107811169,9.81001450411,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119925250000,11924,119925250000,RH_EXTIMU,2.30708492391e-06,1.53037480011e-05,-0.70334174012,0.71085188075,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.32529774941e-08,-1.53854125775e-08,-7.15764599806e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024563926348,-0.000178232514631,9.81000408944,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119927750000,11925,119927750000,RH_EXTIMU,2.3069394393e-06,1.530380732e-05,-0.70334180372,0.710851817822,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.15216772373e-07,-4.74737197795e-08,-7.1575807384e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246428113595,-0.000176609192606,9.80998153911,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119930250000,11926,119930250000,RH_EXTIMU,2.30705833598e-06,1.53036112965e-05,-0.703341867319,0.710851754895,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.78806335951e-07,-4.39218726183e-08,-7.1575290375e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245432280288,-0.000182815030043,9.80998286751,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119932750000,11927,119932750000,RH_EXTIMU,2.30719699462e-06,1.53034765453e-05,-0.703341930917,0.710851691968,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.55568289995e-07,2.04205868619e-09,-7.15745649569e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245192275883,-0.000181279086378,9.81000258397,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119935250000,11928,119935250000,RH_EXTIMU,2.30722805031e-06,1.53035082749e-05,-0.703341994515,0.710851629042,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.02175256464e-10,3.61712224256e-08,-7.15738246497e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244376101643,-0.000178896448154,9.8100050015,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119937750000,11929,119937750000,RH_EXTIMU,2.30729152211e-06,1.53034964977e-05,-0.703342058113,0.710851566117,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.3616698182e-08,2.96694375038e-08,-7.15729892358e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024525640182,-0.000179817754808,9.81001775552,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119937750000,11930,119940250000,RH_EXTIMU,2.30714784007e-06,1.53035981316e-05,-0.703342121709,0.710851503192,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.38001284567e-07,-2.23957904691e-08,-7.15722379692e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245546063007,-0.000176432212736,9.80999792704,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119942750000,11931,119942750000,RH_EXTIMU,2.30738303422e-06,1.53036089222e-05,-0.703342185305,0.710851440268,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.28573634067e-07,1.39126978791e-07,-7.15715383185e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000242866817292,-0.000181825702535,9.81001815352,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119945250000,11932,119945250000,RH_EXTIMU,2.30713993989e-06,1.53036911651e-05,-0.7033422489,0.710851377344,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.83624314428e-07,-8.93598676843e-08,-7.1570825337e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247128101825,-0.000175614930966,9.80998087918,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119947750000,11933,119947750000,RH_EXTIMU,2.30728317157e-06,1.53036068799e-05,-0.703342312495,0.710851314421,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.29772962107e-07,3.33142818566e-08,-7.15702050549e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244471329149,-0.000181462310678,9.80999841445,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119950250000,11934,119950250000,RH_EXTIMU,2.30719694949e-06,1.53035688985e-05,-0.703342376089,0.710851251499,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.67670485585e-08,-6.94612016231e-08,-7.15694644998e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246965935063,-0.000178039954872,9.8099911753,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119952750000,11935,119952750000,RH_EXTIMU,2.30716544849e-06,1.5303435802e-05,-0.703342439683,0.710851188577,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.78706460191e-08,-9.27613120388e-08,-7.15687811007e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246295180275,-0.000180269095566,9.80999438582,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119955250000,11936,119955250000,RH_EXTIMU,2.3073191914e-06,1.53034312691e-05,-0.703342503275,0.710851125656,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.08758685536e-08,8.45823355638e-08,-7.15680758795e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243470814856,-0.000180477715295,9.81000983651,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119957750000,11937,119957750000,RH_EXTIMU,2.30742153492e-06,1.53034775228e-05,-0.703342566867,0.710851062736,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.3069766941e-08,8.4542535775e-08,-7.15672978442e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244158884803,-0.000179669234824,9.81001250656,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119957750000,11938,119960250000,RH_EXTIMU,2.30725336208e-06,1.53035072199e-05,-0.703342630459,0.710850999816,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.11451786298e-07,-7.70853876943e-08,-7.15665686266e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246805354943,-0.000177053944203,9.80999054087,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119962750000,11939,119962750000,RH_EXTIMU,2.30729898328e-06,1.53034331323e-05,-0.70334269405,0.710850936897,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.85257388385e-08,-1.5809392367e-08,-7.15659097283e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245316190741,-0.000180340630668,9.80999675523,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119965250000,11940,119965250000,RH_EXTIMU,2.30733405126e-06,1.53033880896e-05,-0.70334275764,0.710850873978,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.61815022195e-08,-5.23014589249e-09,-7.15652049694e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245316649155,-0.000179708832926,9.80999863913,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119967750000,11941,119967750000,RH_EXTIMU,2.3073532395e-06,1.53033664779e-05,-0.70334282123,0.71085081106,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.39669639084e-08,-8.40508726887e-10,-7.15644918222e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245266658196,-0.000179367682236,9.80999985428,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119970250000,11942,119970250000,RH_EXTIMU,2.30736758235e-06,1.53033519665e-05,-0.703342884819,0.710850748143,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.7216349408e-08,4.70875743063e-10,-7.15637768304e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0002452592944,-0.000179291905625,9.81000017036,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119972750000,11943,119972750000,RH_EXTIMU,2.30738195502e-06,1.53033372405e-05,-0.703342948407,0.710850685226,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.73540274039e-08,3.65637670853e-10,-7.15630628799e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245263880331,-0.000179309161604,9.81000013281,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119975250000,11944,119975250000,RH_EXTIMU,2.30736383241e-06,1.53033053821e-05,-0.703343011995,0.71085062231,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.51455990094e-09,-2.76615071517e-08,-7.15623709717e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245744863261,-0.000179161825523,9.80999454585,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119977750000,11945,119977750000,RH_EXTIMU,2.30742997059e-06,1.5303272741e-05,-0.703343075582,0.710850559395,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.68723981379e-08,1.93048008432e-08,-7.15616238479e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244907804612,-0.000179938751768,9.81000688268,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119980250000,11946,119980250000,RH_EXTIMU,2.3073339408e-06,1.53032627124e-05,-0.703343139168,0.71085049648,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.80728416392e-08,-5.90837029188e-08,-7.15609132469e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246541080054,-0.000177951458825,9.80999107706,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119982750000,11947,119982750000,RH_EXTIMU,2.30736825767e-06,1.53031560608e-05,-0.703343202754,0.710850433566,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.04200861487e-08,-4.06886122865e-08,-7.15602813436e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245520254527,-0.00018071494517,9.80999277574,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119987750000,11948,119985250000,RH_EXTIMU,2.30758287673e-06,1.53030672117e-05,-0.703343266339,0.710850370652,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.72937330379e-07,7.08868132801e-08,-7.15595774573e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243558612744,-0.00018232638198,9.81001222011,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119987750000,11949,119987750000,RH_EXTIMU,2.30747838467e-06,1.53031904289e-05,-0.703343329924,0.710850307739,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.27859181646e-07,1.19289890797e-08,-7.15587239879e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245929546611,-0.000175903991903,9.8100053744,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119990250000,11950,119990250000,RH_EXTIMU,2.30742741447e-06,1.53031876446e-05,-0.703343393507,0.710850244827,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.65245663785e-08,-2.96101474939e-08,-7.15580298728e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245534175168,-0.00017906399086,9.80999922021,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119992750000,11951,119992750000,RH_EXTIMU,2.30745946257e-06,1.53032074028e-05,-0.70334345709,0.710850181915,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.00226028002e-09,2.9921553724e-08,-7.15572899182e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024494560478,-0.000178868195066,9.81000447573,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119996500000,11952,119995250000,RH_EXTIMU,2.30745386523e-06,1.53032216589e-05,-0.703343520673,0.710850119004,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.03100894619e-08,5.61048567091e-09,-7.15566623875e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244829476953,-0.00017911227693,9.80998797165,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+119997750000,11953,119997750000,RH_EXTIMU,2.30755764087e-06,1.53031381612e-05,-0.703343584255,0.710850056093,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0689172627e-07,1.15612838481e-08,-7.15560249795e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245262313353,-0.000180892786086,9.80999514392,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120000250000,11954,120000250000,RH_EXTIMU,2.30765133876e-06,1.53030620076e-05,-0.703343647836,0.710849993183,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.70283476146e-08,1.00672361041e-08,-7.1555199042e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245208892909,-0.000180546163435,9.81001593821,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120002750000,11955,120002750000,RH_EXTIMU,2.30747497659e-06,1.53031183441e-05,-0.703343711417,0.710849930274,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.31098240307e-07,-6.65443566743e-08,-7.15544227837e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246569968405,-0.0001764570572,9.80999630194,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120005250000,11956,120005250000,RH_EXTIMU,2.30768812877e-06,1.53030059836e-05,-0.703343774997,0.710849867366,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.85332333037e-07,5.66910107195e-08,-7.15537649412e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243381402369,-0.000183277543247,9.81001619864,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120007750000,11957,120007750000,RH_EXTIMU,2.30746132737e-06,1.53032203776e-05,-0.703343838576,0.710849804458,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.48717049087e-07,-5.04115651958e-09,-7.155286311e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246369293226,-0.000173327565452,9.80999851809,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120010250000,11958,120010250000,RH_EXTIMU,2.30758973106e-06,1.53031334141e-05,-0.703343902155,0.71084974155,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.228472651e-07,2.34479585089e-08,-7.15523638028e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244297760449,-0.00018238324189,9.8099912037,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120015250000,11959,120012750000,RH_EXTIMU,2.30757097831e-06,1.53030860492e-05,-0.703343965733,0.710849678644,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.68812362657e-08,-3.68344026258e-08,-7.15516944211e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024648586167,-0.000178525270933,9.80998036123,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120015250000,11960,120015250000,RH_EXTIMU,2.30771720558e-06,1.53028804791e-05,-0.703344029311,0.710849615737,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.99720122537e-07,-3.3972304241e-08,-7.15511672033e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245341928937,-0.000182872620273,9.80998572145,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120015250000,11961,120017750000,RH_EXTIMU,2.30790834251e-06,1.53027734111e-05,-0.703344092888,0.710849552831,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.69834678604e-07,4.73133386105e-08,-7.15504040443e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244151386804,-0.000181863199306,9.81001468449,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120020250000,11962,120020250000,RH_EXTIMU,2.30780868258e-06,1.5302913253e-05,-0.703344156464,0.710849489927,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.34465689637e-07,2.41017621434e-08,-7.15494704982e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245235070176,-0.000176010891412,9.81001934131,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120022750000,11963,120022750000,RH_EXTIMU,2.30753136179e-06,1.53030300197e-05,-0.703344220039,0.710849427022,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.22513972103e-07,-8.89859925653e-08,-7.15487535271e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246963055123,-0.000175211315608,9.80998551902,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120024000000,11964,120025250000,RH_EXTIMU,2.30767740267e-06,1.53029056549e-05,-0.703344283614,0.710849364119,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.53921908426e-07,1.21026201126e-08,-7.15482356354e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244682527683,-0.000182267008437,9.80998779578,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120027750000,11965,120027750000,RH_EXTIMU,2.30790729419e-06,1.53028341719e-05,-0.703344347189,0.710849301215,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.718507384e-07,8.93561079064e-08,-7.15474721315e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243856323128,-0.000181690867377,9.81001520521,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120030250000,11966,120030250000,RH_EXTIMU,2.30781680273e-06,1.53028939285e-05,-0.703344410762,0.710849238313,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.41897880492e-08,-1.62822827697e-08,-7.1546649089e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245873886442,-0.000177380807477,9.81000653182,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120032750000,11967,120032750000,RH_EXTIMU,2.30785601896e-06,1.53028812456e-05,-0.703344474335,0.710849175411,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.03322497156e-08,1.55061843024e-08,-7.15458784385e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244599683186,-0.000180011904829,9.81001599526,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120037750000,11968,120035250000,RH_EXTIMU,2.30774844954e-06,1.53030128385e-05,-0.703344537907,0.71084911251,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.34322225698e-07,1.49601756475e-08,-7.15450412448e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245382169687,-0.00017630426096,9.81000649455,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120037750000,11969,120037750000,RH_EXTIMU,2.3077377048e-06,1.53029969969e-05,-0.703344601479,0.71084904961,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.6977810055e-09,-1.440191981e-08,-7.15444203972e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245577550954,-0.000179440931018,9.80999092659,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120037750000,11970,120040250000,RH_EXTIMU,2.30788756602e-06,1.53029197663e-05,-0.70334466505,0.71084898671,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.29573150328e-07,4.10564881432e-08,-7.15437968681e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024414406775,-0.000181493324166,9.80999767502,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120037750000,11971,120042750000,RH_EXTIMU,2.30786862151e-06,1.53029041658e-05,-0.70334472862,0.71084892381,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.10096538462e-09,-1.88786115789e-08,-7.15431211038e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024598027132,-0.000178654488132,9.80998744959,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120037750000,11972,120045250000,RH_EXTIMU,2.30789781568e-06,1.53027836796e-05,-0.70334479219,0.710848860912,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.52911636495e-08,-5.14384933807e-08,-7.15423828072e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246186019404,-0.000180385722151,9.81000229955,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120037750000,11973,120047750000,RH_EXTIMU,2.30789231602e-06,1.53027735342e-05,-0.703344855759,0.710848798014,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.47536108261e-09,-8.21132452831e-09,-7.15416353486e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245045442076,-0.000178980754808,9.8100057252,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120037750000,11974,120050250000,RH_EXTIMU,2.3079013452e-06,1.53028566247e-05,-0.703344919328,0.710848735116,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.07239715124e-08,5.29849601533e-08,-7.15409010775e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244339077614,-0.000178272498844,9.81000333009,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120054000000,11975,120052750000,RH_EXTIMU,2.30784367284e-06,1.53028619382e-05,-0.703344982895,0.71084867222,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.48924767851e-08,-2.87765570675e-08,-7.1540216687e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246440346061,-0.00017824148534,9.80999082027,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120055250000,11976,120055250000,RH_EXTIMU,2.30788828135e-06,1.53027172538e-05,-0.703345046463,0.710848609323,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.07672672471e-07,-5.65261780633e-08,-7.15395282812e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024558913974,-0.000181322531642,9.80999956691,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120057750000,11977,120057750000,RH_EXTIMU,2.30793520539e-06,1.53027040956e-05,-0.703345110029,0.710848546428,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.4982837682e-08,1.95728529745e-08,-7.15388063056e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244884777602,-0.000179305635417,9.8100012459,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120060250000,11978,120060250000,RH_EXTIMU,2.30803671049e-06,1.53026851589e-05,-0.703345173595,0.710848483533,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.92733417537e-08,4.69981968335e-08,-7.15381153919e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244429003153,-0.000180415822122,9.81000394925,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120062750000,11979,120062750000,RH_EXTIMU,2.30791921229e-06,1.53027418672e-05,-0.703345237161,0.710848420638,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.78328185846e-08,-3.32120563392e-08,-7.15373811749e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246400963416,-0.000176615126335,9.80999010955,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120065250000,11980,120065250000,RH_EXTIMU,2.30807770418e-06,1.53026091939e-05,-0.703345300725,0.710848357745,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.65677373692e-07,1.43837195767e-08,-7.15367702548e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244420073787,-0.0001828262922,9.81000136975,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120067750000,11981,120067750000,RH_EXTIMU,2.30814291527e-06,1.53026037965e-05,-0.703345364289,0.710848294851,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.10154205809e-08,3.42759344485e-08,-7.1535969962e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244743149233,-0.000179170405867,9.81000996637,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120070250000,11982,120070250000,RH_EXTIMU,2.30794951527e-06,1.53026634189e-05,-0.703345427853,0.710848231959,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.42636251693e-07,-7.42630690189e-08,-7.15352347073e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246853996989,-0.000176373450482,9.80998969367,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120072750000,11983,120072750000,RH_EXTIMU,2.30806313694e-06,1.53025638849e-05,-0.703345491415,0.710848169067,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.21513875516e-07,7.98196146507e-09,-7.15344989455e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244972055606,-0.000181324302723,9.81001132977,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120077750000,11984,120075250000,RH_EXTIMU,2.30802660785e-06,1.53026333344e-05,-0.703345554978,0.710848106176,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.89566363372e-08,1.9592932071e-08,-7.15339045108e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024468701662,-0.000177938996518,9.8099832786,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120077750000,11985,120077750000,RH_EXTIMU,2.30800414948e-06,1.53025694852e-05,-0.703345618539,0.710848043285,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.40490663891e-08,-4.82938752772e-08,-7.15332647284e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246349479735,-0.00017922496066,9.80998443928,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120080250000,11986,120080250000,RH_EXTIMU,2.30809251533e-06,1.53024467059e-05,-0.7033456821,0.710847980395,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.20231017632e-07,-1.944801408e-08,-7.15325580645e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245490623345,-0.000180982157755,9.81000093485,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120082750000,11987,120082750000,RH_EXTIMU,2.30821325451e-06,1.53023941347e-05,-0.70334574566,0.710847917506,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.91365940653e-08,3.86935034924e-08,-7.15316837505e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244629571925,-0.000180602981348,9.81002720244,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120085250000,11988,120085250000,RH_EXTIMU,2.3080989064e-06,1.53025796612e-05,-0.70334580922,0.710847854617,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.68524486278e-07,4.1816394446e-08,-7.15308799979e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244448619791,-0.000176064755615,9.81000964838,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120087750000,11989,120087750000,RH_EXTIMU,2.30804943734e-06,1.53026219945e-05,-0.703345872779,0.710847791729,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.10577407191e-08,-3.10851227271e-09,-7.15302551479e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245569988324,-0.000178446016596,9.80998614996,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120090250000,11990,120090250000,RH_EXTIMU,2.30817102052e-06,1.53025129653e-05,-0.703345936337,0.710847728841,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.31384110949e-07,7.06199200605e-09,-7.15296506067e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245064972632,-0.000181430346631,9.80999166942,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120092750000,11991,120092750000,RH_EXTIMU,2.30829936517e-06,1.53024068432e-05,-0.703345999895,0.710847665954,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.3359342309e-07,1.25197424541e-08,-7.15289053807e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245015102748,-0.000181324109913,9.81001008957,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120095250000,11992,120095250000,RH_EXTIMU,2.30820569799e-06,1.53024775753e-05,-0.703346063452,0.710847603068,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.21715627998e-08,-1.18281020922e-08,-7.15280306413e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024553076482,-0.000176959808969,9.81001078477,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120097750000,11993,120097750000,RH_EXTIMU,2.30817912225e-06,1.53025215983e-05,-0.703346127008,0.710847540182,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.89896297465e-08,1.07338919201e-08,-7.15273722284e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024516744125,-0.000178493887821,9.80999555603,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120100250000,11994,120100250000,RH_EXTIMU,2.30827175114e-06,1.53024614821e-05,-0.703346190564,0.710847477297,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.73961843158e-08,1.85858524681e-08,-7.15268274528e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244821319276,-0.00018084443192,9.80998281534,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120102750000,11995,120102750000,RH_EXTIMU,2.30833675637e-06,1.53023225144e-05,-0.703346254119,0.710847414413,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.16055164061e-07,-4.1798488518e-08,-7.15261207085e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246198017846,-0.000180683070822,9.80999591178,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120105250000,11996,120105250000,RH_EXTIMU,2.30835826365e-06,1.53022585027e-05,-0.703346317674,0.710847351529,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.91427593943e-08,-2.36479199358e-08,-7.15253005187e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245555720606,-0.000179621434451,9.81001344569,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120107750000,11997,120107750000,RH_EXTIMU,2.30835556504e-06,1.53023478376e-05,-0.703346381227,0.710847288646,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.09071823871e-08,4.99367568671e-08,-7.15245322308e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244213501609,-0.00017815376014,9.81001091422,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120111500000,11998,120110250000,RH_EXTIMU,2.30828462907e-06,1.53023926246e-05,-0.70334644478,0.710847225763,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.46462242869e-08,-1.37922151724e-08,-7.15237131828e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245789190641,-0.000177959551929,9.81000979245,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120112750000,11999,120112750000,RH_EXTIMU,2.30827874846e-06,1.53024032191e-05,-0.703346508333,0.710847162881,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.4113173696e-09,3.36839111261e-09,-7.15231166327e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244982202956,-0.000179215278344,9.8099866476,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120115250000,12000,120115250000,RH_EXTIMU,2.30830317151e-06,1.53023242698e-05,-0.703346571885,0.7108471,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.92058962255e-08,-3.05019446656e-08,-7.15225111907e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246187598178,-0.000179617467772,9.80998149299,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120117750000,12001,120117750000,RH_EXTIMU,2.30846553107e-06,1.5302160166e-05,-0.703346635436,0.710847037119,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.85561860742e-07,-1.31373518886e-09,-7.15218797631e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244680879427,-0.000182569253637,9.8100004368,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120121500000,12002,120120250000,RH_EXTIMU,2.30833535908e-06,1.53021745481e-05,-0.703346698987,0.710846974239,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.12242678353e-08,-6.44136686885e-08,-7.152093976e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246743945769,-0.00017678524921,9.81001384421,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120122750000,12003,120122750000,RH_EXTIMU,2.30836956101e-06,1.53022651577e-05,-0.703346762537,0.71084691136,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.06400306976e-08,7.14247091961e-08,-7.15203086582e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243566256288,-0.000178919530906,9.80999909695,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120125250000,12004,120125250000,RH_EXTIMU,2.30846875388e-06,1.53022553649e-05,-0.703346826086,0.710846848481,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.28130296101e-08,5.08970321544e-08,-7.15196809807e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244711561517,-0.00018019126279,9.80999244186,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120127750000,12005,120127750000,RH_EXTIMU,2.30852269448e-06,1.5302188124e-05,-0.703346889635,0.710846785602,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.94038243689e-08,-7.23485217166e-09,-7.15189698332e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245653743031,-0.000180041585541,9.80999924179,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120130250000,12006,120130250000,RH_EXTIMU,2.30851931638e-06,1.53022335788e-05,-0.703346953183,0.710846722725,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.6603374822e-08,2.46007066307e-08,-7.15182869951e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244606592583,-0.000178358047692,9.80999580363,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120132750000,12007,120132750000,RH_EXTIMU,2.30856270033e-06,1.53022108106e-05,-0.703347016731,0.710846659848,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.83766368119e-08,1.21158280596e-08,-7.1517474122e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245357381787,-0.000179598949498,9.81001356551,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120136500000,12008,120135250000,RH_EXTIMU,2.3083664643e-06,1.53022166907e-05,-0.703347080277,0.710846596971,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.1400952849e-07,-1.06421385103e-07,-7.15167847915e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246994734568,-0.000177064170735,9.80998408763,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120137750000,12009,120137750000,RH_EXTIMU,2.30850963484e-06,1.53020865921e-05,-0.703347143824,0.710846534095,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.55515475054e-07,7.22707126023e-09,-7.15161435963e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024474891588,-0.000181949309839,9.81000170689,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120140250000,12010,120140250000,RH_EXTIMU,2.30848565923e-06,1.5302106406e-05,-0.703347207369,0.71084647122,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.38892258396e-08,-1.5704656695e-09,-7.15153379078e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245460233118,-0.000178093076664,9.81000597695,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120142750000,12011,120142750000,RH_EXTIMU,2.30850389507e-06,1.53021167415e-05,-0.703347270914,0.710846408346,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.44879389594e-09,1.67907759612e-08,-7.1514600239e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244859402815,-0.000179377324825,9.81000673054,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120145250000,12012,120145250000,RH_EXTIMU,2.30846279002e-06,1.53020918467e-05,-0.703347334458,0.710846345472,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.47374458159e-09,-3.66336787165e-08,-7.15138349165e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246253038069,-0.000178749483009,9.81000209577,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120147750000,12013,120147750000,RH_EXTIMU,2.30842869349e-06,1.53020504495e-05,-0.703347398002,0.710846282599,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.79733727713e-09,-4.20746546689e-08,-7.15131401947e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245576607295,-0.000179131500074,9.80999585733,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120150250000,12014,120150250000,RH_EXTIMU,2.30857948696e-06,1.53020314936e-05,-0.703347461545,0.710846219726,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.73128576184e-08,7.47206641306e-08,-7.1512531099e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243738341455,-0.000180858020452,9.80999847424,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120152750000,12015,120152750000,RH_EXTIMU,2.30861950429e-06,1.53021130342e-05,-0.703347525087,0.710846156854,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.22301918264e-08,6.95394331479e-08,-7.1511721915e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244513531412,-0.000178191449879,9.81001168095,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120155250000,12016,120155250000,RH_EXTIMU,2.30853366449e-06,1.53021497507e-05,-0.703347588629,0.710846093983,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.85807026733e-08,-2.67680458745e-08,-7.15109441297e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246077674287,-0.000177978498553,9.81000123052,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120157750000,12017,120157750000,RH_EXTIMU,2.30854546324e-06,1.530207933e-05,-0.70334765217,0.710846031112,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.7227774775e-08,-3.27553797529e-08,-7.15103206826e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245696784925,-0.000179928529589,9.80999110803,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120160250000,12018,120160250000,RH_EXTIMU,2.308583815e-06,1.53019924384e-05,-0.70334771571,0.710845968242,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.15957573746e-08,-2.71813118367e-08,-7.15096385931e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245512950132,-0.000180206029088,9.80999578929,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120162750000,12019,120162750000,RH_EXTIMU,2.30858990197e-06,1.53019214696e-05,-0.70334777925,0.710845905372,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.42880574338e-08,-3.62810312448e-08,-7.15089035063e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024595938844,-0.000179626554843,9.81000050655,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120170250000,12020,120165250000,RH_EXTIMU,2.30853955387e-06,1.53018741962e-05,-0.703347842789,0.710845842503,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.13820166535e-09,-5.45607518355e-08,-7.15081597085e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245949213427,-0.000178871420453,9.8099978295,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120170250000,12021,120167750000,RH_EXTIMU,2.30869212503e-06,1.53018203428e-05,-0.703347906328,0.710845779635,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.17959759872e-07,5.58755223179e-08,-7.15075228168e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243919914101,-0.00018135156473,9.81000451584,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120170250000,12022,120170250000,RH_EXTIMU,2.30853338629e-06,1.5301928696e-05,-0.703347969865,0.710845716767,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.50345111479e-07,-2.70486608006e-08,-7.15067286173e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246498242717,-0.000175453339248,9.80999249152,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120172750000,12023,120172750000,RH_EXTIMU,2.30864813694e-06,1.53018038557e-05,-0.703348033403,0.7108456539,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.36394849801e-07,-5.7738069417e-09,-7.15061411652e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244735758555,-0.000182344869503,9.8099965585,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120175250000,12024,120175250000,RH_EXTIMU,2.30883357578e-06,1.53018280001e-05,-0.703348096939,0.710845591034,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.27630562822e-08,1.18725027973e-07,-7.15054105545e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243317726644,-0.000180120997925,9.81001021887,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120177750000,12025,120177750000,RH_EXTIMU,2.30872689385e-06,1.53018602752e-05,-0.703348160475,0.710845528168,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.79341167698e-08,-4.10213185051e-08,-7.15046158585e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246446975848,-0.000177549688308,9.81000022254,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120180250000,12026,120180250000,RH_EXTIMU,2.30861899963e-06,1.53018408776e-05,-0.703348224011,0.710845465303,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.95484056894e-08,-7.10885096646e-08,-7.150399409e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246218840142,-0.000178207016007,9.80998329417,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120182750000,12027,120182750000,RH_EXTIMU,2.30880649744e-06,1.53017287558e-05,-0.703348287545,0.710845402438,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.70607954233e-07,4.23922163025e-08,-7.15032457152e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244494172599,-0.000181927998468,9.81001450949,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120185250000,12028,120185250000,RH_EXTIMU,2.30863147516e-06,1.53017768055e-05,-0.703348351079,0.710845339574,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.25673722627e-07,-7.05043661211e-08,-7.15025383935e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246447335351,-0.000176602842998,9.80998644817,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120187750000,12029,120187750000,RH_EXTIMU,2.30885767723e-06,1.53016361258e-05,-0.703348414613,0.710845276711,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.08687072933e-07,4.79300573964e-08,-7.15018544218e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244067863903,-0.00018328713567,9.81001417065,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120190250000,12030,120190250000,RH_EXTIMU,2.30875033913e-06,1.5301705891e-05,-0.703348478145,0.710845213848,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.94021419282e-08,-2.0070920428e-08,-7.1500922546e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246068613399,-0.000176431847581,9.81001508008,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120192750000,12031,120192750000,RH_EXTIMU,2.30869128101e-06,1.53018401586e-05,-0.703348541677,0.710845150986,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.08240680801e-07,4.37762283153e-08,-7.150020546e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244287108813,-0.000177391618918,9.81000546611,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120195250000,12032,120195250000,RH_EXTIMU,2.30871925566e-06,1.53018026801e-05,-0.703348605209,0.710845088125,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.78906785617e-08,-4.9201895391e-09,-7.1499573822e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245485449353,-0.000180182485354,9.80999092408,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120197750000,12033,120197750000,RH_EXTIMU,2.30875080098e-06,1.53017156138e-05,-0.70334866874,0.710845025264,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.78232905749e-08,-3.11105096451e-08,-7.14988572891e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245929737639,-0.000179751585054,9.80999690536,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120200250000,12034,120200250000,RH_EXTIMU,2.30878853961e-06,1.53016863821e-05,-0.70334873227,0.710844962404,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.88028629445e-08,5.26356716482e-09,-7.149816519e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244918506221,-0.000179665164866,9.81000068747,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120202750000,12035,120202750000,RH_EXTIMU,2.30885997944e-06,1.5301695514e-05,-0.703348795799,0.710844899544,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.63815759001e-08,4.60429342496e-08,-7.14974499928e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244449629447,-0.000179672453665,9.81000317055,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120205250000,12036,120205250000,RH_EXTIMU,2.30891314649e-06,1.53017041455e-05,-0.703348859328,0.710844836685,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.62718694283e-08,3.5476619821e-08,-7.14967689102e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244874882803,-0.000179336110806,9.8099968739,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120205250000,12037,120207750000,RH_EXTIMU,2.3087755265e-06,1.5301705491e-05,-0.703348922856,0.710844773827,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.81244659162e-08,-7.60186118544e-08,-7.14961150202e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247234290771,-0.000177019985856,9.80997902678,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120210250000,12038,120210250000,RH_EXTIMU,2.30898449711e-06,1.53014627788e-05,-0.703348986384,0.710844710969,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.5629938082e-07,-1.97890215573e-08,-7.14955130524e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244475450644,-0.000184520722036,9.81000256862,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120212750000,12039,120212750000,RH_EXTIMU,2.30900059293e-06,1.53014635293e-05,-0.703349049911,0.710844648112,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.62474595334e-09,1.01356891829e-08,-7.14946330242e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245441349285,-0.000178262668621,9.81001497934,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120215250000,12040,120215250000,RH_EXTIMU,2.30888659302e-06,1.53015699363e-05,-0.703349113437,0.710844585256,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.2380819971e-07,-2.98226371355e-09,-7.14938034392e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245289086324,-0.000176806175688,9.81001195915,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120217750000,12041,120217750000,RH_EXTIMU,2.30897316244e-06,1.530167167e-05,-0.703349176963,0.7108445224,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.11979818939e-09,1.07216403353e-07,-7.14931705698e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243324280296,-0.00017928011923,9.81000011232,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120220250000,12042,120220250000,RH_EXTIMU,2.3088368777e-06,1.53016743101e-05,-0.703349240488,0.710844459545,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.80935989013e-08,-7.45311561303e-08,-7.14925765144e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246908419041,-0.000177504293266,9.80997154432,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120222750000,12043,120222750000,RH_EXTIMU,2.30913759408e-06,1.53014478456e-05,-0.703349304013,0.71084439669,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.99330653034e-07,4.10742110868e-08,-7.14919677142e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244131074442,-0.000184711262636,9.81000288457,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120225250000,12044,120225250000,RH_EXTIMU,2.3090325367e-06,1.53014559899e-05,-0.703349367537,0.710844333836,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.34324540976e-08,-5.38301206313e-08,-7.14911776876e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246882633503,-0.000176528450276,9.80999249526,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120229000000,12045,120227750000,RH_EXTIMU,2.30902776181e-06,1.53013916269e-05,-0.70334943106,0.710844270982,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.43940941015e-08,-3.86363539876e-08,-7.14904804956e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245482553185,-0.000180014831428,9.81000256096,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120230250000,12046,120230250000,RH_EXTIMU,2.3090823963e-06,1.5301408644e-05,-0.703349494582,0.710844208129,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.23878122226e-08,4.10709649293e-08,-7.1489676552e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244441435921,-0.000179254998321,9.81001564994,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120232750000,12047,120232750000,RH_EXTIMU,2.30898489238e-06,1.53014803047e-05,-0.703349558104,0.710844145277,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.48764350942e-08,-1.34597285903e-08,-7.14889186866e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245724479155,-0.000177353143346,9.80999841674,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120235250000,12048,120235250000,RH_EXTIMU,2.3090274825e-06,1.5301411476e-05,-0.703349621626,0.710844082426,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.38421508019e-08,-1.45245660935e-08,-7.14883118416e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245329801543,-0.000180329995046,9.80999106159,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120237750000,12049,120237750000,RH_EXTIMU,2.3091103579e-06,1.53013540129e-05,-0.703349685146,0.710844019575,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.03561699235e-08,1.46065020468e-08,-7.14876482202e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244973996039,-0.000180311920108,9.80999592496,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120240250000,12050,120240250000,RH_EXTIMU,2.30918759786e-06,1.53013034174e-05,-0.703349748666,0.710843956724,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.32871611866e-08,1.53409765061e-08,-7.14869294878e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244984505059,-0.000180242307026,9.8100030543,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120242750000,12051,120242750000,RH_EXTIMU,2.30913589882e-06,1.53013242877e-05,-0.703349812186,0.710843893875,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.02496133377e-08,-1.65695661699e-08,-7.14861656805e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245759028186,-0.000177891908162,9.81000117105,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120245250000,12052,120245250000,RH_EXTIMU,2.3091191865e-06,1.53013316077e-05,-0.703349875705,0.710843831025,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.27290417624e-08,-4.58900288046e-09,-7.14854813195e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245173117445,-0.000178929300752,9.80999592336,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120249000000,12053,120247750000,RH_EXTIMU,2.30921656861e-06,1.53012547113e-05,-0.703349939223,0.710843768177,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.95404645024e-08,1.17178832244e-08,-7.14848522508e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245058919678,-0.000180845585469,9.80999390926,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120250250000,12054,120250250000,RH_EXTIMU,2.30927437687e-06,1.53011979087e-05,-0.70335000274,0.710843705329,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.5729418383e-08,8.77321170674e-10,-7.14841565234e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245286882472,-0.000179926080413,9.80999761031,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120252750000,12055,120252750000,RH_EXTIMU,2.30926647297e-06,1.53011783635e-05,-0.703350066257,0.710843642482,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.39653971001e-09,-1.49102483742e-08,-7.14834007261e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245587282165,-0.000178891348334,9.81000523397,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120255250000,12056,120255250000,RH_EXTIMU,2.30914613584e-06,1.53012405775e-05,-0.703350129773,0.710843579635,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.02545640703e-07,-3.1679845393e-08,-7.14825628753e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245733931437,-0.000177034032946,9.81000853041,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120257750000,12057,120257750000,RH_EXTIMU,2.30909653419e-06,1.53012716124e-05,-0.703350193289,0.710843516789,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.4776362288e-08,-9.60911050609e-09,-7.14818272868e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245315157658,-0.000178419117211,9.81000333482,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120260250000,12058,120260250000,RH_EXTIMU,2.30930689967e-06,1.53012912953e-05,-0.703350256804,0.710843453944,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.09447949382e-07,1.30213608543e-07,-7.14810434193e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243024637009,-0.000181095482547,9.81002476232,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120262750000,12059,120262750000,RH_EXTIMU,2.30923574097e-06,1.53014001334e-05,-0.703350320318,0.710843391099,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.00813619893e-07,2.25058323867e-08,-7.14802400098e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245224536267,-0.000177276186237,9.81000712521,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120266500000,12060,120265250000,RH_EXTIMU,2.30923342594e-06,1.5301413664e-05,-0.703350383831,0.710843328255,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.03635737428e-09,7.04386592391e-09,-7.14795343809e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245200872699,-0.000179100521766,9.81000108519,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120267750000,12061,120267750000,RH_EXTIMU,2.30926479212e-06,1.53013810798e-05,-0.703350447344,0.710843265412,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.70652407124e-08,-2.28769144859e-10,-7.14788398956e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245286745065,-0.000179688261754,9.80999881067,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120270250000,12062,120270250000,RH_EXTIMU,2.30914190634e-06,1.5301379814e-05,-0.703350510856,0.710843202569,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.82762226877e-08,-6.92133148272e-08,-7.14781614845e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024679379179,-0.00017724089986,9.80998318534,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120272750000,12063,120272750000,RH_EXTIMU,2.30922329867e-06,1.53012229496e-05,-0.703350574368,0.710843139727,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.35443806918e-07,-4.27549908188e-08,-7.14776690456e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245361582283,-0.000181860194379,9.80997795172,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120276500000,12064,120275250000,RH_EXTIMU,2.30936834705e-06,1.53010766523e-05,-0.703350637879,0.710843076885,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.65697448602e-07,-9.27706249168e-10,-7.1477023548e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245246774711,-0.000181442702896,9.8099921624,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120279000000,12065,120277750000,RH_EXTIMU,2.30956050782e-06,1.53010112823e-05,-0.70335070139,0.710843014044,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.46952915787e-07,7.16027188626e-08,-7.14762321648e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244087515846,-0.000181323178598,9.81001849304,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120280250000,12066,120280250000,RH_EXTIMU,2.3094982955e-06,1.53010726338e-05,-0.703350764899,0.710842951204,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.90063491613e-08,5.35253462279e-10,-7.14754427134e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245000189965,-0.00017808950572,9.81000835619,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120285250000,12067,120282750000,RH_EXTIMU,2.30934303288e-06,1.53011759399e-05,-0.703350828408,0.710842888364,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.45528718521e-07,-2.79638521757e-08,-7.14746594655e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246513084204,-0.000175634431745,9.80999689716,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120285250000,12068,120285250000,RH_EXTIMU,2.30938869919e-06,1.53011044216e-05,-0.703350891917,0.710842825525,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.71047088093e-08,-1.43231727769e-08,-7.14740216496e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244942456203,-0.000181024150499,9.80999838628,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120287750000,12069,120287750000,RH_EXTIMU,2.30942529437e-06,1.53010506809e-05,-0.703350955425,0.710842762686,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.19430811587e-08,-9.31768873248e-09,-7.14732414276e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245563267924,-0.000179515025821,9.81000698489,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120290250000,12070,120290250000,RH_EXTIMU,2.3093833558e-06,1.530105828e-05,-0.703351018932,0.710842699849,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.7231752756e-08,-1.86247760207e-08,-7.14725075807e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245539494745,-0.00017852774029,9.80999967553,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120292750000,12071,120292750000,RH_EXTIMU,2.30934941496e-06,1.53010349057e-05,-0.703351082439,0.710842637011,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.25555686334e-09,-3.17383572143e-08,-7.14718944013e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024583595928,-0.000178680116929,9.80998328894,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120295250000,12072,120295250000,RH_EXTIMU,2.30951334526e-06,1.53009158534e-05,-0.703351145945,0.710842574174,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.61104847574e-07,2.51903096755e-08,-7.14713624881e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024454388025,-0.000182079506817,9.80998664394,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120297750000,12073,120297750000,RH_EXTIMU,2.30970404379e-06,1.53008453092e-05,-0.70335120945,0.710842511338,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.4903259986e-07,6.78376292949e-08,-7.14705125355e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244347272521,-0.000181128796968,9.81002319257,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120300250000,12074,120300250000,RH_EXTIMU,2.30955795513e-06,1.5300962691e-05,-0.703351272955,0.710842448503,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.48231871602e-07,-1.47975431538e-08,-7.14696595253e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245605415694,-0.000176292831596,9.81001024189,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120302750000,12075,120302750000,RH_EXTIMU,2.3095306308e-06,1.53010478138e-05,-0.703351336459,0.710842385668,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.25421913996e-08,3.36840627171e-08,-7.1468933218e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244596736458,-0.000178150502196,9.8100058785,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120305250000,12076,120305250000,RH_EXTIMU,2.30954312223e-06,1.53010669418e-05,-0.703351399962,0.710842322834,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.76599073328e-09,1.85580985962e-08,-7.14682201658e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245087231307,-0.000179088805111,9.81000094856,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120307750000,12077,120307750000,RH_EXTIMU,2.30956911382e-06,1.53010418964e-05,-0.703351463464,0.710842260001,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.9766738035e-08,1.0341165951e-09,-7.14675174259e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245298026889,-0.000179531370142,9.80999929513,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120310250000,12078,120310250000,RH_EXTIMU,2.30964402599e-06,1.53009594987e-05,-0.703351526966,0.710842197168,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.98576602475e-08,-4.05398143325e-09,-7.1466795564e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245391664635,-0.000180616632148,9.81000335902,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120312750000,12079,120312750000,RH_EXTIMU,2.30964812478e-06,1.5300928803e-05,-0.703351590468,0.710842134336,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.04961320933e-08,-1.44977068217e-08,-7.14660777092e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024543666889,-0.000179238720058,9.81000012623,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120315250000,12080,120315250000,RH_EXTIMU,2.30953238154e-06,1.53009638909e-05,-0.703351653969,0.710842071504,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.46700097653e-08,-4.45212566008e-08,-7.14653780724e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246213645945,-0.000176979102337,9.80998953878,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120317750000,12081,120317750000,RH_EXTIMU,2.30957275364e-06,1.53009147396e-05,-0.703351717469,0.710842008673,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.15084434279e-08,-4.58263481619e-09,-7.14647561885e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244945856018,-0.000180261147122,9.80999305757,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120320250000,12082,120320250000,RH_EXTIMU,2.30962844541e-06,1.53008573595e-05,-0.703351780968,0.710841945843,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.48504890756e-08,-6.42028751803e-10,-7.14640544677e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245316054369,-0.000179923935523,9.80999768987,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120322750000,12083,120322750000,RH_EXTIMU,2.30964685084e-06,1.53008329859e-05,-0.703351844467,0.710841883013,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.50746129929e-08,-2.85247486242e-09,-7.14633385206e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245298696028,-0.000179277248099,9.80999987827,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120325250000,12084,120325250000,RH_EXTIMU,2.3096567601e-06,1.53008222293e-05,-0.703351907966,0.710841820183,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.2581066803e-08,1.10468992355e-10,-7.14626210234e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245253131603,-0.000179138312286,9.8100004583,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120327750000,12085,120327750000,RH_EXTIMU,2.30979847632e-06,1.53007346461e-05,-0.703351971463,0.710841757355,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.30765007419e-07,3.0586629183e-08,-7.1461869246e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244582664506,-0.000181779359549,9.81001490531,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120330250000,12086,120330250000,RH_EXTIMU,2.30962619879e-06,1.5300810444e-05,-0.70335203496,0.710841694527,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.39726409849e-07,-5.31814175937e-08,-7.14610270687e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246585282232,-0.000175631065633,9.80999947817,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120332750000,12087,120332750000,RH_EXTIMU,2.30963305477e-06,1.53008131593e-05,-0.703352098456,0.7108416317,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.26430643355e-09,6.05355715716e-09,-7.14604811124e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244868906134,-0.000179477908054,9.80998530351,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120335250000,12088,120335250000,RH_EXTIMU,2.30973089258e-06,1.53006919549e-05,-0.703352161952,0.710841568873,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.24730572706e-07,-1.32224530549e-08,-7.14598697207e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245603545521,-0.000181131931721,9.80998882395,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120341500000,12089,120337750000,RH_EXTIMU,2.30974882362e-06,1.53006018699e-05,-0.703352225447,0.710841506047,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.17793910847e-08,-4.04877535578e-08,-7.14591459946e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245804634782,-0.000179761335628,9.80999749249,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120341500000,12090,120340250000,RH_EXTIMU,2.30980289376e-06,1.53005791367e-05,-0.703352288942,0.710841443221,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.44331127172e-08,1.81481864571e-08,-7.14584415211e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244666518633,-0.000179732874,9.81000167019,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120342750000,12091,120342750000,RH_EXTIMU,2.30987448512e-06,1.53006512841e-05,-0.703352352436,0.710841380396,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.00933433589e-09,8.19631341166e-08,-7.14576748594e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244043350864,-0.000178743295921,9.81001243719,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120345250000,12092,120345250000,RH_EXTIMU,2.30970548088e-06,1.53006497551e-05,-0.703352415929,0.710841317572,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.43545671989e-08,-9.53134339112e-08,-7.14569703782e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247181393075,-0.000177470114604,9.80998529256,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120347750000,12093,120347750000,RH_EXTIMU,2.30981376023e-06,1.53004903665e-05,-0.703352479422,0.710841254748,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.52153894587e-07,-2.90614803853e-08,-7.14562847637e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245531576735,-0.000181692548868,9.81000297241,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120347750000,12094,120350250000,RH_EXTIMU,2.30975629433e-06,1.5300498845e-05,-0.703352542913,0.710841191925,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.65567530197e-08,-2.68618809844e-08,-7.14555456465e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245575187009,-0.00017789136494,9.80999886496,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120352750000,12095,120352750000,RH_EXTIMU,2.30986087077e-06,1.53005049698e-05,-0.703352606405,0.710841129103,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.69167452588e-08,6.29779199553e-08,-7.14548156025e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024387170116,-0.000180435905827,9.81001347233,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120355250000,12096,120355250000,RH_EXTIMU,2.30979469426e-06,1.530059443e-05,-0.703352669895,0.710841066281,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.70772064447e-08,1.42888936163e-08,-7.14539963671e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245450742008,-0.000177085124803,9.81000544642,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120357750000,12097,120357750000,RH_EXTIMU,2.30977328354e-06,1.53005750138e-05,-0.703352733385,0.71084100346,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.57306493663e-10,-2.24372611287e-08,-7.14533270176e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245659598883,-0.000179246823673,9.80999512786,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120360250000,12098,120360250000,RH_EXTIMU,2.30988232534e-06,1.53005313346e-05,-0.703352796875,0.710840940639,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.74797945783e-08,3.71683857664e-08,-7.14526480852e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244537951953,-0.000180485230844,9.81000193335,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120362750000,12099,120362750000,RH_EXTIMU,2.30983465485e-06,1.53004625666e-05,-0.703352860363,0.71084087782,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.24788550617e-08,-6.52782245282e-08,-7.14519876155e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246365704199,-0.000179220797383,9.80998732849,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120365250000,12100,120365250000,RH_EXTIMU,2.31002021888e-06,1.53004132598e-05,-0.703352923851,0.710840815,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.34162472782e-07,7.70257632287e-08,-7.14512676942e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243520620028,-0.000181371739571,9.81001319404,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120367750000,12101,120367750000,RH_EXTIMU,2.30982740606e-06,1.53005648457e-05,-0.703352987339,0.710840752182,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.94048881131e-07,-2.16380304438e-08,-7.14504711685e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024665995816,-0.000174536832551,9.80999053845,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120370250000,12102,120370250000,RH_EXTIMU,2.31002401645e-06,1.53004148989e-05,-0.703353050826,0.710840689363,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.97072536279e-07,2.60101939397e-08,-7.14499555265e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243953593734,-0.000183664744192,9.80999554073,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120372750000,12103,120372750000,RH_EXTIMU,2.31006942108e-06,1.53004053321e-05,-0.703353114312,0.710840626546,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.20966386716e-08,2.07595763617e-08,-7.14491858456e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245446646327,-0.000178642351749,9.81000146066,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120375250000,12104,120375250000,RH_EXTIMU,2.30998625941e-06,1.53003910641e-05,-0.703353177798,0.710840563729,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.83702258301e-08,-5.42558690973e-08,-7.14484421903e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246165170524,-0.000178350410311,9.80999773326,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120377750000,12105,120377750000,RH_EXTIMU,2.30999661599e-06,1.53003448291e-05,-0.703353241282,0.710840500913,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.27982663086e-08,-1.98135060868e-08,-7.14477467687e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245412708438,-0.000179559278958,9.80999911802,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120380250000,12106,120380250000,RH_EXTIMU,2.31001637205e-06,1.53003188501e-05,-0.703353304767,0.710840438097,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.67458218939e-08,-3.005606242e-09,-7.14470391227e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245256894923,-0.000179365859592,9.80999963766,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120386500000,12107,120382750000,RH_EXTIMU,2.31004410404e-06,1.53003369771e-05,-0.70335336825,0.710840375282,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.46378097084e-09,2.65642144947e-08,-7.14463118984e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244775129767,-0.000178972259122,9.8100038304,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120386500000,12108,120385250000,RH_EXTIMU,2.31015294757e-06,1.53003445042e-05,-0.703353431733,0.710840312468,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.8554080511e-08,6.61763472883e-08,-7.1445480357e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244303940002,-0.000180045541241,9.81002229104,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120387750000,12109,120387750000,RH_EXTIMU,2.30992704337e-06,1.53003946684e-05,-0.703353495216,0.710840249654,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.55798847812e-07,-9.79338762874e-08,-7.14447467995e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247051448908,-0.000176308589675,9.80998840833,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120390250000,12110,120390250000,RH_EXTIMU,2.3100712883e-06,1.53002942326e-05,-0.703353558697,0.710840186841,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.39434677976e-07,2.4700655588e-08,-7.14441606299e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244447767474,-0.00018178105318,9.80999561615,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120392750000,12111,120392750000,RH_EXTIMU,2.31006803779e-06,1.53002713771e-05,-0.703353622178,0.710840124029,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.19050010396e-08,-1.41747527027e-08,-7.14434034599e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245788243833,-0.00017854667933,9.81000037078,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120395250000,12112,120395250000,RH_EXTIMU,2.31010984959e-06,1.53002962385e-05,-0.703353685659,0.710840061217,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.06812458825e-08,3.83162610037e-08,-7.14426618597e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244211337049,-0.0001794462731,9.8100084547,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120397750000,12113,120397750000,RH_EXTIMU,2.31005152292e-06,1.53003019049e-05,-0.703353749139,0.710839998406,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.54640534342e-08,-2.89455875777e-08,-7.14419246317e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246165563426,-0.000178170727265,9.80999672562,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120400250000,12114,120400250000,RH_EXTIMU,2.3101641981e-06,1.53002274698e-05,-0.703353812618,0.710839935595,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.06851654362e-07,2.17227635597e-08,-7.14413034639e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244724263272,-0.000181057385332,9.80999545238,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120402750000,12115,120402750000,RH_EXTIMU,2.31024450683e-06,1.53001680084e-05,-0.703353876096,0.710839872785,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.00203363585e-08,1.20257921017e-08,-7.14406267503e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245132849647,-0.000180178629732,9.80999668215,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120405250000,12116,120405250000,RH_EXTIMU,2.31022980304e-06,1.53001506077e-05,-0.703353939574,0.710839809976,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.32249817347e-09,-1.75173710602e-08,-7.14398834662e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245696777188,-0.000178683469814,9.81000221281,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120407750000,12117,120407750000,RH_EXTIMU,2.31016583995e-06,1.53001920248e-05,-0.703354003051,0.710839747167,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.87856579205e-08,-1.17867498521e-08,-7.14390893761e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245260093311,-0.00017793385493,9.81000651563,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120410250000,12118,120410250000,RH_EXTIMU,2.31014058388e-06,1.53002011911e-05,-0.703354066528,0.710839684359,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.86271132577e-08,-8.34706358839e-09,-7.14383643057e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245511646138,-0.000178692122875,9.81000112994,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120412750000,12119,120412750000,RH_EXTIMU,2.31005116306e-06,1.5300207106e-05,-0.703354130004,0.710839621551,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.32862538893e-08,-4.63005279976e-08,-7.14376845068e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246114825273,-0.000177777219511,9.80998807288,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120415250000,12120,120415250000,RH_EXTIMU,2.3103243877e-06,1.53000780919e-05,-0.703354193479,0.710839558744,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.2886221598e-07,8.10237442033e-08,-7.14371064626e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243112933529,-0.000183798814824,9.81000468681,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120417750000,12121,120417750000,RH_EXTIMU,2.31040058884e-06,1.53001309139e-05,-0.703354256954,0.710839495938,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.4504349397e-08,7.35669564951e-08,-7.14362575248e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244668105623,-0.00017853236507,9.81001421658,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120420250000,12122,120420250000,RH_EXTIMU,2.31014986786e-06,1.53001691251e-05,-0.703354320428,0.710839433133,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.63185659707e-07,-1.18695519527e-07,-7.14354739978e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247578144447,-0.000175983801038,9.8099930627,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120422750000,12123,120422750000,RH_EXTIMU,2.31016752596e-06,1.53000968257e-05,-0.703354383901,0.710839370328,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.16163104506e-08,-3.05272364093e-08,-7.14348184695e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024539249814,-0.000180070599517,9.80999751447,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120425250000,12124,120425250000,RH_EXTIMU,2.31026000047e-06,1.53000735651e-05,-0.703354447374,0.710839307523,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.65689488467e-08,3.94576739864e-08,-7.14341592171e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244475909904,-0.000179981728558,9.80999619263,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120427750000,12125,120427750000,RH_EXTIMU,2.31015805213e-06,1.53000806181e-05,-0.703354510846,0.710839244719,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.10507088679e-08,-5.27024304993e-08,-7.14335392063e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246755246735,-0.000177307836653,9.80997596677,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120427750000,12126,120430250000,RH_EXTIMU,2.31046357669e-06,1.52998312093e-05,-0.703354574318,0.710839181916,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.14974254326e-07,3.07334586251e-08,-7.1432985495e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243627764207,-0.000185572819382,9.81000264722,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120431500000,12127,120432750000,RH_EXTIMU,2.31047777129e-06,1.52998716015e-05,-0.703354637789,0.710839119113,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.37629938613e-08,3.16083111527e-08,-7.14321077253e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245372323447,-0.000177564935678,9.81001040737,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120435250000,12128,120435250000,RH_EXTIMU,2.31038676012e-06,1.52999529307e-05,-0.703354701259,0.710839056311,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.66251089517e-08,-4.30954676814e-09,-7.14312524449e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245399223384,-0.000177263635532,9.81001801366,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120437750000,12129,120437750000,RH_EXTIMU,2.31030513415e-06,1.53000453449e-05,-0.703354764728,0.71083899351,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.7525354794e-08,7.27504938931e-09,-7.14305015353e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244994671738,-0.000177566877656,9.81000295671,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120440250000,12130,120440250000,RH_EXTIMU,2.31028451172e-06,1.53000263934e-05,-0.703354828197,0.710838930709,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.70745703878e-10,-2.17297027437e-08,-7.14298853652e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246006188458,-0.000178920460859,9.80998587308,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120442750000,12131,120442750000,RH_EXTIMU,2.31033605266e-06,1.5299914268e-05,-0.703354891666,0.710838867909,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.32939124273e-08,-3.41098398573e-08,-7.14292907792e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245460303791,-0.000180648945177,9.80998600236,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120445250000,12132,120445250000,RH_EXTIMU,2.31046951077e-06,1.5299820942e-05,-0.703354955134,0.71083880511,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.29299687446e-07,2.26743201031e-08,-7.14286709651e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244799157552,-0.000181143625861,9.80999191758,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120447750000,12133,120447750000,RH_EXTIMU,2.31050829776e-06,1.52997188956e-05,-0.703355018601,0.710838742311,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.03698462808e-08,-3.55547032122e-08,-7.14279772473e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246096194341,-0.000180017373584,9.80999369761,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120450250000,12134,120450250000,RH_EXTIMU,2.31059932157e-06,1.52996361227e-05,-0.703355082067,0.710838679512,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.92305061542e-08,4.79839467248e-09,-7.14272314294e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244686099998,-0.000180800947325,9.81001262958,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120452750000,12135,120452750000,RH_EXTIMU,2.31057145556e-06,1.52997669216e-05,-0.703355145533,0.710838616715,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.85521811761e-08,5.93530977017e-08,-7.14263217744e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244319299489,-0.000177137358432,9.81002362112,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120455250000,12136,120455250000,RH_EXTIMU,2.31036719045e-06,1.52999703218e-05,-0.703355208998,0.710838553918,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.29716827376e-07,1.38237284973e-09,-7.14255357735e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245770507487,-0.000174625317941,9.8099978903,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120457750000,12137,120457750000,RH_EXTIMU,2.31045535912e-06,1.5299910895e-05,-0.703355272463,0.710838491121,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.44703694858e-08,1.64681240512e-08,-7.1425007264e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244793058917,-0.000181259929454,9.80998721969,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120460250000,12138,120460250000,RH_EXTIMU,2.31057829586e-06,1.52997844396e-05,-0.703355335927,0.710838428325,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.41957819062e-07,-2.08558478995e-09,-7.14242708819e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245401362664,-0.000181172093333,9.81000467858,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120462750000,12139,120462750000,RH_EXTIMU,2.31055868704e-06,1.52997427476e-05,-0.70335539939,0.71083836553,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.32013257923e-08,-3.40913020612e-08,-7.142344535e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245867600121,-0.000179009480426,9.81001125318,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120465250000,12140,120465250000,RH_EXTIMU,2.31046978894e-06,1.52998139274e-05,-0.703355462852,0.710838302736,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.97126447141e-08,-8.89243371014e-09,-7.14227245702e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245154936283,-0.000177379265033,9.8099996632,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120467750000,12141,120467750000,RH_EXTIMU,2.31044689705e-06,1.52998273352e-05,-0.703355526314,0.710838239942,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.96694948917e-08,-4.60498488406e-09,-7.14220561656e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245509069651,-0.000178569721464,9.80999103441,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120470250000,12142,120470250000,RH_EXTIMU,2.31055285125e-06,1.5299716166e-05,-0.703355589776,0.710838177149,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.23699041831e-07,-2.94859968172e-09,-7.14214613888e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245146679296,-0.000181352223638,9.80999060884,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120472750000,12143,120472750000,RH_EXTIMU,2.31070362524e-06,1.52996172311e-05,-0.703355653236,0.710838114356,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.42302718218e-07,2.92280499812e-08,-7.14207594864e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244611476403,-0.000181403086502,9.81000495573,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120475250000,12144,120475250000,RH_EXTIMU,2.31067746164e-06,1.52996595484e-05,-0.703355716696,0.710838051564,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.77969958952e-08,9.99403632934e-09,-7.14199518655e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245351257422,-0.000177812860257,9.81000716205,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120477750000,12145,120477750000,RH_EXTIMU,2.31059454308e-06,1.52996881622e-05,-0.703355780156,0.710837988773,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.23610860549e-08,-2.97339265942e-08,-7.14192628393e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245714712455,-0.000178014614711,9.80999370728,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120480250000,12146,120480250000,RH_EXTIMU,2.31076164043e-06,1.52996718746e-05,-0.703355843614,0.710837925982,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.05080899714e-07,8.54120580097e-08,-7.14184742089e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243818073079,-0.000180759204794,9.81002138414,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120482750000,12147,120482750000,RH_EXTIMU,2.31056657574e-06,1.52997011786e-05,-0.703355907072,0.710837863192,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.26523649676e-07,-9.24443530877e-08,-7.14176453546e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247134019926,-0.000176725396489,9.81000063069,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120485250000,12148,120485250000,RH_EXTIMU,2.31054871886e-06,1.52996857784e-05,-0.70335597053,0.710837800402,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.96409525964e-10,-1.81542453165e-08,-7.14171292764e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024505894722,-0.000179230274363,9.80997799422,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120487750000,12149,120487750000,RH_EXTIMU,2.31076882687e-06,1.5299541933e-05,-0.703356033987,0.710837737613,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.07001243958e-07,4.27020639281e-08,-7.14165109807e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244568422054,-0.000182543475288,9.80999762512,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120490250000,12150,120490250000,RH_EXTIMU,2.31080671545e-06,1.52995416103e-05,-0.703356097443,0.710837674825,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.26204064461e-08,2.17870546971e-08,-7.14157279312e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244944655724,-0.000178894874045,9.81000531949,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120492750000,12151,120492750000,RH_EXTIMU,2.31075285169e-06,1.52995485392e-05,-0.703356160899,0.710837612037,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.36367077571e-08,-2.57169204974e-08,-7.14150069461e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024590354649,-0.000178285992415,9.80999746878,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120495250000,12152,120495250000,RH_EXTIMU,2.3107969069e-06,1.52994877906e-05,-0.703356224354,0.71083754925,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.01279167332e-08,-9.10550137433e-09,-7.14142542852e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245306350368,-0.000180159824867,9.81001100718,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120497750000,12153,120497750000,RH_EXTIMU,2.31059875513e-06,1.52995889685e-05,-0.703356287808,0.710837486464,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.68721548818e-07,-5.33089978635e-08,-7.14133930602e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246278968076,-0.000175427113609,9.81000266047,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120500250000,12154,120500250000,RH_EXTIMU,2.31064302937e-06,1.52995745172e-05,-0.703356351261,0.710837423678,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.42016801904e-08,1.7345601045e-08,-7.14128127362e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244633569091,-0.000180106767204,9.80999278648,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120502750000,12155,120502750000,RH_EXTIMU,2.31079161839e-06,1.52995110874e-05,-0.703356414714,0.710837360893,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.21081784247e-07,4.81894152076e-08,-7.14121459931e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244409698496,-0.000181150630268,9.81000047698,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120505250000,12156,120505250000,RH_EXTIMU,2.31082757468e-06,1.52994779764e-05,-0.703356478167,0.710837298108,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.99710553334e-08,2.05396823067e-09,-7.14113672834e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245558209026,-0.000179336267043,9.81000578871,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120507750000,12157,120507750000,RH_EXTIMU,2.31072407489e-06,1.52994886737e-05,-0.703356541618,0.710837235324,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.39837337743e-08,-5.15034171747e-08,-7.14106118374e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246095125777,-0.000177721801766,9.81000005406,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120510250000,12158,120510250000,RH_EXTIMU,2.31081392701e-06,1.52995351053e-05,-0.703356605069,0.710837172541,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.58624908952e-08,7.76138518703e-08,-7.1409952119e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243663769198,-0.000179519818537,9.81000244087,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120512750000,12159,120512750000,RH_EXTIMU,2.31081760055e-06,1.52995361873e-05,-0.70335666852,0.710837109758,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.37287525713e-09,3.33348967202e-09,-7.14092478198e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245708411819,-0.000178898485661,9.80999392888,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120515250000,12160,120515250000,RH_EXTIMU,2.31091703806e-06,1.52993929343e-05,-0.70335673197,0.710837046976,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.38046127322e-07,-2.48604830173e-08,-7.14085918343e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245424244347,-0.000181660971626,9.80999869041,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120517750000,12161,120517750000,RH_EXTIMU,2.31090596869e-06,1.52993965797e-05,-0.703356795419,0.710836984194,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.45337718766e-09,-3.50442922363e-09,-7.14078530219e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245303391556,-0.00017824336823,9.80999904158,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120520250000,12162,120520250000,RH_EXTIMU,2.3109581281e-06,1.52994015419e-05,-0.703356858867,0.710836921414,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.77619439886e-08,3.28223128776e-08,-7.14071674952e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244687936485,-0.000179643146722,9.81000178388,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120522750000,12163,120522750000,RH_EXTIMU,2.31095306992e-06,1.52994052883e-05,-0.703356922315,0.710836858633,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.09182525177e-09,-6.46042698644e-11,-7.14064441958e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245336825016,-0.000178669860272,9.80999725582,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120525250000,12164,120525250000,RH_EXTIMU,2.3110444715e-06,1.52993776723e-05,-0.703356985763,0.710836795854,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.84090590589e-08,3.63770426772e-08,-7.1405819633e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244622051574,-0.000180274984158,9.80999533977,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120527750000,12165,120527750000,RH_EXTIMU,2.31110228729e-06,1.52993396096e-05,-0.703357049209,0.710836733074,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.51879754015e-08,1.15381577026e-08,-7.14051194514e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245204742924,-0.000179747850308,9.80999812843,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120530250000,12166,120530250000,RH_EXTIMU,2.311048874e-06,1.52992847521e-05,-0.703357112655,0.710836670296,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.38567839491e-09,-6.05996437028e-08,-7.14042771865e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246463486415,-0.000178731535176,9.81001082061,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120532750000,12167,120532750000,RH_EXTIMU,2.31103959253e-06,1.52992807939e-05,-0.703357176101,0.710836607518,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.1582572222e-09,-6.822394402e-09,-7.14035200711e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245088250849,-0.000179090419476,9.81000818791,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120535250000,12168,120535250000,RH_EXTIMU,2.31095306341e-06,1.52992962921e-05,-0.703357239545,0.710836544741,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.70344834661e-08,-3.92242971447e-08,-7.14027653211e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245932079175,-0.000177902973619,9.81000152159,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120537750000,12169,120537750000,RH_EXTIMU,2.31088953945e-06,1.52993270103e-05,-0.703357302989,0.710836481965,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.2516259096e-08,-1.76244525139e-08,-7.14021782204e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245297220085,-0.000178099495794,9.80998175577,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120540250000,12170,120540250000,RH_EXTIMU,2.31111772233e-06,1.52992228141e-05,-0.703357366433,0.710836419189,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.89282899167e-07,6.97931330514e-08,-7.14015832394e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243966299151,-0.000182408936718,9.80999732448,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120542750000,12171,120542750000,RH_EXTIMU,2.31114319857e-06,1.52992198512e-05,-0.703357429876,0.710836356413,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.70472995804e-08,1.33012407315e-08,-7.14008000402e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245473499625,-0.000178723990096,9.81000250922,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120546500000,12172,120545250000,RH_EXTIMU,2.3112080358e-06,1.52991265539e-05,-0.703357493318,0.710836293639,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.02605594397e-08,-1.5921260713e-08,-7.14000790643e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245470530919,-0.000180869570094,9.81000564634,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120547750000,12173,120547750000,RH_EXTIMU,2.31103455968e-06,1.52991367139e-05,-0.70335755676,0.710836230865,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.03474867722e-07,-9.1183868356e-08,-7.13993161698e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247078769938,-0.000176283800525,9.80999095757,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120550250000,12174,120550250000,RH_EXTIMU,2.31109955784e-06,1.5299073231e-05,-0.703357620201,0.710836168091,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.35759058589e-08,1.12382400355e-09,-7.13987131706e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244575642322,-0.000180836317091,9.80999684553,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120552750000,12175,120552750000,RH_EXTIMU,2.31114513719e-06,1.52990600925e-05,-0.703357683641,0.710836105318,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.42049207343e-08,1.88264165454e-08,-7.13979309279e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024500389887,-0.000179238990164,9.81000864156,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120555250000,12176,120555250000,RH_EXTIMU,2.31104666694e-06,1.52991460881e-05,-0.70335774708,0.710836042546,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.03492957701e-07,-5.85386734262e-09,-7.13971185086e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245555614016,-0.000176897688847,9.81000580926,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120557750000,12177,120557750000,RH_EXTIMU,2.31103818199e-06,1.52991373425e-05,-0.703357810519,0.710835979775,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.88401700386e-10,-9.09671480727e-09,-7.13964293374e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245314853372,-0.000179262641006,9.8099995718,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120560250000,12178,120560250000,RH_EXTIMU,2.31099386131e-06,1.52991051981e-05,-0.703357873958,0.710835917004,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.22406886849e-09,-4.25671775983e-08,-7.13957826258e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245932665363,-0.000178782611797,9.80998718312,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120562750000,12179,120562750000,RH_EXTIMU,2.31124195916e-06,1.52990128901e-05,-0.703357937396,0.710835854233,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.93918410688e-07,8.77595736294e-08,-7.13951073928e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024366413441,-0.000182386172041,9.81000940913,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120565250000,12180,120565250000,RH_EXTIMU,2.31127296522e-06,1.52990403426e-05,-0.703358000833,0.710835791463,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.07750607579e-09,3.3709031583e-08,-7.1394352799e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244836394819,-0.000178840084814,9.81000485524,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120567750000,12181,120567750000,RH_EXTIMU,2.31117400419e-06,1.52990798456e-05,-0.703358064269,0.710835728694,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.76113723488e-08,-3.25689524955e-08,-7.13936143444e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024626851053,-0.000177257362494,9.80999481981,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120570250000,12182,120570250000,RH_EXTIMU,2.31126330364e-06,1.52989710219e-05,-0.703358127705,0.710835665926,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.12907860223e-07,-1.09860642225e-08,-7.1392955304e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244871250911,-0.000181503266615,9.81000153456,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120572750000,12183,120572750000,RH_EXTIMU,2.31112299589e-06,1.5298953071e-05,-0.70335819114,0.710835603158,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.87954042534e-08,-8.85064642103e-08,-7.13922722821e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246935485595,-0.000177222822329,9.80998192642,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120575250000,12184,120575250000,RH_EXTIMU,2.31137505205e-06,1.52987933989e-05,-0.703358254575,0.710835540391,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.34074170321e-07,5.16790614437e-08,-7.13916034698e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243805796057,-0.000183590910962,9.81001326808,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120577750000,12185,120577750000,RH_EXTIMU,2.31121355273e-06,1.52988743145e-05,-0.703358318009,0.710835477624,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.3647723128e-07,-4.42084750312e-08,-7.13908545737e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246437794267,-0.000175695573087,9.80998704618,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120580250000,12186,120580250000,RH_EXTIMU,2.31137986218e-06,1.52988071633e-05,-0.703358381442,0.710835414858,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.33252412336e-07,5.60442772517e-08,-7.13902043391e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244020216752,-0.000181669067744,9.81000773376,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120582750000,12187,120582750000,RH_EXTIMU,2.31120230699e-06,1.52988641363e-05,-0.703358444875,0.710835352092,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.32135563157e-07,-6.68582940206e-08,-7.13893215383e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247210220738,-0.000175804432539,9.81000301665,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120585250000,12188,120585250000,RH_EXTIMU,2.31114850536e-06,1.52988391792e-05,-0.703358508306,0.710835289328,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.56597982772e-08,-4.38149286391e-08,-7.13886538574e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245091241275,-0.000179148415769,9.80999682481,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120587750000,12189,120587750000,RH_EXTIMU,2.31138191814e-06,1.52988137322e-05,-0.703358571738,0.710835226563,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.47945505193e-07,1.17518286641e-07,-7.13880411592e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243223412108,-0.000181860324808,9.81000441236,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120590250000,12190,120590250000,RH_EXTIMU,2.31132865226e-06,1.52988276217e-05,-0.703358635169,0.7108351638,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.72136877863e-08,-2.14225917826e-08,-7.13872437254e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246184528085,-0.000177761131611,9.80999944262,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120592750000,12191,120592750000,RH_EXTIMU,2.31119369595e-06,1.52988056656e-05,-0.703358698599,0.710835101037,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.34985497084e-08,-8.77730177847e-08,-7.13865385021e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246650815529,-0.000177770506725,9.80999223451,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120595250000,12192,120595250000,RH_EXTIMU,2.31141056766e-06,1.52986945704e-05,-0.703358762028,0.710835038275,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.86732176029e-07,5.95054824308e-08,-7.13858372416e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243575625635,-0.000182835625906,9.81001620906,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120597750000,12193,120597750000,RH_EXTIMU,2.31121165075e-06,1.52988761816e-05,-0.703358825457,0.710834975513,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.14415603356e-07,-8.00062280198e-09,-7.13850160669e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246245385825,-0.000173827468353,9.80999235851,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120600250000,12194,120600250000,RH_EXTIMU,2.3113320621e-06,1.52988141537e-05,-0.703358888885,0.710834912752,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.04268763914e-07,3.31314493654e-08,-7.13844411184e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024436470343,-0.000181686087,9.80999901148,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120604000000,12195,120602750000,RH_EXTIMU,2.31143630661e-06,1.5298762187e-05,-0.703358952313,0.710834849991,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.94137996212e-08,2.97561406839e-08,-7.13836397708e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244928332415,-0.000180283876659,9.81001255905,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120605250000,12196,120605250000,RH_EXTIMU,2.3112439585e-06,1.52987743169e-05,-0.703359015739,0.710834787232,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.15315181372e-07,-1.00683113236e-07,-7.13829761403e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246951146197,-0.000176866433561,9.80998047639,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120607750000,12197,120607750000,RH_EXTIMU,2.31137230143e-06,1.52986516004e-05,-0.703359079166,0.710834724472,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.42927821629e-07,3.08282793694e-09,-7.13823739842e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244895157166,-0.000181486025891,9.80999345541,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120610250000,12198,120610250000,RH_EXTIMU,2.31152805264e-06,1.52985858082e-05,-0.703359142591,0.710834661714,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.26483463222e-07,5.08761120197e-08,-7.13816764085e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244251539434,-0.000181118376463,9.81000448842,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120612750000,12199,120612750000,RH_EXTIMU,2.31154070355e-06,1.52985850655e-05,-0.703359206016,0.710834598956,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.50433699753e-09,7.34699621022e-09,-7.13808972853e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245599961782,-0.00017873256887,9.81000524751,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120615250000,12200,120615250000,RH_EXTIMU,2.31148546706e-06,1.52985649389e-05,-0.703359269441,0.710834536198,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.9193920944e-08,-4.18754291619e-08,-7.13801409667e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245893314523,-0.000178593057366,9.81000260017,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120617750000,12201,120617750000,RH_EXTIMU,2.31139637348e-06,1.52985576785e-05,-0.703359332864,0.710834473442,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.56869887841e-08,-5.36098414498e-08,-7.13793707443e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246076051418,-0.000178036899306,9.81000350655,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120620250000,12202,120620250000,RH_EXTIMU,2.31148871406e-06,1.5298552273e-05,-0.703359396288,0.710834410686,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.64449327291e-08,4.95357773006e-08,-7.13787172655e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243829093169,-0.000180464759116,9.81000344793,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120622750000,12203,120622750000,RH_EXTIMU,2.32095044593e-06,1.52957838826e-05,-0.703359459709,0.710834347931,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.9392106594e-06,3.75035543669e-06,-7.13762595473e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000162353756128,-0.000331859688882,9.81114604133,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120625250000,12204,120625250000,RH_EXTIMU,2.30488439116e-06,1.5308691198e-05,-0.703359523119,0.710834285187,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.63981362868e-05,-1.69954876388e-06,-7.13651096121e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000326532260771,0.00017792721312,9.80986363309,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120627750000,12205,120627750000,RH_EXTIMU,2.30629793169e-06,1.53047289352e-05,-0.703359586539,0.710834222435,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.03424304305e-06,-1.45717641833e-06,-7.13744697764e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000239659131606,-0.000298492174784,9.80933652849,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120630250000,12206,120630250000,RH_EXTIMU,2.31195154243e-06,1.52984749426e-05,-0.70335964996,0.71083415968,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.734960827e-06,-3.74573189891e-07,-7.13770415622e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000251871266757,-0.000284581657094,9.80961943545,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120632750000,12207,120632750000,RH_EXTIMU,2.31359682675e-06,1.52963058664e-05,-0.703359713382,0.710834096926,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.15702425159e-06,-3.07050752186e-07,-7.13768610603e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000248180730861,-0.000203667976743,9.80989213605,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120635250000,12208,120635250000,RH_EXTIMU,2.31240527396e-06,1.52971875832e-05,-0.703359776802,0.710834034172,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.17283612651e-06,-1.68418140035e-07,-7.13755825282e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247209001545,-0.000150230034873,9.8099852132,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120637750000,12209,120637750000,RH_EXTIMU,2.31191337793e-06,1.52980219366e-05,-0.703359840221,0.71083397142,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.48313401934e-07,1.98336103587e-07,-7.1374514138e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000241714571541,-0.000167295708036,9.8100379632,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120640250000,12210,120640250000,RH_EXTIMU,2.31175442437e-06,1.52982319738e-05,-0.70335990364,0.710833908668,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.07684889813e-07,3.06507428999e-08,-7.13736269952e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245496661599,-0.000176576433232,9.81001706316,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120642750000,12211,120642750000,RH_EXTIMU,2.31186111485e-06,1.52982334154e-05,-0.703359967057,0.710833845917,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.07524176794e-08,6.15039076052e-08,-7.13728911106e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024426636096,-0.000180403235349,9.81001464171,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120645250000,12212,120645250000,RH_EXTIMU,2.31170943117e-06,1.52982495479e-05,-0.703360030475,0.710833783167,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.44429107122e-08,-7.55258474233e-08,-7.13721379383e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246733811628,-0.000177237227734,9.809994854,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120647750000,12213,120647750000,RH_EXTIMU,2.31166149951e-06,1.52981978371e-05,-0.703360093891,0.710833720417,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.73205223253e-09,-5.57260935951e-08,-7.13714549212e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245958753846,-0.000179001944011,9.80999486375,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120650250000,12214,120650250000,RH_EXTIMU,2.31175594745e-06,1.52981490187e-05,-0.703360157307,0.710833657668,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.20711350139e-08,2.60339889726e-08,-7.13707597245e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024449145876,-0.000180470170609,9.81000500034,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120652750000,12215,120652750000,RH_EXTIMU,2.31189436015e-06,1.52981620288e-05,-0.703360220722,0.710833594919,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.22822586606e-08,8.59322525107e-08,-7.13699733468e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243729311272,-0.00018035369252,9.81001794057,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120655250000,12216,120655250000,RH_EXTIMU,2.31187977264e-06,1.52982715596e-05,-0.703360284137,0.710833532172,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.90349685995e-08,5.47289841511e-08,-7.13691305002e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244804477452,-0.000177409028362,9.81001608204,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120657750000,12217,120657750000,RH_EXTIMU,2.31170339943e-06,1.52983952638e-05,-0.703360347551,0.710833469425,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.69012344284e-07,-2.82459989449e-08,-7.13683576116e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246199599377,-0.000175823489461,9.80999744695,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120660250000,12218,120660250000,RH_EXTIMU,2.31165280217e-06,1.52983382802e-05,-0.703360410964,0.710833406678,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.1831608545e-09,-6.0224507717e-08,-7.13678061113e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246093104503,-0.00017921955157,9.80997794194,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120662750000,12219,120662750000,RH_EXTIMU,2.31184332949e-06,1.52981368046e-05,-0.703360474377,0.710833343932,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.22606643223e-07,-6.71431399079e-09,-7.13672432813e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024504314572,-0.000183121503154,9.80999192041,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120665250000,12220,120665250000,RH_EXTIMU,2.31185503557e-06,1.5298090431e-05,-0.703360537789,0.710833281186,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.364287703e-08,-1.91336342277e-08,-7.13664514009e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245462461804,-0.000178881011258,9.81000182495,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120667750000,12221,120667750000,RH_EXTIMU,2.31190795493e-06,1.52980893347e-05,-0.7033606012,0.710833218442,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.16024663277e-08,2.98042950193e-08,-7.13656414984e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244863488142,-0.000179376214388,9.81001848696,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120670250000,12222,120670250000,RH_EXTIMU,2.31192524744e-06,1.52981632342e-05,-0.703360664611,0.710833155698,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.08566618273e-08,5.24051109879e-08,-7.13648719013e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244065542254,-0.000178779261572,9.81001168909,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120672750000,12223,120672750000,RH_EXTIMU,2.31199297351e-06,1.52982015332e-05,-0.703360728021,0.710833092954,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.78552504989e-08,6.05386323854e-08,-7.13641572278e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244713125786,-0.000179305242656,9.8100047955,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120675250000,12224,120675250000,RH_EXTIMU,2.31196330291e-06,1.5298195493e-05,-0.70336079143,0.710833030211,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.25818492244e-08,-1.94795464635e-08,-7.1363413097e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245743358166,-0.000178560606031,9.81000135473,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120677750000,12225,120677750000,RH_EXTIMU,2.31193062696e-06,1.52982071719e-05,-0.703360854839,0.710832967469,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.42612149012e-08,-1.10944003811e-08,-7.13626736244e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024542065216,-0.000178507363328,9.81000349649,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120680250000,12226,120680250000,RH_EXTIMU,2.31190904246e-06,1.52981971507e-05,-0.703360918247,0.710832904728,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.74351241314e-09,-1.71934778805e-08,-7.13619249095e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245415381932,-0.000178900094788,9.81000266032,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120682750000,12227,120682750000,RH_EXTIMU,2.3119286785e-06,1.5298176879e-05,-0.703360981654,0.710832841987,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.34650834076e-08,1.71721479919e-10,-7.13612406999e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245279600773,-0.000179308071414,9.80999835111,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120685250000,12228,120685250000,RH_EXTIMU,2.3119117122e-06,1.5298151228e-05,-0.703361045061,0.710832779247,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.67743441121e-09,-2.34830558e-08,-7.13605242412e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245727877038,-0.000178870340818,9.8099988179,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120687750000,12229,120687750000,RH_EXTIMU,2.31191915335e-06,1.52980926479e-05,-0.703361108467,0.710832716507,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.80859385325e-08,-2.84748994225e-08,-7.13597754757e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245586049966,-0.000179775138497,9.81000407854,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120690250000,12230,120690250000,RH_EXTIMU,2.31186679111e-06,1.52980644527e-05,-0.703361171872,0.710832653768,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.30194850472e-08,-4.48467487781e-08,-7.13590686951e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246007756047,-0.00017836403568,9.80999354498,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120692750000,12231,120692750000,RH_EXTIMU,2.31203231807e-06,1.52979824726e-05,-0.703361235277,0.71083259103,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.4115084805e-07,4.71714704459e-08,-7.13584404615e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244030005304,-0.000181837966735,9.81000420212,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120695250000,12232,120695250000,RH_EXTIMU,2.31201184531e-06,1.52980143992e-05,-0.703361298681,0.710832528292,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.87148786995e-08,7.28628602949e-09,-7.13575876399e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245554874998,-0.000177941155998,9.81001072209,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120697750000,12233,120697750000,RH_EXTIMU,2.31195775718e-06,1.52980390903e-05,-0.703361362085,0.710832465555,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.37595010237e-08,-1.57432820672e-08,-7.13567986367e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245420131237,-0.000178255877214,9.81001119462,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120700250000,12234,120700250000,RH_EXTIMU,2.31193590908e-06,1.5298153676e-05,-0.703361425488,0.710832402818,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.60084353455e-08,5.3517864875e-08,-7.13562160694e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244142603755,-0.000177730418335,9.80998468596,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120702750000,12235,120702750000,RH_EXTIMU,2.31205377956e-06,1.52980579223e-05,-0.70336148889,0.710832340082,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.21800476028e-07,1.25231041002e-08,-7.13555638765e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245435812926,-0.000181018023286,9.8099947636,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120705250000,12236,120705250000,RH_EXTIMU,2.31216249601e-06,1.52979398281e-05,-0.703361552292,0.710832277347,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.29165652463e-07,-5.33207446669e-09,-7.13548244048e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024524127951,-0.000181293371835,9.81000722235,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120707750000,12237,120707750000,RH_EXTIMU,2.31203596945e-06,1.52979423515e-05,-0.703361615693,0.710832214613,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.2479243181e-08,-6.91096852393e-08,-7.13539883826e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246720852622,-0.000176941681275,9.8100056247,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120710250000,12238,120710250000,RH_EXTIMU,2.31182640147e-06,1.52980235433e-05,-0.703361679093,0.710832151879,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.6396793928e-07,-7.11001720153e-08,-7.13532520183e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246224649002,-0.00017589972687,9.80999303239,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120712750000,12239,120712750000,RH_EXTIMU,2.31208121305e-06,1.52978983667e-05,-0.703361742492,0.710832089145,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.16230052736e-07,7.2846656422e-08,-7.13526710142e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243250840502,-0.000183850194853,9.81000541139,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120715250000,12240,120715250000,RH_EXTIMU,2.312108101e-06,1.52979279705e-05,-0.703361805891,0.710832026412,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.75544328021e-10,3.26146884068e-08,-7.13518773005e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245344947806,-0.000177978674966,9.81000229074,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120717750000,12241,120717750000,RH_EXTIMU,2.31218289844e-06,1.52979232117e-05,-0.70336186929,0.71083196368,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.61044068504e-08,4.003201538e-08,-7.13511946284e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244532507639,-0.000180112341848,9.81000532805,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120720250000,12242,120720250000,RH_EXTIMU,2.31214829049e-06,1.52979275376e-05,-0.703361932688,0.710831900949,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.12226035229e-08,-1.63630427627e-08,-7.13503959327e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245767771462,-0.000178276478535,9.81000517535,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120724000000,12243,120722750000,RH_EXTIMU,2.31203650298e-06,1.52979242053e-05,-0.703361996085,0.710831838218,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.08027317784e-08,-6.41461826313e-08,-7.13498117172e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246159384291,-0.000177959884819,9.80997756822,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120725250000,12244,120725250000,RH_EXTIMU,2.3122486006e-06,1.52978050347e-05,-0.703362059481,0.710831775488,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.88560552689e-07,5.22273698572e-08,-7.13491670605e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244429396208,-0.0001821469877,9.81000289804,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120727750000,12245,120727750000,RH_EXTIMU,2.31216596806e-06,1.52977707229e-05,-0.703362122877,0.710831712758,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.67914848676e-08,-6.53579763476e-08,-7.13483686643e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246436498355,-0.000177966079875,9.81000041829,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120730250000,12246,120730250000,RH_EXTIMU,2.31213603587e-06,1.52977876318e-05,-0.703362186272,0.710831650029,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.56440173045e-08,-6.57657738012e-09,-7.13476546021e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245084486902,-0.000178533445198,9.81000156428,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120732750000,12247,120732750000,RH_EXTIMU,2.31214488773e-06,1.52977835931e-05,-0.703362249667,0.7108315873,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.19818876772e-09,3.33457398785e-09,-7.13469390074e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245209071656,-0.000179077375225,9.81000058202,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120735250000,12248,120735250000,RH_EXTIMU,2.31216104971e-06,1.52977660898e-05,-0.703362313061,0.710831524573,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.99315051153e-08,-2.08887262424e-10,-7.13462294267e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245263145223,-0.000179240834823,9.80999997275,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120737750000,12249,120737750000,RH_EXTIMU,2.31217951257e-06,1.5297745785e-05,-0.703362376454,0.710831461845,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.28163559125e-08,-5.07375436386e-10,-7.13455208603e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245258269533,-0.00017926882585,9.80999985747,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120740250000,12250,120740250000,RH_EXTIMU,2.31219765999e-06,1.52977258037e-05,-0.703362439847,0.710831399119,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.24549238894e-08,-5.00900199302e-10,-7.13448113205e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245258563527,-0.000179255353595,9.80999990562,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120742750000,12251,120742750000,RH_EXTIMU,2.31228599106e-06,1.52976700664e-05,-0.703362503239,0.710831336393,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.24854584127e-08,1.86575260338e-08,-7.13440744407e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244829366808,-0.000180586306803,9.81000928278,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120745250000,12252,120745250000,RH_EXTIMU,2.31229179193e-06,1.52977418904e-05,-0.70336256663,0.710831273668,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.62240580506e-08,4.47582561121e-08,-7.13432506302e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244636902203,-0.000177913186715,9.81001411089,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120747750000,12253,120747750000,RH_EXTIMU,2.31218540596e-06,1.52978298869e-05,-0.703362630021,0.710831210943,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.09120912065e-07,-9.1714302206e-09,-7.13425064603e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245680774198,-0.000176998120953,9.8099992721,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120750250000,12254,120750250000,RH_EXTIMU,2.31224191886e-06,1.52977726009e-05,-0.703362693411,0.710831148219,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.52629706521e-08,-1.26911271981e-10,-7.13418698256e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245015069502,-0.000180514539801,9.80999518162,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120752750000,12255,120752750000,RH_EXTIMU,2.31235568509e-06,1.52976765212e-05,-0.7033627568,0.710831085496,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.19649763465e-07,1.00283501448e-08,-7.13411145616e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245236149962,-0.000180821612754,9.81000936861,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120755250000,12256,120755250000,RH_EXTIMU,2.31232773985e-06,1.52976847878e-05,-0.703362820189,0.710831022773,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.96512164514e-08,-1.03732497619e-08,-7.13403362195e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245330130417,-0.000178528682251,9.81000769558,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120757750000,12257,120757750000,RH_EXTIMU,2.31213791945e-06,1.52977684884e-05,-0.703362883577,0.710830960051,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.54149945588e-07,-5.8562133088e-08,-7.13395977197e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024658263337,-0.00017566283757,9.80998953422,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120760250000,12258,120760250000,RH_EXTIMU,2.31228680904e-06,1.52976726635e-05,-0.703362946964,0.71083089733,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.39479763799e-07,2.99368512565e-08,-7.13390665723e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243975381355,-0.000182179303059,9.80999140649,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120762750000,12259,120762750000,RH_EXTIMU,2.31233771321e-06,1.52975996215e-05,-0.703363010351,0.710830834609,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.0939204175e-08,-1.22428043084e-08,-7.13383122401e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245924196084,-0.000179602656274,9.81000048281,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120765250000,12260,120765250000,RH_EXTIMU,2.3122743162e-06,1.52975886764e-05,-0.703363073737,0.710830771888,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.90011690462e-08,-4.12466778572e-08,-7.13375876925e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245918326893,-0.000178189678264,9.80999562558,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120767750000,12261,120767750000,RH_EXTIMU,2.31248166805e-06,1.52974698712e-05,-0.703363137123,0.710830709169,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.85655910682e-07,4.97649466121e-08,-7.13369339196e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0002438779032,-0.000182810083855,9.81000986176,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120770250000,12262,120770250000,RH_EXTIMU,2.31236112209e-06,1.52975634834e-05,-0.703363200508,0.71083064645,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.2033315602e-07,-1.394584942e-08,-7.13360627418e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246181271482,-0.000175786946752,9.81000599887,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120772750000,12263,120772750000,RH_EXTIMU,2.31237771223e-06,1.52975980533e-05,-0.703363263892,0.710830583731,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.12622806327e-09,2.96441019818e-08,-7.13353800988e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244215127122,-0.000179391996432,9.81000436607,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120775250000,12264,120775250000,RH_EXTIMU,2.31240305963e-06,1.52976069566e-05,-0.703363327276,0.710830521014,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0296108385e-08,1.99759931366e-08,-7.13346640551e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245434731485,-0.000178908751073,9.80999984946,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120777750000,12265,120777750000,RH_EXTIMU,2.31238768206e-06,1.52975548119e-05,-0.703363390658,0.710830458297,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.14883674093e-08,-3.76553686726e-08,-7.1333925936e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245803453103,-0.000179324484964,9.81000132066,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120780250000,12266,120780250000,RH_EXTIMU,2.31238780684e-06,1.52975266672e-05,-0.703363454041,0.71083039558,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.67993812824e-08,-1.52843694962e-08,-7.13332130512e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245378825695,-0.000179161650126,9.81000035768,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120782750000,12267,120782750000,RH_EXTIMU,2.3124022989e-06,1.52975058208e-05,-0.703363517422,0.710830332864,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.08628821691e-08,-3.04978800537e-09,-7.13325038962e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245264001462,-0.000179238003584,9.81000007727,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120785250000,12268,120785250000,RH_EXTIMU,2.31252827924e-06,1.52974599216e-05,-0.703363580803,0.710830270149,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.83592817111e-08,4.54369724934e-08,-7.13318383521e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244335584894,-0.000180896587556,9.81000304084,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120787750000,12269,120787750000,RH_EXTIMU,2.31245013741e-06,1.52975146986e-05,-0.703363644184,0.710830207434,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.4367340853e-08,-1.21696952268e-08,-7.13310855574e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245807230962,-0.000176913237952,9.80999336217,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120790250000,12270,120790250000,RH_EXTIMU,2.31263841138e-06,1.5297434607e-05,-0.703363707564,0.71083014472,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.53023133373e-07,6.10450707353e-08,-7.13305057575e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243878366021,-0.000182277847345,9.81000121669,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120792750000,12271,120792750000,RH_EXTIMU,2.31258185015e-06,1.52974457207e-05,-0.703363770943,0.710830082007,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.75262203502e-08,-2.48563420905e-08,-7.13297048182e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246080830441,-0.000177626966979,9.80999964734,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120795250000,12272,120795250000,RH_EXTIMU,2.31264979268e-06,1.52974106205e-05,-0.703363834321,0.710830019294,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.92786655402e-08,1.89206685771e-08,-7.1328989152e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244669664084,-0.000180265743211,9.81000789137,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120797750000,12273,120797750000,RH_EXTIMU,2.31254910531e-06,1.52974747231e-05,-0.703363897699,0.710829956582,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.24355865401e-08,-1.9552850113e-08,-7.1328233584e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245943915368,-0.000176671733405,9.80999579935,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120800250000,12274,120800250000,RH_EXTIMU,2.31265055955e-06,1.52974300855e-05,-0.703363961076,0.71082989387,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.37021543459e-08,3.23538500974e-08,-7.132760626e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244334579643,-0.000180970152459,9.81000064604,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120802750000,12275,120802750000,RH_EXTIMU,2.31254414339e-06,1.52973877307e-05,-0.703364024453,0.710829831159,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.57907034028e-08,-8.33149225167e-08,-7.13268584683e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246987674165,-0.000177866599327,9.8099910106,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120805250000,12276,120805250000,RH_EXTIMU,2.31278008062e-06,1.52973041635e-05,-0.703364087829,0.710829768449,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.82083090064e-07,8.58883796686e-08,-7.1326077226e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243562976017,-0.000182196036339,9.81002562315,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120807750000,12277,120807750000,RH_EXTIMU,2.31261289864e-06,1.52974150201e-05,-0.703364151204,0.71082970574,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.56556804477e-07,-3.03815052573e-08,-7.13252794287e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245913048122,-0.000176008158404,9.81000111728,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120810250000,12278,120810250000,RH_EXTIMU,2.3125188314e-06,1.52974036586e-05,-0.703364214578,0.710829643031,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.62079972748e-08,-5.87415402837e-08,-7.13246506416e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246180000505,-0.0001783114597,9.80998532354,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120815250000,12279,120812750000,RH_EXTIMU,2.31261079281e-06,1.52972890294e-05,-0.703364277953,0.710829580322,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.17687567579e-07,-1.27894034867e-08,-7.13240090901e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245339413371,-0.000180908376718,9.80999433813,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120815250000,12280,120815250000,RH_EXTIMU,2.31273902921e-06,1.5297185962e-05,-0.703364341326,0.710829517614,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.31810070001e-07,1.41970169202e-08,-7.13232991585e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245007144223,-0.000181102646414,9.81000339225,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120815250000,12281,120817750000,RH_EXTIMU,2.31289017385e-06,1.52972133342e-05,-0.703364404699,0.710829454907,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.14398884406e-08,1.0126353579e-07,-7.13225723632e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243001849808,-0.000180386510168,9.81001634135,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120820250000,12282,120820250000,RH_EXTIMU,2.31259745746e-06,1.52973454515e-05,-0.703364468071,0.710829392201,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.39906822736e-07,-8.89286554877e-08,-7.13217331333e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247644783416,-0.00017400060808,9.8099914476,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120822750000,12283,120822750000,RH_EXTIMU,2.31256886575e-06,1.5297298287e-05,-0.703364531442,0.710829329495,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.11715046772e-08,-4.22588544071e-08,-7.13211093021e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245721392847,-0.000179299798963,9.80998999487,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120825250000,12284,120825250000,RH_EXTIMU,2.31275223527e-06,1.52971342728e-05,-0.703364594813,0.710829266789,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.97456500755e-07,1.05617491359e-08,-7.13205512161e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244863413693,-0.0001826159917,9.80998959671,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120827750000,12285,120827750000,RH_EXTIMU,2.31292530505e-06,1.52970531361e-05,-0.703364658183,0.710829204085,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.44964917611e-07,5.18955683847e-08,-7.13197755658e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244454408891,-0.000181004354201,9.81001409592,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120830250000,12286,120830250000,RH_EXTIMU,2.31284596742e-06,1.529715459e-05,-0.703364721553,0.710829141381,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.01312157091e-07,1.37005772662e-08,-7.13189556294e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245029379468,-0.000176889212081,9.81001088855,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120832750000,12287,120832750000,RH_EXTIMU,2.31263617936e-06,1.5297334731e-05,-0.703364784922,0.710829078677,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.19771101917e-07,-1.49563577526e-08,-7.13182236686e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245853648925,-0.000174697418655,9.80998806814,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120835250000,12288,120835250000,RH_EXTIMU,2.31285339504e-06,1.52971575077e-05,-0.70336484829,0.710829015974,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.24136174643e-07,2.20952230424e-08,-7.13177589865e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244540698083,-0.000183910356825,9.80998655037,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120837750000,12289,120837750000,RH_EXTIMU,2.31301227522e-06,1.52969675308e-05,-0.703364911658,0.710828953272,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.9813926165e-07,-1.79822004543e-08,-7.13169928009e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245642512935,-0.000181970738809,9.81000774832,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120840250000,12290,120840250000,RH_EXTIMU,2.31279590646e-06,1.52970545315e-05,-0.703364975025,0.71082889057,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.7110406814e-07,-7.16247783874e-08,-7.13161489005e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024666618026,-0.00017489991627,9.80999864184,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120842750000,12291,120842750000,RH_EXTIMU,2.31280513189e-06,1.52970305913e-05,-0.703365038391,0.710828827869,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.96086394041e-08,-7.77281861899e-09,-7.13155645541e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245019183636,-0.000179828556364,9.80999176029,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120845250000,12292,120845250000,RH_EXTIMU,2.312856632e-06,1.52969410788e-05,-0.703365101757,0.710828765169,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.05456288517e-08,-2.12736739396e-08,-7.13148695788e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245593056073,-0.000180200154906,9.80999620183,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120847750000,12293,120847750000,RH_EXTIMU,2.31291799031e-06,1.52969820003e-05,-0.703365165122,0.710828702469,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.27574268626e-08,5.84464394219e-08,-7.13141028449e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244116191353,-0.000178802284912,9.81001229121,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120850250000,12294,120850250000,RH_EXTIMU,2.31279964057e-06,1.52969501587e-05,-0.703365228487,0.71082863977,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.84926239916e-08,-8.40515864673e-08,-7.13133627423e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246997775236,-0.000178230112742,9.8099921655,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120852750000,12295,120852750000,RH_EXTIMU,2.31314372346e-06,1.52969117696e-05,-0.70336529185,0.710828577071,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.18159822536e-07,1.72432361624e-07,-7.13126265392e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000241794852635,-0.000182966250425,9.81003080401,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120855250000,12296,120855250000,RH_EXTIMU,2.31285459181e-06,1.5297105744e-05,-0.703365355213,0.710828514373,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.72674871272e-07,-5.17361084702e-08,-7.13117381371e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247315104674,-0.000173256732804,9.80999857445,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120857750000,12297,120857750000,RH_EXTIMU,2.3129799266e-06,1.52970506381e-05,-0.703365418576,0.710828451676,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.03172316759e-07,3.98382680658e-08,-7.13111571929e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243809597217,-0.000181786222362,9.80999999262,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120860250000,12298,120860250000,RH_EXTIMU,2.313066313e-06,1.52969742126e-05,-0.703365481938,0.710828388979,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.30201892747e-08,5.79864678455e-09,-7.1310412532e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245414761575,-0.000180328401347,9.81000382488,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120862750000,12299,120862750000,RH_EXTIMU,2.31293360532e-06,1.52969956105e-05,-0.703365545299,0.710828326283,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.66149440893e-08,-6.18554105555e-08,-7.13097632233e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246165240235,-0.000177164736893,9.80998344006,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120865250000,12300,120865250000,RH_EXTIMU,2.31312651097e-06,1.52968509923e-05,-0.70336560866,0.710828263588,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.91965180692e-07,2.69575951033e-08,-7.13090908509e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244608098713,-0.000182642489373,9.81000690525,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120867750000,12301,120867750000,RH_EXTIMU,2.31295671578e-06,1.52968845189e-05,-0.70336567202,0.710828200893,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.14529945407e-07,-7.58271910713e-08,-7.13082542825e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024696834589,-0.000175830312701,9.80999703604,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120870250000,12302,120870250000,RH_EXTIMU,2.31306254232e-06,1.52968465098e-05,-0.703365735379,0.710828138199,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.2458381952e-08,3.85834534343e-08,-7.1307601218e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244115122761,-0.000180926005938,9.81000685401,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120872750000,12303,120872750000,RH_EXTIMU,2.31301703932e-06,1.52968659352e-05,-0.703365798738,0.710828075506,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.59150343371e-08,-1.39077205036e-08,-7.13068902499e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245595595799,-0.00017809661247,9.80999409151,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120875250000,12304,120875250000,RH_EXTIMU,2.31310245093e-06,1.52968499863e-05,-0.703365862096,0.710828012813,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.84360750247e-08,3.96408877575e-08,-7.13062372127e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244379481304,-0.000179960271299,9.80999740147,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120877750000,12305,120877750000,RH_EXTIMU,2.3131688459e-06,1.52968858919e-05,-0.703365925453,0.71082795012,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.84438628719e-08,5.84280776736e-08,-7.13056481083e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244414600505,-0.00017906493586,9.8099870616,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120880250000,12306,120880250000,RH_EXTIMU,2.31337618363e-06,1.52967490919e-05,-0.70336598881,0.710827887428,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.95772873177e-07,3.95243765957e-08,-7.13048875737e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244797661177,-0.000182646790566,9.81001797926,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120882750000,12307,120882750000,RH_EXTIMU,2.31303749196e-06,1.52968764196e-05,-0.703366052166,0.710827824737,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.63356271123e-07,-1.17522940112e-07,-7.13039403377e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247859986097,-0.000172928624013,9.80999969623,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120885250000,12308,120885250000,RH_EXTIMU,2.31303256543e-06,1.52968311601e-05,-0.703366115522,0.710827762047,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.3557013374e-08,-2.78595820452e-08,-7.13033881635e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244894230676,-0.000180305306312,9.80999155669,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120887750000,12309,120887750000,RH_EXTIMU,2.31327644853e-06,1.52966981227e-05,-0.703366178877,0.710827699357,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.14437607589e-07,6.22278838084e-08,-7.13027212198e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243881448133,-0.000183001912212,9.81000576905,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120890250000,12310,120890250000,RH_EXTIMU,2.31333074766e-06,1.52967039226e-05,-0.703366242231,0.710827636668,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.85056050979e-08,3.4501819811e-08,-7.13019529518e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245163067536,-0.000178751680956,9.81000502213,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120892750000,12311,120892750000,RH_EXTIMU,2.31310739524e-06,1.52967353425e-05,-0.703366305584,0.710827573979,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.43800549621e-07,-1.07161606614e-07,-7.13012273825e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247165759245,-0.000176180182668,9.80998813923,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120895250000,12312,120895250000,RH_EXTIMU,2.3132195635e-06,1.52966928391e-05,-0.703366368937,0.710827511291,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.85935237288e-08,3.95960847481e-08,-7.13004848506e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244286523354,-0.000180413663262,9.81001351139,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120897750000,12313,120897750000,RH_EXTIMU,2.31318537077e-06,1.52967570647e-05,-0.70336643229,0.710827448604,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.46921800663e-08,1.79325733971e-08,-7.12997471229e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245072018693,-0.000178021000016,9.81000056054,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120897750000,12314,120900250000,RH_EXTIMU,2.31329972716e-06,1.52966347828e-05,-0.703366495641,0.710827385917,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.34728607569e-07,-4.53964894996e-09,-7.12990565413e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245333543156,-0.000181701395971,9.81000564075,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120902750000,12315,120902750000,RH_EXTIMU,2.31316487274e-06,1.52967038345e-05,-0.703366558992,0.710827323231,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.14650263501e-07,-3.59646926248e-08,-7.12983050385e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245846306142,-0.000175974332268,9.809990138,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120905250000,12316,120905250000,RH_EXTIMU,2.31337201886e-06,1.52966502077e-05,-0.703366622343,0.710827260546,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.48862799256e-07,8.67140551046e-08,-7.12977947424e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243628739299,-0.000182229387319,9.80999596586,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120907750000,12317,120907750000,RH_EXTIMU,2.31332392341e-06,1.5296630647e-05,-0.703366685693,0.710827197861,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.54521146525e-08,-3.75365611769e-08,-7.12969288848e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246279111057,-0.000177982359159,9.81000620314,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120910250000,12318,120910250000,RH_EXTIMU,2.31329707209e-06,1.52966683931e-05,-0.703366749042,0.710827135177,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.56176084185e-08,7.00558673872e-09,-7.12961387666e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244945476495,-0.000178285227382,9.81001279036,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120912750000,12319,120912750000,RH_EXTIMU,2.31321062913e-06,1.52966926289e-05,-0.70336681239,0.710827072493,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.19029021156e-08,-3.42090745109e-08,-7.12954428848e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245836405569,-0.000177990272473,9.8099934474,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120915250000,12320,120915250000,RH_EXTIMU,2.31327665525e-06,1.52966218567e-05,-0.703366875738,0.71082700981,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.82608131928e-08,-2.44315056694e-09,-7.12947887316e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245209017871,-0.000180306824276,9.80999644632,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120917750000,12321,120917750000,RH_EXTIMU,2.31331555675e-06,1.52965747312e-05,-0.703366939085,0.710826947128,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.95302232462e-08,-4.25902777968e-09,-7.12940866215e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245318547528,-0.000179588114414,9.80999863136,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120920250000,12322,120920250000,RH_EXTIMU,2.31333252284e-06,1.52965513485e-05,-0.703367002432,0.710826884446,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.3696443082e-08,-3.10031601248e-09,-7.12933734183e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245288787182,-0.000179187658445,9.81000005323,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120922750000,12323,120922750000,RH_EXTIMU,2.31334296444e-06,1.52965361829e-05,-0.703367065778,0.710826821765,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.53624900131e-08,-2.0988394752e-09,-7.1292657912e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245278587449,-0.000179090327661,9.81000044828,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120925250000,12324,120925250000,RH_EXTIMU,2.31335313672e-06,1.52965211504e-05,-0.703367129123,0.710826759084,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.51344369513e-08,-2.17471620912e-09,-7.12919436854e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245282262661,-0.000179104246554,9.81000042407,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120927750000,12325,120927750000,RH_EXTIMU,2.31336444686e-06,1.52965046414e-05,-0.703367192467,0.710826696404,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.66122910685e-08,-2.37406405233e-09,-7.12912303203e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245284649804,-0.000179131960674,9.81000032996,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120930250000,12326,120930250000,RH_EXTIMU,2.31347735273e-06,1.5296496744e-05,-0.703367255812,0.710826633725,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.95402027309e-08,5.96902411793e-08,-7.12906131273e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244124132925,-0.000180205704806,9.80999486751,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120932750000,12327,120932750000,RH_EXTIMU,2.3135748071e-06,1.52964845464e-05,-0.703367319155,0.710826571046,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.31732054119e-08,4.85504432417e-08,-7.12899913966e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244600562746,-0.000179844221728,9.80999106949,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120935250000,12328,120935250000,RH_EXTIMU,2.31357917602e-06,1.52964038851e-05,-0.703367382498,0.710826508368,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.87631678127e-08,-4.2760804732e-08,-7.12891884048e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246315116666,-0.000179440115174,9.81000646545,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120937750000,12329,120937750000,RH_EXTIMU,2.31349874354e-06,1.52964054636e-05,-0.70336744584,0.710826445691,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.57358774309e-08,-4.37115080078e-08,-7.1288419606e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024575662637,-0.000178000326329,9.81000416166,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120940250000,12330,120940250000,RH_EXTIMU,2.31348498509e-06,1.52964034379e-05,-0.703367509181,0.710826383014,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.79296539293e-09,-8.24394319571e-09,-7.1287712798e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245377220786,-0.000178824033653,9.80999860552,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120942750000,12331,120942750000,RH_EXTIMU,2.3135748462e-06,1.52963110481e-05,-0.703367572522,0.710826320338,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.03978846844e-07,-1.32446241068e-09,-7.12870470277e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245054011104,-0.000180968476497,9.81000137134,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120945250000,12332,120945250000,RH_EXTIMU,2.31357657028e-06,1.52963114757e-05,-0.703367635863,0.710826257662,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.63088600957e-09,1.86304021075e-09,-7.12862875854e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245317854281,-0.000178581288946,9.8100024952,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120947750000,12333,120947750000,RH_EXTIMU,2.31366564963e-06,1.52963160258e-05,-0.703367699202,0.710826194987,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.89867406217e-08,5.33616054491e-08,-7.1285569947e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024405067597,-0.000179968882614,9.81000985172,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120950250000,12334,120950250000,RH_EXTIMU,2.31349698774e-06,1.52963528674e-05,-0.703367762541,0.710826132313,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.15750865675e-07,-7.33049981773e-08,-7.12848634832e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246950546112,-0.000176574265483,9.80998416503,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120952750000,12335,120952750000,RH_EXTIMU,2.31357229663e-06,1.52962420683e-05,-0.703367825879,0.710826069639,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.06062259269e-07,-1.99814813562e-08,-7.1284215161e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245373311538,-0.00018077288797,9.8099984788,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120955250000,12336,120955250000,RH_EXTIMU,2.31363924579e-06,1.52962253805e-05,-0.703367889217,0.710826006966,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.83525833726e-08,2.88318934415e-08,-7.12835273221e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244649708743,-0.000179572792084,9.80999757661,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120957750000,12337,120957750000,RH_EXTIMU,2.31361583931e-06,1.52962183613e-05,-0.703367952554,0.710825944293,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.4696157373e-09,-1.65125569537e-08,-7.12828634165e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245613710718,-0.00017854520264,9.80999065909,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120960250000,12338,120960250000,RH_EXTIMU,2.31375979302e-06,1.52961583225e-05,-0.703368015891,0.710825881621,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.16535357307e-07,4.75099224739e-08,-7.12821371015e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024445933641,-0.000180885377578,9.81000936369,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120962750000,12339,120962750000,RH_EXTIMU,2.31373033432e-06,1.52962365992e-05,-0.703368079227,0.71082581895,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.9906806669e-08,2.85862901064e-08,-7.12814555855e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244745088816,-0.000177673854269,9.80999449726,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120965250000,12340,120965250000,RH_EXTIMU,2.31386739586e-06,1.52961933168e-05,-0.703368142562,0.710825756279,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.03187296541e-07,5.31604554886e-08,-7.12806375612e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244666170224,-0.000180721369257,9.81002029498,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120967750000,12341,120967750000,RH_EXTIMU,2.31360078014e-06,1.52962682525e-05,-0.703368205896,0.710825693609,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.92888741902e-07,-1.06760575893e-07,-7.1279811866e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247499037696,-0.000175034538973,9.80999663884,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120970250000,12342,120970250000,RH_EXTIMU,2.31356305988e-06,1.52961798734e-05,-0.70336826923,0.71082563094,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.9171438381e-08,-7.08330331025e-08,-7.12791760312e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245740565488,-0.000180003379755,9.80999421228,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120972750000,12343,120972750000,RH_EXTIMU,2.31361617785e-06,1.52961004024e-05,-0.703368332563,0.710825568271,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.58149455223e-08,-1.46531289092e-08,-7.1278493781e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245334791921,-0.000180067480487,9.80999704142,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120975250000,12344,120975250000,RH_EXTIMU,2.31367361822e-06,1.52960865053e-05,-0.703368395896,0.710825505603,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.13748805347e-08,2.50683013081e-08,-7.12777631729e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244914866992,-0.000179312870805,9.81000361796,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120977750000,12345,120977750000,RH_EXTIMU,2.31375744716e-06,1.52960302259e-05,-0.703368459228,0.710825442935,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.02293103088e-08,1.58158479329e-08,-7.12770521597e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244767853747,-0.000180708182453,9.81000673841,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120980250000,12346,120980250000,RH_EXTIMU,2.31352802706e-06,1.52961191377e-05,-0.703368522559,0.710825380268,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.79601349463e-07,-7.78832606213e-08,-7.12762921792e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247165839321,-0.000174615510909,9.80998486994,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120982750000,12347,120982750000,RH_EXTIMU,2.31377236909e-06,1.52960390322e-05,-0.70336858589,0.710825317602,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.84913517064e-07,9.2586811912e-08,-7.1275741426e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000242952979327,-0.000183017342253,9.81000342933,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120985250000,12348,120985250000,RH_EXTIMU,2.31387705965e-06,1.52960280779e-05,-0.70336864922,0.710825254936,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.65882565287e-08,5.33291526783e-08,-7.12749515553e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244722082724,-0.000179734081114,9.81000920237,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120987750000,12349,120987750000,RH_EXTIMU,2.31372683597e-06,1.52960801569e-05,-0.703368712549,0.710825192271,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.13839891054e-07,-5.42652288491e-08,-7.12742106957e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246562880682,-0.000176496003197,9.80999153767,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120990250000,12350,120990250000,RH_EXTIMU,2.31385458692e-06,1.5295988443e-05,-0.703368775878,0.710825129607,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.25144803312e-07,2.03803284188e-08,-7.12735787014e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244438763035,-0.000181535877483,9.81000179359,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120992750000,12351,120992750000,RH_EXTIMU,2.3138657113e-06,1.52959558024e-05,-0.703368839206,0.710825066943,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.55836241848e-08,-1.16521877365e-08,-7.12728322208e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024555222836,-0.000179085303092,9.81000097375,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120995250000,12352,120995250000,RH_EXTIMU,2.31382274592e-06,1.52959758177e-05,-0.703368902534,0.71082500428,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.48043293207e-08,-1.21448978336e-08,-7.12721834147e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245317659144,-0.000178173590844,9.80998987053,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120997750000,12353,120997750000,RH_EXTIMU,2.31388250866e-06,1.52959393119e-05,-0.703368965861,0.710824941617,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.54172287189e-08,1.35183832337e-08,-7.12714096622e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245135461878,-0.000179670548383,9.81001031065,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120997750000,12354,121000250000,RH_EXTIMU,2.31378095636e-06,1.52959882371e-05,-0.703369029187,0.710824878955,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.43878057012e-08,-2.86716252008e-08,-7.12706440152e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245774919202,-0.000177239833249,9.80999987351,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+120997750000,12355,121002750000,RH_EXTIMU,2.31377198206e-06,1.52958960227e-05,-0.703369092512,0.710824816294,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.76761797482e-08,-5.68388832534e-08,-7.12699676407e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246141960084,-0.000179994513023,9.809995406,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121005250000,12356,121005250000,RH_EXTIMU,2.31387242581e-06,1.52958157294e-05,-0.703369155837,0.710824753633,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.03189870708e-07,1.1509190109e-08,-7.12692934401e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244613790572,-0.000180732119701,9.81000098555,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121011500000,12357,121007750000,RH_EXTIMU,2.3139706997e-06,1.52958502983e-05,-0.703369219162,0.710824690973,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.73235075117e-08,7.56057455397e-08,-7.1268571883e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024417087976,-0.000179221167685,9.81000652025,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121011500000,12358,121010250000,RH_EXTIMU,2.31385516427e-06,1.52959072467e-05,-0.703369282485,0.710824628313,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.68540487689e-08,-3.19775095096e-08,-7.12678238413e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246308876941,-0.000176832930269,9.80999473423,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121012750000,12359,121012750000,RH_EXTIMU,2.31392526424e-06,1.52958342183e-05,-0.703369345808,0.710824565654,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.18466220369e-08,-1.43384521636e-09,-7.12671884781e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244677421761,-0.000180833464563,9.80999689122,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121015250000,12360,121015250000,RH_EXTIMU,2.31403203788e-06,1.52957745546e-05,-0.703369409131,0.710824502996,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.51812127412e-08,2.6802205518e-08,-7.12664837036e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245074649388,-0.000180333070389,9.81000336517,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121017750000,12361,121017750000,RH_EXTIMU,2.31399416448e-06,1.52957390866e-05,-0.703369472453,0.710824440338,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.88547433434e-10,-4.0830912168e-08,-7.126588424e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245866986389,-0.000178798814372,9.80997845538,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121020250000,12362,121020250000,RH_EXTIMU,2.31423890639e-06,1.52955820561e-05,-0.703369535774,0.710824377681,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.28426015048e-07,4.90677881085e-08,-7.1265255924e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244191245927,-0.000182951423737,9.81000471542,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121022750000,12363,121022750000,RH_EXTIMU,2.31410960525e-06,1.52956683674e-05,-0.703369599095,0.710824315024,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.21204528215e-07,-2.30259457101e-08,-7.12643556296e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246012425084,-0.000175881674221,9.81000970576,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121025250000,12364,121025250000,RH_EXTIMU,2.31408755976e-06,1.52957197637e-05,-0.703369662415,0.710824252369,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.05660005211e-08,1.74715110412e-08,-7.12636204173e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244712842107,-0.00017859757062,9.81000714471,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121027750000,12365,121027750000,RH_EXTIMU,2.31412755968e-06,1.52957340984e-05,-0.703369725734,0.710824189713,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.55710496621e-08,3.13088203343e-08,-7.12629396748e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244833380238,-0.000179125766807,9.80999834683,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121030250000,12366,121030250000,RH_EXTIMU,2.31413349863e-06,1.52957334967e-05,-0.703369789053,0.710824127059,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.60661166503e-09,3.64912019207e-09,-7.12622753049e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245459799261,-0.000178773008203,9.80999324456,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121032750000,12367,121032750000,RH_EXTIMU,2.31422663994e-06,1.5295646538e-05,-0.703369852371,0.710824064405,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.02787739432e-07,3.6098248315e-09,-7.12615676988e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244931550887,-0.000180977301705,9.81000530745,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121036500000,12368,121035250000,RH_EXTIMU,2.31404871056e-06,1.52957033392e-05,-0.703369915688,0.710824001751,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.32252178182e-07,-6.71701966967e-08,-7.12607791298e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246847850236,-0.000175626380379,9.80999273831,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121037750000,12369,121037750000,RH_EXTIMU,2.31408278494e-06,1.52956341802e-05,-0.703369979005,0.710823939098,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.91829240985e-08,-1.95049087017e-08,-7.12601951883e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245023452891,-0.000180496061351,9.80999137729,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121040250000,12370,121040250000,RH_EXTIMU,2.31425278656e-06,1.52955146274e-05,-0.703370042321,0.710823876446,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.64835599053e-07,2.83238761978e-08,-7.1259476376e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244615628299,-0.000181883609131,9.81000913623,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121042750000,12371,121042750000,RH_EXTIMU,2.31417723923e-06,1.52955654084e-05,-0.703370105636,0.710823813795,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.06441761322e-08,-1.29837249068e-08,-7.12586136249e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245752129126,-0.000177006710812,9.81001086875,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121045250000,12372,121045250000,RH_EXTIMU,2.31411694204e-06,1.52956192768e-05,-0.703370168951,0.710823751144,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.37093534637e-08,-2.64682425615e-09,-7.12578750484e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245206335012,-0.000177950119846,9.81000448155,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121047750000,12373,121047750000,RH_EXTIMU,2.3141210882e-06,1.52956160313e-05,-0.703370232265,0.710823688494,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.07470845316e-09,1.13686091094e-09,-7.12571677986e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245234436129,-0.000179079254853,9.81000062096,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121051500000,12374,121050250000,RH_EXTIMU,2.31414385276e-06,1.52955885658e-05,-0.703370295579,0.710823625844,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.92907584431e-08,-2.15961005854e-09,-7.12564664918e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245284880056,-0.00017936976809,9.80999944188,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121052750000,12375,121052750000,RH_EXTIMU,2.31416724304e-06,1.52955603776e-05,-0.703370358892,0.710823563195,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.00531512998e-08,-2.21841965419e-09,-7.12557623799e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245275609075,-0.000179328783748,9.80999949562,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121055250000,12376,121055250000,RH_EXTIMU,2.31420097586e-06,1.52955616779e-05,-0.703370422204,0.710823500547,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.93415328076e-08,2.03701004603e-08,-7.12550041781e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024490719287,-0.000179073636675,9.81000806196,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121057750000,12377,121057750000,RH_EXTIMU,2.31424899263e-06,1.52955481309e-05,-0.703370485515,0.710823437899,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.58186699557e-08,1.99646464791e-08,-7.12543705059e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024489497335,-0.000179725870857,9.80999186781,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121060250000,12378,121060250000,RH_EXTIMU,2.31432612308e-06,1.52955264484e-05,-0.703370548826,0.710823375252,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.69522786143e-08,3.1720424082e-08,-7.12537192132e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244747725601,-0.00017963134497,9.80999569729,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121062750000,12379,121062750000,RH_EXTIMU,2.31432708768e-06,1.52954696481e-05,-0.703370612137,0.710823312605,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.34005169236e-08,-3.11078390393e-08,-7.12530549589e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245929104418,-0.000179357511866,9.80998894866,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121065250000,12380,121065250000,RH_EXTIMU,2.31442306617e-06,1.52954176044e-05,-0.703370675447,0.710823249959,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.47544805693e-08,2.50609999464e-08,-7.12523436554e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244813906883,-0.000179928883629,9.81000277296,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121067750000,12381,121067750000,RH_EXTIMU,2.31437604954e-06,1.52954355764e-05,-0.703370738756,0.710823187314,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.59585250095e-08,-1.55868432929e-08,-7.12516751951e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245673909803,-0.000178121596603,9.80999245422,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121070250000,12382,121070250000,RH_EXTIMU,2.31438491757e-06,1.52953853173e-05,-0.703370802064,0.710823124669,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.42141732185e-08,-2.29409413796e-08,-7.12509617466e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245325743546,-0.000179588183389,9.8099993256,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121072750000,12383,121072750000,RH_EXTIMU,2.31440270465e-06,1.52953069768e-05,-0.703370865372,0.710823062025,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.50873256852e-08,-3.38909244752e-08,-7.12501568397e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245979603234,-0.000179677447601,9.81001037748,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121075250000,12384,121075250000,RH_EXTIMU,2.31433929254e-06,1.52953220971e-05,-0.703370928679,0.710822999382,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.36773365565e-08,-2.64342043297e-08,-7.12493458063e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245799015927,-0.000177805376642,9.81001022831,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121077750000,12385,121077750000,RH_EXTIMU,2.31424695843e-06,1.52953335923e-05,-0.703370991986,0.710822936739,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.80842534466e-08,-4.4769967318e-08,-7.12486143917e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245620607321,-0.000178213731917,9.81000101303,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121080250000,12386,121080250000,RH_EXTIMU,2.31437435207e-06,1.52953492593e-05,-0.703371055291,0.710822874097,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.45182838515e-08,8.12424788554e-08,-7.12479808121e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243637843981,-0.000180142223327,9.81000017222,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121082750000,12387,121082750000,RH_EXTIMU,2.3144144562e-06,1.52953686459e-05,-0.703371118597,0.710822811455,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.27873586599e-08,3.42401138301e-08,-7.1247308537e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024501632487,-0.000178843312171,9.80999279143,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121085250000,12388,121085250000,RH_EXTIMU,2.31453728801e-06,1.52952669607e-05,-0.703371181901,0.710822748814,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.27957838209e-07,1.19422608061e-08,-7.12466449407e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245113840415,-0.000181384985653,9.8100010477,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121087750000,12389,121087750000,RH_EXTIMU,2.31448518156e-06,1.52952820941e-05,-0.703371245205,0.710822686173,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.72556635723e-08,-2.0065165663e-08,-7.12459094846e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245547149782,-0.000177711692847,9.80999611245,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121090250000,12390,121090250000,RH_EXTIMU,2.31451931072e-06,1.52952751793e-05,-0.703371308509,0.710822623534,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.41893501177e-08,1.59214681875e-08,-7.12452224981e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244963172806,-0.000179290585915,9.80999955472,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121092750000,12391,121092750000,RH_EXTIMU,2.31453944738e-06,1.529525742e-05,-0.703371371812,0.710822560894,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.23345492982e-08,1.88112568569e-09,-7.12445088084e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245274687237,-0.000179172162845,9.80999996344,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121095250000,12392,121095250000,RH_EXTIMU,2.31462255198e-06,1.52952148826e-05,-0.703371435114,0.710822498256,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.20842993381e-08,2.3222761116e-08,-7.12437295647e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244923424383,-0.000180107949815,9.81001285541,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121097750000,12393,121097750000,RH_EXTIMU,2.31447260804e-06,1.52952834768e-05,-0.703371498415,0.710822435618,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.22974034843e-07,-4.47171444189e-08,-7.12430796164e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245911540452,-0.00017661972156,9.80998350141,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121100250000,12394,121100250000,RH_EXTIMU,2.31460429775e-06,1.52951782868e-05,-0.703371561716,0.710822372981,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.34967119492e-07,1.49334868064e-08,-7.1242479912e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244952528045,-0.000181316223412,9.80999242216,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121102750000,12395,121102750000,RH_EXTIMU,2.31466424523e-06,1.5295096933e-05,-0.703371625016,0.710822310344,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.07576870456e-08,-1.18809721112e-08,-7.12416276633e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245628312549,-0.000179868908415,9.81001741138,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121106500000,12396,121105250000,RH_EXTIMU,2.31453489432e-06,1.52951668847e-05,-0.703371688316,0.710822247708,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.12027510692e-07,-3.23576297299e-08,-7.12408151619e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245644896739,-0.000176851852198,9.81000797835,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121107750000,12397,121107750000,RH_EXTIMU,2.31450679726e-06,1.52951922724e-05,-0.703371751614,0.710822185073,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.93727029409e-08,-7.24007821306e-10,-7.12400987786e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245171133116,-0.000178562021614,9.81000242821,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121110250000,12398,121110250000,RH_EXTIMU,2.31452446016e-06,1.52951738008e-05,-0.703371814913,0.710822122438,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.13285226476e-08,8.41002763903e-11,-7.12393978521e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245250448212,-0.000179288835054,9.80999974479,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121112750000,12399,121112750000,RH_EXTIMU,2.31447635754e-06,1.52951434103e-05,-0.70337187821,0.710822059804,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.3627714234e-09,-4.36998242845e-08,-7.12387088133e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246208407615,-0.000178457798065,9.80999054722,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121115250000,12400,121115250000,RH_EXTIMU,2.31465500581e-06,1.52950903576e-05,-0.703371941507,0.71082199717,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.32332832083e-07,7.10052838779e-08,-7.12381001942e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024357873968,-0.000181351575926,9.81000083224,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121117750000,12401,121117750000,RH_EXTIMU,2.31470244405e-06,1.52951004792e-05,-0.703372004804,0.710821934537,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.21712081316e-08,3.30982591557e-08,-7.12373705432e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244977384894,-0.00017899515309,9.81000032885,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121120250000,12402,121120250000,RH_EXTIMU,2.31468974567e-06,1.52950910193e-05,-0.703372068099,0.710821871905,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0075093818e-09,-1.18756072704e-08,-7.12366388789e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245624190446,-0.000178727099085,9.81000064079,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121122750000,12403,121122750000,RH_EXTIMU,2.31461560628e-06,1.52950766467e-05,-0.703372131394,0.710821809273,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.31820422105e-08,-4.9241981527e-08,-7.12359296323e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246093713804,-0.000178098212649,9.80999246344,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121125250000,12404,121125250000,RH_EXTIMU,2.31470922436e-06,1.52949741637e-05,-0.703372194689,0.710821746642,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.11794023992e-07,-4.94988848517e-09,-7.12353422823e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245025018417,-0.000181045373211,9.80999135901,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121127750000,12405,121127750000,RH_EXTIMU,2.31482015378e-06,1.52948965255e-05,-0.703372257983,0.710821684011,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0765810169e-07,1.89193576109e-08,-7.12346480259e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244873744628,-0.000180565459366,9.81000088664,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121130250000,12406,121130250000,RH_EXTIMU,2.31483578944e-06,1.5294915354e-05,-0.703372321276,0.710821621381,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.12996840882e-10,2.01542455877e-08,-7.12338943251e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244957347248,-0.000178531365851,9.81000384885,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121132750000,12407,121132750000,RH_EXTIMU,2.31477542304e-06,1.52949208791e-05,-0.703372384569,0.710821558752,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.65462809137e-08,-3.01770916727e-08,-7.12331314359e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024595306368,-0.000178141224491,9.81000257125,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121135250000,12408,121135250000,RH_EXTIMU,2.31477566944e-06,1.52948610956e-05,-0.703372447861,0.710821496124,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.46705774145e-08,-3.32085498311e-08,-7.12323766058e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245746206717,-0.000179566244155,9.81000583812,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121137750000,12409,121137750000,RH_EXTIMU,2.31478498292e-06,1.52949417824e-05,-0.703372511152,0.710821433496,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.9215749435e-08,5.17729405838e-08,-7.1231664711e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244244821421,-0.000177926308236,9.81000464163,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121140250000,12410,121140250000,RH_EXTIMU,2.3147934476e-06,1.52949882941e-05,-0.703372574442,0.710821370868,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.04681634319e-08,3.18613883967e-08,-7.1230950086e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244706278502,-0.000178713543991,9.81000090471,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121142750000,12411,121142750000,RH_EXTIMU,2.31486598066e-06,1.52950135281e-05,-0.703372637732,0.710821308241,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.79377301245e-08,5.58127875651e-08,-7.12302997139e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244396633496,-0.000179345508798,9.80999678423,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121145250000,12412,121145250000,RH_EXTIMU,2.31484135137e-06,1.52948835784e-05,-0.703372701022,0.710821245615,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.00072417594e-08,-8.71066061224e-08,-7.12295184384e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247142265069,-0.000179835054557,9.81000089359,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121147750000,12413,121147750000,RH_EXTIMU,2.31473706445e-06,1.52948419523e-05,-0.70337276431,0.71082118299,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.49902091657e-08,-8.17039387905e-08,-7.12288116172e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246329076112,-0.000177883465616,9.8099936261,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121150250000,12414,121150250000,RH_EXTIMU,2.31486272624e-06,1.52947899566e-05,-0.703372827599,0.710821120365,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.01606688168e-07,4.17910295256e-08,-7.12282723488e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244076494116,-0.000180961626851,9.80998792487,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121152750000,12415,121152750000,RH_EXTIMU,2.31499565233e-06,1.52947054482e-05,-0.703372890886,0.71082105774,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.24032435481e-07,2.73900372342e-08,-7.122759474e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245029431652,-0.000180753419411,9.80999827357,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121155250000,12416,121155250000,RH_EXTIMU,2.31501035877e-06,1.52947284048e-05,-0.703372954173,0.710820995117,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.66441978961e-09,2.19788077934e-08,-7.12268236177e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244721015474,-0.000178465661327,9.81000620703,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121157750000,12417,121157750000,RH_EXTIMU,2.31489264136e-06,1.52948068601e-05,-0.703373017459,0.710820932493,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.10197117015e-07,-2.09762487932e-08,-7.12260987475e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246272683045,-0.000176560420676,9.80999210913,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121160250000,12418,121160250000,RH_EXTIMU,2.31494062983e-06,1.52946321733e-05,-0.703373080745,0.710820869871,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.26475257697e-07,-7.16847243493e-08,-7.12254603353e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245970685535,-0.000181619559626,9.80999600318,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121165250000,12419,121162750000,RH_EXTIMU,2.31508490109e-06,1.52945636696e-05,-0.70337314403,0.710820807249,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.21478087076e-07,4.28751129685e-08,-7.12246832481e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243983146169,-0.000180962413277,9.81001678928,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121165250000,12420,121165250000,RH_EXTIMU,2.31490550782e-06,1.52947632189e-05,-0.703373207314,0.710820744628,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.13408970028e-07,1.31797162422e-08,-7.12238528201e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245736417496,-0.000174090356785,9.81000155578,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121171500000,12421,121167750000,RH_EXTIMU,2.31493876462e-06,1.52947659932e-05,-0.703373270598,0.710820682007,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.82409061094e-08,2.09401863751e-08,-7.12232343363e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244634593181,-0.000180077049576,9.80999614805,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121171500000,12422,121170250000,RH_EXTIMU,2.31509550886e-06,1.52946510773e-05,-0.703373333881,0.710820619387,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.54686932109e-07,2.35011124283e-08,-7.12225536372e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244811822219,-0.00018162559515,9.81000292526,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121172750000,12423,121172750000,RH_EXTIMU,2.31503430368e-06,1.52946676829e-05,-0.703373397163,0.710820556768,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.32583821509e-08,-2.43482033954e-08,-7.12217645954e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246075015694,-0.000177482012913,9.81000157512,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121175250000,12424,121175250000,RH_EXTIMU,2.31502823403e-06,1.52946503859e-05,-0.703373460445,0.710820494149,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.17169739639e-09,-1.26024256907e-08,-7.12210808889e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245056411966,-0.000179209262181,9.80999882859,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121177750000,12425,121177750000,RH_EXTIMU,2.3151159216e-06,1.52946403334e-05,-0.703373523726,0.710820431531,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.64108976117e-08,4.42742440794e-08,-7.12203549049e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244608154012,-0.000179743758997,9.81000728253,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121180250000,12426,121180250000,RH_EXTIMU,2.315117345e-06,1.52946390848e-05,-0.703373587007,0.710820368913,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.40226207917e-09,7.39893771671e-10,-7.12195887598e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245337989375,-0.000178963872427,9.81000669337,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121182750000,12427,121182750000,RH_EXTIMU,2.31511028298e-06,1.52946523375e-05,-0.703373650286,0.710820306296,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.05828999159e-08,4.21139711732e-09,-7.12188446657e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245075525666,-0.000178608956393,9.81000428922,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121185250000,12428,121185250000,RH_EXTIMU,2.31514569111e-06,1.52946750981e-05,-0.703373713566,0.71082024368,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.21794865773e-09,3.35160145999e-08,-7.12181536737e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024476502262,-0.000179022910218,9.81000072568,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121187750000,12429,121187750000,RH_EXTIMU,2.31502562886e-06,1.52946016086e-05,-0.703373776844,0.710820181065,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.60314682551e-08,-1.08700195564e-07,-7.12174906108e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247264307425,-0.000178350677725,9.80998181036,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121190250000,12430,121190250000,RH_EXTIMU,2.31516653076e-06,1.52944995137e-05,-0.703373840122,0.71082011845,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.3846366311e-07,2.18773949183e-08,-7.12168509639e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244415146407,-0.00018115346611,9.81000066858,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121192750000,12431,121192750000,RH_EXTIMU,2.31519292794e-06,1.52945077505e-05,-0.703373903399,0.710820055835,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.12663056527e-08,2.01864857047e-08,-7.12161025045e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245087270318,-0.000178745988822,9.81000382381,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121195250000,12432,121195250000,RH_EXTIMU,2.31514559208e-06,1.52945348516e-05,-0.703373966676,0.710819993221,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.12774314484e-08,-1.05756799375e-08,-7.12153314518e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245478524683,-0.000178020137992,9.81000432102,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121199000000,12433,121197750000,RH_EXTIMU,2.31516178601e-06,1.52945426436e-05,-0.703374029952,0.710819930608,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.71442584903e-09,1.41921789723e-08,-7.12146764223e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244900411405,-0.000179085335732,9.80999525906,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121200250000,12434,121200250000,RH_EXTIMU,2.31515912464e-06,1.52944587681e-05,-0.703374093227,0.710819867996,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.65734792725e-08,-4.85449633403e-08,-7.12139298856e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246274611977,-0.00017953103962,9.81000098281,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121202750000,12435,121202750000,RH_EXTIMU,2.3153490126e-06,1.52944562485e-05,-0.703374156502,0.710819805384,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.10288830093e-07,1.06065942777e-07,-7.12131465906e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243186597854,-0.000180786242591,9.81002395907,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121205250000,12436,121205250000,RH_EXTIMU,2.31527951163e-06,1.52945741923e-05,-0.703374219776,0.710819742773,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.04998890931e-07,2.86101974038e-08,-7.12123487076e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245052993629,-0.000177010112822,9.81000741089,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121212750000,12437,121207750000,RH_EXTIMU,2.31509524782e-06,1.52946297878e-05,-0.703374283049,0.710819680162,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.35176070201e-07,-7.14215482003e-08,-7.12116392739e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246973983494,-0.000176146507437,9.80998745982,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121212750000,12438,121210250000,RH_EXTIMU,2.3152410241e-06,1.52945408766e-05,-0.703374346322,0.710819617552,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.338169647e-07,3.21172354654e-08,-7.12111051765e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243947069882,-0.000181809097357,9.80999091147,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121212750000,12439,121212750000,RH_EXTIMU,2.31529081952e-06,1.52944533245e-05,-0.703374409594,0.710819554943,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.84721242078e-08,-2.11182841173e-08,-7.12103870924e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245873711557,-0.000179817930932,9.80999599369,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121215250000,12440,121215250000,RH_EXTIMU,2.31530215451e-06,1.52943230995e-05,-0.703374472866,0.710819492334,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.06133515119e-08,-6.702609801e-08,-7.12097350956e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246040479328,-0.000180483020361,9.80999125743,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121217750000,12441,121217750000,RH_EXTIMU,2.31534481145e-06,1.52942715982e-05,-0.703374536137,0.710819429725,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.41269837225e-08,-4.63461489958e-09,-7.12089893441e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245410516641,-0.00017917454844,9.81000310801,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121220250000,12442,121220250000,RH_EXTIMU,2.31522329988e-06,1.52942703613e-05,-0.703374599407,0.710819367118,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.75121159024e-08,-6.84290464285e-08,-7.12082893523e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024636151487,-0.000177526430055,9.8099910885,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121222750000,12443,121222750000,RH_EXTIMU,2.31531670946e-06,1.52942475793e-05,-0.703374662677,0.710819304511,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.68274118792e-08,4.02552433964e-08,-7.12076666809e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0002443015929,-0.000180024475378,9.8099957119,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121225250000,12444,121225250000,RH_EXTIMU,2.31541294694e-06,1.5294216998e-05,-0.703374725946,0.710819241904,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.28241381119e-08,3.74114080179e-08,-7.12069505648e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244706284809,-0.000180047682359,9.81000426443,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121227750000,12445,121227750000,RH_EXTIMU,2.31528223183e-06,1.52942761197e-05,-0.703374789214,0.710819179298,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.06709526879e-07,-3.92846975524e-08,-7.12061751561e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246352880352,-0.000176363819819,9.80999531849,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121230250000,12446,121230250000,RH_EXTIMU,2.31552501871e-06,1.52941884294e-05,-0.703374852482,0.710819116693,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.88295436465e-07,8.73993974373e-08,-7.12055745049e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000242761121191,-0.00018317274579,9.81000828141,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121232750000,12447,121232750000,RH_EXTIMU,2.31550429988e-06,1.52942389657e-05,-0.703374915749,0.710819054089,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.93286193084e-08,1.77280875334e-08,-7.1204829665e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245837321414,-0.000177364259374,9.80999420528,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121235250000,12448,121235250000,RH_EXTIMU,2.31542903627e-06,1.52942168093e-05,-0.703374979016,0.710818991485,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.94415317773e-08,-5.43014388146e-08,-7.12041549585e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246176924392,-0.000178243251939,9.80999131714,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121239000000,12449,121237750000,RH_EXTIMU,2.31550224289e-06,1.52941332987e-05,-0.703375042282,0.710818928881,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.95107785034e-08,-5.64657796886e-09,-7.12035403101e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245161829746,-0.000180445706798,9.80999040502,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121244000000,12450,121240250000,RH_EXTIMU,2.31563663964e-06,1.52940283757e-05,-0.703375105547,0.710818866278,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.36355571708e-07,1.66088696918e-08,-7.12028354667e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244911116955,-0.000181178005858,9.8100061115,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121244000000,12451,121242750000,RH_EXTIMU,2.31555781562e-06,1.5294024785e-05,-0.703375168812,0.710818803676,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.19131362381e-08,-4.57474327426e-08,-7.12019092255e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246298296486,-0.000177598601565,9.81001755963,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121245250000,12452,121245250000,RH_EXTIMU,2.31546612874e-06,1.52941019786e-05,-0.703375232076,0.710818741075,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.46850510103e-08,-7.04693962898e-09,-7.1201124573e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244929399056,-0.000177396974882,9.8100124492,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121247750000,12453,121247750000,RH_EXTIMU,2.31537001932e-06,1.52942264088e-05,-0.703375295339,0.710818678474,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.23779972374e-07,1.73257945515e-08,-7.12003845096e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245218924333,-0.000176575322531,9.80999890163,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121250250000,12454,121250250000,RH_EXTIMU,2.3155167299e-06,1.52941515825e-05,-0.703375358602,0.710818615874,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.26422431299e-07,4.06525348201e-08,-7.11997978484e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244256567661,-0.000181712710289,9.80999548903,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121252750000,12455,121252750000,RH_EXTIMU,2.31562350845e-06,1.52940680323e-05,-0.703375421864,0.710818553274,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.08623865697e-07,1.32218219055e-08,-7.11990734152e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245404942962,-0.000180370543768,9.81000199504,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121255250000,12456,121255250000,RH_EXTIMU,2.31548258577e-06,1.52940806347e-05,-0.703375485125,0.710818490675,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.63377397976e-08,-7.14821240848e-08,-7.11983658342e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246399667758,-0.000177007967619,9.80999009877,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121257750000,12457,121257750000,RH_EXTIMU,2.31552211161e-06,1.5294043233e-05,-0.703375548386,0.710818428077,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.44124682081e-08,1.62128619551e-09,-7.11976689011e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245055202425,-0.000179583028788,9.81000143065,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121257750000,12458,121260250000,RH_EXTIMU,2.3156702684e-06,1.52940189773e-05,-0.703375611646,0.710818365479,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.87887007797e-08,7.02234999832e-08,-7.1196873679e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244103495554,-0.000180566490015,9.81001944687,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121262750000,12459,121262750000,RH_EXTIMU,2.3154057723e-06,1.52941313908e-05,-0.703375674905,0.710818302882,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.12772127464e-07,-8.42589167184e-08,-7.11961114931e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247283490945,-0.000174481070964,9.80998678873,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121266500000,12460,121265250000,RH_EXTIMU,2.31548357889e-06,1.52939808061e-05,-0.703375738164,0.710818240286,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.29869117491e-07,-4.12001741774e-08,-7.11955957454e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245159299183,-0.000181940426822,9.8099852315,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121267750000,12461,121267750000,RH_EXTIMU,2.31560550047e-06,1.52938666218e-05,-0.703375801423,0.71081817769,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.34472804934e-07,4.32257726937e-09,-7.11949376499e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245143029089,-0.000180782386701,9.80999399763,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121272750000,12462,121270250000,RH_EXTIMU,2.31564022014e-06,1.52938317509e-05,-0.70337586468,0.710818115094,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.02552874926e-08,3.55971494079e-10,-7.11942240143e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245245998728,-0.000179228573885,9.80999926543,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121272750000,12463,121272750000,RH_EXTIMU,2.31564579976e-06,1.52938271646e-05,-0.703375927937,0.710818052499,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.64348564955e-09,1.18031179095e-09,-7.11935021513e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245224644376,-0.000178820803295,9.81000091022,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121275250000,12464,121275250000,RH_EXTIMU,2.315651289e-06,1.52938725122e-05,-0.703375991194,0.710817989905,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.15057306988e-08,2.9524554366e-08,-7.11927051089e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245148422704,-0.000177962345709,9.81001071641,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121277750000,12465,121277750000,RH_EXTIMU,2.31555327808e-06,1.52938983624e-05,-0.703376054449,0.710817927312,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.93904129234e-08,-3.98022917204e-08,-7.11919760459e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245579788939,-0.000178060906476,9.81000000984,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121280250000,12466,121280250000,RH_EXTIMU,2.3155710312e-06,1.52938679369e-05,-0.703376117704,0.710817864719,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.81057773973e-08,-6.66330001399e-09,-7.11912784745e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245275552859,-0.000179371488794,9.80999938412,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121282750000,12467,121282750000,RH_EXTIMU,2.31559482973e-06,1.52938375288e-05,-0.703376180959,0.710817802127,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.15336670329e-08,-3.25158708278e-09,-7.11905759705e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245275070498,-0.000179311896139,9.80999934944,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121285250000,12468,121285250000,RH_EXTIMU,2.31570972678e-06,1.52938152679e-05,-0.703376244212,0.710817739535,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.87527694604e-08,5.2642578449e-08,-7.11898865565e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244053972643,-0.000180373621087,9.81000468508,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121287750000,12469,121287750000,RH_EXTIMU,2.31577306287e-06,1.52938581817e-05,-0.703376307466,0.710817676944,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.27585550714e-08,6.0691014977e-08,-7.11891669038e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244610207754,-0.000178780516857,9.81000283051,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121290250000,12470,121290250000,RH_EXTIMU,2.31578736394e-06,1.52938691316e-05,-0.703376370718,0.710817614354,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.86071158889e-09,1.49225377367e-08,-7.11884512e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245161813966,-0.000178876228405,9.81000087646,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121292750000,12471,121292750000,RH_EXTIMU,2.31580334264e-06,1.52938535105e-05,-0.70337643397,0.710817551764,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.87662022106e-08,7.5684732885e-10,-7.11877431763e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245269161799,-0.00017913417739,9.81000001271,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121295250000,12472,121295250000,RH_EXTIMU,2.31578082423e-06,1.52938128174e-05,-0.703376497221,0.710817489175,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.09827146424e-08,-3.51628429159e-08,-7.11869193534e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0002461932605,-0.000178697360357,9.81001094976,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121297750000,12473,121297750000,RH_EXTIMU,2.31567039262e-06,1.52938098894e-05,-0.703376560472,0.710817426587,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.02599936502e-08,-6.31563933825e-08,-7.11861697944e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024588430935,-0.000178009177405,9.81000191885,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121300250000,12474,121300250000,RH_EXTIMU,2.31579044544e-06,1.52937630213e-05,-0.703376623721,0.710817363999,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.55310755835e-08,4.15507158368e-08,-7.11854990732e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244099829926,-0.000180941926999,9.81000361977,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121302750000,12475,121302750000,RH_EXTIMU,2.31564046077e-06,1.52938245321e-05,-0.703376686971,0.710817301412,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.19011789041e-07,-4.87696121175e-08,-7.11848537263e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246947890165,-0.000175569849615,9.80997525334,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121305250000,12476,121305250000,RH_EXTIMU,2.31577239666e-06,1.52936748888e-05,-0.70337675022,0.710817238825,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.60120163063e-07,-1.0206181055e-08,-7.118438356e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244679545744,-0.00018238996274,9.80998106962,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121307750000,12477,121307750000,RH_EXTIMU,2.31589524171e-06,1.52935484871e-05,-0.703376813468,0.710817176239,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.41872480596e-07,-2.10512967165e-09,-7.11837049627e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245354868462,-0.000180779434034,9.80999381868,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121310250000,12478,121310250000,RH_EXTIMU,2.31591462556e-06,1.52935184943e-05,-0.703376876715,0.710817113654,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.87894775661e-08,-5.49966766598e-09,-7.11829805819e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245308820636,-0.00017898482511,9.81000001441,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121312750000,12479,121312750000,RH_EXTIMU,2.31608460041e-06,1.52935186691e-05,-0.703376939962,0.710817051069,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.74482320917e-08,9.63930402397e-08,-7.1182186026e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243619209934,-0.000180535128701,9.81002199075,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121315250000,12480,121315250000,RH_EXTIMU,2.31600409917e-06,1.52936209718e-05,-0.703377003209,0.710816988484,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.02453422558e-07,1.35251324205e-08,-7.11813862416e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245241206418,-0.000177015523223,9.810007277,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121317750000,12481,121317750000,RH_EXTIMU,2.31598941854e-06,1.5293645572e-05,-0.703377066454,0.710816925901,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.13009891548e-08,6.37667905739e-09,-7.11806726361e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245173564099,-0.000178653644764,9.81000191715,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121319000000,12482,121320250000,RH_EXTIMU,2.31582828712e-06,1.52936496347e-05,-0.703377129699,0.710816863318,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.30243057729e-08,-8.77101114083e-08,-7.11799821909e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247213818295,-0.000176691059909,9.80998318858,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121322750000,12483,121322750000,RH_EXTIMU,2.31589464553e-06,1.52934613509e-05,-0.703377192943,0.710816800735,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.44572294009e-07,-6.90797371596e-08,-7.11794292433e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0002456950406,-0.0001818680922,9.80998571925,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121325250000,12484,121325250000,RH_EXTIMU,2.31598312302e-06,1.52933430669e-05,-0.703377256187,0.710816738154,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.17761367391e-07,-1.68276610903e-08,-7.11787543405e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245368002997,-0.000180456526954,9.80999498849,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121327750000,12485,121327750000,RH_EXTIMU,2.31600603189e-06,1.52933141372e-05,-0.70337731943,0.710816675572,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.01956901988e-08,-2.91160979632e-09,-7.11780377941e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245237991466,-0.000179066510535,9.80999980047,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121330250000,12486,121330250000,RH_EXTIMU,2.31616825395e-06,1.5293292081e-05,-0.703377382673,0.710816612992,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.05548901214e-07,7.93887732853e-08,-7.11772818819e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024347525445,-0.000181027752052,9.8100202985,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121332750000,12487,121332750000,RH_EXTIMU,2.31605304308e-06,1.52934901644e-05,-0.703377445915,0.710816550412,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.76087293421e-07,4.84599091683e-08,-7.11763462279e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024509315607,-0.000175075966374,9.81001904078,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121335250000,12488,121335250000,RH_EXTIMU,2.31596077769e-06,1.52935961939e-05,-0.703377509156,0.710816487833,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.11240293679e-07,9.02452758898e-09,-7.11755922492e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245172845389,-0.000177322059576,9.81000671076,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121337750000,12489,121337750000,RH_EXTIMU,2.31596843637e-06,1.52935904956e-05,-0.703377572396,0.710816425254,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.45123855582e-09,1.71768842754e-09,-7.11748970976e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245242214439,-0.000179202614918,9.81000012699,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121340250000,12490,121340250000,RH_EXTIMU,2.3159674168e-06,1.52935405814e-05,-0.703377635636,0.710816362676,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.83967398177e-08,-2.83091346481e-08,-7.11742226785e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245859170241,-0.000179242841649,9.80999203248,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121342750000,12491,121342750000,RH_EXTIMU,2.3160563517e-06,1.52934066633e-05,-0.703377698875,0.710816300099,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.26818740363e-07,-2.54606035758e-08,-7.11736112392e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245444496953,-0.000181125634295,9.80999160116,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121345250000,12492,121345250000,RH_EXTIMU,2.31621920358e-06,1.5293352988e-05,-0.703377762113,0.710816237522,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.23699062027e-07,6.17629310376e-08,-7.11729233763e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244094307428,-0.0001807388079,9.81000442627,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121347750000,12493,121347750000,RH_EXTIMU,2.31622784423e-06,1.52933768422e-05,-0.703377825351,0.710816174946,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.61961942637e-09,1.90752826156e-08,-7.11721825144e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245111026369,-0.000178491152926,9.81000191277,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121347750000,12494,121350250000,RH_EXTIMU,2.31621223084e-06,1.52934072615e-05,-0.703377888589,0.71081611237,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.51059919525e-08,9.16077073879e-09,-7.11714271079e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245145039704,-0.000178283057332,9.81000566853,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121347750000,12495,121352750000,RH_EXTIMU,2.31623971148e-06,1.52934171541e-05,-0.703377951825,0.710816049796,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.09500454405e-08,2.17372319366e-08,-7.11706831372e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024491108759,-0.000179112990697,9.81000653695,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121347750000,12496,121355250000,RH_EXTIMU,2.31614881069e-06,1.52934205408e-05,-0.703378015061,0.710815987221,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.27070938907e-08,-4.85758122704e-08,-7.11699303593e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246085655826,-0.000177863390003,9.80999986284,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121357750000,12497,121357750000,RH_EXTIMU,2.31607307487e-06,1.52934277671e-05,-0.703378078296,0.710815924648,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.62440259103e-08,-3.78590754511e-08,-7.11692507121e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245940075456,-0.000177717207754,9.80999015356,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121360250000,12498,121360250000,RH_EXTIMU,2.31633205772e-06,1.52932794686e-05,-0.703378141531,0.710815862075,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.31608844426e-07,6.20483381907e-08,-7.11686647656e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243574147983,-0.000183727209341,9.81000344339,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121362750000,12499,121362750000,RH_EXTIMU,2.31615635188e-06,1.52933084777e-05,-0.703378204765,0.710815799502,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.15349538815e-07,-8.17255973447e-08,-7.11678507402e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247741483625,-0.000175311653649,9.809990245,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121365250000,12500,121365250000,RH_EXTIMU,2.31616931554e-06,1.52932163567e-05,-0.703378267999,0.71081573693,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.00981680685e-08,-4.44418334051e-08,-7.11672401069e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244973900601,-0.000180604908795,9.8099956924,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121367750000,12501,121367750000,RH_EXTIMU,2.31628513565e-06,1.52932026599e-05,-0.703378331232,0.710815674359,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.44581857476e-08,5.80319329635e-08,-7.11665221912e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244197234019,-0.000179896765286,9.81000596245,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121370250000,12502,121370250000,RH_EXTIMU,2.31622635591e-06,1.52932578482e-05,-0.703378394464,0.710815611789,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.35902759675e-08,-1.04421395024e-09,-7.11657437015e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245744342963,-0.000177352134032,9.81000099562,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121372750000,12503,121372750000,RH_EXTIMU,2.31625340975e-06,1.52932030922e-05,-0.703378457695,0.710815549219,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.70851241418e-08,-1.52655005041e-08,-7.11651015619e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245294719151,-0.00017991727076,9.80999488484,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121375250000,12504,121375250000,RH_EXTIMU,2.3163394164e-06,1.52931490742e-05,-0.703378520926,0.710815486649,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.01935282908e-08,1.8327046721e-08,-7.11644136244e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244829531238,-0.000180123192207,9.81000148271,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121377750000,12505,121377750000,RH_EXTIMU,2.31638663311e-06,1.52932074817e-05,-0.703378584157,0.71081542408,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.12665713619e-09,6.04308850314e-08,-7.11636778868e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244295802242,-0.000178475401049,9.81000478596,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121380250000,12506,121380250000,RH_EXTIMU,2.31646599743e-06,1.52932065931e-05,-0.703378647386,0.710815361512,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.65202688166e-08,4.4801539714e-08,-7.11628457512e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244795231329,-0.000179685956804,9.81001977608,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121382750000,12507,121382750000,RH_EXTIMU,2.31621301797e-06,1.52932924699e-05,-0.703378710615,0.710815298945,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.91290966041e-07,-9.28699100488e-08,-7.11620686796e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024724078037,-0.000175049840532,9.80999176061,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121385250000,12508,121385250000,RH_EXTIMU,2.3162650969e-06,1.52931585641e-05,-0.703378773843,0.710815236378,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.05853481939e-07,-4.61925273945e-08,-7.11615094666e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245318235173,-0.000181411488804,9.80998892685,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121387750000,12509,121387750000,RH_EXTIMU,2.31643714501e-06,1.52930325613e-05,-0.703378837071,0.710815173812,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.69627222028e-07,2.58084932568e-08,-7.11608394487e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244561379804,-0.000181662783481,9.8100018493,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121390250000,12510,121390250000,RH_EXTIMU,2.31641611414e-06,1.52930287221e-05,-0.703378900298,0.710815111246,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.90945049597e-09,-1.33689959071e-08,-7.11600147324e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245799695021,-0.000178138135462,9.8100086286,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121392750000,12511,121392750000,RH_EXTIMU,2.316191038e-06,1.52931047183e-05,-0.703378963525,0.710815048681,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.69863838418e-07,-8.27873693322e-08,-7.11593066377e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246887847731,-0.000175340295611,9.80998436447,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121395250000,12512,121395250000,RH_EXTIMU,2.31631441626e-06,1.52929437258e-05,-0.70337902675,0.710814986117,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.61639785623e-07,-2.14751183143e-08,-7.11588161312e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244966044151,-0.000182373897771,9.80998340416,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121397750000,12513,121397750000,RH_EXTIMU,2.31652504007e-06,1.52928303067e-05,-0.703379089976,0.710814923553,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.8448235794e-07,5.46710080763e-08,-7.11581472013e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244003249729,-0.000181766767491,9.81000266782,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121400250000,12514,121400250000,RH_EXTIMU,2.3165056287e-06,1.52929431757e-05,-0.7033791532,0.71081486099,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.36606133213e-08,5.3908582473e-08,-7.11573725122e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244818992078,-0.000176816097551,9.81000165273,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121402750000,12515,121402750000,RH_EXTIMU,2.31668032892e-06,1.52929041041e-05,-0.703379216425,0.710814798427,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.22218811083e-07,7.67344592939e-08,-7.11566649515e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243696227435,-0.000181700632049,9.81001699356,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121405250000,12516,121405250000,RH_EXTIMU,2.31655617887e-06,1.52930429257e-05,-0.703379279648,0.710814735865,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.47824103834e-07,9.72975059281e-09,-7.11557172019e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245692718746,-0.000175485586938,9.81001770796,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121409000000,12517,121407750000,RH_EXTIMU,2.31640647798e-06,1.52930797921e-05,-0.70337934287,0.710814673304,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.04983116269e-07,-6.26248088374e-08,-7.11551995767e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246126994519,-0.000177564610858,9.80997045938,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121410250000,12518,121410250000,RH_EXTIMU,2.31687508205e-06,1.52928230983e-05,-0.703379406093,0.710814610743,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.1180445783e-07,1.18363984597e-07,-7.1154632845e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000242640083254,-0.000186704189689,9.81001224175,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121412750000,12519,121412750000,RH_EXTIMU,2.31668530298e-06,1.52929615454e-05,-0.703379469314,0.710814548183,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.84933459433e-07,-2.74129603638e-08,-7.11536476584e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246972052318,-0.000173800804543,9.81000901573,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121415250000,12520,121415250000,RH_EXTIMU,2.31652321208e-06,1.52930078482e-05,-0.703379532534,0.710814485624,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.1733860415e-07,-6.42307578872e-08,-7.11528580288e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245887531905,-0.000177295024457,9.81001124221,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121417750000,12521,121417750000,RH_EXTIMU,2.31638219255e-06,1.52930806735e-05,-0.703379595754,0.710814423065,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.20280619831e-07,-3.72917889389e-08,-7.11521815086e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245779741645,-0.000176578036928,9.80998629734,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121420250000,12522,121420250000,RH_EXTIMU,2.31660995489e-06,1.52929382451e-05,-0.703379658974,0.710814360506,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.10551786163e-07,4.7818782068e-08,-7.11517454337e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244118578496,-0.000183124462365,9.80998187387,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121422750000,12523,121422750000,RH_EXTIMU,2.31679723132e-06,1.52928291462e-05,-0.703379722193,0.710814297949,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.68774752446e-07,4.39900902866e-08,-7.11510298818e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244744643577,-0.00018119663528,9.81000271664,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121425250000,12524,121425250000,RH_EXTIMU,2.3166034873e-06,1.52928318226e-05,-0.703379785411,0.710814235392,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.10789463649e-07,-1.06850384051e-07,-7.11502591524e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247361379447,-0.00017624157332,9.80999003227,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121427750000,12525,121427750000,RH_EXTIMU,2.31663040838e-06,1.52927493615e-05,-0.703379848629,0.710814172835,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.25992085297e-08,-3.10948229526e-08,-7.11496475466e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245246260338,-0.000180217994695,9.80999227426,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121430250000,12526,121430250000,RH_EXTIMU,2.31692627831e-06,1.52926166283e-05,-0.703379911846,0.710814110279,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.43825699617e-07,9.16563727748e-08,-7.11489339792e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243111177496,-0.000183586685042,9.81002121811,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121432750000,12527,121432750000,RH_EXTIMU,2.31683186372e-06,1.5292779313e-05,-0.703379975062,0.710814047724,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.44342986123e-07,4.00315580437e-08,-7.11479029172e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245404068722,-0.000175368040617,9.81003101054,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121435250000,12528,121435250000,RH_EXTIMU,2.31642281289e-06,1.52930212279e-05,-0.703380038278,0.71081398517,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.67844400807e-07,-9.1961189801e-08,-7.11470619833e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247196699884,-0.000172006654328,9.80999387614,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121437750000,12529,121437750000,RH_EXTIMU,2.31647522102e-06,1.52928509287e-05,-0.703380101493,0.710813922616,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.26519333535e-07,-6.67024249232e-08,-7.11466790715e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245702176529,-0.00018231803458,9.80997007704,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121440250000,12530,121440250000,RH_EXTIMU,2.31679742571e-06,1.52926608426e-05,-0.703380164707,0.710813860063,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.91073581442e-07,7.38613755346e-08,-7.11460535379e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243841805674,-0.000183416192135,9.8100009785,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121442750000,12531,121442750000,RH_EXTIMU,2.31689838247e-06,1.52926218994e-05,-0.703380227921,0.71081379751,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.02119893856e-08,3.5311791707e-08,-7.11452671208e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244747309718,-0.000180071301107,9.81001201285,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121445250000,12532,121445250000,RH_EXTIMU,2.3167523405e-06,1.5292651816e-05,-0.703380291134,0.710813734958,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.89918365671e-08,-6.45182047129e-08,-7.11445149212e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246562125348,-0.000176708752588,9.80999275607,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121447750000,12533,121447750000,RH_EXTIMU,2.31677927291e-06,1.52926316978e-05,-0.703380354347,0.710813672406,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.75250244979e-08,4.36285182131e-09,-7.11438728857e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244908084937,-0.000179226051786,9.80999585467,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121450250000,12534,121450250000,RH_EXTIMU,2.31687623825e-06,1.52926268337e-05,-0.703380417559,0.710813609855,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.87657454016e-08,5.24449421786e-08,-7.11431634574e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244309974508,-0.000179936966874,9.81000630531,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121452750000,12535,121452750000,RH_EXTIMU,2.31683081152e-06,1.52926716937e-05,-0.70338048077,0.710813547305,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.01855727104e-08,5.95918245096e-10,-7.11423516254e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245525039411,-0.000177597545123,9.81000707204,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121455250000,12536,121455250000,RH_EXTIMU,2.31679832467e-06,1.52926957989e-05,-0.70338054398,0.710813484756,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.11485038145e-08,-3.92498352997e-09,-7.11416259241e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245267324638,-0.000178373271411,9.81000264412,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121457750000,12537,121457750000,RH_EXTIMU,2.31673012778e-06,1.52926793261e-05,-0.70338060719,0.710813422207,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.8621682079e-08,-4.70938504131e-08,-7.11408311526e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246121155672,-0.000178213023114,9.81000701603,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121460250000,12538,121460250000,RH_EXTIMU,2.31677476025e-06,1.52926525708e-05,-0.7033806704,0.710813359659,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.13248426623e-08,1.0548550271e-08,-7.11402306003e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244664695692,-0.000179880300004,9.80999056844,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121462750000,12539,121462750000,RH_EXTIMU,2.31681518314e-06,1.52925967217e-05,-0.703380733608,0.710813297111,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.53022714873e-08,-8.36441415651e-09,-7.11395730277e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245855104973,-0.000179312792895,9.80999024055,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121465250000,12540,121465250000,RH_EXTIMU,2.31683736388e-06,1.52924630551e-05,-0.703380796816,0.710813234564,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.87171621902e-08,-6.28803816073e-08,-7.11388761469e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246083239226,-0.000180408860138,9.80999776491,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121465250000,12541,121467750000,RH_EXTIMU,2.31687046987e-06,1.52924245094e-05,-0.703380860024,0.710813172017,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.1404766281e-08,-2.64207693195e-09,-7.11381291458e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244866716736,-0.000179351971383,9.81000588241,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121470250000,12542,121470250000,RH_EXTIMU,2.31674236253e-06,1.52925023576e-05,-0.70338092323,0.710813109471,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.15764666783e-07,-2.71701447545e-08,-7.11374201367e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024625534751,-0.000176150311558,9.80998893284,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121472750000,12543,121472750000,RH_EXTIMU,2.31689030517e-06,1.52923746765e-05,-0.703380986437,0.710813046926,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.56863618625e-07,1.12901292324e-08,-7.1136862505e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244313270006,-0.000182316952928,9.80999268571,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121475250000,12544,121475250000,RH_EXTIMU,2.31712401259e-06,1.52922929046e-05,-0.703381049642,0.710812984381,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.7980044973e-07,8.56566663153e-08,-7.11361241038e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243888070004,-0.000181778387392,9.8100159202,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121477750000,12545,121477750000,RH_EXTIMU,2.31684317927e-06,1.52924254723e-05,-0.703381112847,0.710812921837,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.33403272891e-07,-8.19936270249e-08,-7.11352430087e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247121246669,-0.000173940724653,9.80999841577,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121480250000,12546,121480250000,RH_EXTIMU,2.31683045732e-06,1.52924170518e-05,-0.703381176051,0.710812859294,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.60694543547e-09,-1.12989934783e-08,-7.11345753583e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245157915057,-0.000179115213883,9.81000027079,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121482750000,12547,121482750000,RH_EXTIMU,2.31685910172e-06,1.52923843733e-05,-0.703381239255,0.710812796751,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.5566134085e-08,-1.816280707e-09,-7.11338779552e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245252945819,-0.000179394539576,9.80999899701,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121482750000,12548,121485250000,RH_EXTIMU,2.31688432892e-06,1.52923558214e-05,-0.703381302458,0.710812734209,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.13009022511e-08,-1.39259099805e-09,-7.11331754663e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245251563789,-0.000179256921676,9.80999936348,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121487750000,12549,121487750000,RH_EXTIMU,2.31690462413e-06,1.52923341958e-05,-0.70338136566,0.710812671667,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.45988266176e-08,-2.29189394469e-10,-7.11324691689e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245235620918,-0.000179142050714,9.80999975175,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121490250000,12550,121490250000,RH_EXTIMU,2.3169222884e-06,1.52923158122e-05,-0.703381428862,0.710812609126,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.12784996711e-08,1.33858724608e-10,-7.11317612958e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245233744973,-0.000179094506823,9.80999992517,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121492750000,12551,121492750000,RH_EXTIMU,2.3169972491e-06,1.52923042455e-05,-0.703381492063,0.710812546586,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.00241210319e-08,3.62513797129e-08,-7.11310988729e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244570671538,-0.000179683701904,9.80999782598,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121497750000,12552,121495250000,RH_EXTIMU,2.31709911732e-06,1.52922759273e-05,-0.703381555264,0.710812484046,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.47512974725e-08,4.18665593392e-08,-7.11304791995e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244597243875,-0.000180086147031,9.80999222413,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121497750000,12553,121497750000,RH_EXTIMU,2.31710630053e-06,1.52922272487e-05,-0.703381618463,0.710812421507,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.23655302941e-08,-2.29911128337e-08,-7.11296183961e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245952515872,-0.000178936288437,9.81001643388,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121500250000,12554,121500250000,RH_EXTIMU,2.31706316043e-06,1.5292287577e-05,-0.703381681662,0.710812358969,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.75895541985e-08,1.06784315757e-08,-7.11287660314e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244891820858,-0.000177875375119,9.81001917689,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121502750000,12555,121502750000,RH_EXTIMU,2.31697327913e-06,1.52923906062e-05,-0.703381744861,0.710812296431,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.08197043397e-07,8.65883103869e-09,-7.11281634069e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244931608408,-0.000177176353357,9.80998514424,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121505250000,12556,121505250000,RH_EXTIMU,2.31708028079e-06,1.52923550771e-05,-0.703381808059,0.710812233894,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.17280071335e-08,4.06546964223e-08,-7.11274993152e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244923601163,-0.000179950218145,9.80999638779,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121507750000,12557,121507750000,RH_EXTIMU,2.31715209136e-06,1.52922341149e-05,-0.703381871256,0.710812171357,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.09790237987e-07,-2.77290300593e-08,-7.11268614771e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245665804616,-0.000180982557382,9.80999298541,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121510250000,12558,121510250000,RH_EXTIMU,2.31727696203e-06,1.52921135446e-05,-0.703381934453,0.710812108821,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.39742281372e-07,2.35107517404e-09,-7.11261309376e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244848516226,-0.000181162429911,9.81000888036,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121512750000,12559,121512750000,RH_EXTIMU,2.31707447482e-06,1.5292152841e-05,-0.703381997649,0.710812046286,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.36367529827e-07,-9.09469209309e-08,-7.112539939e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247020940638,-0.000175891596653,9.80998527071,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121515250000,12560,121515250000,RH_EXTIMU,2.31731153767e-06,1.52920519184e-05,-0.703382060844,0.710811983751,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.92484461671e-07,7.66548716098e-08,-7.11247644257e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243213947663,-0.000182699478431,9.81001129344,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121517750000,12561,121517750000,RH_EXTIMU,2.31730420426e-06,1.52921680091e-05,-0.703382124039,0.710811921217,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.86060120525e-08,6.25362559051e-08,-7.11238795783e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244915353628,-0.000176869336259,9.81001771063,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121520250000,12562,121520250000,RH_EXTIMU,2.31699482564e-06,1.52923224653e-05,-0.703382187233,0.710811858683,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.61952409066e-07,-8.56097715319e-08,-7.1123066069e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247178428377,-0.000173766161769,9.80999337428,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121522750000,12563,121522750000,RH_EXTIMU,2.31738623429e-06,1.52922505273e-05,-0.703382250426,0.71081179615,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.63943309933e-07,1.79988234201e-07,-7.11225174424e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000241433577947,-0.000184553231519,9.81001424956,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121525250000,12564,121525250000,RH_EXTIMU,2.31715833053e-06,1.52922352414e-05,-0.703382313619,0.710811733618,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.20106896358e-07,-1.36287203198e-07,-7.11217312568e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000248283861113,-0.000176153873823,9.80998446142,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121527750000,12565,121527750000,RH_EXTIMU,2.31717143892e-06,1.52920729523e-05,-0.703382376811,0.710811671086,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.96641310168e-08,-8.42615951979e-08,-7.1121225867e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246129988213,-0.000180736477256,9.80997464646,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121530250000,12566,121530250000,RH_EXTIMU,2.31742478985e-06,1.52918907581e-05,-0.703382440003,0.710811608555,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.47478536047e-07,3.96053307644e-08,-7.11206141094e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244168096023,-0.000182949214602,9.81000071844,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121532750000,12567,121532750000,RH_EXTIMU,2.31735913452e-06,1.52919485445e-05,-0.703382503194,0.710811546025,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.89626120713e-08,-3.43665083216e-09,-7.11197473016e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024578765164,-0.00017671830211,9.81000952875,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121535250000,12568,121535250000,RH_EXTIMU,2.31725870111e-06,1.52920104591e-05,-0.703382566384,0.710811483495,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.1062121901e-08,-2.06589969357e-08,-7.11189714968e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245354970971,-0.000177355949759,9.8100058171,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121537750000,12569,121537750000,RH_EXTIMU,2.31732976923e-06,1.52919980835e-05,-0.703382629573,0.710811420966,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.82656187559e-08,3.36008945602e-08,-7.11182876349e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244605987261,-0.000180008967421,9.81000332159,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121540250000,12570,121540250000,RH_EXTIMU,2.31724399456e-06,1.52919774862e-05,-0.703382692762,0.710811358437,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.6296528507e-08,-5.93307485846e-08,-7.11175991936e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024641156782,-0.00017786488109,9.80998911506,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121542750000,12571,121542750000,RH_EXTIMU,2.31733103661e-06,1.52919090309e-05,-0.703382755951,0.710811295909,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.89055165871e-08,1.0699871905e-08,-7.11169527938e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244795738299,-0.000180372728294,9.8099969081,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121545250000,12572,121545250000,RH_EXTIMU,2.31746926095e-06,1.52918730992e-05,-0.703382819139,0.710811233382,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.97090310835e-08,5.79949812311e-08,-7.11162700963e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244184697572,-0.000180494319004,9.81000426452,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121547750000,12573,121547750000,RH_EXTIMU,2.31747779983e-06,1.52919267228e-05,-0.703382882326,0.710811170855,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.4429766239e-08,3.5945636504e-08,-7.11155007304e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244974203885,-0.000178001682999,9.81000523767,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121550250000,12574,121550250000,RH_EXTIMU,2.31747770126e-06,1.52919150212e-05,-0.703382945512,0.710811108329,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.41744661708e-09,-6.06181616521e-09,-7.11147205777e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245638241292,-0.000179041958343,9.81001002468,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121552750000,12575,121552750000,RH_EXTIMU,2.31733735113e-06,1.52919166746e-05,-0.703383008698,0.710811045803,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.98514569283e-08,-7.73879015287e-08,-7.11139143265e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246353781845,-0.000177203271403,9.81000272127,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121555250000,12576,121555250000,RH_EXTIMU,2.31738205003e-06,1.52919320652e-05,-0.703383071883,0.710810983278,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.7646480454e-08,3.45519664842e-08,-7.11133686019e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244282975088,-0.00017940896081,9.8099867749,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121557750000,12577,121557750000,RH_EXTIMU,2.31761517545e-06,1.52918427932e-05,-0.703383135068,0.710810920754,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.83689314123e-07,8.10645096586e-08,-7.11127278565e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243848133721,-0.000182112128958,9.81000262568,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121560250000,12578,121560250000,RH_EXTIMU,2.31758625231e-06,1.52918583012e-05,-0.703383198252,0.71081085823,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.42846473112e-08,-6.80892539938e-09,-7.111190158e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246045949969,-0.000177720433675,9.81000688734,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121562750000,12579,121562750000,RH_EXTIMU,2.31746085669e-06,1.52918780512e-05,-0.703383261435,0.710810795707,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.15306362554e-08,-5.86824029385e-08,-7.11111407233e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024595675459,-0.000177321895407,9.80999950226,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121565250000,12580,121565250000,RH_EXTIMU,2.31750189596e-06,1.52918554059e-05,-0.703383324617,0.710810733185,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.69684056828e-08,1.08636157684e-08,-7.11104747055e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244914816945,-0.000179607343134,9.81000071661,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121567750000,12581,121567750000,RH_EXTIMU,2.31740056963e-06,1.5291854943e-05,-0.703383387799,0.710810670663,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.64697301975e-08,-5.66325273261e-08,-7.11097449054e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246533103752,-0.0001773483307,9.80999272042,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121570250000,12582,121570250000,RH_EXTIMU,2.31744912562e-06,1.52917651877e-05,-0.703383450981,0.710810608142,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.90060760906e-08,-2.30687496227e-08,-7.11090372107e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245220773124,-0.000180442596472,9.81000432271,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121572750000,12583,121572750000,RH_EXTIMU,2.31760507913e-06,1.52918353269e-05,-0.703383514161,0.710810545621,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.01037342203e-08,1.28288362988e-07,-7.11083787694e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000242787498989,-0.000179593711106,9.8100052606,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121575250000,12584,121575250000,RH_EXTIMU,2.31775776452e-06,1.52918543495e-05,-0.703383577342,0.710810483101,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.70089905478e-08,9.73819805135e-08,-7.11076617787e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243906084274,-0.000180428843228,9.81000758459,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121577750000,12585,121577750000,RH_EXTIMU,2.3176721185e-06,1.52918609287e-05,-0.703383640521,0.710810420582,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.15157882976e-08,-4.38046882402e-08,-7.11068814478e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246760096027,-0.000177293242569,9.80999848,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121580250000,12586,121580250000,RH_EXTIMU,2.31757808449e-06,1.52918272243e-05,-0.7033837037,0.710810358064,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.36177974453e-08,-7.14318281401e-08,-7.11062171418e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246048798928,-0.000178258963976,9.80998988568,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121582750000,12587,121582750000,RH_EXTIMU,2.31766122403e-06,1.52916677759e-05,-0.703383766878,0.710810295545,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.37888696815e-07,-4.32392029043e-08,-7.11055588347e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245820903015,-0.000181374329153,9.80999684717,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121587750000,12588,121585250000,RH_EXTIMU,2.31764739176e-06,1.52916634367e-05,-0.703383830056,0.710810233028,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.53519976863e-09,-9.60335024826e-09,-7.11048318065e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245145998551,-0.000178274349202,9.81000072665,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121587750000,12589,121587750000,RH_EXTIMU,2.31775564654e-06,1.52916800017e-05,-0.703383893232,0.710810170511,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.31263934762e-08,7.09830642159e-08,-7.1104109589e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243764234402,-0.000179977660781,9.81001056308,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121590250000,12590,121590250000,RH_EXTIMU,2.31776325715e-06,1.52917676954e-05,-0.703383956409,0.710810107995,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.41293566549e-08,5.47970738252e-08,-7.11033310525e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244796584574,-0.00017769162354,9.81000736852,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121592750000,12591,121592750000,RH_EXTIMU,2.31762138236e-06,1.52917504405e-05,-0.703384019584,0.710810045479,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.00785666991e-08,-8.89983338965e-08,-7.11024986495e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247054803574,-0.000177552530541,9.81000671667,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121595250000,12592,121595250000,RH_EXTIMU,2.31754605066e-06,1.52917284656e-05,-0.703384082759,0.710809982965,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.95830204509e-08,-5.42380511632e-08,-7.11017628591e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245790823442,-0.00017838691694,9.8100026263,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121597750000,12593,121597750000,RH_EXTIMU,2.31755282681e-06,1.52917058092e-05,-0.703384145933,0.71080992045,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.74908848901e-08,-8.42287722859e-09,-7.11010672703e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245220985065,-0.000179137983202,9.80999989489,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121600250000,12594,121600250000,RH_EXTIMU,2.31754392467e-06,1.52917386503e-05,-0.703384209107,0.710809857937,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.26533892071e-08,1.43133533205e-08,-7.11004326657e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244908595419,-0.000178086834648,9.80998712509,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121602750000,12595,121602750000,RH_EXTIMU,2.31777320602e-06,1.52916330064e-05,-0.70338427228,0.710809795424,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.90715661071e-07,6.95917663304e-08,-7.10998803543e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244112093561,-0.000182559230562,9.80999604279,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121605250000,12596,121605250000,RH_EXTIMU,2.31771712264e-06,1.52916167159e-05,-0.703384335452,0.710809732911,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.18361762865e-08,-4.01745085799e-08,-7.10990800859e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246223810014,-0.000177607811612,9.80999647042,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121607750000,12597,121607750000,RH_EXTIMU,2.31766381361e-06,1.52915652996e-05,-0.703384398624,0.710809670399,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.93004364903e-10,-5.85875642236e-08,-7.10984848062e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246355430608,-0.000178667640258,9.80998245161,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121611500000,12598,121610250000,RH_EXTIMU,2.31774469793e-06,1.52913803465e-05,-0.703384461795,0.710809607888,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.50957881833e-07,-5.90113605697e-08,-7.10978891677e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245761677011,-0.000181573952623,9.80998795566,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121612750000,12599,121612750000,RH_EXTIMU,2.31787101793e-06,1.52913376184e-05,-0.703384524966,0.710809545377,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.67636437087e-08,4.74315869022e-08,-7.10971237867e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244299883979,-0.000179918450166,9.81001161436,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121615250000,12600,121615250000,RH_EXTIMU,2.3179515003e-06,1.52913893267e-05,-0.703384588136,0.710809482867,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.75581801316e-08,7.53393545302e-08,-7.1096326351e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243748008006,-0.000179468306627,9.81002078792,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121617750000,12601,121617750000,RH_EXTIMU,2.31761113905e-06,1.5291612481e-05,-0.703384651305,0.710809420358,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.1822761256e-07,-6.39801432935e-08,-7.10954679325e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247364027996,-0.000172041242083,9.80999065322,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121620250000,12602,121620250000,RH_EXTIMU,2.31771127687e-06,1.52914793755e-05,-0.703384714474,0.710809357849,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.32731296695e-07,-1.86942465954e-08,-7.10950313127e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244757569268,-0.000182374028815,9.80998171645,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121622750000,12603,121622750000,RH_EXTIMU,2.31786584193e-06,1.52913259422e-05,-0.703384777642,0.71080929534,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.75119775355e-07,3.73077159256e-10,-7.10943881258e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245282499848,-0.000181401139272,9.80999162932,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121625250000,12604,121625250000,RH_EXTIMU,2.3180376838e-06,1.5291238927e-05,-0.70338484081,0.710809232833,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.47570208828e-07,4.78633285058e-08,-7.10936023122e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244481089105,-0.000181076831116,9.81001624519,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121627750000,12605,121627750000,RH_EXTIMU,2.3178836031e-06,1.52913456307e-05,-0.703384903976,0.710809170326,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.46771956925e-07,-2.53781559253e-08,-7.10926465422e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245917701598,-0.00017569391902,9.81002203381,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121630250000,12606,121630250000,RH_EXTIMU,2.31780381119e-06,1.5291438853e-05,-0.703384967142,0.710809107819,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.69417764925e-08,8.75860715543e-09,-7.10919294772e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244695787559,-0.000177713161219,9.81000597666,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121632750000,12607,121632750000,RH_EXTIMU,2.31779809195e-06,1.52914276489e-05,-0.703385030308,0.710809045314,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.94105505172e-09,-8.94196014874e-09,-7.10913140301e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245533183759,-0.000179048891124,9.80998626095,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121635250000,12608,121635250000,RH_EXTIMU,2.31792606354e-06,1.52913347746e-05,-0.703385093473,0.710808982809,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.25920373333e-07,1.98454705354e-08,-7.10907595211e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244808231412,-0.000180897634217,9.80998514656,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121637750000,12609,121637750000,RH_EXTIMU,2.31804681888e-06,1.52912150178e-05,-0.703385156637,0.710808920304,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.36943935259e-07,4.98103420198e-10,-7.10900441548e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245427556737,-0.000180911183836,9.81000429652,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121640250000,12610,121640250000,RH_EXTIMU,2.31793521569e-06,1.52912304968e-05,-0.7033852198,0.7108088578,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.12844041398e-08,-5.33504690042e-08,-7.10891678154e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246091433481,-0.000177102240669,9.81001009796,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121642750000,12611,121642750000,RH_EXTIMU,2.31782433203e-06,1.52913131751e-05,-0.703385282963,0.710808795297,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.08688842753e-07,-1.4732895389e-08,-7.10885058658e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0002453577045,-0.000176648477689,9.8099902522,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121645250000,12612,121645250000,RH_EXTIMU,2.31807955603e-06,1.5291260443e-05,-0.703385346126,0.710808732794,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.75693688516e-07,1.14278199557e-07,-7.1087823746e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243244988557,-0.000182313002249,9.8100160006,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121647750000,12613,121647750000,RH_EXTIMU,2.31788169503e-06,1.52913482486e-05,-0.703385409287,0.710808670292,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.61033452967e-07,-6.07601512225e-08,-7.10870386613e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246886566407,-0.000175267692616,9.80999016553,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121650250000,12614,121650250000,RH_EXTIMU,2.31792790065e-06,1.5291194156e-05,-0.703385472448,0.710808607791,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.13872468231e-07,-6.09765734795e-08,-7.10865638952e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245706363324,-0.000181505496075,9.80997588653,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121652750000,12615,121652750000,RH_EXTIMU,2.31814684355e-06,1.52909963312e-05,-0.703385535609,0.71080854529,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.36707390429e-07,1.13560091861e-08,-7.10859410973e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244847936407,-0.000182642004492,9.80999627761,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121655250000,12616,121655250000,RH_EXTIMU,2.31815357193e-06,1.52909676142e-05,-0.703385598769,0.710808482789,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.08739285542e-08,-1.18963135402e-08,-7.10850996098e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245640331666,-0.000178464084646,9.81001099177,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121657750000,12617,121657750000,RH_EXTIMU,2.31807033149e-06,1.52910238717e-05,-0.703385661928,0.71080842029,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.81024713608e-08,-1.42020392449e-08,-7.1084330683e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245361599548,-0.00017739709036,9.81000567575,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121660250000,12618,121660250000,RH_EXTIMU,2.31824621709e-06,1.5291057199e-05,-0.703385725087,0.710808357791,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.21517344785e-08,1.18571194974e-07,-7.10836303686e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000242707066777,-0.000180744973077,9.81001658021,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121662750000,12619,121662750000,RH_EXTIMU,2.31818474674e-06,1.52912204235e-05,-0.703385788244,0.710808295292,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.25914282772e-07,5.8874633517e-08,-7.10827782304e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245230589002,-0.000175986018371,9.81001043834,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121665250000,12620,121665250000,RH_EXTIMU,2.31804454376e-06,1.52912717488e-05,-0.703385851402,0.710808232795,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.07718593748e-07,-4.90601074588e-08,-7.10820602763e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246129874846,-0.000177011529267,9.8099942445,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121667750000,12621,121667750000,RH_EXTIMU,2.31808332406e-06,1.52911907417e-05,-0.703385914558,0.710808170298,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.85241471223e-08,-2.3594958312e-08,-7.10814870103e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245506294347,-0.000180214068416,9.80998539674,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121670250000,12622,121670250000,RH_EXTIMU,2.31814337959e-06,1.5291049045e-05,-0.703385977714,0.710808107801,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.14772818291e-07,-4.61341651227e-08,-7.10808551726e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245966131796,-0.000180508556494,9.80999018144,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121672750000,12623,121672750000,RH_EXTIMU,2.31802631456e-06,1.52910031352e-05,-0.70338604087,0.710808045305,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.98462636033e-08,-9.13326259074e-08,-7.10801314341e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024685404872,-0.000177493345939,9.80998731386,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121675250000,12624,121675250000,RH_EXTIMU,2.3181395692e-06,1.52908786067e-05,-0.703386104024,0.71080798281,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.35363546124e-07,-6.43588926174e-09,-7.10793885539e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244845242083,-0.000181282389164,9.81001516888,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121677750000,12625,121677750000,RH_EXTIMU,2.3182163373e-06,1.52909519861e-05,-0.703386167178,0.710807920315,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.2511190688e-09,8.55723666161e-08,-7.10785483096e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243715469974,-0.000178748053651,9.81002246438,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121680250000,12626,121680250000,RH_EXTIMU,2.31811984613e-06,1.52910566001e-05,-0.703386230332,0.710807857821,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.12848156175e-07,5.83929633292e-09,-7.10779483882e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245233756545,-0.0001770666726,9.80998115633,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121685250000,12627,121682750000,RH_EXTIMU,2.31845140279e-06,1.52909668806e-05,-0.703386293485,0.710807795328,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.39912889244e-07,1.36198584649e-07,-7.10772409866e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243098242912,-0.000183013549761,9.81001925276,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121685250000,12628,121685250000,RH_EXTIMU,2.31823559421e-06,1.52910787316e-05,-0.703386356637,0.710807732835,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.8476986155e-07,-5.71864786967e-08,-7.1076428031e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024686605219,-0.000174799057644,9.80999452923,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121687750000,12629,121687750000,RH_EXTIMU,2.32618954284e-06,1.5292562392e-05,-0.703386419781,0.71080767035,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.68900169643e-06,5.32008425948e-06,-7.10677950122e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000156141198923,-0.000242468062611,9.81178683408,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121690250000,12630,121690250000,RH_EXTIMU,2.3075513571e-06,1.53052951272e-05,-0.703386482919,0.710807607871,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.7762470079e-05,-3.24680980269e-06,-7.10607845063e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00033355421828,0.0001561322201,9.80946508972,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121692750000,12631,121692750000,RH_EXTIMU,2.31269695785e-06,1.52976061496e-05,-0.703386546068,0.710807545381,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.2535726426e-06,-1.47618166313e-06,-7.10726871291e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000237555667925,-0.000371298284081,9.80910856937,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121695250000,12632,121695250000,RH_EXTIMU,2.31962735042e-06,1.52897828873e-05,-0.70338660922,0.710807482889,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.34405072098e-06,-5.48223268592e-07,-7.10756951847e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000255163332264,-0.000303304365965,9.80953978171,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121697750000,12633,121697750000,RH_EXTIMU,2.31971753433e-06,1.52886412321e-05,-0.703386672371,0.710807420398,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.94591085311e-07,-5.97803099423e-07,-7.10751527405e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000251555263183,-0.000171709257439,9.80984474309,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121700250000,12634,121700250000,RH_EXTIMU,2.31922260646e-06,1.52894396836e-05,-0.703386735521,0.710807357907,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.29846493386e-07,1.76182798177e-07,-7.10741003384e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000241336198945,-0.000161538207385,9.81000108649,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121702750000,12635,121702750000,RH_EXTIMU,2.31898275637e-06,1.52898971992e-05,-0.703386798669,0.710807295417,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.92949737821e-07,1.25845651249e-07,-7.10728794322e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244418510078,-0.000172226606021,9.81005076506,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121705250000,12636,121705250000,RH_EXTIMU,2.31859122173e-06,1.52902704824e-05,-0.703386861818,0.710807232928,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.31806145196e-07,-7.4071219628e-09,-7.10719048809e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245367387979,-0.000171819329491,9.81002245307,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121707750000,12637,121707750000,RH_EXTIMU,2.31850427023e-06,1.52903770124e-05,-0.703386924965,0.71080717044,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.08501707336e-07,1.22966416102e-08,-7.1071165266e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245248432342,-0.000177696512362,9.81000913808,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121710250000,12638,121710250000,RH_EXTIMU,2.31861543342e-06,1.52904287219e-05,-0.703386988112,0.710807107953,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.50033711052e-08,9.26042157451e-08,-7.10704540267e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024342746761,-0.000179575857891,9.8100095921,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121710250000,12639,121712750000,RH_EXTIMU,2.31856218834e-06,1.5290474877e-05,-0.703387051258,0.710807045466,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.53611492236e-08,-3.06840282794e-09,-7.1069529682e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245794687033,-0.000177580365053,9.81002374185,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121715250000,12640,121715250000,RH_EXTIMU,2.31830484216e-06,1.52904547654e-05,-0.703387114403,0.71080698298,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.34133517614e-07,-1.5560028015e-07,-7.10688328637e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247774590044,-0.000176817779568,9.80998312551,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121717750000,12641,121717750000,RH_EXTIMU,2.31861859013e-06,1.52903916958e-05,-0.703387177547,0.710806920494,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.14789604126e-07,1.41331978125e-07,-7.10681331846e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000242297182117,-0.000182533083506,9.81002502532,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121720250000,12642,121720250000,RH_EXTIMU,2.31846868424e-06,1.52904931569e-05,-0.703387240691,0.71080685801,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.41448170504e-07,-2.60108939962e-08,-7.10672780654e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246467283207,-0.000176026152331,9.81000495154,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121722750000,12643,121722750000,RH_EXTIMU,2.3184725556e-06,1.52904355236e-05,-0.703387303835,0.710806795525,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.55205269573e-08,-2.99472362992e-08,-7.10665541536e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245053377067,-0.000179907658666,9.81000816647,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121725250000,12644,121725250000,RH_EXTIMU,2.31859200138e-06,1.52904986537e-05,-0.703387366977,0.710806733042,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.32866592494e-08,1.03759145041e-07,-7.10658248161e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243376904983,-0.000179412087248,9.81001084972,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121727750000,12645,121727750000,RH_EXTIMU,2.31848359124e-06,1.5290483332e-05,-0.703387430119,0.710806670559,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.21369970714e-08,-6.90688607756e-08,-7.10650552421e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247083614757,-0.000177606882536,9.80999716334,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121730250000,12646,121730250000,RH_EXTIMU,2.31848090505e-06,1.52904972664e-05,-0.70338749326,0.710806608077,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.48026225221e-09,7.05938934162e-09,-7.10644462703e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244658747787,-0.000178606006066,9.80999191368,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121732750000,12647,121732750000,RH_EXTIMU,2.31856649419e-06,1.5290458041e-05,-0.703387556401,0.710806545595,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.16306321793e-08,2.65037240357e-08,-7.10637896877e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245003748241,-0.000179923515229,9.80999512805,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121735250000,12648,121735250000,RH_EXTIMU,2.3187975268e-06,1.52903077291e-05,-0.703387619541,0.710806483114,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.16845853645e-07,4.51774022781e-08,-7.10630350394e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244160995653,-0.000183129056234,9.81002094185,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121737750000,12649,121737750000,RH_EXTIMU,2.31859223185e-06,1.52904340871e-05,-0.70338768268,0.710806420634,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.86954653818e-07,-4.3021536271e-08,-7.10620601029e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246609110702,-0.0001743073706,9.81001567407,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121740250000,12650,121740250000,RH_EXTIMU,2.31856137758e-06,1.52905455286e-05,-0.703387745819,0.710806358154,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.93661665945e-08,4.66558119345e-08,-7.10613767429e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243798693846,-0.000178096803309,9.81000620109,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121742750000,12651,121742750000,RH_EXTIMU,2.31850672801e-06,1.52905776556e-05,-0.703387808957,0.710806295675,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.82661653195e-08,-1.183586309e-08,-7.10607240914e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246383938911,-0.000177604759924,9.80998517799,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121745250000,12652,121745250000,RH_EXTIMU,2.31862106345e-06,1.52903862516e-05,-0.703387872095,0.710806233197,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.7360948057e-07,-4.38560467133e-08,-7.10601538388e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245200516581,-0.000182269401622,9.809990125,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121747750000,12653,121747750000,RH_EXTIMU,2.31887226092e-06,1.52902913034e-05,-0.703387935231,0.710806170719,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.97158718216e-07,8.80067084032e-08,-7.1059423316e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024360595247,-0.00018221843443,9.81001683062,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121750250000,12654,121750250000,RH_EXTIMU,2.31871407744e-06,1.52904202835e-05,-0.703387998367,0.710806108242,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.61640473149e-07,-1.50204962282e-08,-7.1058472369e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246072531388,-0.000174976278755,9.81001619426,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121752750000,12655,121752750000,RH_EXTIMU,2.31856524662e-06,1.52905276983e-05,-0.703388061503,0.710806045765,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.4418711909e-07,-2.2020660834e-08,-7.10577183331e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024559344712,-0.000176593251038,9.81000358633,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121755250000,12656,121755250000,RH_EXTIMU,2.31867194052e-06,1.52904506222e-05,-0.703388124638,0.710805983289,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.04930588562e-07,1.68560238676e-08,-7.10570598973e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244549095586,-0.000181221554362,9.81000346019,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121757750000,12657,121757750000,RH_EXTIMU,2.31863248333e-06,1.52904070724e-05,-0.703388187772,0.710805920814,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.95697320139e-09,-4.63202387084e-08,-7.1056262325e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246390133041,-0.000178346552426,9.81000436515,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121760250000,12658,121760250000,RH_EXTIMU,2.31863211768e-06,1.52904348382e-05,-0.703388250905,0.710805858339,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.49438747347e-08,1.62302172282e-08,-7.10556022409e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244629143498,-0.000178542953714,9.80999767329,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121762750000,12659,121762750000,RH_EXTIMU,2.31869754033e-06,1.52903949345e-05,-0.703388314038,0.710805795865,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0544651841e-08,1.47700635008e-08,-7.10549294332e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024519866827,-0.000179855019976,9.80999663919,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121765250000,12660,121765250000,RH_EXTIMU,2.31886432229e-06,1.52902787109e-05,-0.70338837717,0.710805733392,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.61128068281e-07,2.84071394496e-08,-7.10542216287e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244434945885,-0.000181856081417,9.81001023069,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121767750000,12661,121767750000,RH_EXTIMU,2.31871313528e-06,1.52903940392e-05,-0.703388440301,0.710805670919,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.49980037271e-07,-1.8846639668e-08,-7.10534066854e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246153319389,-0.000175095197814,9.8099985253,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121770250000,12662,121770250000,RH_EXTIMU,2.31873167639e-06,1.52903849051e-05,-0.703388503432,0.710805608447,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.65713022112e-08,5.8862743388e-09,-7.10528055501e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244774588764,-0.000179595344169,9.80999447933,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121772750000,12663,121772750000,RH_EXTIMU,2.31879499783e-06,1.52903399401e-05,-0.703388566563,0.710805545976,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.21977958966e-08,1.07096209544e-08,-7.10520881601e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245121837421,-0.000179746504936,9.81000171916,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121775250000,12664,121775250000,RH_EXTIMU,2.31869666078e-06,1.52902697718e-05,-0.703388629692,0.710805483505,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.55462500421e-08,-9.45890808913e-08,-7.10514399281e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246884907142,-0.00017835538123,9.80998114762,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121777750000,12665,121777750000,RH_EXTIMU,2.31886078487e-06,1.52901528168e-05,-0.703388692821,0.710805421034,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.60028181452e-07,2.64956571332e-08,-7.10506849197e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244585193936,-0.000181311600379,9.8100163274,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121780250000,12666,121780250000,RH_EXTIMU,2.31878287353e-06,1.52902212712e-05,-0.70338875595,0.710805358565,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.19358464274e-08,-4.26828782885e-09,-7.10498759051e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245263962822,-0.000177189874876,9.8100079543,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121782750000,12667,121782750000,RH_EXTIMU,2.31877542742e-06,1.52902570866e-05,-0.703388819077,0.710805296096,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.34998186409e-08,1.68232221378e-08,-7.10491656458e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244970706132,-0.000178472156626,9.81000245645,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121785250000,12668,121785250000,RH_EXTIMU,2.31878976156e-06,1.5290256031e-05,-0.703388882204,0.710805233628,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.63310914983e-09,8.11272601525e-09,-7.10484129691e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245184804778,-0.000178894954784,9.81000674431,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121787750000,12669,121787750000,RH_EXTIMU,2.31884701119e-06,1.52903173335e-05,-0.703388945331,0.71080517116,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.05291054474e-09,6.77213648478e-08,-7.10477241949e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243968751514,-0.000178777507193,9.8100032665,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121790250000,12670,121790250000,RH_EXTIMU,2.31889491544e-06,1.52903362884e-05,-0.703389008456,0.710805108693,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.74623940547e-08,3.83818528328e-08,-7.10470268492e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024484433596,-0.000179071687248,9.8099999146,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121797750000,12671,121792750000,RH_EXTIMU,2.3189075947e-06,1.52902499573e-05,-0.703389071581,0.710805046226,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.66775062903e-08,-4.13099079573e-08,-7.10462767945e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246156747452,-0.000179731457741,9.81000256983,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121797750000,12672,121795250000,RH_EXTIMU,2.31873607438e-06,1.52902167143e-05,-0.703389134706,0.71080498376,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.79397454904e-08,-1.14772868937e-07,-7.10456055655e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246946029223,-0.000177162558987,9.80998441128,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121797750000,12673,121797750000,RH_EXTIMU,2.31893386434e-06,1.52900666778e-05,-0.70338919783,0.710804921295,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.97787324757e-07,2.66282802669e-08,-7.10449951335e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244455173733,-0.000182435662124,9.81000056946,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121800250000,12674,121800250000,RH_EXTIMU,2.31891137071e-06,1.52900706887e-05,-0.703389260953,0.71080485883,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.41598591596e-08,-9.72965242224e-09,-7.10441935158e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245538202202,-0.00017792639991,9.81000509976,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121802750000,12675,121802750000,RH_EXTIMU,2.3189297855e-06,1.52901111688e-05,-0.703389324076,0.710804796366,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.14191163264e-08,3.40278846294e-08,-7.10434702991e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244402619849,-0.000178670479582,9.81000643006,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121805250000,12676,121805250000,RH_EXTIMU,2.31911213788e-06,1.52901251606e-05,-0.703389387197,0.710804733903,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.67081647774e-08,1.11215127297e-07,-7.1042728925e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243299642751,-0.000180911994149,9.81001811032,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121807750000,12677,121807750000,RH_EXTIMU,2.31886815795e-06,1.52902484314e-05,-0.703389450319,0.71080467144,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.07215548547e-07,-6.6546232672e-08,-7.10418801634e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247551987412,-0.000174020724144,9.80999543957,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121810250000,12678,121810250000,RH_EXTIMU,2.31891683775e-06,1.52901217081e-05,-0.703389513439,0.710804608978,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.98780884308e-08,-4.40207535691e-08,-7.10412757906e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245061582798,-0.000181592459235,9.80999880795,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121812750000,12679,121812750000,RH_EXTIMU,2.31894827993e-06,1.52900914981e-05,-0.703389576559,0.710804546517,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.57668826036e-08,1.16109122369e-09,-7.10405228438e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245239983728,-0.000178831885042,9.81000260871,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121815250000,12680,121815250000,RH_EXTIMU,2.3189057915e-06,1.52900804049e-05,-0.703389639678,0.710804484056,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.70305331773e-08,-2.95699075505e-08,-7.10397575189e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245846989488,-0.000178379538663,9.81000481777,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121817750000,12681,121817750000,RH_EXTIMU,2.31891748874e-06,1.52900793692e-05,-0.703389702797,0.710804421596,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.12228146859e-09,6.64018544928e-09,-7.10391192341e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244897000597,-0.000179003687357,9.80999317859,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121820250000,12682,121820250000,RH_EXTIMU,2.319137211e-06,1.52900055194e-05,-0.703389765915,0.710804359136,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.67387735988e-07,8.22929937454e-08,-7.10384770547e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243594941958,-0.000181984795864,9.81000414629,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121822750000,12683,121822750000,RH_EXTIMU,2.31911564824e-06,1.52900254194e-05,-0.703389829032,0.710804296677,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.25715285489e-08,-1.70737399319e-10,-7.10377136336e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246062087856,-0.000177582418987,9.8099989695,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121825250000,12684,121825250000,RH_EXTIMU,2.31907800045e-06,1.52899991994e-05,-0.703389892149,0.710804234219,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.76596617521e-09,-3.54477765167e-08,-7.10370263757e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245481629966,-0.000178808150334,9.80999583428,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121827750000,12685,121827750000,RH_EXTIMU,2.31913390865e-06,1.52899632715e-05,-0.703389955265,0.710804171761,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.28967836833e-08,1.16769567275e-08,-7.1036397338e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245024208477,-0.000179545912843,9.80999286381,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121830250000,12686,121830250000,RH_EXTIMU,2.31930723415e-06,1.52898785937e-05,-0.703390018381,0.710804109304,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.4709753648e-07,5.00277104307e-08,-7.10356780418e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244158162114,-0.000181643748248,9.81001295217,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121832750000,12687,121832750000,RH_EXTIMU,2.3191310371e-06,1.5289945084e-05,-0.703390081496,0.710804046847,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.367202965e-07,-6.06920462868e-08,-7.10348305253e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246694275141,-0.000175661095671,9.810000483,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121835250000,12688,121835250000,RH_EXTIMU,2.31915349183e-06,1.52899695022e-05,-0.70339014461,0.710803984391,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.37662526697e-11,2.71676169483e-08,-7.10341417248e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244500071136,-0.000178933911224,9.81000530509,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121837750000,12689,121837750000,RH_EXTIMU,2.3191369834e-06,1.52899574096e-05,-0.703390207724,0.710803921936,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.69490358368e-09,-1.55189759382e-08,-7.10334211616e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245656030323,-0.000178731204599,9.80999846143,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121840250000,12690,121840250000,RH_EXTIMU,2.31904909244e-06,1.52899580744e-05,-0.703390270836,0.710803859481,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.94647882232e-08,-4.84324656551e-08,-7.10327480557e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246157375617,-0.000177436263123,9.80998762735,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121842750000,12691,121842750000,RH_EXTIMU,2.31919039668e-06,1.52898392134e-05,-0.703390333949,0.710803797027,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.48124044901e-07,1.25710200067e-08,-7.10321553232e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244611436361,-0.000181851163075,9.80999670871,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121845250000,12692,121845250000,RH_EXTIMU,2.31925446803e-06,1.52898009417e-05,-0.703390397061,0.710803734574,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.88575540194e-08,1.49375993964e-08,-7.10313230247e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245179375726,-0.000179210471158,9.8100137094,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121847750000,12693,121847750000,RH_EXTIMU,2.31924720244e-06,1.52898089907e-05,-0.703390460172,0.710803672121,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.77295829748e-09,1.13538199315e-09,-7.10305554027e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245219868843,-0.000178740024421,9.81000801036,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121850250000,12694,121850250000,RH_EXTIMU,2.31934330459e-06,1.52898988587e-05,-0.703390523282,0.710803609669,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.96576174599e-09,1.05827525244e-07,-7.10296993157e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243399917326,-0.000178741793637,9.81003053282,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121852750000,12695,121852750000,RH_EXTIMU,2.31898760342e-06,1.52900239121e-05,-0.703390586391,0.710803547217,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.71748203323e-07,-1.28399952374e-07,-7.10290378089e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247650225985,-0.000174173278482,9.80997151698,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121855250000,12696,121855250000,RH_EXTIMU,2.31929160336e-06,1.52898133605e-05,-0.7033906495,0.710803484766,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.92235218728e-07,5.19827201526e-08,-7.10284994562e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243730734224,-0.000184450948622,9.80999952661,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121857750000,12697,121857750000,RH_EXTIMU,2.31919222706e-06,1.52897574741e-05,-0.703390712609,0.710803422316,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.41738453598e-08,-8.70528929801e-08,-7.10277544382e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247240596577,-0.000177407472603,9.80998721066,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121860250000,12698,121860250000,RH_EXTIMU,2.31941468625e-06,1.52896940313e-05,-0.703390775717,0.710803359866,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.63087676413e-07,8.97510539348e-08,-7.10270398471e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243391784023,-0.000181619057908,9.81001777732,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121862750000,12699,121862750000,RH_EXTIMU,2.31931383674e-06,1.52897864771e-05,-0.703390838824,0.710803297417,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.08479987575e-07,-3.53387732362e-09,-7.10262815934e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245505677437,-0.00017663508675,9.80999874255,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121865250000,12700,121865250000,RH_EXTIMU,2.31924113838e-06,1.52897708712e-05,-0.703390901931,0.710803234969,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.16699599298e-08,-4.91357080052e-08,-7.10257089715e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246031057822,-0.000178315855682,9.80997776448,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121865250000,12701,121867750000,RH_EXTIMU,2.31952146354e-06,1.52895596709e-05,-0.703390965037,0.710803172521,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.79137719686e-07,3.82917814585e-08,-7.1025041313e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244290136119,-0.000183998298227,9.81001127721,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121870250000,12702,121870250000,RH_EXTIMU,2.31936867155e-06,1.52896717524e-05,-0.703391028142,0.710803110074,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.49066008244e-07,-2.15969132334e-08,-7.10241028462e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245921901879,-0.000174870703027,9.81001344442,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121872750000,12703,121872750000,RH_EXTIMU,2.31930032541e-06,1.52898352214e-05,-0.703391091246,0.710803047627,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.29962844483e-07,5.51428781833e-08,-7.10233879009e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244164488125,-0.000176885651886,9.81000657211,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121875250000,12704,121875250000,RH_EXTIMU,2.31931002438e-06,1.52898570806e-05,-0.70339115435,0.710802985181,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.89745110222e-09,1.85345435581e-08,-7.10226721891e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245158065239,-0.000178844805301,9.81000131,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121877750000,12705,121877750000,RH_EXTIMU,2.31933029928e-06,1.52898245492e-05,-0.703391217454,0.710802922736,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.07226995636e-08,-6.44301147972e-09,-7.10219705174e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245381378757,-0.000179277152527,9.80999953523,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121880250000,12706,121880250000,RH_EXTIMU,2.31942479422e-06,1.52897210357e-05,-0.703391280556,0.710802860291,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.12869972185e-07,-5.04192401959e-09,-7.1021404418e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024524483744,-0.000180905102805,9.8099842802,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121885250000,12707,121882750000,RH_EXTIMU,2.31947845306e-06,1.52896072404e-05,-0.703391343659,0.710802797847,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.5434484518e-08,-3.38675555333e-08,-7.10207513378e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245842391664,-0.000179960567018,9.80999134577,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121885250000,12708,121885250000,RH_EXTIMU,2.31948753803e-06,1.52895068699e-05,-0.70339140676,0.710802735403,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.25336261078e-08,-5.13160038525e-08,-7.1019956964e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246126720498,-0.000179542961579,9.81000718586,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121887750000,12709,121887750000,RH_EXTIMU,2.31950101904e-06,1.52895989957e-05,-0.703391469861,0.710802672961,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.32868437175e-08,6.06192527269e-08,-7.10192697709e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243782294727,-0.00017786180667,9.8100030521,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121890250000,12710,121890250000,RH_EXTIMU,2.31953639053e-06,1.52896123604e-05,-0.703391532961,0.710802610518,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.34808907462e-08,2.81504429117e-08,-7.10185388523e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245186245484,-0.000179092221567,9.81000359168,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121892750000,12711,121892750000,RH_EXTIMU,2.3194873017e-06,1.5289565326e-05,-0.703391596061,0.710802548077,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.59422761427e-10,-5.37219883555e-08,-7.1017769372e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246172521422,-0.000178612122654,9.810002505,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121895250000,12712,121895250000,RH_EXTIMU,2.31948054575e-06,1.52895368525e-05,-0.703391659159,0.710802485636,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.30684204363e-08,-1.93462673436e-08,-7.1017101248e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245329650283,-0.000178995664586,9.809995711,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121897750000,12713,121897750000,RH_EXTIMU,2.31953415087e-06,1.52895345924e-05,-0.703391722258,0.710802423195,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.26415206172e-08,2.95258356636e-08,-7.10163153558e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244866229578,-0.000178960460101,9.81001148398,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121900250000,12714,121900250000,RH_EXTIMU,2.31950654078e-06,1.52895509254e-05,-0.703391785355,0.710802360755,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.40033930239e-08,-5.60229215619e-09,-7.10156125762e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245225375857,-0.00017855622182,9.80999983689,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121902750000,12715,121902750000,RH_EXTIMU,2.31942060475e-06,1.52894916178e-05,-0.703391848452,0.710802298316,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.46059910238e-08,-8.14355031779e-08,-7.10148995055e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246691486899,-0.000178392573407,9.8099929584,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121905250000,12716,121905250000,RH_EXTIMU,2.3195684758e-06,1.52894127952e-05,-0.703391911549,0.710802235878,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.29327851861e-07,3.90338254516e-08,-7.10142399396e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243912743835,-0.000181262550546,9.81000443017,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121907750000,12717,121907750000,RH_EXTIMU,2.31953670436e-06,1.52894555141e-05,-0.703391974644,0.71080217344,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.12174687707e-08,7.06018123001e-09,-7.10135144797e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245921843226,-0.000177264404084,9.80999533562,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121910250000,12718,121910250000,RH_EXTIMU,2.31961064791e-06,1.52893836189e-05,-0.703392037739,0.710802111003,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.33914383241e-08,1.37302733296e-09,-7.1012889841e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244839520947,-0.000180587595555,9.80999434799,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121912750000,12719,121912750000,RH_EXTIMU,2.31970951065e-06,1.52893377282e-05,-0.703392100834,0.710802048566,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.29283668257e-08,3.01826880342e-08,-7.10121634914e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244769082121,-0.000179906666475,9.81000579741,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121915250000,12720,121915250000,RH_EXTIMU,2.31960262558e-06,1.52894376333e-05,-0.703392163928,0.71080198613,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.16109641956e-07,-2.68891678104e-09,-7.10114854628e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245224474733,-0.000176426560331,9.80999033401,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121917750000,12721,121917750000,RH_EXTIMU,2.31973398504e-06,1.52893415795e-05,-0.703392227021,0.710801923694,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.29634780104e-07,1.99442319874e-08,-7.10106997387e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245169881133,-0.000181123936306,9.81001506666,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121920250000,12722,121920250000,RH_EXTIMU,2.31953929457e-06,1.52893475874e-05,-0.703392290114,0.710801861259,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.13202179631e-07,-1.05492134308e-07,-7.10099578989e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246928141572,-0.000176557912353,9.80999176408,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121922750000,12723,121922750000,RH_EXTIMU,2.31962973083e-06,1.52893175438e-05,-0.703392353205,0.710801798825,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.92192684997e-08,3.44523310667e-08,-7.10093369041e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244309183308,-0.000179987596063,9.80999617612,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121925250000,12724,121925250000,RH_EXTIMU,2.31988229247e-06,1.52892217007e-05,-0.703392416297,0.710801736391,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.9843686407e-07,8.82661079337e-08,-7.10086761451e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243539239139,-0.000182674437725,9.81000979523,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121927750000,12725,121927750000,RH_EXTIMU,2.31972945514e-06,1.52893295215e-05,-0.703392479387,0.710801673958,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.46694365718e-07,-2.40457440932e-08,-7.10078024928e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246484805184,-0.000174960710298,9.81000449183,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121932750000,12726,121930250000,RH_EXTIMU,2.31964955963e-06,1.52893792757e-05,-0.703392542477,0.710801611526,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.25417364856e-08,-1.601947273e-08,-7.10071044146e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245117043424,-0.000177953973956,9.81000134663,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121932750000,12727,121932750000,RH_EXTIMU,2.31965927428e-06,1.52893135163e-05,-0.703392605567,0.710801549094,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.34154043357e-08,-3.12803552036e-08,-7.10064575128e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245780389436,-0.000179641807651,9.80999007032,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121935250000,12728,121935250000,RH_EXTIMU,2.31982780303e-06,1.52892181226e-05,-0.703392668655,0.710801486663,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.50399319972e-07,4.12352314278e-08,-7.10057420712e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244453074992,-0.000181221684927,9.81000966645,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121937750000,12729,121937750000,RH_EXTIMU,2.3198384015e-06,1.52892940881e-05,-0.703392731744,0.710801424233,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.58326303289e-08,4.98075638678e-08,-7.10051245816e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244292167935,-0.000177979354155,9.80998851093,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121941500000,12730,121940250000,RH_EXTIMU,2.31994648972e-06,1.52892053752e-05,-0.703392794831,0.710801361803,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.12270944266e-07,1.10234818849e-08,-7.10042304961e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024557565247,-0.000180490463788,9.81002671347,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121941500000,12731,121942750000,RH_EXTIMU,2.31970018677e-06,1.52893250367e-05,-0.703392857918,0.710801299374,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.06505712187e-07,-6.99072159466e-08,-7.10035221262e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246348136636,-0.000175034673428,9.80998783895,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121945250000,12732,121945250000,RH_EXTIMU,2.31970696924e-06,1.5289270916e-05,-0.703392921004,0.710801236945,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.51987492027e-08,-2.63121206258e-08,-7.1002952218e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245294148708,-0.000179338232213,9.80998138196,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121947750000,12733,121947750000,RH_EXTIMU,2.31994115114e-06,1.52891456936e-05,-0.70339298409,0.710801174517,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.04517353006e-07,6.12174380915e-08,-7.10024480593e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244162839177,-0.000182487137946,9.80998710372,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121950250000,12734,121950250000,RH_EXTIMU,2.32004674618e-06,1.52889907072e-05,-0.703393047175,0.710801112089,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.48146261722e-07,-2.80653266802e-08,-7.10014656324e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246173328537,-0.000180694229381,9.81003146677,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121952750000,12735,121952750000,RH_EXTIMU,2.31967730437e-06,1.52891729225e-05,-0.703393110259,0.710801049662,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.11727482202e-07,-1.03628657296e-07,-7.10007434053e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246477080044,-0.000173110294329,9.80998588096,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121955250000,12736,121955250000,RH_EXTIMU,2.31998222471e-06,1.52891056225e-05,-0.703393173343,0.710800987236,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.12148295926e-07,1.33960047943e-07,-7.10001572759e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000242283810265,-0.000183355552575,9.81000902244,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121957750000,12737,121957750000,RH_EXTIMU,2.31992699345e-06,1.52891078037e-05,-0.703393236426,0.71080092481,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.17466939268e-08,-2.91926510215e-08,-7.09993831297e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246742620249,-0.000177398386568,9.80999425477,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121962750000,12738,121960250000,RH_EXTIMU,2.31998834811e-06,1.52890467589e-05,-0.703393299508,0.710800862385,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.01269797691e-08,4.5908019407e-10,-7.09986382619e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245091552122,-0.000179965696432,9.81001076487,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121962750000,12739,121962750000,RH_EXTIMU,2.31983053529e-06,1.52891071695e-05,-0.70339336259,0.710800799961,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.22845268197e-07,-5.38052439665e-08,-7.09978896895e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246310925608,-0.000176118264956,9.80999437977,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121965250000,12740,121965250000,RH_EXTIMU,2.31985864771e-06,1.52890558731e-05,-0.703393425671,0.710800737537,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.57385135022e-08,-1.27034861132e-08,-7.09972679158e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245058152557,-0.00017994345542,9.80999411334,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121967750000,12741,121967750000,RH_EXTIMU,2.31991174363e-06,1.52889686653e-05,-0.703393488751,0.710800675114,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.01530051768e-08,-1.90655907593e-08,-7.09965519052e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245611458931,-0.00017995201589,9.80999944878,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121970250000,12742,121970250000,RH_EXTIMU,2.31995862526e-06,1.52889719946e-05,-0.703393551831,0.710800612692,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.56727755535e-08,2.89205616253e-08,-7.09959518213e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024448968809,-0.000179067829726,9.8099889151,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121972750000,12743,121972750000,RH_EXTIMU,2.3201187133e-06,1.52889232506e-05,-0.703393614911,0.71080055027,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.19348857178e-07,6.30125623473e-08,-7.09951555038e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244451999967,-0.00018057917496,9.81001845767,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121975250000,12744,121975250000,RH_EXTIMU,2.32000989168e-06,1.52890045132e-05,-0.703393677989,0.710800487849,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.06720619705e-07,-1.43799839806e-08,-7.09943364975e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024557065154,-0.00017674170948,9.81000797102,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121977750000,12745,121977750000,RH_EXTIMU,2.31986584278e-06,1.52890642108e-05,-0.703393741067,0.710800425428,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.14617426364e-07,-4.64655547386e-08,-7.09936418165e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246208402123,-0.000176524237847,9.80998970266,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121980250000,12746,121980250000,RH_EXTIMU,2.31996172768e-06,1.52889450604e-05,-0.703393804144,0.710800363008,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.22459104796e-07,-1.31514513969e-08,-7.09930861776e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024505023021,-0.000181350082954,9.80998857924,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121982750000,12747,121982750000,RH_EXTIMU,2.3203053042e-06,1.52888386102e-05,-0.703393867221,0.710800300588,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.56159943803e-07,1.33450191742e-07,-7.09923695391e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000242968304954,-0.000183068251344,9.81001769385,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121985250000,12748,121985250000,RH_EXTIMU,2.32026465083e-06,1.52889115574e-05,-0.703393930297,0.71080023817,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.32783067754e-08,1.92508347638e-08,-7.0991573428e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245242667104,-0.000177318254737,9.81000571645,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121987750000,12749,121987750000,RH_EXTIMU,2.32024721037e-06,1.52889373589e-05,-0.703393993373,0.710800175751,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.35488771058e-08,5.50409996742e-09,-7.09908524519e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245190514969,-0.000178412301072,9.81000242,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121990250000,12750,121990250000,RH_EXTIMU,2.3202752221e-06,1.52889123755e-05,-0.703394056447,0.710800113334,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.08744732856e-08,2.20242507758e-09,-7.09901195627e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245247839125,-0.000179294458356,9.81000417289,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121992750000,12751,121992750000,RH_EXTIMU,2.32026616752e-06,1.52888976284e-05,-0.703394119521,0.710800050917,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.03696130183e-09,-1.28346130739e-08,-7.09893965518e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245424101961,-0.000178737325395,9.81000115254,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121995250000,12752,121995250000,RH_EXTIMU,2.32027595048e-06,1.52888788525e-05,-0.703394182595,0.710799988501,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.70157601827e-08,-4.52533743266e-09,-7.09886906072e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245268218971,-0.000178981482188,9.81000029921,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+121997750000,12753,121997750000,RH_EXTIMU,2.32029160355e-06,1.52888568927e-05,-0.703394245668,0.710799926085,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.21454030447e-08,-3.03268417098e-09,-7.09879837028e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245273608962,-0.000179040000512,9.81000005453,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122000250000,12754,122000250000,RH_EXTIMU,2.32030646067e-06,1.52888351941e-05,-0.70339430874,0.71079986367,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.15457668284e-08,-3.33201197972e-09,-7.09872752851e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245280450574,-0.000179016207334,9.8100001112,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122002750000,12755,122002750000,RH_EXTIMU,2.32031982028e-06,1.52888150487e-05,-0.703394371811,0.710799801255,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.98202621821e-08,-3.2915366079e-09,-7.09865659576e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245278753825,-0.000178984661905,9.81000020981,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122007750000,12756,122005250000,RH_EXTIMU,2.32033220152e-06,1.52887960371e-05,-0.703394434882,0.710799738842,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.8625823884e-08,-3.1972812268e-09,-7.09858559202e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024527741438,-0.000178965612734,9.81000027075,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122007750000,12757,122007750000,RH_EXTIMU,2.32012531981e-06,1.52887913014e-05,-0.703394497953,0.710799676428,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.14089025931e-07,-1.18462182055e-07,-7.09850987612e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247294504513,-0.000176384545507,9.8099923155,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122007750000,12758,122010250000,RH_EXTIMU,2.32017519727e-06,1.52887437855e-05,-0.703394561022,0.710799614016,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.59874922403e-08,1.69370890739e-09,-7.09844680084e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244778128975,-0.000179829170738,9.80999564671,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122012750000,12759,122012750000,RH_EXTIMU,2.3202415197e-06,1.52887014013e-05,-0.703394624091,0.710799551604,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.24510521822e-08,1.3865634882e-08,-7.09837871545e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245049139075,-0.000179640876367,9.80999780279,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122015250000,12760,122015250000,RH_EXTIMU,2.32013088046e-06,1.52886996739e-05,-0.70339468716,0.710799489192,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.10545547066e-08,-6.25944522817e-08,-7.09830981226e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246671360424,-0.000177067287049,9.80998448045,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122017750000,12761,122017750000,RH_EXTIMU,2.32031360294e-06,1.52885399677e-05,-0.703394750228,0.710799426782,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.94659624979e-07,1.26518528719e-08,-7.09823890446e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244577766864,-0.000182480302781,9.8100140709,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122020250000,12762,122020250000,RH_EXTIMU,2.32026178844e-06,1.52885819064e-05,-0.703394813295,0.710799364372,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.21761378416e-08,-4.66257106788e-09,-7.09815836658e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245196002236,-0.000177548938806,9.81000813918,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122022750000,12763,122022750000,RH_EXTIMU,2.31991514634e-06,1.52887351567e-05,-0.703394876361,0.710799301962,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.82463542641e-07,-1.072705802e-07,-7.09809163988e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247792108139,-0.000172733848103,9.80996718627,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122025250000,12764,122025250000,RH_EXTIMU,2.32033193963e-06,1.52883760407e-05,-0.703394939427,0.710799239553,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.39972571376e-07,3.09749712563e-08,-7.098060286e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243303167702,-0.000188361454021,9.80998496324,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122029000000,12765,122027750000,RH_EXTIMU,2.32054428509e-06,1.52882258802e-05,-0.703395002493,0.710799177144,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.06132880218e-07,3.47492348202e-08,-7.09797437038e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245020463159,-0.000181128137785,9.81001631552,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122030250000,12766,122030250000,RH_EXTIMU,2.32037207351e-06,1.52883766541e-05,-0.703395065557,0.710799114737,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.8188198683e-07,-1.05240395525e-08,-7.09788140691e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245707227338,-0.000174832569849,9.81001832473,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122032750000,12767,122032750000,RH_EXTIMU,2.32025204167e-06,1.52885181131e-05,-0.703395128621,0.71079905233,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.46968889456e-07,1.35415048983e-08,-7.09780780198e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244771548612,-0.000176480502638,9.81000142281,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122035250000,12768,122035250000,RH_EXTIMU,2.32037243414e-06,1.52884769828e-05,-0.703395191685,0.710798989923,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.24916941693e-08,4.50047293953e-08,-7.09775300622e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024467713535,-0.000180719311009,9.80998887187,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122040250000,12769,122037750000,RH_EXTIMU,2.32047819872e-06,1.52883475113e-05,-0.703395254748,0.710798927517,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.33884739726e-07,-1.34609154596e-08,-7.09768512325e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245531899353,-0.000180898770161,9.80999860955,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122040250000,12770,122040250000,RH_EXTIMU,2.32042921933e-06,1.52883886792e-05,-0.70339531781,0.710798865112,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.01302714632e-08,-3.5056614186e-09,-7.09760681962e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245116059624,-0.000177294470557,9.81000385362,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122040250000,12771,122042750000,RH_EXTIMU,2.33000353267e-06,1.5285620269e-05,-0.70339538087,0.710798802708,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.0030453594e-06,3.81404166318e-06,-7.09736816575e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00016043382686,-0.000333772406287,9.81115629506,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122045250000,12772,122045250000,RH_EXTIMU,2.31530119178e-06,1.52941887954e-05,-0.703395443925,0.71079874031,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.31810871861e-05,-3.40020279074e-06,-7.09685730011e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000334697746113,8.88796122022e-05,9.80923609281,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122047750000,12773,122047750000,RH_EXTIMU,2.31924725821e-06,1.52901294545e-05,-0.703395506985,0.710798677907,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.52903187878e-06,-8.71366436255e-08,-7.09737943764e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000236138757043,-0.000277884361811,9.80972348144,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122050250000,12774,122050250000,RH_EXTIMU,2.32107159027e-06,1.52877492958e-05,-0.703395570046,0.710798615503,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.37762775151e-06,-3.2622303567e-07,-7.09739286499e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000250638276778,-0.000210214639607,9.80985157919,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122052750000,12775,122052750000,RH_EXTIMU,2.32138382359e-06,1.52874013636e-05,-0.703395633105,0.7107985531,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.74222292256e-07,-2.15028497184e-08,-7.09731437553e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244415870879,-0.000179698392626,9.80999131893,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122055250000,12776,122055250000,RH_EXTIMU,2.32093073207e-06,1.52878862789e-05,-0.703395696164,0.710798490698,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.29628189135e-07,2.14256554434e-08,-7.09722021794e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244935626803,-0.000167983460732,9.80999954715,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122057750000,12777,122057750000,RH_EXTIMU,2.32078345861e-06,1.52880976734e-05,-0.703395759222,0.710798428297,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.01813492789e-07,3.79799940381e-08,-7.097145884e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244954086683,-0.00017547847424,9.80999899823,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122060250000,12778,122060250000,RH_EXTIMU,2.32101225121e-06,1.52880115488e-05,-0.703395822279,0.710798365896,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.79451120328e-07,8.04177630398e-08,-7.09708120425e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243470714988,-0.000182893612002,9.81001188869,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122062750000,12779,122062750000,RH_EXTIMU,2.32090475458e-06,1.52879809255e-05,-0.703395885336,0.710798303497,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.30074043709e-08,-7.72576643249e-08,-7.09699195258e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247344185771,-0.000177180353472,9.81000585463,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122062750000,12780,122065250000,RH_EXTIMU,2.320838425e-06,1.52879781967e-05,-0.703395948392,0.710798241097,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.52949760426e-08,-3.82303699745e-08,-7.09692114186e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245459998896,-0.000178182993975,9.81000232978,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122062750000,12781,122067750000,RH_EXTIMU,2.32096102325e-06,1.52879730961e-05,-0.703396011447,0.710798178698,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.34713517445e-08,6.67337610424e-08,-7.09685288799e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024371241494,-0.000180397287024,9.81001036927,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122070250000,12782,122070250000,RH_EXTIMU,2.3208653402e-06,1.52880876627e-05,-0.703396074502,0.710798116301,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.17990580239e-07,1.19506000429e-08,-7.09676186553e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245586792788,-0.000175985620165,9.8100145336,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122072750000,12783,122072750000,RH_EXTIMU,2.32083910188e-06,1.5288168252e-05,-0.703396137556,0.710798053903,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.93820314164e-08,3.17074997947e-08,-7.0966990731e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244530821059,-0.000178078007032,9.80999400569,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122075250000,12784,122075250000,RH_EXTIMU,2.32093392845e-06,1.52881011917e-05,-0.703396200609,0.710797991506,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.25450138352e-08,1.58735348554e-08,-7.09663318879e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0002451687161,-0.000180343507432,9.80999725461,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122077750000,12785,122077750000,RH_EXTIMU,2.32086179723e-06,1.52881077952e-05,-0.703396263662,0.71079792911,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.3845473703e-08,-3.61883828795e-08,-7.09656535858e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245809862647,-0.000177572107309,9.80998994632,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122080250000,12786,122080250000,RH_EXTIMU,2.32107982358e-06,1.52880272242e-05,-0.703396326714,0.710797866714,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.70203841683e-07,7.75174224096e-08,-7.09650140654e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243847356146,-0.000181848439923,9.81000269784,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122082750000,12787,122082750000,RH_EXTIMU,2.32093303917e-06,1.528802241e-05,-0.703396389766,0.71079780432,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.98712242637e-08,-8.46895650948e-08,-7.0964235995e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247231289997,-0.000176526091797,9.80999261881,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122085250000,12788,122085250000,RH_EXTIMU,2.32095754298e-06,1.52879378898e-05,-0.703396452817,0.710797741925,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.23817913831e-08,-3.36267033655e-08,-7.09636164576e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245151599855,-0.000180201114299,9.80999601545,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122087750000,12789,122087750000,RH_EXTIMU,2.32110948878e-06,1.52878845348e-05,-0.703396515867,0.710797679531,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.17312912555e-07,5.58088753618e-08,-7.09628421046e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243994517131,-0.000180901142499,9.81001739092,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122090250000,12790,122090250000,RH_EXTIMU,2.32104956107e-06,1.52880057091e-05,-0.703396578917,0.710797617138,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0137708139e-07,3.58279909304e-08,-7.09619846312e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244999964558,-0.000176409349102,9.8100120254,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122092750000,12791,122092750000,RH_EXTIMU,2.3208689923e-06,1.52880626139e-05,-0.703396641965,0.710797554746,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.33812610167e-07,-6.86049321298e-08,-7.09612752657e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246562285754,-0.000176449152451,9.80999382472,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122096500000,12792,122095250000,RH_EXTIMU,2.32099971996e-06,1.52880378289e-05,-0.703396705014,0.710797492354,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.91706032717e-08,6.01150615024e-08,-7.09606189364e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243962178191,-0.000180441751577,9.81000359357,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122097750000,12793,122097750000,RH_EXTIMU,2.32088924591e-06,1.52879435416e-05,-0.703396768061,0.710797429963,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.87570555753e-09,-1.15134993222e-07,-7.09599902483e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024743461185,-0.000178464096227,9.80997620644,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122100250000,12794,122100250000,RH_EXTIMU,2.32116311809e-06,1.52877490753e-05,-0.703396831109,0.710797367572,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.66050637111e-07,4.41777132495e-08,-7.095937648e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243741785327,-0.000183576286545,9.81000733264,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122102750000,12795,122102750000,RH_EXTIMU,2.32106409821e-06,1.52878614678e-05,-0.703396894155,0.710797305182,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.18664748912e-07,8.83637626751e-09,-7.09585077508e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245787872621,-0.000175497556726,9.81000586867,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122105250000,12796,122105250000,RH_EXTIMU,2.3210040807e-06,1.52878620646e-05,-0.703396957201,0.710797242793,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.35771584917e-08,-3.27875468945e-08,-7.09578198214e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245667630878,-0.00017849403861,9.80999845051,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122107750000,12797,122107750000,RH_EXTIMU,2.32109777052e-06,1.52877856856e-05,-0.703397020246,0.710797180404,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.71422825844e-08,9.93489529903e-09,-7.09571277735e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244731902984,-0.000180672330652,9.81000353572,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122110250000,12798,122110250000,RH_EXTIMU,2.32113506615e-06,1.52878437845e-05,-0.70339708329,0.710797118016,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.05986366147e-08,5.46700472375e-08,-7.09564218904e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244330766162,-0.000177982200104,9.8100020627,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122112750000,12799,122112750000,RH_EXTIMU,2.32114244335e-06,1.52879508632e-05,-0.703397146334,0.710797055628,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.51732534024e-08,6.56862347182e-08,-7.09557492024e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244480650298,-0.000177730266604,9.80999394029,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122115250000,12800,122115250000,RH_EXTIMU,2.32129002705e-06,1.52878922843e-05,-0.703397209378,0.710796993241,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.17771934e-07,5.03837397452e-08,-7.09550741849e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244465714726,-0.00018087124438,9.81000532107,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122117750000,12801,122117750000,RH_EXTIMU,2.32116524385e-06,1.52878565586e-05,-0.70339727242,0.710796930855,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.9966083282e-08,-8.98867387231e-08,-7.0954321075e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246975642777,-0.000177577468511,9.80999298294,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122120250000,12802,122120250000,RH_EXTIMU,2.3211720668e-06,1.52877440686e-05,-0.703397335462,0.710796868469,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.80668217645e-08,-5.94807439238e-08,-7.09536120262e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246068669803,-0.000179938671806,9.81000167721,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122122750000,12803,122122750000,RH_EXTIMU,2.32119004551e-06,1.52876635011e-05,-0.703397398504,0.710796806084,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.64469783219e-08,-3.5050835806e-08,-7.0952836648e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245384170667,-0.000179707290447,9.81000879052,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122125250000,12804,122125250000,RH_EXTIMU,2.32124375384e-06,1.52877013767e-05,-0.703397461544,0.7107967437,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.01141489586e-08,5.24060133831e-08,-7.09521611223e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244320945219,-0.000178698364146,9.8100005371,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122127750000,12805,122127750000,RH_EXTIMU,2.32132283358e-06,1.52877652639e-05,-0.703397524584,0.710796681316,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.90401863676e-09,8.14741847293e-08,-7.09513460903e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244076773952,-0.000178684837735,9.81001989011,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122130250000,12806,122130250000,RH_EXTIMU,2.32108201346e-06,1.52878864222e-05,-0.703397587624,0.710796618933,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.04230414187e-07,-6.59728253624e-08,-7.0950541551e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246945969047,-0.00017480226263,9.80999617882,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122132750000,12807,122132750000,RH_EXTIMU,2.32115182522e-06,1.52877744016e-05,-0.703397650662,0.71079655655,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.03620380892e-07,-2.37688244516e-08,-7.0949932439e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244856962475,-0.000181356105828,9.80999791159,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122135250000,12808,122135250000,RH_EXTIMU,2.32114309199e-06,1.52877478409e-05,-0.7033977137,0.710796494168,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.08669635689e-08,-1.93718757607e-08,-7.09492310994e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245907291403,-0.000178221997955,9.80999194934,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122137750000,12809,122137750000,RH_EXTIMU,2.32108368993e-06,1.52876832083e-05,-0.703397776738,0.710796431787,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.47853430403e-09,-6.95332461616e-08,-7.09486122662e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246109622114,-0.000178774487777,9.80998541242,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122140250000,12810,122140250000,RH_EXTIMU,2.32133664257e-06,1.52875671764e-05,-0.703397839775,0.710796369406,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.10018312756e-07,7.70068864633e-08,-7.09479450895e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243329639877,-0.000182706863034,9.8100108022,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122142750000,12811,122142750000,RH_EXTIMU,2.32122483215e-06,1.52876800951e-05,-0.703397902811,0.710796307026,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.26234182967e-07,1.93783387147e-09,-7.09471151419e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246168894448,-0.000175350728456,9.81000042333,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122145250000,12812,122145250000,RH_EXTIMU,2.32127730248e-06,1.52876268156e-05,-0.703397965847,0.710796244647,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.07046937772e-08,-1.24822538073e-10,-7.09464550747e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244715796778,-0.000180517994854,9.81000427,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122147750000,12813,122147750000,RH_EXTIMU,2.32127084674e-06,1.52876576965e-05,-0.703398028882,0.710796182268,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0161445972e-08,1.45730916678e-08,-7.09457235088e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245171857438,-0.00017789516095,9.8099967784,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122150250000,12814,122150250000,RH_EXTIMU,2.32138142431e-06,1.5287611234e-05,-0.703398091916,0.710796119889,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.99105206626e-08,3.64496083332e-08,-7.09451330678e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024458040434,-0.000180397734181,9.80999552531,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122152750000,12815,122152750000,RH_EXTIMU,2.32132116282e-06,1.52876300975e-05,-0.70339815495,0.710796057512,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.39949706796e-08,-2.25379733811e-08,-7.09443751838e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245966987722,-0.000177439036869,9.80999556972,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122155250000,12816,122155250000,RH_EXTIMU,2.32143119128e-06,1.52875484255e-05,-0.703398217983,0.710795995135,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.09411320093e-07,1.61191742401e-08,-7.09437375937e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244396723362,-0.000180986939843,9.81000120848,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122157750000,12817,122157750000,RH_EXTIMU,2.32126115217e-06,1.52875123969e-05,-0.703398281015,0.710795932758,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.55298080677e-08,-1.15525544636e-07,-7.094286263e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247737202901,-0.000176741020578,9.81000437846,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122160250000,12818,122160250000,RH_EXTIMU,2.32115690903e-06,1.52875544352e-05,-0.703398344047,0.710795870382,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.2045499916e-08,-3.41092319881e-08,-7.09421996271e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245150220085,-0.000177193607482,9.80999096633,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122162750000,12819,122162750000,RH_EXTIMU,2.3214393587e-06,1.52874842997e-05,-0.703398407078,0.710795808007,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.00964509406e-07,1.19703891094e-07,-7.09417156224e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243029645332,-0.000182757827746,9.80999363729,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122165250000,12820,122165250000,RH_EXTIMU,2.32150352735e-06,1.52874756565e-05,-0.703398470109,0.710795745632,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.22390317871e-08,3.18398513208e-08,-7.09409439612e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245240771976,-0.00017876467293,9.81000190391,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122167750000,12821,122167750000,RH_EXTIMU,2.32148965566e-06,1.52874911044e-05,-0.703398533139,0.710795683258,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.56940982451e-08,1.62417635899e-09,-7.09402156791e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245242454828,-0.000178313074345,9.81000188178,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122170250000,12822,122170250000,RH_EXTIMU,2.32147543305e-06,1.52874840784e-05,-0.703398596168,0.710795620885,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.24714102355e-09,-1.13528031598e-08,-7.09394792629e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245502444917,-0.000178576216929,9.81000394249,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122172750000,12823,122172750000,RH_EXTIMU,2.32140797033e-06,1.52875024026e-05,-0.703398659197,0.710795558512,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.77864847835e-08,-2.68969593716e-08,-7.09387021457e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245610901971,-0.000177734927589,9.81000457352,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122175250000,12824,122175250000,RH_EXTIMU,2.32139276985e-06,1.52875070787e-05,-0.703398722225,0.71079549614,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.03881575889e-08,-5.24888743077e-09,-7.09379907038e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245222970398,-0.000178573740612,9.81000129211,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122177750000,12825,122177750000,RH_EXTIMU,2.32134797145e-06,1.5287442225e-05,-0.703398785252,0.710795433769,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.19070255986e-08,-6.14412908691e-08,-7.09372847722e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024633300522,-0.000178891007036,9.80999451131,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122180250000,12826,122180250000,RH_EXTIMU,2.32146682473e-06,1.52873884578e-05,-0.703398848279,0.710795371398,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.87267856929e-08,3.69527431325e-08,-7.09366720137e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244277729649,-0.000180415401481,9.80999571616,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122182750000,12827,122182750000,RH_EXTIMU,2.32151935258e-06,1.52873588414e-05,-0.703398911305,0.710795309027,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.7421591656e-08,1.33632012031e-08,-7.0935919304e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245224917559,-0.000179212539685,9.81000547797,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122185250000,12828,122185250000,RH_EXTIMU,2.32141644909e-06,1.52873869206e-05,-0.703398974331,0.710795246658,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.34287112913e-08,-4.12932078609e-08,-7.09351550637e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246201526529,-0.000177008337215,9.80999772833,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122187750000,12829,122187750000,RH_EXTIMU,2.32156300678e-06,1.52872774008e-05,-0.703399037356,0.710795184289,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.45853497383e-07,2.08396410262e-08,-7.09345623352e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244211567848,-0.000182021231963,9.80999946489,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122190250000,12830,122190250000,RH_EXTIMU,2.32163678838e-06,1.52872598789e-05,-0.70339910038,0.71079512192,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.27014089106e-08,3.22004380671e-08,-7.09338134263e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244987762362,-0.000179031458847,9.81000467103,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122192750000,12831,122192750000,RH_EXTIMU,2.32154442451e-06,1.52873375681e-05,-0.703399163404,0.710795059552,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.53520374734e-08,-7.15235347001e-09,-7.09330756236e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245543431513,-0.000176666400528,9.80999651337,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122195250000,12832,122195250000,RH_EXTIMU,2.32161750144e-06,1.52872895653e-05,-0.703399226427,0.710794997185,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.94528884236e-08,1.4471363367e-08,-7.09324734549e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244815980503,-0.000180242184988,9.80999331208,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122197750000,12833,122197750000,RH_EXTIMU,2.32155157678e-06,1.52872793918e-05,-0.703399289449,0.710794934818,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.08757724272e-08,-4.22363715836e-08,-7.09318128465e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246285617102,-0.000177422352211,9.80998315872,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122200250000,12834,122200250000,RH_EXTIMU,2.32169227112e-06,1.52871796206e-05,-0.703399352471,0.710794872452,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.37033641107e-07,2.30836106427e-08,-7.09310272173e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244555773026,-0.000181246238625,9.81002112135,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122202750000,12835,122202750000,RH_EXTIMU,2.32159916266e-06,1.52872172966e-05,-0.703399415492,0.710794810087,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.32592334308e-08,-3.03243942902e-08,-7.09302470148e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245727974815,-0.00017738877181,9.81000148628,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122205250000,12836,122205250000,RH_EXTIMU,2.32168612584e-06,1.52871924437e-05,-0.703399478512,0.710794747722,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.43221150036e-08,3.5449323161e-08,-7.09295670991e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244339486817,-0.000180067884401,9.81000630071,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122207750000,12837,122207750000,RH_EXTIMU,2.32166692339e-06,1.52872547224e-05,-0.703399541532,0.710794685358,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.5078105301e-08,2.52539629778e-08,-7.09287944025e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245125684954,-0.000177544476147,9.81000436422,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122210250000,12838,122210250000,RH_EXTIMU,2.32165132048e-06,1.52872506399e-05,-0.703399604551,0.710794622995,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.68848183935e-09,-1.04559216819e-08,-7.09280498116e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245470230548,-0.000178678172517,9.81000508753,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122212750000,12839,122212750000,RH_EXTIMU,2.32162173221e-06,1.52872506231e-05,-0.70339966757,0.710794560632,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.59290128949e-08,-1.60137645492e-08,-7.09273359607e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245452556572,-0.000178354207431,9.80999915092,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122215250000,12840,122215250000,RH_EXTIMU,2.321716969e-06,1.52872475402e-05,-0.703399730588,0.710794498269,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.67764100793e-08,5.24841641129e-08,-7.0926655261e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244223374322,-0.000179731684728,9.8100040228,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122217750000,12841,122217750000,RH_EXTIMU,2.32155505389e-06,1.52872841863e-05,-0.703399793605,0.710794435908,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.11805684244e-07,-6.96289090269e-08,-7.09259711415e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247050148043,-0.000176082509687,9.80997903165,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122220250000,12842,122220250000,RH_EXTIMU,2.32194236379e-06,1.52869991903e-05,-0.703399856622,0.710794373547,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.81497592733e-07,5.65337270418e-08,-7.09254733673e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243008537475,-0.000186765454059,9.81000526515,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122222750000,12843,122222750000,RH_EXTIMU,2.32182510103e-06,1.5287104648e-05,-0.703399919638,0.710794311186,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.25136403855e-07,-5.37352350134e-09,-7.09245260563e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246409612616,-0.000174622444823,9.81001016817,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122225250000,12844,122225250000,RH_EXTIMU,2.32168850958e-06,1.52872402806e-05,-0.703399982653,0.710794248826,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.53107443996e-07,9.08383012373e-10,-7.09238056073e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244678024948,-0.000176410905877,9.81000078453,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122227750000,12845,122227750000,RH_EXTIMU,2.32165072217e-06,1.5287183778e-05,-0.703400045668,0.710794186467,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.11943433109e-08,-5.27474886233e-08,-7.0923144265e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246399639622,-0.000179094196581,9.80999170765,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122230250000,12846,122230250000,RH_EXTIMU,2.32164444536e-06,1.52871039284e-05,-0.703400108682,0.710794124109,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.22502281143e-08,-4.82918069879e-08,-7.09224793735e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245908127648,-0.000179137649836,9.80999108593,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122232750000,12847,122232750000,RH_EXTIMU,2.32174887563e-06,1.52870142145e-05,-0.703400171695,0.710794061751,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.1075304119e-07,8.39607452371e-09,-7.09218490832e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244778356221,-0.000180700896768,9.80999672986,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122235250000,12848,122235250000,RH_EXTIMU,2.32180688938e-06,1.52869742552e-05,-0.703400234708,0.710793999393,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.63609610254e-08,1.05688475649e-08,-7.09211191986e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245157250016,-0.000179409027342,9.81000182634,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122237750000,12849,122237750000,RH_EXTIMU,2.32179113764e-06,1.52869976931e-05,-0.70340029772,0.710793937036,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.12594958391e-08,5.10931649265e-09,-7.09204268691e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245102949531,-0.000177958523255,9.80999582357,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122240250000,12850,122240250000,RH_EXTIMU,2.32197817408e-06,1.52869355016e-05,-0.703400360732,0.71079387468,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.42238344773e-07,7.053046002e-08,-7.09197478669e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243966371966,-0.000181739587885,9.81001157906,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122242750000,12851,122242750000,RH_EXTIMU,2.32173370321e-06,1.52870190895e-05,-0.703400423743,0.710793812325,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.85164930237e-07,-8.93921443156e-08,-7.09188642107e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000247407464629,-0.000174247116214,9.8099976554,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122245250000,12852,122245250000,RH_EXTIMU,2.32191152175e-06,1.52869885847e-05,-0.703400486753,0.71079374997,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.19165961126e-07,8.33615232812e-08,-7.09183225158e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243101479223,-0.000181656558691,9.8100004424,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122247750000,12853,122247750000,RH_EXTIMU,2.32194945684e-06,1.52869810562e-05,-0.703400549763,0.710793687615,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.6694074187e-08,1.77114102041e-08,-7.09176371435e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245366523114,-0.000178709726695,9.80999186322,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122250250000,12854,122250250000,RH_EXTIMU,2.32205192719e-06,1.52868780673e-05,-0.703400612772,0.710793625262,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.17108587592e-07,-2.55413259107e-10,-7.09169264932e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245170826303,-0.000180962437404,9.81000845312,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122252750000,12855,122252750000,RH_EXTIMU,2.32187374061e-06,1.52869559967e-05,-0.703400675781,0.710793562909,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.44289184805e-07,-5.53103688751e-08,-7.0916025448e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246206321049,-0.000175410057858,9.81000820731,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122255250000,12856,122255250000,RH_EXTIMU,2.32188224414e-06,1.52869776744e-05,-0.703400738788,0.710793500556,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.47672295682e-09,1.77573251439e-08,-7.09153720314e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244765564589,-0.00017907133305,9.8100017105,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122257750000,12857,122257750000,RH_EXTIMU,2.32181100867e-06,1.52869709759e-05,-0.703400801795,0.710793438204,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.58511977029e-08,-4.32491880842e-08,-7.09146591653e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024614059079,-0.000177653090021,9.80999207317,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122260250000,12858,122260250000,RH_EXTIMU,2.32181444488e-06,1.52869263952e-05,-0.703400864802,0.710793375853,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.79267620938e-08,-2.27709816164e-08,-7.09140656352e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245462662515,-0.00017918401457,9.80998600115,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122262750000,12859,122262750000,RH_EXTIMU,2.32201641121e-06,1.5286762993e-05,-0.703400927808,0.710793313503,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.07681191132e-07,2.1379983494e-08,-7.09134210646e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244495649741,-0.000182685272414,9.81000341295,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122266500000,12860,122265250000,RH_EXTIMU,2.32195617528e-06,1.52867928985e-05,-0.703400990813,0.710793251153,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.01943461897e-08,-1.62452432214e-08,-7.0912606368e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245826080545,-0.000176895672659,9.81000214247,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122270250000,12861,122267750000,RH_EXTIMU,2.32212472001e-06,1.52867467991e-05,-0.703401053818,0.710793188803,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.22667806962e-07,6.92753503222e-08,-7.09118984373e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243618259346,-0.000181587405636,9.81002024082,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122270250000,12862,122270250000,RH_EXTIMU,2.32193910759e-06,1.5286927823e-05,-0.703401116822,0.710793126455,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.06525256783e-07,-8.66060541103e-10,-7.09110421784e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024571719206,-0.000174294589253,9.81000200389,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122272750000,12863,122272750000,RH_EXTIMU,2.32195061877e-06,1.528694912e-05,-0.703401179825,0.710793064106,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.55225380646e-09,1.92331993441e-08,-7.09103757923e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244906948705,-0.000178952555658,9.81000040766,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122275250000,12864,122275250000,RH_EXTIMU,2.32207643379e-06,1.52868929083e-05,-0.703401242828,0.710793001759,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.04060569808e-07,3.94802865609e-08,-7.09097307607e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244590902929,-0.000180622945697,9.80999781165,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122277750000,12865,122277750000,RH_EXTIMU,2.32205640002e-06,1.52868232805e-05,-0.70340130583,0.710792939412,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.86753901022e-08,-5.02206959964e-08,-7.09090992579e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246188221858,-0.000178964399188,9.80998471752,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122280250000,12866,122280250000,RH_EXTIMU,2.32213454337e-06,1.52867196131e-05,-0.703401368831,0.710792877066,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.03657138862e-07,-1.43305331041e-08,-7.09084379351e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245374514941,-0.000180249020607,9.80999663183,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122284000000,12867,122282750000,RH_EXTIMU,2.32212432471e-06,1.52866984065e-05,-0.703401431832,0.71079281472,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.00897467589e-09,-1.71636179897e-08,-7.0907693469e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245458986841,-0.000178480322403,9.81000157287,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122285250000,12868,122285250000,RH_EXTIMU,2.32225509793e-06,1.52867047627e-05,-0.703401494832,0.710792752375,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.16716667259e-08,7.78485714564e-08,-7.09068918266e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243888868017,-0.000179922094866,9.81002170125,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122290250000,12869,122287750000,RH_EXTIMU,2.32216797427e-06,1.52867988117e-05,-0.703401557832,0.710792690031,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.01578594848e-07,5.09854520221e-09,-7.09060951052e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245317972012,-0.00017690258179,9.81000719792,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122290250000,12870,122290250000,RH_EXTIMU,2.32215599703e-06,1.52868157862e-05,-0.70340162083,0.710792627687,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.54763021025e-08,3.55780567487e-09,-7.09053885809e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245176126765,-0.000178589637869,9.81000160874,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122290250000,12871,122292750000,RH_EXTIMU,2.32203862308e-06,1.52868179726e-05,-0.703401683829,0.710792565344,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.70869381557e-08,-6.41601510642e-08,-7.09047096447e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246664364087,-0.000177064496697,9.80998548563,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122295250000,12872,122295250000,RH_EXTIMU,2.32212122832e-06,1.52866643931e-05,-0.703401746826,0.710792503001,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.34280866053e-07,-4.02014208627e-08,-7.09041494025e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245365522949,-0.000181416979351,9.80998748926,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122297750000,12873,122297750000,RH_EXTIMU,2.32220636446e-06,1.52865619155e-05,-0.703401809823,0.710792440659,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.06963829953e-07,-9.71890640314e-09,-7.09034722582e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245317421572,-0.000180138036695,9.80999559063,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122300250000,12874,122300250000,RH_EXTIMU,2.32222855154e-06,1.52865331043e-05,-0.70340187282,0.710792378318,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.97152692165e-08,-3.25257217099e-09,-7.09027584247e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245247444073,-0.000178912244667,9.8099998464,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122302750000,12875,122302750000,RH_EXTIMU,2.32234097037e-06,1.52866309456e-05,-0.703401935816,0.710792315977,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.75394006957e-09,1.19541739596e-07,-7.09020170422e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024307834933,-0.000178651018175,9.8100145318,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122302750000,12876,122305250000,RH_EXTIMU,2.32227916729e-06,1.52866485976e-05,-0.703401998811,0.710792253637,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.41903034971e-08,-2.40950388253e-08,-7.09011621728e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246225000827,-0.000177979164484,9.81001167226,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122307750000,12877,122307750000,RH_EXTIMU,2.32220817353e-06,1.52866457854e-05,-0.703402061805,0.710792191298,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.79007512075e-08,-4.09035271399e-08,-7.09004251842e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000245710894017,-0.000178129314404,9.81000319704,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122310250000,12878,122310250000,RH_EXTIMU,2.31843890509e-06,1.5280981444e-05,-0.703402124796,0.710792128962,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.04500041798e-06,-5.34133935409e-06,-7.08965623387e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000344977150593,-0.000199396687476,9.80997906052,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122314000000,12879,122312750000,RH_EXTIMU,2.31630774632e-06,1.52780163203e-05,-0.703402187786,0.710792066626,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.57576404081e-07,-2.88467335607e-06,-7.08958411794e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000271713015895,-0.000184932970003,9.80997958496,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122315250000,12880,122315250000,RH_EXTIMU,2.30653658561e-06,1.52632534093e-05,-0.703402250762,0.710792004306,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.75208551702e-06,-1.38924876745e-05,-7.08795295763e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00050225719697,-0.000226450180989,9.81096339711,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122319000000,12881,122317750000,RH_EXTIMU,2.29441229459e-06,1.52613068062e-05,-0.703402313733,0.710791941989,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.79799940414e-06,-7.9288620512e-06,-7.08746374846e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00031669272434,-8.00545108116e-05,9.81034961267,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122324000000,12882,122320250000,RH_EXTIMU,2.29069000598e-06,1.52539018317e-05,-0.703402376699,0.710791879678,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.05120588937e-06,-6.30468492496e-06,-7.08683643689e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000361662086732,-0.000245076514202,9.81060978804,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122324000000,12883,122322750000,RH_EXTIMU,2.27559635704e-06,1.52449371902e-05,-0.703402439654,0.710791817378,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.53727194806e-06,-1.35904774607e-05,-7.08556065153e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000441264062782,-0.000101723084148,9.81044938695,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122325250000,12884,122325250000,RH_EXTIMU,2.27086665314e-06,1.52445458147e-05,-0.703402502608,0.710791755078,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.46835110408e-06,-2.88341217585e-06,-7.08555461885e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246348083766,-0.000147320562259,9.81011898513,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122329000000,12885,122327750000,RH_EXTIMU,2.27153236225e-06,1.52447028083e-05,-0.703402565562,0.710791692778,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.91081659867e-07,4.64526356893e-07,-7.0855466955e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000230740650973,-0.000190192853793,9.80996884273,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122332750000,12886,122330250000,RH_EXTIMU,2.26309429361e-06,1.52293524387e-05,-0.703402628503,0.710791630492,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.84070500192e-06,-1.34763741954e-05,-7.08404673101e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000503479981932,-0.00024858965345,9.81072943427,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122334000000,12887,122332750000,RH_EXTIMU,2.24608877165e-06,1.52151578538e-05,-0.703402691432,0.710791568218,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.68142003379e-06,-1.76402519999e-05,-7.08261430457e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000501900064839,-0.0001510266593,9.81082189265,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122335250000,12888,122335250000,RH_EXTIMU,2.2369945405e-06,1.52136906526e-05,-0.703402754358,0.710791505946,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.34477780963e-06,-5.95117981277e-06,-7.082377124e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000278783588005,-0.000113081204353,9.81024129763,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122337750000,12889,122337750000,RH_EXTIMU,2.23681534489e-06,1.52142969342e-05,-0.703402817284,0.710791443674,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.42187338142e-07,2.44559768229e-07,-7.08238506411e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000224732992835,-0.000181697366983,9.81000180444,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122341500000,12890,122340250000,RH_EXTIMU,2.24416815853e-06,1.51935001507e-05,-0.703402880196,0.710791381416,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.58847436385e-05,-7.68750355409e-06,-7.08079154099e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000417930866686,-0.000527570479569,9.81246485927,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122344000000,12891,122342750000,RH_EXTIMU,2.20174243143e-06,1.51886897369e-05,-0.70340294307,0.710791319196,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.14168698816e-05,-2.66086200675e-05,-7.07648233906e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00066071367343,0.000282349446077,9.81231566513,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122344000000,12892,122345250000,RH_EXTIMU,2.18310341667e-06,1.51974246079e-05,-0.703403005941,0.710791256979,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.55131935614e-05,-5.5210086101e-06,-7.07618126523e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000240323116123,3.22673194409e-05,9.81077721266,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122347750000,12893,122347750000,RH_EXTIMU,2.18343596676e-06,1.51992279907e-05,-0.703403068813,0.71079119476,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.24831885146e-07,1.21324301521e-06,-7.07634083071e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000212414219309,-0.000200554363402,9.80996490981,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122347750000,12894,122350250000,RH_EXTIMU,2.19834393738e-06,1.52179979216e-05,-0.70340313172,0.710791132507,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0842245756e-06,1.90628982354e-05,-7.08022253453e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00012999773736,-0.000156383074838,9.80615338093,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122347750000,12895,122352750000,RH_EXTIMU,2.23349724826e-06,1.52078258778e-05,-0.703403194642,0.710791070238,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.57142428681e-05,1.39980477175e-05,-7.08189468467e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000100439286206,-0.000606329795534,9.80847858947,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122355250000,12896,122355250000,RH_EXTIMU,2.24182204128e-06,1.52017723639e-05,-0.703403257563,0.710791007972,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.1410763787e-06,1.24296705505e-06,-7.08173722702e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000258408796851,-0.000265924829828,9.80961728288,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122357750000,12897,122357750000,RH_EXTIMU,2.24049051409e-06,1.51948268173e-05,-0.703403320477,0.710790945712,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.15214279213e-06,-4.69810174842e-06,-7.08094963913e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000349199508995,-0.000233550094793,9.8104787022,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122360250000,12898,122360250000,RH_EXTIMU,2.22726356007e-06,1.51876052615e-05,-0.703403383379,0.710790883463,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.45667003542e-06,-1.15488759463e-05,-7.07977218828e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000411562437367,-0.000100332248977,9.81040820208,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122362750000,12899,122362750000,RH_EXTIMU,2.21208585099e-06,1.51804441557e-05,-0.703403446273,0.710790821224,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.59994988253e-06,-1.26122363953e-05,-7.07869342972e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000434821278058,-0.000102290768499,9.81046082431,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122365250000,12900,122365250000,RH_EXTIMU,2.20504862803e-06,1.51794333832e-05,-0.703403509164,0.710790758987,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.43193617472e-06,-4.53411922718e-06,-7.0784436821e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000271975175122,-0.000128596596038,9.810177007,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122367750000,12901,122367750000,RH_EXTIMU,2.20313278096e-06,1.51693353888e-05,-0.703403572049,0.710790696756,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.59383205764e-06,-6.81949495279e-06,-7.07770586504e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000383426493393,-0.00029061692569,9.81059516145,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122370250000,12902,122370250000,RH_EXTIMU,2.18630470467e-06,1.51518172353e-05,-0.703403634918,0.71079063454,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.89745944609e-07,-1.94302914081e-05,-7.07597359136e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000549372524704,-0.000175460535894,9.81070182992,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122372750000,12903,122372750000,RH_EXTIMU,2.17360491975e-06,1.51449316766e-05,-0.703403697782,0.71079057233,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.34597814408e-06,-1.10611682578e-05,-7.07537799834e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000354474266977,-0.000118955416483,9.81030732466,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122375250000,12904,122375250000,RH_EXTIMU,2.17201283006e-06,1.51452325495e-05,-0.703403760646,0.710790510119,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.07375210599e-06,-7.24174900433e-07,-7.07541064149e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000220665471165,-0.000170222888277,9.81002822509,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122377750000,12905,122377750000,RH_EXTIMU,2.17378708487e-06,1.51455973424e-05,-0.70340382351,0.710790447908,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.04491206627e-07,1.20649157918e-06,-7.07539956673e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000220549758965,-0.000196357377518,9.80993288184,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122380250000,12906,122380250000,RH_EXTIMU,2.17355191913e-06,1.51338414943e-05,-0.703403886367,0.710790385704,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.48243375248e-06,-6.81644445333e-06,-7.07459526958e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000401252389333,-0.000316930098671,9.81058199795,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122382750000,12907,122382750000,RH_EXTIMU,2.15617865545e-06,1.51231510653e-05,-0.703403949212,0.710790323513,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.86237859025e-06,-1.58546166191e-05,-7.07319611211e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000457916505634,-8.04778795867e-05,9.81033370151,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122385250000,12908,122385250000,RH_EXTIMU,2.15552423877e-06,1.51251771029e-05,-0.703404012059,0.710790261319,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.51135309893e-06,7.84459008489e-07,-7.07358276908e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000176673157883,-0.000169046291551,9.8099807626,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122387750000,12909,122387750000,RH_EXTIMU,2.15574549816e-06,1.51108748981e-05,-0.703404074899,0.710790199133,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.17486539451e-06,-8.00754240576e-06,-7.07259701291e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000437528038104,-0.00035768885601,9.81072534332,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122390250000,12910,122390250000,RH_EXTIMU,2.13175729411e-06,1.50850278091e-05,-0.703404137716,0.710790136969,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.05160493581e-07,-2.81955632798e-05,-7.07012277359e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000694003053178,-0.0001806218456,9.8110256702,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122392750000,12911,122392750000,RH_EXTIMU,2.11166101878e-06,1.50714630576e-05,-0.703404200524,0.710790074814,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.79332158999e-06,-1.90213528916e-05,-7.06903878681e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000461161084939,-0.000115423411361,9.81060801377,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122395250000,12912,122395250000,RH_EXTIMU,2.09624933576e-06,1.5049829528e-05,-0.703404263317,0.710790012674,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.4109775205e-06,-2.09733894241e-05,-7.06743053993e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000566084691443,-0.00025640644148,9.8108497842,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122397750000,12913,122397750000,RH_EXTIMU,2.08604529418e-06,1.50375506859e-05,-0.703404326105,0.710789950538,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.10810740214e-06,-1.27235529596e-05,-7.06685627201e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000392197575365,-0.00022018771643,9.81047858062,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122400250000,12914,122400250000,RH_EXTIMU,2.07724017384e-06,1.502947461e-05,-0.703404388887,0.710789888408,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.61416502155e-07,-9.54652002641e-06,-7.066199779e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000353817369355,-0.000163623915908,9.81017767135,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122402750000,12915,122402750000,RH_EXTIMU,2.07603287811e-06,1.50230261182e-05,-0.703404451668,0.710789826281,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.94306912867e-06,-4.34554920966e-06,-7.06596050323e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00030004415067,-0.000249973316488,9.81021994314,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122405250000,12916,122405250000,RH_EXTIMU,2.07039735053e-06,1.50096824045e-05,-0.70340451444,0.710789764161,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.30513914802e-06,-1.07582625658e-05,-7.06507514763e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000417059712334,-0.000259531350884,9.81034513443,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122407750000,12917,122407750000,RH_EXTIMU,2.06221119602e-06,1.50018786035e-05,-0.703404577207,0.710789702046,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.62668204967e-07,-9.04339003336e-06,-7.06449568491e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000345056839626,-0.000162264871456,9.81014992145,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122410250000,12918,122410250000,RH_EXTIMU,2.05796077831e-06,1.49930163169e-05,-0.70340463997,0.710789639935,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.57095157575e-06,-7.43054639093e-06,-7.06402013366e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000346079946892,-0.000232110976786,9.81010866778,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122412750000,12919,122412750000,RH_EXTIMU,2.06715866339e-06,1.49727268471e-05,-0.703404702725,0.710789577833,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.6648429863e-05,-6.36072633992e-06,-7.06307417347e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00034427589633,-0.00054016750742,9.81199545583,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122415250000,12920,122415250000,RH_EXTIMU,2.028437297e-06,1.49831671434e-05,-0.703404765458,0.710789515752,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.78923436201e-05,-1.58521100815e-05,-7.06067735584e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000467260605894,0.000447555034794,9.80976431019,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122417750000,12921,122417750000,RH_EXTIMU,2.04416323603e-06,1.49774591232e-05,-0.703404828211,0.71078945365,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.21551579174e-05,5.60424220354e-06,-7.06295273406e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000117145857817,-0.000538542320267,9.80925105607,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122420250000,12922,122420250000,RH_EXTIMU,2.04343000786e-06,1.49495015359e-05,-0.703404890954,0.71078939156,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.53163181208e-05,-1.63095301527e-05,-7.06174958041e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000546354126594,-0.000416371666604,9.80988034137,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122422750000,12923,122422750000,RH_EXTIMU,2.04227697557e-06,1.49212658357e-05,-0.703404953684,0.710789329483,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.52341049317e-05,-1.67039079316e-05,-7.06020925771e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000470899649158,-0.00047335324063,9.81203472643,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122425250000,12924,122425250000,RH_EXTIMU,2.01064979369e-06,1.49204162148e-05,-0.703405016384,0.710789267434,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.7505258829e-05,-1.82798560969e-05,-7.05704609405e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000493873930006,0.000201172014211,9.81185757289,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122425250000,12925,122427750000,RH_EXTIMU,2.0074335026e-06,1.49424029285e-05,-0.70340507911,0.710789205359,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.42004874083e-05,1.06930919672e-05,-7.0599162947e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.857854031e-05,-1.12523205687e-05,9.80748334628,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122430250000,12926,122430250000,RH_EXTIMU,2.02733042337e-06,1.49164176911e-05,-0.703405141841,0.710789143281,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.59373811133e-05,-3.57890354061e-06,-7.06028055881e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000373123669267,-0.000641043985813,9.80911165398,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122432750000,12927,122432750000,RH_EXTIMU,2.02654726268e-06,1.48956264962e-05,-0.703405204567,0.710789081207,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.12552262499e-05,-1.22625889167e-05,-7.05985287509e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000426030325947,-0.000329022081069,9.8096795495,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122435250000,12928,122435250000,RH_EXTIMU,2.02215073282e-06,1.48847338193e-05,-0.703405267289,0.710789019137,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.63041620751e-06,-8.66731225385e-06,-7.05939813494e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000346854982467,-0.000229102752876,9.8100479365,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122437750000,12929,122437750000,RH_EXTIMU,2.01879497885e-06,1.48747904329e-05,-0.703405330006,0.710788957071,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.68804508454e-06,-7.54184631002e-06,-7.05892781583e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000341620766481,-0.00024643830028,9.81010320354,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122440250000,12930,122440250000,RH_EXTIMU,2.0159773833e-06,1.48688337531e-05,-0.703405392722,0.710788895007,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.75064215071e-06,-4.9720458918e-06,-7.05868099145e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000288056690428,-0.000198719784262,9.80995677291,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122442750000,12931,122442750000,RH_EXTIMU,2.0176173844e-06,1.48656803216e-05,-0.703405455436,0.710788832944,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.70791429203e-06,-8.69633649564e-07,-7.05858602803e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243378175817,-0.000234831468978,9.81002467218,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122445250000,12932,122445250000,RH_EXTIMU,2.01958092685e-06,1.48689701548e-05,-0.703405518154,0.710788770877,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.33891996171e-07,2.97627142977e-06,-7.05897828886e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000148031126598,-0.000142391147374,9.80937154796,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122447750000,12933,122447750000,RH_EXTIMU,2.03655176576e-06,1.4877130807e-05,-0.703405580883,0.7107887088,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.05879363514e-06,1.41909424214e-05,-7.06019610435e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.45476848696e-05,-0.000279609500223,9.80943586388,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122450250000,12934,122450250000,RH_EXTIMU,2.04437479009e-06,1.48791515305e-05,-0.703405643611,0.710788646723,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.31215105086e-06,5.55188975681e-06,-7.06011170488e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000188538613555,-0.000220450033552,9.80979594221,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122454000000,12935,122452750000,RH_EXTIMU,2.04589430805e-06,1.48683845062e-05,-0.703405706333,0.710788584653,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.92376150336e-06,-5.26675661967e-06,-7.05935808485e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000377927313378,-0.000321677545257,9.81044275246,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122455250000,12936,122455250000,RH_EXTIMU,2.03467632762e-06,1.48733096047e-05,-0.703405769054,0.710788522583,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.14951617419e-06,-3.51143451652e-06,-7.05934490282e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000190041495997,5.27950650834e-05,9.80914748628,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122457750000,12937,122457750000,RH_EXTIMU,2.06130006493e-06,1.48702433722e-05,-0.703405831787,0.710788460502,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.68653695027e-05,1.32389145877e-05,-7.06059627345e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000104157662517,-0.00057900078853,9.81021191241,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122460250000,12938,122460250000,RH_EXTIMU,2.04269180552e-06,1.4834956732e-05,-0.703405894494,0.710788398447,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.27628221469e-06,-3.05357610066e-05,-7.05778511379e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000788349475924,-0.000293132202347,9.8104579931,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122460250000,12939,122462750000,RH_EXTIMU,2.02894036105e-06,1.48169957314e-05,-0.703405957198,0.710788336395,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.28845078023e-06,-1.79508204083e-05,-7.05736168748e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000425330502074,-0.000216126505701,9.81016881026,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122466500000,12940,122465250000,RH_EXTIMU,2.02734549746e-06,1.4806935909e-05,-0.703406019901,0.710788274343,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.75486683845e-06,-6.61715903583e-06,-7.05728127981e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000296452103602,-0.000269580407096,9.80992845975,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122467750000,12941,122467750000,RH_EXTIMU,2.02970334304e-06,1.47986045558e-05,-0.703406082605,0.710788212291,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.02984578581e-06,-3.41001096831e-06,-7.05733780984e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00027395625521,-0.000282370683658,9.80971555336,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122470250000,12942,122470250000,RH_EXTIMU,2.03455350656e-06,1.47916851952e-05,-0.70340614531,0.710788150237,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.65249062412e-06,-1.20461949579e-06,-7.05755435322e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000241935602006,-0.000291438457948,9.80963689902,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122472750000,12943,122472750000,RH_EXTIMU,2.04022788025e-06,1.47858670691e-05,-0.703406208017,0.710788088181,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.50146961628e-06,-1.14620346363e-07,-7.05776453366e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000233545162289,-0.000285620163447,9.80962290368,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122475250000,12944,122475250000,RH_EXTIMU,2.04579337109e-06,1.47799920281e-05,-0.703406270726,0.710788026123,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.47158303032e-06,-2.08255018656e-07,-7.05794251068e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000237067638215,-0.000285795634596,9.80963577068,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122477750000,12945,122477750000,RH_EXTIMU,2.05121719707e-06,1.4774277498e-05,-0.703406333437,0.710787964064,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.30070451893e-06,-1.96701914878e-07,-7.05811858974e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000235954459031,-0.000281880153283,9.80963325766,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122480250000,12946,122480250000,RH_EXTIMU,2.06548586342e-06,1.47582942447e-05,-0.703406396142,0.71078790201,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.71086172658e-05,-1.05859647295e-06,-7.0575448926e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000256169196894,-0.000521199029068,9.81144224604,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122485250000,12947,122482750000,RH_EXTIMU,2.0392119574e-06,1.4786533815e-05,-0.703406458839,0.710787839964,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.08304123561e-05,1.27351805277e-06,-7.05669811842e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000159592364762,0.000528325132096,9.80882203533,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122485250000,12948,122485250000,RH_EXTIMU,2.07496297123e-06,1.47964035606e-05,-0.703406521567,0.710787777887,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.47759977719e-05,2.57308633163e-05,-7.060048993e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000150710902518,-0.00060368449882,9.80883261024,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122487750000,12949,122487750000,RH_EXTIMU,2.09013498132e-06,1.47762139678e-05,-0.703406584279,0.710787715827,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.99893018113e-05,-2.94210943312e-06,-7.05824248992e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000362101507221,-0.000464234951058,9.81137873118,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122490250000,12950,122490250000,RH_EXTIMU,2.08175151767e-06,1.48042246723e-05,-0.703406647008,0.710787653748,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.05285762325e-05,1.12107738454e-05,-7.06031338203e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.08051828955e-05,0.000209408607886,9.80734979185,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122490250000,12951,122492750000,RH_EXTIMU,2.10744551398e-06,1.4789034574e-05,-0.703406709744,0.710787591664,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.31590796064e-05,5.82174557493e-06,-7.06094981972e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000250773531229,-0.000636485079843,9.8095504244,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122495250000,12952,122495250000,RH_EXTIMU,2.10074047781e-06,1.47609131022e-05,-0.703406772469,0.710787529591,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.20128271211e-05,-1.97631798624e-05,-7.05979924059e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000571791852845,-0.00033337275439,9.80964414814,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122497750000,12953,122497750000,RH_EXTIMU,2.09786200679e-06,1.47520493619e-05,-0.703406835196,0.710787467516,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.35191197344e-06,-6.65935005303e-06,-7.05996159272e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000266336790919,-0.000214455803301,9.80978364392,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122500250000,12954,122500250000,RH_EXTIMU,2.10061490578e-06,1.47528684347e-05,-0.703406897923,0.71078740544,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.10531222531e-06,2.01550303979e-06,-7.06001893364e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000185487239604,-0.000191894245004,9.80982986453,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122502750000,12955,122502750000,RH_EXTIMU,2.11241122501e-06,1.47397351757e-05,-0.703406960656,0.710787343358,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.40990048156e-05,-8.29246943904e-07,-7.06065655361e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000262063610247,-0.00045424157478,9.80919784382,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122505250000,12956,122505250000,RH_EXTIMU,2.12563735293e-06,1.47242308333e-05,-0.703407023397,0.71078728127,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.6246306078e-05,-1.37292577991e-06,-7.06146816856e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000249843627131,-0.000450846911808,9.80905741653,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122507750000,12957,122507750000,RH_EXTIMU,2.13758814568e-06,1.47120996398e-05,-0.703407086143,0.710787219176,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.36229552416e-05,-1.72516454767e-07,-7.06208672135e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000231275015712,-0.000396822326723,9.80920057174,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122510250000,12958,122510250000,RH_EXTIMU,2.14840743189e-06,1.47021094758e-05,-0.703407148893,0.710787157077,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.17747347798e-05,4.08208905706e-07,-7.06261227324e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000226620066555,-0.000368517015784,9.80929831167,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122512750000,12959,122512750000,RH_EXTIMU,2.15854105151e-06,1.46930029144e-05,-0.703407211648,0.710787094974,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.08876184776e-05,5.24809473178e-07,-7.0631144658e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000224640876642,-0.000354591681084,9.80932145239,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122515250000,12960,122515250000,RH_EXTIMU,2.1689467019e-06,1.46848295491e-05,-0.703407274407,0.710787032866,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0517169824e-05,1.20853122803e-06,-7.06365726036e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000213143512051,-0.000349577116589,9.80931648809,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122517750000,12961,122517750000,RH_EXTIMU,2.17976803484e-06,1.46769449015e-05,-0.703407337172,0.710786970753,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.05910704322e-05,1.60661999235e-06,-7.06423531141e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000209501522185,-0.000351152324806,9.80928304278,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122520250000,12962,122520250000,RH_EXTIMU,2.19104486709e-06,1.46692176579e-05,-0.703407399943,0.710786908634,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.07615055846e-05,1.9524458683e-06,-7.06485704912e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000202928085812,-0.000353386473811,9.80925079003,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122522750000,12963,122522750000,RH_EXTIMU,2.20706723515e-06,1.4648750502e-05,-0.703407462703,0.710786846526,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.06290360732e-05,-2.62140849752e-06,-7.06373897408e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000307895772483,-0.0005293050561,9.81168431964,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122525250000,12964,122525250000,RH_EXTIMU,2.18547365188e-06,1.4686911668e-05,-0.703407525468,0.710786784411,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.3752181858e-05,9.54891084522e-06,-7.06439038492e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.34171810081e-05,0.000551469391064,9.80799436247,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122527750000,12965,122527750000,RH_EXTIMU,2.23068518192e-06,1.46996237934e-05,-0.703407588266,0.710786722266,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.85560091528e-05,3.26708133939e-05,-7.06787852521e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000221215950576,-0.000679767298588,9.80873578731,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122530250000,12966,122530250000,RH_EXTIMU,2.24181251855e-06,1.46659352743e-05,-0.703407651056,0.710786660128,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.52855878209e-05,-1.28940206095e-05,-7.06710928887e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000557191119947,-0.00056406682797,9.8089561709,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122532750000,12967,122532750000,RH_EXTIMU,2.24620566683e-06,1.46483905756e-05,-0.703407713852,0.710786597984,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.23717813893e-05,-7.50367442021e-06,-7.06778077512e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000297496800865,-0.000353045008206,9.8091031314,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122535250000,12968,122535250000,RH_EXTIMU,2.25659725353e-06,1.46405270368e-05,-0.703407776655,0.710786535833,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.03348272003e-05,1.37679483612e-06,-7.06849382324e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00018765593183,-0.000343076757252,9.80921796005,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122545250000,12969,122537750000,RH_EXTIMU,2.26944457177e-06,1.463399717e-05,-0.703407839464,0.710786473676,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.09807357593e-05,3.51706439301e-06,-7.06924106852e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000175624097676,-0.000354668644753,9.80917188349,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122545250000,12970,122540250000,RH_EXTIMU,2.28353877311e-06,1.46291262889e-05,-0.703407902281,0.710786411512,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.07561951475e-05,5.16206597155e-06,-7.07009051407e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000153479234591,-0.000348416522597,9.80913079552,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122545250000,12971,122542750000,RH_EXTIMU,2.29805654726e-06,1.4625150028e-05,-0.703407965105,0.710786349339,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.04936248183e-05,5.90912869715e-06,-7.0709442938e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000146935530843,-0.000343279396741,9.80912745382,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122545250000,12972,122545250000,RH_EXTIMU,2.31241833297e-06,1.46215324537e-05,-0.703408027937,0.71078628716,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0203082861e-05,6.0253096527e-06,-7.07178966713e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000146448416606,-0.000338396419454,9.80910816443,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122547750000,12973,122547750000,RH_EXTIMU,2.3251486422e-06,1.46186483309e-05,-0.703408090774,0.710786224975,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.86264556537e-06,5.5242965719e-06,-7.07242424611e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000159115926202,-0.000306622641791,9.80939758043,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122550250000,12974,122550250000,RH_EXTIMU,2.32966949727e-06,1.46217136361e-05,-0.703408153611,0.710786162791,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.466113913e-07,4.28763651296e-06,-7.07230515673e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000176986688944,-0.00016007058203,9.80993518988,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122552750000,12975,122552750000,RH_EXTIMU,2.3306347732e-06,1.46282301815e-05,-0.703408216445,0.710786100609,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.11729822043e-06,4.2492928452e-06,-7.07206177287e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000174182447337,-0.000107084227573,9.81013892066,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122555250000,12976,122555250000,RH_EXTIMU,2.3313439205e-06,1.46350252117e-05,-0.703408279277,0.710786038429,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.41965120051e-06,4.26351697971e-06,-7.07185761035e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000174603308166,-0.000110687843258,9.81014163927,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122557750000,12977,122557750000,RH_EXTIMU,2.33258260636e-06,1.46410452101e-05,-0.703408342108,0.71078597625,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.68240932923e-06,4.12079700549e-06,-7.07170754153e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000177077180634,-0.000125271728037,9.8100964159,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122560250000,12978,122560250000,RH_EXTIMU,2.33425424439e-06,1.46464108343e-05,-0.703408404937,0.710785914072,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.06798636767e-06,3.99233464341e-06,-7.07158928626e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000178811366959,-0.000135205743289,9.81006268003,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122562750000,12979,122562750000,RH_EXTIMU,2.3361292981e-06,1.4651439736e-05,-0.703408467766,0.710785851895,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.76283569828e-06,3.91533204994e-06,-7.07148265251e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000179814100754,-0.000139610773288,9.81004694879,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122565250000,12980,122565250000,RH_EXTIMU,2.33805257151e-06,1.46563350819e-05,-0.703408530594,0.710785789719,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.66026118291e-06,3.86652289329e-06,-7.07137729562e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000180531688002,-0.000140895689715,9.81004200783,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122567750000,12981,122567750000,RH_EXTIMU,2.3485751348e-06,1.46498817109e-05,-0.703408593411,0.710785727555,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.6157685592e-06,2.25236848468e-06,-7.07008021888e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000226174619593,-0.000352912610144,9.81201937374,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122570250000,12982,122570250000,RH_EXTIMU,2.32263968985e-06,1.48524512728e-05,-0.703408656283,0.710785665331,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000128738117998,0.000100592882,-7.07667426783e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0020112461588,0.00263352086168,9.80395364386,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122575250000,12983,122572750000,RH_EXTIMU,2.45479939646e-06,1.49200726534e-05,-0.703408719202,0.710785603064,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.7098271715e-05,0.000112821894628,-7.08153512958e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000972495824762,-0.00128054491052,9.81007798949,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122575250000,12984,122575250000,RH_EXTIMU,2.50687003783e-06,1.49873115693e-05,-0.703408782139,0.710785540778,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.22742845826e-06,6.75361370538e-05,-7.08370787489e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000598604025392,-5.00813900187e-07,9.80953056895,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122575250000,12985,122577750000,RH_EXTIMU,2.47002618967e-06,1.48149317438e-05,-0.703408845007,0.710785478566,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.60532054169e-05,-0.000118752479244,-7.07569055557e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00275387960977,-0.00168138923473,9.81016285575,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122580250000,12986,122580250000,RH_EXTIMU,2.41827468718e-06,1.46760353342e-05,-0.70340890787,0.710785416358,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.87342652142e-05,-0.000108101799344,-7.07525883269e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00156601642162,-0.000976879022705,9.80860985895,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122582750000,12987,122582750000,RH_EXTIMU,2.40803533914e-06,1.46439029703e-05,-0.703408970743,0.710785354139,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.22602279794e-05,-2.40327225987e-05,-7.07635307204e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000292307064228,-0.000300503070978,9.80937508689,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122585250000,12988,122585250000,RH_EXTIMU,2.41119832747e-06,1.46418817279e-05,-0.703409033614,0.71078529192,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.93682904677e-06,6.31171684211e-07,-7.07624008729e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000192098745218,-0.000214314411046,9.80994012889,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122587750000,12989,122587750000,RH_EXTIMU,2.41678316363e-06,1.46766527409e-05,-0.703409096501,0.710785229685,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.63900435217e-05,2.29151267646e-05,-7.07814011538e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000290566516719,0.000226356238376,9.80840188797,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122590250000,12990,122590250000,RH_EXTIMU,2.46785726515e-06,1.47096798064e-05,-0.703409159414,0.710785167425,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.04578019752e-05,4.75215197802e-05,-7.0808500705e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000353194823494,-0.000487582399484,9.80950826598,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122592750000,12991,122592750000,RH_EXTIMU,2.4774492179e-06,1.46651799367e-05,-0.703409222321,0.710785105171,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.04964101397e-05,-1.9905615549e-05,-7.0802767764e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000704487932236,-0.000686849214246,9.80837689929,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122595250000,12992,122595250000,RH_EXTIMU,2.4832248729e-06,1.46484481885e-05,-0.703409285237,0.710785042908,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.27004739868e-05,-6.26341696345e-06,-7.08127740034e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243545405781,-0.000335849131837,9.80897012051,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122597750000,12993,122597750000,RH_EXTIMU,2.50218449735e-06,1.46468108581e-05,-0.703409348168,0.71078498063,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.17032058499e-05,9.7386735622e-06,-7.0828925789e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.20970362662e-05,-0.000365185933927,9.80877367717,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122600250000,12994,122600250000,RH_EXTIMU,2.51566240683e-06,1.4650226836e-05,-0.703409411103,0.710784918348,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.74251400989e-06,9.52741445012e-06,-7.08345873688e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.84137014192e-05,-0.000234223913761,9.80925309432,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122602750000,12995,122602750000,RH_EXTIMU,2.54062248309e-06,1.46503999403e-05,-0.703409474043,0.710784856061,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.40964490976e-05,1.41447573346e-05,-7.0840357579e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.54967134481e-06,-0.000448182703647,9.81073240051,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122605250000,12996,122605250000,RH_EXTIMU,2.54349225266e-06,1.47104804751e-05,-0.703409537,0.710784793756,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.21762783629e-05,3.57789681406e-05,-7.08598232848e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000377688869917,0.000498726757995,9.80814246903,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122607750000,12997,122607750000,RH_EXTIMU,2.57036872151e-06,1.47170797517e-05,-0.703409599963,0.710784731446,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.15699807673e-05,1.88772691602e-05,-7.08654248055e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000107493825219,-0.00045221473684,9.80949957306,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122610250000,12998,122610250000,RH_EXTIMU,2.57950431699e-06,1.46913399297e-05,-0.703409662929,0.710784669134,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.96801332074e-05,-9.49492134026e-06,-7.08686782877e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000434832956107,-0.000489622698691,9.80897660819,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122612750000,12999,122612750000,RH_EXTIMU,2.59716916538e-06,1.46836151361e-05,-0.703409725913,0.710784606804,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.4392547167e-05,5.54857074417e-06,-7.08889923827e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.05284360868e-05,-0.000409189246098,9.80814698899,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122615250000,13000,122615250000,RH_EXTIMU,2.62709348989e-06,1.46797359381e-05,-0.703409788916,0.710784544454,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.91996015138e-05,1.46340308231e-05,-7.09107094058e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.84802180648e-06,-0.000483688987528,9.8082284811,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122617750000,13001,122617750000,RH_EXTIMU,2.65480680959e-06,1.46804610197e-05,-0.703409851935,0.710784482089,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.53514069932e-05,1.60079577079e-05,-7.09288557761e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.41267943117e-07,-0.000403623672323,9.80842732176,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122617750000,13002,122620250000,RH_EXTIMU,2.680796332e-06,1.46857920224e-05,-0.703409914969,0.710784419708,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.17793283114e-05,1.76569827986e-05,-7.09462498254e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.13873275043e-05,-0.000344540522493,9.80856621998,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122622750000,13003,122622750000,RH_EXTIMU,2.70573782557e-06,1.46923990654e-05,-0.703409978019,0.710784357313,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.04653269245e-05,1.77928195257e-05,-7.0962810411e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.58384558454e-05,-0.000328628090965,9.80863444069,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122625250000,13004,122625250000,RH_EXTIMU,2.73010079762e-06,1.46980216103e-05,-0.703410041082,0.710784294903,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.06903685808e-05,1.69074567088e-05,-7.09789362173e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.21301570058e-06,-0.000336247237725,9.80866003729,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122627750000,13005,122627750000,RH_EXTIMU,2.7638416981e-06,1.47042201375e-05,-0.703410104169,0.71078423247,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.56987948441e-05,2.25121995543e-05,-7.10055726937e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.96889031123e-05,-0.000438196634543,9.80815051905,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122630250000,13006,122630250000,RH_EXTIMU,2.78417749008e-06,1.47083356065e-05,-0.703410167264,0.710784170031,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.24847854377e-06,1.37842845846e-05,-7.10135604613e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.89363271039e-05,-0.000280328894846,9.80893495207,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122632750000,13007,122632750000,RH_EXTIMU,2.8131872963e-06,1.47158223713e-05,-0.70341023038,0.710784107569,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.22836374296e-05,2.05824076073e-05,-7.10382836475e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.80696350714e-05,-0.000382071476163,9.80833786679,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122635250000,13008,122635250000,RH_EXTIMU,2.8416267752e-06,1.47215262641e-05,-0.703410293512,0.710784045091,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.29626063271e-05,1.92476788748e-05,-7.10566656059e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.81544031671e-05,-0.000367528582519,9.80845301175,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122640250000,13009,122637750000,RH_EXTIMU,2.86698681433e-06,1.47225778148e-05,-0.703410356647,0.710783982611,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.38295572937e-05,1.48693427328e-05,-7.10590734807e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.38434269353e-05,-0.000401373649983,9.81062943572,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122640250000,13010,122640250000,RH_EXTIMU,2.86821022277e-06,1.47392624056e-05,-0.703410419772,0.71078392014,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.69234114908e-06,1.01763495e-05,-7.10486961346e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000142179446964,4.63427446833e-05,9.81094695281,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122642750000,13011,122642750000,RH_EXTIMU,2.88072990415e-06,1.47920246177e-05,-0.703410482922,0.710783857645,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.25708732035e-05,3.70477970186e-05,-7.10767284351e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000467191487493,0.000201280115365,9.80848229999,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122645250000,13012,122645250000,RH_EXTIMU,2.92089302482e-06,1.48078909839e-05,-0.703410546086,0.710783795135,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.3910275191e-05,3.16235677818e-05,-7.1092466376e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.49120879408e-05,-0.000412295213789,9.80934238165,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122647750000,13013,122647750000,RH_EXTIMU,2.92724676157e-06,1.48231169028e-05,-0.703410609267,0.71078373261,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.95425654626e-06,1.22338906071e-05,-7.11106196854e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.7396700875e-05,-4.35045205047e-05,9.80721178944,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122647750000,13014,122650250000,RH_EXTIMU,2.9498802041e-06,1.48100573832e-05,-0.703410672459,0.710783670074,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.02198457376e-05,5.31108121491e-06,-7.11231743616e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000227050281827,-0.000536730325237,9.80849295825,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122652750000,13015,122652750000,RH_EXTIMU,2.97003515028e-06,1.47846875858e-05,-0.703410735667,0.710783607521,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.5737850849e-05,-3.08359481483e-06,-7.11419762131e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000285623175715,-0.00058719623448,9.80780164329,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122655250000,13016,122655250000,RH_EXTIMU,2.99531118991e-06,1.47784196311e-05,-0.703410798896,0.710783544948,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.79006895515e-05,1.06600124052e-05,-7.1164611189e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.38452961932e-05,-0.000431054551671,9.80809980274,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122657750000,13017,122657750000,RH_EXTIMU,3.02237078175e-06,1.4784506662e-05,-0.703410862142,0.710783482358,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.19623612356e-05,1.86890448014e-05,-7.11845526285e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.90372832068e-05,-0.000336241340324,9.8084135342,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122660250000,13018,122660250000,RH_EXTIMU,3.04876704332e-06,1.47954465741e-05,-0.703410925405,0.710783419751,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.85431859044e-06,2.10752482514e-05,-7.12032846248e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.56133815116e-05,-0.000289194240794,9.80856241526,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122662750000,13019,122662750000,RH_EXTIMU,3.07458691163e-06,1.48078273671e-05,-0.703410988683,0.710783357128,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.71574110624e-06,2.15702187514e-05,-7.12213119056e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.57086414995e-05,-0.000276329604162,9.80865943456,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122665250000,13020,122665250000,RH_EXTIMU,3.09961910621e-06,1.48200686413e-05,-0.703411051978,0.71078329449,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.34636023497e-06,2.10476381325e-05,-7.12391636431e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.56526405984e-05,-0.000270847342199,9.8086381254,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122667750000,13021,122667750000,RH_EXTIMU,3.12139650582e-06,1.48264363862e-05,-0.703411115283,0.710783231842,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.80080167023e-06,1.58762259738e-05,-7.12505774699e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.76296533722e-05,-0.000301837751083,9.80932603963,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122667750000,13022,122670250000,RH_EXTIMU,3.14109490245e-06,1.48445491827e-05,-0.703411178605,0.710783169175,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.00934564704e-06,2.13848597542e-05,-7.12709102993e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000116447621748,-0.000157524997105,9.80827848655,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122672750000,13023,122672750000,RH_EXTIMU,3.16933823903e-06,1.4851254753e-05,-0.703411241942,0.710783106495,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.22874018257e-05,1.97068933713e-05,-7.12868720689e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.43862336253e-06,-0.000371729697274,9.80910834756,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122675250000,13024,122675250000,RH_EXTIMU,3.12460630178e-06,1.47715381542e-05,-0.703411305246,0.710783043849,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.94239881439e-05,-7.05003436885e-05,-7.12490937357e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00164177344966,-0.000512285873284,9.80842217875,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122677750000,13025,122677750000,RH_EXTIMU,3.10388081806e-06,1.47192149789e-05,-0.703411368563,0.710782981191,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.76596173761e-05,-4.14145901401e-05,-7.12631609536e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000650021060434,-0.000439893313999,9.80830526064,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122680250000,13026,122680250000,RH_EXTIMU,3.10948807789e-06,1.47032003102e-05,-0.703411431892,0.710782918519,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.22012572241e-05,-5.9504141627e-06,-7.12777945024e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000230234218565,-0.000340655950263,9.80857263944,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122682750000,13027,122682750000,RH_EXTIMU,3.11740805788e-06,1.46945343057e-05,-0.703411495229,0.710782855839,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.38102343727e-06,-4.70335093794e-07,-7.12872936322e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00025448254788,-0.00030088174506,9.80871825762,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122685250000,13028,122685250000,RH_EXTIMU,3.12292315094e-06,1.4683858473e-05,-0.703411558574,0.710782793151,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.14453059294e-06,-2.96647622477e-06,-7.12954468518e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000294939292617,-0.000302657911652,9.80877366797,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122687750000,13029,122687750000,RH_EXTIMU,3.12861252805e-06,1.46731745096e-05,-0.703411621927,0.710782730455,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.24820859668e-06,-2.87302475435e-06,-7.13049646105e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00028932539468,-0.000305876477494,9.80868030355,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122690250000,13030,122690250000,RH_EXTIMU,3.14125757464e-06,1.46528678114e-05,-0.703411685297,0.710782667743,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.86183794772e-05,-4.43060462199e-06,-7.132357783e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000307109997638,-0.000493607909789,9.80790859162,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122692750000,13031,122692750000,RH_EXTIMU,3.15290781149e-06,1.46335874297e-05,-0.703411748678,0.710782605019,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.74751663148e-05,-4.40682268466e-06,-7.13370366314e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000310629191575,-0.000430465266998,9.80822065437,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122695250000,13032,122695250000,RH_EXTIMU,3.15689543262e-06,1.46280701559e-05,-0.70341181206,0.710782542294,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.37309782833e-06,-8.92739757875e-07,-7.1337596473e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00024833731248,-0.000196033597417,9.80985948013,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122697750000,13033,122697750000,RH_EXTIMU,3.15387876077e-06,1.46266644065e-05,-0.703411875445,0.710782479567,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.2340140904e-07,-2.49634178923e-06,-7.13409084817e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00028990540783,-0.000139103696399,9.80922798104,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122700250000,13034,122700250000,RH_EXTIMU,3.16707448561e-06,1.46127934512e-05,-0.70341193884,0.71078241683,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.53099278446e-05,-4.61187813943e-07,-7.13512205793e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000234041839308,-0.000467610536292,9.80947402699,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122704000000,13035,122702750000,RH_EXTIMU,3.15537643028e-06,1.46189502811e-05,-0.703412002231,0.710782354096,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.01155477657e-05,-3.0813355027e-06,-7.1348630548e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000332122136171,0.00014270792154,9.80903210306,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122705250000,13036,122705250000,RH_EXTIMU,3.15466499772e-06,1.4618061834e-05,-0.703412065634,0.71078229135,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.63164257708e-08,-9.04964436464e-07,-7.13609016218e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000244975236786,-0.000224419489309,9.80846747973,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122707750000,13037,122707750000,RH_EXTIMU,3.17672201422e-06,1.45980459706e-05,-0.703412129046,0.710782228596,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.38066091315e-05,1.03117412078e-06,-7.13715231819e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000220103343042,-0.000571536443663,9.81001710825,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122710250000,13038,122710250000,RH_EXTIMU,3.16385274471e-06,1.45994885764e-05,-0.703412192463,0.710782165836,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.12869544801e-06,-6.4210456157e-06,-7.13773297679e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000352213842445,2.84444639361e-05,9.80790658134,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122712750000,13039,122712750000,RH_EXTIMU,3.17021835922e-06,1.45877208465e-05,-0.703412255891,0.710782103067,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.02426036697e-05,-3.10874077766e-06,-7.13886595529e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000304878230996,-0.000343414632305,9.80843720944,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122715250000,13040,122715250000,RH_EXTIMU,3.18544597793e-06,1.45592272292e-05,-0.703412319338,0.710782040278,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.46939224644e-05,-7.63259582084e-06,-7.14105280621e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000364741726661,-0.000589808709355,9.80756786085,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122717750000,13041,122717750000,RH_EXTIMU,3.19778935123e-06,1.4536824731e-05,-0.703412382799,0.710781977475,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.962621225e-05,-5.79208028417e-06,-7.14267498363e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00032002688536,-0.000453241051922,9.80799428726,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122720250000,13042,122720250000,RH_EXTIMU,3.20530437844e-06,1.45229898453e-05,-0.703412446271,0.710781914662,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.2059439462e-05,-3.63737124738e-06,-7.14382525623e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00029073143019,-0.000327529560244,9.80849618905,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122722750000,13043,122722750000,RH_EXTIMU,3.21479473784e-06,1.4507792057e-05,-0.703412509757,0.710781851834,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.39496101754e-05,-3.30077377474e-06,-7.14550342397e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000285930609527,-0.000392932679771,9.80814282674,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122722750000,13044,122725250000,RH_EXTIMU,3.22211374744e-06,1.44950912878e-05,-0.703412573253,0.710781788997,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.13097778352e-05,-3.10278865082e-06,-7.14657591313e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000292178585336,-0.000319128298201,9.80859880951,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122722750000,13045,122727750000,RH_EXTIMU,3.21989835712e-06,1.44914199725e-05,-0.70341263675,0.710781726158,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.07130513232e-07,-3.33370498241e-06,-7.14668705797e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000304740738516,-0.000120853800748,9.8094046981,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122730250000,13046,122730250000,RH_EXTIMU,3.21794590571e-06,1.448752396e-05,-0.703412700252,0.710781663314,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.08308815531e-06,-3.31350978237e-06,-7.14731905073e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000290937048665,-0.000170979399043,9.80916103234,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122732750000,13047,122732750000,RH_EXTIMU,3.21998459657e-06,1.44807890938e-05,-0.703412763762,0.710781600463,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.9500615086e-06,-2.68181774841e-06,-7.14821399337e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00028393599901,-0.000236294336653,9.80895512901,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122735250000,13048,122735250000,RH_EXTIMU,3.22345903043e-06,1.44726874069e-05,-0.703412827281,0.710781537603,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.53561267041e-06,-2.65109049889e-06,-7.14914838086e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000284291011004,-0.000257647032023,9.80890767937,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122737750000,13049,122737750000,RH_EXTIMU,3.22648595135e-06,1.44647364052e-05,-0.703412890808,0.710781474735,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.19635050123e-06,-2.81723607818e-06,-7.15005506532e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000288484860078,-0.000246068005649,9.80890113086,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122740250000,13050,122740250000,RH_EXTIMU,3.23894297016e-06,1.44548188422e-05,-0.70341295434,0.710781411861,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.26651853653e-05,1.37112960245e-06,-7.15065171449e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000192799722153,-0.000391942925877,9.81035677776,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122742750000,13051,122742750000,RH_EXTIMU,3.23132421133e-06,1.4462171534e-05,-0.703413017861,0.710781348998,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.46890324575e-06,-1.05819228532e-07,-7.14947491894e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000276125499162,5.30022843881e-05,9.81106910941,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122745250000,13052,122745250000,RH_EXTIMU,3.20417994811e-06,1.44830029181e-05,-0.703413081379,0.710781286138,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.71564648275e-05,-3.42909201708e-06,-7.14916948818e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000292512912722,0.000332619072989,9.8095358792,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122747750000,13053,122747750000,RH_EXTIMU,3.19811362088e-06,1.44842028466e-05,-0.703413144902,0.710781223274,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.12380467396e-06,-2.73083221884e-06,-7.14964947616e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000309770493072,-0.000117791319995,9.80913561727,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122750250000,13054,122750250000,RH_EXTIMU,3.20922892979e-06,1.44613195479e-05,-0.703413208444,0.710781160391,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.9198469952e-05,-6.75652563461e-06,-7.15177171826e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000347728866368,-0.000521784247628,9.80794849193,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122754000000,13055,122752750000,RH_EXTIMU,3.22031286605e-06,1.44408330298e-05,-0.703413271997,0.710781097498,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.7831889107e-05,-5.4113107084e-06,-7.15289348472e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000315271829021,-0.000429548667754,9.80906275188,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122755250000,13056,122755250000,RH_EXTIMU,3.21051503063e-06,1.44498413436e-05,-0.703413335553,0.7107810346,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.06396506898e-05,-3.90627732168e-07,-7.15345433495e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000231769785339,9.64407969178e-05,9.80855243547,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122757750000,13057,122757750000,RH_EXTIMU,3.23131867767e-06,1.44361857994e-05,-0.703413399125,0.710780971688,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.95147601833e-05,3.94253274805e-06,-7.15506990374e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000160895737856,-0.000548169672434,9.80985570208,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122760250000,13058,122760250000,RH_EXTIMU,3.21531962333e-06,1.44487077009e-05,-0.703413462686,0.710780908784,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.61430206592e-05,-1.88233374786e-06,-7.15407476653e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000327399713979,0.00024791155525,9.80974296005,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122762750000,13059,122762750000,RH_EXTIMU,3.20742374036e-06,1.44494585465e-05,-0.703413526258,0.710780845871,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.91142155593e-06,-4.01574325124e-06,-7.15518004703e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000304692680859,-0.000125470891492,9.80861996326,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122769000000,13060,122765250000,RH_EXTIMU,3.22506684233e-06,1.44230643045e-05,-0.703413589857,0.710780782933,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.48860532878e-05,-5.07953572138e-06,-7.15807147771e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000311913358136,-0.000628892760374,9.80742840883,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122769000000,13061,122767750000,RH_EXTIMU,3.23600526688e-06,1.44063413339e-05,-0.703413653467,0.710780719982,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.56312857817e-05,-3.35314148464e-06,-7.1594426501e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00028651098243,-0.00036437823906,9.80845581412,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122770250000,13062,122770250000,RH_EXTIMU,3.23059585772e-06,1.44045638196e-05,-0.703413717075,0.710780657033,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.07476465488e-06,-4.05421931579e-06,-7.15928878121e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000313992429141,-5.1932450876e-05,9.80972846712,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122770250000,13063,122772750000,RH_EXTIMU,3.22876042469e-06,1.4404814971e-05,-0.703413780693,0.710780594075,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.18410711373e-06,-8.8948304403e-07,-7.16033192358e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000242198129258,-0.000145717785168,9.80919167519,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122775250000,13064,122775250000,RH_EXTIMU,3.22338339957e-06,1.4404883902e-05,-0.703413844311,0.710780531117,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.09540196563e-06,-2.98606180385e-06,-7.1602785537e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000303078383633,-6.9628753791e-05,9.80982750326,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122777750000,13065,122777750000,RH_EXTIMU,3.21799522458e-06,1.44055819557e-05,-0.703413907932,0.710780468155,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.45576886587e-06,-2.63460164693e-06,-7.16072875935e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000282144215554,-9.24181686522e-05,9.80962428174,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122780250000,13066,122780250000,RH_EXTIMU,3.22156747943e-06,1.44013588918e-05,-0.703413971566,0.71078040518,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.40861613579e-06,-3.90556129228e-07,-7.16213148257e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000242560555922,-0.000248229884172,9.80895597843,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122782750000,13067,122782750000,RH_EXTIMU,3.21787905482e-06,1.43982606777e-05,-0.7034140352,0.710780342206,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.52970795918e-07,-3.83674993501e-06,-7.16217377701e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000317552217073,-0.000109712234567,9.80971452679,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122785250000,13068,122785250000,RH_EXTIMU,3.21862764892e-06,1.43953946625e-05,-0.703414098845,0.71078027922,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.03936022414e-06,-1.2078668245e-06,-7.16340157453e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000250727554113,-0.000201550636207,9.80913377204,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122787750000,13069,122787750000,RH_EXTIMU,3.21311442088e-06,1.43935263889e-05,-0.70341416249,0.710780216235,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.08272388112e-06,-4.16425001761e-06,-7.16336327169e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000321410499408,-8.33020094037e-05,9.80981114442,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122790250000,13070,122790250000,RH_EXTIMU,3.20568434589e-06,1.43939877167e-05,-0.703414226139,0.710780153245,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.48362901665e-06,-3.91825213644e-06,-7.16390699638e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000302224233176,-6.69391115772e-05,9.8094310612,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122792750000,13071,122792750000,RH_EXTIMU,3.20296686726e-06,1.43910394743e-05,-0.703414289797,0.710780090247,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.1473922485e-07,-3.20509007075e-06,-7.16486621548e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000290481744722,-0.000156457801333,9.80910829704,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122795250000,13072,122795250000,RH_EXTIMU,3.21200553941e-06,1.43832265069e-05,-0.703414353462,0.710780027242,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.53710331934e-06,6.44265789727e-07,-7.16561622023e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000205527694559,-0.000342236987305,9.81037407737,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122797750000,13073,122797750000,RH_EXTIMU,3.19589161879e-06,1.43989187727e-05,-0.703414417134,0.71077996423,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.79923998452e-05,-1.44249668892e-07,-7.16649506166e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000270425407696,0.00022440299822,9.80784394213,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122800250000,13074,122800250000,RH_EXTIMU,3.20933697868e-06,1.4380418457e-05,-0.703414480825,0.710779901199,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.80569598174e-05,-2.95303179416e-06,-7.16856219785e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000302366814743,-0.000511328467717,9.80882586842,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122802750000,13075,122802750000,RH_EXTIMU,3.20816073659e-06,1.43698030465e-05,-0.703414544524,0.710779838161,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.30568204585e-06,-6.69752325888e-06,-7.16937777523e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000346981454703,-0.000204062707926,9.80886807982,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122805250000,13076,122805250000,RH_EXTIMU,3.19822367295e-06,1.43676267705e-05,-0.703414608221,0.710779775123,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.42489820103e-06,-6.8288213624e-06,-7.16931699079e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000349145062407,-2.72620741776e-05,9.80977656733,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122807750000,13077,122807750000,RH_EXTIMU,3.20513069877e-06,1.43690937693e-05,-0.703414671924,0.71077971208,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.10286620794e-06,4.72153437563e-06,-7.16992056171e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00014055255058,-0.000225377326231,9.81097715513,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122807750000,13078,122810250000,RH_EXTIMU,3.18108429863e-06,1.43844296324e-05,-0.703414735617,0.710779649047,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.23024377874e-05,-4.81077495343e-06,-7.16883724804e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000351827899968,0.000298158704616,9.81029116404,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122812750000,13079,122812750000,RH_EXTIMU,3.16634247965e-06,1.43927813384e-05,-0.703414799317,0.710779586007,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.30814249118e-05,-3.54614872921e-06,-7.16964115457e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000296681612613,2.78758767879e-05,9.80907557154,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122815250000,13080,122815250000,RH_EXTIMU,3.17367217766e-06,1.43749879452e-05,-0.703414863038,0.710779522947,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.4181642059e-05,-5.99252538206e-06,-7.17183511214e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000335344476641,-0.00043724420704,9.80818239283,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122817750000,13081,122817750000,RH_EXTIMU,3.17842093664e-06,1.43601113415e-05,-0.70341492677,0.710779459875,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.107268888e-05,-5.78634658451e-06,-7.17322687207e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000325545703653,-0.000307503690848,9.80864998616,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122820250000,13082,122820250000,RH_EXTIMU,3.18637237101e-06,1.4351962644e-05,-0.703414990509,0.710779396797,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.10779797374e-06,-1.58452767654e-07,-7.17391330134e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00021144829988,-0.00030826038725,9.81043408127,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122822750000,13083,122822750000,RH_EXTIMU,3.16754737263e-06,1.43677480547e-05,-0.703415054239,0.710779333727,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.9586399925e-05,-1.61691141538e-06,-7.17302672892e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000299523745267,0.000278537829968,9.81047673798,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122825250000,13084,122825250000,RH_EXTIMU,3.1620143335e-06,1.43756204136e-05,-0.703415117971,0.710779270655,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.57535213586e-06,1.36335308358e-06,-7.17328760737e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000198791421433,-0.00010006564471,9.81088072863,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122827750000,13085,122827750000,RH_EXTIMU,3.14798508136e-06,1.43823147401e-05,-0.703415181705,0.710779207581,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.17435810832e-05,-4.08759551959e-06,-7.17343510916e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000348017543541,0.000102970762673,9.80948795371,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122832750000,13086,122830250000,RH_EXTIMU,3.13778312874e-06,1.43830088236e-05,-0.703415245451,0.710779144496,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.19075943785e-06,-5.34572926096e-06,-7.17474529846e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000323931225212,-7.61139159193e-05,9.80848240578,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122832750000,13087,122832750000,RH_EXTIMU,3.14664844435e-06,1.43603038058e-05,-0.703415309213,0.710779081395,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.78187617183e-05,-7.92123793469e-06,-7.17655028934e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000370404890631,-0.000490831367343,9.80899717254,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122835250000,13088,122835250000,RH_EXTIMU,3.13329572358e-06,1.43524568908e-05,-0.703415372971,0.710779018298,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.17606423439e-06,-1.19753806412e-05,-7.17612999337e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000426281575022,-3.22373501317e-05,9.809883045,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122837750000,13089,122837750000,RH_EXTIMU,3.12309706624e-06,1.435138357e-05,-0.703415436735,0.710778955194,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.19431074387e-06,-6.34886427204e-06,-7.17682215926e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000313690911503,-6.01118989323e-05,9.80966444898,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122840250000,13090,122840250000,RH_EXTIMU,3.13308246906e-06,1.43512433833e-05,-0.703415500508,0.710778892082,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.75770879524e-06,5.53996105572e-06,-7.17777678973e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000136376121065,-0.000272889186106,9.81079977602,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122842750000,13091,122842750000,RH_EXTIMU,3.11531801698e-06,1.43666023938e-05,-0.703415564277,0.710778828973,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.87434005842e-05,-1.26257965346e-06,-7.17746242495e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000282297901115,0.000209297094838,9.81005133178,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122845250000,13092,122845250000,RH_EXTIMU,3.11656639668e-06,1.43644574178e-05,-0.703415628053,0.710778765858,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.91779537708e-06,-5.16612611295e-07,-7.1780520009e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000260775399566,-0.000229131724908,9.81059034569,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122847750000,13093,122847750000,RH_EXTIMU,3.09329488053e-06,1.43698157731e-05,-0.703415691822,0.71077870275,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.62471501558e-05,-1.00481881654e-05,-7.17739815579e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000417776619802,0.00018720504644,9.80994480819,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122850250000,13094,122850250000,RH_EXTIMU,3.07807597555e-06,1.43774049991e-05,-0.703415755599,0.710778639634,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.29236339308e-05,-4.2481973834e-06,-7.17829042554e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000279568204239,5.2968782122e-05,9.80944046207,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122852750000,13095,122852750000,RH_EXTIMU,3.07744589737e-06,1.43749053967e-05,-0.703415819392,0.710778576501,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.04922004068e-06,-1.77532761824e-06,-7.18013846472e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000268514300522,-0.000198225800108,9.80824568709,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122855250000,13096,122855250000,RH_EXTIMU,3.10319664688e-06,1.43534254625e-05,-0.70341588321,0.710778513345,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.67308146934e-05,2.27737513832e-06,-7.18277207108e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000173318865784,-0.000662805213754,9.80928122577,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122859000000,13097,122857750000,RH_EXTIMU,3.1049046783e-06,1.43632710613e-05,-0.703415947035,0.710778450181,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.56832517219e-06,6.56016407688e-06,-7.18366893771e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000162876371336,1.35293052756e-05,9.80933015811,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122859000000,13098,122860250000,RH_EXTIMU,3.09816027178e-06,1.4364296653e-05,-0.703416010855,0.710778387022,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.41126689188e-06,-3.2115564772e-06,-7.18315251943e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00031867274444,-8.12938549681e-05,9.81104782034,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122862750000,13099,122862750000,RH_EXTIMU,3.08685315705e-06,1.43753605264e-05,-0.703416074683,0.710778323854,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.26545966737e-05,-7.11471157136e-08,-7.18407370646e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000242611877684,7.92404340565e-05,9.80954365054,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122865250000,13100,122865250000,RH_EXTIMU,3.09266463138e-06,1.43721266265e-05,-0.70341613852,0.710778260679,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.12524782076e-06,1.43200774154e-06,-7.18497157238e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000229588764287,-0.00026884258608,9.81052578679,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122867750000,13101,122867750000,RH_EXTIMU,3.06761210479e-06,1.43779790599e-05,-0.703416202348,0.710778197512,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.75378997169e-05,-1.07694869481e-05,-7.18407817225e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000439030009494,0.000216875012299,9.81009413674,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122870250000,13102,122870250000,RH_EXTIMU,3.04951797764e-06,1.43793182933e-05,-0.703416266176,0.710778134345,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.10414704687e-05,-9.42007349263e-06,-7.18405545823e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000382519457993,2.40931754597e-06,9.81084678749,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122872750000,13103,122872750000,RH_EXTIMU,3.03769086127e-06,1.43728772539e-05,-0.703416330017,0.710778071165,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.09969056019e-06,-1.03174577551e-05,-7.18544488329e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000392183555955,-0.000139025179419,9.80862053667,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122875250000,13104,122875250000,RH_EXTIMU,3.0449936069e-06,1.43642848464e-05,-0.703416393862,0.710778007982,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.98862463582e-06,-7.75768110351e-07,-7.18587419664e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000232980338856,-0.000291402508269,9.81133680213,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122877750000,13105,122877750000,RH_EXTIMU,3.02308263421e-06,1.43782317801e-05,-0.703416457704,0.710777944801,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.03065839241e-05,-4.39892038123e-06,-7.18565186812e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000314125116104,0.000225544776268,9.81002935704,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122880250000,13106,122880250000,RH_EXTIMU,3.02869975025e-06,1.43768317395e-05,-0.703416521568,0.710777881598,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.98275450784e-06,2.36541563283e-06,-7.18805604664e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000155364658779,-0.000296905626159,9.80888357387,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122882750000,13107,122882750000,RH_EXTIMU,3.03047689709e-06,1.43689250123e-05,-0.703416585432,0.710777818396,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.46079101612e-06,-3.49530968185e-06,-7.18807808651e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000371915640329,-0.000197825371445,9.81068188664,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122885250000,13108,122885250000,RH_EXTIMU,3.00800412467e-06,1.43792484292e-05,-0.703416649304,0.710777755185,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.85869612173e-05,-6.77548032255e-06,-7.18896858162e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000321879332215,0.000197721493506,9.80837023924,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122887750000,13109,122887750000,RH_EXTIMU,3.03695213744e-06,1.43677853683e-05,-0.703416713205,0.710777691946,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.29120164375e-05,9.77243403563e-06,-7.19220952148e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.48295533922e-05,-0.00061524413124,9.80963931911,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122890250000,13110,122890250000,RH_EXTIMU,3.02906997873e-06,1.43707114058e-05,-0.703416777107,0.710777628706,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.1276608895e-06,-2.77117232347e-06,-7.19232693714e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000328495460039,1.6548872196e-05,9.80960739279,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122892750000,13111,122892750000,RH_EXTIMU,3.01455922686e-06,1.43682398465e-05,-0.703416841005,0.71077756547,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.85941737087e-06,-9.57049613132e-06,-7.19189916597e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00039269364261,-3.81474285936e-05,9.81088725985,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122895250000,13112,122895250000,RH_EXTIMU,2.99881393326e-06,1.43723311494e-05,-0.703416904907,0.710777502229,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.12545471867e-05,-6.53342589584e-06,-7.19243689979e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000332922941918,7.3311089923e-05,9.80998889267,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122897750000,13113,122897750000,RH_EXTIMU,3.00799327379e-06,1.4370751977e-05,-0.703416968832,0.710777438966,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.10911501842e-06,4.26814448639e-06,-7.19492728105e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000156049647558,-0.000330045638315,9.80942687736,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122900250000,13114,122900250000,RH_EXTIMU,2.99128777225e-06,1.43697137724e-05,-0.703417032751,0.710777375709,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.9139952574e-06,-9.99051907899e-06,-7.19429665383e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000436231547659,7.63127145516e-05,9.81012863405,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122902750000,13115,122902750000,RH_EXTIMU,2.97657690715e-06,1.43738669224e-05,-0.703417096675,0.710777312448,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.07011509828e-05,-5.91615215762e-06,-7.19478813373e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00030632563434,-2.64700628794e-07,9.81048461531,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122905250000,13116,122905250000,RH_EXTIMU,2.96721954877e-06,1.4365803236e-05,-0.703417160601,0.710777249184,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.82204781328e-07,-9.8503137265e-06,-7.19504234163e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00043457741471,-0.000152581507937,9.8107227784,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122907750000,13117,122907750000,RH_EXTIMU,2.94137846742e-06,1.43718407678e-05,-0.703417224524,0.710777185922,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.80904401741e-05,-1.11080005426e-05,-7.19479454678e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000392421760592,0.000182603755124,9.81026644556,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122910250000,13118,122910250000,RH_EXTIMU,2.93966147325e-06,1.4377376565e-05,-0.703417288468,0.71077712264,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.09061616343e-06,2.18214113988e-06,-7.19710151885e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000144391410798,-0.000108730269228,9.80886891769,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122912750000,13119,122912750000,RH_EXTIMU,2.96486195568e-06,1.4363424446e-05,-0.703417352446,0.710777059325,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.21817552043e-05,6.24826422124e-06,-7.20080188584e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000172109605814,-0.000595615909746,9.80816482341,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122915250000,13120,122915250000,RH_EXTIMU,2.96677224449e-06,1.43569928498e-05,-0.703417416432,0.710776996002,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.70639411824e-06,-2.58158473826e-06,-7.20179628359e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00031105980049,-0.000165451991505,9.80912270091,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122917750000,13121,122917750000,RH_EXTIMU,2.96817584597e-06,1.43461336917e-05,-0.703417480434,0.710776932663,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.90982027169e-06,-5.38432203353e-06,-7.20359079663e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00032899300007,-0.000279416473695,9.80928035961,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122920250000,13122,122920250000,RH_EXTIMU,2.9473034254e-06,1.43417437484e-05,-0.703417544428,0.710776869331,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.39725290095e-06,-1.42412618402e-05,-7.20281099864e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000471680464738,7.95375237014e-05,9.81048092392,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122922750000,13123,122922750000,RH_EXTIMU,2.92260378001e-06,1.43490948814e-05,-0.703417608428,0.710776805994,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.81805984195e-05,-9.7187430958e-06,-7.20333284677e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00037183008053,0.000160470975952,9.8096350331,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122927750000,13124,122925250000,RH_EXTIMU,2.93051977434e-06,1.43346229029e-05,-0.703417672448,0.710776742637,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.26459627845e-05,-3.7738998838e-06,-7.20567212129e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000269597993922,-0.000451455422198,9.80971645472,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122927750000,13125,122927750000,RH_EXTIMU,2.92303054674e-06,1.43317844142e-05,-0.703417736472,0.710776679276,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.66033780901e-06,-5.82789292557e-06,-7.20602121602e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000345501082608,-4.3434549271e-05,9.81004821816,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122930250000,13126,122930250000,RH_EXTIMU,2.90415540953e-06,1.43294490171e-05,-0.703417800492,0.710776615919,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.4177159132e-06,-1.19490649516e-05,-7.20566894615e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000464862131608,1.05259869807e-05,9.81123804062,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122932750000,13127,122932750000,RH_EXTIMU,2.8594184142e-06,1.4326733899e-05,-0.703417864489,0.710776552585,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.39096373888e-05,-2.67183357228e-05,-7.2030959582e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000684771123527,0.000281156155883,9.8124331845,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122935250000,13128,122935250000,RH_EXTIMU,2.83469018716e-06,1.4322294784e-05,-0.703417928495,0.710776489242,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.15620744551e-05,-1.64390168125e-05,-7.20411364147e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000427344747126,-3.11202930491e-05,9.81019406198,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122935250000,13129,122937750000,RH_EXTIMU,2.82064766978e-06,1.43233049049e-05,-0.703417992511,0.710776425889,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.55242554443e-06,-7.32724991797e-06,-7.20514258793e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000323276697788,-8.4796663108e-07,9.80980445028,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122935250000,13130,122940250000,RH_EXTIMU,2.78970729521e-06,1.43157103315e-05,-0.70341805651,0.710776362552,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.33187471372e-05,-2.17290666216e-05,-7.2033793878e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000630418376269,0.000101626901268,9.81185251242,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122935250000,13131,122942750000,RH_EXTIMU,2.74335033516e-06,1.43248331908e-05,-0.703418120504,0.71077629922,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.14924181061e-05,-2.08986255068e-05,-7.2027959003e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000492747423115,0.000413778791108,9.8098200225,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122935250000,13132,122945250000,RH_EXTIMU,2.78397925179e-06,1.43670572966e-05,-0.703418184549,0.710776235838,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.57631061758e-07,4.68733936324e-05,-7.20841765804e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000756269567125,-0.00016472967437,9.81100909127,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122935250000,13133,122947750000,RH_EXTIMU,2.76100447212e-06,1.44433874609e-05,-0.703418248564,0.710776172483,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.60166855102e-05,3.04748168337e-05,-7.20526524152e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.66371416002e-05,0.000822087923166,9.81115629254,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122951500000,13134,122950250000,RH_EXTIMU,2.80082223121e-06,1.43668368574e-05,-0.703418312656,0.710776109057,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.57197653467e-05,-2.11208539797e-05,-7.21352743418e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000678125818021,-0.00154197107089,9.80342273194,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122951500000,13135,122952750000,RH_EXTIMU,2.8581328083e-06,1.42918693954e-05,-0.703418376794,0.710776045584,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.47756590554e-05,-1.03768313694e-05,-7.21883656725e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000277500728799,-0.00136368736523,9.80716305672,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122956500000,13136,122955250000,RH_EXTIMU,2.87231631436e-06,1.42836751596e-05,-0.703418440956,0.710775982086,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.26770967085e-05,3.32271709765e-06,-7.22155929035e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00019549712383,-0.000243634123727,9.80806820133,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122957750000,13137,122957750000,RH_EXTIMU,2.85650357836e-06,1.42833939982e-05,-0.703418505102,0.710775918604,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.83235223208e-06,-9.05767227458e-06,-7.21987174463e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0004088893336,9.05878598361e-05,9.81201517027,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122960250000,13138,122960250000,RH_EXTIMU,2.8424226594e-06,1.4296599479e-05,-0.703418569268,0.710775855103,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.5437007772e-05,-4.14334025423e-07,-7.22206429739e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000231419916686,6.29988169174e-05,9.80929447095,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122962750000,13139,122962750000,RH_EXTIMU,2.8350458647e-06,1.43083928671e-05,-0.70341863343,0.710775791605,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.08302704195e-05,2.55536530122e-06,-7.22164367237e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000222048576803,7.04764790595e-05,9.81193019588,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122965250000,13140,122965250000,RH_EXTIMU,2.7903751059e-06,1.4319018371e-05,-0.703418697581,0.710775728117,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.13791787599e-05,-1.90953332913e-05,-7.22051621457e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000593222974386,0.000399004644104,9.81036909389,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122967750000,13141,122967750000,RH_EXTIMU,2.79119453375e-06,1.42990914048e-05,-0.703418761756,0.710775664607,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.16804209347e-05,-1.08691781625e-05,-7.22299002588e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000326403495711,-0.000458458197219,9.80997662119,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122970250000,13142,122970250000,RH_EXTIMU,2.80332421948e-06,1.42868080988e-05,-0.703418825971,0.710775601056,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.38103111809e-05,-1.58157616086e-07,-7.2276465264e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00023333386094,-0.000418797803071,9.80686122875,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122972750000,13143,122972750000,RH_EXTIMU,2.8037608057e-06,1.42672623748e-05,-0.703418890187,0.710775537505,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.12481925269e-05,-1.0867834274e-05,-7.22768326405e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000432545921795,-0.000267410186324,9.81058649012,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122975250000,13144,122975250000,RH_EXTIMU,2.76479707747e-06,1.42704344399e-05,-0.703418954399,0.710775473958,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.39397288454e-05,-2.01219756677e-05,-7.2272719891e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000595532340087,0.000311953116538,9.80969912569,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122977750000,13145,122977750000,RH_EXTIMU,2.78518889566e-06,1.4262585606e-05,-0.703419018649,0.710775410374,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.60128923597e-05,7.0127700479e-06,-7.23147769058e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.30380641091e-05,-0.000519264572465,9.80952185311,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122980250000,13146,122980250000,RH_EXTIMU,2.75341735442e-06,1.4250699989e-05,-0.703419082874,0.710775346813,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.1376614545e-05,-2.46367863584e-05,-7.22880422968e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000747726515127,0.0001230446445,9.81214347569,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122982750000,13147,122982750000,RH_EXTIMU,2.71481715911e-06,1.42443595112e-05,-0.703419147111,0.710775283242,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.83799709073e-05,-2.53264322461e-05,-7.23007602439e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000568056564599,0.000116957113263,9.80908083104,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122985250000,13148,122985250000,RH_EXTIMU,2.71667513193e-06,1.42287347398e-05,-0.703419211374,0.710775219644,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.84996202735e-06,-7.83842895901e-06,-7.23292854085e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000309043433596,-0.000357810461138,9.8090311196,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122987750000,13149,122987750000,RH_EXTIMU,2.71754023116e-06,1.42040848968e-05,-0.703419275656,0.710775156028,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.43641213617e-05,-1.35289916872e-05,-7.23515467837e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000460764018466,-0.000406554831677,9.80877730736,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122990250000,13150,122990250000,RH_EXTIMU,2.71310085273e-06,1.4195186786e-05,-0.703419339971,0.710775092379,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.48383138113e-06,-7.55725690014e-06,-7.23879868737e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000308098827761,-0.000151463216813,9.80642124791,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122992750000,13151,122992750000,RH_EXTIMU,2.73707738058e-06,1.41479619784e-05,-0.703419404321,0.710775028695,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.02094783903e-05,-1.33599473303e-05,-7.24275621636e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000497370600341,-0.000889366676737,9.80816961882,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122992750000,13152,122995250000,RH_EXTIMU,2.69403949836e-06,1.41159970827e-05,-0.703419468645,0.710774965038,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.48355180476e-06,-4.23942452661e-05,-7.23985752431e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000945140740198,9.40845603792e-05,9.81203356541,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+122997750000,13153,122997750000,RH_EXTIMU,2.61622498563e-06,1.41107051562e-05,-0.703419532931,0.710774901418,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.12680677102e-05,-4.67975097683e-05,-7.2356144716e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000934741179725,0.000603109143015,9.81387949818,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123000250000,13154,123000250000,RH_EXTIMU,2.53249280039e-06,1.41105505655e-05,-0.703419597181,0.710774837833,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.75239364748e-05,-4.72064037382e-05,-7.23166407434e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000922353864802,0.000635985884576,9.81406743698,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123002750000,13155,123002750000,RH_EXTIMU,2.45181728932e-06,1.41074747783e-05,-0.703419661397,0.710774774281,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.4141989733e-05,-4.7147354833e-05,-7.2278257697e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000934317885765,0.000559568800549,9.81390730404,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123005250000,13156,123005250000,RH_EXTIMU,2.37356863309e-06,1.40992985497e-05,-0.703419725583,0.71077471076,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.98918318713e-05,-4.86818892178e-05,-7.22441936372e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000943094120151,0.000483959120747,9.81363544649,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123006500000,13157,123007750000,RH_EXTIMU,2.30820317866e-06,1.41013744974e-05,-0.703419789747,0.710774647261,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.83354552785e-05,-3.56024607624e-05,-7.22184615647e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000664041073634,0.000466469529226,9.81313140557,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123010250000,13158,123010250000,RH_EXTIMU,2.18754140282e-06,1.41094819931e-05,-0.703419853952,0.71077458372,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.31722016968e-05,-6.32900246327e-05,-7.2266315196e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00147019112226,0.00125813911724,9.79681800071,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123012750000,13159,123012750000,RH_EXTIMU,2.33540592894e-06,1.41773997205e-05,-0.703419918201,0.710774520134,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.5859771734e-05,0.000121828635486,-7.23135150973e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00313076001713,-0.000803290445405,9.83288211176,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123015250000,13160,123015250000,RH_EXTIMU,1.89708771093e-06,1.49875488315e-05,-0.703419981916,0.710774457063,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000705135513477,0.000214009860726,-7.17288477091e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00224112442446,0.0132831935143,9.86017780789,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123017750000,13161,123017750000,RH_EXTIMU,1.54823469309e-06,1.53813158435e-05,-0.703420045453,0.710774394176,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000419950661838,2.75921381492e-05,-7.15222277002e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000508414897296,0.00574206384664,9.83280009956,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123020250000,13162,123020250000,RH_EXTIMU,1.42787993464e-06,1.54080145406e-05,-0.70342010898,0.710774331306,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.34595238081e-05,-5.25458646188e-05,-7.15029338391e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00123034913192,0.000397763019088,9.81486833802,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123027750000,13163,123022750000,RH_EXTIMU,1.44338885589e-06,1.51249039722e-05,-0.703420172722,0.710774268229,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000168136065777,-0.000152254045595,-7.17402325153e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00314510300063,-0.00406398216802,9.76967036558,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123027750000,13164,123025250000,RH_EXTIMU,2.09354443169e-06,1.42082496885e-05,-0.703420237149,0.710774204486,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000885526427821,-0.000155360687372,-7.24958317446e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0018863002175,-0.0163286479249,9.74983302371,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123027750000,13165,123027750000,RH_EXTIMU,2.47517219291e-06,1.3973564201e-05,-0.70342030166,0.710774140646,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000349067791934,8.13096573087e-05,-7.26031557121e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00227883661769,-0.00395475732979,9.81235715406,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123030250000,13166,123030250000,RH_EXTIMU,2.16340951027e-06,1.46035700336e-05,-0.703420365749,0.710774077208,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000531800554551,0.000182793905486,-7.2145577655e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00203162431538,0.0105877259136,9.84813479249,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123032750000,13167,123032750000,RH_EXTIMU,4.24585799856e-06,2.01069248322e-05,-0.703420440324,0.710774003261,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00191281615493,0.00430118361957,-8.40028657321e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0713794541531,0.0395672635701,9.75759755592,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123035250000,13168,123035250000,RH_EXTIMU,7.30653459392e-06,2.26224759769e-05,-0.703420515659,0.710773928605,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000324768875374,0.0031527456138,-8.48071937136e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0312145912063,-0.00809749439903,9.7813298953,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123037750000,13169,123037750000,RH_EXTIMU,5.2575607051e-06,2.14341627423e-05,-0.703420596753,0.710773848405,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000496376713437,-0.00182872889099,-9.12731393999e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0273948376931,0.00469450777749,9.80774138481,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123040250000,13170,123040250000,RH_EXTIMU,5.91139437658e-06,2.14288536412e-05,-0.7034206708,0.710773775119,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000374771502748,0.000364918146205,-8.3334397837e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000309486589661,-0.00176023759565,9.83373581569,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123042750000,13171,123042750000,RH_EXTIMU,7.96155587249e-06,2.14124981433e-05,-0.703420744796,0.710773701869,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00117496627206,0.00114440163832,-8.32604523106e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0428411059742,-0.0339737846962,9.84449778759,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123045250000,13172,123045250000,RH_EXTIMU,4.71227740374e-06,2.1269364146e-05,-0.703420825543,0.710773621991,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00176705271822,-0.00190987575534,-9.09196808973e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0508299108618,0.0397074487931,9.78250417538,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123047750000,13173,123047750000,RH_EXTIMU,5.62681758473e-06,2.15745776449e-05,-0.703420899496,0.710773548787,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000348271538724,0.000688196417304,-8.32314449293e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00821268844652,-0.00255220988039,9.81604629331,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123050250000,13174,123050250000,RH_EXTIMU,8.04910383275e-06,2.15591698839e-05,-0.703420973519,0.710773475507,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00138602971452,0.00135434920564,-8.3286375133e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0421997701797,-0.037832228569,9.83832921798,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123052750000,13175,123052750000,RH_EXTIMU,4.95358930315e-06,2.15786838539e-05,-0.703421054407,0.710773395484,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00177114701475,-0.00173086300601,-9.10795660214e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0450586202873,0.0403493098893,9.77296744916,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123055250000,13176,123055250000,RH_EXTIMU,5.97792920109e-06,2.1810365959e-05,-0.703421128591,0.710773322051,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000452084353043,0.000708173555716,-8.34893546721e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00510501678309,-0.00451558662627,9.81739655957,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123057750000,13177,123057750000,RH_EXTIMU,8.63551430249e-06,2.21036510164e-05,-0.70342120302,0.710773248356,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00134611179914,0.00166228949461,-8.37470825567e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.050377619798,-0.0368780851787,9.83012373508,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123060250000,13178,123060250000,RH_EXTIMU,5.41443431655e-06,2.18955247005e-05,-0.703421284092,0.710773168161,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00171444362947,-0.00193096440312,-9.12840100866e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0522871823374,0.0393193769542,9.77947310045,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123062750000,13179,123062750000,RH_EXTIMU,6.20522219585e-06,2.20217802164e-05,-0.703421358374,0.710773094637,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000378609610951,0.000516797812939,-8.35989314195e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00403546649562,-0.00307801312206,9.82035164835,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123065250000,13180,123065250000,RH_EXTIMU,8.94371628212e-06,2.24512974904e-05,-0.703421432983,0.710773020757,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0013154547148,0.0017852845729,-8.39526370654e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.052922666077,-0.0364716981771,9.82894526048,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123067750000,13181,123067750000,RH_EXTIMU,5.93122117231e-06,2.24751943968e-05,-0.703421514299,0.710772940313,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00172640584023,-0.0016816538175,-9.15616566591e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0464986120378,0.0396410830714,9.77130954309,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123070250000,13182,123070250000,RH_EXTIMU,9.49260789732e-06,2.27912163164e-05,-0.703421589148,0.710772866189,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00184723425509,0.00218382167532,-8.42096694623e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0524921090735,-0.0424856225678,9.8378106521,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123072750000,13183,123072750000,RH_EXTIMU,6.4525872114e-06,2.28804103703e-05,-0.703421670726,0.710772785486,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00177880209124,-0.00166001472294,-9.18580029395e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0451302855376,0.0411410293542,9.77142226877,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123075250000,13184,123075250000,RH_EXTIMU,6.2763558448e-06,2.27880362571e-05,-0.703421752384,0.710772704677,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.82240931882e-05,-0.000151696516779,-9.19091608316e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000319311605575,-0.00113372633945,9.80577955604,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123077750000,13185,123077750000,RH_EXTIMU,6.28215220719e-06,2.29072826591e-05,-0.703421834028,0.710772623874,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.38065993999e-05,7.10685632067e-05,-9.18956496256e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00359375369507,0.00127958511808,9.80474882064,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123080250000,13186,123080250000,RH_EXTIMU,6.66663366713e-06,2.31394198517e-05,-0.703421915897,0.710772542841,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.79927286228e-05,0.000348360605668,-9.21465837328e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00338438770038,-0.00212235081593,9.80691888742,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123082750000,13187,123082750000,RH_EXTIMU,7.56855761586e-06,2.39575892829e-05,-0.703421998252,0.710772461301,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.24375351066e-05,0.000972773421436,-9.27019333679e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0169190218163,-0.00115257136599,9.79020959302,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123085250000,13188,123085250000,RH_EXTIMU,7.95077475291e-06,2.40930639071e-05,-0.703422080689,0.710772379708,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000141100941581,0.000292122324234,-9.27838446281e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000460896877703,-0.00250926695709,9.80806961693,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123087750000,13189,123087750000,RH_EXTIMU,8.61553098784e-06,2.47745062573e-05,-0.703422163492,0.71077229773,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.47886244435e-06,0.000761564745287,-9.32065893849e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0142863072536,6.96616878557e-05,9.79311038356,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123090250000,13190,123090250000,RH_EXTIMU,8.93184113601e-06,2.48928823043e-05,-0.703422246353,0.710772215718,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000113247132081,0.000245311441267,-9.3262452633e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000776347885156,-0.00213536748799,9.81046756915,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123092750000,13191,123092750000,RH_EXTIMU,8.96721077865e-06,2.51275880475e-05,-0.703422329199,0.71077213372,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000111963749694,0.000153362732586,-9.32521378056e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00501027400887,0.00237552403972,9.80349977796,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123095250000,13192,123095250000,RH_EXTIMU,9.72055764022e-06,2.56545354631e-05,-0.703422412463,0.710772051288,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00013183536736,0.000723569494132,-9.37216636297e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00855603235521,-0.00322096812995,9.80339394337,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123097750000,13193,123097750000,RH_EXTIMU,9.98177633542e-06,2.59958761782e-05,-0.703422495778,0.710771968819,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.35494579491e-05,0.000341091064629,-9.37797836935e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0064787200755,0.00128474009456,9.79886879754,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123100250000,13194,123100250000,RH_EXTIMU,1.08295305799e-05,2.65559534967e-05,-0.703422579556,0.710771885873,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000166873579273,0.000795534387861,-9.43013305263e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00924016706007,-0.00372099964976,9.80107077551,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123102750000,13195,123102750000,RH_EXTIMU,1.11538094183e-05,2.69630968492e-05,-0.703422663405,0.710771802872,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.47219361778e-05,0.000413993921329,-9.43825302473e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00773107983127,0.00141818176426,9.79714463279,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123105250000,13196,123105250000,RH_EXTIMU,1.2086886687e-05,2.75820393982e-05,-0.703422747752,0.710771719357,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000182264001517,0.000877020735978,-9.4943673232e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0100926440247,-0.00403141649797,9.80045558413,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123107750000,13197,123107750000,RH_EXTIMU,1.24310694297e-05,2.80293921912e-05,-0.703422832167,0.710771635791,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.6031546079e-05,0.000448058375238,-9.50222320358e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00839360055724,0.00171817506498,9.79598105061,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123110250000,13198,123110250000,RH_EXTIMU,1.34455963434e-05,2.86982356194e-05,-0.703422917124,0.710771551668,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00020049651399,0.000951230107495,-9.56317240104e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0108791038199,-0.00443496584268,9.7999773554,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123112750000,13199,123112750000,RH_EXTIMU,1.31656917123e-05,2.8416840395e-05,-0.703423001788,0.710771467896,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.03874640921e-07,-0.00031751822933,-9.528629688e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00856550294788,0.000558167654955,9.81751776796,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123115250000,13200,123115250000,RH_EXTIMU,1.31893911541e-05,2.8616315169e-05,-0.703423086508,0.710771384043,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.87733966925e-05,0.000126762382333,-9.53618479988e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00361863786096,0.00148291836014,9.80927775524,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123117750000,13201,123117750000,RH_EXTIMU,1.43771037084e-05,2.97476414988e-05,-0.703423171883,0.710771299481,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.8715676616e-05,0.00131166408474,-9.6116649177e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0225942284776,-0.00130328256555,9.78597373531,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123120250000,13202,123120250000,RH_EXTIMU,1.54857197826e-05,3.06817241825e-05,-0.703423257717,0.710771214472,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000104736687282,0.00115499735446,-9.6629187454e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0173888004594,-0.00145213826893,9.78374574864,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123122750000,13203,123122750000,RH_EXTIMU,1.68025887137e-05,3.1518004012e-05,-0.703423344197,0.71077112882,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000278190261732,0.00121657692188,-9.73514813249e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0139498462745,-0.00538282081517,9.79159714323,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123125250000,13204,123125250000,RH_EXTIMU,1.68390174119e-05,3.14453742003e-05,-0.703423430533,0.710771043378,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.15889029676e-05,-2.0797707407e-05,-9.71717751983e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00474418238558,-0.000471473968904,9.81262596608,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123127750000,13205,123127750000,RH_EXTIMU,1.65868034224e-05,3.13658441679e-05,-0.703423516691,0.71077095812,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.86551738599e-05,-0.000187151714865,-9.69739734402e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00348781858569,0.0017661148487,9.81953277764,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123130250000,13206,123130250000,RH_EXTIMU,1.63704849721e-05,3.13510480145e-05,-0.703423602699,0.710770873006,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000114672640251,-0.000130143134454,-9.68079979992e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00240356849541,0.00171271627114,9.81965821838,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123132750000,13207,123132750000,RH_EXTIMU,1.88070006445e-05,3.40230340568e-05,-0.703423690108,0.710770786319,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000118183613823,0.00289045901692,-9.84582831722e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0568657698852,0.00167075269588,9.74372121982,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123135250000,13208,123135250000,RH_EXTIMU,2.17602206541e-05,3.59144033875e-05,-0.703423778827,0.710770698339,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000614906550076,0.00273735704644,-9.99050119083e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0318304883728,-0.0115914102835,9.76603050644,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123137750000,13209,123137750000,RH_EXTIMU,2.23694152591e-05,3.60581036394e-05,-0.703423867609,0.710770610448,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000265536481359,0.000424528899271,-9.99273728585e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00209610175652,-0.00341227546802,9.80163771551,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123140250000,13210,123140250000,RH_EXTIMU,2.12746262218e-05,3.53891997966e-05,-0.703423955493,0.71077052354,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000246092664929,-0.000996429410894,-9.88988034049e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0200587169285,0.00542249552566,9.85047020224,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123142750000,13211,123142750000,RH_EXTIMU,2.12563187235e-05,3.59058174257e-05,-0.703424043498,0.71077043642,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00030112694269,0.000283455888545,-9.90759385508e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00962192196621,0.00417813608875,9.80611749829,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123145250000,13212,123145250000,RH_EXTIMU,2.16130011171e-05,3.61305749573e-05,-0.703424131698,0.710770349109,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.63395773339e-05,0.000328520992516,-9.9278505525e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00265521450267,-0.00197820131938,9.80750018471,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123147750000,13213,123147750000,RH_EXTIMU,2.3757004233e-05,3.77784061881e-05,-0.703424221133,0.710770260445,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000291819790449,0.00214349950388,-0.000100715787487,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0325782238626,-0.006816056506,9.77539699278,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123150250000,13214,123150250000,RH_EXTIMU,2.23868001275e-05,3.64017291495e-05,-0.703424309481,0.710770173125,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.40555450898e-06,-0.00155386772253,-9.93897807181e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0330581925872,0.00234733745812,9.83805203074,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123152750000,13215,123152750000,RH_EXTIMU,2.14087452426e-05,3.59605741011e-05,-0.703424397445,0.710770086123,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000307878323852,-0.000801236987531,-9.89978354035e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00799107479379,0.00512588633904,9.83140213346,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123155250000,13216,123155250000,RH_EXTIMU,2.10999504457e-05,3.59514444829e-05,-0.703424485251,0.710769999234,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000170444072475,-0.00017896128699,-9.88322395625e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00188182213746,0.00224823110093,9.82230046044,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123157750000,13217,123157750000,RH_EXTIMU,2.02136935757e-05,3.52028991107e-05,-0.703424572575,0.710769912876,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.26997520522e-05,-0.000924365691237,-9.82639232654e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0176360498013,0.00107005519929,9.83467371802,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123160250000,13218,123160250000,RH_EXTIMU,1.88245389599e-05,3.46830124601e-05,-0.703424658867,0.71076982754,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00049733079805,-0.00107734721707,-9.71194731301e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0163568866188,0.00924362123786,9.86167007464,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123164000000,13219,123162750000,RH_EXTIMU,2.1759618943e-05,3.78174716479e-05,-0.70342474715,0.710769739925,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.49479042175e-05,0.00343399042329,-9.94698741602e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0682376173519,-0.00111020878727,9.72657968363,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123165250000,13220,123165250000,RH_EXTIMU,2.25733018363e-05,3.74210516419e-05,-0.70342483549,0.710769652494,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000685758451386,0.000232482178453,-9.9400565566e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0155556183118,-0.0116597037213,9.81479295792,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123167750000,13221,123167750000,RH_EXTIMU,2.42236105144e-05,3.98070901067e-05,-0.703424924889,0.710769563834,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000404323233726,0.0022854345124,-0.000100720191786,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0569909754961,0.00980072628148,9.71911556469,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123170250000,13222,123170250000,RH_EXTIMU,2.83615608972e-05,4.13091862075e-05,-0.703425016432,0.710769472999,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00150761855702,0.00318270642089,-0.000103066197355,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0194829587951,-0.0317806798294,9.80247028449,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123174000000,13223,123172750000,RH_EXTIMU,2.460465607e-05,3.88062152483e-05,-0.70342510535,0.710769385281,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000727707772057,-0.00353738807021,-9.99899232312e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0550923293762,0.019734109002,9.85033758604,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123175250000,13224,123175250000,RH_EXTIMU,2.55703712585e-05,4.0294018727e-05,-0.70342519514,0.710769296302,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00028812148329,0.0013894357726,-0.000101127660686,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0321464688481,0.00192683012302,9.80556985167,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123177750000,13225,123177750000,RH_EXTIMU,2.42087083515e-05,3.88696163169e-05,-0.703425283861,0.710769208624,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.73105391179e-05,-0.00157619858437,-9.98027522842e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0383608328868,-0.000492898432696,9.86062859367,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123181500000,13226,123180250000,RH_EXTIMU,2.27140140575e-05,3.80965312405e-05,-0.703425371968,0.710769121519,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000414855646206,-0.00128071165847,-9.91476916956e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0143836267804,0.00695670862075,9.83587092802,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123181500000,13227,123182750000,RH_EXTIMU,2.30678995678e-05,3.89485483049e-05,-0.703425460331,0.710769034011,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000278235338531,0.000683616634976,-9.94932784569e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0180971517267,0.00440512015682,9.80130944804,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123185250000,13228,123185250000,RH_EXTIMU,2.64903143661e-05,4.27267919942e-05,-0.703425550424,0.710768944512,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000180128618133,0.00407429898389,-0.000101556373222,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0767014327979,0.00322404369252,9.71669291807,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123187750000,13229,123187750000,RH_EXTIMU,3.24294600365e-05,4.66483886838e-05,-0.703425643561,0.710768851845,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00117025233901,0.00557207795539,-0.000104986348904,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0730533589123,-0.023216768428,9.71193215224,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123190250000,13230,123190250000,RH_EXTIMU,3.21681512095e-05,4.51740471699e-05,-0.703425736051,0.710768760417,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000681093386278,-0.000985380871486,-0.000104013259522,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0401780163515,-0.00904582869158,9.83002105395,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123192750000,13231,123192750000,RH_EXTIMU,4.00421106714e-05,5.34882110022e-05,-0.70342583319,0.710768663305,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000201459915963,0.0091585559309,-0.000109813361252,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.180751684918,0.00265968843341,9.58486841731,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123195250000,13232,123195250000,RH_EXTIMU,4.64498277333e-05,5.70646726172e-05,-0.703425932758,0.710768564098,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00163091063816,0.00563951349937,-0.000112284134303,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0540302718324,-0.0278233972597,9.71856690669,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123197750000,13233,123197750000,RH_EXTIMU,4.72682763009e-05,5.70920940471e-05,-0.70342603237,0.710768465459,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00044995906743,0.000476167391383,-0.000112112305704,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00928682517139,-0.0043802411161,9.79897926193,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123200250000,13234,123200250000,RH_EXTIMU,4.01412963808e-05,5.10475774403e-05,-0.703426127681,0.71076837203,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000651001911284,-0.007447643338,-0.000106868433661,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.136472090717,0.0154626788463,9.99432353075,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123202750000,13235,123202750000,RH_EXTIMU,3.82499208687e-05,5.21241998684e-05,-0.703426222375,0.710768278341,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00168131651572,-0.000452170240345,-0.000106678697346,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0275604391708,0.0271822341844,9.82984525763,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123207750000,13236,123205250000,RH_EXTIMU,4.36641108509e-05,5.77636763738e-05,-0.70342631993,0.710768181045,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-9.49698844311e-05,0.0062534764424,-0.000110170541359,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.114082155319,-0.00165813261552,9.68296602062,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123207750000,13237,123207750000,RH_EXTIMU,4.86724975991e-05,5.92034984212e-05,-0.703426419992,0.710768081573,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00203760267056,0.0036371297068,-0.000112692986853,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.015052249122,-0.0402041479024,9.78106817967,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123207750000,13238,123210250000,RH_EXTIMU,5.81823971692e-05,6.90709455535e-05,-0.7034265251,0.710767975946,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000145342858762,0.0109623857724,-0.000119140247228,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.211281867733,0.00657137373448,9.50072260659,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123207750000,13239,123212750000,RH_EXTIMU,5.2471751541e-05,6.02229744983e-05,-0.70342662575,0.710767877584,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0017319729392,-0.00824469852062,-0.000112486927908,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.219249934234,-0.0257660298002,10.0748043755,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123207750000,13240,123215250000,RH_EXTIMU,4.80411097569e-05,6.16206102086e-05,-0.703426724618,0.710767779931,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00330582476073,-0.00169858891163,-0.000111443220121,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0475390649389,0.0641974174792,9.7634392366,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123217750000,13241,123217750000,RH_EXTIMU,5.65403888995e-05,6.69514635574e-05,-0.703426827985,0.710767676524,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00183292831525,0.00781409623602,-0.000116753760617,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0939438642522,-0.0470820905023,9.77663629983,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123220250000,13242,123220250000,RH_EXTIMU,5.62979214737e-05,6.83687973346e-05,-0.703426930573,0.71076757488,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000935452797198,0.000669470358624,-0.000115609235732,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0246539212833,0.0282372522196,9.69799938453,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123222750000,13243,123222750000,RH_EXTIMU,5.9699704723e-05,6.96249134711e-05,-0.70342703489,0.710767471241,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00122744342297,0.0026285710261,-0.000117508158052,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0135521281045,-0.0273810673883,9.8373169093,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123225250000,13244,123225250000,RH_EXTIMU,6.32175933014e-05,7.51803462117e-05,-0.703427140736,0.710767365618,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00112594170886,0.00513855987795,-0.000119693374766,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.115315759234,0.026163697415,9.63222817346,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123227750000,13245,123227750000,RH_EXTIMU,7.71762916189e-05,8.55281912039e-05,-0.703427253573,0.710767251398,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00211395833513,0.0137390713804,-0.000128121058392,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.200385155121,-0.0445974424524,9.57660685192,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123230250000,13246,123230250000,RH_EXTIMU,8.12963973184e-05,8.6046063389e-05,-0.70342736783,0.710767137799,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00205133546717,0.00261302569934,-0.000128644758756,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0171781844429,-0.032437190033,9.78549831312,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123232750000,13247,123232750000,RH_EXTIMU,7.23543733367e-05,7.22937193277e-05,-0.703427475315,0.710767033922,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00265447686926,-0.0128518227357,-0.000119294906847,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.265367787735,-0.0551977488642,10.5013547044,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123235250000,13248,123235250000,RH_EXTIMU,3.46705267159e-05,3.86222841282e-05,-0.703427544001,0.710766971409,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00247921099959,-0.0403523197482,-7.44646716606e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.721348921339,0.0242973211254,11.5941462612,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123237750000,13249,123237750000,RH_EXTIMU,-2.16639387805e-05,7.46222826783e-06,-0.703427582568,0.710766934767,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0144974664917,-0.0494198025634,-4.34261947147e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.821136855561,0.15304864717,10.7585492701,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123240250000,13250,123240250000,RH_EXTIMU,-4.31602414881e-05,3.72985583079e-05,-0.703475813917,0.710719196293,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0290137864184,0.00486958857755,-0.0542890570965,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.52376453702,-0.966135431648,12.4857610646,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123244000000,13251,123242750000,RH_EXTIMU,-0.000351700411324,0.00050275944347,-0.70372548898,0.710471716326,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.437381844015,0.0910251632368,-0.281229180291,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.692136561126,4.22333736335,25.1962740488,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123245250000,13252,123245250000,RH_EXTIMU,-0.00102746097185,0.00147130823294,-0.704136562864,0.710062307417,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.929311111149,0.170341648318,-0.464133701087,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.434537990824,2.57133895357,22.6611619698,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123249000000,13253,123247750000,RH_EXTIMU,-0.00204802396578,0.00290765531002,-0.704649006195,0.709547129659,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.38865937772,0.242051908048,-0.581318721227,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.403804952217,2.04871488447,22.4881219715,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123250250000,13254,123250250000,RH_EXTIMU,-0.00338969781313,0.00477896940546,-0.705200349234,0.708983877702,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.81612249922,0.308114950754,-0.630534567781,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.397320905238,1.67389206312,22.4150615136,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123252750000,13255,123252750000,RH_EXTIMU,-0.00502824900768,0.00705499744825,-0.705731417456,0.708426502989,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.21289393813,0.370099842027,-0.615757018835,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.414744010841,1.44282208423,22.3634067171,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123255250000,13256,123255250000,RH_EXTIMU,-0.0069397398825,0.00970771200621,-0.706190421056,0.707921386559,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.58044990455,0.428901367669,-0.545436136611,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.420202325467,1.30619369163,22.0774539414,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123257750000,13257,123257750000,RH_EXTIMU,-0.00910132254894,0.0127107314749,-0.706535758637,0.707504646629,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.92038585448,0.484685031184,-0.431131768078,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.438901727516,1.2231181317,21.9742128923,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123260250000,13258,123260250000,RH_EXTIMU,-0.0114919425868,0.0160388841141,-0.706737567994,0.707200607634,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.23443764157,0.537062478917,-0.286153941353,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.451529698072,1.18273096192,21.8222549241,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123262750000,13259,123262750000,RH_EXTIMU,-0.0140927005425,0.0196678425456,-0.706778198725,0.707021321862,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.52432175478,0.585354527988,-0.12436164795,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.468311706077,1.16155091121,21.8280788066,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123265250000,13260,123265250000,RH_EXTIMU,-0.0168868903013,0.0235739336431,-0.70665170916,0.706967088717,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.79164965584,0.628883504162,0.0409535198198,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.454732031813,1.2025415823,21.352027711,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123267750000,13261,123267750000,RH_EXTIMU,-0.0198596422125,0.027733966218,-0.706362640958,0.707027751356,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.03771522354,0.667198420386,0.197920561394,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.417997582832,1.2816160726,20.8126383248,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123272750000,13262,123270250000,RH_EXTIMU,-0.0229974936147,0.0321252386835,-0.705924210732,0.707184624429,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.2635590955,0.700189595478,0.336782167833,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.374956005716,1.39045548859,20.2143858921,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123272750000,13263,123272750000,RH_EXTIMU,-0.0262879233157,0.0367256039323,-0.705356165336,0.707412789767,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.46998560209,0.728100003345,0.450299578771,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.30429737983,1.4389280155,19.3429632583,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123275250000,13264,123275250000,RH_EXTIMU,-0.0297188805761,0.0415134637318,-0.704682460537,0.707683580619,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.65752587102,0.751437325954,0.533963376018,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.226156546406,1.55607271296,18.1929322287,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123277750000,13265,123277750000,RH_EXTIMU,-0.033278377655,0.0464676223796,-0.703929089745,0.707966910428,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.82639935991,0.77081305018,0.585820242854,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.109819314528,1.80328289582,17.208210139,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123280250000,13266,123280250000,RH_EXTIMU,-0.0369542872923,0.0515672467965,-0.703121970839,0.708233502336,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.97669698839,0.786835771516,0.606381446096,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0210335676677,2.07914852424,16.1835888214,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123282750000,13267,123282750000,RH_EXTIMU,-0.0407342194854,0.0567917371177,-0.702285169021,0.708456747678,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.10838023477,0.799981758256,0.598217346378,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.167542809346,2.38240263266,15.1253162521,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123285250000,13268,123285250000,RH_EXTIMU,-0.0446054804675,0.0621205992803,-0.701439513211,0.708614134465,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.22133204824,0.810528988575,0.565486059387,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.333349743887,2.71077878826,14.0424611761,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123287750000,13269,123287750000,RH_EXTIMU,-0.048555080724,0.0675333487925,-0.700601659675,0.708688200408,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.31540293493,0.818543220802,0.513407418543,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.513517174749,3.06216150203,12.9425436593,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123290250000,13270,123290250000,RH_EXTIMU,-0.0525697507747,0.0730094866611,-0.699783593301,0.708667029505,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.39045425505,0.82392502635,0.447756946502,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.734869594916,3.32196079731,11.7051321478,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123292750000,13271,123292750000,RH_EXTIMU,-0.0566359572819,0.0785285419683,-0.698992559255,0.708544309514,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.44639139191,0.826473113856,0.374375790845,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.955363672511,3.60027684557,10.4647588514,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123299000000,13272,123295250000,RH_EXTIMU,-0.0607399216071,0.0840701808927,-0.698231417027,0.708318964086,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.48319522165,0.825962014894,0.298695125262,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.29006765123,3.52088866302,8.67365811006,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123299000000,13273,123297750000,RH_EXTIMU,-0.0648675941308,0.0896142833104,-0.697499222176,0.707994569557,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.5008721207,0.822183190494,0.225489193417,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.5460725741,3.4548842708,6.88723203617,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123299000000,13274,123300250000,RH_EXTIMU,-0.069004723136,0.0951411058719,-0.69679226657,0.707578303374,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.49954415334,0.815015352535,0.158354253652,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.81149705677,3.88849442084,5.84356938906,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123299000000,13275,123302750000,RH_EXTIMU,-0.0731369161087,0.100631529419,-0.69610488074,0.707080109887,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.47949267128,0.804478652674,0.0999733412604,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.05675813349,4.31881248513,4.84548969631,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123305250000,13276,123305250000,RH_EXTIMU,-0.0772497229608,0.106067170621,-0.695430364011,0.706511744014,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.44108801411,0.790688072325,0.0519708855192,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.30760802698,4.38185573901,4.19221655644,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123322750000,13277,123307750000,RH_EXTIMU,-0.0813290011253,0.111430649612,-0.694761857243,0.705885802112,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.38503713619,0.773811500998,0.0149270362576,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.55280626248,4.43391871878,3.58827703675,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123322750000,13278,123310250000,RH_EXTIMU,-0.0853610783205,0.116705583336,-0.694093143192,0.705214862081,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.31211255914,0.754041509065,-0.0115198290214,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.78759300986,4.83497532291,2.75200720919,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123322750000,13279,123312750000,RH_EXTIMU,-0.0893326940333,0.121876325796,-0.693419320915,0.704510806424,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.22288349957,0.731575080541,-0.0284964436084,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.01551776334,5.21865450926,1.98306961589,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123322750000,13280,123315250000,RH_EXTIMU,-0.0932312770529,0.126928049807,-0.692737200103,0.703784321185,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.11810771087,0.706602535321,-0.0376468830153,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.87200053425,3.88070995891,2.47706553182,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123322750000,13281,123317750000,RH_EXTIMU,-0.0970456537242,0.131847363466,-0.692045443834,0.703044463394,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.99929012325,0.67935697936,-0.0409581079386,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.06577279209,4.21621572368,1.82182996951,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123322750000,13282,123320250000,RH_EXTIMU,-0.100765700071,0.136621712266,-0.691344743494,0.702298531303,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.8673899933,0.649994180136,-0.0405953854745,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.57199008869,2.89619603961,3.01991921036,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123322750000,13283,123322750000,RH_EXTIMU,-0.104382882867,0.141240064066,-0.690637501886,0.701552064394,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.72407450871,0.618771070111,-0.0385486173454,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.38865872806,2.27283036316,3.59352011724,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123325250000,13284,123325250000,RH_EXTIMU,-0.107890162687,0.145692808761,-0.68992756456,0.700809013877,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.57090945548,0.585936406514,-0.0365591254878,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.2067233896,1.61921563447,4.20596244243,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123329000000,13285,123327750000,RH_EXTIMU,-0.111281805591,0.149971565117,-0.689219907519,0.700072002355,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.40925683942,0.551707748714,-0.0360436997475,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.33995428746,1.84792465738,3.71202842259,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123330250000,13286,123330250000,RH_EXTIMU,-0.114552753141,0.154068413118,-0.688520494962,0.699342633367,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.23968853763,0.516193758027,-0.0381609471967,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.10579356168,1.45251373187,4.13906572692,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123332750000,13287,123332750000,RH_EXTIMU,-0.117698925608,0.157976532262,-0.687835743838,0.698621762948,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.06333681669,0.479628766878,-0.0435989065447,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.87412621672,1.03147432729,4.60127478767,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123332750000,13288,123335250000,RH_EXTIMU,-0.12071708659,0.161690258566,-0.687172065651,0.697909877763,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.88131169973,0.442272122884,-0.0525578571342,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.96430254525,1.19229401999,4.21716717697,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123337750000,13289,123337750000,RH_EXTIMU,-0.123604358209,0.16520453158,-0.686535710028,0.697207389687,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.69414164802,0.404289397763,-0.0649779957617,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.05407249986,1.33260643385,3.87779223912,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123340250000,13290,123340250000,RH_EXTIMU,-0.126358119809,0.168514965393,-0.685932501859,0.696514849009,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.50235350366,0.365885136072,-0.0805143089928,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.73273025144,0.732280820534,4.4993082815,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123342750000,13291,123342750000,RH_EXTIMU,-0.128976219885,0.17161865853,-0.685367417383,0.695833079077,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.30708306805,0.327532019457,-0.0984567965042,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.41275443455,0.106180182045,5.14944197346,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123345250000,13292,123345250000,RH_EXTIMU,-0.131456222677,0.174514895094,-0.684844515555,0.695163148063,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-3.10944713499,0.290492625374,-0.117892786675,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.46254032292,0.173370231142,4.89115510269,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123347750000,13293,123347750000,RH_EXTIMU,-0.133803809307,0.177195540195,-0.684365344898,0.694508715462,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.90995244627,0.245578251299,-0.137907626693,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.45612408488,0.221288007197,4.66652384504,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123350250000,13294,123350250000,RH_EXTIMU,-0.136016554103,0.17966158592,-0.683932177651,0.693871737375,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.70915096752,0.202620104147,-0.157767902932,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.779300496057,-1.22363624832,6.15778881611,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123352750000,13295,123352750000,RH_EXTIMU,-0.13808808236,0.181919113606,-0.683546788705,0.693253853408,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.50772636476,0.166592725704,-0.176234806821,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0213329462395,-2.68532947022,7.65142932917,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123355250000,13296,123355250000,RH_EXTIMU,-0.140021921303,0.183970722581,-0.683207784305,0.692658471581,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.30952207249,0.129532417558,-0.192364066922,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.500844068491,-3.55339290796,9.34772245355,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123357750000,13297,123357750000,RH_EXTIMU,-0.141819580162,0.185819890375,-0.68291337694,0.692089224464,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.11392159165,0.0929349334934,-0.20542654467,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.01018828385,-4.32103412374,10.9981302134,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123360250000,13298,123360250000,RH_EXTIMU,-0.143483373282,0.187471922997,-0.682660762752,0.691549768765,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.92250954584,0.0572347434529,-0.214756399883,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.1894593505,-4.51911996136,11.3305058468,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123361500000,13299,123362750000,RH_EXTIMU,-0.145015902517,0.188932881407,-0.682446606267,0.69104369177,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.73593833076,0.0226201834865,-0.220049776279,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.62530288885,-5.15445655417,12.6900000503,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123365250000,13300,123365250000,RH_EXTIMU,-0.146420276367,0.190209728098,-0.682267155096,0.690574319738,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.55506821276,-0.0107174307864,-0.221185801177,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.90439631482,-5.48242884123,13.4548595805,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123369000000,13301,123367750000,RH_EXTIMU,-0.14769994992,0.191309931807,-0.682118546524,0.690144566938,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.38042779694,-0.0426583827805,-0.218316258639,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.99614362923,-5.59886826478,13.5989029223,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123370250000,13302,123370250000,RH_EXTIMU,-0.14885865949,0.19224123963,-0.681997062607,0.689756777332,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.21236611028,-0.0731163643437,-0.21183652139,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.20783241132,-5.85464852331,14.1795320314,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123372750000,13303,123372750000,RH_EXTIMU,-0.149900494793,0.193011729189,-0.68189924228,0.689412603188,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.05129870067,-0.101980158378,-0.202274611933,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.3951543109,-6.06825721261,14.6982132677,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123375250000,13304,123375250000,RH_EXTIMU,-0.150829868643,0.193629714666,-0.681821982982,0.689112957247,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.897564120198,-0.129150727605,-0.190246867964,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.54931042565,-6.24758439288,15.1658112263,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123377750000,13305,123377750000,RH_EXTIMU,-0.151651482609,0.194103663191,-0.681762602826,0.688858003617,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.7514287114,-0.154544102292,-0.176413338988,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.69039110771,-6.36180557952,15.5504197776,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123380250000,13306,123380250000,RH_EXTIMU,-0.152370277133,0.194442104124,-0.68171887953,0.688647178229,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.613074122625,-0.178094582092,-0.161447461248,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.80481464823,-6.42428359844,15.8620928969,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123380250000,13307,123382750000,RH_EXTIMU,-0.152991382911,0.194653552805,-0.68168905387,0.688479240769,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.482607509347,-0.199757158286,-0.145997932239,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.90970509414,-6.41651403346,16.0903201357,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123380250000,13308,123385250000,RH_EXTIMU,-0.153520055868,0.19474645091,-0.681671779509,0.688352378746,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.360063449758,-0.219504680192,-0.130626304787,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.88846673566,-6.18642913318,15.8831392186,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123387750000,13309,123387750000,RH_EXTIMU,-0.153961514903,0.194728950816,-0.68166611615,0.688264334203,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.245255671744,-0.237359587004,-0.11582263517,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.71743088311,-5.74350764821,15.3086419119,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123387750000,13310,123390250000,RH_EXTIMU,-0.154320795749,0.194608699606,-0.68167154058,0.68821250846,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.137785518362,-0.253397663871,-0.102030191109,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.62637007995,-5.43548626884,15.0698187936,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123387750000,13311,123392750000,RH_EXTIMU,-0.154602800381,0.194392984544,-0.681687811183,0.688194064025,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.037369804803,-0.267673602212,-0.0895524447952,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.51687204316,-5.24405745361,14.8280431697,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123394000000,13312,123395250000,RH_EXTIMU,-0.154812325239,0.194088811524,-0.681714854479,0.688206026112,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0562109421406,-0.280243994905,-0.0785702339803,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.53569420603,-5.14173493959,14.878686241,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123394000000,13313,123397750000,RH_EXTIMU,-0.15495403428,0.193702908178,-0.681752723957,0.688245344336,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.143190415652,-0.291163793865,-0.0692039375659,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.27840653549,-4.55697658354,14.1934056869,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123400250000,13314,123400250000,RH_EXTIMU,-0.15503225374,0.193241463707,-0.681801582965,0.688309042851,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.224073064306,-0.300544832064,-0.0614834963808,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.01613506347,-3.94967351544,13.4856388854,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123402750000,13315,123402750000,RH_EXTIMU,-0.155050920623,0.192710098658,-0.681861632582,0.688394322973,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.299409768912,-0.308512420588,-0.0553396102489,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.66690632989,-3.72505544307,12.3048993387,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123405250000,13316,123405250000,RH_EXTIMU,-0.155013644329,0.192113870764,-0.681933153921,0.688498514388,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.369714881909,-0.315209548413,-0.0507623397802,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.48239389958,-3.25887463326,11.9191636584,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123407750000,13317,123407750000,RH_EXTIMU,-0.15492373582,0.191457400394,-0.682016438526,0.688619109156,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.435411830335,-0.320739991418,-0.0476743631293,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.40093728171,-3.0574275893,11.8888268191,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123407750000,13318,123410250000,RH_EXTIMU,-0.154784321538,0.190745152672,-0.682111596547,0.68875385327,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.496689455758,-0.325152095173,-0.0458256940515,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.53919688622,-3.16874165029,12.3440147607,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123412750000,13319,123412750000,RH_EXTIMU,-0.154598407503,0.189981626118,-0.682218438488,0.688900802963,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.553587592782,-0.328448213143,-0.0448571633594,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.73330836293,-3.38584884013,12.8044455976,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123415250000,13320,123415250000,RH_EXTIMU,-0.154368881941,0.189171403479,-0.682336438453,0.689058352502,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.606115195653,-0.330612334426,-0.0443684534861,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.74472713205,-3.26452208005,12.8081631724,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123417750000,13321,123417750000,RH_EXTIMU,-0.154098434313,0.188319000253,-0.682464792299,0.689225241817,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.654418791012,-0.331660956655,-0.0439937696405,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.75436720428,-3.10610354983,12.7317475856,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123420250000,13322,123420250000,RH_EXTIMU,-0.153789501528,0.187428758883,-0.682602492323,0.689400527297,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.698740440364,-0.331625094111,-0.0434296483958,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.74291896289,-2.9178065587,12.5984423248,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123422750000,13323,123422750000,RH_EXTIMU,-0.153444291753,0.186504860209,-0.682748364343,0.689583539126,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.7393035249,-0.330530676519,-0.0424188823648,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.89066207822,-2.94809631277,12.7722079352,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123425250000,13324,123425250000,RH_EXTIMU,-0.1530648243,0.185551336878,-0.682901147066,0.689773792109,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.776303310228,-0.328394205054,-0.0408013878627,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.51387987508,-2.2078383684,11.9020289621,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123427750000,13325,123427750000,RH_EXTIMU,-0.152652729032,0.18457159226,-0.683059708347,0.689970946115,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.810336033856,-0.325355155461,-0.0385874716098,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.47072668078,-2.036903989,11.6426355933,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123430250000,13326,123430250000,RH_EXTIMU,-0.152209412393,0.183568679222,-0.683223019138,0.690174717667,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.841739301342,-0.321479848557,-0.0358122618292,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.41054892265,-1.74202166222,11.3773385879,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123432750000,13327,123432750000,RH_EXTIMU,-0.151736070117,0.182545311729,-0.683390182297,0.690384844077,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.870837184989,-0.31682635339,-0.0325471546791,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.35403634922,-1.58424920601,11.0863901498,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123435250000,13328,123435250000,RH_EXTIMU,-0.151233727966,0.18150389349,-0.683560457444,0.690601040538,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.897913922853,-0.31145002788,-0.0289034851712,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.293603333,-1.32344939096,10.8206492132,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123437750000,13329,123437750000,RH_EXTIMU,-0.150703214674,0.180446427945,-0.68373334164,0.690822947838,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.923323176485,-0.305424087027,-0.0250729494851,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.872681608313,-0.578062392585,9.91100169101,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123440250000,13330,123440250000,RH_EXTIMU,-0.150145029796,0.179374190472,-0.683908700002,0.691050113872,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.947687343438,-0.298912773122,-0.0213502100165,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.62941251823,-0.138307540388,9.2848570213,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123442750000,13331,123442750000,RH_EXTIMU,-0.149559463512,0.17828800487,-0.684086618732,0.691282035254,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.971394901343,-0.292017601892,-0.017910084195,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.861510189628,-0.763888193546,9.2085488649,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123445250000,13332,123445250000,RH_EXTIMU,-0.148946898055,0.177188785609,-0.68426725369,0.69151809907,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.99434212293,-0.284715579541,-0.0148537426425,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.814998972792,-0.612841981877,8.89987918066,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123447750000,13333,123447750000,RH_EXTIMU,-0.14830762749,0.176077256005,-0.684450874609,0.691757651055,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.01669354844,-0.277045747826,-0.0122775409864,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.974444298086,-0.676884414813,8.84948548209,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123450250000,13334,123450250000,RH_EXTIMU,-0.147641879689,0.1749541333,-0.684637725295,0.692000080713,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.03849053234,-0.268985701235,-0.0101350573996,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.939117969166,-0.495302811174,8.49232189168,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123452750000,13335,123452750000,RH_EXTIMU,-0.146949736948,0.173819899123,-0.684828121734,0.69224479858,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.05995520052,-0.260581701016,-0.00846280243193,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.699717325183,-0.0808143816823,7.82456096281,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123455250000,13336,123455250000,RH_EXTIMU,-0.146231057022,0.172674651349,-0.685022429894,0.692491309178,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.08144003926,-0.251931684831,-0.00725153055145,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.840434585139,-0.0865814354187,7.62868450597,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123457750000,13337,123457750000,RH_EXTIMU,-0.145485597913,0.171518421326,-0.685220976136,0.692739190322,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.10303978955,-0.243033836627,-0.00643380221378,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.78906394726,0.0426227268295,7.16729995522,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123460250000,13338,123460250000,RH_EXTIMU,-0.144712972719,0.170350990035,-0.685424114205,0.692988080264,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.12498277319,-0.233953652075,-0.0060016647938,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.538450270183,0.475316854731,6.51899498724,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123462750000,13339,123462750000,RH_EXTIMU,-0.143912599226,0.169171779644,-0.685632238604,0.693237698155,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.14758894679,-0.224790325291,-0.00594898637194,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.474224931073,0.654775495787,6.04716226331,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123465250000,13340,123465250000,RH_EXTIMU,-0.143083772392,0.167980023261,-0.685845727694,0.693487839596,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.17103678279,-0.215594605348,-0.00623063969887,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.41955461117,0.820105616409,5.56733939067,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123467750000,13341,123467750000,RH_EXTIMU,-0.142225669768,0.166774858565,-0.686064894945,0.693738398342,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.19544638035,-0.206376583247,-0.00675247492538,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.548187471478,0.748716517286,5.20450726643,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123470250000,13342,123470250000,RH_EXTIMU,-0.141337423248,0.165555352651,-0.686290008451,0.69398932434,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.22088233134,-0.197163720456,-0.00746098097212,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.311504077494,1.11114794646,4.57584905576,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123470250000,13343,123472750000,RH_EXTIMU,-0.140418038218,0.164320283823,-0.686521346439,0.694240635335,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.24758266359,-0.18805526793,-0.00834096480541,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.254114698256,1.25710459538,4.05237569364,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123475250000,13344,123475250000,RH_EXTIMU,-0.139466429582,0.163068358548,-0.686759121249,0.69449242965,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.27563774906,-0.179059914717,-0.00930804684778,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.372526158807,1.26580245161,3.59134102203,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123477750000,13345,123477750000,RH_EXTIMU,-0.138481469059,0.161798231023,-0.687003534545,0.694744815517,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.30510036473,-0.170185698302,-0.0103513183693,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0173842341839,1.6858306174,2.9381382601,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123481500000,13346,123480250000,RH_EXTIMU,-0.137461941091,0.160508221502,-0.687254853659,0.694997907697,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.33621217941,-0.161564025402,-0.0115296224758,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0565450566279,1.73431101522,2.38786926028,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123486500000,13347,123482750000,RH_EXTIMU,-0.136406608182,0.159196550925,-0.687513347514,0.695251819421,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.36904045342,-0.153238070964,-0.0128526454857,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.107160631358,1.88370122066,1.86072741602,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123486500000,13348,123485250000,RH_EXTIMU,-0.135314205285,0.157861368144,-0.687779261359,0.695506680011,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.40363938452,-0.145237840743,-0.0143024140814,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.010344173174,1.82757589181,1.27230743993,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123489000000,13349,123487750000,RH_EXTIMU,-0.134183468476,0.156500879052,-0.688052767109,0.695762647256,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.43997133145,-0.137544114848,-0.0158159716767,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0235131508444,1.90568410522,0.686763738463,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123489000000,13350,123490250000,RH_EXTIMU,-0.133013140518,0.155113287057,-0.688334004407,0.696019878312,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.47803047126,-0.130165499508,-0.0173763462181,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.176699774099,2.00833128701,0.171711063291,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123492750000,13351,123492750000,RH_EXTIMU,-0.131802002589,0.153696690097,-0.688623162819,0.696278463832,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.51785332951,-0.123168398133,-0.0190633888072,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.458565231193,2.1636718738,-0.214043446146,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123495250000,13352,123495250000,RH_EXTIMU,-0.130548892432,0.152249014449,-0.688920503608,0.696538415303,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.55950420816,-0.1166626866,-0.0209848526675,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.714028096152,2.26653961971,-0.546648315594,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123497750000,13353,123497750000,RH_EXTIMU,-0.129252728871,0.150768062372,-0.689226351562,0.696799655396,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.60300557212,-0.110745510282,-0.0232465926788,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.943954420643,2.31436450871,-0.824022051906,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123500250000,13354,123500250000,RH_EXTIMU,-0.127912533484,0.14925156164,-0.689541073573,0.697062022334,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.64833846782,-0.10550174433,-0.0259369606058,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.14361420194,2.30654660389,-1.0454307771,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123502750000,13355,123502750000,RH_EXTIMU,-0.126527429342,0.147697248873,-0.689864985605,0.697325342961,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.69543517303,-0.100987923867,-0.0290428346302,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.752452597443,0.818970382538,-0.725034737934,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123505250000,13356,123505250000,RH_EXTIMU,-0.125097180354,0.146103811769,-0.690198022714,0.697589464582,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.74337148525,-0.0970697450246,-0.032317319793,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.541741684045,-0.663715658777,-0.194395625441,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123507750000,13357,123507750000,RH_EXTIMU,-0.123622202114,0.14447084078,-0.690539770316,0.697854249053,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.79124713824,-0.0936405997874,-0.0355407749842,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.482751807046,-0.773139822724,-0.480363628941,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123510250000,13358,123510250000,RH_EXTIMU,-0.122102977823,0.142798080496,-0.690889637065,0.698119674848,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.83893177929,-0.0906825350513,-0.0385405375819,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.398319542087,-1.29079468746,-0.27589295689,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123512750000,13359,123512750000,RH_EXTIMU,-0.120540232428,0.141085648466,-0.691246824122,0.698385796179,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.88606949881,-0.0881488062014,-0.0411479178309,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.285908945518,-1.84981124141,-0.0292105184486,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123517750000,13360,123515250000,RH_EXTIMU,-0.11893495053,0.1393340734,-0.691610352327,0.698652713503,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.93227361634,-0.0859741341041,-0.0432242105806,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0487009333597,-2.23567545166,0.684459253514,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123517750000,13361,123517750000,RH_EXTIMU,-0.11728829479,0.137544243809,-0.691979082951,0.698920586088,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.97723508028,-0.084075257238,-0.0446314376329,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0272334535355,-2.61168014755,0.943118291943,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123520250000,13362,123520250000,RH_EXTIMU,-0.115601598486,0.135717338543,-0.692351756092,0.69918961683,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.02069031523,-0.0823973438767,-0.0452676641463,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0609940384683,-2.97967697616,1.03153571451,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123522750000,13363,123522750000,RH_EXTIMU,-0.11387635529,0.133854753435,-0.692727088107,0.699459978906,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.06242592922,-0.0809031711193,-0.045132042619,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.230802543814,-3.29284555662,1.5371482936,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123525250000,13364,123525250000,RH_EXTIMU,-0.112114228978,0.131958167754,-0.69310378226,0.699731797648,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.10218573572,-0.0795207517133,-0.0442348993451,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.459831854331,-3.98484214401,2.3726924131,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123527750000,13365,123527750000,RH_EXTIMU,-0.110317153017,0.130029681159,-0.693480492202,0.70000515334,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.13957820435,-0.078160268101,-0.042563248734,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.553431232168,-4.44427436705,2.54756467034,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123530250000,13366,123530250000,RH_EXTIMU,-0.108487254878,0.128071670835,-0.693855882258,0.700280070625,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.1743387068,-0.0767633736626,-0.0401490511439,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.669446786927,-4.9284087317,2.74642224249,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123532750000,13367,123532750000,RH_EXTIMU,-0.106626840448,0.126086748033,-0.694228702579,0.700556462666,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.2062381972,-0.0752753932406,-0.0370999185584,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.824629070794,-5.25846039772,3.68196874511,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123532750000,13368,123535250000,RH_EXTIMU,-0.104738420523,0.124077765524,-0.694597824437,0.700834098526,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.23502924126,-0.0736467123149,-0.0335637638905,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.908844669567,-5.61290161028,4.44022840606,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123537750000,13369,123537750000,RH_EXTIMU,-0.102824673795,0.122047770359,-0.694962205667,0.70111265921,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.26051245383,-0.0718432881442,-0.0296386116606,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.9477657228,-5.6856343726,4.74233563196,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123540250000,13370,123540250000,RH_EXTIMU,-0.100888304767,0.119999812456,-0.695320944841,0.701391744061,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.2826801447,-0.0698563877554,-0.025451421025,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.06193578257,-6.02021069473,5.00285484834,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123540250000,13371,123542750000,RH_EXTIMU,-0.0989320987173,0.117937040964,-0.695673273034,0.701670856882,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.30143800328,-0.067654131232,-0.0211298336601,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.08924129991,-5.98961881075,5.21762898556,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123545250000,13372,123545250000,RH_EXTIMU,-0.0969588336672,0.115862577931,-0.696018584039,0.701949412908,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.31681456716,-0.0652258748102,-0.0168165252144,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.11174835593,-6.03449302128,5.36429785969,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123547750000,13373,123547750000,RH_EXTIMU,-0.0949712859282,0.113779536693,-0.696356402118,0.702226767582,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.32882396422,-0.0625600818577,-0.0126192492337,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.20370842819,-6.27456085504,5.5942440235,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123550250000,13374,123550250000,RH_EXTIMU,-0.0929722269734,0.111691011201,-0.696686416002,0.70250218561,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.33748847685,-0.0596449616192,-0.00868275321608,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.91607831164,-5.56579959813,5.45944825488,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123552750000,13375,123552750000,RH_EXTIMU,-0.0909641532511,0.109599568729,-0.697008573121,0.702774861783,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.34327463654,-0.0565993100289,-0.00520686655643,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.688301603849,-5.13319332052,5.35406516944,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123555250000,13376,123555250000,RH_EXTIMU,-0.0889493827021,0.107507448165,-0.697322973988,0.703043971495,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.34647824555,-0.0534980717999,-0.00229699648193,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.920005375215,-5.73966199752,5.73263663374,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123557750000,13377,123557750000,RH_EXTIMU,-0.0869303485512,0.105417172302,-0.69762969767,0.70330870833,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.34687571009,-0.0502522682434,7.94426288323e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.15937459892,-6.352286983,6.12011262544,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123560250000,13378,123560250000,RH_EXTIMU,-0.0849096197628,0.103331611688,-0.697928731221,0.703568348232,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.34419458286,-0.0467584202813,0.00203249035802,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.40394467093,-6.96743488711,6.51421586296,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123562750000,13379,123562750000,RH_EXTIMU,-0.0828898677022,0.101253921258,-0.698219969115,0.703822270173,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.33821770088,-0.0429308576803,0.00368159408285,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.41062917846,-6.93299603605,6.51316341997,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123565250000,13380,123565250000,RH_EXTIMU,-0.0808737083915,0.0991872526021,-0.698503253059,0.704069980668,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.32898204925,-0.0387560734778,0.00513041533306,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.4577240275,-7.25219166843,6.99405836147,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123567750000,13381,123567750000,RH_EXTIMU,-0.0788637901337,0.097134800795,-0.698778408728,0.70431105953,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.31644823713,-0.0342355304558,0.00642753164623,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.27682358823,-7.16875602862,7.37528651739,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123570250000,13382,123570250000,RH_EXTIMU,-0.0768626982244,0.0950995635531,-0.699045285098,0.704545163929,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.30076825012,-0.0294505048581,0.00759382006412,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.10101399597,-7.00272110551,7.44054532689,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123572750000,13383,123572750000,RH_EXTIMU,-0.0748728579478,0.0930841973335,-0.69930379786,0.704772009694,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.28223111671,-0.0245048371942,0.00861441376564,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.718208915168,-6.45499485949,7.07920827929,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123575250000,13384,123575250000,RH_EXTIMU,-0.0728964821472,0.0910909470769,-0.699553937587,0.704991369208,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.26119497015,-0.0195121170863,0.00946919260245,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.985775691437,-7.06881830662,7.5288106077,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123575250000,13385,123577750000,RH_EXTIMU,-0.0709358469735,0.0891222393525,-0.699795671864,0.705203055657,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.2375222117,-0.0144104499399,0.010199819072,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.890562497205,-6.85106711044,7.35671614904,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123581500000,13386,123580250000,RH_EXTIMU,-0.0689930808367,0.0871802989543,-0.700028997509,0.705406941359,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.21141354498,-0.00923406526372,0.0108214986974,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.726376314402,-6.68749430349,7.23670308395,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123582750000,13387,123582750000,RH_EXTIMU,-0.0670701470693,0.0852670698321,-0.700253976906,0.705602926583,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.18312437947,-0.00404779254495,0.0113085581341,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.564396563966,-6.4495788343,7.05850528663,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123585250000,13388,123585250000,RH_EXTIMU,-0.0651688656623,0.0833842689215,-0.700470706743,0.705790954632,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.15286622851,0.00109882938267,0.0116633277979,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.851062876717,-7.06559168122,7.54397912352,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123587750000,13389,123587750000,RH_EXTIMU,-0.0632911150882,0.081533796666,-0.700679258466,0.705970999056,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.12050184533,0.00627272616631,0.0119228989475,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.657228540191,-6.72850951111,7.59542610071,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123590250000,13390,123590250000,RH_EXTIMU,-0.06143865854,0.0797173812985,-0.700879707662,0.70614309155,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.08619475074,0.011437299028,0.0121161603853,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.948064969899,-7.33906014138,8.092882045,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123592750000,13391,123592750000,RH_EXTIMU,-0.0596133538595,0.077937025447,-0.701072036843,0.706307346176,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.04973435597,0.0166844374411,0.0123493305624,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.24117679768,-7.9419652137,8.58983758824,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123595250000,13392,123595250000,RH_EXTIMU,-0.0578171920338,0.0761950852535,-0.701256123195,0.706463962966,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.01084327514,0.0221291692723,0.0127381911481,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.30662428626,-8.13355502949,8.76110099902,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123597750000,13393,123597750000,RH_EXTIMU,-0.0560521459268,0.0744939352333,-0.701431837702,0.706613181032,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.96952141975,0.0277903013285,0.0133090023104,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.08870315656,-7.72889321586,8.77647362241,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123600250000,13394,123600250000,RH_EXTIMU,-0.0543199221032,0.0728354415872,-0.701599188303,0.70675520761,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.92620980702,0.0335390008957,0.0139583051544,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.567586232672,-6.81817142818,8.38102543228,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123602750000,13395,123602750000,RH_EXTIMU,-0.0526218629517,0.0712207498082,-0.701758324609,0.706890230643,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.8815247702,0.039179962807,0.0145844887311,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0628924670403,-5.94532487266,7.68055178743,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123605250000,13396,123605250000,RH_EXTIMU,-0.0509589448461,0.069650306976,-0.701909575528,0.70701836501,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.83607102649,0.044535404987,0.0150369801931,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.163756767998,-5.59428974491,7.38118203847,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123607750000,13397,123607750000,RH_EXTIMU,-0.0493318263959,0.0681239778122,-0.702053417705,0.707139656107,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.79035925575,0.0494635247326,0.0151884104973,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.604247685665,-4.86684144161,6.71685161432,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123610250000,13398,123610250000,RH_EXTIMU,-0.0477408732212,0.0666411032062,-0.702190448178,0.70725408933,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.74485220626,0.0538392362595,0.0149341718845,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.523935747452,-5.04454712814,6.88547725934,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123612750000,13399,123612750000,RH_EXTIMU,-0.0461863928922,0.0652010022224,-0.702321272941,0.707361630282,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.69959338416,0.0576824193147,0.014262799469,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.671634248781,-4.83074177938,6.68014027268,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123615250000,13400,123615250000,RH_EXTIMU,-0.0446684756948,0.0638026451232,-0.702446537489,0.707462233426,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.65490213536,0.0609180217218,0.0131464453876,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.04776250064,-4.22332899217,6.09634111882,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123617750000,13401,123617750000,RH_EXTIMU,-0.0431869149834,0.0624445146484,-0.702566913293,0.707555867272,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.61122115114,0.0634353144782,0.0115786563332,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.16512224134,-4.04343808806,5.92656993715,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123620250000,13402,123620250000,RH_EXTIMU,-0.0417413499784,0.0611248955241,-0.702683042206,0.707642529138,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.56874741353,0.0652045065895,0.00959631967496,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.25717877164,-3.92045013931,5.80898834645,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123622750000,13403,123622750000,RH_EXTIMU,-0.0403312910454,0.0598419197844,-0.702795505933,0.70772226787,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.52763749119,0.0662053759422,0.00726680772587,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.32993548707,-3.81839693413,5.71362344763,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123625250000,13404,123625250000,RH_EXTIMU,-0.0389561336009,0.0585935987869,-0.702904807944,0.707795196936,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.48802173804,0.0664272227154,0.0046755367153,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.3849185453,-3.73431694582,5.63920696334,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123627750000,13405,123627750000,RH_EXTIMU,-0.0376151707546,0.0573778497096,-0.703011357157,0.707861506934,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.45000816882,0.0658666588154,0.001924441341,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.42294531014,-3.66867538684,5.58757108344,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123630250000,13406,123630250000,RH_EXTIMU,-0.0363076444237,0.0561926091822,-0.703115443236,0.70792147807,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.41361127356,0.0645551659983,-0.000862492368986,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.21127856394,-4.01199227524,5.94966344782,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123632750000,13407,123632750000,RH_EXTIMU,-0.0350328438649,0.0550360224714,-0.703217221001,0.707975477096,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.3786826113,0.0625763117131,-0.00355335062473,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.223793561,-3.97627540301,5.93581240287,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123635250000,13408,123635250000,RH_EXTIMU,-0.0337899866603,0.0539062048698,-0.703316755456,0.70802393983,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.34527694278,0.0599481986268,-0.00605354748852,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.22925524831,-3.93836676272,5.92968605226,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123637750000,13409,123637750000,RH_EXTIMU,-0.0325781781157,0.0528011590954,-0.703414061568,0.708067339945,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.31351944025,0.0566678876174,-0.00830921245618,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.47310180713,-3.48505582844,5.51836393224,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123640250000,13410,123640250000,RH_EXTIMU,-0.0313963219993,0.0517186087321,-0.703509143188,0.708106165717,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.28368067748,0.0526905787235,-0.0103021973376,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.45750789649,-3.4611735194,5.54873744483,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123642750000,13411,123642750000,RH_EXTIMU,-0.0302433216166,0.0506563813876,-0.703601960504,0.708140913729,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.25570025344,0.0480748860437,-0.0119979453738,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.17574618054,-3.8862434977,6.02948708766,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123645250000,13412,123645250000,RH_EXTIMU,-0.0291181895963,0.0496126176966,-0.703692418676,0.70817208297,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.22933739752,0.0429361417756,-0.0133585317105,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.12616581258,-3.91709485852,6.12075185575,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123649000000,13413,123647750000,RH_EXTIMU,-0.0280198723215,0.048585428532,-0.703780430974,0.708200146758,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.20464569343,0.0372970461597,-0.0143992626091,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.32049572087,-3.50729645691,5.78741976424,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123650250000,13414,123650250000,RH_EXTIMU,-0.0269471477065,0.0475727158735,-0.703865951133,0.708225536655,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.18183845927,0.0311376301444,-0.0151630223898,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.25907820857,-3.51713889195,5.88691494968,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123652750000,13415,123652750000,RH_EXTIMU,-0.0258988197987,0.0465725580306,-0.703948940605,0.708248640657,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.16080062195,0.024545771954,-0.0156741954995,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.930990875385,-3.99279781269,6.45125694673,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123655250000,13416,123655250000,RH_EXTIMU,-0.0248739792963,0.0455831333627,-0.704029360311,0.708269809414,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.14131233671,0.0174188877867,-0.0159607349044,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.09467136627,-3.61452503873,6.17864973393,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123657750000,13417,123657750000,RH_EXTIMU,-0.0238712532185,0.0446029279021,-0.704107222863,0.708289319985,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.12346321423,0.0101968535921,-0.0160687200896,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.752752026003,-4.09014353656,6.76326160859,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123660250000,13418,123660250000,RH_EXTIMU,-0.0228896671762,0.0436305868897,-0.704182527162,0.708307421579,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.10693646549,0.00274663426908,-0.0160169286402,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.659703746844,-4.12659292863,6.91972914112,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123662750000,13419,123662750000,RH_EXTIMU,-0.0219282576737,0.0426648669887,-0.704255291939,0.708324321491,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0916628745,-0.00487247477087,-0.0158378890197,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.563822158277,-4.1582368496,7.08598484001,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123665250000,13420,123665250000,RH_EXTIMU,-0.0209860004976,0.0417045499117,-0.704325571855,0.70834017755,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0776629159,-0.0126093796667,-0.0155768557034,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.737030582884,-3.68362811948,6.7779858292,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123667750000,13421,123667750000,RH_EXTIMU,-0.0200617630818,0.0407483178837,-0.704393458897,0.708355105378,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.06505442612,-0.0204571251831,-0.0152765236103,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.371635351436,-4.17791135571,7.41844661546,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123670250000,13422,123670250000,RH_EXTIMU,-0.0191546021992,0.0397952737143,-0.70445903056,0.708369191642,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.05349202617,-0.0282832238651,-0.0149441772828,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.272816367212,-4.19538060944,7.60270357983,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123672750000,13423,123672750000,RH_EXTIMU,-0.018263598663,0.0388446356952,-0.704522369805,0.708382499562,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.04289669781,-0.0360348519016,-0.0145952428895,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.171794051917,-4.20201555349,7.79038928323,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123687750000,13424,123675250000,RH_EXTIMU,-0.0173878554507,0.0378957331777,-0.704583561008,0.708395074409,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.03319295022,-0.0436609302764,-0.0142399763583,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0765903497032,-4.17792405484,7.96112907948,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123687750000,13425,123677750000,RH_EXTIMU,-0.0165264857067,0.0369479861916,-0.704642688098,0.708406947804,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.02432359872,-0.0511153683022,-0.0138852760163,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0150762032441,-4.14084879329,8.1317751644,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123687750000,13426,123680250000,RH_EXTIMU,-0.0156785443047,0.0360007848263,-0.704699844471,0.708418136373,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.01633852823,-0.0583817120893,-0.0135441725343,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.177608288658,-3.5460778935,7.79590473877,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123687750000,13427,123682750000,RH_EXTIMU,-0.0148428914076,0.0350532622138,-0.704755144532,0.708428643999,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.00949330551,-0.0654952134732,-0.0132339700529,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.087056369661,-3.47796168964,7.97082444368,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123687750000,13428,123685250000,RH_EXTIMU,-0.0140183948054,0.0341046281147,-0.704808696339,0.708438466286,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.00374004727,-0.0724166478972,-0.0129556066566,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0120589071514,-3.43684821114,8.17763505654,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123687750000,13429,123687750000,RH_EXTIMU,-0.0132039431204,0.0331541863991,-0.704860595819,0.708447595995,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.999013449678,-0.0791045478094,-0.0127039917754,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.112635082945,-3.38213008268,8.37798061574,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123687750000,13430,123690250000,RH_EXTIMU,-0.0123984463712,0.0322013348145,-0.704910923321,0.708456027391,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.995247991673,-0.0855180306125,-0.0124698018311,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0724097250055,-2.71626016398,8.04122376197,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123687750000,13431,123692750000,RH_EXTIMU,-0.0116006048239,0.0312451889843,-0.704959768508,0.70846375272,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.992721821288,-0.0916985966816,-0.012257729876,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.303977035508,-3.22062921936,8.76288526799,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123687750000,13432,123695250000,RH_EXTIMU,-0.0108093685302,0.0302853198538,-0.705007176663,0.708470774137,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.991035522662,-0.0975297484366,-0.0120399050333,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.687868056058,-3.7296040785,9.50545455587,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123687750000,13433,123697750000,RH_EXTIMU,-0.0100240214387,0.02932187191,-0.705053141335,0.708477109521,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.98967522556,-0.102875542532,-0.0117823319218,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.780186434473,-3.61668135221,9.67792164219,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123742750000,13434,123700250000,RH_EXTIMU,-0.00924386264233,0.0283550501171,-0.705097639963,0.70848278755,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.988597927384,-0.107710535211,-0.0114709420415,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.844251128756,-3.43609192364,9.80701217537,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123742750000,13435,123702750000,RH_EXTIMU,-0.00737836753199,0.0240139309144,-0.704949078266,0.708812872249,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.50515140992,-1.41679321171,0.280611326813,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-41.3489482245,-90.8602426071,83.8501516794,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123742750000,13436,123705250000,RH_EXTIMU,-0.00386379042056,0.0153074591544,-0.704225669302,0.709800647727,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.89507344222,-2.97821994923,0.983416504129,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.16818617078,-24.8448714521,3.74273150674,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123742750000,13437,123707750000,RH_EXTIMU,-0.00058066228879,0.00741011518538,-0.70355317984,0.710603740605,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.30782820895,-2.6467274934,0.850118313475,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.30051672676,4.59111934295,12.946278147,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123742750000,13438,123710250000,RH_EXTIMU,0.00265480819513,-0.000241001854944,-0.702964682659,0.711219761287,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.14255300633,-2.53242410761,0.69690738115,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.776789759772,4.61249872622,7.42042495177,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123742750000,13439,123712750000,RH_EXTIMU,-0.000384919741491,-0.000338542735549,-0.70296812833,0.71122116657,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.67468365722,-1.7649652769,-0.000376986556658,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.41201313444,81.4694270313,143.286493745,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123742750000,13440,123715250000,RH_EXTIMU,-4.83968959637e-06,-8.70773937765e-05,-0.70296820285,0.711221272303,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0748391007693,0.356825373074,-8.44256009906e-06,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,10.577290394,-4.84462516385,29.103115498,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123742750000,13441,123717750000,RH_EXTIMU,2.76970696745e-05,1.18306514317e-05,-0.702968224811,0.711221255306,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0371107020325,0.0745742493918,-2.39378519661e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.182108708299,0.645002551179,16.0840362443,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123742750000,13442,123720250000,RH_EXTIMU,9.88278767418e-06,2.45469656968e-05,-0.702969574154,0.711219921763,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0172872063797,-0.00278302623683,-0.00151814583033,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.536604093676,0.279460160909,8.85005143093,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123742750000,13443,123722750000,RH_EXTIMU,4.80184197865e-06,4.02584239441e-06,-0.702969675452,0.711219822105,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00864964718505,-0.0145334243982,-0.000113618815343,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0881974320794,-0.260473066626,8.5321283003,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123742750000,13444,123725250000,RH_EXTIMU,1.38740333504e-05,1.03340812676e-05,-0.70296971828,0.711219779591,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00161425766141,0.00869121593527,-4.82717815948e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.101423385951,-0.00858060077757,9.63147298395,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123742750000,13445,123727750000,RH_EXTIMU,9.39802966607e-06,1.21155750482e-05,-0.702969761608,0.711219736811,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00354860599488,-0.00150356927527,-4.87679379104e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.141184010034,0.0510989903782,10.2718730406,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123742750000,13446,123730250000,RH_EXTIMU,3.4218778804e-06,6.98621411745e-06,-0.702969811689,0.711219687434,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000515656318951,-0.00627932527977,-5.62822942032e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0506099772086,0.0141261000061,9.59829111419,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123742750000,13447,123732750000,RH_EXTIMU,3.51346337994e-06,1.71778543717e-07,-0.702969868029,0.711219631781,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00388438438913,-0.00382574296112,-6.33349720666e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.076502579416,-0.0780003188287,9.84508773129,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123742750000,13448,123735250000,RH_EXTIMU,1.15505637687e-05,3.21733241941e-06,-0.702969912748,0.711219587488,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00286016890906,0.00625271756493,-5.03610829039e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.169933971054,-0.0610462118886,9.73613871381,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123742750000,13449,123737750000,RH_EXTIMU,4.92444225006e-06,7.21898207121e-06,-0.702969962218,0.71121953864,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00602053279705,-0.00144953029235,-5.56724078836e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0500569874744,0.150734696637,9.74238537216,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123742750000,13450,123740250000,RH_EXTIMU,4.70457471286e-06,5.59557944883e-06,-0.702970016579,0.711219484925,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000787863879001,-0.00104732465476,-6.11323663284e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0141392591053,-0.00495639141197,9.83690605146,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123785250000,13451,123742750000,RH_EXTIMU,4.62567987459e-06,9.28341859221e-06,-0.702970063934,0.711219438081,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00211884112372,0.00205392191169,-5.33022184615e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0519483114265,0.0466173071746,9.79799688573,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123785250000,13452,123745250000,RH_EXTIMU,4.27003617739e-06,5.96445176872e-06,-0.702970118757,0.711219383933,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00166415549525,-0.00208841627417,-6.16349581158e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0567119379112,-0.0393137639619,9.80964994033,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123785250000,13453,123747750000,RH_EXTIMU,3.38339120649e-06,5.2877582377e-06,-0.702970173737,0.7112193296,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000123922558552,-0.000883649910011,-6.18393749583e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00841599707231,0.00439401069028,9.79668695181,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123785250000,13454,123750250000,RH_EXTIMU,2.92338057239e-06,5.3617830721e-06,-0.702970228793,0.711219275185,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00030336418426,-0.000216580608681,-6.19297528911e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000854761348819,0.00562177200217,9.79554203094,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123785250000,13455,123752750000,RH_EXTIMU,3.00731475342e-06,5.42395563016e-06,-0.702970284215,0.711219220404,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.27924858668e-05,8.25773469869e-05,-6.23410267323e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00174798500615,-0.00108288476584,9.7934821374,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123785250000,13456,123755250000,RH_EXTIMU,2.76464342407e-06,5.58779535263e-06,-0.702970339697,0.711219165565,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000230213203201,-4.32517144521e-05,-6.2409322399e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00161121915966,0.00546628599146,9.80334011746,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123785250000,13457,123757750000,RH_EXTIMU,2.4166365895e-06,5.95732744541e-06,-0.702970395118,0.711219110785,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00040582301614,1.45439814707e-05,-6.23424624845e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00107549875409,0.00740220515973,9.79773559603,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123785250000,13458,123760250000,RH_EXTIMU,2.27010279254e-06,6.25232735852e-06,-0.702970450794,0.711219055753,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000249274702062,8.54406784291e-05,-6.26287505858e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000541050515892,0.00449040623583,9.78980540411,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123785250000,13459,123762750000,RH_EXTIMU,2.06063138942e-06,6.36301753982e-06,-0.702970506368,0.711219000824,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000181433206459,-5.48216185565e-05,-6.25121072369e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00102082053008,0.00254826797861,9.82527328577,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123785250000,13460,123765250000,RH_EXTIMU,1.52439366172e-06,6.73425484405e-06,-0.702970561792,0.71121894604,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000513880696819,-9.03424383958e-05,-6.23475195417e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00154612022053,0.0100821277003,9.80247926466,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123785250000,13461,123767750000,RH_EXTIMU,3.29774943118e-06,7.97909427745e-06,-0.702970615154,0.711218893278,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000308927348211,0.00170557645232,-6.0025271423e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0171577559179,-0.000121847665855,9.80266696382,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123785250000,13462,123770250000,RH_EXTIMU,1.42319182691e-06,7.63020052942e-06,-0.702970670689,0.711218838397,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000870366486313,-0.00125271878622,-6.24730904334e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0137676508914,0.0105319950167,9.79593478552,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123785250000,13463,123772750000,RH_EXTIMU,2.85026891473e-06,8.69830225102e-06,-0.702970724058,0.711218785631,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000211296325932,0.00141027818401,-6.00324688208e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0149792701798,0.00174354959481,9.8050108752,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123785250000,13464,123775250000,RH_EXTIMU,9.25379519308e-07,8.36809989458e-06,-0.702970779503,0.711218730837,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000909515416147,-0.00127038935389,-6.23742352411e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0131845974729,0.0108167873586,9.7997030538,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123785250000,13465,123777750000,RH_EXTIMU,2.42138173358e-06,9.46233052484e-06,-0.702970832905,0.711218678038,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000235818506218,0.00146390684412,-6.00682033425e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.015936844973,0.00130407775435,9.80138800343,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123785250000,13466,123780250000,RH_EXTIMU,2.692946704e-06,9.86828281169e-06,-0.702970886449,0.711218625108,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.37839225202e-05,0.000383698778828,-6.0230391843e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00232624149301,0.000691578008604,9.80838579832,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123785250000,13467,123782750000,RH_EXTIMU,4.88784315632e-06,4.99290854919e-06,-0.702970946873,0.711218565424,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.003990638529,-0.00153960659911,-6.79167111896e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0154739949478,-0.0970240403315,9.8263645598,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123785250000,13468,123785250000,RH_EXTIMU,-1.28268490379e-07,9.7093660381e-06,-0.702971002087,0.711218510819,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00550646701894,-0.00013739889759,-6.21626518261e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00269701448889,0.125471773941,9.73798496498,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123787750000,13469,123787750000,RH_EXTIMU,6.2120010326e-06,6.96199765936e-06,-0.702971061046,0.711218452548,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00515251033254,0.00200243755714,-6.62670743175e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.020774320434,-0.114358200464,9.82939803068,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123790250000,13470,123790250000,RH_EXTIMU,4.76418223385e-06,6.22705163461e-06,-0.702971121765,0.711218392551,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000410455090698,-0.00123238548094,-6.8293792092e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0140789526427,0.00687049439824,9.79403864228,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123792750000,13471,123792750000,RH_EXTIMU,4.23879941751e-06,6.25012889712e-06,-0.702971182396,0.711218332626,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000311907126588,-0.000282332711965,-6.82000917605e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00169048341851,0.00655758478581,9.80306253563,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123795250000,13472,123795250000,RH_EXTIMU,4.10068831066e-06,6.35426651453e-06,-0.702971243004,0.711218272721,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000137145810023,-1.84187423733e-05,-6.81743514852e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000115071088844,0.00140216895108,9.8111224022,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123797750000,13473,123797750000,RH_EXTIMU,3.20312716501e-06,7.79218569115e-06,-0.702971303391,0.711218213025,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00131934167207,0.000313371880463,-6.79403388663e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00656497434237,0.0279735268071,9.75418822564,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123800250000,13474,123800250000,RH_EXTIMU,3.55865666434e-06,8.56476697383e-06,-0.702971364269,0.711218152842,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00023219419913,0.000639520950992,-6.84826699764e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00920146194814,0.000524438610317,9.76742297291,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123802750000,13475,123802750000,RH_EXTIMU,2.96241516962e-06,1.07655326849e-05,-0.702971425134,0.711218092655,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00157690585074,0.000916867300633,-6.84892706572e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0153307854043,0.0304744401548,9.70580106783,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123805250000,13476,123805250000,RH_EXTIMU,3.69137766349e-06,1.0403558572e-05,-0.702971486411,0.711218032091,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00061832768924,0.000203998188399,-6.89178528425e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00155968159432,-0.0125967696125,9.81816454911,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123807750000,13477,123807750000,RH_EXTIMU,1.97093027707e-06,1.2581778368e-05,-0.702971547008,0.711217972168,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00220387100843,0.000271811311954,-6.81981222597e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00644130983272,0.0493521937847,9.73302404656,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123810250000,13478,123810250000,RH_EXTIMU,4.71446036972e-06,1.5055103123e-05,-0.70297160762,0.711217912198,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000170057488458,0.00295015779633,-6.81884395627e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0351340982756,-0.00532359247621,9.73779728129,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123812750000,13479,123812750000,RH_EXTIMU,7.10894570652e-06,1.52700668701e-05,-0.702971668806,0.711217851697,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.001241510926,0.00146891351707,-6.88094413423e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0449070765577,-0.0363985800187,9.63366595261,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123815250000,13480,123815250000,RH_EXTIMU,3.97762703174e-06,1.08892104921e-05,-0.702971733888,0.711217787474,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000682055702668,-0.00425357684642,-7.31610395812e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0774985225977,-0.0143131682617,8.90463496688,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123817750000,13481,123817750000,RH_EXTIMU,5.37432709286e-06,1.67470417304e-06,-0.7029718058,0.711217716469,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00597671718152,-0.00445734371692,-8.08062696772e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0622155813882,-0.104032680186,8.85956663588,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123820250000,13482,123820250000,RH_EXTIMU,2.04741439941e-05,7.39708888367e-06,-0.702971854743,0.711217667782,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00537326602081,0.0117476854081,-5.52327827498e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.279155554076,-0.111671072931,9.45216156418,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123822750000,13483,123822750000,RH_EXTIMU,-8.12130834325e-07,-1.32363352182e-05,-0.702971927587,0.711217595992,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000507565056062,-0.0237108070636,-8.16067131324e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.557198607831,0.0233916084839,9.65282929696,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123825250000,13484,123825250000,RH_EXTIMU,3.66579046418e-06,-3.95248336107e-06,-0.702971966245,0.711217557886,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00267320908571,0.00780055303462,-4.34669384934e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.145001944886,0.0314376300782,8.80243774145,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123827750000,13485,123827750000,RH_EXTIMU,3.73016435414e-06,-2.56608389701e-06,-0.702972008412,0.711217516214,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000743052904225,0.000825027489386,-4.74315454883e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0455943317222,0.0284898042197,9.29448708639,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123830250000,13486,123830250000,RH_EXTIMU,2.14559610949e-05,6.36584311942e-06,-0.70297204483,0.71121747988,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00506240199968,0.0150506253242,-4.12175269942e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.455743476702,-0.0980560545015,9.80138136824,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123832750000,13487,123832750000,RH_EXTIMU,5.20123361845e-06,-1.23949241211e-05,-0.70297211888,0.711217406914,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0013021205079,-0.0198156845892,-8.29275145968e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.446619478732,-0.0039876905083,9.81935342279,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123834000000,13488,123835250000,RH_EXTIMU,4.5491441272e-06,-3.21875779896e-06,-0.702972160713,0.71121736567,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00553149342712,0.00485427820564,-4.70285512766e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.7729933395e-05,0.100652409781,9.82043163305,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123837750000,13489,123837750000,RH_EXTIMU,2.16034713623e-05,6.66129577071e-06,-0.702972196875,0.711217329591,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00414714490533,0.0152124661273,-4.09449675971e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.448206998909,-0.0937749203468,9.92891931132,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123840250000,13490,123840250000,RH_EXTIMU,6.59738340765e-06,-1.24380940315e-05,-0.702972270598,0.711217256942,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0022030018131,-0.0193061445913,-8.25522205789e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.437298863106,-0.023130614219,9.82118604178,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123842750000,13491,123842750000,RH_EXTIMU,5.46665084233e-06,-3.57679105135e-06,-0.702972312419,0.711217215715,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00562675763053,0.0044059497368,-4.70156309004e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00650855540317,0.103526817649,9.78563201364,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123845250000,13492,123845250000,RH_EXTIMU,2.39130769097e-05,5.69562373303e-06,-0.70297234839,0.711217179766,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00528093199455,0.0156496219924,-4.07770187868e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.456500352557,-0.116549351558,9.96295725338,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123849000000,13493,123847750000,RH_EXTIMU,2.21032617095e-06,-9.91502615556e-06,-0.702972413463,0.7112171158,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00356920964941,-0.0210871977891,-7.27987377579e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.516666072735,0.0829082209676,9.80614826003,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123850250000,13494,123850250000,RH_EXTIMU,7.32403804652e-06,-4.72095342332e-06,-0.702972455379,0.711217074389,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.1464605742e-05,0.00583112904286,-4.71872945163e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0746787179986,-0.00370345888226,9.86761964071,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123852750000,13495,123852750000,RH_EXTIMU,2.52171077927e-05,5.08282183828e-06,-0.702972491247,0.711217038525,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00466725827428,0.0156407576821,-4.07020508437e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.444885734807,-0.096172794056,9.93061765072,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123855250000,13496,123855250000,RH_EXTIMU,3.69973594903e-06,-1.02617617696e-05,-0.702972556105,0.7112169748,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00361335950197,-0.0208315608925,-7.25180508616e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.510031699319,0.0813793029052,9.7712202576,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123857750000,13497,123857750000,RH_EXTIMU,8.71204911712e-06,-5.14285694553e-06,-0.702972597902,0.7112169335,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.68861412375e-05,0.00573133601965,-4.70637531169e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0739162852428,-0.0041009523057,9.83907946375,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123860250000,13498,123860250000,RH_EXTIMU,2.64104473522e-05,4.52182467985e-06,-0.702972633556,0.711216897826,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00463471543868,0.0154521389777,-4.04884622745e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.44001860684,-0.0951927119854,9.92649121259,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123862750000,13499,123862750000,RH_EXTIMU,5.01077354676e-06,-1.06830391222e-05,-0.702972698269,0.711216834271,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00362496359839,-0.0206858740338,-7.23181958848e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.506344006138,0.0816630987962,9.77392350929,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123867750000,13500,123865250000,RH_EXTIMU,9.94054947213e-06,-5.68694730306e-06,-0.702972739791,0.711216793235,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.78140606388e-06,0.00561504147603,-4.67652336413e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0720915728162,-0.00341900487121,9.84953835225,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123867750000,13501,123867750000,RH_EXTIMU,2.7055267945e-05,3.9100413246e-06,-0.702972775191,0.711216757812,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00434068316094,0.0150853755679,-4.02168764537e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.433501198291,-0.0917403748294,9.90808576637,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123870250000,13502,123870250000,RH_EXTIMU,5.96148343189e-06,-1.11211679103e-05,-0.702972839786,0.711216694379,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00354857615422,-0.0204150445112,-7.21667107045e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.500068746289,0.0801933308647,9.76776081769,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123872750000,13503,123872750000,RH_EXTIMU,1.0797335646e-05,-6.13670678885e-06,-0.702972881227,0.711216653422,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-5.1681743909e-05,0.00555560321864,-4.66785995193e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0705819669297,-0.0022447390651,9.84900087175,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123875250000,13504,123875250000,RH_EXTIMU,2.757867466e-05,3.32587345905e-06,-0.702972916481,0.711216618143,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00422658451015,0.0148214162385,-4.00630930675e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.427252927876,-0.0883845645163,9.91520918276,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123877750000,13505,123877750000,RH_EXTIMU,-2.6869123418e-06,-2.25752083451e-06,-0.702972973268,0.711216562548,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.014080329395,-0.0201975137248,-6.35333616926e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.494169658155,0.300023948675,9.67380057482,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123880250000,13506,123880250000,RH_EXTIMU,8.38148794315e-06,2.83968945837e-06,-0.702973006462,0.711216529692,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00343106269237,0.00912480532476,-3.73727967691e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.107332906188,-0.0341574564928,9.84701061762,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123882750000,13507,123882750000,RH_EXTIMU,1.84172111696e-05,1.8046667082e-05,-0.702973032045,0.711216503993,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00284201779626,0.0142962369925,-2.90877252078e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.47654534542,0.0244551491875,9.85041139641,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123885250000,13508,123885250000,RH_EXTIMU,-4.12817140869e-06,-4.37084448708e-06,-0.702973103232,0.711216434074,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000220591622053,-0.0254340001685,-7.98197735597e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.605088470481,0.0019955502276,9.76901036769,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123887750000,13509,123887750000,RH_EXTIMU,5.06205510895e-06,4.93436280238e-06,-0.702973128444,0.711216409144,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.05642031836e-06,0.0104627987174,-2.836614983e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.122402683523,-0.000122587313842,9.81390245532,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123890250000,13510,123890250000,RH_EXTIMU,1.80488037756e-05,1.79856000884e-05,-0.702973153844,0.711216383617,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.93759221797e-05,0.0147292715634,-2.88095082472e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.479732171273,-0.00116753475784,9.85010292975,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123892750000,13511,123892750000,RH_EXTIMU,-3.51201360358e-06,-4.67769977741e-06,-0.702973224999,0.711216313719,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000477829888273,-0.0250201487969,-7.97775505344e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.59742787227,-0.0103244936705,9.81878525561,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123895250000,13512,123895250000,RH_EXTIMU,5.35687574208e-06,4.71521143298e-06,-0.702973250102,0.711216288895,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000236213202487,0.0103319867232,-2.82497343748e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.119456999397,0.00671634523171,9.90299147625,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123897750000,13513,123897750000,RH_EXTIMU,1.75429371406e-05,1.74778844346e-05,-0.702973275599,0.711216263299,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000243913678798,0.0141147968807,-2.89109324051e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.465007452987,0.00310550128363,9.88459693379,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123900250000,13514,123900250000,RH_EXTIMU,-3.93730419605e-06,-4.56108792637e-06,-0.702973345911,0.711216194207,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000172571243369,-0.0246196089707,-7.88519254016e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.586821494552,-0.00448287666795,9.78351277399,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123902750000,13515,123902750000,RH_EXTIMU,5.3551067287e-06,4.65949942454e-06,-0.702973370983,0.711216169416,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000101668623695,0.0104721185835,-2.82121673584e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.123411275982,-0.00118194899692,9.8350318159,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123905250000,13516,123905250000,RH_EXTIMU,1.78745837719e-05,1.72398904276e-05,-0.702973396322,0.711216143973,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.82999106756e-05,0.0141985891703,-2.87331477294e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.462995379729,-0.00123854540138,9.86733727403,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123907750000,13517,123907750000,RH_EXTIMU,-3.71161235184e-06,-4.42009624747e-06,-0.702973466304,0.711216075212,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000100843469865,-0.0244635630996,-7.8475830424e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.58407751345,0.00226858548536,9.77365236673,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123910250000,13518,123910250000,RH_EXTIMU,5.40979883151e-06,4.88880764149e-06,-0.70297349116,0.71121605063,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.52946985609e-05,0.0104262016877,-2.79713586081e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.123560588041,0.000906952623594,9.81994949698,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123912750000,13519,123912750000,RH_EXTIMU,1.82460474375e-05,1.76704346296e-05,-0.702973516181,0.711216025483,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000115361080265,0.0144912326013,-2.83834463504e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.46859287658,-0.00306675244662,9.86099713696,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123915250000,13520,123915250000,RH_EXTIMU,-3.02158464519e-06,-3.72774620146e-06,-0.702973585868,0.711215957041,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.68190899708e-05,-0.0241354490366,-7.81286556011e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.580165313204,0.0021069395189,9.77765658364,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123917750000,13521,123917750000,RH_EXTIMU,6.10197729258e-06,5.50248527988e-06,-0.702973610485,0.711215932677,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.7099759148e-07,0.0103826487615,-2.77131413824e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.122329504378,-0.000416493797531,9.82592664152,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123920250000,13522,123920250000,RH_EXTIMU,1.8740414778e-05,1.81857099817e-05,-0.70297363529,0.711215907728,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.8148905049e-05,0.0143239996021,-2.81501212577e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.464432648397,-0.00137204263616,9.86667930949,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123922750000,13523,123922750000,RH_EXTIMU,-2.38450797197e-06,-3.18787713503e-06,-0.702973704654,0.711215839636,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.51730223002e-07,-0.0240411991757,-7.77466561472e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.577332853204,9.81979148281e-05,9.78618029983,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123925250000,13524,123925250000,RH_EXTIMU,6.61321556066e-06,5.8849265227e-06,-0.702973729031,0.711215815497,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.71047703488e-05,0.0102223077583,-2.74509158077e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.120102944587,-9.9921182009e-05,9.84289326616,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123927750000,13525,123927750000,RH_EXTIMU,1.90133397157e-05,1.83239490013e-05,-0.702973753653,0.711215790726,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.98869637091e-05,0.0140510328141,-2.79470893995e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.45844282091,-0.00197065670323,9.87233472167,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123930250000,13526,123930250000,RH_EXTIMU,-1.89294215814e-06,-2.8827006023e-06,-0.702973822618,0.711215723041,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.10742646599e-05,-0.0238232572686,-7.72880661807e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.571847467678,-0.000415935155961,9.79106686284,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123932750000,13527,123932750000,RH_EXTIMU,6.87369615673e-06,6.06589166343e-06,-0.702973846879,0.711215699011,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.45241758172e-05,0.0100216773946,-2.73244455959e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.117098446051,0.00109185776546,9.83028782047,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123935250000,13528,123935250000,RH_EXTIMU,1.9316382052e-05,1.82967430815e-05,-0.702973871391,0.711215674345,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000201172154263,0.0139565250337,-2.78249642451e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.455242292137,-0.00453507970137,9.88232986386,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123937750000,13529,123937750000,RH_EXTIMU,-1.3479501726e-06,-2.62310000696e-06,-0.702973939917,0.711215607105,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.44692755566e-06,-0.0235240048245,-7.67832271209e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.565933198967,0.000471831639094,9.80858216525,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123940250000,13530,123940250000,RH_EXTIMU,7.28627160423e-06,6.13344637601e-06,-0.702973964039,0.711215583204,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.18645788018e-05,0.009837940258,-2.71749453611e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.115501185091,-6.30185145363e-05,9.84897871196,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123942750000,13531,123942750000,RH_EXTIMU,1.94522575331e-05,1.82409609296e-05,-0.702973988478,0.711215558612,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000113097285096,0.0137307394823,-2.77458039668e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.448269882963,-0.00267147022004,9.88779670956,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123945250000,13532,123945250000,RH_EXTIMU,-1.20710071626e-06,-2.44298465766e-06,-0.702974056568,0.711215491806,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00012238299957,-0.0233869883945,-7.62908575532e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.561217478607,0.00233094265098,9.7793715007,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123947750000,13533,123947750000,RH_EXTIMU,7.33970619398e-06,6.23948480615e-06,-0.702974080555,0.711215468037,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.99435098026e-05,0.00974663222838,-2.70243917031e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.114708066457,0.000237474840503,9.82039580939,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123950250000,13534,123950250000,RH_EXTIMU,1.90027434106e-05,1.85929816399e-05,-0.702974104892,0.71121544355,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000311404219242,0.013587848697,-2.76316539441e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.44475307003,0.0065061828678,9.85825216584,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123952750000,13535,123952750000,RH_EXTIMU,-1.01042435579e-06,-2.08099667609e-06,-0.702974172654,0.711215377066,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0002396799478,-0.0230179131281,-7.59277699043e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.5538050259,-0.00703225057117,9.80042904873,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123955250000,13536,123955250000,RH_EXTIMU,7.63098522311e-06,6.27734236738e-06,-0.702974196565,0.711215353368,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000216165459591,0.00961541358317,-2.69392920868e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.112242882405,-0.00293471698012,9.85885233083,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123957750000,13537,123957750000,RH_EXTIMU,1.92784308964e-05,1.79766599196e-05,-0.702974220773,0.711215329021,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.76193371582e-05,0.0132068704002,-2.74791045488e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.435501662233,-0.00115911499113,9.89144292354,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123960250000,13538,123960250000,RH_EXTIMU,-6.68136806808e-07,-2.25224619085e-06,-0.70297428804,0.711215263018,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.72778239496e-05,-0.022727224894,-7.53665546961e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.54611925421,-0.000739896139587,9.80796194479,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123962750000,13539,123962750000,RH_EXTIMU,7.5717591566e-06,6.20423248427e-06,-0.702974311913,0.711215239358,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.74778965544e-05,0.00944544933326,-2.68989850402e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.110498098325,0.00161697305168,9.83717919221,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123965250000,13540,123965250000,RH_EXTIMU,1.92022343113e-05,1.78058752032e-05,-0.702974336044,0.711215215092,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.28917577025e-05,0.0131417522728,-2.73895743876e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.431836478469,-0.00230055276524,9.87223187399,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123967750000,13541,123967750000,RH_EXTIMU,-4.62383774846e-07,-2.21993212875e-06,-0.702974403032,0.711215149358,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.34843888448e-05,-0.022453104665,-7.50541529028e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.539850715425,-0.00178251748531,9.79094304339,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123970250000,13542,123970250000,RH_EXTIMU,1.22472474739e-05,-3.55315097979e-06,-0.702974441724,0.711215111004,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00798120072754,0.00638907194283,-4.36073380529e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0792290709623,-0.18091309478,9.90262937942,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123972750000,13543,123972750000,RH_EXTIMU,4.6881681235e-06,-1.23137918752e-05,-0.702974502166,0.711215051254,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000625900560287,-0.00923563258077,-6.78846487037e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0972640891957,-0.00406479478015,9.80487882972,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123975250000,13544,123975250000,RH_EXTIMU,1.18942780908e-05,-4.29695300924e-06,-0.702974540728,0.711215013148,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000408431789781,0.00861392590553,-4.34716989524e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0944864128245,0.0077934246676,9.80080902815,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123977750000,13545,123977750000,RH_EXTIMU,4.25558678656e-06,-1.20541651727e-05,-0.702974600892,0.71121495368,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.62969363252e-05,-0.00870948178687,-6.75750543537e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0946750044669,0.000695207248603,9.82488172235,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123980250000,13546,123980250000,RH_EXTIMU,1.18438361247e-05,-4.39039052819e-06,-0.702974639251,0.711214915767,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.54974276238e-06,0.00862794964704,-4.32459089882e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0938414662305,-0.000383396135525,9.83358232988,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123982750000,13547,123982750000,RH_EXTIMU,4.44437943753e-06,-1.20166678052e-05,-0.702974699179,0.711214856531,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.87807932962e-05,-0.00850044281321,-6.73121458578e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0911231685093,-0.000754353761627,9.846487148,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123985250000,13548,123985250000,RH_EXTIMU,1.21241660487e-05,-4.4224439014e-06,-0.702974737334,0.711214818816,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,9.87446221624e-05,0.00863985593952,-4.30201323461e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0947987066032,-0.00220340519609,9.87156972947,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123987750000,13549,123987750000,RH_EXTIMU,4.67081140746e-06,-1.18793673092e-05,-0.702974796875,0.711214759967,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.71256373481e-05,-0.00843439634718,-6.68738795021e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0909933415385,0.00104308399983,9.85320924497,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123990250000,13550,123990250000,RH_EXTIMU,1.21123067411e-05,-4.35895183677e-06,-0.702974834918,0.711214722363,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.67080166428e-06,0.00846385082515,-4.28919621604e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0924210834232,-0.000415451014933,9.85638108844,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123992750000,13551,123992750000,RH_EXTIMU,-2.81672880102e-06,-4.03467907786e-06,-0.702974887988,0.711214670008,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00867656404398,-0.00821128768551,-5.95899838384e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0867545063007,0.183342438473,9.77231171453,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123995250000,13552,123995250000,RH_EXTIMU,7.55023479954e-06,5.67556461042e-06,-0.70297491145,0.711214646772,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000437663173575,0.0113550262473,-2.6428214551e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.12112316297,-0.00641559411986,9.85836575109,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+123999000000,13553,123997750000,RH_EXTIMU,1.17986082448e-05,1.58734723803e-05,-0.702974942837,0.711214615536,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00331789398268,0.00819152100747,-3.54671105379e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.312088362042,0.0701699424535,9.85366020029,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124000250000,13554,124000250000,RH_EXTIMU,1.90818400564e-06,1.93858563984e-06,-0.702975002127,0.711214557203,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00220933085326,-0.0134907322434,-6.65337987406e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.32929955785,-0.0183409842439,9.80650909563,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124002750000,13555,124002750000,RH_EXTIMU,1.30412212818e-05,1.24662238164e-05,-0.702975039495,0.711214520044,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000413849480408,0.0122509251428,-4.21575967932e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.321073747609,-0.00625228830565,9.85712517498,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124005250000,13556,124005250000,RH_EXTIMU,-9.21822261956e-07,-3.24984567171e-06,-0.702975104695,0.71121445582,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000893829525765,-0.0167945343647,-7.31902434269e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.414423045124,-0.0508562907048,9.81449155548,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124007750000,13557,124007750000,RH_EXTIMU,7.67558353959e-06,5.78562678544e-06,-0.702975127978,0.71121443275,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000189690403883,0.00997593665357,-2.62372431788e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.109274539554,0.00597298704429,9.82982184152,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124010250000,13558,124010250000,RH_EXTIMU,1.15480239545e-05,1.55309816038e-05,-0.702975159264,0.711214401628,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00327728489418,0.00772261298826,-3.53453684546e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.305832411093,0.0674231443032,9.83054508386,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124012750000,13559,124012750000,RH_EXTIMU,2.01945421664e-06,1.52728893251e-06,-0.702975218243,0.711214343591,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00245391491819,-0.0133263804106,-6.61849988176e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.324341361922,-0.0235243071201,9.82254458385,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124015250000,13560,124015250000,RH_EXTIMU,1.74900626541e-05,1.53004345284e-05,-0.702975241867,0.711214319866,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00105659094219,0.0165368904294,-2.67873000244e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.410896100592,-0.0513059993848,9.88478486602,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124019000000,13561,124017750000,RH_EXTIMU,4.50928340003e-07,-2.28752322843e-06,-0.702975306625,0.711214256234,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000196339711617,-0.0195895177127,-7.25935134297e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.492886833416,-0.00279781198467,9.81624330446,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124020250000,13562,124020250000,RH_EXTIMU,1.20968142087e-05,-3.56373654487e-06,-0.702975343946,0.711214219237,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00734389314819,0.00582328718681,-4.20618857975e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0701438509317,-0.166918206874,9.92850739408,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124022750000,13563,124022750000,RH_EXTIMU,-2.23350224796e-06,-4.20511932006e-06,-0.702975396432,0.711214167455,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00779283849135,-0.00842401640762,-5.89367383809e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0873592871266,0.173001608849,9.74579556957,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124025250000,13564,124025250000,RH_EXTIMU,7.8623137228e-06,4.75862148601e-06,-0.702975419679,0.711214144434,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000703198363703,0.0107777997157,-2.61918420295e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.116586031648,-0.0111768234041,9.85086297005,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124025250000,13565,124027750000,RH_EXTIMU,1.18742739053e-05,1.43552583597e-05,-0.702975451019,0.711214113273,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00311426928883,0.00771645854291,-3.54008856457e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.296803933448,0.0662143584135,9.84889688847,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124030250000,13566,124030250000,RH_EXTIMU,2.57689381976e-06,9.48374259412e-07,-0.702975509332,0.711214055874,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00224982718612,-0.0128567960121,-6.54376573843e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.314468841869,-0.0205282651781,9.82148742492,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124034000000,13567,124032750000,RH_EXTIMU,1.73892755851e-05,1.42962071904e-05,-0.702975532919,0.711214032209,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000921259634207,0.0159247263799,-2.67452756404e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.397523065725,-0.0478284440062,9.86472135457,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124035250000,13568,124035250000,RH_EXTIMU,8.8639094061e-07,-2.72638997931e-06,-0.702975597295,0.711213968929,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000183510565366,-0.018966267453,-7.21675752999e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.47794146777,-0.00271334755576,9.79186142785,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124037750000,13569,124037750000,RH_EXTIMU,1.24112076779e-05,-3.81420150642e-06,-0.702975634381,0.71121393216,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0071690524341,0.00586239843441,-4.18038232486e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0711681409866,-0.163372973386,9.88974142164,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124040250000,13570,124040250000,RH_EXTIMU,4.1767091693e-06,-1.10103679766e-05,-0.702975692308,0.711213874925,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000638207907787,-0.00872533328161,-6.50498322328e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0954598242833,0.0187524037031,9.68219922,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124042750000,13571,124042750000,RH_EXTIMU,4.75054218579e-06,2.46894145644e-06,-0.702975723077,0.711213844589,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00725400727169,0.00799204967436,-3.4617377099e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0895967230014,0.157857284641,9.75164387602,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124045250000,13572,124045250000,RH_EXTIMU,1.73514717708e-05,1.44546029137e-05,-0.702975746555,0.711213821045,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000429061372702,0.0139060127191,-2.66188828769e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.408372412179,-0.00628051287097,9.86750086214,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124047750000,13573,124047750000,RH_EXTIMU,-9.79491626543e-07,-3.18440454606e-06,-0.702975811382,0.71121375732,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000509950432819,-0.0203450630245,-7.26899141845e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.497541545116,0.0101820434869,9.75480900815,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124051500000,13574,124050250000,RH_EXTIMU,6.00350223352e-06,4.29654075341e-06,-0.702975834509,0.71121373443,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000234017909849,0.00818354155153,-2.60430315542e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0936315029053,0.00506373658261,9.77711996282,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124051500000,13575,124052750000,RH_EXTIMU,1.59247092814e-05,1.49390230198e-05,-0.702975857852,0.711213711061,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000340247117828,0.0116347586567,-2.64410259474e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.391085270747,0.00663745077038,9.78131652894,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124055250000,13576,124055250000,RH_EXTIMU,-2.75230893535e-06,-3.46006159168e-06,-0.702975923362,0.711213646631,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000279389715539,-0.0209721393868,-7.34961736889e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.504219027022,0.00539890954865,9.71180514106,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124057750000,13577,124057750000,RH_EXTIMU,4.93181566286e-06,4.10733597632e-06,-0.702975946335,0.711213623909,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000116284673464,0.00862703279142,-2.58546324354e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.102624175352,-0.00283788197582,9.77575049327,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124060250000,13578,124060250000,RH_EXTIMU,1.50498928386e-05,1.50422523573e-05,-0.702975969313,0.711213600907,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000392694918462,0.0119118610928,-2.60191127765e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.397460385418,0.00794610390742,9.78697564083,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124062750000,13579,124062750000,RH_EXTIMU,3.49627027592e-06,-1.12572550847e-05,-0.702976040792,0.711213530477,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00821666429335,-0.0214611891439,-8.01000442526e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.515307473425,-0.173985789233,9.79972475098,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124065250000,13580,124065250000,RH_EXTIMU,7.36064039041e-06,-5.65228357163e-06,-0.702976077981,0.711213493756,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000953414928846,0.00536231251031,-4.18619948487e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0640763563021,0.0167786504597,9.71764189653,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124067750000,13581,124067750000,RH_EXTIMU,2.14344647326e-05,2.80551079236e-06,-0.702976108182,0.711213463636,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00325109337739,0.0127270871405,-3.42355123379e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.366196703537,-0.0689905565516,9.78863036945,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124070250000,13582,124070250000,RH_EXTIMU,3.53603002001e-06,-9.77682014095e-06,-0.702976167492,0.711213405266,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00310762263764,-0.0172247169999,-6.63963848846e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.425685868581,0.0694401792564,9.70283447181,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124072750000,13583,124072750000,RH_EXTIMU,7.67496101696e-06,-5.33937089693e-06,-0.702976204544,0.711213368658,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000140606469844,0.0048524341987,-4.17138225739e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0623167745559,0.000750634524292,9.80294497737,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124075250000,13584,124075250000,RH_EXTIMU,2.19615816543e-05,2.96054219148e-06,-0.702976234493,0.711213338772,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00346095540719,0.012756930488,-3.39592076698e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.369058400104,-0.0731602811055,9.87310432378,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124077750000,13585,124077750000,RH_EXTIMU,3.90506400812e-06,-9.49091507036e-06,-0.702976293792,0.711213280431,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00327116496429,-0.0172391571248,-6.63739194768e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.426494526322,0.0735043161641,9.75060667725,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124080250000,13586,124080250000,RH_EXTIMU,7.22708414647e-06,-5.16779257869e-06,-0.702976330786,0.711213243883,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000541110395953,0.00432797043396,-4.16406165106e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0533657953147,0.00734893853843,9.79146829374,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124082750000,13587,124082750000,RH_EXTIMU,2.15234945567e-05,2.98566522073e-06,-0.702976360499,0.711213214238,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00354888691006,0.0126791079495,-3.36837379339e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.369671082331,-0.0753762486103,9.86044333941,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124085250000,13588,124085250000,RH_EXTIMU,3.50790667402e-06,-9.54937590653e-06,-0.7029764199,0.711213155785,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00320086811111,-0.0172636963187,-6.64977565952e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.426986389917,0.0724050927872,9.74170770643,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124087750000,13589,124087750000,RH_EXTIMU,7.51275953056e-06,-5.10884080521e-06,-0.702976456696,0.71121311943,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000218630122613,0.00477878690392,-4.14244133221e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0613468387523,0.00143307175839,9.80755891911,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124090250000,13590,124090250000,RH_EXTIMU,2.18929797528e-05,3.18439110502e-06,-0.70297648609,0.711213090089,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00351796365601,0.0128057689804,-3.33335595587e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.370434820735,-0.0745063768455,9.8652886118,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124092750000,13591,124092750000,RH_EXTIMU,3.85549073683e-06,-9.34159345245e-06,-0.702976545519,0.711213031621,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.003218419378,-0.0172708607572,-6.65210812708e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.427386963621,0.0726136018748,9.7421713719,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124095250000,13592,124095250000,RH_EXTIMU,3.22388864229e-06,-3.49134105549e-06,-0.702976582135,0.711212995485,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00364943525084,0.00297341904452,-4.11687258945e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0251391352552,0.0697550552111,9.54026991908,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124097750000,13593,124097750000,RH_EXTIMU,2.6970810322e-06,-2.14949341749e-07,-0.702976619103,0.711212958956,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00214231926275,0.0015679029642,-4.15845772937e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0189353939138,0.0332490588352,9.41724964449,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124100250000,13594,124100250000,RH_EXTIMU,2.08098605397e-05,4.93437436897e-06,-0.702976647029,0.711212931037,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00740975152438,0.0131161009387,-3.16042186661e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.389600635966,-0.153534236987,9.92406560353,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124102750000,13595,124102750000,RH_EXTIMU,7.18462578624e-06,-7.22497036373e-06,-0.702976698463,0.711212880447,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000914165158693,-0.0145808846965,-5.75662278326e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.365423766471,0.036556523241,9.94441101204,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124105250000,13596,124105250000,RH_EXTIMU,3.50249886511e-06,-3.68808868608e-06,-0.702976734131,0.711212845247,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00408409720256,-5.83793049208e-05,-4.0088759912e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0523130720512,0.0821539456866,9.94250465314,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124107750000,13597,124107750000,RH_EXTIMU,2.07320728769e-06,-3.7058225522e-06,-0.702976769766,0.71121281003,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000803251233833,-0.00081389722667,-4.00769072613e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00942680786583,0.00982460264176,9.90157797645,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124111500000,13598,124110250000,RH_EXTIMU,1.41485800323e-06,-3.65767311358e-06,-0.702976805286,0.711212774923,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000401659552166,-0.000342847967617,-3.99515569472e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00307626507461,0.00611218626163,9.8288543578,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124112750000,13599,124112750000,RH_EXTIMU,1.28935165661e-06,-3.66717654902e-06,-0.702976840789,0.711212739832,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-6.60648820388e-05,-7.59897550669e-05,-3.9933919448e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000167048388561,0.000162831725615,9.80637369512,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124115250000,13600,124115250000,RH_EXTIMU,1.2005309174e-06,-3.57123137624e-06,-0.702976876053,0.711212704977,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000104494208161,4.6386666252e-06,-3.9665484303e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00020154732293,0.00267599319058,9.79368549246,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124117750000,13601,124117750000,RH_EXTIMU,6.41022290131e-07,-3.19593285242e-06,-0.702976911056,0.711212670381,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000529404729268,-0.000101123771356,-3.93711604644e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00167102466591,0.0112150078524,9.79316579464,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124120250000,13602,124120250000,RH_EXTIMU,6.94774433593e-06,-1.18612538228e-06,-0.702976938122,0.711212643601,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00245805784884,0.00469030433401,-3.04772809213e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0995551732412,-0.0532555693277,9.78541807971,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124122750000,13603,124122750000,RH_EXTIMU,1.51460876456e-05,5.63420750581e-06,-0.702976965167,0.711212616721,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000828983073966,0.00849116243326,-3.05500700745e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.277079402059,-0.0178508490625,9.81799058064,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124125250000,13604,124125250000,RH_EXTIMU,1.54961676164e-05,5.14757160788e-06,-0.702977005733,0.711212576621,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000472860763765,-8.00030587272e-05,-4.56249136719e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0106613751237,0.00781766204477,9.83098393435,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124125250000,13605,124127750000,RH_EXTIMU,1.52512660004e-05,5.38553418853e-06,-0.702977045857,0.711212536965,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000273166808622,-2.33491378175e-06,-4.51358166975e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000975868903614,0.00326587648297,9.80949654509,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124130250000,13606,124130250000,RH_EXTIMU,1.49111721587e-05,4.97195385864e-06,-0.702977085791,0.711212497504,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.90874331726e-05,-0.000426577661066,-4.4908915521e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00889505572665,-0.000279683472841,9.84519046843,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124132750000,13607,124132750000,RH_EXTIMU,1.42200816054e-05,4.83481903898e-06,-0.702977125375,0.711212458393,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000316087058009,-0.000466682573252,-4.45191928241e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00716636761391,0.00611301619831,9.84497490897,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124135250000,13608,124135250000,RH_EXTIMU,1.35557608263e-05,4.95219662082e-06,-0.702977164641,0.711212419595,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000443988982363,-0.000306817827072,-4.41642516743e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00420769636413,0.00798888146979,9.82820400994,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124137750000,13609,124137750000,RH_EXTIMU,1.26054104973e-05,5.3663765521e-06,-0.702977203739,0.711212380963,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000773647418698,-0.000298804005865,-4.39798638824e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00489786970375,0.0155138765868,9.79682171545,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124140250000,13610,124140250000,RH_EXTIMU,1.22624950737e-05,5.49078237053e-06,-0.702977242564,0.711212342593,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000265071565844,-0.000122066440634,-4.36713360698e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00126177338526,0.0033678478595,9.79912840145,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124142750000,13611,124142750000,RH_EXTIMU,1.18990854146e-05,5.54037886969e-06,-0.702977281188,0.711212304422,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00023466077204,-0.000176156273405,-4.34442602724e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00328730836728,0.00483683175909,9.8125841902,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124142750000,13612,124145250000,RH_EXTIMU,1.13886509674e-05,5.65556607853e-06,-0.702977319574,0.711212266488,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000355200469051,-0.000221521205028,-4.31778534777e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00375764174207,0.00692903585363,9.81341724501,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124147750000,13613,124147750000,RH_EXTIMU,1.11777398234e-05,5.70034725901e-06,-0.702977357696,0.71121222881,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000145185681806,-9.31336374855e-05,-4.28805865444e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000627107309634,0.00186898778263,9.81320951983,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124150250000,13614,124150250000,RH_EXTIMU,1.12697683822e-05,5.72694654071e-06,-0.702977395656,0.711212191288,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.7403023555e-05,6.68892136809e-05,-4.27002935867e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0013738797412,-0.000778251604975,9.80416728823,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124152750000,13615,124152750000,RH_EXTIMU,1.09739395576e-05,5.87526905806e-06,-0.702977433401,0.711212153984,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000251731045577,-8.1977924646e-05,-4.24568894703e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00194670688956,0.00524386714945,9.80003880241,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124155250000,13616,124155250000,RH_EXTIMU,1.00378636809e-05,7.35258688662e-06,-0.702977471258,0.711212116565,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00136341520236,0.000314116785654,-4.26011903531e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00694791581824,0.0287158323192,9.72163868416,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124169000000,13617,124157750000,RH_EXTIMU,1.05905184409e-05,6.7972587141e-06,-0.702977508832,0.711212079423,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000626750884146,-5.16190665004e-06,-4.22586846849e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00338409496616,-0.0152921614845,9.8450012039,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124169000000,13618,124160250000,RH_EXTIMU,1.00599132257e-05,6.84681921339e-06,-0.702977546077,0.711212042617,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00032976968943,-0.000270204520669,-4.18937412245e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00470799856728,0.00770930875889,9.83432449764,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124169000000,13619,124162750000,RH_EXTIMU,9.53175406697e-06,6.99623240855e-06,-0.702977583006,0.711212006122,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000384533324375,-0.000212015749819,-4.15393975272e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00355683408442,0.00681289108361,9.82594633944,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124169000000,13620,124165250000,RH_EXTIMU,8.98518111076e-06,7.10032030088e-06,-0.702977619661,0.711211969897,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000369520081599,-0.000248160058387,-4.1231518162e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00350664621068,0.00628226912191,9.81903196471,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124169000000,13621,124167750000,RH_EXTIMU,8.97754858654e-06,7.1386685143e-06,-0.702977656158,0.711211933822,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.59085560785e-05,1.7526514335e-05,-4.10536874299e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00108292339622,-5.0829826321e-05,9.80951462575,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124171500000,13622,124170250000,RH_EXTIMU,8.86363327391e-06,7.31788271352e-06,-0.702977692485,0.711211897915,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000165600740632,3.79034303295e-05,-4.0864732702e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000425267519861,0.00334910019761,9.80136656091,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124172750000,13623,124172750000,RH_EXTIMU,8.45040840693e-06,7.74407699905e-06,-0.702977728715,0.711211862106,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000474795947872,1.01012193231e-05,-4.07574581245e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000120378760762,0.0099295705062,9.78771780867,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124179000000,13624,124175250000,RH_EXTIMU,8.35896774753e-06,7.92354540125e-06,-0.702977764726,0.71121182651,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000152956313387,5.06874246431e-05,-4.05093474316e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000630621286158,0.00189941203359,9.80666562339,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124179000000,13625,124177750000,RH_EXTIMU,8.31531083018e-06,8.01700823517e-06,-0.702977800616,0.711211791036,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-7.74008233251e-05,2.86256094046e-05,-4.03712914895e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-2.0348746739e-05,0.00175723678586,9.81015689889,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124181500000,13626,124180250000,RH_EXTIMU,7.99839219611e-06,8.41387116562e-06,-0.702977836276,0.711211755788,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000403505216258,4.75734538107e-05,-4.01171470688e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00113375518022,0.00742808684407,9.78405242183,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124181500000,13627,124182750000,RH_EXTIMU,1.13161803982e-05,1.31462401486e-05,-0.702977861746,0.711211730496,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000773680095187,0.00455843842733,-2.87235118361e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0963760372119,0.0482779403209,9.79622135266,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124187750000,13628,124185250000,RH_EXTIMU,1.14884686119e-05,7.87963873595e-06,-0.70297790142,0.711211691355,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00305987085032,-0.00289964307118,-4.45359455988e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0815750336975,-0.0663630695131,9.80725754862,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124187750000,13629,124187750000,RH_EXTIMU,8.72431593279e-06,8.92830277136e-06,-0.70297793692,0.711211656293,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00216246773001,-0.0009578530071,-3.99435215134e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00817824069288,0.0182628087459,9.80517161238,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124190250000,13630,124190250000,RH_EXTIMU,1.11449320016e-05,1.37116985044e-05,-0.702977961822,0.71121163157,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00131284068984,0.00408291719643,-2.80886810253e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0911658624985,0.0567582123464,9.78717223057,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124192750000,13631,124192750000,RH_EXTIMU,1.13391794997e-05,7.8865576326e-06,-0.702978000987,0.711211592943,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00338647816399,-0.00320508491208,-4.39526315346e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0861086781133,-0.07331463732,9.84686726485,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124195250000,13632,124195250000,RH_EXTIMU,8.45101280914e-06,9.14477986046e-06,-0.702978036102,0.71121155826,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00235087960717,-0.000908364429057,-3.95141651837e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00578180489557,0.0222550925743,9.81488779358,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124197750000,13633,124197750000,RH_EXTIMU,1.12205928126e-05,1.40667023176e-05,-0.702978060545,0.711211533981,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00119219651528,0.00435798565401,-2.75742613631e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.095232255168,0.0536910661312,9.79366610066,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124200250000,13634,124200250000,RH_EXTIMU,1.146089552e-05,8.31161788422e-06,-0.702978099212,0.711211495849,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00337328409779,-0.00313932383553,-4.33910902324e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.085896965586,-0.072923125989,9.84298715991,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124202750000,13635,124202750000,RH_EXTIMU,8.80056487127e-06,9.59758053373e-06,-0.702978134208,0.711211461279,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00223684850569,-0.000764450301531,-3.93823254461e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00383342976684,0.0202445202028,9.80838317573,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124205250000,13636,124205250000,RH_EXTIMU,1.26640555599e-05,1.49589627726e-05,-0.702978157944,0.711211437667,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000816940151333,0.0052232207921,-2.67921365982e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.110169052285,0.0465510568812,9.76083695741,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124207750000,13637,124207750000,RH_EXTIMU,-2.17131535774e-06,-5.80617559025e-06,-0.702978218853,0.711211377707,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00323708392642,-0.0201578764045,-6.83425689892e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.447556157623,-0.0687037325768,9.85098793973,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124210250000,13638,124210250000,RH_EXTIMU,1.99765492424e-07,2.20547710252e-06,-0.70297822773,0.711211368957,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00315654218601,0.00589183736855,-9.96918165807e-06,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0506889900916,0.0402548446297,10.1438928719,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124212750000,13639,124212750000,RH_EXTIMU,4.27102709946e-06,1.05459702056e-05,-0.70297823995,0.71121135679,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00237412599182,0.00703508944906,-1.37897256727e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.27541562072,0.0779255573937,10.0326419278,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124215250000,13640,124215250000,RH_EXTIMU,2.67537386963e-06,6.95864443978e-06,-0.70297827356,0.711211323621,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00110957260044,-0.00293844489437,-3.77772125131e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0718252163565,-0.0437709886465,9.8785726905,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124217750000,13641,124217750000,RH_EXTIMU,2.77232929048e-06,6.67352827019e-06,-0.702978306909,0.711211290661,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000215509268819,-0.000107696123052,-3.75100274274e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00638862374288,-0.00463922889538,9.81108477795,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124220250000,13642,124220250000,RH_EXTIMU,2.81619536287e-06,8.10264903428e-06,-0.702978340163,0.711211257777,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000778754028844,0.000837795078144,-3.74164847987e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0170661273178,0.0148298660917,9.67077105918,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124220250000,13643,124222750000,RH_EXTIMU,3.92170577598e-06,6.42630757854e-06,-0.702978373322,0.711211225014,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00157174683711,-0.000332066294289,-3.72809668015e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0130979051741,-0.0283338868225,9.90905687217,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124225250000,13644,124225250000,RH_EXTIMU,2.78637737464e-06,6.48512104926e-06,-0.702978405556,0.711211193157,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00067904205527,-0.000605025947173,-3.62618344719e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00872137714826,0.0139548978877,9.88017353573,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124227750000,13645,124227750000,RH_EXTIMU,2.06706478492e-06,6.40501577425e-06,-0.702978437143,0.711211161939,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000364216475848,-0.000450106296922,-3.55323106465e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00691211591326,0.00491742454661,9.86328579511,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124230250000,13646,124230250000,RH_EXTIMU,2.04973264856e-06,6.69396895611e-06,-0.702978468475,0.711211130967,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00017236352021,0.000154658194913,-3.5245662467e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00466641899237,0.0019372512873,9.82139345731,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124232750000,13647,124232750000,RH_EXTIMU,2.10780572452e-06,6.6466290329e-06,-0.702978499403,0.711211100397,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.96651476029e-05,5.72446633186e-06,-3.47884721337e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0014640922695,-0.00163772040325,9.81947795031,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124232750000,13648,124235250000,RH_EXTIMU,1.73502620834e-06,6.57683776639e-06,-0.702978529922,0.711211070234,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00017285032292,-0.000249353737706,-3.43293076134e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00432940951947,0.00365166161012,9.83955853149,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124237750000,13649,124237750000,RH_EXTIMU,2.46390475814e-06,6.9301945971e-06,-0.702978560303,0.711211040198,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000215987584019,0.000610957924824,-3.41742275826e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0110161366731,-0.00473258403826,9.88150815987,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124240250000,13650,124240250000,RH_EXTIMU,2.89031867113e-06,7.64510884736e-06,-0.702978590307,0.711211010533,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00015943906141,0.000646571902349,-3.37534301416e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00887116641805,0.00233012599706,9.85134414846,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124242750000,13651,124242750000,RH_EXTIMU,3.14013653236e-06,8.0477226603e-06,-0.702978619936,0.711210981241,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-8.42842927373e-05,0.000369568098305,-3.33310654118e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00464510684382,0.000643295958937,9.81271542889,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124245250000,13652,124245250000,RH_EXTIMU,3.71238258503e-06,8.02597629026e-06,-0.702978649327,0.711210952188,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000337820190049,0.000309448499741,-3.30580050416e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0038993428137,-0.00685359004988,9.86494769494,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124247750000,13653,124247750000,RH_EXTIMU,3.11372843909e-06,9.35804232149e-06,-0.702978678364,0.711210923474,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00108974641994,0.000421231192132,-3.26768084578e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00675178568975,0.0231128535022,9.78787941538,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124250250000,13654,124250250000,RH_EXTIMU,3.12540998366e-06,8.2196291653e-06,-0.702978706786,0.711210895395,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000646870857252,-0.000641151856926,-3.19598252338e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0150929618743,-0.0157891302641,9.86880094532,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124252750000,13655,124252750000,RH_EXTIMU,2.41578168723e-06,7.15709021821e-06,-0.702978734399,0.711210868116,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000193797752844,-0.00100363417613,-3.10540049234e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0166767813054,-0.00291483819884,9.94288295389,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124252750000,13656,124255250000,RH_EXTIMU,1.55970849425e-06,6.88832888311e-06,-0.702978761127,0.711210841702,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000335931840385,-0.000634357686246,-3.00662588187e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00819238732831,0.0044930793435,9.8901978659,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124257750000,13657,124257750000,RH_EXTIMU,4.36078816328e-06,7.68065168619e-06,-0.702978778296,0.711210824712,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00114813781706,0.00202608653876,-1.93094011445e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0206616889947,-0.0154934729539,9.84922707523,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124260250000,13658,124260250000,RH_EXTIMU,2.44135185102e-06,6.91152823565e-06,-0.702978804323,0.711210799004,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000659556885616,-0.00151706546677,-2.92750529159e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0148346145437,0.00488266224034,9.79847951926,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124262750000,13659,124262750000,RH_EXTIMU,2.46151790755e-06,6.9084640456e-06,-0.702978830144,0.711210773481,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.31972949032e-05,9.59771090915e-06,-2.90446234246e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00432732362596,-0.000709218619838,9.80558664203,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124265250000,13660,124265250000,RH_EXTIMU,2.66457998068e-06,7.09500536248e-06,-0.702978855653,0.711210748264,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.06284605545e-05,0.000220334915517,-2.86949807573e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0033102692507,-0.000107118413675,9.81012793039,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124267750000,13661,124267750000,RH_EXTIMU,5.83914410747e-06,1.32051419464e-05,-0.702978882724,0.711210721401,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00163000994556,0.00526179710988,-3.05044354221e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.109150892733,0.0265011952637,9.03138606248,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124272750000,13662,124270250000,RH_EXTIMU,1.31161355012e-05,1.76569401036e-05,-0.702978913699,0.711210690591,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00163676383442,0.00662539046773,-3.48949842806e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.117410316065,-0.0278105571675,8.22928891415,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124272750000,13663,124272750000,RH_EXTIMU,-2.40722538313e-06,-6.75749101612e-06,-0.702978997505,0.711210608059,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00489796209233,-0.0226211195475,-9.40605704122e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.508506401124,-0.0596421411748,9.16169683972,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124275250000,13664,124275250000,RH_EXTIMU,7.66130842299e-06,5.58579844324e-06,-0.702979009187,0.711210596485,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00121298024513,0.0126853169231,-1.31867382353e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.147812122229,0.0116428585911,9.70394577789,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124277750000,13665,124277750000,RH_EXTIMU,1.89900665771e-05,1.17451459553e-05,-0.702979040099,0.711210565643,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00298179299361,0.00987557786908,-3.49199969396e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.368012214,-0.0621454069364,9.97532536737,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124280250000,13666,124280250000,RH_EXTIMU,4.44128202327e-06,-1.40613528221e-06,-0.702979101647,0.711210505143,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000881737887828,-0.0156646569821,-6.89803621377e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.379119193081,0.0187269207987,9.89120251185,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124282750000,13667,124282750000,RH_EXTIMU,1.03458456189e-06,-1.81749968126e-06,-0.702979145118,0.711210462187,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00170695865359,-0.00214992324516,-4.88859924975e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0110882596659,0.018059362198,9.85936298282,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124282750000,13668,124285250000,RH_EXTIMU,9.78126613386e-06,8.6496909053e-06,-0.70297915607,0.711210451245,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000909988204436,0.0108744881266,-1.24058578969e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.106312327414,0.0157671074282,9.86001528978,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124282750000,13669,124287750000,RH_EXTIMU,1.66522772219e-05,1.41721218344e-05,-0.70297918446,0.711210422968,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000803665267647,0.00700623050885,-3.20511381883e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.271891175945,-0.00517385519766,9.85877814928,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124282750000,13670,124290250000,RH_EXTIMU,2.29315273784e-06,-2.7916517028e-07,-0.702979243339,0.711210365102,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-4.27225973898e-05,-0.0162976573794,-6.60135743007e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.3776992778,0.00120243698219,9.80724773619,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124291500000,13671,124292750000,RH_EXTIMU,1.61596350055e-05,1.54557781267e-05,-0.702979254046,0.711210354172,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000959482075706,0.0167509631626,-1.22706653735e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.387635027797,0.00604483792428,9.82234389208,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124295250000,13672,124295250000,RH_EXTIMU,2.56671075075e-06,-1.79272898225e-07,-0.702979312262,0.711210296976,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00105895188572,-0.0165402831904,-6.52552050218e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.385583307364,-0.00871062383178,9.80117772956,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124297750000,13673,124297750000,RH_EXTIMU,1.62812427003e-05,1.52580450582e-05,-0.702979322058,0.711210286948,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000878559036445,0.0164961693605,-1.12468266707e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.383848380239,0.00569190660419,9.82095651598,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124300250000,13674,124300250000,RH_EXTIMU,4.54406386377e-06,2.05127572239e-06,-0.702979379667,0.711210230338,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000749188181383,-0.0141150274445,-6.45857802832e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.343256313438,-0.00184209153251,9.79568625152,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124302750000,13675,124302750000,RH_EXTIMU,1.66987921926e-05,1.48219285585e-05,-0.702979404529,0.711210205431,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000266350648052,0.0141017138119,-2.81793290496e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.352980757823,0.00581173431987,9.87083591004,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124305250000,13676,124305250000,RH_EXTIMU,3.03049490136e-06,1.72817069646e-06,-0.702979458996,0.711210151936,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000413110975134,-0.015136756662,-6.10620843704e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.373114017452,0.00712647943961,9.83988213763,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124307750000,13677,124307750000,RH_EXTIMU,1.42248770911e-05,1.32577036e-05,-0.702979481852,0.711210129088,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000114773149053,0.0128554732435,-2.58661722717e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.341036127855,0.00112751418499,9.84835302451,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124310250000,13678,124310250000,RH_EXTIMU,1.07456287075e-06,-1.1686367146e-08,-0.70297953414,0.71121007767,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.96210927515e-05,-0.0149453805532,-5.86550476226e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.373417743974,-0.00021898378786,9.89347370318,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124312750000,13679,124312750000,RH_EXTIMU,1.25866466607e-05,1.5379821455e-05,-0.702979538775,0.711210072812,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.0021059239897,0.0152314838155,-5.38234505887e-06,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.358577642633,0.0297462365377,9.94361933757,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124315250000,13680,124315250000,RH_EXTIMU,-6.06512422357e-06,-2.47197234142e-06,-0.702979605251,0.711210007352,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.000572703770506,-0.0206465509536,-7.46860402049e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.467875559425,0.0532397578196,9.8096555236,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124320250000,13681,124317750000,RH_EXTIMU,1.10747774393e-05,2.18215748282e-05,-0.702979611465,0.711210000819,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00391023893398,0.0234614521535,-7.12578174347e-06,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.41239583596,0.0855695666077,9.78695254151,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
+124320250000,13682,124320250000,RH_EXTIMU,1.54441756041e-05,3.33331097357e-05,-0.702979677557,0.711209934964,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-0.00398784999429,0.00900697382457,-7.46660532534e-05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.154699949727,0.0598659055842,9.97228429688,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
--- gtsam-4.1.0.orig/examples/ImuFactorsExample.cpp
+++ gtsam-4.1.0/examples/ImuFactorsExample.cpp
@@ -10,7 +10,7 @@
  * -------------------------------------------------------------------------- */
 
 /**
- * @file imuFactorsExample
+ * @file ImuFactorsExample
  * @brief Test example for using GTSAM ImuFactor and ImuCombinedFactor
  * navigation code.
  * @author Garrett (ghemann@gmail.com), Luca Carlone
@@ -31,32 +31,26 @@
  * Note that for GPS correction, we're only using the position not the
  * rotation. The rotation is provided in the file for ground truth comparison.
  *
- *  Usage: ./ImuFactorsExample [data_csv_path] [-c]
- *  optional arguments:
- *    data_csv_path           path to the CSV file with the IMU data.
- *    -c                      use CombinedImuFactor
- *  Note: Define USE_LM to use Levenberg Marquardt Optimizer
- *        By default ISAM2 is used
+ *  See usage: ./ImuFactorsExample --help
  */
 
+#include <boost/program_options.hpp>
+
 // GTSAM related includes.
+#include <gtsam/inference/Symbol.h>
 #include <gtsam/navigation/CombinedImuFactor.h>
 #include <gtsam/navigation/GPSFactor.h>
 #include <gtsam/navigation/ImuFactor.h>
-#include <gtsam/slam/BetweenFactor.h>
-#include <gtsam/slam/dataset.h>
+#include <gtsam/nonlinear/ISAM2.h>
 #include <gtsam/nonlinear/LevenbergMarquardtOptimizer.h>
 #include <gtsam/nonlinear/NonlinearFactorGraph.h>
-#include <gtsam/nonlinear/ISAM2.h>
-#include <gtsam/inference/Symbol.h>
+#include <gtsam/slam/BetweenFactor.h>
+#include <gtsam/slam/dataset.h>
 
 #include <cstring>
 #include <fstream>
 #include <iostream>
 
-// Uncomment the following to use Levenberg Marquardt Optimizer
-// #define USE_LM
-
 using namespace gtsam;
 using namespace std;
 
@@ -64,45 +58,87 @@ using symbol_shorthand::B;  // Bias  (ax
 using symbol_shorthand::V;  // Vel   (xdot,ydot,zdot)
 using symbol_shorthand::X;  // Pose3 (x,y,z,r,p,y)
 
-static const char output_filename[] = "imuFactorExampleResults.csv";
-static const char use_combined_imu_flag[3] = "-c";
+namespace po = boost::program_options;
+
+po::variables_map parseOptions(int argc, char* argv[]) {
+  po::options_description desc;
+  desc.add_options()("help,h", "produce help message")(
+      "data_csv_path", po::value<string>()->default_value("imuAndGPSdata.csv"),
+      "path to the CSV file with the IMU data")(
+      "output_filename",
+      po::value<string>()->default_value("imuFactorExampleResults.csv"),
+      "path to the result file to use")("use_isam", po::bool_switch(),
+                                        "use ISAM as the optimizer");
+
+  po::variables_map vm;
+  po::store(po::parse_command_line(argc, argv, desc), vm);
+
+  if (vm.count("help")) {
+    cout << desc << "\n";
+    exit(1);
+  }
+
+  return vm;
+}
+
+boost::shared_ptr<PreintegratedCombinedMeasurements::Params> imuParams() {
+  // We use the sensor specs to build the noise model for the IMU factor.
+  double accel_noise_sigma = 0.0003924;
+  double gyro_noise_sigma = 0.000205689024915;
+  double accel_bias_rw_sigma = 0.004905;
+  double gyro_bias_rw_sigma = 0.000001454441043;
+  Matrix33 measured_acc_cov = I_3x3 * pow(accel_noise_sigma, 2);
+  Matrix33 measured_omega_cov = I_3x3 * pow(gyro_noise_sigma, 2);
+  Matrix33 integration_error_cov =
+      I_3x3 * 1e-8;  // error committed in integrating position from velocities
+  Matrix33 bias_acc_cov = I_3x3 * pow(accel_bias_rw_sigma, 2);
+  Matrix33 bias_omega_cov = I_3x3 * pow(gyro_bias_rw_sigma, 2);
+  Matrix66 bias_acc_omega_int =
+      I_6x6 * 1e-5;  // error in the bias used for preintegration
+
+  auto p = PreintegratedCombinedMeasurements::Params::MakeSharedD(0.0);
+  // PreintegrationBase params:
+  p->accelerometerCovariance =
+      measured_acc_cov;  // acc white noise in continuous
+  p->integrationCovariance =
+      integration_error_cov;  // integration uncertainty continuous
+  // should be using 2nd order integration
+  // PreintegratedRotation params:
+  p->gyroscopeCovariance =
+      measured_omega_cov;  // gyro white noise in continuous
+  // PreintegrationCombinedMeasurements params:
+  p->biasAccCovariance = bias_acc_cov;      // acc bias in continuous
+  p->biasOmegaCovariance = bias_omega_cov;  // gyro bias in continuous
+  p->biasAccOmegaInt = bias_acc_omega_int;
+
+  return p;
+}
 
 int main(int argc, char* argv[]) {
-  string data_filename;
-  bool use_combined_imu = false;
+  string data_filename, output_filename;
+
+  bool use_isam = false;
+
+  po::variables_map var_map = parseOptions(argc, argv);
+
+  data_filename = findExampleDataFile(var_map["data_csv_path"].as<string>());
+  output_filename = var_map["output_filename"].as<string>();
+  use_isam = var_map["use_isam"].as<bool>();
+
+  ISAM2* isam2 = 0;
+  if (use_isam) {
+    printf("Using ISAM2\n");
+    ISAM2Params parameters;
+    parameters.relinearizeThreshold = 0.01;
+    parameters.relinearizeSkip = 1;
+    isam2 = new ISAM2(parameters);
 
-#ifndef USE_LM
-  printf("Using ISAM2\n");
-  ISAM2Params parameters;
-  parameters.relinearizeThreshold = 0.01;
-  parameters.relinearizeSkip = 1;
-  ISAM2 isam2(parameters);
-#else
-  printf("Using Levenberg Marquardt Optimizer\n");
-#endif
-
-  if (argc < 2) {
-    printf("using default CSV file\n");
-    data_filename = findExampleDataFile("imuAndGPSdata.csv");
-  } else if (argc < 3) {
-    if (strcmp(argv[1], use_combined_imu_flag) == 0) {
-      printf("using CombinedImuFactor\n");
-      use_combined_imu = true;
-      printf("using default CSV file\n");
-      data_filename = findExampleDataFile("imuAndGPSdata.csv");
-    } else {
-      data_filename = argv[1];
-    }
   } else {
-    data_filename = argv[1];
-    if (strcmp(argv[2], use_combined_imu_flag) == 0) {
-      printf("using CombinedImuFactor\n");
-      use_combined_imu = true;
-    }
+    printf("Using Levenberg Marquardt Optimizer\n");
   }
 
   // Set up output file for plotting errors
-  FILE* fp_out = fopen(output_filename, "w+");
+  FILE* fp_out = fopen(output_filename.c_str(), "w+");
   fprintf(fp_out,
           "#time(s),x(m),y(m),z(m),qx,qy,qz,qw,gt_x(m),gt_y(m),gt_z(m),gt_qx,"
           "gt_qy,gt_qz,gt_qw\n");
@@ -118,10 +154,10 @@ int main(int argc, char* argv[]) {
   getline(file, value, ',');  // i
   for (int i = 0; i < 9; i++) {
     getline(file, value, ',');
-    initial_state(i) = atof(value.c_str());
+    initial_state(i) = stof(value.c_str());
   }
   getline(file, value, '\n');
-  initial_state(9) = atof(value.c_str());
+  initial_state(9) = stof(value.c_str());
   cout << "initial state:\n" << initial_state.transpose() << "\n\n";
 
   // Assemble initial quaternion through GTSAM constructor
@@ -152,43 +188,11 @@ int main(int argc, char* argv[]) {
   graph->addPrior(V(correction_count), prior_velocity, velocity_noise_model);
   graph->addPrior(B(correction_count), prior_imu_bias, bias_noise_model);
 
-  // We use the sensor specs to build the noise model for the IMU factor.
-  double accel_noise_sigma = 0.0003924;
-  double gyro_noise_sigma = 0.000205689024915;
-  double accel_bias_rw_sigma = 0.004905;
-  double gyro_bias_rw_sigma = 0.000001454441043;
-  Matrix33 measured_acc_cov = I_3x3 * pow(accel_noise_sigma, 2);
-  Matrix33 measured_omega_cov = I_3x3 * pow(gyro_noise_sigma, 2);
-  Matrix33 integration_error_cov =
-      I_3x3 * 1e-8;  // error committed in integrating position from velocities
-  Matrix33 bias_acc_cov = I_3x3 * pow(accel_bias_rw_sigma, 2);
-  Matrix33 bias_omega_cov = I_3x3 * pow(gyro_bias_rw_sigma, 2);
-  Matrix66 bias_acc_omega_int =
-      I_6x6 * 1e-5;  // error in the bias used for preintegration
+  auto p = imuParams();
 
-  auto p = PreintegratedCombinedMeasurements::Params::MakeSharedD(0.0);
-  // PreintegrationBase params:
-  p->accelerometerCovariance =
-      measured_acc_cov;  // acc white noise in continuous
-  p->integrationCovariance =
-      integration_error_cov;  // integration uncertainty continuous
-  // should be using 2nd order integration
-  // PreintegratedRotation params:
-  p->gyroscopeCovariance =
-      measured_omega_cov;  // gyro white noise in continuous
-  // PreintegrationCombinedMeasurements params:
-  p->biasAccCovariance = bias_acc_cov;      // acc bias in continuous
-  p->biasOmegaCovariance = bias_omega_cov;  // gyro bias in continuous
-  p->biasAccOmegaInt = bias_acc_omega_int;
+  std::shared_ptr<PreintegrationType> preintegrated =
+      std::make_shared<PreintegratedImuMeasurements>(p, prior_imu_bias);
 
-  std::shared_ptr<PreintegrationType> preintegrated = nullptr;
-  if (use_combined_imu) {
-    preintegrated =
-        std::make_shared<PreintegratedCombinedMeasurements>(p, prior_imu_bias);
-  } else {
-    preintegrated =
-        std::make_shared<PreintegratedImuMeasurements>(p, prior_imu_bias);
-  }
   assert(preintegrated);
 
   // Store previous state for imu integration and latest predicted outcome.
@@ -207,16 +211,16 @@ int main(int argc, char* argv[]) {
   while (file.good()) {
     // Parse out first value
     getline(file, value, ',');
-    int type = atoi(value.c_str());
+    int type = stoi(value.c_str());
 
     if (type == 0) {  // IMU measurement
       Vector6 imu;
       for (int i = 0; i < 5; ++i) {
         getline(file, value, ',');
-        imu(i) = atof(value.c_str());
+        imu(i) = stof(value.c_str());
       }
       getline(file, value, '\n');
-      imu(5) = atof(value.c_str());
+      imu(5) = stof(value.c_str());
 
       // Adding the IMU preintegration.
       preintegrated->integrateMeasurement(imu.head<3>(), imu.tail<3>(), dt);
@@ -225,35 +229,24 @@ int main(int argc, char* argv[]) {
       Vector7 gps;
       for (int i = 0; i < 6; ++i) {
         getline(file, value, ',');
-        gps(i) = atof(value.c_str());
+        gps(i) = stof(value.c_str());
       }
       getline(file, value, '\n');
-      gps(6) = atof(value.c_str());
+      gps(6) = stof(value.c_str());
 
       correction_count++;
 
       // Adding IMU factor and GPS factor and optimizing.
-      if (use_combined_imu) {
-        auto preint_imu_combined =
-            dynamic_cast<const PreintegratedCombinedMeasurements&>(
-                *preintegrated);
-        CombinedImuFactor imu_factor(
-            X(correction_count - 1), V(correction_count - 1),
-            X(correction_count), V(correction_count), B(correction_count - 1),
-            B(correction_count), preint_imu_combined);
-        graph->add(imu_factor);
-      } else {
-        auto preint_imu =
-            dynamic_cast<const PreintegratedImuMeasurements&>(*preintegrated);
-        ImuFactor imu_factor(X(correction_count - 1), V(correction_count - 1),
-                             X(correction_count), V(correction_count),
-                             B(correction_count - 1), preint_imu);
-        graph->add(imu_factor);
-        imuBias::ConstantBias zero_bias(Vector3(0, 0, 0), Vector3(0, 0, 0));
-        graph->add(BetweenFactor<imuBias::ConstantBias>(
-            B(correction_count - 1), B(correction_count), zero_bias,
-            bias_noise_model));
-      }
+      auto preint_imu =
+          dynamic_cast<const PreintegratedImuMeasurements&>(*preintegrated);
+      ImuFactor imu_factor(X(correction_count - 1), V(correction_count - 1),
+                           X(correction_count), V(correction_count),
+                           B(correction_count - 1), preint_imu);
+      graph->add(imu_factor);
+      imuBias::ConstantBias zero_bias(Vector3(0, 0, 0), Vector3(0, 0, 0));
+      graph->add(BetweenFactor<imuBias::ConstantBias>(
+          B(correction_count - 1), B(correction_count), zero_bias,
+          bias_noise_model));
 
       auto correction_noise = noiseModel::Isotropic::Sigma(3, 1.0);
       GPSFactor gps_factor(X(correction_count),
@@ -270,18 +263,21 @@ int main(int argc, char* argv[]) {
       initial_values.insert(B(correction_count), prev_bias);
 
       Values result;
-#ifdef USE_LM
-      LevenbergMarquardtOptimizer optimizer(*graph, initial_values);
-      result = optimizer.optimize();
-#else
-      isam2.update(*graph, initial_values);
-      isam2.update();
-      result = isam2.calculateEstimate();
-
-      // reset the graph
-      graph->resize(0);
-      initial_values.clear();
-#endif
+
+      if (use_isam) {
+        isam2->update(*graph, initial_values);
+        isam2->update();
+        result = isam2->calculateEstimate();
+
+        // reset the graph
+        graph->resize(0);
+        initial_values.clear();
+
+      } else {
+        LevenbergMarquardtOptimizer optimizer(*graph, initial_values);
+        result = optimizer.optimize();
+      }
+
       // Overwrite the beginning of the preintegration for the next step.
       prev_state = NavState(result.at<Pose3>(X(correction_count)),
                             result.at<Vector3>(V(correction_count)));
--- /dev/null
+++ gtsam-4.1.0/examples/ImuFactorsExample2.cpp
@@ -0,0 +1,147 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * @file ImuFactorExample2
+ * @brief Test example for using GTSAM ImuFactor and ImuCombinedFactor with ISAM2.
+ * @author Robert Truax
+ */
+
+#include <gtsam/geometry/PinholeCamera.h>
+#include <gtsam/geometry/Cal3_S2.h>
+#include <gtsam/inference/Symbol.h>
+#include <gtsam/navigation/ImuBias.h>
+#include <gtsam/navigation/ImuFactor.h>
+#include <gtsam/navigation/Scenario.h>
+#include <gtsam/nonlinear/ISAM2.h>
+#include <gtsam/slam/BetweenFactor.h>
+
+#include <vector>
+
+using namespace std;
+using namespace gtsam;
+
+// Shorthand for velocity and pose variables
+using symbol_shorthand::V;
+using symbol_shorthand::X;
+
+const double kGravity = 9.81;
+
+/* ************************************************************************* */
+int main(int argc, char* argv[]) {
+  auto params = PreintegrationParams::MakeSharedU(kGravity);
+  params->setAccelerometerCovariance(I_3x3 * 0.1);
+  params->setGyroscopeCovariance(I_3x3 * 0.1);
+  params->setIntegrationCovariance(I_3x3 * 0.1);
+  params->setUse2ndOrderCoriolis(false);
+  params->setOmegaCoriolis(Vector3(0, 0, 0));
+
+  Pose3 delta(Rot3::Rodrigues(-0.1, 0.2, 0.25), Point3(0.05, -0.10, 0.20));
+
+  // Start with a camera on x-axis looking at origin
+  double radius = 30;
+  const Point3 up(0, 0, 1), target(0, 0, 0);
+  const Point3 position(radius, 0, 0);
+  const auto camera = PinholeCamera<Cal3_S2>::Lookat(position, target, up);
+  const auto pose_0 = camera.pose();
+
+  // Now, create a constant-twist scenario that makes the camera orbit the
+  // origin
+  double angular_velocity = M_PI,  // rad/sec
+      delta_t = 1.0 / 18;          // makes for 10 degrees per step
+  Vector3 angular_velocity_vector(0, -angular_velocity, 0);
+  Vector3 linear_velocity_vector(radius * angular_velocity, 0, 0);
+  auto scenario = ConstantTwistScenario(angular_velocity_vector,
+                                        linear_velocity_vector, pose_0);
+
+  // Create a factor graph
+  NonlinearFactorGraph newgraph;
+
+  // Create (incremental) ISAM2 solver
+  ISAM2 isam;
+
+  // Create the initial estimate to the solution
+  // Intentionally initialize the variables off from the ground truth
+  Values initialEstimate, totalEstimate, result;
+
+  // Add a prior on pose x0. This indirectly specifies where the origin is.
+  // 0.1 rad std on roll, pitch, yaw, 30cm std on x,y,z.
+  auto noise = noiseModel::Diagonal::Sigmas(
+      (Vector(6) << Vector3::Constant(0.1), Vector3::Constant(0.3)).finished());
+  newgraph.addPrior(X(0), pose_0, noise);
+
+  // Add imu priors
+  Key biasKey = Symbol('b', 0);
+  auto biasnoise = noiseModel::Diagonal::Sigmas(Vector6::Constant(0.1));
+  newgraph.addPrior(biasKey, imuBias::ConstantBias(), biasnoise);
+  initialEstimate.insert(biasKey, imuBias::ConstantBias());
+  auto velnoise = noiseModel::Diagonal::Sigmas(Vector3(0.1, 0.1, 0.1));
+
+  Vector n_velocity(3);
+  n_velocity << 0, angular_velocity * radius, 0;
+  newgraph.addPrior(V(0), n_velocity, velnoise);
+
+  initialEstimate.insert(V(0), n_velocity);
+
+  // IMU preintegrator
+  PreintegratedImuMeasurements accum(params);
+
+  // Simulate poses and imu measurements, adding them to the factor graph
+  for (size_t i = 0; i < 36; ++i) {
+    double t = i * delta_t;
+    if (i == 0) {  // First time add two poses
+      auto pose_1 = scenario.pose(delta_t);
+      initialEstimate.insert(X(0), pose_0.compose(delta));
+      initialEstimate.insert(X(1), pose_1.compose(delta));
+    } else if (i >= 2) {  // Add more poses as necessary
+      auto pose_i = scenario.pose(t);
+      initialEstimate.insert(X(i), pose_i.compose(delta));
+    }
+
+    if (i > 0) {
+      // Add Bias variables periodically
+      if (i % 5 == 0) {
+        biasKey++;
+        Symbol b1 = biasKey - 1;
+        Symbol b2 = biasKey;
+        Vector6 covvec;
+        covvec << 0.1, 0.1, 0.1, 0.1, 0.1, 0.1;
+        auto cov = noiseModel::Diagonal::Variances(covvec);
+        auto f = boost::make_shared<BetweenFactor<imuBias::ConstantBias> >(
+            b1, b2, imuBias::ConstantBias(), cov);
+        newgraph.add(f);
+        initialEstimate.insert(biasKey, imuBias::ConstantBias());
+      }
+      // Predict acceleration and gyro measurements in (actual) body frame
+      Vector3 measuredAcc = scenario.acceleration_b(t) -
+                            scenario.rotation(t).transpose() * params->n_gravity;
+      Vector3 measuredOmega = scenario.omega_b(t);
+      accum.integrateMeasurement(measuredAcc, measuredOmega, delta_t);
+
+      // Add Imu Factor
+      ImuFactor imufac(X(i - 1), V(i - 1), X(i), V(i), biasKey, accum);
+      newgraph.add(imufac);
+
+      // insert new velocity, which is wrong
+      initialEstimate.insert(V(i), n_velocity);
+      accum.resetIntegration();
+    }
+
+    // Incremental solution
+    isam.update(newgraph, initialEstimate);
+    result = isam.calculateEstimate();
+    newgraph = NonlinearFactorGraph();
+    initialEstimate.clear();
+  }
+  GTSAM_PRINT(result);
+  return 0;
+}
+/* ************************************************************************* */
--- gtsam-4.1.0.orig/examples/LocalizationExample.cpp
+++ gtsam-4.1.0/examples/LocalizationExample.cpp
@@ -78,7 +78,7 @@ class UnaryFactor: public NoiseModelFact
   UnaryFactor(Key j, double x, double y, const SharedNoiseModel& model):
     NoiseModelFactor1<Pose2>(model, j), mx_(x), my_(y) {}
 
-  virtual ~UnaryFactor() {}
+  ~UnaryFactor() override {}
 
   // Using the NoiseModelFactor1 base class there are two functions that must be overridden.
   // The first is the 'evaluateError' function. This function implements the desired measurement
--- gtsam-4.1.0.orig/examples/Pose3Localization.cpp
+++ gtsam-4.1.0/examples/Pose3Localization.cpp
@@ -43,7 +43,7 @@ int main(const int argc, const char* arg
   auto priorModel = noiseModel::Diagonal::Variances(
       (Vector(6) << 1e-6, 1e-6, 1e-6, 1e-4, 1e-4, 1e-4).finished());
   Key firstKey = 0;
-  for (const Values::ConstKeyValuePair& key_value : *initial) {
+  for (const auto key_value : *initial) {
     std::cout << "Adding prior to g2o file " << std::endl;
     firstKey = key_value.key;
     graph->addPrior(firstKey, Pose3(), priorModel);
@@ -74,7 +74,7 @@ int main(const int argc, const char* arg
 
   // Calculate and print marginal covariances for all variables
   Marginals marginals(*graph, result);
-  for (const auto& key_value : result) {
+  for (const auto key_value : result) {
     auto p = dynamic_cast<const GenericValue<Pose3>*>(&key_value.value);
     if (!p) continue;
     std::cout << marginals.marginalCovariance(key_value.key) << endl;
--- gtsam-4.1.0.orig/examples/Pose3SLAMExample_changeKeys.cpp
+++ gtsam-4.1.0/examples/Pose3SLAMExample_changeKeys.cpp
@@ -55,7 +55,7 @@ int main(const int argc, const char *arg
     std::cout << "Rewriting input to file: " << inputFileRewritten << std::endl;
     // Additional: rewrite input with simplified keys 0,1,...
     Values simpleInitial;
-    for(const Values::ConstKeyValuePair& key_value: *initial) {
+    for(const auto key_value: *initial) {
       Key key;
       if(add)
         key = key_value.key + firstKey;
--- gtsam-4.1.0.orig/examples/Pose3SLAMExample_g2o.cpp
+++ gtsam-4.1.0/examples/Pose3SLAMExample_g2o.cpp
@@ -42,7 +42,7 @@ int main(const int argc, const char* arg
   auto priorModel = noiseModel::Diagonal::Variances(
       (Vector(6) << 1e-6, 1e-6, 1e-6, 1e-4, 1e-4, 1e-4).finished());
   Key firstKey = 0;
-  for (const Values::ConstKeyValuePair& key_value : *initial) {
+  for (const auto key_value : *initial) {
     std::cout << "Adding prior to g2o file " << std::endl;
     firstKey = key_value.key;
     graph->addPrior(firstKey, Pose3(), priorModel);
--- gtsam-4.1.0.orig/examples/Pose3SLAMExample_initializePose3Chordal.cpp
+++ gtsam-4.1.0/examples/Pose3SLAMExample_initializePose3Chordal.cpp
@@ -42,7 +42,7 @@ int main(const int argc, const char* arg
   auto priorModel = noiseModel::Diagonal::Variances(
       (Vector(6) << 1e-6, 1e-6, 1e-6, 1e-4, 1e-4, 1e-4).finished());
   Key firstKey = 0;
-  for (const Values::ConstKeyValuePair& key_value : *initial) {
+  for (const auto key_value : *initial) {
     std::cout << "Adding prior to g2o file " << std::endl;
     firstKey = key_value.key;
     graph->addPrior(firstKey, Pose3(), priorModel);
--- gtsam-4.1.0.orig/examples/Pose3SLAMExample_initializePose3Gradient.cpp
+++ gtsam-4.1.0/examples/Pose3SLAMExample_initializePose3Gradient.cpp
@@ -42,7 +42,7 @@ int main(const int argc, const char* arg
   auto priorModel = noiseModel::Diagonal::Variances(
       (Vector(6) << 1e-6, 1e-6, 1e-6, 1e-4, 1e-4, 1e-4).finished());
   Key firstKey = 0;
-  for (const Values::ConstKeyValuePair& key_value : *initial) {
+  for (const auto key_value : *initial) {
     std::cout << "Adding prior to g2o file " << std::endl;
     firstKey = key_value.key;
     graph->addPrior(firstKey, Pose3(), priorModel);
--- gtsam-4.1.0.orig/examples/ShonanAveragingCLI.cpp
+++ gtsam-4.1.0/examples/ShonanAveragingCLI.cpp
@@ -25,6 +25,9 @@
  * Read 3D dataset sphere25000.txt and output to shonan.g2o (default)
  * ./ShonanAveragingCLI -i spere2500.txt
  *
+ * If you prefer using a robust Huber loss, you can add the option "-h true",
+ * for instance
+ * ./ShonanAveragingCLI -i spere2500.txt -h true
  */
 
 #include <gtsam/base/timing.h>
@@ -43,7 +46,8 @@ int main(int argc, char* argv[]) {
   string datasetName;
   string inputFile;
   string outputFile;
-  int d, seed;
+  int d, seed, pMin;
+  bool useHuberLoss;
   po::options_description desc(
       "Shonan Rotation Averaging CLI reads a *pose* graph, extracts the "
       "rotation constraints, and runs the Shonan algorithm.");
@@ -58,6 +62,10 @@ int main(int argc, char* argv[]) {
       "Write solution to the specified file")(
       "dimension,d", po::value<int>(&d)->default_value(3),
       "Optimize over 2D or 3D rotations")(
+      "useHuberLoss,h", po::value<bool>(&useHuberLoss)->default_value(false),
+      "set True to use Huber loss")("pMin,p",
+                                    po::value<int>(&pMin)->default_value(3),
+                                    "set to use desired rank pMin")(
       "seed,s", po::value<int>(&seed)->default_value(42),
       "Random seed for initial estimate");
   po::variables_map vm;
@@ -85,11 +93,14 @@ int main(int argc, char* argv[]) {
   NonlinearFactorGraph::shared_ptr inputGraph;
   Values::shared_ptr posesInFile;
   Values poses;
+  auto lmParams = LevenbergMarquardtParams::CeresDefaults();
   if (d == 2) {
     cout << "Running Shonan averaging for SO(2) on " << inputFile << endl;
-    ShonanAveraging2 shonan(inputFile);
+    ShonanAveraging2::Parameters parameters(lmParams);
+    parameters.setUseHuber(useHuberLoss);
+    ShonanAveraging2 shonan(inputFile, parameters);
     auto initial = shonan.initializeRandomly(rng);
-    auto result = shonan.run(initial);
+    auto result = shonan.run(initial, pMin);
 
     // Parse file again to set up translation problem, adding a prior
     boost::tie(inputGraph, posesInFile) = load2D(inputFile);
@@ -101,9 +112,11 @@ int main(int argc, char* argv[]) {
     poses = initialize::computePoses<Pose2>(result.first, &poseGraph);
   } else if (d == 3) {
     cout << "Running Shonan averaging for SO(3) on " << inputFile << endl;
-    ShonanAveraging3 shonan(inputFile);
+    ShonanAveraging3::Parameters parameters(lmParams);
+    parameters.setUseHuber(useHuberLoss);
+    ShonanAveraging3 shonan(inputFile, parameters);
     auto initial = shonan.initializeRandomly(rng);
-    auto result = shonan.run(initial);
+    auto result = shonan.run(initial, pMin);
 
     // Parse file again to set up translation problem, adding a prior
     boost::tie(inputGraph, posesInFile) = load3D(inputFile);
@@ -118,7 +131,7 @@ int main(int argc, char* argv[]) {
     return 1;
   }
   cout << "Writing result to " << outputFile << endl;
-  writeG2o(NonlinearFactorGraph(), poses, outputFile);
+  writeG2o(*inputGraph, poses, outputFile);
   return 0;
 }
 
--- gtsam-4.1.0.orig/examples/SolverComparer.cpp
+++ gtsam-4.1.0/examples/SolverComparer.cpp
@@ -559,7 +559,7 @@ void runPerturb()
 
   // Perturb values
   VectorValues noise;
-  for(const Values::KeyValuePair& key_val: initial)
+  for(const Values::KeyValuePair key_val: initial)
   {
     Vector noisev(key_val.value.dim());
     for(Vector::Index i = 0; i < noisev.size(); ++i)
--- gtsam-4.1.0.orig/gtsam/3rdparty/metis/CMakeLists.txt
+++ gtsam-4.1.0/gtsam/3rdparty/metis/CMakeLists.txt
@@ -1,4 +1,4 @@
-cmake_minimum_required(VERSION 2.8)
+cmake_minimum_required(VERSION 3.0)
 project(METIS)
 
 # Add flags for currect directory and below
--- gtsam-4.1.0.orig/gtsam/3rdparty/metis/libmetis/CMakeLists.txt
+++ gtsam-4.1.0/gtsam/3rdparty/metis/libmetis/CMakeLists.txt
@@ -12,6 +12,7 @@ endif()
 if(WIN32)
 		set_target_properties(metis-gtsam PROPERTIES
 			PREFIX ""
+			COMPILE_FLAGS /w
 			RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/../../../bin")
 endif()
 
--- gtsam-4.1.0.orig/gtsam/CMakeLists.txt
+++ gtsam-4.1.0/gtsam/CMakeLists.txt
@@ -134,15 +134,15 @@ endif()
 # of any previously installed GTSAM headers.
 target_include_directories(gtsam BEFORE PUBLIC
   # main gtsam includes:
-  $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}>
+  $<BUILD_INTERFACE:${GTSAM_SOURCE_DIR}>
   $<INSTALL_INTERFACE:include/>
   # config.h
-  $<BUILD_INTERFACE:${CMAKE_BINARY_DIR}>
+  $<BUILD_INTERFACE:${GTSAM_BINARY_DIR}>
   # unit tests:
-  $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/CppUnitLite>
+  $<BUILD_INTERFACE:${GTSAM_SOURCE_DIR}/CppUnitLite>
 )
 # 3rdparty libraries: use the "system" flag so they are included via "-isystem"
-# and warnings (and warnings-considered-errors) in those headers are not 
+# and warnings (and warnings-considered-errors) in those headers are not
 # reported as warnings/errors in our targets:
 target_include_directories(gtsam SYSTEM BEFORE PUBLIC
   # SuiteSparse_config
@@ -156,9 +156,9 @@ target_include_directories(gtsam SYSTEM
 )
 if(GTSAM_SUPPORT_NESTED_DISSECTION)
   target_include_directories(gtsam BEFORE PUBLIC
-    $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/gtsam/3rdparty/metis/include>
-    $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/gtsam/3rdparty/metis/libmetis>
-    $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/gtsam/3rdparty/metis/GKlib>
+    $<BUILD_INTERFACE:${GTSAM_SOURCE_DIR}/gtsam/3rdparty/metis/include>
+    $<BUILD_INTERFACE:${GTSAM_SOURCE_DIR}/gtsam/3rdparty/metis/libmetis>
+    $<BUILD_INTERFACE:${GTSAM_SOURCE_DIR}/gtsam/3rdparty/metis/GKlib>
     $<INSTALL_INTERFACE:include/gtsam/3rdparty/metis/>
   )
 endif()
@@ -199,23 +199,8 @@ if(WIN32)
 else()
   if("${CMAKE_BUILD_TYPE}" STREQUAL "Release")
     # Suppress all warnings from 3rd party sources.
-    set_source_files_properties(${3rdparty_srcs} PROPERTIES COMPILE_FLAGS "-w")
+    set_source_files_properties(${3rdparty_srcs} PROPERTIES COMPILE_FLAGS "-w -Wno-everything")
   else()
     set_source_files_properties(${3rdparty_srcs} PROPERTIES COMPILE_FLAGS "-Wno-error")
   endif()
 endif()
-
-# Create the matlab toolbox for the gtsam library
-if (GTSAM_INSTALL_MATLAB_TOOLBOX)
-    # Set up codegen
-    include(GtsamMatlabWrap)
-
-    # Generate, build and install toolbox
-    set(mexFlags "${GTSAM_BUILD_MEX_BINARY_FLAGS}")
-        if(NOT BUILD_SHARED_LIBS)
-                list(APPEND mexFlags -DGTSAM_IMPORT_STATIC)
-        endif()
-
-    # Wrap
-    wrap_and_install_library(gtsam.i "${GTSAM_ADDITIONAL_LIBRARIES}" "" "${mexFlags}")
-endif ()
--- gtsam-4.1.0.orig/gtsam/base/DSFMap.h
+++ gtsam-4.1.0/gtsam/base/DSFMap.h
@@ -21,6 +21,7 @@
 #include <cstdlib>  // Provides size_t
 #include <map>
 #include <set>
+#include <vector>
 
 namespace gtsam {
 
@@ -120,4 +121,12 @@ class IndexPair : public std::pair<size_
   inline size_t i() const { return first; };
   inline size_t j() const { return second; };
 };
+
+typedef std::vector<IndexPair> IndexPairVector;
+typedef std::set<IndexPair> IndexPairSet;
+
+inline IndexPairVector IndexPairSetAsArray(IndexPairSet& set) { return IndexPairVector(set.begin(), set.end()); }
+
+typedef std::map<IndexPair, IndexPairSet> IndexPairSetMap;
+typedef DSFMap<IndexPair> DSFMapIndexPair;
 }  // namespace gtsam
--- gtsam-4.1.0.orig/gtsam/base/GenericValue.h
+++ gtsam-4.1.0/gtsam/base/GenericValue.h
@@ -74,7 +74,7 @@ public:
   }
 
   /// Destructor
-  virtual ~GenericValue() {
+  ~GenericValue() override {
   }
 
   /// equals implementing generic Value interface
--- gtsam-4.1.0.orig/gtsam/base/Matrix.cpp
+++ gtsam-4.1.0/gtsam/base/Matrix.cpp
@@ -153,7 +153,7 @@ const Eigen::IOFormat& matlabFormat() {
 /* ************************************************************************* */
 //3 argument call
 void print(const Matrix& A, const string &s, ostream& stream) {
-  cout << s << A.format(matlabFormat()) << endl;
+  stream << s << A.format(matlabFormat()) << endl;
 }
 
 /* ************************************************************************* */
--- gtsam-4.1.0.orig/gtsam/base/Matrix.h
+++ gtsam-4.1.0/gtsam/base/Matrix.h
@@ -90,7 +90,7 @@ bool equal_with_abs_tol(const Eigen::Den
 
   for(size_t i=0; i<m1; i++)
     for(size_t j=0; j<n1; j++) {
-      if(!fpEqual(A(i,j), B(i,j), tol)) {
+      if(!fpEqual(A(i,j), B(i,j), tol, false)) {
         return false;
       }
     }
--- gtsam-4.1.0.orig/gtsam/base/OptionalJacobian.h
+++ gtsam-4.1.0/gtsam/base/OptionalJacobian.h
@@ -112,7 +112,7 @@ public:
   //  template <typename Derived, bool InnerPanel>
   //  OptionalJacobian(Eigen::Block<Derived,Rows,Cols,InnerPanel> block) : map_(nullptr) { ?? }
 
-  /// Return true is allocated, false if default constructor was used
+  /// Return true if allocated, false if default constructor was used
   operator bool() const {
     return map_.data() != nullptr;
   }
@@ -197,7 +197,7 @@ public:
 
 #endif
 
-  /// Return true is allocated, false if default constructor was used
+  /// Return true if allocated, false if default constructor was used
   operator bool() const {
     return pointer_!=nullptr;
   }
--- gtsam-4.1.0.orig/gtsam/base/ProductLieGroup.h
+++ gtsam-4.1.0/gtsam/base/ProductLieGroup.h
@@ -161,6 +161,9 @@ public:
     }
     return v;
   }
+  static TangentVector LocalCoordinates(const ProductLieGroup& p, ChartJacobian Hp = boost::none) {
+    return Logmap(p, Hp);
+  }
   ProductLieGroup expmap(const TangentVector& v) const {
     return compose(ProductLieGroup::Expmap(v));
   }
--- gtsam-4.1.0.orig/gtsam/base/Testable.h
+++ gtsam-4.1.0/gtsam/base/Testable.h
@@ -33,9 +33,9 @@
 
 #pragma once
 
-#include <boost/shared_ptr.hpp>
 #include <boost/concept_check.hpp>
-#include <stdio.h>
+#include <boost/shared_ptr.hpp>
+#include <iostream>
 #include <string>
 
 #define GTSAM_PRINT(x)((x).print(#x))
@@ -72,10 +72,10 @@ namespace gtsam {
   }; // \ Testable
 
   inline void print(float v, const std::string& s = "") {
-    printf("%s%f\n",s.c_str(),v);
+    std::cout << (s.empty() ? s : s + " ") << v << std::endl;
   }
   inline void print(double v, const std::string& s = "") {
-    printf("%s%lf\n",s.c_str(),v);
+    std::cout << (s.empty() ? s : s + " ") << v << std::endl;
   }
 
   /** Call equal on the object */
--- gtsam-4.1.0.orig/gtsam/base/TestableAssertions.h
+++ gtsam-4.1.0/gtsam/base/TestableAssertions.h
@@ -23,6 +23,7 @@
 #include <boost/optional.hpp>
 #include <map>
 #include <iostream>
+#include <sstream>
 #include <vector>
 
 namespace gtsam {
@@ -349,4 +350,47 @@ bool assert_inequal(const V& expected, c
   return false;
 }
 
+/**
+ * Capture std out via cout stream and compare against string.
+ */
+template<class V>
+bool assert_stdout_equal(const std::string& expected, const V& actual) {
+  // Redirect output to buffer so we can compare
+  std::stringstream buffer;
+  // Save the original output stream so we can reset later
+  std::streambuf* old = std::cout.rdbuf(buffer.rdbuf());
+
+  // We test against actual std::cout for faithful reproduction
+  std::cout << actual;
+
+  // Get output string and reset stdout
+  std::string actual_ = buffer.str();
+  std::cout.rdbuf(old);
+
+  return assert_equal(expected, actual_);
+}
+
+/**
+ * Capture print function output and compare against string.
+ *
+ * @param s: Optional string to pass to the print() method.
+ */
+template <class V>
+bool assert_print_equal(const std::string& expected, const V& actual,
+                        const std::string& s = "") {
+  // Redirect output to buffer so we can compare
+  std::stringstream buffer;
+  // Save the original output stream so we can reset later
+  std::streambuf* old = std::cout.rdbuf(buffer.rdbuf());
+
+  // We test against actual std::cout for faithful reproduction
+  actual.print(s);
+
+  // Get output string and reset stdout
+  std::string actual_ = buffer.str();
+  std::cout.rdbuf(old);
+
+  return assert_equal(expected, actual_);
+}
+
 } // \namespace gtsam
--- gtsam-4.1.0.orig/gtsam/base/ThreadsafeException.h
+++ gtsam-4.1.0/gtsam/base/ThreadsafeException.h
@@ -72,7 +72,7 @@ protected:
   }
 
   /// Default destructor doesn't have the noexcept
-  virtual ~ThreadsafeException() noexcept {
+  ~ThreadsafeException() noexcept override {
   }
 
 public:
@@ -114,7 +114,7 @@ class CholeskyFailed : public gtsam::Thr
 {
 public:
   CholeskyFailed() noexcept {}
-  virtual ~CholeskyFailed() noexcept {}
+  ~CholeskyFailed() noexcept override {}
 };
 
 } // namespace gtsam
--- gtsam-4.1.0.orig/gtsam/base/Vector.cpp
+++ gtsam-4.1.0/gtsam/base/Vector.cpp
@@ -39,7 +39,7 @@ namespace gtsam {
  * 1. https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/
  * 2. https://floating-point-gui.de/errors/comparison/
  * ************************************************************************* */
-bool fpEqual(double a, double b, double tol) {
+bool fpEqual(double a, double b, double tol, bool check_relative_also) {
   using std::abs;
   using std::isnan;
   using std::isinf;
@@ -48,7 +48,7 @@ bool fpEqual(double a, double b, double
   double larger = (abs(b) > abs(a)) ? abs(b) : abs(a);
 
   // handle NaNs
-  if(std::isnan(a) || isnan(b)) {
+  if(isnan(a) || isnan(b)) {
     return isnan(a) && isnan(b);
   }
   // handle inf
@@ -60,13 +60,15 @@ bool fpEqual(double a, double b, double
   else if(a == 0 || b == 0 || (abs(a) + abs(b)) < DOUBLE_MIN_NORMAL) {
     return abs(a-b) <= tol * DOUBLE_MIN_NORMAL;
   }
-  // Check if the numbers are really close
-  // Needed when comparing numbers near zero or tol is in vicinity
-  else if(abs(a-b) <= tol) {
+  // Check if the numbers are really close.
+  // Needed when comparing numbers near zero or tol is in vicinity.
+  else if (abs(a - b) <= tol) {
     return true;
   }
-  // Use relative error
-  else if(abs(a-b) <= tol * min(larger, std::numeric_limits<double>::max())) {
+  // Check for relative error
+  else if (abs(a - b) <=
+               tol * min(larger, std::numeric_limits<double>::max()) &&
+           check_relative_also) {
     return true;
   }
 
--- gtsam-4.1.0.orig/gtsam/base/Vector.h
+++ gtsam-4.1.0/gtsam/base/Vector.h
@@ -85,9 +85,15 @@ static_assert(
  * respectively for the comparison to be true.
  * If one is NaN/Inf and the other is not, returns false.
  *
+ * @param check_relative_also is a flag which toggles additional checking for
+ * relative error. This means that if either the absolute error or the relative
+ * error is within the tolerance, the result will be true.
+ * By default, the flag is true.
+ *
  * Return true if two numbers are close wrt tol.
  */
-GTSAM_EXPORT bool fpEqual(double a, double b, double tol);
+GTSAM_EXPORT bool fpEqual(double a, double b, double tol,
+                          bool check_relative_also = true);
 
 /**
  * print without optional string, must specify cout yourself
--- gtsam-4.1.0.orig/gtsam/base/numericalDerivative.h
+++ gtsam-4.1.0/gtsam/base/numericalDerivative.h
@@ -109,7 +109,7 @@ typename Eigen::Matrix<double, N, 1> num
  * @param delta increment for numerical derivative
  * Class Y is the output argument
  * Class X is the input argument
- * int N is the dimension of the X input value if variable dimension type but known at test time
+ * @tparam int N is the dimension of the X input value if variable dimension type but known at test time
  * @return m*n Jacobian computed via central differencing
  */
 
@@ -167,15 +167,16 @@ typename internal::FixedSizeMatrix<Y,X>:
  * @param x2 second argument value
  * @param delta increment for numerical derivative
  * @return m*n Jacobian computed via central differencing
+ * @tparam int N is the dimension of the X1 input value if variable dimension type but known at test time
  */
-template<class Y, class X1, class X2>
+template<class Y, class X1, class X2, int N = traits<X1>::dimension>
 typename internal::FixedSizeMatrix<Y,X1>::type numericalDerivative21(const boost::function<Y(const X1&, const X2&)>& h,
     const X1& x1, const X2& x2, double delta = 1e-5) {
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<Y>::structure_category>::value),
       "Template argument Y must be a manifold type.");
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X1>::structure_category>::value),
       "Template argument X1 must be a manifold type.");
-  return numericalDerivative11<Y, X1>(boost::bind(h, _1, boost::cref(x2)), x1, delta);
+  return numericalDerivative11<Y, X1, N>(boost::bind(h, _1, boost::cref(x2)), x1, delta);
 }
 
 /** use a raw C++ function pointer */
@@ -192,15 +193,16 @@ typename internal::FixedSizeMatrix<Y,X1>
  * @param x2 n-dimensional second argument value
  * @param delta increment for numerical derivative
  * @return m*n Jacobian computed via central differencing
+ * @tparam int N is the dimension of the X2 input value if variable dimension type but known at test time
  */
-template<class Y, class X1, class X2>
+template<class Y, class X1, class X2, int N = traits<X2>::dimension>
 typename internal::FixedSizeMatrix<Y,X2>::type numericalDerivative22(boost::function<Y(const X1&, const X2&)> h,
     const X1& x1, const X2& x2, double delta = 1e-5) {
 //  BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X1>::structure_category>::value),
 //       "Template argument X1 must be a manifold type.");
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X2>::structure_category>::value),
        "Template argument X2 must be a manifold type.");
-  return numericalDerivative11<Y, X2>(boost::bind(h, boost::cref(x1), _1), x2, delta);
+  return numericalDerivative11<Y, X2, N>(boost::bind(h, boost::cref(x1), _1), x2, delta);
 }
 
 /** use a raw C++ function pointer */
@@ -219,8 +221,9 @@ typename internal::FixedSizeMatrix<Y,X2>
  * @param delta increment for numerical derivative
  * @return m*n Jacobian computed via central differencing
  * All classes Y,X1,X2,X3 need dim, expmap, logmap
+ * @tparam int N is the dimension of the X1 input value if variable dimension type but known at test time
  */
-template<class Y, class X1, class X2, class X3>
+template<class Y, class X1, class X2, class X3, int N = traits<X1>::dimension>
 typename internal::FixedSizeMatrix<Y,X1>::type numericalDerivative31(
     boost::function<Y(const X1&, const X2&, const X3&)> h, const X1& x1,
     const X2& x2, const X3& x3, double delta = 1e-5) {
@@ -228,7 +231,7 @@ typename internal::FixedSizeMatrix<Y,X1>
       "Template argument Y must be a manifold type.");
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X1>::structure_category>::value),
       "Template argument X1 must be a manifold type.");
-  return numericalDerivative11<Y, X1>(boost::bind(h, _1, boost::cref(x2), boost::cref(x3)), x1, delta);
+  return numericalDerivative11<Y, X1, N>(boost::bind(h, _1, boost::cref(x2), boost::cref(x3)), x1, delta);
 }
 
 template<class Y, class X1, class X2, class X3>
@@ -247,8 +250,9 @@ typename internal::FixedSizeMatrix<Y,X1>
  * @param delta increment for numerical derivative
  * @return m*n Jacobian computed via central differencing
  * All classes Y,X1,X2,X3 need dim, expmap, logmap
+ * @tparam int N is the dimension of the X2 input value if variable dimension type but known at test time
  */
-template<class Y, class X1, class X2, class X3>
+template<class Y, class X1, class X2, class X3, int N = traits<X2>::dimension>
 typename internal::FixedSizeMatrix<Y,X2>::type numericalDerivative32(
     boost::function<Y(const X1&, const X2&, const X3&)> h, const X1& x1,
     const X2& x2, const X3& x3, double delta = 1e-5) {
@@ -256,7 +260,7 @@ typename internal::FixedSizeMatrix<Y,X2>
       "Template argument Y must be a manifold type.");
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X2>::structure_category>::value),
       "Template argument X2 must be a manifold type.");
-  return numericalDerivative11<Y, X2>(boost::bind(h, boost::cref(x1), _1, boost::cref(x3)), x2, delta);
+  return numericalDerivative11<Y, X2, N>(boost::bind(h, boost::cref(x1), _1, boost::cref(x3)), x2, delta);
 }
 
 template<class Y, class X1, class X2, class X3>
@@ -275,8 +279,9 @@ inline typename internal::FixedSizeMatri
  * @param delta increment for numerical derivative
  * @return m*n Jacobian computed via central differencing
  * All classes Y,X1,X2,X3 need dim, expmap, logmap
+ * @tparam int N is the dimension of the X3 input value if variable dimension type but known at test time
  */
-template<class Y, class X1, class X2, class X3>
+template<class Y, class X1, class X2, class X3, int N = traits<X3>::dimension>
 typename internal::FixedSizeMatrix<Y,X3>::type numericalDerivative33(
     boost::function<Y(const X1&, const X2&, const X3&)> h, const X1& x1,
     const X2& x2, const X3& x3, double delta = 1e-5) {
@@ -284,7 +289,7 @@ typename internal::FixedSizeMatrix<Y,X3>
       "Template argument Y must be a manifold type.");
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X3>::structure_category>::value),
       "Template argument X3 must be a manifold type.");
-  return numericalDerivative11<Y, X3>(boost::bind(h, boost::cref(x1), boost::cref(x2), _1), x3, delta);
+  return numericalDerivative11<Y, X3, N>(boost::bind(h, boost::cref(x1), boost::cref(x2), _1), x3, delta);
 }
 
 template<class Y, class X1, class X2, class X3>
@@ -303,8 +308,9 @@ inline typename internal::FixedSizeMatri
  * @param x4 fourth argument value
  * @param delta increment for numerical derivative
  * @return m*n Jacobian computed via central differencing
+ * @tparam int N is the dimension of the X1 input value if variable dimension type but known at test time
  */
-template<class Y, class X1, class X2, class X3, class X4>
+template<class Y, class X1, class X2, class X3, class X4, int N = traits<X1>::dimension>
 typename internal::FixedSizeMatrix<Y,X1>::type numericalDerivative41(
     boost::function<Y(const X1&, const X2&, const X3&, const X4&)> h, const X1& x1,
     const X2& x2, const X3& x3, const X4& x4, double delta = 1e-5) {
@@ -312,7 +318,7 @@ typename internal::FixedSizeMatrix<Y,X1>
       "Template argument Y must be a manifold type.");
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X1>::structure_category>::value),
       "Template argument X1 must be a manifold type.");
-  return numericalDerivative11<Y, X1>(boost::bind(h, _1, boost::cref(x2), boost::cref(x3), boost::cref(x4)), x1, delta);
+  return numericalDerivative11<Y, X1, N>(boost::bind(h, _1, boost::cref(x2), boost::cref(x3), boost::cref(x4)), x1, delta);
 }
 
 template<class Y, class X1, class X2, class X3, class X4>
@@ -330,8 +336,9 @@ inline typename internal::FixedSizeMatri
  * @param x4 fourth argument value
  * @param delta increment for numerical derivative
  * @return m*n Jacobian computed via central differencing
+ * @tparam int N is the dimension of the X2 input value if variable dimension type but known at test time
  */
-template<class Y, class X1, class X2, class X3, class X4>
+template<class Y, class X1, class X2, class X3, class X4, int N = traits<X2>::dimension>
 typename internal::FixedSizeMatrix<Y,X2>::type numericalDerivative42(
     boost::function<Y(const X1&, const X2&, const X3&, const X4&)> h, const X1& x1,
     const X2& x2, const X3& x3, const X4& x4, double delta = 1e-5) {
@@ -339,7 +346,7 @@ typename internal::FixedSizeMatrix<Y,X2>
       "Template argument Y must be a manifold type.");
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X2>::structure_category>::value),
       "Template argument X2 must be a manifold type.");
-  return numericalDerivative11<Y, X2>(boost::bind(h, boost::cref(x1), _1, boost::cref(x3), boost::cref(x4)), x2, delta);
+  return numericalDerivative11<Y, X2, N>(boost::bind(h, boost::cref(x1), _1, boost::cref(x3), boost::cref(x4)), x2, delta);
 }
 
 template<class Y, class X1, class X2, class X3, class X4>
@@ -357,8 +364,9 @@ inline typename internal::FixedSizeMatri
  * @param x4 fourth argument value
  * @param delta increment for numerical derivative
  * @return m*n Jacobian computed via central differencing
+ * @tparam int N is the dimension of the X3 input value if variable dimension type but known at test time
  */
-template<class Y, class X1, class X2, class X3, class X4>
+template<class Y, class X1, class X2, class X3, class X4, int N = traits<X3>::dimension>
 typename internal::FixedSizeMatrix<Y,X3>::type numericalDerivative43(
     boost::function<Y(const X1&, const X2&, const X3&, const X4&)> h, const X1& x1,
     const X2& x2, const X3& x3, const X4& x4, double delta = 1e-5) {
@@ -366,7 +374,7 @@ typename internal::FixedSizeMatrix<Y,X3>
       "Template argument Y must be a manifold type.");
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X3>::structure_category>::value),
       "Template argument X3 must be a manifold type.");
-  return numericalDerivative11<Y, X3>(boost::bind(h, boost::cref(x1), boost::cref(x2), _1, boost::cref(x4)), x3, delta);
+  return numericalDerivative11<Y, X3, N>(boost::bind(h, boost::cref(x1), boost::cref(x2), _1, boost::cref(x4)), x3, delta);
 }
 
 template<class Y, class X1, class X2, class X3, class X4>
@@ -384,8 +392,9 @@ inline typename internal::FixedSizeMatri
  * @param x4 n-dimensional fourth argument value
  * @param delta increment for numerical derivative
  * @return m*n Jacobian computed via central differencing
+ * @tparam int N is the dimension of the X4 input value if variable dimension type but known at test time
  */
-template<class Y, class X1, class X2, class X3, class X4>
+template<class Y, class X1, class X2, class X3, class X4, int N = traits<X4>::dimension>
 typename internal::FixedSizeMatrix<Y,X4>::type numericalDerivative44(
     boost::function<Y(const X1&, const X2&, const X3&, const X4&)> h, const X1& x1,
     const X2& x2, const X3& x3, const X4& x4, double delta = 1e-5) {
@@ -393,7 +402,7 @@ typename internal::FixedSizeMatrix<Y,X4>
       "Template argument Y must be a manifold type.");
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X4>::structure_category>::value),
       "Template argument X4 must be a manifold type.");
-  return numericalDerivative11<Y, X4>(boost::bind(h, boost::cref(x1), boost::cref(x2), boost::cref(x3), _1), x4, delta);
+  return numericalDerivative11<Y, X4, N>(boost::bind(h, boost::cref(x1), boost::cref(x2), boost::cref(x3), _1), x4, delta);
 }
 
 template<class Y, class X1, class X2, class X3, class X4>
@@ -412,8 +421,9 @@ inline typename internal::FixedSizeMatri
  * @param x5 fifth argument value
  * @param delta increment for numerical derivative
  * @return m*n Jacobian computed via central differencing
+ * @tparam int N is the dimension of the X1 input value if variable dimension type but known at test time
  */
-template<class Y, class X1, class X2, class X3, class X4, class X5>
+template<class Y, class X1, class X2, class X3, class X4, class X5, int N = traits<X1>::dimension>
 typename internal::FixedSizeMatrix<Y,X1>::type numericalDerivative51(
     boost::function<Y(const X1&, const X2&, const X3&, const X4&, const X5&)> h, const X1& x1,
     const X2& x2, const X3& x3, const X4& x4, const X5& x5, double delta = 1e-5) {
@@ -421,7 +431,7 @@ typename internal::FixedSizeMatrix<Y,X1>
       "Template argument Y must be a manifold type.");
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X1>::structure_category>::value),
       "Template argument X1 must be a manifold type.");
-  return numericalDerivative11<Y, X1>(boost::bind(h, _1, boost::cref(x2), boost::cref(x3), boost::cref(x4), boost::cref(x5)), x1, delta);
+  return numericalDerivative11<Y, X1, N>(boost::bind(h, _1, boost::cref(x2), boost::cref(x3), boost::cref(x4), boost::cref(x5)), x1, delta);
 }
 
 template<class Y, class X1, class X2, class X3, class X4, class X5>
@@ -440,8 +450,9 @@ inline typename internal::FixedSizeMatri
  * @param x5 fifth argument value
  * @param delta increment for numerical derivative
  * @return m*n Jacobian computed via central differencing
+ * @tparam int N is the dimension of the X2 input value if variable dimension type but known at test time
  */
-template<class Y, class X1, class X2, class X3, class X4, class X5>
+template<class Y, class X1, class X2, class X3, class X4, class X5, int N = traits<X2>::dimension>
 typename internal::FixedSizeMatrix<Y,X2>::type numericalDerivative52(
     boost::function<Y(const X1&, const X2&, const X3&, const X4&, const X5&)> h, const X1& x1,
     const X2& x2, const X3& x3, const X4& x4, const X5& x5, double delta = 1e-5) {
@@ -449,7 +460,7 @@ typename internal::FixedSizeMatrix<Y,X2>
       "Template argument Y must be a manifold type.");
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X1>::structure_category>::value),
       "Template argument X1 must be a manifold type.");
-  return numericalDerivative11<Y, X2>(boost::bind(h, boost::cref(x1), _1, boost::cref(x3), boost::cref(x4), boost::cref(x5)), x2, delta);
+  return numericalDerivative11<Y, X2, N>(boost::bind(h, boost::cref(x1), _1, boost::cref(x3), boost::cref(x4), boost::cref(x5)), x2, delta);
 }
 
 template<class Y, class X1, class X2, class X3, class X4, class X5>
@@ -468,8 +479,9 @@ inline typename internal::FixedSizeMatri
  * @param x5 fifth argument value
  * @param delta increment for numerical derivative
  * @return m*n Jacobian computed via central differencing
+ * @tparam int N is the dimension of the X3 input value if variable dimension type but known at test time
  */
-template<class Y, class X1, class X2, class X3, class X4, class X5>
+template<class Y, class X1, class X2, class X3, class X4, class X5, int N = traits<X3>::dimension>
 typename internal::FixedSizeMatrix<Y,X3>::type numericalDerivative53(
     boost::function<Y(const X1&, const X2&, const X3&, const X4&, const X5&)> h, const X1& x1,
     const X2& x2, const X3& x3, const X4& x4, const X5& x5, double delta = 1e-5) {
@@ -477,7 +489,7 @@ typename internal::FixedSizeMatrix<Y,X3>
       "Template argument Y must be a manifold type.");
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X1>::structure_category>::value),
       "Template argument X1 must be a manifold type.");
-  return numericalDerivative11<Y, X3>(boost::bind(h, boost::cref(x1), boost::cref(x2), _1, boost::cref(x4), boost::cref(x5)), x3, delta);
+  return numericalDerivative11<Y, X3, N>(boost::bind(h, boost::cref(x1), boost::cref(x2), _1, boost::cref(x4), boost::cref(x5)), x3, delta);
 }
 
 template<class Y, class X1, class X2, class X3, class X4, class X5>
@@ -496,8 +508,9 @@ inline typename internal::FixedSizeMatri
  * @param x5 fifth argument value
  * @param delta increment for numerical derivative
  * @return m*n Jacobian computed via central differencing
+ * @tparam int N is the dimension of the X4 input value if variable dimension type but known at test time
  */
-template<class Y, class X1, class X2, class X3, class X4, class X5>
+template<class Y, class X1, class X2, class X3, class X4, class X5, int N = traits<X4>::dimension>
 typename internal::FixedSizeMatrix<Y,X4>::type numericalDerivative54(
     boost::function<Y(const X1&, const X2&, const X3&, const X4&, const X5&)> h, const X1& x1,
     const X2& x2, const X3& x3, const X4& x4, const X5& x5, double delta = 1e-5) {
@@ -505,7 +518,7 @@ typename internal::FixedSizeMatrix<Y,X4>
       "Template argument Y must be a manifold type.");
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X1>::structure_category>::value),
       "Template argument X1 must be a manifold type.");
-  return numericalDerivative11<Y, X4>(boost::bind(h, boost::cref(x1), boost::cref(x2), boost::cref(x3), _1, boost::cref(x5)), x4, delta);
+  return numericalDerivative11<Y, X4, N>(boost::bind(h, boost::cref(x1), boost::cref(x2), boost::cref(x3), _1, boost::cref(x5)), x4, delta);
 }
 
 template<class Y, class X1, class X2, class X3, class X4, class X5>
@@ -524,8 +537,9 @@ inline typename internal::FixedSizeMatri
  * @param x5 fifth argument value
  * @param delta increment for numerical derivative
  * @return m*n Jacobian computed via central differencing
+ * @tparam int N is the dimension of the X5 input value if variable dimension type but known at test time
  */
-template<class Y, class X1, class X2, class X3, class X4, class X5>
+template<class Y, class X1, class X2, class X3, class X4, class X5, int N = traits<X5>::dimension>
 typename internal::FixedSizeMatrix<Y,X5>::type numericalDerivative55(
     boost::function<Y(const X1&, const X2&, const X3&, const X4&, const X5&)> h, const X1& x1,
     const X2& x2, const X3& x3, const X4& x4, const X5& x5, double delta = 1e-5) {
@@ -533,7 +547,7 @@ typename internal::FixedSizeMatrix<Y,X5>
       "Template argument Y must be a manifold type.");
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X1>::structure_category>::value),
       "Template argument X1 must be a manifold type.");
-  return numericalDerivative11<Y, X5>(boost::bind(h, boost::cref(x1), boost::cref(x2), boost::cref(x3), boost::cref(x4), _1), x5, delta);
+  return numericalDerivative11<Y, X5, N>(boost::bind(h, boost::cref(x1), boost::cref(x2), boost::cref(x3), boost::cref(x4), _1), x5, delta);
 }
 
 template<class Y, class X1, class X2, class X3, class X4, class X5>
@@ -553,8 +567,9 @@ inline typename internal::FixedSizeMatri
  * @param x6 sixth argument value
  * @param delta increment for numerical derivative
  * @return m*n Jacobian computed via central differencing
+ * @tparam int N is the dimension of the X1 input value if variable dimension type but known at test time
  */
-template<class Y, class X1, class X2, class X3, class X4, class X5, class X6>
+template<class Y, class X1, class X2, class X3, class X4, class X5, class X6, int N = traits<X1>::dimension>
 typename internal::FixedSizeMatrix<Y,X1>::type numericalDerivative61(
     boost::function<Y(const X1&, const X2&, const X3&, const X4&, const X5&, const X6&)> h, const X1& x1,
     const X2& x2, const X3& x3, const X4& x4, const X5& x5, const X6& x6, double delta = 1e-5) {
@@ -562,7 +577,7 @@ typename internal::FixedSizeMatrix<Y,X1>
       "Template argument Y must be a manifold type.");
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X1>::structure_category>::value),
       "Template argument X1 must be a manifold type.");
-  return numericalDerivative11<Y, X1>(boost::bind(h, _1, boost::cref(x2), boost::cref(x3), boost::cref(x4), boost::cref(x5), boost::cref(x6)), x1, delta);
+  return numericalDerivative11<Y, X1, N>(boost::bind(h, _1, boost::cref(x2), boost::cref(x3), boost::cref(x4), boost::cref(x5), boost::cref(x6)), x1, delta);
 }
 
 template<class Y, class X1, class X2, class X3, class X4, class X5, class X6>
@@ -582,8 +597,9 @@ inline typename internal::FixedSizeMatri
  * @param x6 sixth argument value
  * @param delta increment for numerical derivative
  * @return m*n Jacobian computed via central differencing
+ * @tparam int N is the dimension of the X2 input value if variable dimension type but known at test time
  */
-template<class Y, class X1, class X2, class X3, class X4, class X5, class X6>
+template<class Y, class X1, class X2, class X3, class X4, class X5, class X6, int N = traits<X2>::dimension>
 typename internal::FixedSizeMatrix<Y,X2>::type numericalDerivative62(
     boost::function<Y(const X1&, const X2&, const X3&, const X4&, const X5&, const X6&)> h, const X1& x1,
     const X2& x2, const X3& x3, const X4& x4, const X5& x5, const X6& x6, double delta = 1e-5) {
@@ -591,7 +607,7 @@ typename internal::FixedSizeMatrix<Y,X2>
       "Template argument Y must be a manifold type.");
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X1>::structure_category>::value),
       "Template argument X1 must be a manifold type.");
-  return numericalDerivative11<Y, X2>(boost::bind(h, boost::cref(x1), _1, boost::cref(x3), boost::cref(x4), boost::cref(x5), boost::cref(x6)), x2, delta);
+  return numericalDerivative11<Y, X2, N>(boost::bind(h, boost::cref(x1), _1, boost::cref(x3), boost::cref(x4), boost::cref(x5), boost::cref(x6)), x2, delta);
 }
 
 template<class Y, class X1, class X2, class X3, class X4, class X5, class X6>
@@ -608,11 +624,12 @@ inline typename internal::FixedSizeMatri
  * @param x3 third argument value
  * @param x4 fourth argument value
  * @param x5 fifth argument value
- *  @param x6 sixth argument value
+ * @param x6 sixth argument value
  * @param delta increment for numerical derivative
  * @return m*n Jacobian computed via central differencing
+ * @tparam int N is the dimension of the X3 input value if variable dimension type but known at test time
  */
-template<class Y, class X1, class X2, class X3, class X4, class X5, class X6>
+template<class Y, class X1, class X2, class X3, class X4, class X5, class X6, int N = traits<X3>::dimension>
 typename internal::FixedSizeMatrix<Y,X3>::type numericalDerivative63(
     boost::function<Y(const X1&, const X2&, const X3&, const X4&, const X5&, const X6&)> h, const X1& x1,
     const X2& x2, const X3& x3, const X4& x4, const X5& x5, const X6& x6, double delta = 1e-5) {
@@ -620,7 +637,7 @@ typename internal::FixedSizeMatrix<Y,X3>
       "Template argument Y must be a manifold type.");
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X1>::structure_category>::value),
       "Template argument X1 must be a manifold type.");
-  return numericalDerivative11<Y, X3>(boost::bind(h, boost::cref(x1), boost::cref(x2), _1, boost::cref(x4), boost::cref(x5), boost::cref(x6)), x3, delta);
+  return numericalDerivative11<Y, X3, N>(boost::bind(h, boost::cref(x1), boost::cref(x2), _1, boost::cref(x4), boost::cref(x5), boost::cref(x6)), x3, delta);
 }
 
 template<class Y, class X1, class X2, class X3, class X4, class X5, class X6>
@@ -640,8 +657,9 @@ inline typename internal::FixedSizeMatri
  * @param x6 sixth argument value
  * @param delta increment for numerical derivative
  * @return m*n Jacobian computed via central differencing
+ * @tparam int N is the dimension of the X4 input value if variable dimension type but known at test time
  */
-template<class Y, class X1, class X2, class X3, class X4, class X5, class X6>
+template<class Y, class X1, class X2, class X3, class X4, class X5, class X6, int N = traits<X4>::dimension>
 typename internal::FixedSizeMatrix<Y,X4>::type numericalDerivative64(
     boost::function<Y(const X1&, const X2&, const X3&, const X4&, const X5&, const X6&)> h, const X1& x1,
     const X2& x2, const X3& x3, const X4& x4, const X5& x5, const X6& x6, double delta = 1e-5) {
@@ -649,7 +667,7 @@ typename internal::FixedSizeMatrix<Y,X4>
       "Template argument Y must be a manifold type.");
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X1>::structure_category>::value),
       "Template argument X1 must be a manifold type.");
-  return numericalDerivative11<Y, X4>(boost::bind(h, boost::cref(x1), boost::cref(x2), boost::cref(x3), _1, boost::cref(x5), boost::cref(x6)), x4, delta);
+  return numericalDerivative11<Y, X4, N>(boost::bind(h, boost::cref(x1), boost::cref(x2), boost::cref(x3), _1, boost::cref(x5), boost::cref(x6)), x4, delta);
 }
 
 template<class Y, class X1, class X2, class X3, class X4, class X5, class X6>
@@ -669,8 +687,9 @@ inline typename internal::FixedSizeMatri
  * @param x6 sixth argument value
  * @param delta increment for numerical derivative
  * @return m*n Jacobian computed via central differencing
+ * @tparam int N is the dimension of the X5 input value if variable dimension type but known at test time
  */
-template<class Y, class X1, class X2, class X3, class X4, class X5, class X6>
+template<class Y, class X1, class X2, class X3, class X4, class X5, class X6, int N = traits<X5>::dimension>
 typename internal::FixedSizeMatrix<Y,X5>::type numericalDerivative65(
     boost::function<Y(const X1&, const X2&, const X3&, const X4&, const X5&, const X6&)> h, const X1& x1,
     const X2& x2, const X3& x3, const X4& x4, const X5& x5, const X6& x6, double delta = 1e-5) {
@@ -678,7 +697,7 @@ typename internal::FixedSizeMatrix<Y,X5>
       "Template argument Y must be a manifold type.");
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X1>::structure_category>::value),
       "Template argument X1 must be a manifold type.");
-  return numericalDerivative11<Y, X5>(boost::bind(h, boost::cref(x1), boost::cref(x2), boost::cref(x3), boost::cref(x4), _1, boost::cref(x6)), x5, delta);
+  return numericalDerivative11<Y, X5, N>(boost::bind(h, boost::cref(x1), boost::cref(x2), boost::cref(x3), boost::cref(x4), _1, boost::cref(x6)), x5, delta);
 }
 
 template<class Y, class X1, class X2, class X3, class X4, class X5, class X6>
@@ -698,16 +717,18 @@ inline typename internal::FixedSizeMatri
  * @param x6 sixth argument value
  * @param delta increment for numerical derivative
  * @return m*n Jacobian computed via central differencing
+ * @tparam int N is the dimension of the X6 input value if variable dimension type but known at test time
  */
-template<class Y, class X1, class X2, class X3, class X4, class X5, class X6>
-typename internal::FixedSizeMatrix<Y,X5>::type numericalDerivative66(
-    boost::function<Y(const X1&, const X2&, const X3&, const X4&, const X5&, const X6&)> h, const X1& x1,
-    const X2& x2, const X3& x3, const X4& x4, const X5& x5, const X6& x6, double delta = 1e-5) {
+template<class Y, class X1, class X2, class X3, class X4, class X5, class X6, int N = traits<X6>::dimension>
+typename internal::FixedSizeMatrix<Y, X6>::type numericalDerivative66(
+    boost::function<Y(const X1&, const X2&, const X3&, const X4&, const X5&, const X6&)> h,
+    const X1& x1, const X2& x2, const X3& x3, const X4& x4, const X5& x5, const X6& x6,
+    double delta = 1e-5) {
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<Y>::structure_category>::value),
       "Template argument Y must be a manifold type.");
   BOOST_STATIC_ASSERT_MSG( (boost::is_base_of<gtsam::manifold_tag, typename traits<X1>::structure_category>::value),
       "Template argument X1 must be a manifold type.");
-  return numericalDerivative11<Y, X6>(boost::bind(h, boost::cref(x1), boost::cref(x2), boost::cref(x3), boost::cref(x4), boost::cref(x5), _1), x6, delta);
+  return numericalDerivative11<Y, X6, N>(boost::bind(h, boost::cref(x1), boost::cref(x2), boost::cref(x3), boost::cref(x4), boost::cref(x5), _1), x6, delta);
 }
 
 template<class Y, class X1, class X2, class X3, class X4, class X5, class X6>
--- gtsam-4.1.0.orig/gtsam/base/tests/testMatrix.cpp
+++ gtsam-4.1.0/gtsam/base/tests/testMatrix.cpp
@@ -1163,6 +1163,19 @@ TEST(Matrix , IsVectorSpace) {
   BOOST_CONCEPT_ASSERT((IsVectorSpace<Vector5>));
 }
 
+TEST(Matrix, AbsoluteError) {
+  double a = 2000, b = 1997, tol = 1e-1;
+  bool isEqual;
+
+  // Test only absolute error
+  isEqual = fpEqual(a, b, tol, false);
+  EXPECT(!isEqual);
+
+  // Test relative error as well
+  isEqual = fpEqual(a, b, tol);
+  EXPECT(isEqual);
+}
+
 /* ************************************************************************* */
 int main() {
   TestResult tr;
--- gtsam-4.1.0.orig/gtsam/base/tests/testNumericalDerivative.cpp
+++ gtsam-4.1.0/gtsam/base/tests/testNumericalDerivative.cpp
@@ -30,10 +30,10 @@ double f(const Vector2& x) {
 /* ************************************************************************* */
 //
 TEST(testNumericalDerivative, numericalGradient) {
-  Vector2 x(1, 1);
+  Vector2 x(1, 1.1);
 
   Vector expected(2);
-  expected << cos(x(1)), -sin(x(0));
+  expected << cos(x(0)), -sin(x(1));
 
   Vector actual = numericalGradient<Vector2>(f, x);
 
@@ -42,7 +42,7 @@ TEST(testNumericalDerivative, numericalG
 
 /* ************************************************************************* */
 TEST(testNumericalDerivative, numericalHessian) {
-  Vector2 x(1, 1);
+  Vector2 x(1, 1.1);
 
   Matrix expected(2, 2);
   expected << -sin(x(0)), 0.0, 0.0, -cos(x(1));
@@ -143,6 +143,13 @@ Vector6 f6(const double x1, const double
   return result;
 }
 
+Vector g6(const double x1, const double x2, const double x3, const double x4,
+          const double x5, const double x6) {
+  Vector result(6);
+  result << sin(x1), cos(x2), x3 * x3, x4 * x4 * x4, sqrt(x5), sin(x6) - cos(x6);
+  return result;
+}
+
 /* ************************************************************************* */
 //
 TEST(testNumericalDerivative, numeriDerivative61) {
@@ -153,6 +160,14 @@ TEST(testNumericalDerivative, numeriDeri
       double, double, double, double>(f6, x1, x2, x3, x4, x5, x6);
   
   EXPECT(assert_equal(expected61, actual61, 1e-5));
+
+  Matrix expected61Dynamic = Matrix::Zero(6, 1);
+  expected61Dynamic(0, 0) = cos(x1);
+  Matrix actual61Dynamic =
+      numericalDerivative61<Vector, double, double, double, double, double,
+                            double, 1>(g6, x1, x2, x3, x4, x5, x6);
+
+  EXPECT(assert_equal(expected61Dynamic, actual61Dynamic, 1e-5));
 }
 
 /* ************************************************************************* */
@@ -165,6 +180,13 @@ TEST(testNumericalDerivative, numeriDeri
      double, double, double>(f6, x1, x2, x3, x4, x5, x6);
   
   EXPECT(assert_equal(expected62, actual62, 1e-5));
+
+  Matrix expected62Dynamic = Matrix::Zero(6, 1);
+  expected62Dynamic(1, 0) = -sin(x2);
+  Matrix61 actual62Dynamic = numericalDerivative62<Vector, double, double,
+      double, double, double, double, 1>(f6, x1, x2, x3, x4, x5, x6);
+
+  EXPECT(assert_equal(expected62Dynamic, actual62Dynamic, 1e-5));
 }
 
 /* ************************************************************************* */
@@ -177,6 +199,14 @@ TEST(testNumericalDerivative, numeriDeri
      double, double, double>(f6, x1, x2, x3, x4, x5, x6);
   
   EXPECT(assert_equal(expected63, actual63, 1e-5));
+
+  Matrix expected63Dynamic = Matrix::Zero(6, 1);
+  expected63Dynamic(2, 0) = 2 * x3;
+  Matrix61 actual63Dynamic =
+      numericalDerivative63<Vector, double, double, double, double, double,
+                            double, 1>(f6, x1, x2, x3, x4, x5, x6);
+
+  EXPECT(assert_equal(expected63Dynamic, actual63Dynamic, 1e-5));
 }
 
 /* ************************************************************************* */
@@ -189,6 +219,14 @@ TEST(testNumericalDerivative, numeriDeri
      double, double, double>(f6, x1, x2, x3, x4, x5, x6);
   
   EXPECT(assert_equal(expected64, actual64, 1e-5));
+
+  Matrix expected64Dynamic = Matrix::Zero(6, 1);
+  expected64Dynamic(3, 0) = 3 * x4 * x4;
+  Matrix61 actual64Dynamic =
+      numericalDerivative64<Vector, double, double, double, double, double,
+                            double, 1>(f6, x1, x2, x3, x4, x5, x6);
+
+  EXPECT(assert_equal(expected64Dynamic, actual64Dynamic, 1e-5));
 }
 
 /* ************************************************************************* */
@@ -201,6 +239,14 @@ TEST(testNumericalDerivative, numeriDeri
      double, double, double>(f6, x1, x2, x3, x4, x5, x6);
   
   EXPECT(assert_equal(expected65, actual65, 1e-5));
+
+  Matrix expected65Dynamic = Matrix::Zero(6, 1);
+  expected65Dynamic(4, 0) = 0.5 / sqrt(x5);
+  Matrix61 actual65Dynamic =
+      numericalDerivative65<Vector, double, double, double, double, double,
+                            double, 1>(f6, x1, x2, x3, x4, x5, x6);
+
+  EXPECT(assert_equal(expected65Dynamic, actual65Dynamic, 1e-5));
 }
 
 /* ************************************************************************* */
@@ -213,6 +259,14 @@ TEST(testNumericalDerivative, numeriDeri
       double, double, double>(f6, x1, x2, x3, x4, x5, x6);
   
   EXPECT(assert_equal(expected66, actual66, 1e-5));
+
+  Matrix expected66Dynamic = Matrix::Zero(6, 1);
+  expected66Dynamic(5, 0) = cos(x6) + sin(x6);
+  Matrix61 actual66Dynamic =
+      numericalDerivative66<Vector, double, double, double, double, double,
+                            double, 1>(f6, x1, x2, x3, x4, x5, x6);
+
+  EXPECT(assert_equal(expected66Dynamic, actual66Dynamic, 1e-5));
 }
 
 /* ************************************************************************* */
--- gtsam-4.1.0.orig/gtsam/discrete/DecisionTree-inl.h
+++ gtsam-4.1.0/gtsam/discrete/DecisionTree-inl.h
@@ -155,7 +155,7 @@ namespace gtsam {
 
   public:
 
-    virtual ~Choice() {
+    ~Choice() override {
 #ifdef DT_DEBUG_MEMORY
         std::std::cout << Node::nrNodes << " destructing (Choice) " << this->id() << std::std::endl;
 #endif
--- /dev/null
+++ gtsam-4.1.0/gtsam/geometry/Cal3.cpp
@@ -0,0 +1,75 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * @file   Cal3.cpp
+ * @brief  Common code for all calibration models.
+ * @author Frank Dellaert
+ */
+
+#include <gtsam/geometry/Cal3.h>
+
+#include <cmath>
+#include <fstream>
+#include <iostream>
+
+namespace gtsam {
+
+/* ************************************************************************* */
+Cal3::Cal3(double fov, int w, int h)
+    : s_(0), u0_((double)w / 2.0), v0_((double)h / 2.0) {
+  double a = fov * M_PI / 360.0;  // fov/2 in radians
+  fx_ = double(w) / (2.0 * tan(a));
+  fy_ = fx_;
+}
+
+/* ************************************************************************* */
+Cal3::Cal3(const std::string& path) {
+  const auto buffer = path + std::string("/calibration_info.txt");
+  std::ifstream infile(buffer, std::ios::in);
+
+  if (infile && !infile.eof()) {
+    infile >> fx_ >> fy_ >> s_ >> u0_ >> v0_;
+  } else {
+    throw std::runtime_error("Cal3: Unable to load the calibration");
+  }
+
+  infile.close();
+}
+
+/* ************************************************************************* */
+std::ostream& operator<<(std::ostream& os, const Cal3& cal) {
+  os << "fx: " << cal.fx() << ", fy: " << cal.fy() << ", s: " << cal.skew()
+     << ", px: " << cal.px() << ", py: " << cal.py();
+  return os;
+}
+
+/* ************************************************************************* */
+void Cal3::print(const std::string& s) const { gtsam::print((Matrix)K(), s); }
+
+/* ************************************************************************* */
+bool Cal3::equals(const Cal3& K, double tol) const {
+  return (std::fabs(fx_ - K.fx_) < tol && std::fabs(fy_ - K.fy_) < tol &&
+          std::fabs(s_ - K.s_) < tol && std::fabs(u0_ - K.u0_) < tol &&
+          std::fabs(v0_ - K.v0_) < tol);
+}
+
+Matrix3 Cal3::inverse() const {
+  const double fxy = fx_ * fy_, sv0 = s_ * v0_, fyu0 = fy_ * u0_;
+  Matrix3 K_inverse;
+  K_inverse << 1.0 / fx_, -s_ / fxy, (sv0 - fyu0) / fxy, 0.0, 1.0 / fy_,
+      -v0_ / fy_, 0.0, 0.0, 1.0;
+  return K_inverse;
+}
+
+/* ************************************************************************* */
+
+}  // \ namespace gtsam
--- /dev/null
+++ gtsam-4.1.0/gtsam/geometry/Cal3.h
@@ -0,0 +1,206 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * @file   Cal3.h
+ * @brief  Common code for all Calibration models.
+ * @author Varun Agrawal
+ */
+
+/**
+ * @addtogroup geometry
+ */
+
+#pragma once
+
+#include <gtsam/geometry/Point2.h>
+
+namespace gtsam {
+
+/**
+ * Function which makes use of the Implicit Function Theorem to compute the
+ * Jacobians of `calibrate` using `uncalibrate`.
+ * This is useful when there are iterative operations in the `calibrate`
+ * function which make computing jacobians difficult.
+ *
+ * Given f(pi, pn) = uncalibrate(pn) - pi, and g(pi) = calibrate, we can
+ * easily compute the Jacobians:
+ * df/pi = -I (pn and pi are independent args)
+ * Dp = -inv(H_uncal_pn) * df/pi = -inv(H_uncal_pn) * (-I) = inv(H_uncal_pn)
+ * Dcal = -inv(H_uncal_pn) * df/K = -inv(H_uncal_pn) * H_uncal_K
+ *
+ * @tparam Cal Calibration model.
+ * @tparam Dim The number of parameters in the calibration model.
+ * @param p Calibrated point.
+ * @param Dcal optional 2*p Jacobian wrpt `p` Cal3DS2 parameters.
+ * @param Dp optional 2*2 Jacobian wrpt intrinsic coordinates.
+ */
+template <typename Cal, size_t Dim>
+void calibrateJacobians(const Cal& calibration, const Point2& pn,
+                        OptionalJacobian<2, Dim> Dcal = boost::none,
+                        OptionalJacobian<2, 2> Dp = boost::none) {
+  if (Dcal || Dp) {
+    Eigen::Matrix<double, 2, Dim> H_uncal_K;
+    Matrix22 H_uncal_pn, H_uncal_pn_inv;
+
+    // Compute uncalibrate Jacobians
+    calibration.uncalibrate(pn, Dcal ? &H_uncal_K : nullptr, H_uncal_pn);
+
+    H_uncal_pn_inv = H_uncal_pn.inverse();
+
+    if (Dp) *Dp = H_uncal_pn_inv;
+    if (Dcal) *Dcal = -H_uncal_pn_inv * H_uncal_K;
+  }
+}
+
+/**
+ * @brief Common base class for all calibration models.
+ * @addtogroup geometry
+ * \nosubgrouping
+ */
+class GTSAM_EXPORT Cal3 {
+ protected:
+  double fx_ = 1.0f, fy_ = 1.0f;  ///< focal length
+  double s_ = 0.0f;               ///< skew
+  double u0_ = 0.0f, v0_ = 0.0f;  ///< principal point
+
+ public:
+  enum { dimension = 5 };
+  ///< shared pointer to calibration object
+  using shared_ptr = boost::shared_ptr<Cal3>;
+
+  /// @name Standard Constructors
+  /// @{
+
+  /// Create a default calibration that leaves coordinates unchanged
+  Cal3() = default;
+
+  /// constructor from doubles
+  Cal3(double fx, double fy, double s, double u0, double v0)
+      : fx_(fx), fy_(fy), s_(s), u0_(u0), v0_(v0) {}
+
+  /// constructor from vector
+  Cal3(const Vector5& d)
+      : fx_(d(0)), fy_(d(1)), s_(d(2)), u0_(d(3)), v0_(d(4)) {}
+
+  /**
+   * Easy constructor, takes fov in degrees, asssumes zero skew, unit aspect
+   * @param fov field of view in degrees
+   * @param w image width
+   * @param h image height
+   */
+  Cal3(double fov, int w, int h);
+
+  /// Virtual destructor
+  virtual ~Cal3() {}
+
+  /// @}
+  /// @name Advanced Constructors
+  /// @{
+
+  /**
+   * Load calibration parameters from `calibration_info.txt` file located in
+   * `path` directory.
+   *
+   * The contents of calibration file should be the 5 parameters in order:
+   * `fx, fy, s, u0, v0`
+   *
+   * @param path path to directory containing `calibration_info.txt`.
+   */
+  Cal3(const std::string& path);
+
+  /// @}
+  /// @name Testable
+  /// @{
+
+  /// Output stream operator
+  GTSAM_EXPORT friend std::ostream& operator<<(std::ostream& os,
+                                               const Cal3& cal);
+
+  /// print with optional string
+  virtual void print(const std::string& s = "") const;
+
+  /// Check if equal up to specified tolerance
+  bool equals(const Cal3& K, double tol = 10e-9) const;
+
+  /// @}
+  /// @name Standard Interface
+  /// @{
+
+  /// focal length x
+  inline double fx() const { return fx_; }
+
+  /// focal length y
+  inline double fy() const { return fy_; }
+
+  /// aspect ratio
+  inline double aspectRatio() const { return fx_ / fy_; }
+
+  /// skew
+  inline double skew() const { return s_; }
+
+  /// image center in x
+  inline double px() const { return u0_; }
+
+  /// image center in y
+  inline double py() const { return v0_; }
+
+  /// return the principal point
+  Point2 principalPoint() const { return Point2(u0_, v0_); }
+
+  /// vectorized form (column-wise)
+  Vector5 vector() const {
+    Vector5 v;
+    v << fx_, fy_, s_, u0_, v0_;
+    return v;
+  }
+
+  /// return calibration matrix K
+  virtual Matrix3 K() const {
+    Matrix3 K;
+    K << fx_, s_, u0_, 0.0, fy_, v0_, 0.0, 0.0, 1.0;
+    return K;
+  }
+
+#ifdef GTSAM_ALLOW_DEPRECATED_SINCE_V41
+  /** @deprecated The following function has been deprecated, use K above */
+  Matrix3 matrix() const { return K(); }
+#endif
+
+  /// Return inverted calibration matrix inv(K)
+  Matrix3 inverse() const;
+
+  /// return DOF, dimensionality of tangent space
+  inline virtual size_t dim() const { return Dim(); }
+
+  /// return DOF, dimensionality of tangent space
+  inline static size_t Dim() { return dimension; }
+
+  /// @}
+  /// @name Advanced Interface
+  /// @{
+
+ private:
+  /// Serialization function
+  friend class boost::serialization::access;
+  template <class Archive>
+  void serialize(Archive& ar, const unsigned int /*version*/) {
+    ar& BOOST_SERIALIZATION_NVP(fx_);
+    ar& BOOST_SERIALIZATION_NVP(fy_);
+    ar& BOOST_SERIALIZATION_NVP(s_);
+    ar& BOOST_SERIALIZATION_NVP(u0_);
+    ar& BOOST_SERIALIZATION_NVP(v0_);
+  }
+
+  /// @}
+};
+
+}  // \ namespace gtsam
--- gtsam-4.1.0.orig/gtsam/geometry/Cal3Bundler.cpp
+++ gtsam-4.1.0/gtsam/geometry/Cal3Bundler.cpp
@@ -15,28 +15,19 @@
  * @author ydjian
  */
 
-#include <gtsam/base/Vector.h>
 #include <gtsam/base/Matrix.h>
+#include <gtsam/base/Vector.h>
+#include <gtsam/geometry/Cal3Bundler.h>
 #include <gtsam/geometry/Point2.h>
 #include <gtsam/geometry/Point3.h>
-#include <gtsam/geometry/Cal3Bundler.h>
 
 namespace gtsam {
 
 /* ************************************************************************* */
-Cal3Bundler::Cal3Bundler() :
-    f_(1), k1_(0), k2_(0), u0_(0), v0_(0) {
-}
-
-/* ************************************************************************* */
-Cal3Bundler::Cal3Bundler(double f, double k1, double k2, double u0, double v0) :
-    f_(f), k1_(k1), k2_(k2), u0_(u0), v0_(v0) {
-}
-
-/* ************************************************************************* */
 Matrix3 Cal3Bundler::K() const {
+  // This function is needed to ensure skew = 0;
   Matrix3 K;
-  K << f_, 0, u0_, 0, f_, v0_, 0, 0, 1;
+  K << fx_, 0, u0_, 0, fy_, v0_, 0, 0, 1.0;
   return K;
 }
 
@@ -48,35 +39,42 @@ Vector4 Cal3Bundler::k() const {
 }
 
 /* ************************************************************************* */
-Vector3 Cal3Bundler::vector() const {
-  return Vector3(f_, k1_, k2_);
+Vector3 Cal3Bundler::vector() const { return Vector3(fx_, k1_, k2_); }
+
+/* ************************************************************************* */
+std::ostream& operator<<(std::ostream& os, const Cal3Bundler& cal) {
+  os << "f: " << cal.fx() << ", k1: " << cal.k1() << ", k2: " << cal.k2()
+     << ", px: " << cal.px() << ", py: " << cal.py();
+  return os;
 }
 
 /* ************************************************************************* */
 void Cal3Bundler::print(const std::string& s) const {
-  gtsam::print((Vector)(Vector(5) << f_, k1_, k2_, u0_, v0_).finished(), s + ".K");
+  gtsam::print((Vector)(Vector(5) << fx_, k1_, k2_, u0_, v0_).finished(),
+               s + ".K");
 }
 
 /* ************************************************************************* */
 bool Cal3Bundler::equals(const Cal3Bundler& K, double tol) const {
-  if (std::abs(f_ - K.f_) > tol || std::abs(k1_ - K.k1_) > tol
-      || std::abs(k2_ - K.k2_) > tol || std::abs(u0_ - K.u0_) > tol
-      || std::abs(v0_ - K.v0_) > tol)
-    return false;
-  return true;
+  const Cal3* base = dynamic_cast<const Cal3*>(&K);
+  return (Cal3::equals(*base, tol) && std::fabs(k1_ - K.k1_) < tol &&
+          std::fabs(k2_ - K.k2_) < tol && std::fabs(u0_ - K.u0_) < tol &&
+          std::fabs(v0_ - K.v0_) < tol);
 }
 
 /* ************************************************************************* */
-Point2 Cal3Bundler::uncalibrate(const Point2& p, //
-    OptionalJacobian<2, 3> Dcal, OptionalJacobian<2, 2> Dp) const {
-  //  r = x^2 + y^2;
-  //  g = (1 + k(1)*r + k(2)*r^2);
+Point2 Cal3Bundler::uncalibrate(const Point2& p, OptionalJacobian<2, 3> Dcal,
+                                OptionalJacobian<2, 2> Dp) const {
+  //  r = x² + y²;
+  //  g = (1 + k(1)*r + k(2)*r²);
   //  pi(:,i) = g * pn(:,i)
   const double x = p.x(), y = p.y();
   const double r = x * x + y * y;
   const double g = 1. + (k1_ + k2_ * r) * r;
   const double u = g * x, v = g * y;
 
+  const double f_ = fx_;
+
   // Derivatives make use of intermediate variables above
   if (Dcal) {
     double rx = r * x, ry = r * y;
@@ -94,21 +92,23 @@ Point2 Cal3Bundler::uncalibrate(const Po
 }
 
 /* ************************************************************************* */
-Point2 Cal3Bundler::calibrate(const Point2& pi, const double tol) const {
-  // Copied from Cal3DS2 :-(
-  // but specialized with k1,k2 non-zero only and fx=fy and s=0
-  const Point2 invKPi((pi.x() - u0_)/f_, (pi.y() - v0_)/f_);
-
-  // initialize by ignoring the distortion at all, might be problematic for pixels around boundary
-  Point2 pn = invKPi;
+Point2 Cal3Bundler::calibrate(const Point2& pi, OptionalJacobian<2, 3> Dcal,
+                              OptionalJacobian<2, 2> Dp) const {
+  // Copied from Cal3DS2
+  // but specialized with k1, k2 non-zero only and fx=fy and s=0
+  double x = (pi.x() - u0_) / fx_, y = (pi.y() - v0_) / fx_;
+  const Point2 invKPi(x, y);
+
+  // initialize by ignoring the distortion at all, might be problematic for
+  // pixels around boundary
+  Point2 pn(x, y);
 
   // iterate until the uncalibrate is close to the actual pixel coordinate
   const int maxIterations = 10;
   int iteration;
   for (iteration = 0; iteration < maxIterations; ++iteration) {
-    if (distance2(uncalibrate(pn), pi) <= tol)
-      break;
-    const double x = pn.x(), y = pn.y(), xx = x * x, yy = y * y;
+    if (distance2(uncalibrate(pn), pi) <= tol_) break;
+    const double px = pn.x(), py = pn.y(), xx = px * px, yy = py * py;
     const double rr = xx + yy;
     const double g = (1 + k1_ * rr + k2_ * rr * rr);
     pn = invKPi / g;
@@ -116,7 +116,10 @@ Point2 Cal3Bundler::calibrate(const Poin
 
   if (iteration >= maxIterations)
     throw std::runtime_error(
-        "Cal3Bundler::calibrate fails to converge. need a better initialization");
+        "Cal3Bundler::calibrate fails to converge. need a better "
+        "initialization");
+
+  calibrateJacobians<Cal3Bundler, dimension>(*this, pn, Dcal, Dp);
 
   return pn;
 }
@@ -145,14 +148,4 @@ Matrix25 Cal3Bundler::D2d_intrinsic_cali
   return H;
 }
 
-/* ************************************************************************* */
-Cal3Bundler Cal3Bundler::retract(const Vector& d) const {
-  return Cal3Bundler(f_ + d(0), k1_ + d(1), k2_ + d(2), u0_, v0_);
-}
-
-/* ************************************************************************* */
-Vector3 Cal3Bundler::localCoordinates(const Cal3Bundler& T2) const {
-  return T2.vector() - vector();
-}
-
-}
+}  // \ namespace gtsam
--- gtsam-4.1.0.orig/gtsam/geometry/Cal3Bundler.h
+++ gtsam-4.1.0/gtsam/geometry/Cal3Bundler.h
@@ -14,10 +14,12 @@
  * @brief Calibration used by Bundler
  * @date Sep 25, 2010
  * @author Yong Dian Jian
+ * @author Varun Agrawal
  */
 
 #pragma once
 
+#include <gtsam/geometry/Cal3.h>
 #include <gtsam/geometry/Point2.h>
 
 namespace gtsam {
@@ -27,22 +29,23 @@ namespace gtsam {
  * @addtogroup geometry
  * \nosubgrouping
  */
-class GTSAM_EXPORT Cal3Bundler {
-
-private:
-  double f_; ///< focal length
-  double k1_, k2_; ///< radial distortion
-  double u0_, v0_; ///< image center, not a parameter to be optimized but a constant
-
-public:
+class GTSAM_EXPORT Cal3Bundler : public Cal3 {
+ private:
+  double k1_ = 0.0f, k2_ = 0.0f;  ///< radial distortion
+  double tol_ = 1e-5;             ///< tolerance value when calibrating
+
+  // NOTE: We use the base class fx to represent the common focal length.
+  // Also, image center parameters (u0, v0) are not optimized
+  // but are treated as constants.
 
+ public:
   enum { dimension = 3 };
 
   /// @name Standard Constructors
   /// @{
 
   /// Default constructor
-  Cal3Bundler();
+  Cal3Bundler() = default;
 
   /**
    *  Constructor
@@ -51,17 +54,24 @@ public:
    *  @param k2 second radial distortion coefficient (quartic)
    *  @param u0 optional image center (default 0), considered a constant
    *  @param v0 optional image center (default 0), considered a constant
+   *  @param tol optional calibration tolerance value
    */
-  Cal3Bundler(double f, double k1, double k2, double u0 = 0, double v0 = 0);
+  Cal3Bundler(double f, double k1, double k2, double u0 = 0, double v0 = 0,
+              double tol = 1e-5)
+      : Cal3(f, f, 0, u0, v0), k1_(k1), k2_(k2), tol_(tol) {}
 
-  virtual ~Cal3Bundler() {}
+  ~Cal3Bundler() override {}
 
   /// @}
   /// @name Testable
   /// @{
 
+  /// Output stream operator
+  GTSAM_EXPORT friend std::ostream& operator<<(std::ostream& os,
+                                               const Cal3Bundler& cal);
+
   /// print with optional string
-  void print(const std::string& s = "") const;
+  void print(const std::string& s = "") const override;
 
   /// assert equality up to a tolerance
   bool equals(const Cal3Bundler& K, double tol = 10e-9) const;
@@ -70,55 +80,52 @@ public:
   /// @name Standard Interface
   /// @{
 
-  Matrix3 K() const; ///< Standard 3*3 calibration matrix
-  Vector4 k() const; ///< Radial distortion parameters (4 of them, 2 0)
+  /// distorsion parameter k1
+  inline double k1() const { return k1_; }
 
-  Vector3 vector() const;
+  /// distorsion parameter k2
+  inline double k2() const { return k2_; }
 
-  /// focal length x
-  inline double fx() const {
-    return f_;
-  }
+  /// image center in x
+  inline double px() const { return u0_; }
 
-  /// focal length y
-  inline double fy() const {
-    return f_;
-  }
+  /// image center in y
+  inline double py() const { return v0_; }
 
-  /// distorsion parameter k1
-  inline double k1() const {
-    return k1_;
-  }
+  Matrix3 K() const override;  ///< Standard 3*3 calibration matrix
+  Vector4 k() const;  ///< Radial distortion parameters (4 of them, 2 0)
 
-  /// distorsion parameter k2
-  inline double k2() const {
-    return k2_;
-  }
+  Vector3 vector() const;
 
+#ifdef GTSAM_ALLOW_DEPRECATED_SINCE_V41
   /// get parameter u0
-  inline double u0() const {
-    return u0_;
-  }
+  inline double u0() const { return u0_; }
 
   /// get parameter v0
-  inline double v0() const {
-    return v0_;
-  }
-
+  inline double v0() const { return v0_; }
+#endif
 
   /**
    * @brief: convert intrinsic coordinates xy to image coordinates uv
    * Version of uncalibrate with derivatives
    * @param p point in intrinsic coordinates
-   * @param Dcal optional 2*3 Jacobian wrpt CalBundler parameters
+   * @param Dcal optional 2*3 Jacobian wrpt Cal3Bundler parameters
    * @param Dp optional 2*2 Jacobian wrpt intrinsic coordinates
    * @return point in image coordinates
    */
   Point2 uncalibrate(const Point2& p, OptionalJacobian<2, 3> Dcal = boost::none,
-      OptionalJacobian<2, 2> Dp = boost::none) const;
+                     OptionalJacobian<2, 2> Dp = boost::none) const;
 
-  /// Convert a pixel coordinate to ideal coordinate
-  Point2 calibrate(const Point2& pi, const double tol = 1e-5) const;
+  /**
+   * Convert a pixel coordinate to ideal coordinate xy
+   * @param p point in image coordinates
+   * @param tol optional tolerance threshold value for iterative minimization
+   * @param Dcal optional 2*3 Jacobian wrpt Cal3Bundler parameters
+   * @param Dp optional 2*2 Jacobian wrpt intrinsic coordinates
+   * @return point in intrinsic coordinates
+   */
+  Point2 calibrate(const Point2& pi, OptionalJacobian<2, 3> Dcal = boost::none,
+                   OptionalJacobian<2, 2> Dp = boost::none) const;
 
   /// @deprecated might be removed in next release, use uncalibrate
   Matrix2 D2d_intrinsic(const Point2& p) const;
@@ -133,47 +140,45 @@ public:
   /// @name Manifold
   /// @{
 
-  /// Update calibration with tangent space delta
-  Cal3Bundler retract(const Vector& d) const;
+  /// return DOF, dimensionality of tangent space
+  size_t dim() const override { return Dim(); }
 
-  /// Calculate local coordinates to another calibration
-  Vector3 localCoordinates(const Cal3Bundler& T2) const;
+  /// return DOF, dimensionality of tangent space
+  inline static size_t Dim() { return dimension; }
 
-  /// dimensionality
-  virtual size_t dim() const {
-    return 3;
+  /// Update calibration with tangent space delta
+  inline Cal3Bundler retract(const Vector& d) const {
+    return Cal3Bundler(fx_ + d(0), k1_ + d(1), k2_ + d(2), u0_, v0_);
   }
 
-  /// dimensionality
-  static size_t Dim() {
-    return 3;
+  /// Calculate local coordinates to another calibration
+  Vector3 localCoordinates(const Cal3Bundler& T2) const {
+    return T2.vector() - vector();
   }
 
-private:
-
+ private:
   /// @}
   /// @name Advanced Interface
   /// @{
 
   /** Serialization function */
   friend class boost::serialization::access;
-  template<class Archive>
-  void serialize(Archive & ar, const unsigned int /*version*/) {
-    ar & BOOST_SERIALIZATION_NVP(f_);
-    ar & BOOST_SERIALIZATION_NVP(k1_);
-    ar & BOOST_SERIALIZATION_NVP(k2_);
-    ar & BOOST_SERIALIZATION_NVP(u0_);
-    ar & BOOST_SERIALIZATION_NVP(v0_);
+  template <class Archive>
+  void serialize(Archive& ar, const unsigned int /*version*/) {
+    ar& boost::serialization::make_nvp(
+        "Cal3Bundler", boost::serialization::base_object<Cal3>(*this));
+    ar& BOOST_SERIALIZATION_NVP(k1_);
+    ar& BOOST_SERIALIZATION_NVP(k2_);
+    ar& BOOST_SERIALIZATION_NVP(tol_);
   }
 
   /// @}
-
 };
 
-template<>
+template <>
 struct traits<Cal3Bundler> : public internal::Manifold<Cal3Bundler> {};
 
-template<>
+template <>
 struct traits<const Cal3Bundler> : public internal::Manifold<Cal3Bundler> {};
 
-} // namespace gtsam
+}  // namespace gtsam
--- gtsam-4.1.0.orig/gtsam/geometry/Cal3DS2.cpp
+++ gtsam-4.1.0/gtsam/geometry/Cal3DS2.cpp
@@ -13,28 +13,30 @@
  * @file Cal3DS2.cpp
  * @date Feb 28, 2010
  * @author ydjian
+ * @author Varun Agrawal
  */
 
-#include <gtsam/base/Vector.h>
 #include <gtsam/base/Matrix.h>
+#include <gtsam/base/Vector.h>
+#include <gtsam/geometry/Cal3DS2.h>
 #include <gtsam/geometry/Point2.h>
 #include <gtsam/geometry/Point3.h>
-#include <gtsam/geometry/Cal3DS2.h>
 
 namespace gtsam {
 
 /* ************************************************************************* */
-void Cal3DS2::print(const std::string& s_) const {
-  Base::print(s_);
+std::ostream& operator<<(std::ostream& os, const Cal3DS2& cal) {
+  os << (Cal3DS2_Base&)cal;
+  return os;
 }
 
 /* ************************************************************************* */
+void Cal3DS2::print(const std::string& s_) const { Base::print(s_); }
+
+/* ************************************************************************* */
 bool Cal3DS2::equals(const Cal3DS2& K, double tol) const {
-  if (std::abs(fx_ - K.fx_) > tol || std::abs(fy_ - K.fy_) > tol || std::abs(s_ - K.s_) > tol ||
-      std::abs(u0_ - K.u0_) > tol || std::abs(v0_ - K.v0_) > tol || std::abs(k1_ - K.k1_) > tol ||
-      std::abs(k2_ - K.k2_) > tol || std::abs(p1_ - K.p1_) > tol || std::abs(p2_ - K.p2_) > tol)
-    return false;
-  return true;
+  const Cal3DS2_Base* base = dynamic_cast<const Cal3DS2_Base*>(&K);
+  return Cal3DS2_Base::equals(*base, tol);
 }
 
 /* ************************************************************************* */
@@ -46,8 +48,5 @@ Cal3DS2 Cal3DS2::retract(const Vector& d
 Vector Cal3DS2::localCoordinates(const Cal3DS2& T2) const {
   return T2.vector() - vector();
 }
-
 }
 /* ************************************************************************* */
-
-
--- gtsam-4.1.0.orig/gtsam/geometry/Cal3DS2.h
+++ gtsam-4.1.0/gtsam/geometry/Cal3DS2.h
@@ -11,9 +11,11 @@
 
 /**
  * @file Cal3DS2.h
- * @brief Calibration of a camera with radial distortion, calculations in base class Cal3DS2_Base
+ * @brief Calibration of a camera with radial distortion, calculations in base
+ * class Cal3DS2_Base
  * @date Feb 28, 2010
  * @author ydjian
+ * @autho Varun Agrawal
  */
 
 #pragma once
@@ -30,35 +32,37 @@ namespace gtsam {
  * \nosubgrouping
  */
 class GTSAM_EXPORT Cal3DS2 : public Cal3DS2_Base {
+  using Base = Cal3DS2_Base;
 
-  typedef Cal3DS2_Base Base;
-
-public:
-
+ public:
   enum { dimension = 9 };
 
   /// @name Standard Constructors
   /// @{
 
   /// Default Constructor with only unit focal length
-  Cal3DS2() : Base() {}
+  Cal3DS2() = default;
 
-  Cal3DS2(double fx, double fy, double s, double u0, double v0,
-      double k1, double k2, double p1 = 0.0, double p2 = 0.0) :
-        Base(fx, fy, s, u0, v0, k1, k2, p1, p2) {}
+  Cal3DS2(double fx, double fy, double s, double u0, double v0, double k1,
+          double k2, double p1 = 0.0, double p2 = 0.0, double tol = 1e-5)
+      : Base(fx, fy, s, u0, v0, k1, k2, p1, p2, tol) {}
 
-  virtual ~Cal3DS2() {}
+  ~Cal3DS2() override {}
 
   /// @}
   /// @name Advanced Constructors
   /// @{
 
-  Cal3DS2(const Vector &v) : Base(v) {}
+  Cal3DS2(const Vector9& v) : Base(v) {}
 
   /// @}
   /// @name Testable
   /// @{
 
+  /// Output stream operator
+  GTSAM_EXPORT friend std::ostream& operator<<(std::ostream& os,
+                                               const Cal3DS2& cal);
+
   /// print with optional string
   void print(const std::string& s = "") const override;
 
@@ -70,16 +74,16 @@ public:
   /// @{
 
   /// Given delta vector, update calibration
-  Cal3DS2 retract(const Vector& d) const ;
+  Cal3DS2 retract(const Vector& d) const;
 
   /// Given a different calibration, calculate update to obtain it
-  Vector localCoordinates(const Cal3DS2& T2) const ;
+  Vector localCoordinates(const Cal3DS2& T2) const;
 
   /// Return dimensions of calibration manifold object
-  virtual size_t dim() const { return dimension ; }
+  size_t dim() const override { return Dim(); }
 
   /// Return dimensions of calibration manifold object
-  static size_t Dim() { return dimension; }
+  inline static size_t Dim() { return dimension; }
 
   /// @}
   /// @name Clone
@@ -92,30 +96,24 @@ public:
 
   /// @}
 
-
-private:
-
+ private:
   /// @name Advanced Interface
   /// @{
 
   /** Serialization function */
   friend class boost::serialization::access;
-  template<class Archive>
-  void serialize(Archive & ar, const unsigned int /*version*/)
-  {
-    ar & boost::serialization::make_nvp("Cal3DS2",
-        boost::serialization::base_object<Cal3DS2_Base>(*this));
+  template <class Archive>
+  void serialize(Archive& ar, const unsigned int /*version*/) {
+    ar& boost::serialization::make_nvp(
+        "Cal3DS2", boost::serialization::base_object<Cal3DS2_Base>(*this));
   }
 
   /// @}
-
 };
 
-template<>
+template <>
 struct traits<Cal3DS2> : public internal::Manifold<Cal3DS2> {};
 
-template<>
+template <>
 struct traits<const Cal3DS2> : public internal::Manifold<Cal3DS2> {};
-
 }
-
--- gtsam-4.1.0.orig/gtsam/geometry/Cal3DS2_Base.cpp
+++ gtsam-4.1.0/gtsam/geometry/Cal3DS2_Base.cpp
@@ -13,28 +13,18 @@
  * @file Cal3DS2_Base.cpp
  * @date Feb 28, 2010
  * @author ydjian
+ * @author Varun Agrawal
  */
 
-#include <gtsam/base/Vector.h>
 #include <gtsam/base/Matrix.h>
+#include <gtsam/base/Vector.h>
+#include <gtsam/geometry/Cal3DS2_Base.h>
 #include <gtsam/geometry/Point2.h>
 #include <gtsam/geometry/Point3.h>
-#include <gtsam/geometry/Cal3DS2_Base.h>
 
 namespace gtsam {
 
 /* ************************************************************************* */
-Cal3DS2_Base::Cal3DS2_Base(const Vector &v):
-    fx_(v[0]), fy_(v[1]), s_(v[2]), u0_(v[3]), v0_(v[4]), k1_(v[5]), k2_(v[6]), p1_(v[7]), p2_(v[8]){}
-
-/* ************************************************************************* */
-Matrix3 Cal3DS2_Base::K() const {
-    Matrix3 K;
-    K << fx_, s_, u0_, 0.0, fy_, v0_, 0.0, 0.0, 1.0;
-    return K;
-}
-
-/* ************************************************************************* */
 Vector9 Cal3DS2_Base::vector() const {
   Vector9 v;
   v << fx_, fy_, s_, u0_, v0_, k1_, k2_, p1_, p2_;
@@ -42,6 +32,14 @@ Vector9 Cal3DS2_Base::vector() const {
 }
 
 /* ************************************************************************* */
+std::ostream& operator<<(std::ostream& os, const Cal3DS2_Base& cal) {
+  os << (Cal3&)cal;
+  os << ", k1: " << cal.k1() << ", k2: " << cal.k2() << ", p1: " << cal.p1()
+     << ", p2: " << cal.p2();
+  return os;
+}
+
+/* ************************************************************************* */
 void Cal3DS2_Base::print(const std::string& s_) const {
   gtsam::print((Matrix)K(), s_ + ".K");
   gtsam::print(Vector(k()), s_ + ".k");
@@ -49,31 +47,30 @@ void Cal3DS2_Base::print(const std::stri
 
 /* ************************************************************************* */
 bool Cal3DS2_Base::equals(const Cal3DS2_Base& K, double tol) const {
-  if (std::abs(fx_ - K.fx_) > tol || std::abs(fy_ - K.fy_) > tol || std::abs(s_ - K.s_) > tol ||
-      std::abs(u0_ - K.u0_) > tol || std::abs(v0_ - K.v0_) > tol || std::abs(k1_ - K.k1_) > tol ||
-      std::abs(k2_ - K.k2_) > tol || std::abs(p1_ - K.p1_) > tol || std::abs(p2_ - K.p2_) > tol)
-    return false;
-  return true;
+  const Cal3* base = dynamic_cast<const Cal3*>(&K);
+  return Cal3::equals(*base, tol) && std::fabs(k1_ - K.k1_) < tol &&
+         std::fabs(k2_ - K.k2_) < tol && std::fabs(p1_ - K.p1_) < tol &&
+         std::fabs(p2_ - K.p2_) < tol;
 }
 
 /* ************************************************************************* */
-static Matrix29 D2dcalibration(double x, double y, double xx,
-    double yy, double xy, double rr, double r4, double pnx, double pny,
-    const Matrix2& DK) {
+static Matrix29 D2dcalibration(double x, double y, double xx, double yy,
+                               double xy, double rr, double r4, double pnx,
+                               double pny, const Matrix2& DK) {
   Matrix25 DR1;
   DR1 << pnx, 0.0, pny, 1.0, 0.0, 0.0, pny, 0.0, 0.0, 1.0;
   Matrix24 DR2;
-  DR2 << x * rr, x * r4, 2 * xy, rr + 2 * xx, //
-         y * rr, y * r4, rr + 2 * yy, 2 * xy;
+  DR2 << x * rr, x * r4, 2 * xy, rr + 2 * xx,  //
+      y * rr, y * r4, rr + 2 * yy, 2 * xy;
   Matrix29 D;
   D << DR1, DK * DR2;
   return D;
 }
 
 /* ************************************************************************* */
-static Matrix2 D2dintrinsic(double x, double y, double rr,
-    double g, double k1, double k2, double p1, double p2,
-    const Matrix2& DK) {
+static Matrix2 D2dintrinsic(double x, double y, double rr, double g, double k1,
+                            double k2, double p1, double p2,
+                            const Matrix2& DK) {
   const double drdx = 2. * x;
   const double drdy = 2. * y;
   const double dgdx = k1 * drdx + k2 * 2. * rr * drdx;
@@ -87,24 +84,23 @@ static Matrix2 D2dintrinsic(double x, do
   const double dDydy = 2. * p2 * x + p1 * (drdy + 4. * y);
 
   Matrix2 DR;
-  DR << g + x * dgdx + dDxdx, x * dgdy + dDxdy, //
-        y * dgdx + dDydx, g + y * dgdy + dDydy;
+  DR << g + x * dgdx + dDxdx, x * dgdy + dDxdy,  //
+      y * dgdx + dDydx, g + y * dgdy + dDydy;
 
   return DK * DR;
 }
 
 /* ************************************************************************* */
-Point2 Cal3DS2_Base::uncalibrate(const Point2& p,
-    OptionalJacobian<2,9> H1, OptionalJacobian<2,2> H2) const {
-
-  //  rr = x^2 + y^2;
-  //  g = (1 + k(1)*rr + k(2)*rr^2);
-  //  dp = [2*k(3)*x*y + k(4)*(rr + 2*x^2); 2*k(4)*x*y + k(3)*(rr + 2*y^2)];
+Point2 Cal3DS2_Base::uncalibrate(const Point2& p, OptionalJacobian<2, 9> Dcal,
+                                 OptionalJacobian<2, 2> Dp) const {
+  //  r² = x² + y²;
+  //  g = (1 + k(1)*r² + k(2)*r⁴);
+  //  dp = [2*k(3)*x*y + k(4)*(r² + 2*x²); 2*k(4)*x*y + k(3)*(r² + 2*y²)];
   //  pi(:,i) = g * pn(:,i) + dp;
   const double x = p.x(), y = p.y(), xy = x * y, xx = x * x, yy = y * y;
   const double rr = xx + yy;
   const double r4 = rr * rr;
-  const double g = 1. + k1_ * rr + k2_ * r4; // scaling factor
+  const double g = 1. + k1_ * rr + k2_ * r4;  // scaling factor
 
   // tangential component
   const double dx = 2. * p1_ * xy + p2_ * (rr + 2. * xx);
@@ -115,37 +111,44 @@ Point2 Cal3DS2_Base::uncalibrate(const P
   const double pny = g * y + dy;
 
   Matrix2 DK;
-  if (H1 || H2) DK << fx_, s_, 0.0, fy_;
+  if (Dcal || Dp) {
+    DK << fx_, s_, 0.0, fy_;
+  }
 
   // Derivative for calibration
-  if (H1)
-    *H1 = D2dcalibration(x, y, xx, yy, xy, rr, r4, pnx, pny, DK);
+  if (Dcal) {
+    *Dcal = D2dcalibration(x, y, xx, yy, xy, rr, r4, pnx, pny, DK);
+  }
 
   // Derivative for points
-  if (H2)
-    *H2 = D2dintrinsic(x, y, rr, g, k1_, k2_, p1_, p2_, DK);
+  if (Dp) {
+    *Dp = D2dintrinsic(x, y, rr, g, k1_, k2_, p1_, p2_, DK);
+  }
 
   // Regular uncalibrate after distortion
   return Point2(fx_ * pnx + s_ * pny + u0_, fy_ * pny + v0_);
 }
 
 /* ************************************************************************* */
-Point2 Cal3DS2_Base::calibrate(const Point2& pi, const double tol) const {
+Point2 Cal3DS2_Base::calibrate(const Point2& pi, OptionalJacobian<2, 9> Dcal,
+                               OptionalJacobian<2, 2> Dp) const {
   // Use the following fixed point iteration to invert the radial distortion.
   // pn_{t+1} = (inv(K)*pi - dp(pn_{t})) / g(pn_{t})
 
-  const Point2 invKPi ((1 / fx_) * (pi.x() - u0_ - (s_ / fy_) * (pi.y() - v0_)),
-                       (1 / fy_) * (pi.y() - v0_));
+  const Point2 invKPi((1 / fx_) * (pi.x() - u0_ - (s_ / fy_) * (pi.y() - v0_)),
+                      (1 / fy_) * (pi.y() - v0_));
 
-  // initialize by ignoring the distortion at all, might be problematic for pixels around boundary
+  // initialize by ignoring the distortion at all, might be problematic for
+  // pixels around boundary
   Point2 pn = invKPi;
 
   // iterate until the uncalibrate is close to the actual pixel coordinate
   const int maxIterations = 10;
   int iteration;
   for (iteration = 0; iteration < maxIterations; ++iteration) {
-    if (distance2(uncalibrate(pn), pi) <= tol) break;
-    const double x = pn.x(), y = pn.y(), xy = x * y, xx = x * x, yy = y * y;
+    if (distance2(uncalibrate(pn), pi) <= tol_) break;
+    const double px = pn.x(), py = pn.y(), xy = px * py, xx = px * px,
+                 yy = py * py;
     const double rr = xx + yy;
     const double g = (1 + k1_ * rr + k2_ * rr * rr);
     const double dx = 2 * p1_ * xy + p2_ * (rr + 2 * xx);
@@ -153,8 +156,11 @@ Point2 Cal3DS2_Base::calibrate(const Poi
     pn = (invKPi - Point2(dx, dy)) / g;
   }
 
-  if ( iteration >= maxIterations )
-    throw std::runtime_error("Cal3DS2::calibrate fails to converge. need a better initialization");
+  if (iteration >= maxIterations)
+    throw std::runtime_error(
+        "Cal3DS2::calibrate fails to converge. need a better initialization");
+
+  calibrateJacobians<Cal3DS2_Base, dimension>(*this, pn, Dcal, Dp);
 
   return pn;
 }
@@ -184,8 +190,5 @@ Matrix29 Cal3DS2_Base::D2d_calibration(c
   DK << fx_, s_, 0.0, fy_;
   return D2dcalibration(x, y, xx, yy, xy, rr, r4, pnx, pny, DK);
 }
-
 }
 /* ************************************************************************* */
-
-
--- gtsam-4.1.0.orig/gtsam/geometry/Cal3DS2_Base.h
+++ gtsam-4.1.0/gtsam/geometry/Cal3DS2_Base.h
@@ -14,10 +14,12 @@
  * @brief Calibration of a camera with radial distortion
  * @date Feb 28, 2010
  * @author ydjian
+ * @author Varun Agrawal
  */
 
 #pragma once
 
+#include <gtsam/geometry/Cal3.h>
 #include <gtsam/geometry/Point2.h>
 
 namespace gtsam {
@@ -31,82 +33,77 @@ namespace gtsam {
  * http://docs.opencv.org/modules/calib3d/doc/camera_calibration_and_3d_reconstruction.html
  * but using only k1,k2,p1, and p2 coefficients.
  * K = [ fx s u0 ; 0 fy v0 ; 0 0 1 ]
- * rr = Pn.x^2 + Pn.y^2
- * \hat{Pn} = (1 + k1*rr + k2*rr^2 ) Pn + [ 2*p1 Pn.x Pn.y + p2 (rr + 2 Pn.x^2) ;
- *                      p1 (rr + 2 Pn.y^2) + 2*p2 Pn.x Pn.y  ]
- * pi = K*Pn
+ * r² = P.x² + P.y²
+ * P̂ = (1 + k1*r² + k2*r⁴) P + [ (2*p1 P.x P.y) + p2 (r² + 2 Pn.x²)
+ *                            p1 (r² + 2 Pn.y²) + (2*p2 Pn.x Pn.y) ]
+ * pi = K*P̂
  */
-class GTSAM_EXPORT Cal3DS2_Base {
+class GTSAM_EXPORT Cal3DS2_Base : public Cal3 {
+ protected:
+  double k1_ = 0.0f, k2_ = 0.0f;  ///< radial 2nd-order and 4th-order
+  double p1_ = 0.0f, p2_ = 0.0f;  ///< tangential distortion
+  double tol_ = 1e-5;             ///< tolerance value when calibrating
 
-protected:
-
-  double fx_, fy_, s_, u0_, v0_ ; // focal length, skew and principal point
-  double k1_, k2_ ; // radial 2nd-order and 4th-order
-  double p1_, p2_ ; // tangential distortion
-
-public:
+ public:
+  enum { dimension = 9 };
 
   /// @name Standard Constructors
   /// @{
 
   /// Default Constructor with only unit focal length
-  Cal3DS2_Base() : fx_(1), fy_(1), s_(0), u0_(0), v0_(0), k1_(0), k2_(0), p1_(0), p2_(0) {}
+  Cal3DS2_Base() = default;
 
-  Cal3DS2_Base(double fx, double fy, double s, double u0, double v0,
-      double k1, double k2, double p1 = 0.0, double p2 = 0.0) :
-  fx_(fx), fy_(fy), s_(s), u0_(u0), v0_(v0), k1_(k1), k2_(k2), p1_(p1), p2_(p2) {}
+  Cal3DS2_Base(double fx, double fy, double s, double u0, double v0, double k1,
+               double k2, double p1 = 0.0, double p2 = 0.0, double tol = 1e-5)
+      : Cal3(fx, fy, s, u0, v0),
+        k1_(k1),
+        k2_(k2),
+        p1_(p1),
+        p2_(p2),
+        tol_(tol) {}
 
-  virtual ~Cal3DS2_Base() {}
+  ~Cal3DS2_Base() override {}
 
   /// @}
   /// @name Advanced Constructors
   /// @{
 
-  Cal3DS2_Base(const Vector &v) ;
+  Cal3DS2_Base(const Vector9& v)
+      : Cal3(v(0), v(1), v(2), v(3), v(4)),
+        k1_(v(5)),
+        k2_(v(6)),
+        p1_(v(7)),
+        p2_(v(8)) {}
 
   /// @}
   /// @name Testable
   /// @{
 
+  /// Output stream operator
+  GTSAM_EXPORT friend std::ostream& operator<<(std::ostream& os,
+                                               const Cal3DS2_Base& cal);
+
   /// print with optional string
-  virtual void print(const std::string& s = "") const;
+  void print(const std::string& s = "") const override;
 
   /// assert equality up to a tolerance
-  bool equals(const Cal3DS2_Base& K, double tol = 10e-9) const;
+  bool equals(const Cal3DS2_Base& K, double tol = 1e-8) const;
 
   /// @}
   /// @name Standard Interface
   /// @{
 
-  /// focal length x
-  inline double fx() const { return fx_;}
-
-  /// focal length x
-  inline double fy() const { return fy_;}
-
-  /// skew
-  inline double skew() const { return s_;}
-
-  /// image center in x
-  inline double px() const { return u0_;}
-
-  /// image center in y
-  inline double py() const { return v0_;}
-
   /// First distortion coefficient
-  inline double k1() const { return k1_;}
+  inline double k1() const { return k1_; }
 
   /// Second distortion coefficient
-  inline double k2() const { return k2_;}
+  inline double k2() const { return k2_; }
 
   /// First tangential distortion coefficient
-  inline double p1() const { return p1_;}
+  inline double p1() const { return p1_; }
 
   /// Second tangential distortion coefficient
-  inline double p2() const { return p2_;}
-
-  /// return calibration matrix -- not really applicable
-  Matrix3 K() const;
+  inline double p2() const { return p2_; }
 
   /// return distortion parameter vector
   Vector4 k() const { return Vector4(k1_, k2_, p1_, p2_); }
@@ -121,18 +118,24 @@ public:
    * @param Dp optional 2*2 Jacobian wrpt intrinsic coordinates
    * @return point in (distorted) image coordinates
    */
-  Point2 uncalibrate(const Point2& p,
-       OptionalJacobian<2,9> Dcal = boost::none,
-       OptionalJacobian<2,2> Dp = boost::none) const ;
+  Point2 uncalibrate(const Point2& p, OptionalJacobian<2, 9> Dcal = boost::none,
+                     OptionalJacobian<2, 2> Dp = boost::none) const;
 
   /// Convert (distorted) image coordinates uv to intrinsic coordinates xy
-  Point2 calibrate(const Point2& p, const double tol=1e-5) const;
+  Point2 calibrate(const Point2& p, OptionalJacobian<2, 9> Dcal = boost::none,
+                   OptionalJacobian<2, 2> Dp = boost::none) const;
 
   /// Derivative of uncalibrate wrpt intrinsic coordinates
-  Matrix2 D2d_intrinsic(const Point2& p) const ;
+  Matrix2 D2d_intrinsic(const Point2& p) const;
 
   /// Derivative of uncalibrate wrpt the calibration parameters
-  Matrix29 D2d_calibration(const Point2& p) const ;
+  Matrix29 D2d_calibration(const Point2& p) const;
+
+  /// return DOF, dimensionality of tangent space
+  size_t dim() const override { return Dim(); }
+
+  /// return DOF, dimensionality of tangent space
+  inline static size_t Dim() { return dimension; }
 
   /// @}
   /// @name Clone
@@ -145,30 +148,23 @@ public:
 
   /// @}
 
-private:
-
+ private:
   /// @name Advanced Interface
   /// @{
 
   /** Serialization function */
   friend class boost::serialization::access;
-  template<class Archive>
-  void serialize(Archive & ar, const unsigned int /*version*/)
-  {
-    ar & BOOST_SERIALIZATION_NVP(fx_);
-    ar & BOOST_SERIALIZATION_NVP(fy_);
-    ar & BOOST_SERIALIZATION_NVP(s_);
-    ar & BOOST_SERIALIZATION_NVP(u0_);
-    ar & BOOST_SERIALIZATION_NVP(v0_);
-    ar & BOOST_SERIALIZATION_NVP(k1_);
-    ar & BOOST_SERIALIZATION_NVP(k2_);
-    ar & BOOST_SERIALIZATION_NVP(p1_);
-    ar & BOOST_SERIALIZATION_NVP(p2_);
+  template <class Archive>
+  void serialize(Archive& ar, const unsigned int /*version*/) {
+    ar& boost::serialization::make_nvp(
+        "Cal3DS2_Base", boost::serialization::base_object<Cal3>(*this));
+    ar& BOOST_SERIALIZATION_NVP(k1_);
+    ar& BOOST_SERIALIZATION_NVP(k2_);
+    ar& BOOST_SERIALIZATION_NVP(p1_);
+    ar& BOOST_SERIALIZATION_NVP(p2_);
+    ar& BOOST_SERIALIZATION_NVP(tol_);
   }
 
   /// @}
-
 };
-
 }
-
--- gtsam-4.1.0.orig/gtsam/geometry/Cal3Fisheye.cpp
+++ gtsam-4.1.0/gtsam/geometry/Cal3Fisheye.cpp
@@ -13,6 +13,7 @@
  * @file Cal3Fisheye.cpp
  * @date Apr 8, 2020
  * @author ghaggin
+ * @author Varun Agrawal
  */
 
 #include <gtsam/base/Matrix.h>
@@ -24,18 +25,6 @@
 namespace gtsam {
 
 /* ************************************************************************* */
-Cal3Fisheye::Cal3Fisheye(const Vector9& v)
-    : fx_(v[0]),
-      fy_(v[1]),
-      s_(v[2]),
-      u0_(v[3]),
-      v0_(v[4]),
-      k1_(v[5]),
-      k2_(v[6]),
-      k3_(v[7]),
-      k4_(v[8]) {}
-
-/* ************************************************************************* */
 Vector9 Cal3Fisheye::vector() const {
   Vector9 v;
   v << fx_, fy_, s_, u0_, v0_, k1_, k2_, k3_, k4_;
@@ -43,13 +32,6 @@ Vector9 Cal3Fisheye::vector() const {
 }
 
 /* ************************************************************************* */
-Matrix3 Cal3Fisheye::K() const {
-  Matrix3 K;
-  K << fx_, s_, u0_, 0.0, fy_, v0_, 0.0, 0.0, 1.0;
-  return K;
-}
-
-/* ************************************************************************* */
 double Cal3Fisheye::Scaling(double r) {
   static constexpr double threshold = 1e-8;
   if (r > threshold || r < -threshold) {
@@ -122,14 +104,15 @@ Point2 Cal3Fisheye::uncalibrate(const Po
 }
 
 /* ************************************************************************* */
-Point2 Cal3Fisheye::calibrate(const Point2& uv, const double tol) const {
+Point2 Cal3Fisheye::calibrate(const Point2& uv, OptionalJacobian<2, 9> Dcal,
+                              OptionalJacobian<2, 2> Dp) const {
   // initial gues just inverts the pinhole model
   const double u = uv.x(), v = uv.y();
   const double yd = (v - v0_) / fy_;
   const double xd = (u - s_ * yd - u0_) / fx_;
   Point2 pi(xd, yd);
 
-  // Perform newtons method, break when solution converges past tol,
+  // Perform newtons method, break when solution converges past tol_,
   // throw exception if max iterations are reached
   const int maxIterations = 10;
   int iteration;
@@ -140,7 +123,7 @@ Point2 Cal3Fisheye::calibrate(const Poin
     const Point2 uv_hat = uncalibrate(pi, boost::none, jac);
 
     // Test convergence
-    if ((uv_hat - uv).norm() < tol) break;
+    if ((uv_hat - uv).norm() < tol_) break;
 
     // Newton's method update step
     pi = pi - jac.inverse() * (uv_hat - uv);
@@ -151,10 +134,20 @@ Point2 Cal3Fisheye::calibrate(const Poin
         "Cal3Fisheye::calibrate fails to converge. need a better "
         "initialization");
 
+  calibrateJacobians<Cal3Fisheye, dimension>(*this, pi, Dcal, Dp);
+
   return pi;
 }
 
 /* ************************************************************************* */
+std::ostream& operator<<(std::ostream& os, const Cal3Fisheye& cal) {
+  os << (Cal3&)cal;
+  os << ", k1: " << cal.k1() << ", k2: " << cal.k2() << ", k3: " << cal.k3()
+     << ", k4: " << cal.k4();
+  return os;
+}
+
+/* ************************************************************************* */
 void Cal3Fisheye::print(const std::string& s_) const {
   gtsam::print((Matrix)K(), s_ + ".K");
   gtsam::print(Vector(k()), s_ + ".k");
@@ -162,24 +155,12 @@ void Cal3Fisheye::print(const std::strin
 
 /* ************************************************************************* */
 bool Cal3Fisheye::equals(const Cal3Fisheye& K, double tol) const {
-  if (std::abs(fx_ - K.fx_) > tol || std::abs(fy_ - K.fy_) > tol ||
-      std::abs(s_ - K.s_) > tol || std::abs(u0_ - K.u0_) > tol ||
-      std::abs(v0_ - K.v0_) > tol || std::abs(k1_ - K.k1_) > tol ||
-      std::abs(k2_ - K.k2_) > tol || std::abs(k3_ - K.k3_) > tol ||
-      std::abs(k4_ - K.k4_) > tol)
-    return false;
-  return true;
+  const Cal3* base = dynamic_cast<const Cal3*>(&K);
+  return Cal3::equals(*base, tol) && std::fabs(k1_ - K.k1_) < tol &&
+         std::fabs(k2_ - K.k2_) < tol && std::fabs(k3_ - K.k3_) < tol &&
+         std::fabs(k4_ - K.k4_) < tol;
 }
 
 /* ************************************************************************* */
-Cal3Fisheye Cal3Fisheye::retract(const Vector& d) const {
-  return Cal3Fisheye(vector() + d);
-}
 
-/* ************************************************************************* */
-Vector Cal3Fisheye::localCoordinates(const Cal3Fisheye& T2) const {
-  return T2.vector() - vector();
-}
-
-}  // namespace gtsam
-/* ************************************************************************* */
+}  // \ namespace gtsam
--- gtsam-4.1.0.orig/gtsam/geometry/Cal3Fisheye.h
+++ gtsam-4.1.0/gtsam/geometry/Cal3Fisheye.h
@@ -14,10 +14,12 @@
  * @brief Calibration of a fisheye camera
  * @date Apr 8, 2020
  * @author ghaggin
+ * @author Varun Agrawal
  */
 
 #pragma once
 
+#include <gtsam/geometry/Cal3.h>
 #include <gtsam/geometry/Point2.h>
 
 #include <string>
@@ -36,71 +38,58 @@ namespace gtsam {
  * Intrinsic coordinates:
  *   [x_i;y_i] = [x/z; y/z]
  * Distorted coordinates:
- *   r^2 = (x_i)^2 + (y_i)^2
+ *   r² = (x_i)² + (y_i)²
  *   th = atan(r)
- *   th_d = th(1 + k1*th^2 + k2*th^4 + k3*th^6 + k4*th^8)
+ *   th_d = th(1 + k1*th² + k2*th⁴ + k3*th⁶ + k4*th⁸)
  *   [x_d; y_d] = (th_d / r)*[x_i; y_i]
  * Pixel coordinates:
  *   K = [fx s u0; 0 fy v0 ;0 0 1]
  *   [u; v; 1] = K*[x_d; y_d; 1]
  */
-class GTSAM_EXPORT Cal3Fisheye {
+class GTSAM_EXPORT Cal3Fisheye : public Cal3 {
  private:
-  double fx_, fy_, s_, u0_, v0_;  // focal length, skew and principal point
-  double k1_, k2_, k3_, k4_;      // fisheye distortion coefficients
+  double k1_ = 0.0f, k2_ = 0.0f;  ///< fisheye distortion coefficients
+  double k3_ = 0.0f, k4_ = 0.0f;  ///< fisheye distortion coefficients
+  double tol_ = 1e-5;             ///< tolerance value when calibrating
 
  public:
   enum { dimension = 9 };
-  typedef boost::shared_ptr<Cal3Fisheye>
-      shared_ptr;  ///< shared pointer to fisheye calibration object
+  ///< shared pointer to fisheye calibration object
+  using shared_ptr = boost::shared_ptr<Cal3Fisheye>;
 
   /// @name Standard Constructors
   /// @{
 
   /// Default Constructor with only unit focal length
-  Cal3Fisheye()
-      : fx_(1), fy_(1), s_(0), u0_(0), v0_(0), k1_(0), k2_(0), k3_(0), k4_(0) {}
+  Cal3Fisheye() = default;
 
   Cal3Fisheye(const double fx, const double fy, const double s, const double u0,
               const double v0, const double k1, const double k2,
-              const double k3, const double k4)
-      : fx_(fx),
-        fy_(fy),
-        s_(s),
-        u0_(u0),
-        v0_(v0),
+              const double k3, const double k4, double tol = 1e-5)
+      : Cal3(fx, fy, s, u0, v0),
         k1_(k1),
         k2_(k2),
         k3_(k3),
-        k4_(k4) {}
+        k4_(k4),
+        tol_(tol) {}
 
-  virtual ~Cal3Fisheye() {}
+  ~Cal3Fisheye() override {}
 
   /// @}
   /// @name Advanced Constructors
   /// @{
 
-  explicit Cal3Fisheye(const Vector9& v);
+  explicit Cal3Fisheye(const Vector9& v)
+      : Cal3(v(0), v(1), v(2), v(3), v(4)),
+        k1_(v(5)),
+        k2_(v(6)),
+        k3_(v(7)),
+        k4_(v(8)) {}
 
   /// @}
   /// @name Standard Interface
   /// @{
 
-  /// focal length x
-  inline double fx() const { return fx_; }
-
-  /// focal length x
-  inline double fy() const { return fy_; }
-
-  /// skew
-  inline double skew() const { return s_; }
-
-  /// image center in x
-  inline double px() const { return u0_; }
-
-  /// image center in y
-  inline double py() const { return v0_; }
-
   /// First distortion coefficient
   inline double k1() const { return k1_; }
 
@@ -113,9 +102,6 @@ class GTSAM_EXPORT Cal3Fisheye {
   /// Second tangential distortion coefficient
   inline double k4() const { return k4_; }
 
-  /// return calibration matrix
-  Matrix3 K() const;
-
   /// return distortion parameter vector
   Vector4 k() const { return Vector4(k1_, k2_, k3_, k4_); }
 
@@ -129,24 +115,34 @@ class GTSAM_EXPORT Cal3Fisheye {
    * @brief convert intrinsic coordinates [x_i; y_i] to (distorted) image
    * coordinates [u; v]
    * @param p point in intrinsic coordinates
-   * @param Dcal optional 2*9 Jacobian wrpt intrinsic parameters (fx, fy, ...,
-   * k4)
+   * @param Dcal optional 2*9 Jacobian wrpt intrinsic parameters
    * @param Dp optional 2*2 Jacobian wrpt intrinsic coordinates (xi, yi)
    * @return point in (distorted) image coordinates
    */
   Point2 uncalibrate(const Point2& p, OptionalJacobian<2, 9> Dcal = boost::none,
                      OptionalJacobian<2, 2> Dp = boost::none) const;
 
-  /// Convert (distorted) image coordinates [u;v] to intrinsic coordinates [x_i,
-  /// y_i]
-  Point2 calibrate(const Point2& p, const double tol = 1e-5) const;
+  /**
+   * Convert (distorted) image coordinates [u;v] to intrinsic coordinates [x_i,
+   * y_i]
+   * @param p point in image coordinates
+   * @param Dcal optional 2*9 Jacobian wrpt intrinsic parameters
+   * @param Dp optional 2*2 Jacobian wrpt intrinsic coordinates (xi, yi)
+   * @return point in intrinsic coordinates
+   */
+  Point2 calibrate(const Point2& p, OptionalJacobian<2, 9> Dcal = boost::none,
+                   OptionalJacobian<2, 2> Dp = boost::none) const;
 
   /// @}
   /// @name Testable
   /// @{
 
+  /// Output stream operator
+  GTSAM_EXPORT friend std::ostream& operator<<(std::ostream& os,
+                                               const Cal3Fisheye& cal);
+
   /// print with optional string
-  virtual void print(const std::string& s = "") const;
+  void print(const std::string& s = "") const override;
 
   /// assert equality up to a tolerance
   bool equals(const Cal3Fisheye& K, double tol = 10e-9) const;
@@ -155,17 +151,21 @@ class GTSAM_EXPORT Cal3Fisheye {
   /// @name Manifold
   /// @{
 
-  /// Given delta vector, update calibration
-  Cal3Fisheye retract(const Vector& d) const;
-
-  /// Given a different calibration, calculate update to obtain it
-  Vector localCoordinates(const Cal3Fisheye& T2) const;
-
   /// Return dimensions of calibration manifold object
-  virtual size_t dim() const { return 9; }
+  size_t dim() const override { return Dim(); }
 
   /// Return dimensions of calibration manifold object
-  static size_t Dim() { return 9; }
+  inline static size_t Dim() { return dimension; }
+
+  /// Given delta vector, update calibration
+  inline Cal3Fisheye retract(const Vector& d) const {
+    return Cal3Fisheye(vector() + d);
+  }
+
+  /// Given a different calibration, calculate update to obtain it
+  Vector localCoordinates(const Cal3Fisheye& T2) const {
+    return T2.vector() - vector();
+  }
 
   /// @}
   /// @name Clone
@@ -186,11 +186,8 @@ class GTSAM_EXPORT Cal3Fisheye {
   friend class boost::serialization::access;
   template <class Archive>
   void serialize(Archive& ar, const unsigned int /*version*/) {
-    ar& BOOST_SERIALIZATION_NVP(fx_);
-    ar& BOOST_SERIALIZATION_NVP(fy_);
-    ar& BOOST_SERIALIZATION_NVP(s_);
-    ar& BOOST_SERIALIZATION_NVP(u0_);
-    ar& BOOST_SERIALIZATION_NVP(v0_);
+    ar& boost::serialization::make_nvp(
+        "Cal3Fisheye", boost::serialization::base_object<Cal3>(*this));
     ar& BOOST_SERIALIZATION_NVP(k1_);
     ar& BOOST_SERIALIZATION_NVP(k2_);
     ar& BOOST_SERIALIZATION_NVP(k3_);
--- gtsam-4.1.0.orig/gtsam/geometry/Cal3Unified.cpp
+++ gtsam-4.1.0/gtsam/geometry/Cal3Unified.cpp
@@ -13,22 +13,19 @@
  * @file Cal3Unified.cpp
  * @date Mar 8, 2014
  * @author Jing Dong
+ * @author Varun Agrawal
  */
 
-#include <gtsam/base/Vector.h>
 #include <gtsam/base/Matrix.h>
-#include <gtsam/geometry/Point2.h>
+#include <gtsam/base/Vector.h>
 #include <gtsam/geometry/Cal3Unified.h>
+#include <gtsam/geometry/Point2.h>
 
 #include <cmath>
 
 namespace gtsam {
 
 /* ************************************************************************* */
-Cal3Unified::Cal3Unified(const Vector &v):
-    Base(v[0], v[1], v[2], v[3], v[4], v[5], v[6], v[7], v[8]), xi_(v[9]) {}
-
-/* ************************************************************************* */
 Vector10 Cal3Unified::vector() const {
   Vector10 v;
   v << Base::vector(), xi_;
@@ -36,6 +33,13 @@ Vector10 Cal3Unified::vector() const {
 }
 
 /* ************************************************************************* */
+std::ostream& operator<<(std::ostream& os, const Cal3Unified& cal) {
+  os << (Cal3DS2_Base&)cal;
+  os << ", xi: " << cal.xi();
+  return os;
+}
+
+/* ************************************************************************* */
 void Cal3Unified::print(const std::string& s) const {
   Base::print(s);
   gtsam::print((Vector)(Vector(1) << xi_).finished(), s + ".xi");
@@ -43,20 +47,14 @@ void Cal3Unified::print(const std::strin
 
 /* ************************************************************************* */
 bool Cal3Unified::equals(const Cal3Unified& K, double tol) const {
-  if (std::abs(fx_ - K.fx_) > tol || std::abs(fy_ - K.fy_) > tol || std::abs(s_ - K.s_) > tol ||
-      std::abs(u0_ - K.u0_) > tol || std::abs(v0_ - K.v0_) > tol || std::abs(k1_ - K.k1_) > tol ||
-      std::abs(k2_ - K.k2_) > tol || std::abs(p1_ - K.p1_) > tol || std::abs(p2_ - K.p2_) > tol ||
-      std::abs(xi_ - K.xi_) > tol)
-    return false;
-  return true;
+  const Cal3DS2_Base* base = dynamic_cast<const Cal3DS2_Base*>(&K);
+  return Cal3DS2_Base::equals(*base, tol) && std::fabs(xi_ - K.xi_) < tol;
 }
 
 /* ************************************************************************* */
 // todo: make a fixed sized jacobian version of this
-Point2 Cal3Unified::uncalibrate(const Point2& p,
-       OptionalJacobian<2,10> H1,
-       OptionalJacobian<2,2> H2) const {
-
+Point2 Cal3Unified::uncalibrate(const Point2& p, OptionalJacobian<2, 10> Dcal,
+                                OptionalJacobian<2, 2> Dp) const {
   // this part of code is modified from Cal3DS2,
   // since the second part of this model (after project to normalized plane)
   // is same as Cal3DS2
@@ -69,50 +67,53 @@ Point2 Cal3Unified::uncalibrate(const Po
   const double sqrt_nx = sqrt(xs * xs + ys * ys + 1.0);
   const double xi_sqrt_nx = 1.0 / (1 + xi * sqrt_nx);
   const double xi_sqrt_nx2 = xi_sqrt_nx * xi_sqrt_nx;
-  const double x = xs * xi_sqrt_nx, y = ys * xi_sqrt_nx; // points on NPlane
+  const double x = xs * xi_sqrt_nx, y = ys * xi_sqrt_nx;  // points on NPlane
 
   // Part2: project NPlane point to pixel plane: use Cal3DS2
-  Point2 m(x,y);
+  Point2 m(x, y);
   Matrix29 H1base;
-  Matrix2 H2base;    // jacobians from Base class
+  Matrix2 H2base;  // jacobians from Base class
   Point2 puncalib = Base::uncalibrate(m, H1base, H2base);
 
   // Inlined derivative for calibration
-  if (H1) {
+  if (Dcal) {
     // part1
     Vector2 DU;
-    DU << -xs * sqrt_nx * xi_sqrt_nx2, //
+    DU << -xs * sqrt_nx * xi_sqrt_nx2,  //
         -ys * sqrt_nx * xi_sqrt_nx2;
-    *H1 << H1base, H2base * DU;
+    *Dcal << H1base, H2base * DU;
   }
 
   // Inlined derivative for points
-  if (H2) {
+  if (Dp) {
     // part1
     const double denom = 1.0 * xi_sqrt_nx2 / sqrt_nx;
-    const double mid = -(xi * xs*ys) * denom;
+    const double mid = -(xi * xs * ys) * denom;
     Matrix2 DU;
-    DU << (sqrt_nx + xi*(ys*ys + 1)) * denom, mid, //
-        mid, (sqrt_nx + xi*(xs*xs + 1)) * denom;
+    DU << (sqrt_nx + xi * (ys * ys + 1)) * denom, mid,  //
+        mid, (sqrt_nx + xi * (xs * xs + 1)) * denom;
 
-    *H2 << H2base * DU;
+    *Dp << H2base * DU;
   }
 
   return puncalib;
 }
 
 /* ************************************************************************* */
-Point2 Cal3Unified::calibrate(const Point2& pi, const double tol) const {
-
+Point2 Cal3Unified::calibrate(const Point2& pi, OptionalJacobian<2, 10> Dcal,
+                              OptionalJacobian<2, 2> Dp) const {
   // calibrate point to Nplane use base class::calibrate()
-  Point2 pnplane = Base::calibrate(pi, tol);
+  Point2 pnplane = Base::calibrate(pi);
 
   // call nplane to space
-  return this->nPlaneToSpace(pnplane);
+  Point2 pn = this->nPlaneToSpace(pnplane);
+
+  calibrateJacobians<Cal3Unified, dimension>(*this, pn, Dcal, Dp);
+
+  return pn;
 }
 /* ************************************************************************* */
 Point2 Cal3Unified::nPlaneToSpace(const Point2& p) const {
-
   const double x = p.x(), y = p.y();
   const double xy2 = x * x + y * y;
   const double sq_xy = (xi_ + sqrt(1 + (1 - xi_ * xi_) * xy2)) / (xy2 + 1);
@@ -122,7 +123,6 @@ Point2 Cal3Unified::nPlaneToSpace(const
 
 /* ************************************************************************* */
 Point2 Cal3Unified::spaceToNPlane(const Point2& p) const {
-
   const double x = p.x(), y = p.y();
   const double sq_xy = 1 + xi_ * sqrt(x * x + y * y + 1);
 
@@ -135,11 +135,10 @@ Cal3Unified Cal3Unified::retract(const V
 }
 
 /* ************************************************************************* */
-Vector10 Cal3Unified::localCoordinates(const Cal3Unified& T2) const {
+Vector Cal3Unified::localCoordinates(const Cal3Unified& T2) const {
   return T2.vector() - vector();
 }
 
-}
 /* ************************************************************************* */
 
-
+}  // \ namespace gtsam
--- gtsam-4.1.0.orig/gtsam/geometry/Cal3Unified.h
+++ gtsam-4.1.0/gtsam/geometry/Cal3Unified.h
@@ -14,6 +14,7 @@
  * @brief Unified Calibration Model, see Mei07icra for details
  * @date Mar 8, 2014
  * @author Jing Dong
+ * @author Varun Agrawal
  */
 
 /**
@@ -27,53 +28,57 @@
 namespace gtsam {
 
 /**
- * @brief Calibration of a omni-directional camera with mirror + lens radial distortion
+ * @brief Calibration of a omni-directional camera with mirror + lens radial
+ * distortion
  * @addtogroup geometry
  * \nosubgrouping
  *
  * Similar to Cal3DS2, does distortion but has additional mirror parameter xi
  * K = [ fx s u0 ; 0 fy v0 ; 0 0 1 ]
- * Pn = [ P.x / (1 + xi * \sqrt{P.x^2 + P.y^2 + 1}), P.y / (1 + xi * \sqrt{P.x^2 + P.y^2 + 1})]
- * rr = Pn.x^2 + Pn.y^2
- * \hat{pn} = (1 + k1*rr + k2*rr^2 ) pn + [ 2*k3 pn.x pn.y + k4 (rr + 2 Pn.x^2) ;
- *                      k3 (rr + 2 Pn.y^2) + 2*k4 pn.x pn.y  ]
+ * Pn = [ P.x / (1 + xi * \sqrt{P.x² + P.y² + 1}), P.y / (1 + xi * \sqrt{P.x² +
+ * P.y² + 1})]
+ * r² = Pn.x² + Pn.y²
+ * \hat{pn} = (1 + k1*r² + k2*r⁴ ) pn + [ 2*k3 pn.x pn.y + k4 (r² + 2 Pn.x²) ;
+ *                      k3 (rr + 2 Pn.y²) + 2*k4 pn.x pn.y  ]
  * pi = K*pn
  */
 class GTSAM_EXPORT Cal3Unified : public Cal3DS2_Base {
+  using This = Cal3Unified;
+  using Base = Cal3DS2_Base;
 
-  typedef Cal3Unified This;
-  typedef Cal3DS2_Base Base;
-
-private:
-
-  double xi_;  // mirror parameter
-
-public:
+ private:
+  double xi_ = 0.0f;  ///< mirror parameter
 
+ public:
   enum { dimension = 10 };
 
   /// @name Standard Constructors
   /// @{
 
   /// Default Constructor with only unit focal length
-  Cal3Unified() : Base(), xi_(0) {}
+  Cal3Unified() = default;
 
-  Cal3Unified(double fx, double fy, double s, double u0, double v0,
-      double k1, double k2, double p1 = 0.0, double p2 = 0.0, double xi = 0.0) :
-        Base(fx, fy, s, u0, v0, k1, k2, p1, p2), xi_(xi) {}
+  Cal3Unified(double fx, double fy, double s, double u0, double v0, double k1,
+              double k2, double p1 = 0.0, double p2 = 0.0, double xi = 0.0)
+      : Base(fx, fy, s, u0, v0, k1, k2, p1, p2), xi_(xi) {}
 
-  virtual ~Cal3Unified() {}
+  ~Cal3Unified() override {}
 
   /// @}
   /// @name Advanced Constructors
   /// @{
 
-  Cal3Unified(const Vector &v) ;
+  Cal3Unified(const Vector10& v)
+      : Base(v(0), v(1), v(2), v(3), v(4), v(5), v(6), v(7), v(8)), xi_(v(9)) {}
 
   /// @}
   /// @name Testable
   /// @{
 
+  /// Output stream operator
+  GTSAM_EXPORT friend std::ostream& operator<<(std::ostream& os,
+                                               const Cal3Unified& cal);
+
   /// print with optional string
   void print(const std::string& s = "") const override;
 
@@ -85,7 +90,10 @@ public:
   /// @{
 
   /// mirror parameter
-  inline double xi() const { return xi_;}
+  inline double xi() const { return xi_; }
+
+  /// Return all parameters as a vector
+  Vector10 vector() const;
 
   /**
    * convert intrinsic coordinates xy to image coordinates uv
@@ -95,11 +103,12 @@ public:
    * @return point in image coordinates
    */
   Point2 uncalibrate(const Point2& p,
-      OptionalJacobian<2,10> Dcal = boost::none,
-      OptionalJacobian<2,2> Dp = boost::none) const ;
+                     OptionalJacobian<2, 10> Dcal = boost::none,
+                     OptionalJacobian<2, 2> Dp = boost::none) const;
 
   /// Conver a pixel coordinate to ideal coordinate
-  Point2 calibrate(const Point2& p, const double tol=1e-5) const;
+  Point2 calibrate(const Point2& p, OptionalJacobian<2, 10> Dcal = boost::none,
+                   OptionalJacobian<2, 2> Dp = boost::none) const;
 
   /// Convert a 3D point to normalized unit plane
   Point2 spaceToNPlane(const Point2& p) const;
@@ -112,41 +121,33 @@ public:
   /// @{
 
   /// Given delta vector, update calibration
-  Cal3Unified retract(const Vector& d) const ;
+  Cal3Unified retract(const Vector& d) const;
 
   /// Given a different calibration, calculate update to obtain it
-  Vector10 localCoordinates(const Cal3Unified& T2) const ;
+  Vector localCoordinates(const Cal3Unified& T2) const;
 
   /// Return dimensions of calibration manifold object
-  virtual size_t dim() const { return dimension ; }
+  size_t dim() const override { return Dim(); }
 
   /// Return dimensions of calibration manifold object
-  static size_t Dim() { return dimension; }
-
-  /// Return all parameters as a vector
-  Vector10 vector() const ;
+  inline static size_t Dim() { return dimension; }
 
   /// @}
 
-private:
-
+ private:
   /** Serialization function */
   friend class boost::serialization::access;
-  template<class Archive>
-  void serialize(Archive & ar, const unsigned int /*version*/)
-  {
-    ar & boost::serialization::make_nvp("Cal3Unified",
-        boost::serialization::base_object<Cal3DS2_Base>(*this));
-    ar & BOOST_SERIALIZATION_NVP(xi_);
+  template <class Archive>
+  void serialize(Archive& ar, const unsigned int /*version*/) {
+    ar& boost::serialization::make_nvp(
+        "Cal3Unified", boost::serialization::base_object<Cal3DS2_Base>(*this));
+    ar& BOOST_SERIALIZATION_NVP(xi_);
   }
-
 };
 
-template<>
+template <>
 struct traits<Cal3Unified> : public internal::Manifold<Cal3Unified> {};
 
-template<>
+template <>
 struct traits<const Cal3Unified> : public internal::Manifold<Cal3Unified> {};
-
 }
-
--- gtsam-4.1.0.orig/gtsam/geometry/Cal3_S2.cpp
+++ gtsam-4.1.0/gtsam/geometry/Cal3_S2.cpp
@@ -22,95 +22,55 @@
 #include <iostream>
 
 namespace gtsam {
-using namespace std;
 
 /* ************************************************************************* */
-Cal3_S2::Cal3_S2(double fov, int w, int h) :
-    s_(0), u0_((double) w / 2.0), v0_((double) h / 2.0) {
-  double a = fov * M_PI / 360.0; // fov/2 in radians
-  fx_ = (double) w / (2.0 * tan(a)); //    old formula: fx_ = (double) w * tan(a);
-  fy_ = fx_;
-}
-
-/* ************************************************************************* */
-Cal3_S2::Cal3_S2(const std::string &path) :
-    fx_(320), fy_(320), s_(0), u0_(320), v0_(140) {
-
-  char buffer[200];
-  buffer[0] = 0;
-  sprintf(buffer, "%s/calibration_info.txt", path.c_str());
-  std::ifstream infile(buffer, std::ios::in);
-
-  if (infile)
-    infile >> fx_ >> fy_ >> s_ >> u0_ >> v0_;
-  else {
-    throw std::runtime_error("Cal3_S2: Unable to load the calibration");
-  }
-
-  infile.close();
-}
-
-/* ************************************************************************* */
-ostream& operator<<(ostream& os, const Cal3_S2& cal) {
-  os << "{fx: " << cal.fx() << ", fy: " << cal.fy() << ", s:" << cal.skew() << ", px:" << cal.px()
-     << ", py:" << cal.py() << "}";
+std::ostream& operator<<(std::ostream& os, const Cal3_S2& cal) {
+  // Use the base class version since it is identical.
+  os << (Cal3&)cal;
   return os;
 }
 
 /* ************************************************************************* */
 void Cal3_S2::print(const std::string& s) const {
-  gtsam::print((Matrix)matrix(), s);
+  gtsam::print((Matrix)K(), s);
 }
 
 /* ************************************************************************* */
 bool Cal3_S2::equals(const Cal3_S2& K, double tol) const {
-  if (std::abs(fx_ - K.fx_) > tol)
-    return false;
-  if (std::abs(fy_ - K.fy_) > tol)
-    return false;
-  if (std::abs(s_ - K.s_) > tol)
-    return false;
-  if (std::abs(u0_ - K.u0_) > tol)
-    return false;
-  if (std::abs(v0_ - K.v0_) > tol)
-    return false;
-  return true;
+  return Cal3::equals(K, tol);
 }
 
 /* ************************************************************************* */
 Point2 Cal3_S2::uncalibrate(const Point2& p, OptionalJacobian<2, 5> Dcal,
-    OptionalJacobian<2, 2> Dp) const {
+                            OptionalJacobian<2, 2> Dp) const {
   const double x = p.x(), y = p.y();
-  if (Dcal)
-    *Dcal << x, 0.0, y, 1.0, 0.0, 0.0, y, 0.0, 0.0, 1.0;
-  if (Dp)
-    *Dp << fx_, s_, 0.0, fy_;
+  if (Dcal) *Dcal << x, 0.0, y, 1.0, 0.0, 0.0, y, 0.0, 0.0, 1.0;
+  if (Dp) *Dp << fx_, s_, 0.0, fy_;
   return Point2(fx_ * x + s_ * y + u0_, fy_ * y + v0_);
 }
 
 /* ************************************************************************* */
-Point2 Cal3_S2::calibrate(const Point2& p, OptionalJacobian<2,5> Dcal,
-                           OptionalJacobian<2,2> Dp) const {
-    const double u = p.x(), v = p.y();
-    double delta_u = u - u0_, delta_v = v - v0_;
-    double inv_fx = 1/ fx_, inv_fy = 1/fy_;
-    double inv_fy_delta_v = inv_fy * delta_v, inv_fx_s_inv_fy = inv_fx * s_ * inv_fy;
-    Point2 point(inv_fx * (delta_u - s_ * inv_fy_delta_v),
-                  inv_fy_delta_v);
-    if(Dcal)
-       *Dcal << - inv_fx * point.x(), inv_fx * s_ * inv_fy * inv_fy_delta_v,  -inv_fx * point.y(),
-            -inv_fx,  inv_fx_s_inv_fy,
-            0, -inv_fy * point.y(), 0,  0, -inv_fy;
-    if(Dp)
-        *Dp << inv_fx, -inv_fx_s_inv_fy, 0, inv_fy;
-    return point;
+Point2 Cal3_S2::calibrate(const Point2& p, OptionalJacobian<2, 5> Dcal,
+                          OptionalJacobian<2, 2> Dp) const {
+  const double u = p.x(), v = p.y();
+  double delta_u = u - u0_, delta_v = v - v0_;
+  double inv_fx = 1 / fx_, inv_fy = 1 / fy_;
+  double inv_fy_delta_v = inv_fy * delta_v;
+  double inv_fx_s_inv_fy = inv_fx * s_ * inv_fy;
+
+  Point2 point(inv_fx * (delta_u - s_ * inv_fy_delta_v), inv_fy_delta_v);
+  if (Dcal) {
+    *Dcal << -inv_fx * point.x(), inv_fx * s_ * inv_fy * inv_fy_delta_v,
+        -inv_fx * point.y(), -inv_fx, inv_fx_s_inv_fy, 0, -inv_fy * point.y(),
+        0, 0, -inv_fy;
+  }
+  if (Dp) *Dp << inv_fx, -inv_fx_s_inv_fy, 0, inv_fy;
+  return point;
 }
 
 /* ************************************************************************* */
-Vector3 Cal3_S2::calibrate(const Vector3& p) const {
-  return matrix_inverse() * p;
-}
+Vector3 Cal3_S2::calibrate(const Vector3& p) const { return inverse() * p; }
 
 /* ************************************************************************* */
 
-} // namespace gtsam
+}  // namespace gtsam
--- gtsam-4.1.0.orig/gtsam/geometry/Cal3_S2.h
+++ gtsam-4.1.0/gtsam/geometry/Cal3_S2.h
@@ -21,6 +21,7 @@
 
 #pragma once
 
+#include <gtsam/geometry/Cal3.h>
 #include <gtsam/geometry/Point2.h>
 
 namespace gtsam {
@@ -30,31 +31,25 @@ namespace gtsam {
  * @addtogroup geometry
  * \nosubgrouping
  */
-class GTSAM_EXPORT Cal3_S2 {
-private:
-  double fx_, fy_, s_, u0_, v0_;
-
-public:
+class GTSAM_EXPORT Cal3_S2 : public Cal3 {
+ public:
   enum { dimension = 5 };
-  typedef boost::shared_ptr<Cal3_S2> shared_ptr; ///< shared pointer to calibration object
+
+  ///< shared pointer to calibration object
+  using shared_ptr = boost::shared_ptr<Cal3_S2>;
 
   /// @name Standard Constructors
   /// @{
 
   /// Create a default calibration that leaves coordinates unchanged
-  Cal3_S2() :
-      fx_(1), fy_(1), s_(0), u0_(0), v0_(0) {
-  }
+  Cal3_S2() = default;
 
   /// constructor from doubles
-  Cal3_S2(double fx, double fy, double s, double u0, double v0) :
-      fx_(fx), fy_(fy), s_(s), u0_(u0), v0_(v0) {
-  }
+  Cal3_S2(double fx, double fy, double s, double u0, double v0)
+      : Cal3(fx, fy, s, u0, v0) {}
 
   /// constructor from vector
-  Cal3_S2(const Vector &d) :
-      fx_(d(0)), fy_(d(1)), s_(d(2)), u0_(d(3)), v0_(d(4)) {
-  }
+  Cal3_S2(const Vector5& d) : Cal3(d) {}
 
   /**
    * Easy constructor, takes fov in degrees, asssumes zero skew, unit aspect
@@ -62,141 +57,65 @@ public:
    * @param w image width
    * @param h image height
    */
-  Cal3_S2(double fov, int w, int h);
-
-  /// @}
-  /// @name Advanced Constructors
-  /// @{
-
-  /// load calibration from location (default name is calibration_info.txt)
-  Cal3_S2(const std::string &path);
-
-  /// @}
-  /// @name Testable
-  /// @{
-
-  /// Output stream operator
-  GTSAM_EXPORT friend std::ostream &operator<<(std::ostream &os, const Cal3_S2& cal);
-
-  /// print with optional string
-  void print(const std::string& s = "Cal3_S2") const;
-
-  /// Check if equal up to specified tolerance
-  bool equals(const Cal3_S2& K, double tol = 10e-9) const;
-
-  /// @}
-  /// @name Standard Interface
-  /// @{
-
-  /// focal length x
-  inline double fx() const {
-    return fx_;
-  }
-
-  /// focal length y
-  inline double fy() const {
-    return fy_;
-  }
-
-  /// aspect ratio
-  inline double aspectRatio() const {
-    return fx_/fy_;
-  }
-
-  /// skew
-  inline double skew() const {
-    return s_;
-  }
-
-  /// image center in x
-  inline double px() const {
-    return u0_;
-  }
-
-  /// image center in y
-  inline double py() const {
-    return v0_;
-  }
-
-  /// return the principal point
-  Point2 principalPoint() const {
-    return Point2(u0_, v0_);
-  }
-
-  /// vectorized form (column-wise)
-  Vector5 vector() const {
-    Vector5 v;
-    v << fx_, fy_, s_, u0_, v0_;
-    return v;
-  }
-
-  /// return calibration matrix K
-  Matrix3 K() const {
-    Matrix3 K;
-    K <<  fx_, s_, u0_, 0.0, fy_, v0_, 0.0, 0.0, 1.0;
-    return K;
-  }
-
-  /** @deprecated The following function has been deprecated, use K above */
-  Matrix3 matrix() const {
-    return K();
-  }
-
-  /// return inverted calibration matrix inv(K)
-  Matrix3 matrix_inverse() const {
-    const double fxy = fx_ * fy_, sv0 = s_ * v0_, fyu0 = fy_ * u0_;
-    Matrix3 K_inverse;
-    K_inverse << 1.0 / fx_, -s_ / fxy, (sv0 - fyu0) / fxy, 0.0,
-        1.0 / fy_, -v0_ / fy_, 0.0, 0.0, 1.0;
-    return K_inverse;
-  }
+  Cal3_S2(double fov, int w, int h) : Cal3(fov, w, h) {}
 
   /**
-   * convert intrinsic coordinates xy to image coordinates uv, fixed derivaitves
+   * Convert intrinsic coordinates xy to image coordinates uv, fixed derivaitves
    * @param p point in intrinsic coordinates
-   * @param Dcal optional 2*5 Jacobian wrpt Cal3_S2 parameters
+   * @param Dcal optional 2*5 Jacobian wrpt Cal3 parameters
    * @param Dp optional 2*2 Jacobian wrpt intrinsic coordinates
    * @return point in image coordinates
    */
-  Point2 uncalibrate(const Point2& p, OptionalJacobian<2,5> Dcal = boost::none,
-      OptionalJacobian<2,2> Dp = boost::none) const;
+  Point2 uncalibrate(const Point2& p, OptionalJacobian<2, 5> Dcal = boost::none,
+                     OptionalJacobian<2, 2> Dp = boost::none) const;
 
   /**
-   * convert image coordinates uv to intrinsic coordinates xy
+   * Convert image coordinates uv to intrinsic coordinates xy
    * @param p point in image coordinates
-   * @param Dcal optional 2*5 Jacobian wrpt Cal3_S2 parameters
+   * @param Dcal optional 2*5 Jacobian wrpt Cal3 parameters
    * @param Dp optional 2*2 Jacobian wrpt intrinsic coordinates
    * @return point in intrinsic coordinates
    */
-  Point2 calibrate(const Point2& p, OptionalJacobian<2,5> Dcal = boost::none,
-                   OptionalJacobian<2,2> Dp = boost::none) const;
+  Point2 calibrate(const Point2& p, OptionalJacobian<2, 5> Dcal = boost::none,
+                   OptionalJacobian<2, 2> Dp = boost::none) const;
 
   /**
-   * convert homogeneous image coordinates to intrinsic coordinates
+   * Convert homogeneous image coordinates to intrinsic coordinates
    * @param p point in image coordinates
    * @return point in intrinsic coordinates
    */
   Vector3 calibrate(const Vector3& p) const;
 
+  /// @}
+  /// @name Testable
+  /// @{
+
+  /// Output stream operator
+  GTSAM_EXPORT friend std::ostream& operator<<(std::ostream& os,
+                                               const Cal3_S2& cal);
+
+  /// print with optional string
+  void print(const std::string& s = "Cal3_S2") const override;
+
+  /// Check if equal up to specified tolerance
+  bool equals(const Cal3_S2& K, double tol = 10e-9) const;
+
   /// "Between", subtracts calibrations. between(p,q) == compose(inverse(p),q)
   inline Cal3_S2 between(const Cal3_S2& q,
-      OptionalJacobian<5,5> H1=boost::none,
-      OptionalJacobian<5,5> H2=boost::none) const {
-    if(H1) *H1 = -I_5x5;
-    if(H2) *H2 =  I_5x5;
-    return Cal3_S2(q.fx_-fx_, q.fy_-fy_, q.s_-s_, q.u0_-u0_, q.v0_-v0_);
+                         OptionalJacobian<5, 5> H1 = boost::none,
+                         OptionalJacobian<5, 5> H2 = boost::none) const {
+    if (H1) *H1 = -I_5x5;
+    if (H2) *H2 = I_5x5;
+    return Cal3_S2(q.fx_ - fx_, q.fy_ - fy_, q.s_ - s_, q.u0_ - u0_,
+                   q.v0_ - v0_);
   }
 
-
   /// @}
   /// @name Manifold
   /// @{
 
   /// return DOF, dimensionality of tangent space
-  inline size_t dim() const { return dimension; }
-
-  /// return DOF, dimensionality of tangent space
-  static size_t Dim() { return dimension; }
+  inline static size_t Dim() { return dimension; }
 
   /// Given 5-dim tangent vector, create new calibration
   inline Cal3_S2 retract(const Vector& d) const {
@@ -212,27 +131,22 @@ public:
   /// @name Advanced Interface
   /// @{
 
-private:
-
+ private:
   /// Serialization function
   friend class boost::serialization::access;
-  template<class Archive>
-  void serialize(Archive & ar, const unsigned int /*version*/) {
-    ar & BOOST_SERIALIZATION_NVP(fx_);
-    ar & BOOST_SERIALIZATION_NVP(fy_);
-    ar & BOOST_SERIALIZATION_NVP(s_);
-    ar & BOOST_SERIALIZATION_NVP(u0_);
-    ar & BOOST_SERIALIZATION_NVP(v0_);
+  template <class Archive>
+  void serialize(Archive& ar, const unsigned int /*version*/) {
+    ar& boost::serialization::make_nvp(
+        "Cal3_S2", boost::serialization::base_object<Cal3>(*this));
   }
 
   /// @}
-
 };
 
-template<>
+template <>
 struct traits<Cal3_S2> : public internal::Manifold<Cal3_S2> {};
 
-template<>
+template <>
 struct traits<const Cal3_S2> : public internal::Manifold<Cal3_S2> {};
 
-} // \ namespace gtsam
+}  // \ namespace gtsam
--- gtsam-4.1.0.orig/gtsam/geometry/Cal3_S2Stereo.cpp
+++ gtsam-4.1.0/gtsam/geometry/Cal3_S2Stereo.cpp
@@ -20,20 +20,56 @@
 #include <iostream>
 
 namespace gtsam {
-using namespace std;
+
+/* ************************************************************************* */
+std::ostream& operator<<(std::ostream& os, const Cal3_S2Stereo& cal) {
+  os << (Cal3_S2&)cal;
+  os << ", b: " << cal.baseline();
+  return os;
+}
 
 /* ************************************************************************* */
 void Cal3_S2Stereo::print(const std::string& s) const {
-     K_.print(s+"K: ");
-     std::cout << s << "Baseline: " << b_ << std::endl;
-   }
+  std::cout << s << (s != "" ? " " : "");
+  std::cout << "K: " << (Matrix)K() << std::endl;
+  std::cout << "Baseline: " << b_ << std::endl;
+}
 
 /* ************************************************************************* */
 bool Cal3_S2Stereo::equals(const Cal3_S2Stereo& other, double tol) const {
-  if (std::abs(b_ - other.b_) > tol) return false;
-  return K_.equals(other.K_,tol);
+  const Cal3_S2* base = dynamic_cast<const Cal3_S2*>(&other);
+  return (Cal3_S2::equals(*base, tol) &&
+          std::fabs(b_ - other.baseline()) < tol);
+}
+
+/* ************************************************************************* */
+Point2 Cal3_S2Stereo::uncalibrate(const Point2& p, OptionalJacobian<2, 6> Dcal,
+                            OptionalJacobian<2, 2> Dp) const {
+  const double x = p.x(), y = p.y();
+  if (Dcal) *Dcal << x, 0.0, y, 1.0, 0.0, 0.0, 0.0, y, 0.0, 0.0, 1.0, 0.0;
+  if (Dp) *Dp << fx_, s_, 0.0, fy_;
+  return Point2(fx_ * x + s_ * y + u0_, fy_ * y + v0_);
+}
+
+/* ************************************************************************* */
+Point2 Cal3_S2Stereo::calibrate(const Point2& p, OptionalJacobian<2, 6> Dcal,
+                          OptionalJacobian<2, 2> Dp) const {
+  const double u = p.x(), v = p.y();
+  double delta_u = u - u0_, delta_v = v - v0_;
+  double inv_fx = 1 / fx_, inv_fy = 1 / fy_;
+  double inv_fy_delta_v = inv_fy * delta_v;
+  double inv_fx_s_inv_fy = inv_fx * s_ * inv_fy;
+
+  Point2 point(inv_fx * (delta_u - s_ * inv_fy_delta_v), inv_fy_delta_v);
+  if (Dcal) {
+    *Dcal << -inv_fx * point.x(), inv_fx * s_ * inv_fy * inv_fy_delta_v,
+        -inv_fx * point.y(), -inv_fx, inv_fx_s_inv_fy, 0, 0,
+        -inv_fy * point.y(), 0, 0, -inv_fy, 0;
+  }
+  if (Dp) *Dp << inv_fx, -inv_fx_s_inv_fy, 0, inv_fy;
+  return point;
 }
 
 /* ************************************************************************* */
 
-} // namespace gtsam
+}  // namespace gtsam
--- gtsam-4.1.0.orig/gtsam/geometry/Cal3_S2Stereo.h
+++ gtsam-4.1.0/gtsam/geometry/Cal3_S2Stereo.h
@@ -22,135 +22,143 @@
 
 namespace gtsam {
 
+/**
+ * @brief The most common 5DOF 3D->2D calibration, stereo version
+ * @addtogroup geometry
+ * \nosubgrouping
+ */
+class GTSAM_EXPORT Cal3_S2Stereo : public Cal3_S2 {
+ private:
+  double b_ = 1.0f;  ///< Stereo baseline.
+
+ public:
+  enum { dimension = 6 };
+
+  ///< shared pointer to stereo calibration object
+  using shared_ptr = boost::shared_ptr<Cal3_S2Stereo>;
+
+  /// @name Standard Constructors
+  /// @
+
+  /// default calibration leaves coordinates unchanged
+  Cal3_S2Stereo() = default;
+
+  /// constructor from doubles
+  Cal3_S2Stereo(double fx, double fy, double s, double u0, double v0, double b)
+      : Cal3_S2(fx, fy, s, u0, v0), b_(b) {}
+
+  /// constructor from vector
+  Cal3_S2Stereo(const Vector6& d)
+      : Cal3_S2(d(0), d(1), d(2), d(3), d(4)), b_(d(5)) {}
+
+  /// easy constructor; field-of-view in degrees, assumes zero skew
+  Cal3_S2Stereo(double fov, int w, int h, double b)
+      : Cal3_S2(fov, w, h), b_(b) {}
+
   /**
-   * @brief The most common 5DOF 3D->2D calibration, stereo version
-   * @addtogroup geometry
-   * \nosubgrouping
+   * Convert intrinsic coordinates xy to image coordinates uv, fixed derivaitves
+   * @param p point in intrinsic coordinates
+   * @param Dcal optional 2*6 Jacobian wrpt Cal3_S2Stereo parameters
+   * @param Dp optional 2*2 Jacobian wrpt intrinsic coordinates
+   * @return point in image coordinates
    */
-  class GTSAM_EXPORT Cal3_S2Stereo {
-  private:
-
-    Cal3_S2 K_;
-    double b_;
-
-  public:
-
-    enum { dimension = 6 };
-    typedef boost::shared_ptr<Cal3_S2Stereo> shared_ptr;  ///< shared pointer to stereo calibration object
-
-    /// @name Standard Constructors
-    /// @
-
-    /// default calibration leaves coordinates unchanged
-    Cal3_S2Stereo() :
-      K_(1, 1, 0, 0, 0), b_(1.0) {
-    }
-
-    /// constructor from doubles
-    Cal3_S2Stereo(double fx, double fy, double s, double u0, double v0, double b) :
-      K_(fx, fy, s, u0, v0), b_(b) {
-    }
-
-    /// constructor from vector
-    Cal3_S2Stereo(const Vector &d): K_(d(0), d(1), d(2), d(3), d(4)), b_(d(5)){}
-
-    /// easy constructor; field-of-view in degrees, assumes zero skew
-    Cal3_S2Stereo(double fov, int w, int h, double b) :
-      K_(fov, w, h), b_(b) {
-    }
-
-    /// @}
-    /// @name Testable
-    /// @{
-
-    void print(const std::string& s = "") const;
-
-    /// Check if equal up to specified tolerance
-    bool equals(const Cal3_S2Stereo& other, double tol = 10e-9) const;
-
-   /// @}
-    /// @name Standard Interface
-    /// @{
-
-    /// return calibration, same for left and right
-    const Cal3_S2& calibration() const { return K_;}
-
-    /// return calibration matrix K, same for left and right
-    Matrix matrix() const { return K_.matrix();}
-
-    /// focal length x
-    inline double fx() const { return K_.fx();}
-
-    /// focal length x
-    inline double fy() const { return K_.fy();}
-
-    /// skew
-    inline double skew() const { return K_.skew();}
+  Point2 uncalibrate(const Point2& p, OptionalJacobian<2, 6> Dcal = boost::none,
+                     OptionalJacobian<2, 2> Dp = boost::none) const;
 
-    /// image center in x
-    inline double px() const { return K_.px();}
-
-    /// image center in y
-    inline double py() const { return K_.py();}
-
-    /// return the principal point
-    Point2 principalPoint() const { return K_.principalPoint();}
-
-    /// return baseline
-    inline double baseline() const { return b_; }
-
-    /// vectorized form (column-wise)
-    Vector6 vector() const {
-      Vector6 v;
-      v << K_.vector(), b_;
-      return v;
-    }
-
-    /// @}
-    /// @name Manifold
-    /// @{
-
-    /// return DOF, dimensionality of tangent space
-    inline size_t dim() const { return dimension; }
-
-    /// return DOF, dimensionality of tangent space
-    static size_t Dim() { return dimension; }
-
-    /// Given 6-dim tangent vector, create new calibration
-    inline Cal3_S2Stereo retract(const Vector& d) const {
-      return Cal3_S2Stereo(K_.fx() + d(0), K_.fy() + d(1), K_.skew() + d(2), K_.px() + d(3), K_.py() + d(4), b_ + d(5));
-    }
-
-    /// Unretraction for the calibration
-    Vector6 localCoordinates(const Cal3_S2Stereo& T2) const {
-      return T2.vector() - vector();
-    }
-
-
-    /// @}
-    /// @name Advanced Interface
-    /// @{
-
-  private:
-    /** Serialization function */
-    friend class boost::serialization::access;
-    template<class Archive>
-    void serialize(Archive & ar, const unsigned int /*version*/)
-    {
-      ar & BOOST_SERIALIZATION_NVP(K_);
-      ar & BOOST_SERIALIZATION_NVP(b_);
-    }
-    /// @}
-
-  };
+  /**
+   * Convert image coordinates uv to intrinsic coordinates xy
+   * @param p point in image coordinates
+   * @param Dcal optional 2*6 Jacobian wrpt Cal3_S2Stereo parameters
+   * @param Dp optional 2*2 Jacobian wrpt intrinsic coordinates
+   * @return point in intrinsic coordinates
+   */
+  Point2 calibrate(const Point2& p, OptionalJacobian<2, 6> Dcal = boost::none,
+                   OptionalJacobian<2, 2> Dp = boost::none) const;
 
-  // Define GTSAM traits
-  template<>
-  struct traits<Cal3_S2Stereo> : public internal::Manifold<Cal3_S2Stereo> {
-  };
+  /**
+   * Convert homogeneous image coordinates to intrinsic coordinates
+   * @param p point in image coordinates
+   * @return point in intrinsic coordinates
+   */
+  Vector3 calibrate(const Vector3& p) const { return Cal3_S2::calibrate(p); }
 
-  template<>
-  struct traits<const Cal3_S2Stereo> : public internal::Manifold<Cal3_S2Stereo> {
-  };
+  /// @}
+  /// @name Testable
+  /// @{
+
+  /// Output stream operator
+  GTSAM_EXPORT friend std::ostream& operator<<(std::ostream& os,
+                                               const Cal3_S2Stereo& cal);
+
+  /// print with optional string
+  void print(const std::string& s = "") const override;
+
+  /// Check if equal up to specified tolerance
+  bool equals(const Cal3_S2Stereo& other, double tol = 10e-9) const;
+
+  /// @}
+  /// @name Standard Interface
+  /// @{
+
+  /// return calibration, same for left and right
+  const Cal3_S2& calibration() const { return *this; }
+
+  /// return calibration matrix K, same for left and right
+  Matrix3 K() const override { return Cal3_S2::K(); }
+
+  /// return baseline
+  inline double baseline() const { return b_; }
+
+  /// vectorized form (column-wise)
+  Vector6 vector() const {
+    Vector6 v;
+    v << Cal3_S2::vector(), b_;
+    return v;
+  }
+
+  /// @}
+  /// @name Manifold
+  /// @{
+
+  /// return DOF, dimensionality of tangent space
+  inline size_t dim() const override { return Dim(); }
+
+  /// return DOF, dimensionality of tangent space
+  inline static size_t Dim() { return dimension; }
+
+  /// Given 6-dim tangent vector, create new calibration
+  inline Cal3_S2Stereo retract(const Vector& d) const {
+    return Cal3_S2Stereo(fx() + d(0), fy() + d(1), skew() + d(2), px() + d(3),
+                         py() + d(4), b_ + d(5));
+  }
+
+  /// Unretraction for the calibration
+  Vector6 localCoordinates(const Cal3_S2Stereo& T2) const {
+    return T2.vector() - vector();
+  }
+
+  /// @}
+  /// @name Advanced Interface
+  /// @{
+
+ private:
+  /** Serialization function */
+  friend class boost::serialization::access;
+  template <class Archive>
+  void serialize(Archive& ar, const unsigned int /*version*/) {
+    ar& boost::serialization::make_nvp(
+        "Cal3_S2", boost::serialization::base_object<Cal3_S2>(*this));
+    ar& BOOST_SERIALIZATION_NVP(b_);
+  }
+  /// @}
+};
+
+// Define GTSAM traits
+template <>
+struct traits<Cal3_S2Stereo> : public internal::Manifold<Cal3_S2Stereo> {};
+
+template <>
+struct traits<const Cal3_S2Stereo> : public internal::Manifold<Cal3_S2Stereo> {
+};
 
-} // \ namespace gtsam
+}  // \ namespace gtsam
--- gtsam-4.1.0.orig/gtsam/geometry/Line3.h
+++ gtsam-4.1.0/gtsam/geometry/Line3.h
@@ -103,6 +103,27 @@ class Line3 {
   Point3 point(double distance = 0) const;
 
   /**
+   * Return the rotation of the line.
+   */
+  inline Rot3 R() const {
+    return R_;
+  }
+
+  /**
+   * Return the x-coordinate of the intersection of the line with the xy plane.
+   */
+  inline double a() const {
+    return a_;
+  }
+
+  /**
+   * Return the y-coordinate of the intersection of the line with the xy plane.
+   */
+  inline double b() const {
+    return b_;
+  }
+
+  /**
    * Transform a line from world to camera frame
    * @param wTc - Pose3 of camera in world frame
    * @param wL - Line3 in world frame
--- gtsam-4.1.0.orig/gtsam/geometry/OrientedPlane3.cpp
+++ gtsam-4.1.0/gtsam/geometry/OrientedPlane3.cpp
@@ -18,7 +18,7 @@
  */
 
 #include <gtsam/geometry/OrientedPlane3.h>
-#include <gtsam/geometry/Point2.h>
+
 #include <iostream>
 
 using namespace std;
@@ -28,12 +28,13 @@ namespace gtsam {
 /* ************************************************************************* */
 void OrientedPlane3::print(const string& s) const {
   Vector4 coeffs = planeCoefficients();
-  cout << s << " : " << coeffs << endl;
+  cout << s << " : " << coeffs.transpose() << endl;
 }
 
 /* ************************************************************************* */
-OrientedPlane3 OrientedPlane3::transform(const Pose3& xr, OptionalJacobian<3, 3> Hp,
-    OptionalJacobian<3, 6> Hr) const {
+OrientedPlane3 OrientedPlane3::transform(const Pose3& xr,
+                                         OptionalJacobian<3, 3> Hp,
+                                         OptionalJacobian<3, 6> Hr) const {
   Matrix23 D_rotated_plane;
   Matrix22 D_rotated_pose;
   Unit3 n_rotated = xr.rotation().unrotate(n_, D_rotated_plane, D_rotated_pose);
@@ -42,15 +43,14 @@ OrientedPlane3 OrientedPlane3::transform
   double pred_d = n_.unitVector().dot(xr.translation()) + d_;
 
   if (Hr) {
-    *Hr = Matrix::Zero(3,6);
+    Hr->setZero();
     Hr->block<2, 3>(0, 0) = D_rotated_plane;
     Hr->block<1, 3>(2, 3) = unit_vec;
   }
   if (Hp) {
-    Vector2 hpp = n_.basis().transpose() * xr.translation();
-    *Hp = Z_3x3;
+    Hp->setZero();
     Hp->block<2, 2>(0, 0) = D_rotated_pose;
-    Hp->block<1, 2>(2, 0) = hpp;
+    Hp->block<1, 2>(2, 0) = n_.basis().transpose() * xr.translation();
     (*Hp)(2, 2) = 1;
   }
 
@@ -58,25 +58,20 @@ OrientedPlane3 OrientedPlane3::transform
 }
 
 /* ************************************************************************* */
-Vector3 OrientedPlane3::error(const OrientedPlane3& plane) const {
-  Vector2 n_error = -n_.localCoordinates(plane.n_);
-  return Vector3(n_error(0), n_error(1), d_ - plane.d_);
-}
-
-/* ************************************************************************* */
-Vector3 OrientedPlane3::errorVector(const OrientedPlane3& other, OptionalJacobian<3, 3> H1,
+Vector3 OrientedPlane3::errorVector(const OrientedPlane3& other,
+                                    OptionalJacobian<3, 3> H1,
                                     OptionalJacobian<3, 3> H2) const {
   Matrix22 H_n_error_this, H_n_error_other;
-  Vector2 n_error = n_.errorVector(other.normal(), H1 ? &H_n_error_this : 0,
+  Vector2 n_error = n_.errorVector(other.n_, H1 ? &H_n_error_this : 0,
                                    H2 ? &H_n_error_other : 0);
 
   double d_error = d_ - other.d_;
 
   if (H1) {
-    *H1 << H_n_error_this, Vector2::Zero(), 0, 0, 1;
+    *H1 << H_n_error_this, Z_2x1, 0, 0, 1;
   }
   if (H2) {
-    *H2 << H_n_error_other, Vector2::Zero(), 0, 0, -1;
+    *H2 << H_n_error_other, Z_2x1, 0, 0, -1;
   }
 
   return Vector3(n_error(0), n_error(1), d_error);
@@ -84,11 +79,11 @@ Vector3 OrientedPlane3::errorVector(cons
 
 /* ************************************************************************* */
 OrientedPlane3 OrientedPlane3::retract(const Vector3& v,
-                                       OptionalJacobian<3,3> H) const {
+                                       OptionalJacobian<3, 3> H) const {
   Matrix22 H_n;
-  Unit3 n_retract (n_.retract(Vector2(v(0), v(1)), H? &H_n : nullptr));
+  Unit3 n_retract(n_.retract(Vector2(v(0), v(1)), H? &H_n : nullptr));
   if (H) {
-    *H << H_n, Vector2::Zero(), 0, 0, 1;
+    *H << H_n, Z_2x1, 0, 0, 1;
   }
   return OrientedPlane3(n_retract, d_ + v(2));
 }
@@ -100,4 +95,4 @@ Vector3 OrientedPlane3::localCoordinates
   return Vector3(n_local(0), n_local(1), -d_local);
 }
 
-}
+}  // namespace gtsam
--- gtsam-4.1.0.orig/gtsam/geometry/OrientedPlane3.h
+++ gtsam-4.1.0/gtsam/geometry/OrientedPlane3.h
@@ -20,22 +20,21 @@
 
 #pragma once
 
-#include <gtsam/geometry/Rot3.h>
 #include <gtsam/geometry/Unit3.h>
 #include <gtsam/geometry/Pose3.h>
+#include <string>
 
 namespace gtsam {
 
 /**
- * @brief Represents an infinite plane in 3D, which is composed of a planar normal and its
- *  perpendicular distance to the origin.
- * Currently it provides a transform of the plane, and a norm 1 differencing of two planes.
+ * @brief Represents an infinite plane in 3D, which is composed of a planar
+ * normal and its perpendicular distance to the origin.
+ * Currently it provides a transform of the plane, and a norm 1 differencing of
+ * two planes.
  * Refer to Trevor12iros for more math details.
  */
 class GTSAM_EXPORT OrientedPlane3 {
-
 private:
-
   Unit3 n_;     ///< The direction of the planar normal
   double d_;    ///< The perpendicular distance to this plane
 
@@ -53,19 +52,17 @@ public:
   }
 
   /// Construct from a Unit3 and a distance
-  OrientedPlane3(const Unit3& s, double d) :
-    n_(s), d_(d) {
+  OrientedPlane3(const Unit3& n, double d) :
+    n_(n), d_(d) {
   }
 
   /// Construct from a vector of plane coefficients
-  OrientedPlane3(const Vector4& vec) :
-    n_(vec(0), vec(1), vec(2)), d_(vec(3)) {
-  }
+  explicit OrientedPlane3(const Vector4& vec)
+      : n_(vec(0), vec(1), vec(2)), d_(vec(3)) {}
 
   /// Construct from four numbers of plane coeffcients (a, b, c, d)
   OrientedPlane3(double a, double b, double c, double d) {
-    Point3 p(a, b, c);
-    n_ = Unit3(p);
+    n_ = Unit3(a, b, c);
     d_ = d;
   }
 
@@ -90,37 +87,18 @@ public:
    * @return the transformed plane
    */
   OrientedPlane3 transform(const Pose3& xr,
-      OptionalJacobian<3, 3> Hp = boost::none,
-      OptionalJacobian<3, 6> Hr = boost::none) const;
-
-  /**
-   * @deprecated the static method has wrong Jacobian order,
-   *    please use the member method transform()
-   * @param The raw plane
-   * @param xr a transformation in current coordiante
-   * @param Hr optional jacobian wrpt the pose transformation
-   * @param Hp optional Jacobian wrpt the destination plane
-   * @return the transformed plane
-   */
-  static OrientedPlane3 Transform(const OrientedPlane3& plane,
-      const Pose3& xr, OptionalJacobian<3, 6> Hr = boost::none,
-      OptionalJacobian<3, 3> Hp = boost::none) {
-      return plane.transform(xr, Hp, Hr);
-  }
-
-  /** Computes the error between two planes.
-   *  The error is a norm 1 difference in tangent space.
-   * @param the other plane
-   */
-  Vector3 error(const OrientedPlane3& plane) const;
+                           OptionalJacobian<3, 3> Hp = boost::none,
+                           OptionalJacobian<3, 6> Hr = boost::none) const;
 
   /** Computes the error between the two planes, with derivatives.
-   *  This uses Unit3::errorVector, as opposed to the other .error() in this class, which uses
-   *  Unit3::localCoordinates. This one has correct derivatives.
+   *  This uses Unit3::errorVector, as opposed to the other .error() in this
+   *  class, which uses Unit3::localCoordinates. This one has correct
+   *  derivatives.
    *  NOTE(hayk): The derivatives are zero when normals are exactly orthogonal.
-   * @param the other plane
+   * @param other the other plane
    */
-  Vector3 errorVector(const OrientedPlane3& other, OptionalJacobian<3, 3> H1 = boost::none, //
+  Vector3 errorVector(const OrientedPlane3& other,
+                      OptionalJacobian<3, 3> H1 = boost::none,
                       OptionalJacobian<3, 3> H2 = boost::none) const;
 
   /// Dimensionality of tangent space = 3 DOF
@@ -134,7 +112,8 @@ public:
   }
 
   /// The retract function
-  OrientedPlane3 retract(const Vector3& v, OptionalJacobian<3,3> H = boost::none) const;
+  OrientedPlane3 retract(const Vector3& v,
+                        OptionalJacobian<3, 3> H = boost::none) const;
 
   /// The local coordinates function
   Vector3 localCoordinates(const OrientedPlane3& s) const;
@@ -166,5 +145,5 @@ template<> struct traits<const OrientedP
 OrientedPlane3> {
 };
 
-} // namespace gtsam
+}  // namespace gtsam
 
--- gtsam-4.1.0.orig/gtsam/geometry/PinholeCamera.h
+++ gtsam-4.1.0/gtsam/geometry/PinholeCamera.h
@@ -157,7 +157,7 @@ public:
   /// @name Standard Interface
   /// @{
 
-  virtual ~PinholeCamera() {
+  ~PinholeCamera() override {
   }
 
   /// return pose
--- gtsam-4.1.0.orig/gtsam/geometry/PinholePose.h
+++ gtsam-4.1.0/gtsam/geometry/PinholePose.h
@@ -352,7 +352,7 @@ public:
   /// @name Standard Interface
   /// @{
 
-  virtual ~PinholePose() {
+  ~PinholePose() override {
   }
 
   /// return shared pointer to calibration
--- gtsam-4.1.0.orig/gtsam/geometry/Point3.cpp
+++ gtsam-4.1.0/gtsam/geometry/Point3.cpp
@@ -75,6 +75,18 @@ double dot(const Point3 &p, const Point3
   return p.x() * q.x() + p.y() * q.y() + p.z() * q.z();
 }
 
+Point3Pair means(const std::vector<Point3Pair> &abPointPairs) {
+  const size_t n = abPointPairs.size();
+  if (n == 0) throw std::invalid_argument("Point3::mean input Point3Pair vector is empty");
+  Point3 aSum(0, 0, 0), bSum(0, 0, 0);
+  for (const Point3Pair &abPair : abPointPairs) {
+    aSum += abPair.first;
+    bSum += abPair.second;
+  }
+  const double f = 1.0 / n;
+  return {aSum * f, bSum * f};
+}
+
 /* ************************************************************************* */
 ostream &operator<<(ostream &os, const gtsam::Point3Pair &p) {
   os << p.first << " <-> " << p.second;
--- gtsam-4.1.0.orig/gtsam/geometry/Point3.h
+++ gtsam-4.1.0/gtsam/geometry/Point3.h
@@ -26,6 +26,7 @@
 #include <gtsam/base/Vector.h>
 #include <gtsam/dllexport.h>
 #include <boost/serialization/nvp.hpp>
+#include <numeric>
 
 namespace gtsam {
 
@@ -34,9 +35,11 @@ namespace gtsam {
 typedef Vector3 Point3;
 
 // Convenience typedef
-typedef std::pair<Point3, Point3> Point3Pair;
+using Point3Pair = std::pair<Point3, Point3>;
 GTSAM_EXPORT std::ostream &operator<<(std::ostream &os, const gtsam::Point3Pair &p);
 
+using Point3Pairs = std::vector<Point3Pair>;
+
 /// distance between two points
 GTSAM_EXPORT double distance3(const Point3& p1, const Point3& q,
 	                          OptionalJacobian<1, 3> H1 = boost::none,
@@ -58,6 +61,18 @@ GTSAM_EXPORT double dot(const Point3& p,
                         OptionalJacobian<1, 3> H_p = boost::none,
                         OptionalJacobian<1, 3> H_q = boost::none);
 
+/// mean
+template <class CONTAINER>
+Point3 mean(const CONTAINER& points) {
+  if (points.size() == 0) throw std::invalid_argument("Point3::mean input container is empty");
+  Point3 sum(0, 0, 0);
+  sum = std::accumulate(points.begin(), points.end(), sum);
+  return sum / points.size();
+}
+
+/// Calculate the two means of a set of Point3 pairs
+GTSAM_EXPORT Point3Pair means(const std::vector<Point3Pair> &abPointPairs);
+
 template <typename A1, typename A2>
 struct Range;
 
--- gtsam-4.1.0.orig/gtsam/geometry/Pose2.cpp
+++ gtsam-4.1.0/gtsam/geometry/Pose2.cpp
@@ -48,7 +48,13 @@ Matrix3 Pose2::matrix() const {
 
 /* ************************************************************************* */
 void Pose2::print(const string& s) const {
-  cout << s << "(" << t_.x() << ", " << t_.y() << ", " << r_.theta() << ")" << endl;
+  std::cout << (s.empty() ? s : s + " ") << *this << std::endl;
+}
+
+/* ************************************************************************* */
+std::ostream &operator<<(std::ostream &os, const Pose2& pose) {
+  os << "(" << pose.x() << ", " << pose.y() << ", " << pose.theta() << ")";
+  return os;
 }
 
 /* ************************************************************************* */
--- gtsam-4.1.0.orig/gtsam/geometry/Pose2.h
+++ gtsam-4.1.0/gtsam/geometry/Pose2.h
@@ -287,6 +287,10 @@ public:
    */
   static std::pair<size_t, size_t> rotationInterval() { return std::make_pair(2, 2); }
 
+  /// Output stream operator
+  GTSAM_EXPORT
+  friend std::ostream &operator<<(std::ostream &os, const Pose2& p);
+
   /// @}
 
  private:
--- gtsam-4.1.0.orig/gtsam/geometry/Pose3.cpp
+++ gtsam-4.1.0/gtsam/geometry/Pose3.cpp
@@ -24,10 +24,11 @@
 #include <limits>
 #include <string>
 
-using namespace std;
-
 namespace gtsam {
 
+using std::vector;
+using Point3Pairs = vector<Point3Pair>;
+
 /** instantiate concept checks */
 GTSAM_CONCEPT_POSE_INST(Pose3);
 
@@ -105,8 +106,8 @@ Vector6 Pose3::adjointTranspose(const Ve
 }
 
 /* ************************************************************************* */
-void Pose3::print(const string& s) const {
-  cout << (s.empty() ? s : s + " ") << *this << endl;
+void Pose3::print(const std::string& s) const {
+  std::cout << (s.empty() ? s : s + " ") << *this << std::endl;
 }
 
 /* ************************************************************************* */
@@ -190,15 +191,7 @@ Vector6 Pose3::ChartAtOrigin::Local(cons
 }
 
 /* ************************************************************************* */
-/**
- * Compute the 3x3 bottom-left block Q of the SE3 Expmap derivative matrix
- *  J(xi) = [J_(w) Z_3x3;
- *             Q   J_(w)]
- *  where J_(w) is the SO3 Expmap derivative.
- *  (see Chirikjian11book2, pg 44, eq 10.95.
- *  The closed-form formula is similar to formula 102 in Barfoot14tro)
- */
-static Matrix3 computeQforExpmapDerivative(const Vector6& xi) {
+Matrix3 Pose3::ComputeQforExpmapDerivative(const Vector6& xi, double nearZeroThreshold) {
   const auto w = xi.head<3>();
   const auto v = xi.tail<3>();
   const Matrix3 V = skewSymmetric(v);
@@ -220,18 +213,20 @@ static Matrix3 computeQforExpmapDerivati
 #else
   // The closed-form formula in Barfoot14tro eq. (102)
   double phi = w.norm();
-  if (std::abs(phi)>1e-5) {
-    const double sinPhi = sin(phi), cosPhi = cos(phi);
-    const double phi2 = phi * phi, phi3 = phi2 * phi, phi4 = phi3 * phi, phi5 = phi4 * phi;
+  const Matrix3 WVW = W * V * W;
+  if (std::abs(phi) > nearZeroThreshold) {
+    const double s = sin(phi), c = cos(phi);
+    const double phi2 = phi * phi, phi3 = phi2 * phi, phi4 = phi3 * phi,
+                 phi5 = phi4 * phi;
     // Invert the sign of odd-order terms to have the right Jacobian
-    Q = -0.5*V + (phi-sinPhi)/phi3*(W*V + V*W - W*V*W)
-            + (1-phi2/2-cosPhi)/phi4*(W*W*V + V*W*W - 3*W*V*W)
-            - 0.5*((1-phi2/2-cosPhi)/phi4 - 3*(phi-sinPhi-phi3/6.)/phi5)*(W*V*W*W + W*W*V*W);
-  }
-  else {
-    Q = -0.5*V + 1./6.*(W*V + V*W - W*V*W)
-        + 1./24.*(W*W*V + V*W*W - 3*W*V*W)
-        - 0.5*(1./24. + 3./120.)*(W*V*W*W + W*W*V*W);
+    Q = -0.5 * V + (phi - s) / phi3 * (W * V + V * W - WVW) +
+        (1 - phi2 / 2 - c) / phi4 * (W * W * V + V * W * W - 3 * WVW) -
+        0.5 * ((1 - phi2 / 2 - c) / phi4 - 3 * (phi - s - phi3 / 6.) / phi5) *
+            (WVW * W + W * WVW);
+  } else {
+    Q = -0.5 * V + 1. / 6. * (W * V + V * W - WVW) -
+        1. / 24. * (W * W * V + V * W * W - 3 * WVW) +
+        1. / 120. * (WVW * W + W * WVW);
   }
 #endif
 
@@ -242,7 +237,7 @@ static Matrix3 computeQforExpmapDerivati
 Matrix6 Pose3::ExpmapDerivative(const Vector6& xi) {
   const Vector3 w = xi.head<3>();
   const Matrix3 Jw = Rot3::ExpmapDerivative(w);
-  const Matrix3 Q = computeQforExpmapDerivative(xi);
+  const Matrix3 Q = ComputeQforExpmapDerivative(xi);
   Matrix6 J;
   J << Jw, Z_3x3, Q, Jw;
   return J;
@@ -253,7 +248,7 @@ Matrix6 Pose3::LogmapDerivative(const Po
   const Vector6 xi = Logmap(pose);
   const Vector3 w = xi.head<3>();
   const Matrix3 Jw = Rot3::LogmapDerivative(w);
-  const Matrix3 Q = computeQforExpmapDerivative(xi);
+  const Matrix3 Q = ComputeQforExpmapDerivative(xi);
   const Matrix3 Q2 = -Jw*Q*Jw;
   Matrix6 J;
   J << Jw, Z_3x3, Q2, Jw;
@@ -389,39 +384,33 @@ Unit3 Pose3::bearing(const Pose3& pose,
 }
 
 /* ************************************************************************* */
-boost::optional<Pose3> Pose3::Align(const std::vector<Point3Pair>& abPointPairs) {
+boost::optional<Pose3> Pose3::Align(const Point3Pairs &abPointPairs) {
   const size_t n = abPointPairs.size();
-  if (n < 3)
-    return boost::none;  // we need at least three pairs
+  if (n < 3) {
+    return boost::none; // we need at least three pairs
+  }
 
   // calculate centroids
-  Point3 aCentroid(0,0,0), bCentroid(0,0,0);
-  for(const Point3Pair& abPair: abPointPairs) {
-    aCentroid += abPair.first;
-    bCentroid += abPair.second;
-  }
-  double f = 1.0 / n;
-  aCentroid *= f;
-  bCentroid *= f;
+  const auto centroids = means(abPointPairs);
 
   // Add to form H matrix
   Matrix3 H = Z_3x3;
-  for(const Point3Pair& abPair: abPointPairs) {
-    Point3 da = abPair.first - aCentroid;
-    Point3 db = abPair.second - bCentroid;
+  for (const Point3Pair &abPair : abPointPairs) {
+    const Point3 da = abPair.first - centroids.first;
+    const Point3 db = abPair.second - centroids.second;
     H += da * db.transpose();
-    }
+  }
 
   // ClosestTo finds rotation matrix closest to H in Frobenius sense
-  Rot3 aRb = Rot3::ClosestTo(H);
-  Point3 aTb = Point3(aCentroid) - aRb * Point3(bCentroid);
+  const Rot3 aRb = Rot3::ClosestTo(H);
+  const Point3 aTb = centroids.first - aRb * centroids.second;
   return Pose3(aRb, aTb);
 }
 
-boost::optional<Pose3> align(const vector<Point3Pair>& baPointPairs) {
-  vector<Point3Pair> abPointPairs;
-  for (const Point3Pair& baPair: baPointPairs) {
-    abPointPairs.push_back(make_pair(baPair.second, baPair.first));
+boost::optional<Pose3> align(const Point3Pairs &baPointPairs) {
+  Point3Pairs abPointPairs;
+  for (const Point3Pair &baPair : baPointPairs) {
+    abPointPairs.emplace_back(baPair.second, baPair.first);
   }
   return Pose3::Align(abPointPairs);
 }
--- gtsam-4.1.0.orig/gtsam/geometry/Pose3.h
+++ gtsam-4.1.0/gtsam/geometry/Pose3.h
@@ -112,6 +112,25 @@ public:
     return Pose3(R_ * T.R_, t_ + R_ * T.t_);
   }
 
+  /**
+   * Interpolate between two poses via individual rotation and translation
+   * interpolation.
+   *
+   * The default "interpolate" method defined in Lie.h minimizes the geodesic
+   * distance on the manifold, leading to a screw motion interpolation in
+   * Cartesian space, which might not be what is expected.
+   * In contrast, this method executes a straight line interpolation for the
+   * translation, while still using interpolate (aka "slerp") for the rotational
+   * component. This might be more intuitive in many applications.
+   *
+   * @param T End point of interpolation.
+   * @param t A value in [0, 1].
+   */
+  Pose3 interpolateRt(const Pose3& T, double t) const {
+    return Pose3(interpolate<Rot3>(R_, T.R_, t),
+                 interpolate<Point3>(t_, T.t_, t));
+  }
+
   /// @}
   /// @name Lie Group
   /// @{
@@ -181,6 +200,18 @@ public:
     static Vector6 Local(const Pose3& pose, ChartJacobian Hpose = boost::none);
   };
 
+  /**
+  * Compute the 3x3 bottom-left block Q of SE3 Expmap right derivative matrix
+  *  J_r(xi) = [J_(w) Z_3x3;
+  *             Q_r   J_(w)]
+  *  where J_(w) is the SO3 Expmap right derivative.
+  *  (see Chirikjian11book2, pg 44, eq 10.95.
+  *  The closed-form formula is identical to formula 102 in Barfoot14tro where
+  *  Q_l of the SE3 Expmap left derivative matrix is given.
+  */
+  static Matrix3 ComputeQforExpmapDerivative(
+      const Vector6& xi, double nearZeroThreshold = 1e-5);
+
   using LieGroup<Pose3, 6>::inverse; // version with derivative
 
   /**
@@ -356,6 +387,10 @@ inline Matrix wedge<Pose3>(const Vector&
   return Pose3::wedge(xi(0), xi(1), xi(2), xi(3), xi(4), xi(5));
 }
 
+// Convenience typedef
+using Pose3Pair = std::pair<Pose3, Pose3>;
+using Pose3Pairs = std::vector<std::pair<Pose3, Pose3> >;
+
 // For MATLAB wrapper
 typedef std::vector<Pose3> Pose3Vector;
 
--- gtsam-4.1.0.orig/gtsam/geometry/Rot3.cpp
+++ gtsam-4.1.0/gtsam/geometry/Rot3.cpp
@@ -158,21 +158,73 @@ Point3 Rot3::column(int index) const{
 }
 
 /* ************************************************************************* */
-Vector3 Rot3::xyz() const {
+Vector3 Rot3::xyz(OptionalJacobian<3, 3> H) const {
   Matrix3 I;Vector3 q;
-  boost::tie(I,q)=RQ(matrix());
+  if (H) {
+    Matrix93 mH;
+    const auto m = matrix();
+#ifdef GTSAM_USE_QUATERNIONS
+    SO3{m}.vec(mH);
+#else
+    rot_.vec(mH);
+#endif
+
+    Matrix39 qHm;
+    boost::tie(I, q) = RQ(m, qHm);
+
+    // TODO : Explore whether this expression can be optimized as both
+    // qHm and mH are super-sparse
+    *H = qHm * mH;
+  } else
+    boost::tie(I, q) = RQ(matrix());
   return q;
 }
 
 /* ************************************************************************* */
-Vector3 Rot3::ypr() const {
-  Vector3 q = xyz();
+Vector3 Rot3::ypr(OptionalJacobian<3, 3> H) const {
+  Vector3 q = xyz(H);
+  if (H) H->row(0).swap(H->row(2));
+
   return Vector3(q(2),q(1),q(0));
 }
 
 /* ************************************************************************* */
-Vector3 Rot3::rpy() const {
-  return xyz();
+Vector3 Rot3::rpy(OptionalJacobian<3, 3> H) const { return xyz(H); }
+
+/* ************************************************************************* */
+double Rot3::roll(OptionalJacobian<1, 3> H) const {
+  double r;
+  if (H) {
+    Matrix3 xyzH;
+    r = xyz(xyzH)(0);
+    *H = xyzH.row(0);
+  } else
+    r = xyz()(0);
+  return r;
+}
+
+/* ************************************************************************* */
+double Rot3::pitch(OptionalJacobian<1, 3> H) const {
+  double p;
+  if (H) {
+    Matrix3 xyzH;
+    p = xyz(xyzH)(1);
+    *H = xyzH.row(1);
+  } else
+    p = xyz()(1);
+  return p;
+}
+
+/* ************************************************************************* */
+double Rot3::yaw(OptionalJacobian<1, 3> H) const {
+  double y;
+  if (H) {
+    Matrix3 xyzH;
+    y = xyz(xyzH)(2);
+    *H = xyzH.row(2);
+  } else
+    y = xyz()(2);
+  return y;
 }
 
 /* ************************************************************************* */
@@ -203,21 +255,62 @@ Matrix3 Rot3::LogmapDerivative(const Vec
 }
 
 /* ************************************************************************* */
-pair<Matrix3, Vector3> RQ(const Matrix3& A) {
-
-  double x = -atan2(-A(2, 1), A(2, 2));
-  Rot3 Qx = Rot3::Rx(-x);
-  Matrix3 B = A * Qx.matrix();
-
-  double y = -atan2(B(2, 0), B(2, 2));
-  Rot3 Qy = Rot3::Ry(-y);
-  Matrix3 C = B * Qy.matrix();
-
-  double z = -atan2(-C(1, 0), C(1, 1));
-  Rot3 Qz = Rot3::Rz(-z);
-  Matrix3 R = C * Qz.matrix();
+pair<Matrix3, Vector3> RQ(const Matrix3& A, OptionalJacobian<3, 9> H) {
+  const double x = -atan2(-A(2, 1), A(2, 2));
+  const auto Qx = Rot3::Rx(-x).matrix();
+  const Matrix3 B = A * Qx;
+
+  const double y = -atan2(B(2, 0), B(2, 2));
+  const auto Qy = Rot3::Ry(-y).matrix();
+  const Matrix3 C = B * Qy;
+
+  const double z = -atan2(-C(1, 0), C(1, 1));
+  const auto Qz = Rot3::Rz(-z).matrix();
+  const Matrix3 R = C * Qz;
+
+  if (H) {
+    if (std::abs(y - M_PI / 2) < 1e-2)
+      throw std::runtime_error(
+          "Rot3::RQ : Derivative undefined at singularity (gimbal lock)");
+
+    auto atan_d1 = [](double y, double x) { return x / (x * x + y * y); };
+    auto atan_d2 = [](double y, double x) { return -y / (x * x + y * y); };
+
+    const auto sx = -Qx(2, 1), cx = Qx(1, 1);
+    const auto sy = -Qy(0, 2), cy = Qy(0, 0);
+
+    *H = Matrix39::Zero();
+    // First, calculate the derivate of x
+    (*H)(0, 5) = atan_d1(A(2, 1), A(2, 2));
+    (*H)(0, 8) = atan_d2(A(2, 1), A(2, 2));
+
+    // Next, calculate the derivate of y. We have
+    // b20 = a20 and b22 = a21 * sx + a22 * cx
+    (*H)(1, 2) = -atan_d1(B(2, 0), B(2, 2));
+    const auto yHb22 = -atan_d2(B(2, 0), B(2, 2));
+    (*H)(1, 5) = yHb22 * sx;
+    (*H)(1, 8) = yHb22 * cx;
+
+    // Next, calculate the derivate of z. We have
+    // c20 = a10 * cy + a11 * sx * sy + a12 * cx * sy
+    // c22 = a11 * cx - a12 * sx
+    const auto c10Hx = (A(1, 1) * cx - A(1, 2) * sx) * sy;
+    const auto c10Hy = A(1, 2) * cx * cy + A(1, 1) * cy * sx - A(1, 0) * sy;
+    Vector9 c10HA = c10Hx * H->row(0) + c10Hy * H->row(1);
+    c10HA[1] = cy;
+    c10HA[4] = sx * sy;
+    c10HA[7] = cx * sy;
+
+    const auto c11Hx = -A(1, 2) * cx - A(1, 1) * sx;
+    Vector9 c11HA = c11Hx * H->row(0);
+    c11HA[4] = cx;
+    c11HA[7] = -sx;
+
+    H->block<1, 9>(2, 0) =
+        atan_d1(C(1, 0), C(1, 1)) * c10HA + atan_d2(C(1, 0), C(1, 1)) * c11HA;
+  }
 
-  Vector xyz = Vector3(x, y, z);
+  const auto xyz = Vector3(x, y, z);
   return make_pair(R, xyz);
 }
 
--- gtsam-4.1.0.orig/gtsam/geometry/Rot3.h
+++ gtsam-4.1.0/gtsam/geometry/Rot3.h
@@ -154,12 +154,23 @@ namespace gtsam {
     static Rot3 Rz(double t);
 
     /// Rotations around Z, Y, then X axes as in http://en.wikipedia.org/wiki/Rotation_matrix, counterclockwise when looking from unchanging axis.
-    static Rot3 RzRyRx(double x, double y, double z);
+    static Rot3 RzRyRx(double x, double y, double z,
+                       OptionalJacobian<3, 1> Hx = boost::none,
+                       OptionalJacobian<3, 1> Hy = boost::none,
+                       OptionalJacobian<3, 1> Hz = boost::none);
 
     /// Rotations around Z, Y, then X axes as in http://en.wikipedia.org/wiki/Rotation_matrix, counterclockwise when looking from unchanging axis.
-    inline static Rot3 RzRyRx(const Vector& xyz) {
+    inline static Rot3 RzRyRx(const Vector& xyz,
+                              OptionalJacobian<3, 3> H = boost::none) {
       assert(xyz.size() == 3);
-      return RzRyRx(xyz(0), xyz(1), xyz(2));
+      Rot3 out;
+      if (H) {
+        Vector3 Hx, Hy, Hz;
+        out = RzRyRx(xyz(0), xyz(1), xyz(2), Hx, Hy, Hz);
+        (*H) << Hx, Hy, Hz;
+      } else
+        out = RzRyRx(xyz(0), xyz(1), xyz(2));
+      return out;
     }
 
     /// Positive yaw is to right (as in aircraft heading). See ypr
@@ -185,7 +196,12 @@ namespace gtsam {
      * Positive pitch is down (decreasing aircraft altitude).
      * Positive roll is to right (decreasing yaw in aircraft).
      */
-    static Rot3 Ypr(double y, double p, double r) { return RzRyRx(r,p,y);}
+    static Rot3 Ypr(double y, double p, double r,
+                    OptionalJacobian<3, 1> Hy = boost::none,
+                    OptionalJacobian<3, 1> Hp = boost::none,
+                    OptionalJacobian<3, 1> Hr = boost::none) {
+      return RzRyRx(r, p, y, Hr, Hp, Hy);
+    }
 
     /** Create from Quaternion coefficients */
     static Rot3 Quaternion(double w, double x, double y, double z) {
@@ -246,9 +262,29 @@ namespace gtsam {
     static Rot3 AlignTwoPairs(const Unit3& a_p, const Unit3& b_p,  //
                               const Unit3& a_q, const Unit3& b_q);
 
-    /// Static, named constructor that finds Rot3 element closest to M in Frobenius norm.
+    /**
+     * Static, named constructor that finds Rot3 element closest to M in Frobenius norm.
+     * 
+     * Uses Full SVD to compute the orthogonal matrix, thus is highly accurate and robust.
+     * 
+     * N. J. Higham. Matrix nearness problems and applications.
+     * In M. J. C. Gover and S. Barnett, editors, Applications of Matrix Theory, pages 1–27.
+     * Oxford University Press, 1989.
+     */
     static Rot3 ClosestTo(const Matrix3& M) { return Rot3(SO3::ClosestTo(M)); }
 
+    /**
+     * Normalize rotation so that its determinant is 1.
+     * This means either re-orthogonalizing the Matrix representation or
+     * normalizing the quaternion representation.
+     *
+     * This method is akin to `ClosestTo` but uses a computationally cheaper
+     * algorithm.
+     * 
+     * Ref: https://drive.google.com/file/d/0B9rLLz1XQKmaZTlQdV81QjNoZTA/view
+     */
+    Rot3 normalized() const;
+
     /// @}
     /// @name Testable
     /// @{
@@ -425,19 +461,19 @@ namespace gtsam {
      * Use RQ to calculate xyz angle representation
      * @return a vector containing x,y,z s.t. R = Rot3::RzRyRx(x,y,z)
      */
-    Vector3 xyz() const;
+    Vector3 xyz(OptionalJacobian<3, 3> H = boost::none) const;
 
     /**
      * Use RQ to calculate yaw-pitch-roll angle representation
      * @return a vector containing ypr s.t. R = Rot3::Ypr(y,p,r)
      */
-    Vector3 ypr() const;
+    Vector3 ypr(OptionalJacobian<3, 3> H = boost::none) const;
 
     /**
      * Use RQ to calculate roll-pitch-yaw angle representation
      * @return a vector containing rpy s.t. R = Rot3::Ypr(y,p,r)
      */
-    Vector3 rpy() const;
+    Vector3 rpy(OptionalJacobian<3, 3> H = boost::none) const;
 
     /**
      * Accessor to get to component of angle representations
@@ -445,7 +481,7 @@ namespace gtsam {
      * you should instead use xyz() or ypr()
      * TODO: make this more efficient
      */
-    inline double roll() const  { return xyz()(0); }
+    double roll(OptionalJacobian<1, 3> H = boost::none) const;
 
     /**
      * Accessor to get to component of angle representations
@@ -453,7 +489,7 @@ namespace gtsam {
      * you should instead use xyz() or ypr()
      * TODO: make this more efficient
      */
-    inline double pitch() const { return xyz()(1); }
+    double pitch(OptionalJacobian<1, 3> H = boost::none) const;
 
     /**
      * Accessor to get to component of angle representations
@@ -461,7 +497,7 @@ namespace gtsam {
      * you should instead use xyz() or ypr()
      * TODO: make this more efficient
      */
-    inline double yaw() const   { return xyz()(2); }
+    double yaw(OptionalJacobian<1, 3> H = boost::none) const;
 
     /// @}
     /// @name Advanced Interface
@@ -490,7 +526,7 @@ namespace gtsam {
 
     /**
      * @brief Spherical Linear intERPolation between *this and other
-     * @param s a value between 0 and 1
+     * @param t a value between 0 and 1
      * @param other final point of iterpolation geodesic on manifold
      */
     Rot3 slerp(double t, const Rot3& other) const;
@@ -541,7 +577,8 @@ namespace gtsam {
    * @return an upper triangular matrix R
    * @return a vector [thetax, thetay, thetaz] in radians.
    */
-  GTSAM_EXPORT std::pair<Matrix3,Vector3> RQ(const Matrix3& A);
+  GTSAM_EXPORT std::pair<Matrix3, Vector3> RQ(
+      const Matrix3& A, OptionalJacobian<3, 9> H = boost::none);
 
   template<>
   struct traits<Rot3> : public internal::LieGroup<Rot3> {};
--- gtsam-4.1.0.orig/gtsam/geometry/Rot3M.cpp
+++ gtsam-4.1.0/gtsam/geometry/Rot3M.cpp
@@ -82,7 +82,8 @@ Rot3 Rot3::Rz(double t) {
 
 /* ************************************************************************* */
 // Considerably faster than composing matrices above !
-Rot3 Rot3::RzRyRx(double x, double y, double z) {
+Rot3 Rot3::RzRyRx(double x, double y, double z, OptionalJacobian<3, 1> Hx,
+                  OptionalJacobian<3, 1> Hy, OptionalJacobian<3, 1> Hz) {
   double cx=cos(x),sx=sin(x);
   double cy=cos(y),sy=sin(y);
   double cz=cos(z),sz=sin(z);
@@ -97,6 +98,9 @@ Rot3 Rot3::RzRyRx(double x, double y, do
   double s_c = sx * cz;
   double c_c = cx * cz;
   double ssc = ss_ * cz, csc = cs_ * cz, sss = ss_ * sz, css = cs_ * sz;
+  if (Hx) (*Hx) << 1, 0, 0;
+  if (Hy) (*Hy) << 0, cx, -sx;
+  if (Hz) (*Hz) << -sy, sc_, cc_;
   return Rot3(
       _cc,- c_s + ssc,  s_s + csc,
       _cs,  c_c + sss, -s_c + css,
@@ -105,6 +109,33 @@ Rot3 Rot3::RzRyRx(double x, double y, do
 }
 
 /* ************************************************************************* */
+Rot3 Rot3::normalized() const {
+  /// Implementation from here: https://stackoverflow.com/a/23082112/1236990
+
+  /// Essentially, this computes the orthogonalization error, distributes the
+  /// error to the x and y rows, and then performs a Taylor expansion to
+  /// orthogonalize.
+
+  Matrix3 rot = rot_.matrix(), rot_orth;
+
+  // Check if determinant is already 1.
+  // If yes, then return the current Rot3.
+  if (std::fabs(rot.determinant()-1) < 1e-12) return Rot3(rot_);
+
+  Vector3 x = rot.block<1, 3>(0, 0), y = rot.block<1, 3>(1, 0);
+  double error = x.dot(y);
+
+  Vector3 x_ort = x - (error / 2) * y, y_ort = y - (error / 2) * x;
+  Vector3 z_ort = x_ort.cross(y_ort);
+
+  rot_orth.block<1, 3>(0, 0) = 0.5 * (3 - x_ort.dot(x_ort)) * x_ort;
+  rot_orth.block<1, 3>(1, 0) = 0.5 * (3 - y_ort.dot(y_ort)) * y_ort;
+  rot_orth.block<1, 3>(2, 0) = 0.5 * (3 - z_ort.dot(z_ort)) * z_ort;
+
+  return Rot3(rot_orth);
+}
+
+/* ************************************************************************* */
 Rot3 Rot3::operator*(const Rot3& R2) const {
   return Rot3(rot_*R2.rot_);
 }
@@ -145,7 +176,17 @@ Vector3 Rot3::CayleyChart::Local(const R
   if (H) throw std::runtime_error("Rot3::CayleyChart::Local Derivative");
   // Create a fixed-size matrix
   Matrix3 A = R.matrix();
-  // Mathematica closed form optimization (procrastination?) gone wild:
+
+  // Check if (A+I) is invertible. Same as checking for -1 eigenvalue.
+  if ((A + I_3x3).determinant() == 0.0) {
+    throw std::runtime_error("Rot3::CayleyChart::Local Invalid Rotation");
+  }
+
+  // Mathematica closed form optimization.
+  // The following are the essential computations for the following algorithm
+  // 1. Compute the inverse of P = (A+I), using a closed-form formula since P is 3x3 
+  // 2. Compute the Cayley transform C = 2 * P^{-1} * (A-I)
+  // 3. C is skew-symmetric, so we pick out the computations corresponding only to x, y, and z.
   const double a = A(0, 0), b = A(0, 1), c = A(0, 2);
   const double d = A(1, 0), e = A(1, 1), f = A(1, 2);
   const double g = A(2, 0), h = A(2, 1), i = A(2, 2);
--- gtsam-4.1.0.orig/gtsam/geometry/Rot3Q.cpp
+++ gtsam-4.1.0/gtsam/geometry/Rot3Q.cpp
@@ -67,13 +67,30 @@ namespace gtsam {
   }
 
   /* ************************************************************************* */
-  Rot3 Rot3::RzRyRx(double x, double y, double z) { return Rot3(
-      gtsam::Quaternion(Eigen::AngleAxisd(z, Eigen::Vector3d::UnitZ())) *
-      gtsam::Quaternion(Eigen::AngleAxisd(y, Eigen::Vector3d::UnitY())) *
-      gtsam::Quaternion(Eigen::AngleAxisd(x, Eigen::Vector3d::UnitX())));
+  Rot3 Rot3::RzRyRx(double x, double y, double z, OptionalJacobian<3, 1> Hx,
+                    OptionalJacobian<3, 1> Hy, OptionalJacobian<3, 1> Hz) {
+    if (Hx) (*Hx) << 1, 0, 0;
+
+    if (Hy or Hz) {
+      const auto cx = cos(x), sx = sin(x);
+      if (Hy) (*Hy) << 0, cx, -sx;
+      if (Hz) {
+        const auto cy = cos(y), sy = sin(y);
+        (*Hz) << -sy, sx * cy, cx * cy;
+      }
+    }
+
+    return Rot3(
+        gtsam::Quaternion(Eigen::AngleAxisd(z, Eigen::Vector3d::UnitZ())) *
+        gtsam::Quaternion(Eigen::AngleAxisd(y, Eigen::Vector3d::UnitY())) *
+        gtsam::Quaternion(Eigen::AngleAxisd(x, Eigen::Vector3d::UnitX())));
   }
 
   /* ************************************************************************* */
+  Rot3 Rot3::normalized() const {
+    return Rot3(quaternion_.normalized());
+  }
+  /* ************************************************************************* */
   Rot3 Rot3::operator*(const Rot3& R2) const {
     return Rot3(quaternion_ * R2.quaternion_);
   }
--- gtsam-4.1.0.orig/gtsam/geometry/SOn-inl.h
+++ gtsam-4.1.0/gtsam/geometry/SOn-inl.h
@@ -22,8 +22,6 @@
 
 #include <iostream>
 
-using namespace std;
-
 namespace gtsam {
 
 // Implementation for N>=5 just uses dynamic version
@@ -108,7 +106,7 @@ typename SO<N>::VectorN2 SO<N>::vec(
 
 template <int N>
 void SO<N>::print(const std::string& s) const {
-    cout << s << matrix_ << endl;
+    std::cout << s << matrix_ << std::endl;
 }
 
 }  // namespace gtsam
--- /dev/null
+++ gtsam-4.1.0/gtsam/geometry/Similarity3.cpp
@@ -0,0 +1,295 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * @file   Similarity3.cpp
+ * @brief  Implementation of Similarity3 transform
+ * @author Paul Drews
+ * @author John Lambert
+ */
+
+#include <gtsam/geometry/Similarity3.h>
+
+#include <gtsam/geometry/Pose3.h>
+#include <gtsam/base/Manifold.h>
+#include <gtsam/slam/KarcherMeanFactor-inl.h>
+
+namespace gtsam {
+
+using std::vector;
+
+namespace {
+/// Subtract centroids from point pairs.
+static Point3Pairs subtractCentroids(const Point3Pairs &abPointPairs,
+                                    const Point3Pair &centroids) {
+  Point3Pairs d_abPointPairs;
+  for (const Point3Pair& abPair : abPointPairs) {
+    Point3 da = abPair.first - centroids.first;
+    Point3 db = abPair.second - centroids.second;
+    d_abPointPairs.emplace_back(da, db);
+  }
+  return d_abPointPairs;
+}
+
+/// Form inner products x and y and calculate scale.
+static const double calculateScale(const Point3Pairs &d_abPointPairs,
+                                   const Rot3 &aRb) {
+  double x = 0, y = 0;
+  Point3 da, db;
+  for (const Point3Pair& d_abPair : d_abPointPairs) {
+    std::tie(da, db) = d_abPair;
+    const Vector3 da_prime = aRb * db;
+    y += da.transpose() * da_prime;
+    x += da_prime.transpose() * da_prime;
+  }
+  const double s = y / x;
+  return s;
+}
+
+/// Form outer product H.
+static Matrix3 calculateH(const Point3Pairs &d_abPointPairs) {
+  Matrix3 H = Z_3x3;
+  for (const Point3Pair& d_abPair : d_abPointPairs) {
+    H += d_abPair.first * d_abPair.second.transpose();
+  }
+  return H;
+}
+
+/// This method estimates the similarity transform from differences point pairs,
+// given a known or estimated rotation and point centroids.
+static Similarity3 align(const Point3Pairs &d_abPointPairs, const Rot3 &aRb,
+                         const Point3Pair &centroids) {
+  const double s = calculateScale(d_abPointPairs, aRb);
+  // dividing aTb by s is required because the registration cost function
+  // minimizes ||a - sRb - t||, whereas Sim(3) computes s(Rb + t)
+  const Point3 aTb = (centroids.first - s * (aRb * centroids.second)) / s;
+  return Similarity3(aRb, aTb, s);
+}
+
+/// This method estimates the similarity transform from point pairs, given a known or estimated rotation.
+// Refer to: http://www5.informatik.uni-erlangen.de/Forschung/Publikationen/2005/Zinsser05-PSR.pdf Chapter 3
+static Similarity3 alignGivenR(const Point3Pairs &abPointPairs,
+                               const Rot3 &aRb) {
+  auto centroids = means(abPointPairs);
+  auto d_abPointPairs = subtractCentroids(abPointPairs, centroids);
+  return align(d_abPointPairs, aRb, centroids);
+}
+}  // namespace
+
+Similarity3::Similarity3() :
+    t_(0,0,0), s_(1) {
+}
+
+Similarity3::Similarity3(double s) :
+    t_(0,0,0), s_(s) {
+}
+
+Similarity3::Similarity3(const Rot3& R, const Point3& t, double s) :
+    R_(R), t_(t), s_(s) {
+}
+
+Similarity3::Similarity3(const Matrix3& R, const Vector3& t, double s) :
+    R_(R), t_(t), s_(s) {
+}
+
+Similarity3::Similarity3(const Matrix4& T) :
+    R_(T.topLeftCorner<3, 3>()), t_(T.topRightCorner<3, 1>()), s_(1.0 / T(3, 3)) {
+}
+
+bool Similarity3::equals(const Similarity3& other, double tol) const {
+  return R_.equals(other.R_, tol) && traits<Point3>::Equals(t_, other.t_, tol)
+      && s_ < (other.s_ + tol) && s_ > (other.s_ - tol);
+}
+
+bool Similarity3::operator==(const Similarity3& other) const {
+  return R_.matrix() == other.R_.matrix() && t_ == other.t_ && s_ == other.s_;
+}
+
+void Similarity3::print(const std::string& s) const {
+  std::cout << std::endl;
+  std::cout << s;
+  rotation().print("\nR:\n");
+  std::cout << "t: " << translation().transpose() << " s: " << scale() << std::endl;
+}
+
+Similarity3 Similarity3::identity() {
+  return Similarity3();
+}
+Similarity3 Similarity3::operator*(const Similarity3& S) const {
+  return Similarity3(R_ * S.R_, ((1.0 / S.s_) * t_) + R_ * S.t_, s_ * S.s_);
+}
+
+Similarity3 Similarity3::inverse() const {
+  const Rot3 Rt = R_.inverse();
+  const Point3 sRt = Rt * (-s_ * t_);
+  return Similarity3(Rt, sRt, 1.0 / s_);
+}
+
+Point3 Similarity3::transformFrom(const Point3& p, //
+    OptionalJacobian<3, 7> H1, OptionalJacobian<3, 3> H2) const {
+  const Point3 q = R_ * p + t_;
+  if (H1) {
+    // For this derivative, see LieGroups.pdf
+    const Matrix3 sR = s_ * R_.matrix();
+    const Matrix3 DR = sR * skewSymmetric(-p.x(), -p.y(), -p.z());
+    *H1 << DR, sR, sR * p;
+  }
+  if (H2)
+    *H2 = s_ * R_.matrix(); // just 3*3 sub-block of matrix()
+  return s_ * q;
+}
+
+Pose3 Similarity3::transformFrom(const Pose3& T) const {
+  Rot3 R = R_.compose(T.rotation());
+  Point3 t = Point3(s_ * (R_ * T.translation() + t_));
+  return Pose3(R, t);
+}
+
+Point3 Similarity3::operator*(const Point3& p) const {
+  return transformFrom(p);
+}
+
+Similarity3 Similarity3::Align(const Point3Pairs &abPointPairs) {
+  // Refer to Chapter 3 of
+  // http://www5.informatik.uni-erlangen.de/Forschung/Publikationen/2005/Zinsser05-PSR.pdf
+  if (abPointPairs.size() < 3)
+    throw std::runtime_error("input should have at least 3 pairs of points");
+  auto centroids = means(abPointPairs);
+  auto d_abPointPairs = subtractCentroids(abPointPairs, centroids);
+  Matrix3 H = calculateH(d_abPointPairs);
+  // ClosestTo finds rotation matrix closest to H in Frobenius sense
+  Rot3 aRb = Rot3::ClosestTo(H);
+  return align(d_abPointPairs, aRb, centroids);
+}
+
+Similarity3 Similarity3::Align(const vector<Pose3Pair> &abPosePairs) {
+  const size_t n = abPosePairs.size();
+  if (n < 2)
+    throw std::runtime_error("input should have at least 2 pairs of poses");
+
+  // calculate rotation
+  vector<Rot3> rotations;
+  Point3Pairs abPointPairs;
+  rotations.reserve(n);
+  abPointPairs.reserve(n);
+  // Below denotes the pose of the i'th object/camera/etc in frame "a" or frame "b"
+  Pose3 aTi, bTi;
+  for (const Pose3Pair &abPair : abPosePairs) {
+    std::tie(aTi, bTi) = abPair;
+    const Rot3 aRb = aTi.rotation().compose(bTi.rotation().inverse());
+    rotations.emplace_back(aRb);
+    abPointPairs.emplace_back(aTi.translation(), bTi.translation());
+  }
+  const Rot3 aRb_estimate = FindKarcherMean<Rot3>(rotations);
+
+  return alignGivenR(abPointPairs, aRb_estimate);
+}
+
+Matrix4 Similarity3::wedge(const Vector7 &xi) {
+  // http://www.ethaneade.org/latex2html/lie/node29.html
+  const auto w = xi.head<3>();
+  const auto u = xi.segment<3>(3);
+  const double lambda = xi[6];
+  Matrix4 W;
+  W << skewSymmetric(w), u, 0, 0, 0, -lambda;
+  return W;
+}
+
+Matrix7 Similarity3::AdjointMap() const {
+  // http://www.ethaneade.org/latex2html/lie/node30.html
+  const Matrix3 R = R_.matrix();
+  const Vector3 t = t_;
+  const Matrix3 A = s_ * skewSymmetric(t) * R;
+  Matrix7 adj;
+  adj << R, Z_3x3, Matrix31::Zero(), // 3*7
+  A, s_ * R, -s_ * t, // 3*7
+  Matrix16::Zero(), 1; // 1*7
+  return adj;
+}
+
+Matrix3 Similarity3::GetV(Vector3 w, double lambda) {
+  // http://www.ethaneade.org/latex2html/lie/node29.html
+  const double theta2 = w.transpose() * w;
+  double Y, Z, W;
+  if (theta2 > 1e-9) {
+    const double theta = sqrt(theta2);
+    const double X = sin(theta) / theta;
+    Y = (1 - cos(theta)) / theta2;
+    Z = (1 - X) / theta2;
+    W = (0.5 - Y) / theta2;
+  } else {
+    // Taylor series expansion for theta=0, X not needed (as is 1)
+    Y = 0.5 - theta2 / 24.0;
+    Z = 1.0 / 6.0 - theta2 / 120.0;
+    W = 1.0 / 24.0 - theta2 / 720.0;
+  }
+  const double lambda2 = lambda * lambda, lambda3 = lambda2 * lambda;
+  const double expMinLambda = exp(-lambda);
+  double A, alpha = 0.0, beta, mu;
+  if (lambda2 > 1e-9) {
+    A = (1.0 - expMinLambda) / lambda;
+    alpha = 1.0 / (1.0 + theta2 / lambda2);
+    beta = (expMinLambda - 1 + lambda) / lambda2;
+    mu = (1 - lambda + (0.5 * lambda2) - expMinLambda) / lambda3;
+  } else {
+    A = 1.0 - lambda / 2.0 + lambda2 / 6.0;
+    beta = 0.5 - lambda / 6.0 + lambda2 / 24.0 - lambda3 / 120.0;
+    mu = 1.0 / 6.0 - lambda / 24.0 + lambda2 / 120.0 - lambda3 / 720.0;
+  }
+  const double gamma = Y - (lambda * Z), upsilon = Z - (lambda * W);
+  const double B = alpha * (beta - gamma) + gamma;
+  const double C = alpha * (mu - upsilon) + upsilon;
+  const Matrix3 Wx = skewSymmetric(w[0], w[1], w[2]);
+  return A * I_3x3 + B * Wx + C * Wx * Wx;
+}
+
+Vector7 Similarity3::Logmap(const Similarity3& T, OptionalJacobian<7, 7> Hm) {
+  // To get the logmap, calculate w and lambda, then solve for u as shown by Ethan at
+  // www.ethaneade.org/latex2html/lie/node29.html
+  const Vector3 w = Rot3::Logmap(T.R_);
+  const double lambda = log(T.s_);
+  Vector7 result;
+  result << w, GetV(w, lambda).inverse() * T.t_, lambda;
+  if (Hm) {
+    throw std::runtime_error("Similarity3::Logmap: derivative not implemented");
+  }
+  return result;
+}
+
+Similarity3 Similarity3::Expmap(const Vector7& v, OptionalJacobian<7, 7> Hm) {
+  const auto w = v.head<3>();
+  const auto u = v.segment<3>(3);
+  const double lambda = v[6];
+  if (Hm) {
+    throw std::runtime_error("Similarity3::Expmap: derivative not implemented");
+  }
+  const Matrix3 V = GetV(w, lambda);
+  return Similarity3(Rot3::Expmap(w), Point3(V * u), exp(lambda));
+}
+
+std::ostream &operator<<(std::ostream &os, const Similarity3& p) {
+  os << "[" << p.rotation().xyz().transpose() << " "
+      << p.translation().transpose() << " " << p.scale() << "]\';";
+  return os;
+}
+
+const Matrix4 Similarity3::matrix() const {
+  Matrix4 T;
+  T.topRows<3>() << R_.matrix(), t_;
+  T.bottomRows<1>() << 0, 0, 0, 1.0 / s_;
+  return T;
+}
+
+Similarity3::operator Pose3() const {
+  return Pose3(R_, s_ * t_);
+}
+
+} // namespace gtsam
--- /dev/null
+++ gtsam-4.1.0/gtsam/geometry/Similarity3.h
@@ -0,0 +1,236 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * @file   Similarity3.h
+ * @brief  Implementation of Similarity3 transform
+ * @author Paul Drews
+ * @author John Lambert
+ */
+
+#pragma once
+
+#include <gtsam/geometry/Rot3.h>
+#include <gtsam/geometry/Point3.h>
+#include <gtsam/geometry/Pose3.h>
+#include <gtsam/base/Lie.h>
+#include <gtsam/base/Manifold.h>
+#include <gtsam/dllexport.h>
+
+
+namespace gtsam {
+
+// Forward declarations
+class Pose3;
+
+/**
+ * 3D similarity transform
+ */
+class Similarity3: public LieGroup<Similarity3, 7> {
+
+  /// @name Pose Concept
+  /// @{
+  typedef Rot3 Rotation;
+  typedef Point3 Translation;
+  /// @}
+
+private:
+  Rot3 R_;
+  Point3 t_;
+  double s_;
+
+public:
+
+  /// @name Constructors
+  /// @{
+
+  /// Default constructor
+  GTSAM_EXPORT Similarity3();
+
+  /// Construct pure scaling
+  GTSAM_EXPORT Similarity3(double s);
+
+  /// Construct from GTSAM types
+  GTSAM_EXPORT Similarity3(const Rot3& R, const Point3& t, double s);
+
+  /// Construct from Eigen types
+  GTSAM_EXPORT Similarity3(const Matrix3& R, const Vector3& t, double s);
+
+  /// Construct from matrix [R t; 0 s^-1]
+  GTSAM_EXPORT Similarity3(const Matrix4& T);
+
+  /// @}
+  /// @name Testable
+  /// @{
+
+  /// Compare with tolerance
+  GTSAM_EXPORT bool equals(const Similarity3& sim, double tol) const;
+
+  /// Exact equality
+  GTSAM_EXPORT bool operator==(const Similarity3& other) const;
+
+  /// Print with optional string
+  GTSAM_EXPORT void print(const std::string& s) const;
+
+  GTSAM_EXPORT friend std::ostream &operator<<(std::ostream &os, const Similarity3& p);
+
+  /// @}
+  /// @name Group
+  /// @{
+
+  /// Return an identity transform
+  GTSAM_EXPORT static Similarity3 identity();
+
+  /// Composition
+  GTSAM_EXPORT Similarity3 operator*(const Similarity3& S) const;
+
+  /// Return the inverse
+  GTSAM_EXPORT Similarity3 inverse() const;
+
+  /// @}
+  /// @name Group action on Point3
+  /// @{
+
+  /// Action on a point p is s*(R*p+t)
+  GTSAM_EXPORT Point3 transformFrom(const Point3& p, //
+      OptionalJacobian<3, 7> H1 = boost::none, //
+      OptionalJacobian<3, 3> H2 = boost::none) const;
+
+  /** 
+   * Action on a pose T.
+   * |Rs  ts|   |R t|   |Rs*R Rs*t+ts| 
+   * |0  1/s| * |0 1| = | 0      1/s |, the result is still a Sim3 object.
+   * To retrieve a Pose3, we normalized the scale value into 1.
+   * |Rs*R Rs*t+ts|   |Rs*R s(Rs*t+ts)|
+   * | 0      1/s | = |  0       1    |
+   * 
+   * This group action satisfies the compatibility condition. 
+   * For more details, refer to: https://en.wikipedia.org/wiki/Group_action
+   */
+  GTSAM_EXPORT Pose3 transformFrom(const Pose3& T) const;
+
+  /** syntactic sugar for transformFrom */
+  GTSAM_EXPORT Point3 operator*(const Point3& p) const;
+
+  /**
+   *  Create Similarity3 by aligning at least three point pairs
+   */
+  GTSAM_EXPORT static Similarity3 Align(const std::vector<Point3Pair>& abPointPairs);
+  
+  /**
+   * Create the Similarity3 object that aligns at least two pose pairs.
+   * Each pair is of the form (aTi, bTi).
+   * Given a list of pairs in frame a, and a list of pairs in frame b, Align()
+   * will compute the best-fit Similarity3 aSb transformation to align them.
+   * First, the rotation aRb will be computed as the average (Karcher mean) of
+   * many estimates aRb (from each pair). Afterwards, the scale factor will be computed
+   * using the algorithm described here:
+   * http://www5.informatik.uni-erlangen.de/Forschung/Publikationen/2005/Zinsser05-PSR.pdf
+   */
+  GTSAM_EXPORT static Similarity3 Align(const std::vector<Pose3Pair>& abPosePairs);
+
+  /// @}
+  /// @name Lie Group
+  /// @{
+
+  /** Log map at the identity
+   * \f$ [R_x,R_y,R_z, t_x, t_y, t_z, \lambda] \f$
+   */
+  GTSAM_EXPORT static Vector7 Logmap(const Similarity3& s, //
+      OptionalJacobian<7, 7> Hm = boost::none);
+
+  /** Exponential map at the identity
+   */
+  GTSAM_EXPORT static Similarity3 Expmap(const Vector7& v, //
+      OptionalJacobian<7, 7> Hm = boost::none);
+
+  /// Chart at the origin
+  struct ChartAtOrigin {
+    static Similarity3 Retract(const Vector7& v, ChartJacobian H = boost::none) {
+      return Similarity3::Expmap(v, H);
+    }
+    static Vector7 Local(const Similarity3& other, ChartJacobian H = boost::none) {
+      return Similarity3::Logmap(other, H);
+    }
+  };
+
+  using LieGroup<Similarity3, 7>::inverse;
+
+  /**
+   * wedge for Similarity3:
+   * @param xi 7-dim twist (w,u,lambda) where
+   * @return 4*4 element of Lie algebra that can be exponentiated
+   * TODO(frank): rename to Hat, make part of traits
+   */
+  GTSAM_EXPORT static Matrix4 wedge(const Vector7& xi);
+
+  /// Project from one tangent space to another
+  GTSAM_EXPORT  Matrix7 AdjointMap() const;
+
+  /// @}
+  /// @name Standard interface
+  /// @{
+
+  /// Calculate 4*4 matrix group equivalent
+  GTSAM_EXPORT const Matrix4 matrix() const;
+
+  /// Return a GTSAM rotation
+  const Rot3& rotation() const {
+    return R_;
+  }
+
+  /// Return a GTSAM translation
+  const Point3& translation() const {
+    return t_;
+  }
+
+  /// Return the scale
+  double scale() const {
+    return s_;
+  }
+
+  /// Convert to a rigid body pose (R, s*t)
+  /// TODO(frank): why is this here? Red flag! Definitely don't have it as a cast.
+  GTSAM_EXPORT operator Pose3() const;
+
+  /// Dimensionality of tangent space = 7 DOF - used to autodetect sizes
+  inline static size_t Dim() {
+    return 7;
+  }
+
+  /// Dimensionality of tangent space = 7 DOF
+  inline size_t dim() const {
+    return 7;
+  }
+
+  /// @}
+  /// @name Helper functions
+  /// @{
+
+private:
+  /// Calculate expmap and logmap coefficients.
+  static Matrix3 GetV(Vector3 w, double lambda);
+
+  /// @}
+};
+
+template<>
+inline Matrix wedge<Similarity3>(const Vector& xi) {
+  return Similarity3::wedge(xi);
+}
+
+template<>
+struct traits<Similarity3> : public internal::LieGroup<Similarity3> {};
+
+template<>
+struct traits<const Similarity3> : public internal::LieGroup<Similarity3> {};
+
+} // namespace gtsam
--- gtsam-4.1.0.orig/gtsam/geometry/SimpleCamera.cpp
+++ gtsam-4.1.0/gtsam/geometry/SimpleCamera.cpp
@@ -21,6 +21,7 @@
 
 namespace gtsam {
 
+#ifdef GTSAM_ALLOW_DEPRECATED_SINCE_V41
   SimpleCamera simpleCamera(const Matrix34& P) {
 
     // P = [A|a] = s K cRw [I|-T], with s the unknown scale
@@ -45,5 +46,6 @@ namespace gtsam {
     return SimpleCamera(Pose3(wRc, T),
         Cal3_S2(K(0, 0), K(1, 1), K(0, 1), K(0, 2), K(1, 2)));
   }
+#endif
 
 }
--- gtsam-4.1.0.orig/gtsam/geometry/SimpleCamera.h
+++ gtsam-4.1.0/gtsam/geometry/SimpleCamera.h
@@ -19,14 +19,22 @@
 #pragma once
 
 #include <gtsam/geometry/BearingRange.h>
-#include <gtsam/geometry/PinholeCamera.h>
+#include <gtsam/geometry/Cal3Bundler.h>
+#include <gtsam/geometry/Cal3DS2.h>
+#include <gtsam/geometry/Cal3Unified.h>
 #include <gtsam/geometry/Cal3_S2.h>
+#include <gtsam/geometry/PinholeCamera.h>
 
 namespace gtsam {
 
-  /// A simple camera class with a Cal3_S2 calibration
-typedef gtsam::PinholeCamera<gtsam::Cal3_S2> PinholeCameraCal3_S2;
+  /// Convenient aliases for Pinhole camera classes with different calibrations.
+  /// Also needed as forward declarations in the wrapper.
+  using PinholeCameraCal3_S2 = gtsam::PinholeCamera<gtsam::Cal3_S2>;
+  using PinholeCameraCal3Bundler = gtsam::PinholeCamera<gtsam::Cal3Bundler>;
+  using PinholeCameraCal3DS2 = gtsam::PinholeCamera<gtsam::Cal3DS2>;
+  using PinholeCameraCal3Unified = gtsam::PinholeCamera<gtsam::Cal3Unified>;
 
+#ifdef GTSAM_ALLOW_DEPRECATED_SINCE_V41
 /**
  * @deprecated: SimpleCamera for backwards compatability with GTSAM 3.x
  * Use PinholeCameraCal3_S2 instead
@@ -140,4 +148,6 @@ struct traits<const SimpleCamera> : publ
 template <typename T>
 struct Range<SimpleCamera, T> : HasRange<SimpleCamera, T, double> {};
 
+#endif
+
 }  // namespace gtsam
--- gtsam-4.1.0.orig/gtsam/geometry/tests/testCal3Bundler.cpp
+++ gtsam-4.1.0/gtsam/geometry/tests/testCal3Bundler.cpp
@@ -11,11 +11,12 @@
 
 /**
  * @file  testCal3Bundler.cpp
- * @brief Unit tests for transform derivatives
+ * @brief Unit tests for Bundler calibration model.
  */
 
 #include <CppUnitLite/TestHarness.h>
 #include <gtsam/base/Testable.h>
+#include <gtsam/base/TestableAssertions.h>
 #include <gtsam/base/numericalDerivative.h>
 #include <gtsam/geometry/Cal3Bundler.h>
 
@@ -25,74 +26,98 @@ GTSAM_CONCEPT_TESTABLE_INST(Cal3Bundler)
 GTSAM_CONCEPT_MANIFOLD_INST(Cal3Bundler)
 
 static Cal3Bundler K(500, 1e-3, 1e-3, 1000, 2000);
-static Point2 p(2,3);
+static Point2 p(2, 3);
 
 /* ************************************************************************* */
-TEST( Cal3Bundler, vector)
-{
+TEST(Cal3Bundler, vector) {
   Cal3Bundler K;
   Vector expected(3);
   expected << 1, 0, 0;
-  CHECK(assert_equal(expected,K.vector()));
+  CHECK(assert_equal(expected, K.vector()));
 }
 
 /* ************************************************************************* */
-TEST( Cal3Bundler, uncalibrate)
-{
-  Vector v = K.vector() ;
-  double r = p.x()*p.x() + p.y()*p.y() ;
-  double g = v[0]*(1+v[1]*r+v[2]*r*r) ;
-  Point2 expected (1000+g*p.x(), 2000+g*p.y()) ;
+TEST(Cal3Bundler, uncalibrate) {
+  Vector v = K.vector();
+  double r = p.x() * p.x() + p.y() * p.y();
+  double g = v[0] * (1 + v[1] * r + v[2] * r * r);
+  Point2 expected(1000 + g * p.x(), 2000 + g * p.y());
   Point2 actual = K.uncalibrate(p);
-  CHECK(assert_equal(expected,actual));
+  CHECK(assert_equal(expected, actual));
 }
 
-TEST( Cal3Bundler, calibrate )
-{
+TEST(Cal3Bundler, calibrate) {
   Point2 pn(0.5, 0.5);
   Point2 pi = K.uncalibrate(pn);
   Point2 pn_hat = K.calibrate(pi);
-  CHECK( traits<Point2>::Equals(pn, pn_hat, 1e-5));
+  CHECK(traits<Point2>::Equals(pn, pn_hat, 1e-5));
 }
 
 /* ************************************************************************* */
-Point2 uncalibrate_(const Cal3Bundler& k, const Point2& pt) { return k.uncalibrate(pt); }
+Point2 uncalibrate_(const Cal3Bundler& k, const Point2& pt) {
+  return k.uncalibrate(pt);
+}
+
+Point2 calibrate_(const Cal3Bundler& k, const Point2& pt) {
+  return k.calibrate(pt);
+}
 
 /* ************************************************************************* */
-TEST( Cal3Bundler, Duncalibrate)
-{
+TEST(Cal3Bundler, Duncalibrate) {
   Matrix Dcal, Dp;
   Point2 actual = K.uncalibrate(p, Dcal, Dp);
   Point2 expected(2182, 3773);
-  CHECK(assert_equal(expected,actual,1e-7));
+  CHECK(assert_equal(expected, actual, 1e-7));
   Matrix numerical1 = numericalDerivative21(uncalibrate_, K, p);
   Matrix numerical2 = numericalDerivative22(uncalibrate_, K, p);
-  CHECK(assert_equal(numerical1,Dcal,1e-7));
-  CHECK(assert_equal(numerical2,Dp,1e-7));
-  CHECK(assert_equal(numerical1,K.D2d_calibration(p),1e-7));
-  CHECK(assert_equal(numerical2,K.D2d_intrinsic(p),1e-7));
-  Matrix Dcombined(2,5);
-  Dcombined << Dp, Dcal;
-  CHECK(assert_equal(Dcombined,K.D2d_intrinsic_calibration(p),1e-7));
+  CHECK(assert_equal(numerical1, Dcal, 1e-7));
+  CHECK(assert_equal(numerical2, Dp, 1e-7));
 }
 
 /* ************************************************************************* */
-TEST( Cal3Bundler, assert_equal)
-{
-  CHECK(assert_equal(K,K,1e-7));
+TEST(Cal3Bundler, Dcalibrate) {
+  Matrix Dcal, Dp;
+  Point2 pn(0.5, 0.5);
+  Point2 pi = K.uncalibrate(pn);
+  Point2 actual = K.calibrate(pi, Dcal, Dp);
+  CHECK(assert_equal(pn, actual, 1e-7));
+  Matrix numerical1 = numericalDerivative21(calibrate_, K, pi);
+  Matrix numerical2 = numericalDerivative22(calibrate_, K, pi);
+  CHECK(assert_equal(numerical1, Dcal, 1e-5));
+  CHECK(assert_equal(numerical2, Dp, 1e-5));
 }
 
 /* ************************************************************************* */
-TEST( Cal3Bundler, retract)
-{
+TEST(Cal3Bundler, assert_equal) { CHECK(assert_equal(K, K, 1e-7)); }
+
+/* ************************************************************************* */
+TEST(Cal3Bundler, retract) {
   Cal3Bundler expected(510, 2e-3, 2e-3, 1000, 2000);
-  Vector d(3);
+  EXPECT_LONGS_EQUAL(3, expected.dim());
+
+  EXPECT_LONGS_EQUAL(Cal3Bundler::Dim(), 3);
+  EXPECT_LONGS_EQUAL(expected.dim(), 3);
+
+  Vector3 d;
   d << 10, 1e-3, 1e-3;
   Cal3Bundler actual = K.retract(d);
-  CHECK(assert_equal(expected,actual,1e-7));
-  CHECK(assert_equal(d,K.localCoordinates(actual),1e-7));
+  CHECK(assert_equal(expected, actual, 1e-7));
+  CHECK(assert_equal(d, K.localCoordinates(actual), 1e-7));
 }
 
 /* ************************************************************************* */
-int main() { TestResult tr; return TestRegistry::runAllTests(tr); }
+TEST(Cal3_S2, Print) {
+  Cal3Bundler cal(1, 2, 3, 4, 5);
+  std::stringstream os;
+  os << "f: " << cal.fx() << ", k1: " << cal.k1() << ", k2: " << cal.k2()
+     << ", px: " << cal.px() << ", py: " << cal.py();
+
+  EXPECT(assert_stdout_equal(os.str(), cal));
+}
+
+/* ************************************************************************* */
+int main() {
+  TestResult tr;
+  return TestRegistry::runAllTests(tr);
+}
 /* ************************************************************************* */
--- gtsam-4.1.0.orig/gtsam/geometry/tests/testCal3DFisheye.cpp
+++ gtsam-4.1.0/gtsam/geometry/tests/testCal3DFisheye.cpp
@@ -10,12 +10,13 @@
  * -------------------------------------------------------------------------- */
 
 /**
- * @file  testCal3DFisheye.cpp
+ * @file  testCal3Fisheye.cpp
  * @brief Unit tests for fisheye calibration class
  * @author ghaggin
  */
 
 #include <gtsam/base/Testable.h>
+#include <gtsam/base/TestableAssertions.h>
 #include <gtsam/base/numericalDerivative.h>
 #include <gtsam/geometry/Cal3Fisheye.h>
 #include <gtsam/geometry/Point3.h>
@@ -41,7 +42,11 @@ TEST(Cal3Fisheye, retract) {
   Cal3Fisheye expected(K.fx() + 1, K.fy() + 2, K.skew() + 3, K.px() + 4,
                        K.py() + 5, K.k1() + 6, K.k2() + 7, K.k3() + 8,
                        K.k4() + 9);
-  Vector d(9);
+
+  EXPECT_LONGS_EQUAL(Cal3Fisheye::Dim(), 9);
+  EXPECT_LONGS_EQUAL(expected.dim(), 9);
+
+  Vector9 d;
   d << 1, 2, 3, 4, 5, 6, 7, 8, 9;
   Cal3Fisheye actual = K.retract(d);
   CHECK(assert_equal(expected, actual, 1e-7));
@@ -181,6 +186,33 @@ TEST(Cal3Fisheye, calibrate3) {
   CHECK(assert_equal(xi_hat, xi));
 }
 
+Point2 calibrate_(const Cal3Fisheye& k, const Point2& pt) {
+  return k.calibrate(pt);
+}
+
+/* ************************************************************************* */
+TEST(Cal3Fisheye, Dcalibrate) {
+  Point2 p(0.5, 0.5);
+  Point2 pi = K.uncalibrate(p);
+  Matrix Dcal, Dp;
+  K.calibrate(pi, Dcal, Dp);
+  Matrix numerical1 = numericalDerivative21(calibrate_, K, pi);
+  CHECK(assert_equal(numerical1, Dcal, 1e-5));
+  Matrix numerical2 = numericalDerivative22(calibrate_, K, pi);
+  CHECK(assert_equal(numerical2, Dp, 1e-5));
+}
+
+/* ************************************************************************* */
+TEST(Cal3Fisheye, Print) {
+  Cal3Fisheye cal(1, 2, 3, 4, 5, 6, 7, 8, 9);
+  std::stringstream os;
+  os << "fx: " << cal.fx() << ", fy: " << cal.fy() << ", s: " << cal.skew()
+     << ", px: " << cal.px() << ", py: " << cal.py() << ", k1: " << cal.k1()
+     << ", k2: " << cal.k2() << ", k3: " << cal.k3() << ", k4: " << cal.k4();
+
+  EXPECT(assert_stdout_equal(os.str(), cal));
+}
+
 /* ************************************************************************* */
 int main() {
   TestResult tr;
--- gtsam-4.1.0.orig/gtsam/geometry/tests/testCal3DS2.cpp
+++ gtsam-4.1.0/gtsam/geometry/tests/testCal3DS2.cpp
@@ -11,12 +11,12 @@
 
 /**
  * @file  testCal3DS2.cpp
- * @brief Unit tests for transform derivatives
+ * @brief Unit tests for Cal3DS2 calibration model.
  */
 
-
 #include <CppUnitLite/TestHarness.h>
 #include <gtsam/base/Testable.h>
+#include <gtsam/base/TestableAssertions.h>
 #include <gtsam/base/numericalDerivative.h>
 #include <gtsam/geometry/Cal3DS2.h>
 
@@ -25,73 +25,103 @@ using namespace gtsam;
 GTSAM_CONCEPT_TESTABLE_INST(Cal3DS2)
 GTSAM_CONCEPT_MANIFOLD_INST(Cal3DS2)
 
-static Cal3DS2 K(500, 100, 0.1, 320, 240, 1e-3, 2.0*1e-3, 3.0*1e-3, 4.0*1e-3);
-static Point2 p(2,3);
+static Cal3DS2 K(500, 100, 0.1, 320, 240, 1e-3, 2.0 * 1e-3, 3.0 * 1e-3,
+                 4.0 * 1e-3);
+static Point2 p(2, 3);
 
 /* ************************************************************************* */
-TEST( Cal3DS2, uncalibrate)
-{
-  Vector k = K.k() ;
-  double r = p.x()*p.x() + p.y()*p.y() ;
-  double g = 1+k[0]*r+k[1]*r*r ;
-  double tx = 2*k[2]*p.x()*p.y()       +   k[3]*(r+2*p.x()*p.x()) ;
-  double ty =   k[2]*(r+2*p.y()*p.y()) + 2*k[3]*p.x()*p.y() ;
-  Vector v_hat = (Vector(3) << g*p.x() + tx, g*p.y() + ty, 1.0).finished();
-  Vector v_i = K.K() * v_hat ;
-  Point2 p_i(v_i(0)/v_i(2), v_i(1)/v_i(2)) ;
+TEST(Cal3DS2, Uncalibrate) {
+  Vector k = K.k();
+  double r = p.x() * p.x() + p.y() * p.y();
+  double g = 1 + k[0] * r + k[1] * r * r;
+  double tx = 2 * k[2] * p.x() * p.y() + k[3] * (r + 2 * p.x() * p.x());
+  double ty = k[2] * (r + 2 * p.y() * p.y()) + 2 * k[3] * p.x() * p.y();
+  Vector v_hat = (Vector(3) << g * p.x() + tx, g * p.y() + ty, 1.0).finished();
+  Vector v_i = K.K() * v_hat;
+  Point2 p_i(v_i(0) / v_i(2), v_i(1) / v_i(2));
   Point2 q = K.uncalibrate(p);
-  CHECK(assert_equal(q,p_i));
+  CHECK(assert_equal(q, p_i));
 }
 
-TEST( Cal3DS2, calibrate )
-{
+TEST(Cal3DS2, Calibrate) {
   Point2 pn(0.5, 0.5);
   Point2 pi = K.uncalibrate(pn);
   Point2 pn_hat = K.calibrate(pi);
-  CHECK( traits<Point2>::Equals(pn, pn_hat, 1e-5));
+  CHECK(traits<Point2>::Equals(pn, pn_hat, 1e-5));
 }
 
-Point2 uncalibrate_(const Cal3DS2& k, const Point2& pt) { return k.uncalibrate(pt); }
+Point2 uncalibrate_(const Cal3DS2& k, const Point2& pt) {
+  return k.uncalibrate(pt);
+}
 
 /* ************************************************************************* */
-TEST( Cal3DS2, Duncalibrate1)
-{
+TEST(Cal3DS2, Duncalibrate1) {
   Matrix computed;
   K.uncalibrate(p, computed, boost::none);
   Matrix numerical = numericalDerivative21(uncalibrate_, K, p, 1e-7);
-  CHECK(assert_equal(numerical,computed,1e-5));
+  CHECK(assert_equal(numerical, computed, 1e-5));
   Matrix separate = K.D2d_calibration(p);
-  CHECK(assert_equal(numerical,separate,1e-5));
+  CHECK(assert_equal(numerical, separate, 1e-5));
 }
 
 /* ************************************************************************* */
-TEST( Cal3DS2, Duncalibrate2)
-{
-  Matrix computed; K.uncalibrate(p, boost::none, computed);
+TEST(Cal3DS2, Duncalibrate2) {
+  Matrix computed;
+  K.uncalibrate(p, boost::none, computed);
   Matrix numerical = numericalDerivative22(uncalibrate_, K, p, 1e-7);
-  CHECK(assert_equal(numerical,computed,1e-5));
+  CHECK(assert_equal(numerical, computed, 1e-5));
   Matrix separate = K.D2d_intrinsic(p);
-  CHECK(assert_equal(numerical,separate,1e-5));
+  CHECK(assert_equal(numerical, separate, 1e-5));
+}
+
+Point2 calibrate_(const Cal3DS2& k, const Point2& pt) {
+  return k.calibrate(pt);
 }
 
 /* ************************************************************************* */
-TEST( Cal3DS2, assert_equal)
-{
-  CHECK(assert_equal(K,K,1e-5));
+TEST(Cal3DS2, Dcalibrate) {
+  Point2 pn(0.5, 0.5);
+  Point2 pi = K.uncalibrate(pn);
+  Matrix Dcal, Dp;
+  K.calibrate(pi, Dcal, Dp);
+  Matrix numerical1 = numericalDerivative21(calibrate_, K, pi, 1e-7);
+  CHECK(assert_equal(numerical1, Dcal, 1e-5));
+  Matrix numerical2 = numericalDerivative22(calibrate_, K, pi, 1e-7);
+  CHECK(assert_equal(numerical2, Dp, 1e-5));
 }
 
 /* ************************************************************************* */
-TEST( Cal3DS2, retract)
-{
+TEST(Cal3DS2, Equal) { CHECK(assert_equal(K, K, 1e-5)); }
+
+/* ************************************************************************* */
+TEST(Cal3DS2, Retract) {
   Cal3DS2 expected(500 + 1, 100 + 2, 0.1 + 3, 320 + 4, 240 + 5, 1e-3 + 6,
-      2.0 * 1e-3 + 7, 3.0 * 1e-3 + 8, 4.0 * 1e-3 + 9);
-  Vector d(9);
-  d << 1,2,3,4,5,6,7,8,9;
+                   2.0 * 1e-3 + 7, 3.0 * 1e-3 + 8, 4.0 * 1e-3 + 9);
+
+  EXPECT_LONGS_EQUAL(Cal3DS2::Dim(), 9);
+  EXPECT_LONGS_EQUAL(expected.dim(), 9);
+
+  Vector9 d;
+  d << 1, 2, 3, 4, 5, 6, 7, 8, 9;
   Cal3DS2 actual = K.retract(d);
-  CHECK(assert_equal(expected,actual,1e-7));
-  CHECK(assert_equal(d,K.localCoordinates(actual),1e-7));
+  CHECK(assert_equal(expected, actual, 1e-7));
+  CHECK(assert_equal(d, K.localCoordinates(actual), 1e-7));
+}
+
+/* ************************************************************************* */
+TEST(Cal3DS2, Print) {
+  Cal3DS2 cal(1, 2, 3, 4, 5, 6, 7, 8, 9);
+  std::stringstream os;
+  os << "fx: " << cal.fx() << ", fy: " << cal.fy() << ", s: " << cal.skew()
+     << ", px: " << cal.px() << ", py: " << cal.py() << ", k1: " << cal.k1()
+     << ", k2: " << cal.k2() << ", p1: " << cal.p1() << ", p2: " << cal.p2();
+
+  EXPECT(assert_stdout_equal(os.str(), cal));
 }
 
 /* ************************************************************************* */
-int main() { TestResult tr; return TestRegistry::runAllTests(tr); }
+int main() {
+  TestResult tr;
+  return TestRegistry::runAllTests(tr);
+}
 /* ************************************************************************* */
--- gtsam-4.1.0.orig/gtsam/geometry/tests/testCal3Unified.cpp
+++ gtsam-4.1.0/gtsam/geometry/tests/testCal3Unified.cpp
@@ -10,17 +10,18 @@
  * -------------------------------------------------------------------------- */
 
 /**
- * @file  testCal3Unify.cpp
- * @brief Unit tests for transform derivatives
+ * @file  testCal3Unified.cpp
+ * @brief Unit tests for Cal3Unified calibration model.
  */
 
 #include <CppUnitLite/TestHarness.h>
 #include <gtsam/base/Testable.h>
+#include <gtsam/base/TestableAssertions.h>
 #include <gtsam/base/numericalDerivative.h>
 #include <gtsam/geometry/Cal3Unified.h>
 
-#include <gtsam/nonlinear/Values.h>
 #include <gtsam/inference/Key.h>
+#include <gtsam/nonlinear/Values.h>
 
 using namespace gtsam;
 
@@ -35,74 +36,87 @@ V = [0.1, 1e-3, 2.0*1e-3, 3.0*1e-3, 4.0*
 matlab toolbox available at http://homepages.laas.fr/~cmei/index.php/Toolbox
 */
 
-static Cal3Unified K(100, 105, 0.0, 320, 240, 1e-3, 2.0*1e-3, 3.0*1e-3, 4.0*1e-3, 0.1);
+static Cal3Unified K(100, 105, 0.0, 320, 240, 1e-3, 2.0 * 1e-3, 3.0 * 1e-3,
+                     4.0 * 1e-3, 0.1);
 static Point2 p(0.5, 0.7);
 
 /* ************************************************************************* */
-TEST( Cal3Unified, uncalibrate)
-{
-  Point2 p_i(364.7791831734982, 305.6677211952602) ;
+TEST(Cal3Unified, Uncalibrate) {
+  Point2 p_i(364.7791831734982, 305.6677211952602);
   Point2 q = K.uncalibrate(p);
-  CHECK(assert_equal(q,p_i));
+  CHECK(assert_equal(q, p_i));
 }
 
 /* ************************************************************************* */
-TEST( Cal3Unified, spaceNplane)
-{
+TEST(Cal3Unified, SpaceNplane) {
   Point2 q = K.spaceToNPlane(p);
   CHECK(assert_equal(Point2(0.441731600049497, 0.618424240069295), q));
   CHECK(assert_equal(p, K.nPlaneToSpace(q)));
 }
 
 /* ************************************************************************* */
-TEST( Cal3Unified, calibrate)
-{
+TEST(Cal3Unified, Calibrate) {
   Point2 pi = K.uncalibrate(p);
   Point2 pn_hat = K.calibrate(pi);
-  CHECK( traits<Point2>::Equals(p, pn_hat, 1e-8));
+  CHECK(traits<Point2>::Equals(p, pn_hat, 1e-8));
 }
 
-Point2 uncalibrate_(const Cal3Unified& k, const Point2& pt) { return k.uncalibrate(pt); }
+Point2 uncalibrate_(const Cal3Unified& k, const Point2& pt) {
+  return k.uncalibrate(pt);
+}
 
 /* ************************************************************************* */
-TEST( Cal3Unified, Duncalibrate1)
-{
+TEST(Cal3Unified, Duncalibrate1) {
   Matrix computed;
   K.uncalibrate(p, computed, boost::none);
   Matrix numerical = numericalDerivative21(uncalibrate_, K, p, 1e-7);
-  CHECK(assert_equal(numerical,computed,1e-6));
+  CHECK(assert_equal(numerical, computed, 1e-6));
 }
 
 /* ************************************************************************* */
-TEST( Cal3Unified, Duncalibrate2)
-{
+TEST(Cal3Unified, Duncalibrate2) {
   Matrix computed;
   K.uncalibrate(p, boost::none, computed);
   Matrix numerical = numericalDerivative22(uncalibrate_, K, p, 1e-7);
-  CHECK(assert_equal(numerical,computed,1e-6));
+  CHECK(assert_equal(numerical, computed, 1e-6));
+}
+
+Point2 calibrate_(const Cal3Unified& k, const Point2& pt) {
+  return k.calibrate(pt);
 }
 
 /* ************************************************************************* */
-TEST( Cal3Unified, assert_equal)
-{
-  CHECK(assert_equal(K,K,1e-9));
+TEST(Cal3Unified, Dcalibrate) {
+  Point2 pi = K.uncalibrate(p);
+  Matrix Dcal, Dp;
+  K.calibrate(pi, Dcal, Dp);
+  Matrix numerical1 = numericalDerivative21(calibrate_, K, pi);
+  CHECK(assert_equal(numerical1, Dcal, 1e-5));
+  Matrix numerical2 = numericalDerivative22(calibrate_, K, pi);
+  CHECK(assert_equal(numerical2, Dp, 1e-5));
 }
 
 /* ************************************************************************* */
-TEST( Cal3Unified, retract)
-{
-  Cal3Unified expected(100 + 2, 105 + 3, 0.0 + 4, 320 + 5, 240 + 6,
-      1e-3 + 7, 2.0*1e-3 + 8, 3.0*1e-3 + 9, 4.0*1e-3 + 10, 0.1 + 1);
-  Vector d(10);
+TEST(Cal3Unified, Equal) { CHECK(assert_equal(K, K, 1e-9)); }
+
+/* ************************************************************************* */
+TEST(Cal3Unified, Retract) {
+  Cal3Unified expected(100 + 2, 105 + 3, 0.0 + 4, 320 + 5, 240 + 6, 1e-3 + 7,
+                       2.0 * 1e-3 + 8, 3.0 * 1e-3 + 9, 4.0 * 1e-3 + 10,
+                       0.1 + 1);
+
+  EXPECT_LONGS_EQUAL(Cal3Unified::Dim(), 10);
+  EXPECT_LONGS_EQUAL(expected.dim(), 10);
+
+  Vector10 d;
   d << 2, 3, 4, 5, 6, 7, 8, 9, 10, 1;
   Cal3Unified actual = K.retract(d);
-  CHECK(assert_equal(expected,actual,1e-9));
-  CHECK(assert_equal(d,K.localCoordinates(actual),1e-9));
+  CHECK(assert_equal(expected, actual, 1e-9));
+  CHECK(assert_equal(d, K.localCoordinates(actual), 1e-9));
 }
 
 /* ************************************************************************* */
-TEST( Cal3Unified, DerivedValue)
-{
+TEST(Cal3Unified, DerivedValue) {
   Values values;
   Cal3Unified cal(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
   Key key = 1;
@@ -110,9 +124,24 @@ TEST( Cal3Unified, DerivedValue)
 
   Cal3Unified calafter = values.at<Cal3Unified>(key);
 
-  CHECK(assert_equal(cal,calafter,1e-9));
+  CHECK(assert_equal(cal, calafter, 1e-9));
 }
 
 /* ************************************************************************* */
-int main() { TestResult tr; return TestRegistry::runAllTests(tr); }
+TEST(Cal3Unified, Print) {
+  Cal3Unified cal(0, 1, 2, 3, 4, 5, 6, 7, 8, 9);
+  std::stringstream os;
+  os << "fx: " << cal.fx() << ", fy: " << cal.fy() << ", s: " << cal.skew()
+     << ", px: " << cal.px() << ", py: " << cal.py() << ", k1: " << cal.k1()
+     << ", k2: " << cal.k2() << ", p1: " << cal.p1() << ", p2: " << cal.p2()
+     << ", xi: " << cal.xi();
+
+  EXPECT(assert_stdout_equal(os.str(), cal));
+}
+
+/* ************************************************************************* */
+int main() {
+  TestResult tr;
+  return TestRegistry::runAllTests(tr);
+}
 /* ************************************************************************* */
--- gtsam-4.1.0.orig/gtsam/geometry/tests/testCal3_S2.cpp
+++ gtsam-4.1.0/gtsam/geometry/tests/testCal3_S2.cpp
@@ -11,11 +11,12 @@
 
 /**
  * @file  testCal3_S2.cpp
- * @brief Unit tests for transform derivatives
+ * @brief Unit tests for basic Cal3_S2 calibration model.
  */
 
 #include <CppUnitLite/TestHarness.h>
 #include <gtsam/base/Testable.h>
+#include <gtsam/base/TestableAssertions.h>
 #include <gtsam/base/numericalDerivative.h>
 #include <gtsam/geometry/Cal3_S2.h>
 
@@ -30,90 +31,94 @@ static Point2 p_uv(1320.3, 1740);
 static Point2 p_xy(2, 3);
 
 /* ************************************************************************* */
-TEST( Cal3_S2, easy_constructor)
-{
+TEST(Cal3_S2, Constructor) {
   Cal3_S2 expected(554.256, 554.256, 0, 640 / 2, 480 / 2);
 
-  double fov = 60; // degrees
-  size_t w=640,h=480;
-  Cal3_S2 actual(fov,w,h);
+  double fov = 60;  // degrees
+  size_t w = 640, h = 480;
+  Cal3_S2 actual(fov, w, h);
 
-  CHECK(assert_equal(expected,actual,1e-3));
+  CHECK(assert_equal(expected, actual, 1e-3));
 }
 
 /* ************************************************************************* */
-TEST( Cal3_S2, calibrate)
-{
-  Point2 intrinsic(2,3);
+TEST(Cal3_S2, Calibrate) {
+  Point2 intrinsic(2, 3);
   Point2 expectedimage(1320.3, 1740);
   Point2 imagecoordinates = K.uncalibrate(intrinsic);
-  CHECK(assert_equal(expectedimage,imagecoordinates));
-  CHECK(assert_equal(intrinsic,K.calibrate(imagecoordinates)));
+  CHECK(assert_equal(expectedimage, imagecoordinates));
+  CHECK(assert_equal(intrinsic, K.calibrate(imagecoordinates)));
 }
 
 /* ************************************************************************* */
-TEST( Cal3_S2, calibrate_homogeneous) {
+TEST(Cal3_S2, CalibrateHomogeneous) {
   Vector3 intrinsic(2, 3, 1);
   Vector3 image(1320.3, 1740, 1);
-  CHECK(assert_equal((Vector)intrinsic,(Vector)K.calibrate(image)));
+  CHECK(assert_equal((Vector)intrinsic, (Vector)K.calibrate(image)));
 }
 
 /* ************************************************************************* */
-Point2 uncalibrate_(const Cal3_S2& k, const Point2& pt) { return k.uncalibrate(pt); }
-TEST( Cal3_S2, Duncalibrate1)
-{
-  Matrix25 computed; K.uncalibrate(p, computed, boost::none);
+Point2 uncalibrate_(const Cal3_S2& k, const Point2& pt) {
+  return k.uncalibrate(pt);
+}
+
+TEST(Cal3_S2, Duncalibrate1) {
+  Matrix25 computed;
+  K.uncalibrate(p, computed, boost::none);
   Matrix numerical = numericalDerivative21(uncalibrate_, K, p);
-  CHECK(assert_equal(numerical,computed,1e-8));
+  CHECK(assert_equal(numerical, computed, 1e-8));
 }
 
 /* ************************************************************************* */
-TEST( Cal3_S2, Duncalibrate2)
-{
-  Matrix computed; K.uncalibrate(p, boost::none, computed);
+TEST(Cal3_S2, Duncalibrate2) {
+  Matrix computed;
+  K.uncalibrate(p, boost::none, computed);
   Matrix numerical = numericalDerivative22(uncalibrate_, K, p);
-  CHECK(assert_equal(numerical,computed,1e-9));
+  CHECK(assert_equal(numerical, computed, 1e-9));
+}
+
+Point2 calibrate_(const Cal3_S2& k, const Point2& pt) {
+  return k.calibrate(pt);
 }
 
-Point2 calibrate_(const Cal3_S2& k,  const Point2& pt) {return k.calibrate(pt); }
 /* ************************************************************************* */
-TEST(Cal3_S2, Dcalibrate1)
-{
-    Matrix computed;
-    Point2 expected = K.calibrate(p_uv, computed, boost::none);
-    Matrix numerical = numericalDerivative21(calibrate_, K, p_uv);
-    CHECK(assert_equal(expected, p_xy, 1e-8));
-    CHECK(assert_equal(numerical, computed, 1e-8));
+TEST(Cal3_S2, Dcalibrate1) {
+  Matrix computed;
+  Point2 expected = K.calibrate(p_uv, computed, boost::none);
+  Matrix numerical = numericalDerivative21(calibrate_, K, p_uv);
+  CHECK(assert_equal(expected, p_xy, 1e-8));
+  CHECK(assert_equal(numerical, computed, 1e-8));
 }
 
 /* ************************************************************************* */
-TEST(Cal3_S2, Dcalibrate2)
-{
-    Matrix computed;
-    Point2 expected = K.calibrate(p_uv, boost::none, computed);
-    Matrix numerical = numericalDerivative22(calibrate_, K, p_uv);
-    CHECK(assert_equal(expected, p_xy, 1e-8));
-    CHECK(assert_equal(numerical, computed, 1e-8));
+TEST(Cal3_S2, Dcalibrate2) {
+  Matrix computed;
+  Point2 expected = K.calibrate(p_uv, boost::none, computed);
+  Matrix numerical = numericalDerivative22(calibrate_, K, p_uv);
+  CHECK(assert_equal(expected, p_xy, 1e-8));
+  CHECK(assert_equal(numerical, computed, 1e-8));
 }
 
 /* ************************************************************************* */
-TEST( Cal3_S2, assert_equal)
-{
-  CHECK(assert_equal(K,K,1e-9));
+TEST(Cal3_S2, Equal) {
+  CHECK(assert_equal(K, K, 1e-9));
 
   Cal3_S2 K1(500, 500, 0.1, 640 / 2, 480 / 2);
-  CHECK(assert_equal(K,K1,1e-9));
+  CHECK(assert_equal(K, K1, 1e-9));
 }
 
 /* ************************************************************************* */
-TEST( Cal3_S2, retract)
-{
-  Cal3_S2 expected(500+1, 500+2, 0.1+3, 640 / 2+4, 480 / 2+5);
-  Vector d(5);
-  d << 1,2,3,4,5;
+TEST(Cal3_S2, Retract) {
+  Cal3_S2 expected(500 + 1, 500 + 2, 0.1 + 3, 640 / 2 + 4, 480 / 2 + 5);
+
+  EXPECT_LONGS_EQUAL(Cal3_S2::Dim(), 5);
+  EXPECT_LONGS_EQUAL(expected.dim(), 5);
+
+  Vector5 d;
+  d << 1, 2, 3, 4, 5;
   Cal3_S2 actual = K.retract(d);
-  CHECK(assert_equal(expected,actual,1e-7));
-  CHECK(assert_equal(d,K.localCoordinates(actual),1e-7));
+  CHECK(assert_equal(expected, actual, 1e-7));
+  CHECK(assert_equal(d, K.localCoordinates(actual), 1e-7));
 }
 
 /* ************************************************************************* */
@@ -121,10 +126,19 @@ TEST(Cal3_S2, between) {
   Cal3_S2 k1(5, 5, 5, 5, 5), k2(5, 6, 7, 8, 9);
   Matrix H1, H2;
 
-  EXPECT(assert_equal(Cal3_S2(0,1,2,3,4), k1.between(k2, H1, H2)));
+  EXPECT(assert_equal(Cal3_S2(0, 1, 2, 3, 4), k1.between(k2, H1, H2)));
   EXPECT(assert_equal(-I_5x5, H1));
   EXPECT(assert_equal(I_5x5, H2));
+}
 
+/* ************************************************************************* */
+TEST(Cal3_S2, Print) {
+  Cal3_S2 cal(5, 5, 5, 5, 5);
+  std::stringstream os;
+  os << "fx: " << cal.fx() << ", fy: " << cal.fy() << ", s: " << cal.skew()
+     << ", px: " << cal.px() << ", py: " << cal.py();
+
+  EXPECT(assert_stdout_equal(os.str(), cal));
 }
 
 /* ************************************************************************* */
@@ -133,4 +147,3 @@ int main() {
   return TestRegistry::runAllTests(tr);
 }
 /* ************************************************************************* */
-
--- /dev/null
+++ gtsam-4.1.0/gtsam/geometry/tests/testCal3_S2Stereo.cpp
@@ -0,0 +1,129 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * @file  testCal3_S2Stereo.cpp
+ * @brief Unit tests for stereo-rig calibration model.
+ */
+
+#include <CppUnitLite/TestHarness.h>
+#include <gtsam/base/Testable.h>
+#include <gtsam/base/TestableAssertions.h>
+#include <gtsam/base/numericalDerivative.h>
+#include <gtsam/geometry/Cal3_S2Stereo.h>
+
+using namespace gtsam;
+
+GTSAM_CONCEPT_TESTABLE_INST(Cal3_S2Stereo)
+GTSAM_CONCEPT_MANIFOLD_INST(Cal3_S2Stereo)
+
+static Cal3_S2Stereo K(500, 500, 0.1, 640 / 2, 480 / 2, 1);
+static Point2 p(1, -2);
+static Point2 p_uv(1320.3, 1740);
+static Point2 p_xy(2, 3);
+
+/* ************************************************************************* */
+TEST(Cal3_S2Stereo, Constructor) {
+  Cal3_S2Stereo expected(554.256, 554.256, 0, 640 / 2, 480 / 2, 3);
+
+  double fov = 60;  // degrees
+  size_t w = 640, h = 480;
+  Cal3_S2Stereo actual(fov, w, h, 3);
+
+  CHECK(assert_equal(expected, actual, 1e-3));
+}
+
+/* ************************************************************************* */
+TEST(Cal3_S2Stereo, Calibrate) {
+  Point2 intrinsic(2, 3);
+  Point2 expectedimage(1320.3, 1740);
+  Point2 imagecoordinates = K.uncalibrate(intrinsic);
+  CHECK(assert_equal(expectedimage, imagecoordinates));
+  CHECK(assert_equal(intrinsic, K.calibrate(imagecoordinates)));
+}
+
+/* ************************************************************************* */
+TEST(Cal3_S2Stereo, CalibrateHomogeneous) {
+  Vector3 intrinsic(2, 3, 1);
+  Vector3 image(1320.3, 1740, 1);
+  CHECK(assert_equal(intrinsic, K.calibrate(image)));
+}
+
+/* ************************************************************************* */
+Point2 uncalibrate_(const Cal3_S2Stereo& k, const Point2& pt) {
+  return k.uncalibrate(pt);
+}
+
+TEST(Cal3_S2Stereo, Duncalibrate) {
+  Matrix26 Dcal;
+  Matrix22 Dp;
+  K.uncalibrate(p, Dcal, Dp);
+
+  Matrix numerical1 = numericalDerivative21(uncalibrate_, K, p);
+  CHECK(assert_equal(numerical1, Dcal, 1e-8));
+  Matrix numerical2 = numericalDerivative22(uncalibrate_, K, p);
+  CHECK(assert_equal(numerical2, Dp, 1e-9));
+}
+
+Point2 calibrate_(const Cal3_S2Stereo& K, const Point2& pt) {
+  return K.calibrate(pt);
+}
+/* ************************************************************************* */
+TEST(Cal3_S2Stereo, Dcalibrate) {
+  Matrix26 Dcal;
+  Matrix22 Dp;
+  Point2 expected = K.calibrate(p_uv, Dcal, Dp);
+  CHECK(assert_equal(expected, p_xy, 1e-8));
+
+  Matrix numerical1 = numericalDerivative21(calibrate_, K, p_uv);
+  CHECK(assert_equal(numerical1, Dcal, 1e-8));
+  Matrix numerical2 = numericalDerivative22(calibrate_, K, p_uv);
+  CHECK(assert_equal(numerical2, Dp, 1e-8));
+}
+
+/* ************************************************************************* */
+TEST(Cal3_S2Stereo, Equal) {
+  CHECK(assert_equal(K, K, 1e-9));
+
+  Cal3_S2Stereo K1(500, 500, 0.1, 640 / 2, 480 / 2, 1);
+  CHECK(assert_equal(K, K1, 1e-9));
+}
+
+/* ************************************************************************* */
+TEST(Cal3_S2Stereo, Retract) {
+  Cal3_S2Stereo expected(500 + 1, 500 + 2, 0.1 + 3, 640 / 2 + 4, 480 / 2 + 5,
+                         7);
+  EXPECT_LONGS_EQUAL(Cal3_S2Stereo::Dim(), 6);
+  EXPECT_LONGS_EQUAL(expected.dim(), 6);
+
+  Vector6 d;
+  d << 1, 2, 3, 4, 5, 6;
+  Cal3_S2Stereo actual = K.retract(d);
+  CHECK(assert_equal(expected, actual, 1e-7));
+  CHECK(assert_equal(d, K.localCoordinates(actual), 1e-7));
+}
+
+/* ************************************************************************* */
+TEST(Cal3_S2Stereo, Print) {
+  Cal3_S2Stereo cal(5, 5, 5, 5, 5, 2);
+  std::stringstream os;
+  os << "fx: " << cal.fx() << ", fy: " << cal.fy() << ", s: " << cal.skew()
+     << ", px: " << cal.px() << ", py: " << cal.py()
+     << ", b: " << cal.baseline();
+  EXPECT(assert_stdout_equal(os.str(), cal));
+}
+
+/* ************************************************************************* */
+int main() {
+  TestResult tr;
+  return TestRegistry::runAllTests(tr);
+}
+/* ************************************************************************* */
--- gtsam-4.1.0.orig/gtsam/geometry/tests/testLine3.cpp
+++ gtsam-4.1.0/gtsam/geometry/tests/testLine3.cpp
@@ -14,6 +14,16 @@ GTSAM_CONCEPT_MANIFOLD_INST(Line3)
 
 static const Line3 l(Rot3(), 1, 1);
 
+// Testing getters
+TEST(Line3, getMethods) {
+  const double a = 5, b = 10;
+  const Rot3 R = Rot3::Expmap(Vector3(0.1, 0.2, 0.3));
+  const Line3 line(R, a, b);
+  EXPECT_DOUBLES_EQUAL(a, line.a(), 1e-8);
+  EXPECT_DOUBLES_EQUAL(b, line.b(), 1e-8);
+  EXPECT(assert_equal(R, line.R(), 1e-8));
+}
+
 // Testing equals function of Line3
 TEST(Line3, equals) {
   Line3 l_same = l;
--- gtsam-4.1.0.orig/gtsam/geometry/tests/testOrientedPlane3.cpp
+++ gtsam-4.1.0/gtsam/geometry/tests/testOrientedPlane3.cpp
@@ -31,7 +31,7 @@ GTSAM_CONCEPT_TESTABLE_INST(OrientedPlan
 GTSAM_CONCEPT_MANIFOLD_INST(OrientedPlane3)
 
 //*******************************************************************************
-TEST (OrientedPlane3, getMethods) {
+TEST(OrientedPlane3, getMethods) {
   Vector4 c;
   c << -1, 0, 0, 5;
   OrientedPlane3 plane1(c);
@@ -50,44 +50,27 @@ TEST (OrientedPlane3, getMethods) {
 
 
 //*******************************************************************************
-OrientedPlane3 Transform_(const OrientedPlane3& plane,  const Pose3& xr) {
-  return OrientedPlane3::Transform(plane, xr);
-}
-
 OrientedPlane3 transform_(const OrientedPlane3& plane,  const Pose3& xr) {
   return plane.transform(xr);
 }
 
-TEST (OrientedPlane3, transform) {
+TEST(OrientedPlane3, transform) {
   gtsam::Pose3 pose(gtsam::Rot3::Ypr(-M_PI / 4.0, 0.0, 0.0),
-      gtsam::Point3(2.0, 3.0, 4.0));
+                    gtsam::Point3(2.0, 3.0, 4.0));
   OrientedPlane3 plane(-1, 0, 0, 5);
   OrientedPlane3 expectedPlane(-sqrt(2.0) / 2.0, -sqrt(2.0) / 2.0, 0.0, 3);
-  OrientedPlane3 transformedPlane1 = OrientedPlane3::Transform(plane, pose,
-      none, none);
-  OrientedPlane3 transformedPlane2 = plane.transform(pose, none, none);
-  EXPECT(assert_equal(expectedPlane, transformedPlane1, 1e-5));
-  EXPECT(assert_equal(expectedPlane, transformedPlane2, 1e-5));
+  OrientedPlane3 transformedPlane = plane.transform(pose, none, none);
+  EXPECT(assert_equal(expectedPlane, transformedPlane, 1e-5));
 
   // Test the jacobians of transform
   Matrix actualH1, expectedH1, actualH2, expectedH2;
-  {
-    // because the Transform class uses a wrong order of Jacobians in interface
-    OrientedPlane3::Transform(plane, pose, actualH1, none);
-    expectedH1 = numericalDerivative22(Transform_, plane, pose);
-    EXPECT(assert_equal(expectedH1, actualH1, 1e-5));
-    OrientedPlane3::Transform(plane, pose, none, actualH2);
-    expectedH2 = numericalDerivative21(Transform_, plane, pose);
-    EXPECT(assert_equal(expectedH2, actualH2, 1e-5));
-  }
-  {
-    plane.transform(pose, actualH1, none);
-    expectedH1 = numericalDerivative21(transform_, plane, pose);
-    EXPECT(assert_equal(expectedH1, actualH1, 1e-5));
-    plane.transform(pose, none, actualH2);
-    expectedH2 = numericalDerivative22(Transform_, plane, pose);
-    EXPECT(assert_equal(expectedH2, actualH2, 1e-5));
-  }
+  expectedH1 = numericalDerivative21(transform_, plane, pose);
+  plane.transform(pose, actualH1, none);
+  EXPECT(assert_equal(expectedH1, actualH1, 1e-5));
+
+  expectedH2 = numericalDerivative22(transform_, plane, pose);
+  plane.transform(pose, none, actualH2);
+  EXPECT(assert_equal(expectedH2, actualH2, 1e-5));
 }
 
 //*******************************************************************************
@@ -109,7 +92,6 @@ inline static Vector randomVector(const
 
 //*******************************************************************************
 TEST(OrientedPlane3, localCoordinates_retract) {
-
   size_t numIterations = 10000;
   Vector4 minPlaneLimit, maxPlaneLimit;
   minPlaneLimit << -1.0, -1.0, -1.0, 0.01;
@@ -119,7 +101,6 @@ TEST(OrientedPlane3, localCoordinates_re
   minXiLimit << -M_PI, -M_PI, -10.0;
   maxXiLimit << M_PI, M_PI, 10.0;
   for (size_t i = 0; i < numIterations; i++) {
-
     // Create a Plane
     OrientedPlane3 p1(randomVector(minPlaneLimit, maxPlaneLimit));
     Vector v12 = randomVector(minXiLimit, maxXiLimit);
@@ -138,22 +119,24 @@ TEST(OrientedPlane3, localCoordinates_re
 }
 
 //*******************************************************************************
-TEST (OrientedPlane3, error2) {
+TEST(OrientedPlane3, errorVector) {
   OrientedPlane3 plane1(-1, 0.1, 0.2, 5);
   OrientedPlane3 plane2(-1.1, 0.2, 0.3, 5.4);
 
   // Hard-coded regression values, to ensure the result doesn't change.
   EXPECT(assert_equal((Vector) Z_3x1, plane1.errorVector(plane1), 1e-8));
-  EXPECT(assert_equal(Vector3(-0.0677674148, -0.0760543588, -0.4), plane1.errorVector(plane2), 1e-5));
+  EXPECT(assert_equal(Vector3(-0.0677674148, -0.0760543588, -0.4),
+                      plane1.errorVector(plane2), 1e-5));
 
   // Test the jacobians of transform
   Matrix33 actualH1, expectedH1, actualH2, expectedH2;
 
   Vector3 actual = plane1.errorVector(plane2, actualH1, actualH2);
-  EXPECT(assert_equal(plane1.normal().errorVector(plane2.normal()), Vector2(actual[0], actual[1])));
+  EXPECT(assert_equal(plane1.normal().errorVector(plane2.normal()),
+                      Vector2(actual[0], actual[1])));
   EXPECT(assert_equal(plane1.distance() - plane2.distance(), actual[2]));
 
-  boost::function<Vector3(const OrientedPlane3&, const OrientedPlane3&)> f = //
+  boost::function<Vector3(const OrientedPlane3&, const OrientedPlane3&)> f =
       boost::bind(&OrientedPlane3::errorVector, _1, _2, boost::none, boost::none);
   expectedH1 = numericalDerivative21(f, plane1, plane2);
   expectedH2 = numericalDerivative22(f, plane1, plane2);
@@ -162,19 +145,19 @@ TEST (OrientedPlane3, error2) {
 }
 
 //*******************************************************************************
-TEST (OrientedPlane3, jacobian_retract) {
+TEST(OrientedPlane3, jacobian_retract) {
   OrientedPlane3 plane(-1, 0.1, 0.2, 5);
   Matrix33 H_actual;
   boost::function<OrientedPlane3(const Vector3&)> f =
       boost::bind(&OrientedPlane3::retract, plane, _1, boost::none);
   {
-      Vector3 v (-0.1, 0.2, 0.3);
+      Vector3 v(-0.1, 0.2, 0.3);
       plane.retract(v, H_actual);
       Matrix H_expected_numerical = numericalDerivative11(f, v);
       EXPECT(assert_equal(H_expected_numerical, H_actual, 1e-5));
   }
   {
-      Vector3 v (0, 0, 0);
+      Vector3 v(0, 0, 0);
       plane.retract(v, H_actual);
       Matrix H_expected_numerical = numericalDerivative11(f, v);
       EXPECT(assert_equal(H_expected_numerical, H_actual, 1e-5));
--- gtsam-4.1.0.orig/gtsam/geometry/tests/testPinholeCamera.cpp
+++ gtsam-4.1.0/gtsam/geometry/tests/testPinholeCamera.cpp
@@ -337,6 +337,15 @@ TEST( PinholeCamera, range3) {
 }
 
 /* ************************************************************************* */
+TEST( PinholeCamera, Cal3Bundler) {
+  Cal3Bundler calibration;
+  Pose3 wTc;
+  PinholeCamera<Cal3Bundler> camera(wTc, calibration);
+  Point2 p(50, 100);
+  camera.backproject(p, 10);
+}
+
+/* ************************************************************************* */
 int main() { TestResult tr; return TestRegistry::runAllTests(tr); }
 /* ************************************************************************* */
 
--- gtsam-4.1.0.orig/gtsam/geometry/tests/testPoint3.cpp
+++ gtsam-4.1.0/gtsam/geometry/tests/testPoint3.cpp
@@ -165,6 +165,26 @@ TEST (Point3, normalize) {
 }
 
 //*************************************************************************
+TEST(Point3, mean) {
+  Point3 expected(2, 2, 2);
+  Point3 a1(0, 0, 0), a2(1, 2, 3), a3(5, 4, 3);
+  std::vector<Point3> a_points{a1, a2, a3};
+  Point3 actual = mean(a_points);
+  EXPECT(assert_equal(expected, actual));
+}
+
+TEST(Point3, mean_pair) {
+  Point3 a_mean(2, 2, 2), b_mean(-1, 1, 0);
+  Point3Pair expected = std::make_pair(a_mean, b_mean);
+  Point3 a1(0, 0, 0), a2(1, 2, 3), a3(5, 4, 3);
+  Point3 b1(-1, 0, 0), b2(-2, 4, 0), b3(0, -1, 0);
+  std::vector<Point3Pair> point_pairs{{a1, b1}, {a2, b2}, {a3, b3}};
+  Point3Pair actual = means(point_pairs);
+  EXPECT(assert_equal(expected.first, actual.first));
+  EXPECT(assert_equal(expected.second, actual.second));
+}
+
+//*************************************************************************
 double norm_proxy(const Point3& point) {
   return double(point.norm());
 }
--- gtsam-4.1.0.orig/gtsam/geometry/tests/testPose2.cpp
+++ gtsam-4.1.0/gtsam/geometry/tests/testPose2.cpp
@@ -14,16 +14,17 @@
  * @brief  Unit tests for Pose2 class
  */
 
-#include <gtsam/geometry/Pose2.h>
-#include <gtsam/geometry/Point2.h>
-#include <gtsam/geometry/Rot2.h>
+#include <CppUnitLite/TestHarness.h>
 #include <gtsam/base/Testable.h>
-#include <gtsam/base/testLie.h>
+#include <gtsam/base/TestableAssertions.h>
 #include <gtsam/base/lieProxies.h>
+#include <gtsam/base/testLie.h>
+#include <gtsam/geometry/Point2.h>
+#include <gtsam/geometry/Pose2.h>
+#include <gtsam/geometry/Rot2.h>
 
-#include <CppUnitLite/TestHarness.h>
+#include <boost/assign/std/vector.hpp>  // for operator +=
 #include <boost/optional.hpp>
-#include <boost/assign/std/vector.hpp> // for operator +=
 #include <cmath>
 #include <iostream>
 
@@ -911,6 +912,22 @@ TEST(Pose2 , TransformCovariance3) {
 }
 
 /* ************************************************************************* */
+TEST(Pose2, Print) {
+  Pose2 pose(Rot2::identity(), Point2(1, 2));
+
+  // Generate the expected output
+  string s = "Planar Pose";
+  string expected_stdout = "(1, 2, 0)";
+  string expected1 = expected_stdout + "\n";
+  string expected2 = s + " " + expected1;
+
+  EXPECT(assert_stdout_equal(expected_stdout, pose));
+
+  EXPECT(assert_print_equal(expected1, pose));
+  EXPECT(assert_print_equal(expected2, pose, s));
+}
+
+/* ************************************************************************* */
 int main() {
   TestResult tr;
   return TestRegistry::runAllTests(tr);
--- gtsam-4.1.0.orig/gtsam/geometry/tests/testPose3.cpp
+++ gtsam-4.1.0/gtsam/geometry/tests/testPose3.cpp
@@ -18,6 +18,7 @@
 #include <gtsam/geometry/Pose2.h>
 #include <gtsam/base/testLie.h>
 #include <gtsam/base/lieProxies.h>
+#include <gtsam/base/TestableAssertions.h>
 
 #include <boost/assign/std/vector.hpp> // for operator +=
 using namespace boost::assign;
@@ -807,6 +808,17 @@ TEST(Pose3, ExpmapDerivative2) {
   }
 }
 
+TEST( Pose3, ExpmapDerivativeQr) {
+  Vector6 w = Vector6::Random();
+  w.head<3>().normalize();
+  w.head<3>() = w.head<3>() * 0.9e-2;
+  Matrix3 actualQr = Pose3::ComputeQforExpmapDerivative(w, 0.01);
+  Matrix expectedH = numericalDerivative21<Pose3, Vector6,
+      OptionalJacobian<6, 6> >(&Pose3::Expmap, w, boost::none);
+  Matrix3 expectedQr = expectedH.bottomLeftCorner<3, 3>();
+  EXPECT(assert_equal(expectedQr, actualQr, 1e-6));
+}
+
 /* ************************************************************************* */
 TEST( Pose3, LogmapDerivative) {
   Matrix6 actualH;
@@ -895,9 +907,9 @@ TEST(Pose3 , ChartDerivatives) {
   Pose3 id;
   if (ROT3_DEFAULT_COORDINATES_MODE == Rot3::EXPMAP) {
     CHECK_CHART_DERIVATIVES(id,id);
-//    CHECK_CHART_DERIVATIVES(id,T2);
-//    CHECK_CHART_DERIVATIVES(T2,id);
-//    CHECK_CHART_DERIVATIVES(T2,T3);
+    CHECK_CHART_DERIVATIVES(id,T2);
+    CHECK_CHART_DERIVATIVES(T2,id);
+    CHECK_CHART_DERIVATIVES(T2,T3);
   }
 }
 
@@ -1004,6 +1016,33 @@ TEST(Pose3, TransformCovariance6) {
 TEST(Pose3, interpolate) {
   EXPECT(assert_equal(T2, interpolate(T2,T3, 0.0)));
   EXPECT(assert_equal(T3, interpolate(T2,T3, 1.0)));
+
+  // Trivial example: start at origin and move to (1, 0, 0) while rotating pi/2
+  // about z-axis.
+  Pose3 start;
+  Pose3 end(Rot3::Rz(M_PI_2), Point3(1, 0, 0));
+  // This interpolation is easy to calculate by hand.
+  double t = 0.5;
+  Pose3 expected0(Rot3::Rz(M_PI_4), Point3(0.5, 0, 0));
+  EXPECT(assert_equal(expected0, start.interpolateRt(end, t)));
+
+  // Example from Peter Corke
+  // https://robotacademy.net.au/lesson/interpolating-pose-in-3d/
+  t = 0.0759;  // corresponds to the 10th element when calling `ctraj` in
+               // the video
+  Pose3 O;
+  Pose3 F(Rot3::Roll(0.6).compose(Rot3::Pitch(0.8)).compose(Rot3::Yaw(1.4)),
+          Point3(1, 2, 3));
+
+  // The expected answer matches the result presented in the video.
+  Pose3 expected1(interpolate(O.rotation(), F.rotation(), t),
+                  interpolate(O.translation(), F.translation(), t));
+  EXPECT(assert_equal(expected1, O.interpolateRt(F, t)));
+
+  // Non-trivial interpolation, translation value taken from output.
+  Pose3 expected2(interpolate(T2.rotation(), T3.rotation(), t),
+                  interpolate(T2.translation(), T3.translation(), t));
+  EXPECT(assert_equal(expected2, T2.interpolateRt(T3, t)));
 }
 
 /* ************************************************************************* */
@@ -1017,32 +1056,13 @@ TEST(Pose3, Create) {
 }
 
 /* ************************************************************************* */
-TEST(Pose3, print) {
-  std::stringstream redirectStream;
-  std::streambuf* ssbuf = redirectStream.rdbuf();
-  std::streambuf* oldbuf  = std::cout.rdbuf();
-  // redirect cout to redirectStream
-  std::cout.rdbuf(ssbuf);
-
+TEST(Pose3, Print) {
   Pose3 pose(Rot3::identity(), Point3(1, 2, 3));
-  // output is captured to redirectStream
-  pose.print();
 
   // Generate the expected output
-  std::stringstream expected;
-  Point3 translation(1, 2, 3);
-
-  // Add expected rotation
-  expected << "R: [\n\t1, 0, 0;\n\t0, 1, 0;\n\t0, 0, 1\n]\n";
-  expected << "t: 1 2 3\n";
-
-  // reset cout to the original stream
-  std::cout.rdbuf(oldbuf);
-
-  // Get substring corresponding to translation part
-  std::string actual = redirectStream.str();
+  std::string expected = "R: [\n\t1, 0, 0;\n\t0, 1, 0;\n\t0, 0, 1\n]\nt: 1 2 3\n";
 
-  CHECK_EQUAL(expected.str(), actual);
+  EXPECT(assert_print_equal(expected, pose));
 }
 
 /* ************************************************************************* */
--- gtsam-4.1.0.orig/gtsam/geometry/tests/testRot3.cpp
+++ gtsam-4.1.0/gtsam/geometry/tests/testRot3.cpp
@@ -744,6 +744,193 @@ TEST(Rot3, axisAngle) {
 }
 
 /* ************************************************************************* */
+Rot3 RzRyRx_proxy(double const& a, double const& b, double const& c) {
+  return Rot3::RzRyRx(a, b, c);
+}
+
+TEST(Rot3, RzRyRx_scalars_derivative) {
+  const auto x = 0.1, y = 0.4, z = 0.2;
+  const auto num_x = numericalDerivative31(RzRyRx_proxy, x, y, z);
+  const auto num_y = numericalDerivative32(RzRyRx_proxy, x, y, z);
+  const auto num_z = numericalDerivative33(RzRyRx_proxy, x, y, z);
+
+  Vector3 act_x, act_y, act_z;
+  Rot3::RzRyRx(x, y, z, act_x, act_y, act_z);
+
+  CHECK(assert_equal(num_x, act_x));
+  CHECK(assert_equal(num_y, act_y));
+  CHECK(assert_equal(num_z, act_z));
+}
+
+/* ************************************************************************* */
+Rot3 RzRyRx_proxy(Vector3 const& xyz) { return Rot3::RzRyRx(xyz); }
+
+TEST(Rot3, RzRyRx_vector_derivative) {
+  const auto xyz = Vector3{-0.3, 0.1, 0.7};
+  const auto num = numericalDerivative11(RzRyRx_proxy, xyz);
+
+  Matrix3 act;
+  Rot3::RzRyRx(xyz, act);
+
+  CHECK(assert_equal(num, act));
+}
+
+/* ************************************************************************* */
+Rot3 Ypr_proxy(double const& y, double const& p, double const& r) {
+  return Rot3::Ypr(y, p, r);
+}
+
+TEST(Rot3, Ypr_derivative) {
+  const auto y = 0.7, p = -0.3, r = 0.1;
+  const auto num_y = numericalDerivative31(Ypr_proxy, y, p, r);
+  const auto num_p = numericalDerivative32(Ypr_proxy, y, p, r);
+  const auto num_r = numericalDerivative33(Ypr_proxy, y, p, r);
+
+  Vector3 act_y, act_p, act_r;
+  Rot3::Ypr(y, p, r, act_y, act_p, act_r);
+
+  CHECK(assert_equal(num_y, act_y));
+  CHECK(assert_equal(num_p, act_p));
+  CHECK(assert_equal(num_r, act_r));
+}
+
+/* ************************************************************************* */
+Vector3 RQ_proxy(Matrix3 const& R) {
+  const auto RQ_ypr = RQ(R);
+  return RQ_ypr.second;
+}
+
+TEST(Rot3, RQ_derivative) {
+  using VecAndErr = std::pair<Vector3, double>;
+  std::vector<VecAndErr> test_xyz;
+  // Test zeros and a couple of random values
+  test_xyz.push_back(VecAndErr{{0, 0, 0}, error});
+  test_xyz.push_back(VecAndErr{{0, 0.5, -0.5}, error});
+  test_xyz.push_back(VecAndErr{{0.3, 0, 0.2}, error});
+  test_xyz.push_back(VecAndErr{{-0.6, 1.3, 0}, 1e-8});
+  test_xyz.push_back(VecAndErr{{1.0, 0.7, 0.8}, error});
+  test_xyz.push_back(VecAndErr{{3.0, 0.7, -0.6}, error});
+  test_xyz.push_back(VecAndErr{{M_PI / 2, 0, 0}, error});
+  test_xyz.push_back(VecAndErr{{0, 0, M_PI / 2}, error});
+
+  // Test close to singularity
+  test_xyz.push_back(VecAndErr{{0, M_PI / 2 - 1e-1, 0}, 1e-7});
+  test_xyz.push_back(VecAndErr{{0, 3 * M_PI / 2 + 1e-1, 0}, 1e-7});
+  test_xyz.push_back(VecAndErr{{0, M_PI / 2 - 1.1e-2, 0}, 1e-4});
+  test_xyz.push_back(VecAndErr{{0, 3 * M_PI / 2 + 1.1e-2, 0}, 1e-4});
+
+  for (auto const& vec_err : test_xyz) {
+    auto const& xyz = vec_err.first;
+
+    const auto R = Rot3::RzRyRx(xyz).matrix();
+    const auto num = numericalDerivative11(RQ_proxy, R);
+    Matrix39 calc;
+    auto dummy = RQ(R, calc).second;
+
+    const auto err = vec_err.second;
+    CHECK(assert_equal(num, calc, err));
+  }
+}
+
+/* ************************************************************************* */
+Vector3 xyz_proxy(Rot3 const& R) { return R.xyz(); }
+
+TEST(Rot3, xyz_derivative) {
+  const auto aa = Vector3{-0.6, 0.3, 0.2};
+  const auto R = Rot3::Expmap(aa);
+  const auto num = numericalDerivative11(xyz_proxy, R);
+  Matrix3 calc;
+  R.xyz(calc);
+
+  CHECK(assert_equal(num, calc));
+}
+
+/* ************************************************************************* */
+Vector3 ypr_proxy(Rot3 const& R) { return R.ypr(); }
+
+TEST(Rot3, ypr_derivative) {
+  const auto aa = Vector3{0.1, -0.3, -0.2};
+  const auto R = Rot3::Expmap(aa);
+  const auto num = numericalDerivative11(ypr_proxy, R);
+  Matrix3 calc;
+  R.ypr(calc);
+
+  CHECK(assert_equal(num, calc));
+}
+
+/* ************************************************************************* */
+Vector3 rpy_proxy(Rot3 const& R) { return R.rpy(); }
+
+TEST(Rot3, rpy_derivative) {
+  const auto aa = Vector3{1.2, 0.3, -0.9};
+  const auto R = Rot3::Expmap(aa);
+  const auto num = numericalDerivative11(rpy_proxy, R);
+  Matrix3 calc;
+  R.rpy(calc);
+
+  CHECK(assert_equal(num, calc));
+}
+
+/* ************************************************************************* */
+double roll_proxy(Rot3 const& R) { return R.roll(); }
+
+TEST(Rot3, roll_derivative) {
+  const auto aa = Vector3{0.8, -0.8, 0.8};
+  const auto R = Rot3::Expmap(aa);
+  const auto num = numericalDerivative11(roll_proxy, R);
+  Matrix13 calc;
+  R.roll(calc);
+
+  CHECK(assert_equal(num, calc));
+}
+
+/* ************************************************************************* */
+double pitch_proxy(Rot3 const& R) { return R.pitch(); }
+
+TEST(Rot3, pitch_derivative) {
+  const auto aa = Vector3{0.01, 0.1, 0.0};
+  const auto R = Rot3::Expmap(aa);
+  const auto num = numericalDerivative11(pitch_proxy, R);
+  Matrix13 calc;
+  R.pitch(calc);
+
+  CHECK(assert_equal(num, calc));
+}
+
+/* ************************************************************************* */
+double yaw_proxy(Rot3 const& R) { return R.yaw(); }
+
+TEST(Rot3, yaw_derivative) {
+  const auto aa = Vector3{0.0, 0.1, 0.6};
+  const auto R = Rot3::Expmap(aa);
+  const auto num = numericalDerivative11(yaw_proxy, R);
+  Matrix13 calc;
+  R.yaw(calc);
+
+  CHECK(assert_equal(num, calc));
+}
+
+/* ************************************************************************* */
+TEST(Rot3, determinant) {
+  size_t degree = 1;
+  Rot3 R_w0;  // Zero rotation
+  Rot3 R_w1 = Rot3::Ry(degree * M_PI / 180);
+
+  Rot3 R_01, R_w2;
+  double actual, expected = 1.0;
+
+  for (size_t i = 2; i < 360; ++i) {
+    R_01 = R_w0.between(R_w1);
+    R_w2 = R_w1 * R_01;
+    R_w0 = R_w1;
+    R_w1 = R_w2.normalized();
+    actual = R_w2.matrix().determinant();
+
+    EXPECT_DOUBLES_EQUAL(expected, actual, 1e-7);
+  }
+}
+
+/* ************************************************************************* */
 int main() {
   TestResult tr;
   return TestRegistry::runAllTests(tr);
--- gtsam-4.1.0.orig/gtsam/geometry/tests/testSerializationGeometry.cpp
+++ gtsam-4.1.0/gtsam/geometry/tests/testSerializationGeometry.cpp
@@ -57,7 +57,7 @@ static StereoCamera cam2(pose3, cal4ptr)
 static StereoPoint2 spt(1.0, 2.0, 3.0);
 
 /* ************************************************************************* */
-TEST_DISABLED (Serialization, text_geometry) {
+TEST (Serialization, text_geometry) {
   EXPECT(equalsObj<gtsam::Point2>(Point2(1.0, 2.0)));
   EXPECT(equalsObj<gtsam::Pose2>(Pose2(1.0, 2.0, 0.3)));
   EXPECT(equalsObj<gtsam::Rot2>(Rot2::fromDegrees(30.0)));
@@ -82,7 +82,7 @@ TEST_DISABLED (Serialization, text_geome
 }
 
 /* ************************************************************************* */
-TEST_DISABLED (Serialization, xml_geometry) {
+TEST (Serialization, xml_geometry) {
   EXPECT(equalsXML<gtsam::Point2>(Point2(1.0, 2.0)));
   EXPECT(equalsXML<gtsam::Pose2>(Pose2(1.0, 2.0, 0.3)));
   EXPECT(equalsXML<gtsam::Rot2>(Rot2::fromDegrees(30.0)));
@@ -106,7 +106,7 @@ TEST_DISABLED (Serialization, xml_geomet
 }
 
 /* ************************************************************************* */
-TEST_DISABLED (Serialization, binary_geometry) {
+TEST (Serialization, binary_geometry) {
   EXPECT(equalsBinary<gtsam::Point2>(Point2(1.0, 2.0)));
   EXPECT(equalsBinary<gtsam::Pose2>(Pose2(1.0, 2.0, 0.3)));
   EXPECT(equalsBinary<gtsam::Rot2>(Rot2::fromDegrees(30.0)));
--- /dev/null
+++ gtsam-4.1.0/gtsam/geometry/tests/testSimilarity3.cpp
@@ -0,0 +1,536 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * @file   testSimilarity3.cpp
+ * @brief  Unit tests for Similarity3 class
+ * @author Paul Drews
+ * @author Zhaoyang Lv
+ */
+
+#include <gtsam/geometry/Similarity3.h>
+#include <gtsam/slam/BetweenFactor.h>
+#include <gtsam/nonlinear/NonlinearFactorGraph.h>
+#include <gtsam/nonlinear/ExpressionFactorGraph.h>
+#include <gtsam/nonlinear/Values.h>
+#include <gtsam/nonlinear/LevenbergMarquardtOptimizer.h>
+#include <gtsam/geometry/Pose3.h>
+#include <gtsam/inference/Symbol.h>
+#include <gtsam/base/numericalDerivative.h>
+#include <gtsam/base/testLie.h>
+#include <gtsam/base/Testable.h>
+
+#include <CppUnitLite/TestHarness.h>
+
+#include <boost/function.hpp>
+#include <boost/bind.hpp>
+
+using namespace gtsam;
+using namespace std;
+using symbol_shorthand::X;
+
+GTSAM_CONCEPT_TESTABLE_INST(Similarity3)
+
+static const Point3 P(0.2, 0.7, -2);
+static const Rot3 R = Rot3::Rodrigues(0.3, 0, 0);
+static const double s = 4;
+static const Similarity3 id;
+static const Similarity3 T1(R, Point3(3.5, -8.2, 4.2), 1);
+static const Similarity3 T2(Rot3::Rodrigues(0.3, 0.2, 0.1),
+    Point3(3.5, -8.2, 4.2), 1);
+static const Similarity3 T3(Rot3::Rodrigues(-90, 0, 0), Point3(1, 2, 3), 1);
+static const Similarity3 T4(R, P, s);
+static const Similarity3 T5(R, P, 10);
+static const Similarity3 T6(Rot3(), Point3(1, 1, 0), 2); // Simpler transform
+
+const double degree = M_PI / 180;
+
+//******************************************************************************
+TEST(Similarity3, Concepts) {
+  BOOST_CONCEPT_ASSERT((IsGroup<Similarity3 >));
+  BOOST_CONCEPT_ASSERT((IsManifold<Similarity3 >));
+  BOOST_CONCEPT_ASSERT((IsLieGroup<Similarity3 >));
+}
+
+//******************************************************************************
+TEST(Similarity3, Constructors) {
+  Similarity3 sim3_Construct1;
+  Similarity3 sim3_Construct2(s);
+  Similarity3 sim3_Construct3(R, P, s);
+  Similarity3 sim4_Construct4(R.matrix(), P, s);
+}
+
+//******************************************************************************
+TEST(Similarity3, Getters) {
+  Similarity3 sim3_default;
+  EXPECT(assert_equal(Rot3(), sim3_default.rotation()));
+  EXPECT(assert_equal(Point3(0,0,0), sim3_default.translation()));
+  EXPECT_DOUBLES_EQUAL(1.0, sim3_default.scale(), 1e-9);
+
+  Similarity3 sim3(Rot3::Ypr(1, 2, 3), Point3(4, 5, 6), 7);
+  EXPECT(assert_equal(Rot3::Ypr(1, 2, 3), sim3.rotation()));
+  EXPECT(assert_equal(Point3(4, 5, 6), sim3.translation()));
+  EXPECT_DOUBLES_EQUAL(7.0, sim3.scale(), 1e-9);
+}
+
+//******************************************************************************
+TEST(Similarity3, AdjointMap) {
+  const Matrix4 T = T2.matrix();
+  // Check Ad with actual definition
+  Vector7 delta;
+  delta << 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7;
+  Matrix4 W = Similarity3::wedge(delta);
+  Matrix4 TW = Similarity3::wedge(T2.AdjointMap() * delta);
+  EXPECT(assert_equal(TW, Matrix4(T * W * T.inverse()), 1e-9));
+}
+
+//******************************************************************************
+TEST(Similarity3, inverse) {
+  Similarity3 sim3(Rot3::Ypr(1, 2, 3).inverse(), Point3(4, 5, 6), 7);
+  Matrix3 Re; // some values from matlab
+  Re << -0.2248, 0.9024, -0.3676, -0.3502, -0.4269, -0.8337, -0.9093, -0.0587, 0.4120;
+  Vector3 te(-9.8472, 59.7640, 10.2125);
+  Similarity3 expected(Re, te, 1.0 / 7.0);
+  EXPECT(assert_equal(expected, sim3.inverse(), 1e-4));
+  EXPECT(assert_equal(sim3, sim3.inverse().inverse(), 1e-8));
+
+  // test lie group inverse
+  Matrix H1, H2;
+  EXPECT(assert_equal(expected, sim3.inverse(H1), 1e-4));
+  EXPECT(assert_equal(sim3, sim3.inverse().inverse(H2), 1e-8));
+}
+
+//******************************************************************************
+TEST(Similarity3, Multiplication) {
+  Similarity3 test1(Rot3::Ypr(1, 2, 3).inverse(), Point3(4, 5, 6), 7);
+  Similarity3 test2(Rot3::Ypr(1, 2, 3).inverse(), Point3(8, 9, 10), 11);
+  Matrix3 re;
+  re << 0.0688, 0.9863, -0.1496, -0.5665, -0.0848, -0.8197, -0.8211, 0.1412, 0.5530;
+  Vector3 te(-13.6797, 3.2441, -5.7794);
+  Similarity3 expected(re, te, 77);
+  EXPECT(assert_equal(expected, test1 * test2, 1e-2));
+}
+
+//******************************************************************************
+TEST(Similarity3, Manifold) {
+  EXPECT_LONGS_EQUAL(7, Similarity3::Dim());
+  Vector z = Vector7::Zero();
+  Similarity3 sim;
+  EXPECT(sim.retract(z) == sim);
+
+  Vector7 v = Vector7::Zero();
+  v(6) = 2;
+  Similarity3 sim2;
+  EXPECT(sim2.retract(z) == sim2);
+
+  EXPECT(assert_equal(z, sim2.localCoordinates(sim)));
+
+  Similarity3 sim3 = Similarity3(Rot3(), Point3(1, 2, 3), 1);
+  Vector v3(7);
+  v3 << 0, 0, 0, 1, 2, 3, 0;
+  EXPECT(assert_equal(v3, sim2.localCoordinates(sim3)));
+
+  Similarity3 other = Similarity3(Rot3::Ypr(0.1, 0.2, 0.3), Point3(4, 5, 6), 1);
+
+  Vector vlocal = sim.localCoordinates(other);
+
+  EXPECT(assert_equal(sim.retract(vlocal), other, 1e-2));
+
+  Similarity3 other2 = Similarity3(Rot3::Ypr(0.3, 0, 0), Point3(4, 5, 6), 1);
+  Rot3 R = Rot3::Rodrigues(0.3, 0, 0);
+
+  Vector vlocal2 = sim.localCoordinates(other2);
+
+  EXPECT(assert_equal(sim.retract(vlocal2), other2, 1e-2));
+
+  // TODO add unit tests for retract and localCoordinates
+}
+
+//******************************************************************************
+TEST( Similarity3, retract_first_order) {
+  Similarity3 id;
+  Vector v = Z_7x1;
+  v(0) = 0.3;
+  EXPECT(assert_equal(Similarity3(R, Point3(0,0,0), 1), id.retract(v), 1e-2));
+//  v(3) = 0.2;
+//  v(4) = 0.7;
+//  v(5) = -2;
+//  EXPECT(assert_equal(Similarity3(R, P, 1), id.retract(v), 1e-2));
+}
+
+//******************************************************************************
+TEST(Similarity3, localCoordinates_first_order) {
+  Vector7 d12 = Vector7::Constant(0.1);
+  d12(6) = 1.0;
+  Similarity3 t1 = T1, t2 = t1.retract(d12);
+  EXPECT(assert_equal(d12, t1.localCoordinates(t2)));
+}
+
+//******************************************************************************
+TEST(Similarity3, manifold_first_order) {
+  Similarity3 t1 = T1;
+  Similarity3 t2 = T3;
+  Similarity3 origin;
+  Vector d12 = t1.localCoordinates(t2);
+  EXPECT(assert_equal(t2, t1.retract(d12)));
+  Vector d21 = t2.localCoordinates(t1);
+  EXPECT(assert_equal(t1, t2.retract(d21)));
+}
+
+//******************************************************************************
+// Return as a 4*4 Matrix
+TEST(Similarity3, Matrix) {
+  Matrix4 expected;
+  expected << 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.5;
+  Matrix4 actual = T6.matrix();
+  EXPECT(assert_equal(expected, actual));
+}
+
+//*****************************************************************************
+// Exponential and log maps
+TEST(Similarity3, ExpLogMap) {
+  Vector7 delta;
+  delta << 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7;
+  Vector7 actual = Similarity3::Logmap(Similarity3::Expmap(delta));
+  EXPECT(assert_equal(delta, actual));
+
+  Vector7 zeros;
+  zeros << 0, 0, 0, 0, 0, 0, 0;
+  Vector7 logIdentity = Similarity3::Logmap(Similarity3::identity());
+  EXPECT(assert_equal(zeros, logIdentity));
+
+  Similarity3 expZero = Similarity3::Expmap(zeros);
+  Similarity3 ident = Similarity3::identity();
+  EXPECT(assert_equal(expZero, ident));
+
+  // Compare to matrix exponential, using expm in Lie.h
+  EXPECT(
+      assert_equal(expm<Similarity3>(delta), Similarity3::Expmap(delta), 1e-3));
+}
+
+//******************************************************************************
+// Group action on Point3 (with simpler transform)
+TEST(Similarity3, GroupAction) {
+  EXPECT(assert_equal(Point3(2, 2, 0), T6 * Point3(0, 0, 0)));
+  EXPECT(assert_equal(Point3(4, 2, 0), T6 * Point3(1, 0, 0)));
+
+  // Test group action on R^4 via matrix representation
+  Vector4 qh;
+  qh << 1, 0, 0, 1;
+  Vector4 ph;
+  ph << 2, 1, 0, 0.5; // equivalent to Point3(4, 2, 0)
+  EXPECT(assert_equal((Vector )ph, T6.matrix() * qh));
+
+  // Test some more...
+  Point3 pa = Point3(1, 0, 0);
+  Similarity3 Ta(Rot3(), Point3(1, 2, 3), 1.0);
+  Similarity3 Tb(Rot3(), Point3(1, 2, 3), 2.0);
+  EXPECT(assert_equal(Point3(2, 2, 3), Ta.transformFrom(pa)));
+  EXPECT(assert_equal(Point3(4, 4, 6), Tb.transformFrom(pa)));
+
+  Similarity3 Tc(Rot3::Rz(M_PI / 2.0), Point3(1, 2, 3), 1.0);
+  Similarity3 Td(Rot3::Rz(M_PI / 2.0), Point3(1, 2, 3), 2.0);
+  EXPECT(assert_equal(Point3(1, 3, 3), Tc.transformFrom(pa)));
+  EXPECT(assert_equal(Point3(2, 6, 6), Td.transformFrom(pa)));
+
+  // Test derivative
+  boost::function<Point3(Similarity3, Point3)> f = boost::bind(
+      &Similarity3::transformFrom, _1, _2, boost::none, boost::none);
+
+  Point3 q(1, 2, 3);
+  for (const auto& T : { T1, T2, T3, T4, T5, T6 }) {
+    Point3 q(1, 0, 0);
+    Matrix H1 = numericalDerivative21<Point3, Similarity3, Point3>(f, T, q);
+    Matrix H2 = numericalDerivative22<Point3, Similarity3, Point3>(f, T, q);
+    Matrix actualH1, actualH2;
+    T.transformFrom(q, actualH1, actualH2);
+    EXPECT(assert_equal(H1, actualH1));
+    EXPECT(assert_equal(H2, actualH2));
+  }
+}
+
+//******************************************************************************
+// Group action on Pose3
+// Estimate Sim(3) object "aSb" from pose pairs {(aTi, bTi)}
+// In the example below, let the "a" frame be the "world" frame below,
+// and let the "b" frame be the "egovehicle" frame.
+// Suppose within the egovehicle frame, we know the poses of two objects "o1" and "o2"
+TEST(Similarity3, GroupActionPose3) {
+  // Suppose we know the pose of the egovehicle in the world frame
+  Similarity3 wSe(Rot3::Ry(180 * degree), Point3(2, 3, 5), 2.0);
+
+  // Create source poses (two objects o1 and o2 living in the egovehicle "e" frame)
+  // Suppose they are 3d cuboids detected by onboard sensor, in the egovehicle frame
+  Pose3 eTo1(Rot3(), Point3(0, 0, 0));
+  Pose3 eTo2(Rot3(-1, 0, 0, 0, -1, 0, 0, 0, 1), Point3(4, 0, 0));
+
+  // Create destination poses (two objects now living in the world/city "w" frame)
+  // Desired to place the objects into the world frame for tracking
+  Pose3 expected_wTo1(Rot3(-1, 0, 0, 0, 1, 0, 0, 0, -1), Point3(4, 6, 10));
+  Pose3 expected_wTo2(Rot3(1, 0, 0, 0, -1, 0, 0, 0, -1), Point3(-4, 6, 10));
+
+  // objects now live in the world frame, instead of in the egovehicle frame
+  EXPECT(assert_equal(expected_wTo1, wSe.transformFrom(eTo1)));
+  EXPECT(assert_equal(expected_wTo2, wSe.transformFrom(eTo2)));
+}
+
+// Test left group action compatibility.
+// cSa*Ta = cSb*bSa*Ta
+TEST(Similarity3, GroupActionPose3_Compatibility) {
+  Similarity3 bSa(Rot3::Ry(180 * degree), Point3(2, 3, 5), 2.0);
+  Similarity3 cSb(Rot3::Ry(90 * degree), Point3(-10, -4, 0), 3.0);
+  Similarity3 cSa(Rot3::Ry(270 * degree), Point3(0, 1, -2), 6.0);
+
+  // Create poses
+  Pose3 Ta1(Rot3(), Point3(0, 0, 0));
+  Pose3 Ta2(Rot3(-1, 0, 0, 0, -1, 0, 0, 0, 1), Point3(4, 0, 0));
+  Pose3 Tb1(Rot3(-1, 0, 0, 0, 1, 0, 0, 0, -1), Point3(4, 6, 10));
+  Pose3 Tb2(Rot3(1, 0, 0, 0, -1, 0, 0, 0, -1), Point3(-4, 6, 10));
+  Pose3 Tc1(Rot3(0, 0, -1, 0, 1, 0, 1, 0, 0), Point3(0, 6, -12));
+  Pose3 Tc2(Rot3(0, 0, -1, 0, -1, 0, -1, 0, 0), Point3(0, 6, 12));
+
+  EXPECT(assert_equal(Tc1, cSb.transformFrom(Tb1)));
+  EXPECT(assert_equal(Tc2, cSb.transformFrom(Tb2)));
+
+  EXPECT(assert_equal(cSa.transformFrom(Ta1), cSb.transformFrom(Tb1)));
+  EXPECT(assert_equal(cSa.transformFrom(Ta2), cSb.transformFrom(Tb2)));
+}
+
+//******************************************************************************
+// Align with Point3 Pairs
+TEST(Similarity3, AlignPoint3_1) {
+  Similarity3 expected_aSb(Rot3::Rz(-90 * degree), Point3(3, 4, 5), 2.0);
+
+  Point3 b1(0, 0, 0), b2(3, 0, 0), b3(3, 0, 4);
+
+  Point3Pair ab1(make_pair(expected_aSb.transformFrom(b1), b1));
+  Point3Pair ab2(make_pair(expected_aSb.transformFrom(b2), b2));
+  Point3Pair ab3(make_pair(expected_aSb.transformFrom(b3), b3));
+
+  vector<Point3Pair> correspondences{ab1, ab2, ab3};
+
+  Similarity3 actual_aSb = Similarity3::Align(correspondences);
+  EXPECT(assert_equal(expected_aSb, actual_aSb));
+}
+
+TEST(Similarity3, AlignPoint3_2) {
+  Similarity3 expected_aSb(Rot3(), Point3(10, 10, 0), 1.0);
+
+  Point3 b1(0, 0, 0), b2(20, 10, 0), b3(10, 20, 0);
+
+  Point3Pair ab1(make_pair(expected_aSb.transformFrom(b1), b1));
+  Point3Pair ab2(make_pair(expected_aSb.transformFrom(b2), b2));
+  Point3Pair ab3(make_pair(expected_aSb.transformFrom(b3), b3));
+
+  vector<Point3Pair> correspondences{ab1, ab2, ab3};
+
+  Similarity3 actual_aSb = Similarity3::Align(correspondences);
+  EXPECT(assert_equal(expected_aSb, actual_aSb));
+}
+
+TEST(Similarity3, AlignPoint3_3) {
+  Similarity3 expected_aSb(Rot3::RzRyRx(0.3, 0.2, 0.1), Point3(20, 10, 5), 1.0);
+
+  Point3 b1(0, 0, 1), b2(10, 0, 2), b3(20, -10, 30);
+
+  Point3Pair ab1(make_pair(expected_aSb.transformFrom(b1), b1));
+  Point3Pair ab2(make_pair(expected_aSb.transformFrom(b2), b2));
+  Point3Pair ab3(make_pair(expected_aSb.transformFrom(b3), b3));
+
+  vector<Point3Pair> correspondences{ab1, ab2, ab3};
+
+  Similarity3 actual_aSb = Similarity3::Align(correspondences);
+  EXPECT(assert_equal(expected_aSb, actual_aSb));
+}
+
+//******************************************************************************
+// Align with Pose3 Pairs
+TEST(Similarity3, AlignPose3) {
+  Similarity3 expected_wSe(Rot3::Ry(180 * degree), Point3(2, 3, 5), 2.0);
+
+  // Create source poses (two objects o1 and o2 living in the egovehicle "e" frame)
+  // Suppose they are 3d cuboids detected by an onboard sensor in the egovehicle frame
+  Pose3 eTo1(Rot3(), Point3(0, 0, 0));
+  Pose3 eTo2(Rot3(-1, 0, 0, 0, -1, 0, 0, 0, 1), Point3(4, 0, 0));
+
+  // Create destination poses (same two objects, but instead living in the world/city "w" frame)
+  Pose3 wTo1(Rot3(-1, 0, 0, 0, 1, 0, 0, 0, -1), Point3(4, 6, 10));
+  Pose3 wTo2(Rot3(1, 0, 0, 0, -1, 0, 0, 0, -1), Point3(-4, 6, 10));
+
+  Pose3Pair wTe1(make_pair(wTo1, eTo1));
+  Pose3Pair wTe2(make_pair(wTo2, eTo2));
+
+  vector<Pose3Pair> correspondences{wTe1, wTe2};
+
+  // Cayley transform cannot accommodate 180 degree rotations,
+  // hence we only test for Expmap
+#ifdef GTSAM_ROT3_EXPMAP
+  // Recover the transformation wSe (i.e. world_S_egovehicle)
+  Similarity3 actual_wSe = Similarity3::Align(correspondences);
+  EXPECT(assert_equal(expected_wSe, actual_wSe));
+#endif
+}
+
+//******************************************************************************
+// Test very simple prior optimization example
+TEST(Similarity3, Optimization) {
+  // Create a PriorFactor with a Sim3 prior
+  Similarity3 prior = Similarity3(Rot3::Ypr(0.1, 0.2, 0.3), Point3(1, 2, 3), 4);
+  noiseModel::Isotropic::shared_ptr model = noiseModel::Isotropic::Sigma(7, 1);
+  Symbol key('x', 1);
+
+  // Create graph
+  NonlinearFactorGraph graph;
+  graph.addPrior(key, prior, model);
+
+  // Create initial estimate with identity transform
+  Values initial;
+  initial.insert<Similarity3>(key, Similarity3());
+
+  // Optimize
+  Values result;
+  LevenbergMarquardtParams params;
+  params.setVerbosityLM("TRYCONFIG");
+  result = LevenbergMarquardtOptimizer(graph, initial).optimize();
+
+  // After optimization, result should be prior
+  EXPECT(assert_equal(prior, result.at<Similarity3>(key), 1e-4));
+}
+
+//******************************************************************************
+// Test optimization with both Prior and BetweenFactors
+TEST(Similarity3, Optimization2) {
+  Similarity3 prior = Similarity3();
+  Similarity3 m1 = Similarity3(Rot3::Ypr(M_PI / 4.0, 0, 0), Point3(2.0, 0, 0),
+      1.0);
+  Similarity3 m2 = Similarity3(Rot3::Ypr(M_PI / 2.0, 0, 0),
+      Point3(sqrt(8) * 0.9, 0, 0), 1.0);
+  Similarity3 m3 = Similarity3(Rot3::Ypr(3 * M_PI / 4.0, 0, 0),
+      Point3(sqrt(32) * 0.8, 0, 0), 1.0);
+  Similarity3 m4 = Similarity3(Rot3::Ypr(M_PI / 2.0, 0, 0),
+      Point3(6 * 0.7, 0, 0), 1.0);
+  Similarity3 loop = Similarity3(1.42);
+
+  //prior.print("Goal Transform");
+  noiseModel::Isotropic::shared_ptr model = noiseModel::Isotropic::Sigma(7,
+      0.01);
+  SharedDiagonal betweenNoise = noiseModel::Diagonal::Sigmas(
+      (Vector(7) << 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 10).finished());
+  SharedDiagonal betweenNoise2 = noiseModel::Diagonal::Sigmas(
+      (Vector(7) << 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 1.0).finished());
+  BetweenFactor<Similarity3> b1(X(1), X(2), m1, betweenNoise);
+  BetweenFactor<Similarity3> b2(X(2), X(3), m2, betweenNoise);
+  BetweenFactor<Similarity3> b3(X(3), X(4), m3, betweenNoise);
+  BetweenFactor<Similarity3> b4(X(4), X(5), m4, betweenNoise);
+  BetweenFactor<Similarity3> lc(X(5), X(1), loop, betweenNoise2);
+
+  // Create graph
+  NonlinearFactorGraph graph;
+  graph.addPrior(X(1), prior, model); // Prior !
+  graph.push_back(b1);
+  graph.push_back(b2);
+  graph.push_back(b3);
+  graph.push_back(b4);
+  graph.push_back(lc);
+
+  //graph.print("Full Graph\n");
+  Values initial;
+  initial.insert<Similarity3>(X(1), Similarity3());
+  initial.insert<Similarity3>(X(2),
+      Similarity3(Rot3::Ypr(M_PI / 2.0, 0, 0), Point3(1, 0, 0), 1.1));
+  initial.insert<Similarity3>(X(3),
+      Similarity3(Rot3::Ypr(2.0 * M_PI / 2.0, 0, 0), Point3(0.9, 1.1, 0), 1.2));
+  initial.insert<Similarity3>(X(4),
+      Similarity3(Rot3::Ypr(3.0 * M_PI / 2.0, 0, 0), Point3(0, 1, 0), 1.3));
+  initial.insert<Similarity3>(X(5),
+      Similarity3(Rot3::Ypr(4.0 * M_PI / 2.0, 0, 0), Point3(0, 0, 0), 1.0));
+
+  //initial.print("Initial Estimate\n");
+
+  Values result;
+  result = LevenbergMarquardtOptimizer(graph, initial).optimize();
+  //result.print("Optimized Estimate\n");
+  Pose3 p1, p2, p3, p4, p5;
+  p1 = Pose3(result.at<Similarity3>(X(1)));
+  p2 = Pose3(result.at<Similarity3>(X(2)));
+  p3 = Pose3(result.at<Similarity3>(X(3)));
+  p4 = Pose3(result.at<Similarity3>(X(4)));
+  p5 = Pose3(result.at<Similarity3>(X(5)));
+
+  //p1.print("Pose1");
+  //p2.print("Pose2");
+  //p3.print("Pose3");
+  //p4.print("Pose4");
+  //p5.print("Pose5");
+
+  Similarity3 expected(0.7);
+  EXPECT(assert_equal(expected, result.at<Similarity3>(X(5)), 0.4));
+}
+
+//******************************************************************************
+// Align points (p,q) assuming that p = T*q + noise
+TEST(Similarity3, AlignScaledPointClouds) {
+// Create ground truth
+  Point3 q1(0, 0, 0), q2(1, 0, 0), q3(0, 1, 0);
+
+  // Create transformed cloud (noiseless)
+//  Point3 p1 = T4 * q1, p2 = T4 * q2, p3 = T4 * q3;
+
+  // Create an unknown expression
+  Expression<Similarity3> unknownT(0); // use key 0
+
+  // Create constant expressions for the ground truth points
+  Expression<Point3> q1_(q1), q2_(q2), q3_(q3);
+
+  // Create prediction expressions
+  Expression<Point3> predict1(unknownT, &Similarity3::transformFrom, q1_);
+  Expression<Point3> predict2(unknownT, &Similarity3::transformFrom, q2_);
+  Expression<Point3> predict3(unknownT, &Similarity3::transformFrom, q3_);
+
+//// Create Expression factor graph
+//  ExpressionFactorGraph graph;
+//  graph.addExpressionFactor(predict1, p1, R); // |T*q1 - p1|
+//  graph.addExpressionFactor(predict2, p2, R); // |T*q2 - p2|
+//  graph.addExpressionFactor(predict3, p3, R); // |T*q3 - p3|
+}
+
+//******************************************************************************
+TEST(Similarity3 , Invariants) {
+  Similarity3 id;
+
+  EXPECT(check_group_invariants(id, id));
+  EXPECT(check_group_invariants(id, T3));
+  EXPECT(check_group_invariants(T2, id));
+  EXPECT(check_group_invariants(T2, T3));
+
+  EXPECT(check_manifold_invariants(id, id));
+  EXPECT(check_manifold_invariants(id, T3));
+  EXPECT(check_manifold_invariants(T2, id));
+  EXPECT(check_manifold_invariants(T2, T3));
+}
+
+//******************************************************************************
+TEST(Similarity3 , LieGroupDerivatives) {
+  Similarity3 id;
+
+  CHECK_LIE_GROUP_DERIVATIVES(id, id);
+  CHECK_LIE_GROUP_DERIVATIVES(id, T2);
+  CHECK_LIE_GROUP_DERIVATIVES(T2, id);
+  CHECK_LIE_GROUP_DERIVATIVES(T2, T3);
+}
+
+//******************************************************************************
+int main() {
+  TestResult tr;
+  return TestRegistry::runAllTests(tr);
+}
+//******************************************************************************
+
--- gtsam-4.1.0.orig/gtsam/geometry/tests/testSimpleCamera.cpp
+++ gtsam-4.1.0/gtsam/geometry/tests/testSimpleCamera.cpp
@@ -26,6 +26,8 @@
 using namespace std;
 using namespace gtsam;
 
+#ifdef GTSAM_ALLOW_DEPRECATED_SINCE_V41
+
 static const Cal3_S2 K(625, 625, 0, 0, 0);
 
 static const Pose3 pose1(Rot3(Vector3(1, -1, -1).asDiagonal()),
@@ -149,6 +151,8 @@ TEST( SimpleCamera, simpleCamera)
   CHECK(assert_equal(expected, actual,1e-1));
 }
 
+#endif
+
 /* ************************************************************************* */
 int main() { TestResult tr; return TestRegistry::runAllTests(tr); }
 /* ************************************************************************* */
--- gtsam-4.1.0.orig/gtsam/geometry/tests/testUnit3.cpp
+++ gtsam-4.1.0/gtsam/geometry/tests/testUnit3.cpp
@@ -501,6 +501,7 @@ TEST(actualH, Serialization) {
   EXPECT(serializationTestHelpers::equalsBinary(p));
 }
 
+
 /* ************************************************************************* */
 int main() {
   srand(time(nullptr));
--- gtsam-4.1.0.orig/gtsam/geometry/triangulation.h
+++ gtsam-4.1.0/gtsam/geometry/triangulation.h
@@ -18,8 +18,10 @@
 
 #pragma once
 
-#include <gtsam/geometry/PinholeCamera.h>
+#include <gtsam/geometry/Cal3_S2.h>
+#include <gtsam/geometry/Cal3Bundler.h>
 #include <gtsam/geometry/CameraSet.h>
+#include <gtsam/geometry/PinholeCamera.h>
 #include <gtsam/geometry/Pose2.h>
 #include <gtsam/slam/TriangulationFactor.h>
 #include <gtsam/nonlinear/NonlinearFactorGraph.h>
@@ -494,5 +496,9 @@ TriangulationResult triangulateSafe(cons
     }
 }
 
+// Vector of Cameras - used by the Python/MATLAB wrapper
+using CameraSetCal3Bundler = CameraSet<PinholeCamera<Cal3Bundler>>;
+using CameraSetCal3_S2 = CameraSet<PinholeCamera<Cal3_S2>>;
+
 } // \namespace gtsam
 
--- gtsam-4.1.0.orig/gtsam/gtsam.i
+++ gtsam-4.1.0/gtsam/gtsam.i
@@ -5,117 +5,7 @@
  * These are the current classes available through the matlab and python wrappers,
  * add more functions/classes as they are available.
  *
- * IMPORTANT: the python wrapper supports keyword arguments for functions/methods. Hence, the
- *            argument names matter. An implementation restriction is that in overloaded methods
- *            or functions, arguments of different types *have* to have different names.
- *
- * Requirements:
- *   Classes must start with an uppercase letter
- *      - Can wrap a typedef
- *   Only one Method/Constructor per line, though methods/constructors can extend across multiple lines
- *   Methods can return
- *     - Eigen types:       Matrix, Vector
- *     - C/C++ basic types: string, bool, size_t, int, double, char, unsigned char
- *     - void
- *     - Any class with which be copied with boost::make_shared()
- *     - boost::shared_ptr of any object type
- *   Constructors
- *     - Overloads are supported, but arguments of different types *have* to have different names
- *     - A class with no constructors can be returned from other functions but not allocated directly in MATLAB
- *   Methods
- *     - Constness has no effect
- *     - Specify by-value (not reference) return types, even if C++ method returns reference
- *     - Must start with a letter (upper or lowercase)
- *     - Overloads are supported
- *   Static methods
- *     - Must start with a letter (upper or lowercase) and use the "static" keyword
- *     - The first letter will be made uppercase in the generated MATLAB interface
- *     - Overloads are supported, but arguments of different types *have* to have different names
- *   Arguments to functions any of
- *      - Eigen types:       Matrix, Vector
- *      - Eigen types and classes as an optionally const reference
- *     - C/C++ basic types: string, bool, size_t, size_t, double, char, unsigned char
- *     - Any class with which be copied with boost::make_shared() (except Eigen)
- *     - boost::shared_ptr of any object type (except Eigen)
- *   Comments can use either C++ or C style, with multiple lines
- *   Namespace definitions
- *     - Names of namespaces must start with a lowercase letter
- *      - start a namespace with "namespace {"
- *      - end a namespace with exactly "}"
- *      - Namespaces can be nested
- *   Namespace usage
- *      - Namespaces can be specified for classes in arguments and return values
- *      - In each case, the namespace must be fully specified, e.g., "namespace1::namespace2::ClassName"
- *   Includes in C++ wrappers
- *     - All includes will be collected and added in a single file
- *     - All namespaces must have angle brackets: <path>
- *     - No default includes will be added
- *   Global/Namespace functions
- *     - Functions specified outside of a class are global
- *     - Can be overloaded with different arguments
- *     - Can have multiple functions of the same name in different namespaces
- *   Using classes defined in other modules
- *     - If you are using a class 'OtherClass' not wrapped in this definition file, add "class OtherClass;" to avoid a dependency error
- *   Virtual inheritance
- *     - Specify fully-qualified base classes, i.e. "virtual class Derived : ns::Base {" where "ns" is the namespace
- *     - Mark with 'virtual' keyword, e.g. "virtual class Base {", and also "virtual class Derived : ns::Base {"
- *     - Forward declarations must also be marked virtual, e.g. "virtual class ns::Base;" and
- *       also "virtual class ns::Derived;"
- *     - Pure virtual (abstract) classes should list no constructors in this interface file
- *     - Virtual classes must have a clone() function in C++ (though it does not have to be included
- *       in the MATLAB interface).  clone() will be called whenever an object copy is needed, instead
- *       of using the copy constructor (which is used for non-virtual objects).
- *     - Signature of clone function - will be called virtually, so must appear at least at the top of the inheritance tree
- *           virtual boost::shared_ptr<CLASS_NAME> clone() const;
- *   Class Templates
- *     - Basic templates are supported either with an explicit list of types to instantiate,
- *       e.g. template<T = {gtsam::Pose2, gtsam::Rot2, gtsam::Point3}> class Class1 { ... };
- *       or with typedefs, e.g.
- *       template<T, U> class Class2 { ... };
- *       typedef Class2<Type1, Type2> MyInstantiatedClass;
- *     - In the class definition, appearances of the template argument(s) will be replaced with their
- *       instantiated types, e.g. 'void setValue(const T& value);'.
- *     - To refer to the instantiation of the template class itself, use 'This', i.e. 'static This Create();'
- *     - To create new instantiations in other modules, you must copy-and-paste the whole class definition
- *       into the new module, but use only your new instantiation types.
- *     - When forward-declaring template instantiations, use the generated/typedefed name, e.g.
- *       class gtsam::Class1Pose2;
- *       class gtsam::MyInstantiatedClass;
- *   Boost.serialization within Matlab:
- *     - you need to mark classes as being serializable in the markup file (see this file for an example).
- *     - There are two options currently, depending on the class.  To "mark" a class as serializable,
- *       add a function with a particular signature so that wrap will catch it.
- *        - Add "void serialize()" to a class to create serialization functions for a class.
- *          Adding this flag subsumes the serializable() flag below. Requirements:
- *             - A default constructor must be publicly accessible
- *             - Must not be an abstract base class
- *             - The class must have an actual boost.serialization serialize() function.
- *        - Add "void serializable()" to a class if you only want the class to be serialized as a
- *          part of a container (such as noisemodel). This version does not require a publicly
- *          accessible default constructor.
- *   Forward declarations and class definitions for Cython:
- *     - Need to specify the base class (both this forward class and base class are declared in an external cython header)
- *       This is so Cython can generate proper inheritance.
- *       Example when wrapping a gtsam-based project:
- *          // forward declarations
- *          virtual class gtsam::NonlinearFactor
- *          virtual class gtsam::NoiseModelFactor : gtsam::NonlinearFactor
- *          // class definition
- *          #include <MyFactor.h>
- *          virtual class MyFactor : gtsam::NoiseModelFactor {...};
- *    - *DO NOT* re-define overriden function already declared in the external (forward-declared) base class
- *        - This will cause an ambiguity problem in Cython pxd header file
- */
-
-/**
- * Status:
- *  - TODO: default values for arguments
- *    - WORKAROUND: make multiple versions of the same function for different configurations of default arguments
- *  - TODO: Handle gtsam::Rot3M conversions to quaternions
- *  - TODO: Parse return of const ref arguments
- *  - TODO: Parse std::string variants and convert directly to special string
- *  - TODO: Add enum support
- *  - TODO: Add generalized serialization support via boost.serialization with hooks to matlab save/load
+ * Please refer to the wrapping docs: https://github.com/borglab/wrap/blob/master/README.md
  */
 
 namespace gtsam {
@@ -144,6 +34,9 @@ class KeyList {
   void remove(size_t key);
 
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 // Actually a FastSet<Key>
@@ -169,6 +62,9 @@ class KeySet {
   bool count(size_t key) const; // returns true if value exists
 
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 // Actually a vector<Key>
@@ -190,6 +86,9 @@ class KeyVector {
   void push_back(size_t key) const;
 
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 // Actually a FastMap<Key,int>
@@ -259,124 +158,79 @@ class IndexPair {
   size_t j() const;
 };
 
-template<KEY = {gtsam::IndexPair}>
-class DSFMap {
-  DSFMap();
-  KEY find(const KEY& key) const;
-  void merge(const KEY& x, const KEY& y);
-};
-
-#include <gtsam/base/Matrix.h>
-bool linear_independent(Matrix A, Matrix B, double tol);
-
-#include <gtsam/base/Value.h>
-virtual class Value {
-  // No constructors because this is an abstract class
-
-  // Testable
-  void print(string s) const;
+// template<KEY = {gtsam::IndexPair}>
+// class DSFMap {
+//   DSFMap();
+//   KEY find(const KEY& key) const;
+//   void merge(const KEY& x, const KEY& y);
+//   std::map<KEY, Set> sets();
+// };
 
-  // Manifold
-  size_t dim() const;
-};
+class IndexPairSet {
+  IndexPairSet();
+  // common STL methods
+  size_t size() const;
+  bool empty() const;
+  void clear();
 
-#include <gtsam/base/GenericValue.h>
-template<T = {Vector, Matrix, gtsam::Point2, gtsam::Point3, gtsam::Rot2, gtsam::Rot3, gtsam::Pose2, gtsam::Pose3, gtsam::StereoPoint2, gtsam::Cal3_S2, gtsam::Cal3DS2, gtsam::Cal3Bundler, gtsam::EssentialMatrix, gtsam::CalibratedCamera, gtsam::SimpleCamera, gtsam::imuBias::ConstantBias}>
-virtual class GenericValue : gtsam::Value {
-  void serializable() const;
+  // structure specific methods
+  void insert(gtsam::IndexPair key);
+  bool erase(gtsam::IndexPair key); // returns true if value was removed
+  bool count(gtsam::IndexPair key) const; // returns true if value exists
 };
 
-#include <gtsam/base/deprecated/LieScalar.h>
-class LieScalar {
-  // Standard constructors
-  LieScalar();
-  LieScalar(double d);
-
-  // Standard interface
-  double value() const;
-
-  // Testable
-  void print(string s) const;
-  bool equals(const gtsam::LieScalar& expected, double tol) const;
+class IndexPairVector {
+  IndexPairVector();
+  IndexPairVector(const gtsam::IndexPairVector& other);
 
-  // Group
-  static gtsam::LieScalar identity();
-  gtsam::LieScalar inverse() const;
-  gtsam::LieScalar compose(const gtsam::LieScalar& p) const;
-  gtsam::LieScalar between(const gtsam::LieScalar& l2) const;
-
-  // Manifold
-  size_t dim() const;
-  gtsam::LieScalar retract(Vector v) const;
-  Vector localCoordinates(const gtsam::LieScalar& t2) const;
+  // common STL methods
+  size_t size() const;
+  bool empty() const;
+  void clear();
 
-  // Lie group
-  static gtsam::LieScalar Expmap(Vector v);
-  static Vector Logmap(const gtsam::LieScalar& p);
+  // structure specific methods
+  gtsam::IndexPair at(size_t i) const;
+  void push_back(gtsam::IndexPair key) const;
 };
 
-#include <gtsam/base/deprecated/LieVector.h>
-class LieVector {
-  // Standard constructors
-  LieVector();
-  LieVector(Vector v);
+gtsam::IndexPairVector IndexPairSetAsArray(gtsam::IndexPairSet& set);
 
-  // Standard interface
-  Vector vector() const;
-
-  // Testable
-  void print(string s) const;
-  bool equals(const gtsam::LieVector& expected, double tol) const;
-
-  // Group
-  static gtsam::LieVector identity();
-  gtsam::LieVector inverse() const;
-  gtsam::LieVector compose(const gtsam::LieVector& p) const;
-  gtsam::LieVector between(const gtsam::LieVector& l2) const;
-
-  // Manifold
-  size_t dim() const;
-  gtsam::LieVector retract(Vector v) const;
-  Vector localCoordinates(const gtsam::LieVector& t2) const;
+class IndexPairSetMap {
+  IndexPairSetMap();
+  // common STL methods
+  size_t size() const;
+  bool empty() const;
+  void clear();
 
-  // Lie group
-  static gtsam::LieVector Expmap(Vector v);
-  static Vector Logmap(const gtsam::LieVector& p);
+  // structure specific methods
+  gtsam::IndexPairSet at(gtsam::IndexPair& key);
+};
 
-  // enabling serialization functionality
-  void serialize() const;
+class DSFMapIndexPair {
+  DSFMapIndexPair();
+  gtsam::IndexPair find(const gtsam::IndexPair& key) const;
+  void merge(const gtsam::IndexPair& x, const gtsam::IndexPair& y);
+  gtsam::IndexPairSetMap sets();
 };
 
-#include <gtsam/base/deprecated/LieMatrix.h>
-class LieMatrix {
-  // Standard constructors
-  LieMatrix();
-  LieMatrix(Matrix v);
+#include <gtsam/base/Matrix.h>
+bool linear_independent(Matrix A, Matrix B, double tol);
 
-  // Standard interface
-  Matrix matrix() const;
+#include <gtsam/base/Value.h>
+virtual class Value {
+  // No constructors because this is an abstract class
 
   // Testable
   void print(string s) const;
-  bool equals(const gtsam::LieMatrix& expected, double tol) const;
-
-  // Group
-  static gtsam::LieMatrix identity();
-  gtsam::LieMatrix inverse() const;
-  gtsam::LieMatrix compose(const gtsam::LieMatrix& p) const;
-  gtsam::LieMatrix between(const gtsam::LieMatrix& l2) const;
 
   // Manifold
   size_t dim() const;
-  gtsam::LieMatrix retract(Vector v) const;
-  Vector localCoordinates(const gtsam::LieMatrix & t2) const;
-
-  // Lie group
-  static gtsam::LieMatrix Expmap(Vector v);
-  static Vector Logmap(const gtsam::LieMatrix& p);
+};
 
-  // enabling serialization functionality
-  void serialize() const;
+#include <gtsam/base/GenericValue.h>
+template<T = {Vector, Matrix, gtsam::Point2, gtsam::Point3, gtsam::Rot2, gtsam::Rot3, gtsam::Pose2, gtsam::Pose3, gtsam::StereoPoint2, gtsam::Cal3_S2, gtsam::Cal3DS2, gtsam::Cal3Bundler, gtsam::EssentialMatrix, gtsam::CalibratedCamera, gtsam::imuBias::ConstantBias}>
+virtual class GenericValue : gtsam::Value {
+  void serializable() const;
 };
 
 //*************************************************************************
@@ -406,10 +260,12 @@ class Point2 {
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 // std::vector<gtsam::Point2>
-#include <gtsam/geometry/Point2.h>
 class Point2Vector
 {
   // Constructors
@@ -451,6 +307,12 @@ class StereoPoint2 {
   gtsam::StereoPoint2 compose(const gtsam::StereoPoint2& p2) const;
   gtsam::StereoPoint2 between(const gtsam::StereoPoint2& p2) const;
 
+  // Operator Overloads
+  gtsam::StereoPoint2 operator-() const;
+  // gtsam::StereoPoint2 operator+(Vector b) const;  //TODO Mixed types not yet supported
+  gtsam::StereoPoint2 operator+(const gtsam::StereoPoint2& p2) const;
+  gtsam::StereoPoint2 operator-(const gtsam::StereoPoint2& p2) const;
+
   // Manifold
   gtsam::StereoPoint2 retract(Vector v) const;
   Vector localCoordinates(const gtsam::StereoPoint2& p) const;
@@ -467,6 +329,9 @@ class StereoPoint2 {
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 #include <gtsam/geometry/Point3.h>
@@ -491,6 +356,17 @@ class Point3 {
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
+};
+
+class Point3Pairs {
+  Point3Pairs();
+  size_t size() const;
+  bool empty() const;
+  gtsam::Point3Pair at(size_t n) const;
+  void push_back(const gtsam::Point3Pair& point_pair);
 };
 
 #include <gtsam/geometry/Rot2.h>
@@ -512,6 +388,9 @@ class Rot2 {
   gtsam::Rot2 compose(const gtsam::Rot2& p2) const;
   gtsam::Rot2 between(const gtsam::Rot2& p2) const;
 
+  // Operator Overloads
+  gtsam::Rot2 operator*(const gtsam::Rot2& p2) const;
+
   // Manifold
   gtsam::Rot2 retract(Vector v) const;
   Vector localCoordinates(const gtsam::Rot2& p) const;
@@ -519,6 +398,7 @@ class Rot2 {
   // Lie Group
   static gtsam::Rot2 Expmap(Vector v);
   static Vector Logmap(const gtsam::Rot2& p);
+  Vector logmap(const gtsam::Rot2& p);
 
   // Group Action on Point2
   gtsam::Point2 rotate(const gtsam::Point2& point) const;
@@ -535,6 +415,9 @@ class Rot2 {
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 #include <gtsam/geometry/SO3.h>
@@ -556,6 +439,9 @@ class SO3 {
   gtsam::SO3 between(const gtsam::SO3& R) const;
   gtsam::SO3 compose(const gtsam::SO3& R) const;
 
+  // Operator Overloads
+  gtsam::SO3 operator*(const gtsam::SO3& R) const;
+
   // Manifold
   gtsam::SO3 retract(Vector v) const;
   Vector localCoordinates(const gtsam::SO3& R) const;
@@ -583,6 +469,9 @@ class SO4 {
   gtsam::SO4 between(const gtsam::SO4& Q) const;
   gtsam::SO4 compose(const gtsam::SO4& Q) const;
 
+  // Operator Overloads
+  gtsam::SO4 operator*(const gtsam::SO4& Q) const;
+
   // Manifold
   gtsam::SO4 retract(Vector v) const;
   Vector localCoordinates(const gtsam::SO4& Q) const;
@@ -610,6 +499,9 @@ class SOn {
   gtsam::SOn between(const gtsam::SOn& Q) const;
   gtsam::SOn compose(const gtsam::SOn& Q) const;
 
+  // Operator Overloads
+  gtsam::SOn operator*(const gtsam::SOn& Q) const;
+
   // Manifold
   gtsam::SOn retract(Vector v) const;
   Vector localCoordinates(const gtsam::SOn& Q) const;
@@ -623,6 +515,15 @@ class SOn {
   void serialize() const;
 };
 
+#include <gtsam/geometry/Quaternion.h>
+class Quaternion {
+  double w() const;
+  double x() const;
+  double y() const;
+  double z() const;
+  Vector coeffs() const;
+};
+
 #include <gtsam/geometry/Rot3.h>
 class Rot3 {
   // Standard Constructors and Named Constructors
@@ -632,6 +533,7 @@ class Rot3 {
   Rot3(double R11, double R12, double R13,
       double R21, double R22, double R23,
       double R31, double R32, double R33);
+  Rot3(double w, double x, double y, double z);
 
   static gtsam::Rot3 Rx(double t);
   static gtsam::Rot3 Ry(double t);
@@ -658,8 +560,11 @@ class Rot3 {
   gtsam::Rot3 compose(const gtsam::Rot3& p2) const;
   gtsam::Rot3 between(const gtsam::Rot3& p2) const;
 
+  // Operator Overloads
+  gtsam::Rot3 operator*(const gtsam::Rot3& p2) const;
+
   // Manifold
-  //gtsam::Rot3 retractCayley(Vector v) const; // FIXME, does not exist in both Matrix and Quaternion options
+  //gtsam::Rot3 retractCayley(Vector v) const; // TODO, does not exist in both Matrix and Quaternion options
   gtsam::Rot3 retract(Vector v) const;
   Vector localCoordinates(const gtsam::Rot3& p) const;
 
@@ -670,6 +575,7 @@ class Rot3 {
   // Standard Interface
   static gtsam::Rot3 Expmap(Vector v);
   static Vector Logmap(const gtsam::Rot3& p);
+  Vector logmap(const gtsam::Rot3& p);
   Matrix matrix() const;
   Matrix transpose() const;
   gtsam::Point3 column(size_t index) const;
@@ -680,12 +586,15 @@ class Rot3 {
   double pitch() const;
   double yaw() const;
   pair<gtsam::Unit3, double> axisAngle() const;
-//  Vector toQuaternion() const;  // FIXME: Can't cast to Vector properly
+  gtsam::Quaternion toQuaternion() const;
   Vector quaternion() const;
   gtsam::Rot3 slerp(double t, const gtsam::Rot3& other) const;
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 #include <gtsam/geometry/Pose2.h>
@@ -708,6 +617,9 @@ class Pose2 {
   gtsam::Pose2 compose(const gtsam::Pose2& p2) const;
   gtsam::Pose2 between(const gtsam::Pose2& p2) const;
 
+  // Operator Overloads
+  gtsam::Pose2 operator*(const gtsam::Pose2& p2) const;
+
   // Manifold
   gtsam::Pose2 retract(Vector v) const;
   Vector localCoordinates(const gtsam::Pose2& p) const;
@@ -715,6 +627,7 @@ class Pose2 {
   // Lie Group
   static gtsam::Pose2 Expmap(Vector v);
   static Vector Logmap(const gtsam::Pose2& p);
+  Vector logmap(const gtsam::Pose2& p);
   static Matrix ExpmapDerivative(Vector v);
   static Matrix LogmapDerivative(const gtsam::Pose2& v);
   Matrix AdjointMap() const;
@@ -740,6 +653,9 @@ class Pose2 {
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 #include <gtsam/geometry/Pose3.h>
@@ -748,7 +664,7 @@ class Pose3 {
   Pose3();
   Pose3(const gtsam::Pose3& other);
   Pose3(const gtsam::Rot3& r, const gtsam::Point3& t);
-  Pose3(const gtsam::Pose2& pose2); // FIXME: shadows Pose3(Pose3 pose)
+  Pose3(const gtsam::Pose2& pose2);
   Pose3(Matrix mat);
 
   // Testable
@@ -761,6 +677,9 @@ class Pose3 {
   gtsam::Pose3 compose(const gtsam::Pose3& pose) const;
   gtsam::Pose3 between(const gtsam::Pose3& pose) const;
 
+  // Operator Overloads
+  gtsam::Pose3 operator*(const gtsam::Pose3& pose) const;
+
   // Manifold
   gtsam::Pose3 retract(Vector v) const;
   Vector localCoordinates(const gtsam::Pose3& pose) const;
@@ -768,6 +687,7 @@ class Pose3 {
   // Lie Group
   static gtsam::Pose3 Expmap(Vector v);
   static Vector Logmap(const gtsam::Pose3& pose);
+  Vector logmap(const gtsam::Pose3& pose);
   Matrix AdjointMap() const;
   Vector Adjoint(Vector xi) const;
   static Matrix adjointMap_(Vector xi);
@@ -795,10 +715,19 @@ class Pose3 {
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
+};
+
+class Pose3Pairs {
+  Pose3Pairs();
+  size_t size() const;
+  bool empty() const;
+  gtsam::Pose3Pair at(size_t n) const;
+  void push_back(const gtsam::Pose3Pair& pose_pair);
 };
 
-// std::vector<gtsam::Pose3>
-#include <gtsam/geometry/Pose3.h>
 class Pose3Vector
 {
   Pose3Vector();
@@ -828,6 +757,15 @@ class Unit3 {
   size_t dim() const;
   gtsam::Unit3 retract(Vector v) const;
   Vector localCoordinates(const gtsam::Unit3& s) const;
+
+  // enabling serialization functionality
+  void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
+
+  // enabling function to compare objects
+  bool equals(const gtsam::Unit3& expected, double tol) const;
 };
 
 #include <gtsam/geometry/EssentialMatrix.h>
@@ -883,11 +821,13 @@ class Cal3_S2 {
   gtsam::Point2 principalPoint() const;
   Vector vector() const;
   Matrix K() const;
-  Matrix matrix() const;
-  Matrix matrix_inverse() const;
+  Matrix inverse() const;
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 #include <gtsam/geometry/Cal3DS2_Base.h>
@@ -912,10 +852,13 @@ virtual class Cal3DS2_Base {
 
   // Action on Point2
   gtsam::Point2 uncalibrate(const gtsam::Point2& p) const;
-  gtsam::Point2 calibrate(const gtsam::Point2& p, double tol) const;
+  gtsam::Point2 calibrate(const gtsam::Point2& p) const;
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 #include <gtsam/geometry/Cal3DS2.h>
@@ -937,6 +880,9 @@ virtual class Cal3DS2 : gtsam::Cal3DS2_B
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 #include <gtsam/geometry/Cal3Unified.h>
@@ -963,6 +909,9 @@ virtual class Cal3Unified : gtsam::Cal3D
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 #include <gtsam/geometry/Cal3_S2Stereo.h>
@@ -991,6 +940,7 @@ class Cal3Bundler {
   // Standard Constructors
   Cal3Bundler();
   Cal3Bundler(double fx, double k1, double k2, double u0, double v0);
+  Cal3Bundler(double fx, double k1, double k2, double u0, double v0, double tol);
 
   // Testable
   void print(string s) const;
@@ -1003,7 +953,7 @@ class Cal3Bundler {
   Vector localCoordinates(const gtsam::Cal3Bundler& c) const;
 
   // Action on Point2
-  gtsam::Point2 calibrate(const gtsam::Point2& p, double tol) const;
+  gtsam::Point2 calibrate(const gtsam::Point2& p) const;
   gtsam::Point2 uncalibrate(const gtsam::Point2& p) const;
 
   // Standard Interface
@@ -1011,14 +961,17 @@ class Cal3Bundler {
   double fy() const;
   double k1() const;
   double k2() const;
-  double u0() const;
-  double v0() const;
+  double px() const;
+  double py() const;
   Vector vector() const;
   Vector k() const;
-  //Matrix K() const; //FIXME: Uppercase
+  Matrix K() const;
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 #include <gtsam/geometry/CalibratedCamera.h>
@@ -1045,10 +998,15 @@ class CalibratedCamera {
 
   // Standard Interface
   gtsam::Pose3 pose() const;
-  double range(const gtsam::Point3& p) const; // TODO: Other overloaded range methods
+  double range(const gtsam::Point3& point) const;
+  double range(const gtsam::Pose3& pose) const;
+  double range(const gtsam::CalibratedCamera& camera) const;
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 #include <gtsam/geometry/PinholeCamera.h>
@@ -1087,57 +1045,50 @@ class PinholeCamera {
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
-#include <gtsam/geometry/SimpleCamera.h>
-virtual class SimpleCamera {
-  // Standard Constructors and Named Constructors
-  SimpleCamera();
-  SimpleCamera(const gtsam::Pose3& pose);
-  SimpleCamera(const gtsam::Pose3& pose, const gtsam::Cal3_S2& K);
-  static gtsam::SimpleCamera Level(const gtsam::Cal3_S2& K, const gtsam::Pose2& pose, double height);
-  static gtsam::SimpleCamera Level(const gtsam::Pose2& pose, double height);
-  static gtsam::SimpleCamera Lookat(const gtsam::Point3& eye, const gtsam::Point3& target,
-      const gtsam::Point3& upVector, const gtsam::Cal3_S2& K);
-  static gtsam::SimpleCamera Lookat(const gtsam::Point3& eye, const gtsam::Point3& target,
-      const gtsam::Point3& upVector);
 
-  // Testable
-  void print(string s) const;
-  bool equals(const gtsam::SimpleCamera& camera, double tol) const;
+#include <gtsam/geometry/Similarity3.h>
+class Similarity3 {
+  // Standard Constructors
+  Similarity3();
+  Similarity3(double s);
+  Similarity3(const gtsam::Rot3& R, const gtsam::Point3& t, double s);
+  Similarity3(const Matrix& R, const Vector& t, double s);
+  Similarity3(const Matrix& T);
+
+  gtsam::Pose3 transformFrom(const gtsam::Pose3& T);
+  static gtsam::Similarity3 Align(const gtsam::Point3Pairs & abPointPairs);
+  static gtsam::Similarity3 Align(const gtsam::Pose3Pairs & abPosePairs);
 
   // Standard Interface
-  gtsam::Pose3 pose() const;
-  gtsam::Cal3_S2 calibration() const;
-
-  // Manifold
-  gtsam::SimpleCamera retract(Vector d) const;
-  Vector localCoordinates(const gtsam::SimpleCamera& T2) const;
-  size_t dim() const;
-  static size_t Dim();
-
-  // Transformations and measurement functions
-  static gtsam::Point2 Project(const gtsam::Point3& cameraPoint);
-  pair<gtsam::Point2,bool> projectSafe(const gtsam::Point3& pw) const;
-  gtsam::Point2 project(const gtsam::Point3& point);
-  gtsam::Point3 backproject(const gtsam::Point2& p, double depth) const;
-  double range(const gtsam::Point3& point);
-  double range(const gtsam::Pose3& pose);
-
-  // enabling serialization functionality
-  void serialize() const;
-
+  const Matrix matrix() const;
+  const gtsam::Rot3& rotation();
+  const gtsam::Point3& translation();
+  double scale() const;
 };
 
-gtsam::SimpleCamera simpleCamera(const Matrix& P);
 
+// Forward declaration of PinholeCameraCalX is defined here.
+#include <gtsam/geometry/SimpleCamera.h>
 // Some typedefs for common camera types
 // PinholeCameraCal3_S2 is the same as SimpleCamera above
 typedef gtsam::PinholeCamera<gtsam::Cal3_S2> PinholeCameraCal3_S2;
-// due to lack of jacobians of Cal3DS2_Base::calibrate, PinholeCamera does not apply to Cal3DS2/Unified
-//typedef gtsam::PinholeCamera<gtsam::Cal3DS2> PinholeCameraCal3DS2;
-//typedef gtsam::PinholeCamera<gtsam::Cal3Unified> PinholeCameraCal3Unified;
-//typedef gtsam::PinholeCamera<gtsam::Cal3Bundler> PinholeCameraCal3Bundler;
+typedef gtsam::PinholeCamera<gtsam::Cal3DS2> PinholeCameraCal3DS2;
+typedef gtsam::PinholeCamera<gtsam::Cal3Unified> PinholeCameraCal3Unified;
+typedef gtsam::PinholeCamera<gtsam::Cal3Bundler> PinholeCameraCal3Bundler;
+
+template<T>
+class CameraSet {
+  CameraSet();
+
+  // structure specific methods
+  T at(size_t i) const;
+  void push_back(const T& cam);
+};
 
 #include <gtsam/geometry/StereoCamera.h>
 class StereoCamera {
@@ -1166,11 +1117,14 @@ class StereoCamera {
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 #include <gtsam/geometry/triangulation.h>
 
-// Templates appear not yet supported for free functions
+// Templates appear not yet supported for free functions - issue raised at borglab/wrap#14 to add support
 gtsam::Point3 triangulatePoint3(const gtsam::Pose3Vector& poses,
     gtsam::Cal3_S2* sharedCal, const gtsam::Point2Vector& measurements,
     double rank_tol, bool optimize);
@@ -1180,7 +1134,13 @@ gtsam::Point3 triangulatePoint3(const gt
 gtsam::Point3 triangulatePoint3(const gtsam::Pose3Vector& poses,
     gtsam::Cal3Bundler* sharedCal, const gtsam::Point2Vector& measurements,
     double rank_tol, bool optimize);
-
+gtsam::Point3 triangulatePoint3(const gtsam::CameraSetCal3_S2& cameras,
+    const gtsam::Point2Vector& measurements, double rank_tol,
+    bool optimize);
+gtsam::Point3 triangulatePoint3(const gtsam::CameraSetCal3Bundler& cameras,
+    const gtsam::Point2Vector& measurements, double rank_tol,
+    bool optimize);
+    
 //*************************************************************************
 // Symbolic
 //*************************************************************************
@@ -1314,9 +1274,9 @@ class SymbolicBayesTree {
 };
 
 // class SymbolicBayesTreeClique {
-//   BayesTreeClique();
-//   BayesTreeClique(CONDITIONAL* conditional);
-// //  BayesTreeClique(const pair<typename ConditionalType::shared_ptr, typename ConditionalType::FactorType::shared_ptr>& result) : Base(result) {}
+//   SymbolicBayesTreeClique();
+//   SymbolicBayesTreeClique(CONDITIONAL* conditional);
+//   SymbolicBayesTreeClique(const pair<typename ConditionalType::shared_ptr, typename ConditionalType::FactorType::shared_ptr>& result) : Base(result) {}
 //
 //   bool equals(const This& other, double tol) const;
 //   void print(string s) const;
@@ -1327,13 +1287,13 @@ class SymbolicBayesTree {
 //   CONDITIONAL* conditional() const;
 //   bool isRoot() const;
 //   size_t treeSize() const;
-// //  const std::list<derived_ptr>& children() const { return children_; }
-// //  derived_ptr parent() const { return parent_.lock(); }
+//  const std::list<derived_ptr>& children() const { return children_; }
+//  derived_ptr parent() const { return parent_.lock(); }
 //
-//   // FIXME: need wrapped versions graphs, BayesNet
-// //  BayesNet<ConditionalType> shortcut(derived_ptr root, Eliminate function) const;
-// //  FactorGraph<FactorType> marginal(derived_ptr root, Eliminate function) const;
-// //  FactorGraph<FactorType> joint(derived_ptr C2, derived_ptr root, Eliminate function) const;
+//   // TODO: need wrapped versions graphs, BayesNet
+//  BayesNet<ConditionalType> shortcut(derived_ptr root, Eliminate function) const;
+//  FactorGraph<FactorType> marginal(derived_ptr root, Eliminate function) const;
+//  FactorGraph<FactorType> joint(derived_ptr C2, derived_ptr root, Eliminate function) const;
 //
 //   void deleteCachedShortcuts();
 // };
@@ -1614,6 +1574,9 @@ class VectorValues {
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 #include <gtsam/linear/GaussianFactor.h>
@@ -1675,6 +1638,9 @@ virtual class JacobianFactor : gtsam::Ga
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 #include <gtsam/linear/HessianFactor.h>
@@ -1706,6 +1672,9 @@ virtual class HessianFactor : gtsam::Gau
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 #include <gtsam/linear/GaussianFactorGraph.h>
@@ -1785,10 +1754,13 @@ class GaussianFactorGraph {
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 #include <gtsam/linear/GaussianConditional.h>
-virtual class GaussianConditional : gtsam::GaussianFactor {
+virtual class GaussianConditional : gtsam::JacobianFactor {
   //Constructors
   GaussianConditional(size_t key, Vector d, Matrix R, const gtsam::noiseModel::Diagonal* sigmas);
   GaussianConditional(size_t key, Vector d, Matrix R, size_t name1, Matrix S,
@@ -1848,6 +1820,8 @@ virtual class GaussianBayesNet {
   gtsam::KeySet keys() const;
   bool exists(size_t idx) const;
 
+  void saveGraph(const string& s) const;
+
   gtsam::GaussianConditional* front() const;
   gtsam::GaussianConditional* back() const;
   void push_back(gtsam::GaussianConditional* conditional);
@@ -1993,6 +1967,21 @@ class KalmanFilter {
 //*************************************************************************
 
 #include <gtsam/inference/Symbol.h>
+
+class Symbol {
+  Symbol();
+  Symbol(char c, uint64_t j);
+  Symbol(size_t key);
+
+  size_t key() const;
+  void print(const string& s) const;
+  bool equals(const gtsam::Symbol& expected, double tol) const;
+
+  char chr() const;
+  uint64_t index() const;
+  string string() const;
+};
+
 size_t symbol(char chr, size_t index);
 char symbolChr(size_t key);
 size_t symbolIndex(size_t key);
@@ -2075,6 +2064,9 @@ class Ordering {
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 #include <gtsam/nonlinear/NonlinearFactorGraph.h>
@@ -2099,7 +2091,7 @@ class NonlinearFactorGraph {
   gtsam::KeySet keys() const;
   gtsam::KeyVector keyVector() const;
 
-  template<T = {Vector, gtsam::Point2, gtsam::StereoPoint2, gtsam::Point3, gtsam::Rot2, gtsam::SO3, gtsam::SO4, gtsam::Rot3, gtsam::Pose2, gtsam::Pose3, gtsam::Cal3_S2,gtsam::CalibratedCamera, gtsam::SimpleCamera, gtsam::PinholeCameraCal3_S2, gtsam::imuBias::ConstantBias}>
+  template<T = {Vector, gtsam::Point2, gtsam::StereoPoint2, gtsam::Point3, gtsam::Rot2, gtsam::SO3, gtsam::SO4, gtsam::Rot3, gtsam::Pose2, gtsam::Pose3, gtsam::Cal3_S2,gtsam::CalibratedCamera, gtsam::PinholeCameraCal3_S2, gtsam::PinholeCamera<gtsam::Cal3Bundler>, gtsam::imuBias::ConstantBias}>
   void addPrior(size_t key, const T& prior, const gtsam::noiseModel::Base* noiseModel);
 
   // NonlinearFactorGraph
@@ -2113,6 +2105,11 @@ class NonlinearFactorGraph {
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
+
+  void saveGraph(const string& s) const;
 };
 
 #include <gtsam/nonlinear/NonlinearFactor.h>
@@ -2129,7 +2126,7 @@ virtual class NonlinearFactor {
   bool active(const gtsam::Values& c) const;
   gtsam::GaussianFactor* linearize(const gtsam::Values& c) const;
   gtsam::NonlinearFactor* clone() const;
-  // gtsam::NonlinearFactor* rekey(const gtsam::KeyVector& newKeys) const; //FIXME: Conversion from KeyVector to std::vector does not happen
+  // gtsam::NonlinearFactor* rekey(const gtsam::KeyVector& newKeys) const; //TODO: Conversion from KeyVector to std::vector does not happen
 };
 
 #include <gtsam/nonlinear/NonlinearFactor.h>
@@ -2169,6 +2166,9 @@ class Values {
   // enabling serialization functionality
   void serialize() const;
 
+  // enable pickling in python
+  void pickle() const;
+
   // New in 4.0, we have to specialize every insert/update/at to generate wrappers
   // Instead of the old:
   // void insert(size_t j, const gtsam::Value& value);
@@ -2188,11 +2188,13 @@ class Values {
   void insert(size_t j, const gtsam::SOn& P);
   void insert(size_t j, const gtsam::Rot3& rot3);
   void insert(size_t j, const gtsam::Pose3& pose3);
+  void insert(size_t j, const gtsam::Unit3& unit3);
   void insert(size_t j, const gtsam::Cal3_S2& cal3_s2);
   void insert(size_t j, const gtsam::Cal3DS2& cal3ds2);
   void insert(size_t j, const gtsam::Cal3Bundler& cal3bundler);
   void insert(size_t j, const gtsam::EssentialMatrix& essential_matrix);
   void insert(size_t j, const gtsam::PinholeCameraCal3_S2& simple_camera);
+  void insert(size_t j, const gtsam::PinholeCamera<gtsam::Cal3Bundler>& camera);
   void insert(size_t j, const gtsam::imuBias::ConstantBias& constant_bias);
   void insert(size_t j, const gtsam::NavState& nav_state);
 
@@ -2205,16 +2207,19 @@ class Values {
   void update(size_t j, const gtsam::SOn& P);
   void update(size_t j, const gtsam::Rot3& rot3);
   void update(size_t j, const gtsam::Pose3& pose3);
+  void update(size_t j, const gtsam::Unit3& unit3);
   void update(size_t j, const gtsam::Cal3_S2& cal3_s2);
   void update(size_t j, const gtsam::Cal3DS2& cal3ds2);
   void update(size_t j, const gtsam::Cal3Bundler& cal3bundler);
   void update(size_t j, const gtsam::EssentialMatrix& essential_matrix);
+  void update(size_t j, const gtsam::PinholeCameraCal3_S2& simple_camera);
+  void update(size_t j, const gtsam::PinholeCamera<gtsam::Cal3Bundler>& camera);
   void update(size_t j, const gtsam::imuBias::ConstantBias& constant_bias);
   void update(size_t j, const gtsam::NavState& nav_state);
   void update(size_t j, Vector vector);
   void update(size_t j, Matrix matrix);
 
-  template<T = {gtsam::Point2, gtsam::Point3, gtsam::Rot2, gtsam::Pose2, gtsam::SO3, gtsam::SO4, gtsam::SOn, gtsam::Rot3, gtsam::Pose3, gtsam::Cal3_S2, gtsam::Cal3DS2, gtsam::Cal3Bundler, gtsam::EssentialMatrix, gtsam::imuBias::ConstantBias, gtsam::NavState, Vector, Matrix}>
+  template<T = {gtsam::Point2, gtsam::Point3, gtsam::Rot2, gtsam::Pose2, gtsam::SO3, gtsam::SO4, gtsam::SOn, gtsam::Rot3, gtsam::Pose3, gtsam::Unit3, gtsam::Cal3_S2, gtsam::Cal3DS2, gtsam::Cal3Bundler, gtsam::EssentialMatrix, gtsam::PinholeCameraCal3_S2, gtsam::PinholeCamera<gtsam::Cal3Bundler>, gtsam::imuBias::ConstantBias, gtsam::NavState, Vector, Matrix}>
   T at(size_t j);
 
   /// version for double
@@ -2491,6 +2496,8 @@ class ISAM2Result {
   size_t getVariablesRelinearized() const;
   size_t getVariablesReeliminated() const;
   size_t getCliques() const;
+  double getErrorBefore() const;
+  double getErrorAfter() const;
 };
 
 class ISAM2 {
@@ -2507,16 +2514,17 @@ class ISAM2 {
   gtsam::ISAM2Result update(const gtsam::NonlinearFactorGraph& newFactors, const gtsam::Values& newTheta);
   gtsam::ISAM2Result update(const gtsam::NonlinearFactorGraph& newFactors, const gtsam::Values& newTheta, const gtsam::FactorIndices& removeFactorIndices);
   gtsam::ISAM2Result update(const gtsam::NonlinearFactorGraph& newFactors, const gtsam::Values& newTheta, const gtsam::FactorIndices& removeFactorIndices, const gtsam::KeyGroupMap& constrainedKeys);
-  // TODO: wrap the full version of update
- //void update(const gtsam::NonlinearFactorGraph& newFactors, const gtsam::Values& newTheta, const gtsam::KeyVector& removeFactorIndices, FastMap<Key,int>& constrainedKeys);
-  //void update(const gtsam::NonlinearFactorGraph& newFactors, const gtsam::Values& newTheta, const gtsam::KeyVector& removeFactorIndices, FastMap<Key,int>& constrainedKeys, bool force_relinearize);
+  gtsam::ISAM2Result update(const gtsam::NonlinearFactorGraph& newFactors, const gtsam::Values& newTheta, const gtsam::FactorIndices& removeFactorIndices, gtsam::KeyGroupMap& constrainedKeys, const gtsam::KeyList& noRelinKeys);
+  gtsam::ISAM2Result update(const gtsam::NonlinearFactorGraph& newFactors, const gtsam::Values& newTheta, const gtsam::FactorIndices& removeFactorIndices, gtsam::KeyGroupMap& constrainedKeys, const gtsam::KeyList& noRelinKeys, const gtsam::KeyList& extraReelimKeys);
+  gtsam::ISAM2Result update(const gtsam::NonlinearFactorGraph& newFactors, const gtsam::Values& newTheta, const gtsam::FactorIndices& removeFactorIndices, gtsam::KeyGroupMap& constrainedKeys, const gtsam::KeyList& noRelinKeys, const gtsam::KeyList& extraReelimKeys, bool force_relinearize);
 
   gtsam::Values getLinearizationPoint() const;
   gtsam::Values calculateEstimate() const;
   template <VALUE = {gtsam::Point2, gtsam::Rot2, gtsam::Pose2, gtsam::Point3,
                      gtsam::Rot3, gtsam::Pose3, gtsam::Cal3_S2, gtsam::Cal3DS2,
                      gtsam::Cal3Bundler, gtsam::EssentialMatrix,
-                     gtsam::SimpleCamera, gtsam::PinholeCameraCal3_S2, Vector, Matrix}>
+                     gtsam::PinholeCameraCal3_S2, gtsam::PinholeCamera<gtsam::Cal3Bundler>, 
+                     Vector, Matrix}>
   VALUE calculateEstimate(size_t key) const;
   gtsam::Values calculateBestEstimate() const;
   Matrix marginalCovariance(size_t key) const;
@@ -2549,18 +2557,20 @@ class NonlinearISAM {
 //*************************************************************************
 // Nonlinear factor types
 //*************************************************************************
-#include <gtsam/geometry/SimpleCamera.h>
 #include <gtsam/geometry/CalibratedCamera.h>
 #include <gtsam/geometry/StereoPoint2.h>
 
 #include <gtsam/nonlinear/PriorFactor.h>
-template<T = {Vector, gtsam::Point2, gtsam::StereoPoint2, gtsam::Point3, gtsam::Rot2, gtsam::SO3, gtsam::SO4, gtsam::SOn, gtsam::Rot3, gtsam::Pose2, gtsam::Pose3, gtsam::Cal3_S2,gtsam::CalibratedCamera, gtsam::SimpleCamera, gtsam::PinholeCameraCal3_S2, gtsam::imuBias::ConstantBias}>
+template<T = {Vector, gtsam::Point2, gtsam::StereoPoint2, gtsam::Point3, gtsam::Rot2, gtsam::SO3, gtsam::SO4, gtsam::SOn, gtsam::Rot3, gtsam::Pose2, gtsam::Pose3, gtsam::Unit3, gtsam::Cal3_S2, gtsam::Cal3DS2, gtsam::Cal3Bundler, gtsam::CalibratedCamera, gtsam::PinholeCameraCal3_S2, gtsam::imuBias::ConstantBias, gtsam::PinholeCamera<gtsam::Cal3Bundler>}>
 virtual class PriorFactor : gtsam::NoiseModelFactor {
   PriorFactor(size_t key, const T& prior, const gtsam::noiseModel::Base* noiseModel);
   T prior() const;
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 
@@ -2572,13 +2582,16 @@ virtual class BetweenFactor : gtsam::Noi
 
   // enabling serialization functionality
   void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
 };
 
 #include <gtsam/nonlinear/NonlinearEquality.h>
 template <T = {gtsam::Point2, gtsam::StereoPoint2, gtsam::Point3, gtsam::Rot2,
                gtsam::SO3, gtsam::SO4, gtsam::SOn, gtsam::Rot3, gtsam::Pose2,
                gtsam::Pose3, gtsam::Cal3_S2, gtsam::CalibratedCamera,
-               gtsam::SimpleCamera, gtsam::PinholeCameraCal3_S2,
+               gtsam::PinholeCameraCal3_S2,
                gtsam::imuBias::ConstantBias}>
 virtual class NonlinearEquality : gtsam::NoiseModelFactor {
   // Constructor - forces exact evaluation
@@ -2633,6 +2646,7 @@ virtual class BearingFactor : gtsam::Noi
 };
 
 typedef gtsam::BearingFactor<gtsam::Pose2, gtsam::Point2, gtsam::Rot2> BearingFactor2D;
+typedef gtsam::BearingFactor<gtsam::Pose3, gtsam::Point3, gtsam::Unit3> BearingFactor3D;
 typedef gtsam::BearingFactor<gtsam::Pose2, gtsam::Pose2, gtsam::Rot2> BearingFactorPose2;
 
 #include <gtsam/geometry/BearingRange.h>
@@ -2641,8 +2655,7 @@ class BearingRange {
   BearingRange(const BEARING& b, const RANGE& r);
   BEARING bearing() const;
   RANGE range() const;
-  // TODO(frank): can't class instance itself?
-  // static gtsam::BearingRange Measure(const POSE& pose, const POINT& point);
+  static This Measure(const POSE& pose, const POINT& point);
   static BEARING MeasureBearing(const POSE& pose, const POINT& point);
   static RANGE MeasureRange(const POSE& pose, const POINT& point);
   void print(string s) const;
@@ -2657,6 +2670,8 @@ virtual class BearingRangeFactor : gtsam
       const BEARING& measuredBearing, const RANGE& measuredRange,
       const gtsam::noiseModel::Base* noiseModel);
 
+  gtsam::BearingRange<POSE, POINT, BEARING, RANGE> measured() const;
+
   // enabling serialization functionality
   void serialize() const;
 };
@@ -2698,10 +2713,10 @@ virtual class GeneralSFMFactor : gtsam::
   gtsam::Point2 measured() const;
 };
 typedef gtsam::GeneralSFMFactor<gtsam::PinholeCameraCal3_S2, gtsam::Point3> GeneralSFMFactorCal3_S2;
-// due to lack of jacobians of Cal3DS2_Base::calibrate, GeneralSFMFactor does not apply to Cal3DS2
-//typedef gtsam::GeneralSFMFactor<gtsam::PinholeCameraCal3DS2, gtsam::Point3> GeneralSFMFactorCal3DS2;
+typedef gtsam::GeneralSFMFactor<gtsam::PinholeCameraCal3DS2, gtsam::Point3> GeneralSFMFactorCal3DS2;
+typedef gtsam::GeneralSFMFactor<gtsam::PinholeCamera<gtsam::Cal3Bundler>, gtsam::Point3> GeneralSFMFactorCal3Bundler;
 
-template<CALIBRATION = {gtsam::Cal3_S2}>
+template<CALIBRATION = {gtsam::Cal3_S2, gtsam::Cal3DS2, gtsam::Cal3Bundler}>
 virtual class GeneralSFMFactor2 : gtsam::NoiseModelFactor {
   GeneralSFMFactor2(const gtsam::Point2& measured, const gtsam::noiseModel::Base* model, size_t poseKey, size_t landmarkKey, size_t calibKey);
   gtsam::Point2 measured() const;
@@ -2742,7 +2757,7 @@ virtual class SmartProjectionPoseFactor:
   void add(const gtsam::Point2& measured_i, size_t poseKey_i);
 
   // enabling serialization functionality
-  //void serialize() const;
+  void serialize() const;
 };
 
 typedef gtsam::SmartProjectionPoseFactor<gtsam::Cal3_S2> SmartProjectionPose3Factor;
@@ -2786,21 +2801,57 @@ virtual class EssentialMatrixFactor : gt
 };
 
 #include <gtsam/slam/dataset.h>
+
 class SfmTrack {
+  SfmTrack();
+  SfmTrack(const gtsam::Point3& pt);
+  const Point3& point3() const;
+
+  double r;
+  double g;
+  double b;
+
+  std::vector<pair<size_t, gtsam::Point2>> measurements;
+
   size_t number_measurements() const;
   pair<size_t, gtsam::Point2> measurement(size_t idx) const;
   pair<size_t, size_t> siftIndex(size_t idx) const;
+  void add_measurement(size_t idx, const gtsam::Point2& m);
+
+  // enabling serialization functionality
+  void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
+
+  // enabling function to compare objects
+  bool equals(const gtsam::SfmTrack& expected, double tol) const;
 };
 
 class SfmData {
+  SfmData();
   size_t number_cameras() const;
   size_t number_tracks() const;
-  //TODO(Varun) Need to fix issue #237 first before this can work
-  // gtsam::PinholeCamera<gtsam::Cal3Bundler> camera(size_t idx) const;
+  gtsam::PinholeCamera<gtsam::Cal3Bundler> camera(size_t idx) const;
   gtsam::SfmTrack track(size_t idx) const;
+  void add_track(const gtsam::SfmTrack& t) ;
+  void add_camera(const gtsam::SfmCamera& cam);
+
+  // enabling serialization functionality
+  void serialize() const;
+
+  // enable pickling in python
+  void pickle() const;
+
+  // enabling function to compare objects
+  bool equals(const gtsam::SfmData& expected, double tol) const;
 };
 
-string findExampleDataFile(string name);
+gtsam::SfmData readBal(string filename);
+bool writeBAL(string filename, gtsam::SfmData& data);
+gtsam::Values initialCamerasEstimate(const gtsam::SfmData& db);
+gtsam::Values initialCamerasAndPointsEstimate(const gtsam::SfmData& db);
+
 pair<gtsam::NonlinearFactorGraph*, gtsam::Values*> load2D(string filename,
     gtsam::noiseModel::Diagonal* model, int maxIndex, bool addNoise, bool smart);
 pair<gtsam::NonlinearFactorGraph*, gtsam::Values*> load2D(string filename,
@@ -2909,11 +2960,19 @@ class BinaryMeasurement {
   size_t key1() const;
   size_t key2() const;
   T measured() const;
+  gtsam::noiseModel::Base* noiseModel() const;
 };
 
 typedef gtsam::BinaryMeasurement<gtsam::Unit3> BinaryMeasurementUnit3;
 typedef gtsam::BinaryMeasurement<gtsam::Rot3> BinaryMeasurementRot3;
 
+class BinaryMeasurementsUnit3 {
+  BinaryMeasurementsUnit3();
+  size_t size() const;
+  gtsam::BinaryMeasurement<gtsam::Unit3> at(size_t idx) const;
+  void push_back(const gtsam::BinaryMeasurement<gtsam::Unit3>& measurement);
+};
+
 #include <gtsam/sfm/ShonanAveraging.h>
 
 // TODO(frank): copy/pasta below until we have integer template paremeters in wrap!
@@ -2925,12 +2984,18 @@ class ShonanAveragingParameters2 {
   void setOptimalityThreshold(double value);
   double getOptimalityThreshold() const;
   void setAnchor(size_t index, const gtsam::Rot2& value);
+  pair<size_t, gtsam::Rot2> getAnchor();
   void setAnchorWeight(double value);
   double getAnchorWeight() const;
   void setKarcherWeight(double value);
-  double getKarcherWeight();
+  double getKarcherWeight() const;
   void setGaugesWeight(double value);
-  double getGaugesWeight();
+  double getGaugesWeight() const;
+  void setUseHuber(bool value);
+  bool getUseHuber() const;
+  void setCertifyOptimality(bool value);
+  bool getCertifyOptimality() const;
+  void print() const;
 };
 
 class ShonanAveragingParameters3 {
@@ -2940,12 +3005,18 @@ class ShonanAveragingParameters3 {
   void setOptimalityThreshold(double value);
   double getOptimalityThreshold() const;
   void setAnchor(size_t index, const gtsam::Rot3& value);
+  pair<size_t, gtsam::Rot3> getAnchor();
   void setAnchorWeight(double value);
   double getAnchorWeight() const;
   void setKarcherWeight(double value);
-  double getKarcherWeight();
+  double getKarcherWeight() const;
   void setGaugesWeight(double value);
-  double getGaugesWeight();
+  double getGaugesWeight() const;
+  void setUseHuber(bool value);
+  bool getUseHuber() const;
+  void setCertifyOptimality(bool value);
+  bool getCertifyOptimality() const;
+  void print() const;
 };
 
 class ShonanAveraging2 {
@@ -2992,7 +3063,7 @@ class ShonanAveraging3 {
   ShonanAveraging3(string g2oFile);
   ShonanAveraging3(string g2oFile,
                    const gtsam::ShonanAveragingParameters3 &parameters);
-  
+
   // TODO(frank): deprecate once we land pybind wrapper
   ShonanAveraging3(const gtsam::BetweenFactorPose3s &factors);
   ShonanAveraging3(const gtsam::BetweenFactorPose3s &factors,
@@ -3033,6 +3104,36 @@ class ShonanAveraging3 {
   pair<gtsam::Values, double> run(const gtsam::Values& initial, size_t min_p, size_t max_p) const;
 };
 
+#include <gtsam/sfm/MFAS.h>
+
+class KeyPairDoubleMap {
+  KeyPairDoubleMap();
+  KeyPairDoubleMap(const gtsam::KeyPairDoubleMap& other);
+
+  size_t size() const;
+  bool empty() const;
+  void clear();
+  size_t at(const pair<size_t, size_t>& keypair) const;
+};
+
+class MFAS {
+  MFAS(const gtsam::BinaryMeasurementsUnit3& relativeTranslations,
+       const gtsam::Unit3& projectionDirection);
+
+  gtsam::KeyPairDoubleMap computeOutlierWeights() const;
+  gtsam::KeyVector computeOrdering() const;
+};
+
+#include <gtsam/sfm/TranslationRecovery.h>
+class TranslationRecovery {
+  TranslationRecovery(const gtsam::BinaryMeasurementsUnit3 &relativeTranslations,
+                      const gtsam::LevenbergMarquardtParams &lmParams);
+  TranslationRecovery(
+      const gtsam::BinaryMeasurementsUnit3 & relativeTranslations);  // default LevenbergMarquardtParams
+  gtsam::Values run(const double scale) const;
+  gtsam::Values run() const;    // default scale = 1.0
+};
+
 //*************************************************************************
 // Navigation
 //*************************************************************************
@@ -3054,6 +3155,11 @@ class ConstantBias {
   gtsam::imuBias::ConstantBias compose(const gtsam::imuBias::ConstantBias& b) const;
   gtsam::imuBias::ConstantBias between(const gtsam::imuBias::ConstantBias& b) const;
 
+  // Operator Overloads
+  gtsam::imuBias::ConstantBias operator-() const;
+  gtsam::imuBias::ConstantBias operator+(const gtsam::imuBias::ConstantBias& b) const;
+  gtsam::imuBias::ConstantBias operator-(const gtsam::imuBias::ConstantBias& b) const;
+
   // Manifold
   gtsam::imuBias::ConstantBias retract(Vector v) const;
   Vector localCoordinates(const gtsam::imuBias::ConstantBias& b) const;
@@ -3104,9 +3210,8 @@ virtual class PreintegratedRotationParam
 
   Matrix getGyroscopeCovariance() const;
 
-  // TODO(frank): allow optional
-  //  boost::optional<Vector> getOmegaCoriolis() const;
-  //  boost::optional<Pose3>   getBodyPSensor()   const;
+  boost::optional<Vector> getOmegaCoriolis() const;
+  boost::optional<gtsam::Pose3> getBodyPSensor() const;
 };
 
 #include <gtsam/navigation/PreintegrationParams.h>
--- gtsam-4.1.0.orig/gtsam/inference/Symbol.h
+++ gtsam-4.1.0/gtsam/inference/Symbol.h
@@ -80,6 +80,9 @@ public:
   /** Create a string from the key */
   operator std::string() const;
 
+  /// Return string representation of the key
+  std::string string() const { return std::string(*this); };
+
   /** Comparison for use in maps */
   bool operator<(const Symbol& comp) const {
     return c_ < comp.c_ || (comp.c_ == c_ && j_ < comp.j_);
@@ -164,8 +167,17 @@ inline Key Y(std::uint64_t j) { return S
 inline Key Z(std::uint64_t j) { return Symbol('z', j); }
 }
 
+/** Generates symbol shorthands with alternative names different than the
+ * one-letter predefined ones. */
+class SymbolGenerator {
+  const unsigned char c_;
+public:
+  constexpr SymbolGenerator(const unsigned char c) : c_(c) {}
+  Symbol operator()(const std::uint64_t j) const { return Symbol(c_, j); }
+  constexpr unsigned char chr() const { return c_; }
+};
+
 /// traits
 template<> struct traits<Symbol> : public Testable<Symbol> {};
 
 } // \ namespace gtsam
-
--- gtsam-4.1.0.orig/gtsam/inference/inferenceExceptions.h
+++ gtsam-4.1.0/gtsam/inference/inferenceExceptions.h
@@ -29,7 +29,7 @@ namespace gtsam {
   class InconsistentEliminationRequested : public std::exception {
   public:
     InconsistentEliminationRequested() noexcept {}
-    virtual ~InconsistentEliminationRequested() noexcept {}
+    ~InconsistentEliminationRequested() noexcept override {}
     const char* what() const noexcept override {
       return
         "An inference algorithm was called with inconsistent arguments.  The\n"
--- gtsam-4.1.0.orig/gtsam/inference/tests/testKey.cpp
+++ gtsam-4.1.0/gtsam/inference/tests/testKey.cpp
@@ -41,6 +41,31 @@ TEST(Key, KeySymbolConversion) {
 }
 
 /* ************************************************************************* */
+TEST(Key, SymbolGenerator) {
+  const auto x1 = gtsam::symbol_shorthand::X(1);
+  const auto v1 = gtsam::symbol_shorthand::V(1);
+  const auto a1 = gtsam::symbol_shorthand::A(1);
+
+  const auto Z = gtsam::SymbolGenerator('x');
+  const auto DZ = gtsam::SymbolGenerator('v');
+  const auto DDZ = gtsam::SymbolGenerator('a');
+
+  const auto z1 = Z(1);
+  const auto dz1 = DZ(1);
+  const auto ddz1 = DDZ(1);
+
+  EXPECT(assert_equal(x1, z1));
+  EXPECT(assert_equal(v1, dz1));
+  EXPECT(assert_equal(a1, ddz1));
+}
+
+/* ************************************************************************* */
+TEST(Key, SymbolGeneratorConstexpr) {
+  constexpr auto Z = gtsam::SymbolGenerator('x');
+  EXPECT(assert_equal(Z.chr(), 'x'));
+}
+
+/* ************************************************************************* */
 template<int KeySize>
 Key KeyTestValue();
 
@@ -106,4 +131,3 @@ int main() {
   return TestRegistry::runAllTests(tr);
 }
 /* ************************************************************************* */
-
--- /dev/null
+++ gtsam-4.1.0/gtsam/linear/AcceleratedPowerMethod.h
@@ -0,0 +1,176 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010-2019, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * @file   AcceleratedPowerMethod.h
+ * @date   Sept 2020
+ * @author Jing Wu
+ * @brief  accelerated power method for fast eigenvalue and eigenvector
+ * computation
+ */
+
+#pragma once
+
+#include <gtsam/linear/PowerMethod.h>
+
+namespace gtsam {
+
+using Sparse = Eigen::SparseMatrix<double>;
+
+/**
+ * \brief Compute maximum Eigenpair with accelerated power method
+ *
+ * References :
+ * 1) G. Golub and C. V. Loan, Matrix Computations, 3rd ed. Baltimore, Johns
+ * Hopkins University Press, 1996, pp.405-411
+ * 2) Rosen, D. and Carlone, L., 2017, September. Computational
+ * enhancements for certifiably correct SLAM. In Proceedings of the
+ * International Conference on Intelligent Robots and Systems.
+ * 3) Yulun Tian and Kasra Khosoussi and David M. Rosen and Jonathan P. How,
+ * 2020, Aug, Distributed Certifiably Correct Pose-Graph Optimization, Arxiv
+ * 4) C. de Sa, B. He, I. Mitliagkas, C. Ré, and P. Xu, “Accelerated
+ * stochastic power iteration,” in Proc. Mach. Learn. Res., no. 84, 2018, pp.
+ * 58–67
+ *
+ * It performs the following iteration: \f$ x_{k+1} = A * x_k - \beta *
+ * x_{k-1} \f$ where A is the aim matrix we want to get eigenpair of, x is the
+ * Ritz vector
+ *
+ * Template argument Operator just needs multiplication operator
+ *
+ */
+template <class Operator>
+class AcceleratedPowerMethod : public PowerMethod<Operator> {
+
+  double beta_ = 0;  // a Polyak momentum term
+
+  Vector previousVector_;  // store previous vector
+
+ public:
+  /**
+   * Constructor from aim matrix A (given as Matrix or Sparse), optional intial
+   * vector as ritzVector
+   */
+  explicit AcceleratedPowerMethod(
+      const Operator &A, const boost::optional<Vector> initial = boost::none,
+      double initialBeta = 0.0)
+      : PowerMethod<Operator>(A, initial) {
+    // initialize Ritz eigen vector and previous vector
+    this->ritzVector_ = initial ? initial.get() : Vector::Random(this->dim_);
+    this->ritzVector_.normalize();
+    previousVector_ = Vector::Zero(this->dim_);
+
+    // initialize beta_
+    beta_ = initialBeta;
+  }
+
+  /**
+   * Run accelerated power iteration to get ritzVector with beta and previous
+   * two ritzVector x0 and x00, and return y = (A * x0 - \beta * x00) / || A * x0
+   * - \beta * x00 ||
+   */
+  Vector acceleratedPowerIteration (const Vector &x1, const Vector &x0,
+                        const double beta) const {
+    Vector y = this->A_ * x1 - beta * x0;
+    y.normalize();
+    return y;
+  }
+
+  /**
+   * Run accelerated power iteration to get ritzVector with beta and previous
+   * two ritzVector x0 and x00, and return y = (A * x0 - \beta * x00) / || A * x0
+   * - \beta * x00 ||
+   */
+  Vector acceleratedPowerIteration () const {
+    Vector y = acceleratedPowerIteration(this->ritzVector_, previousVector_, beta_);
+    return y;
+  }
+
+  /**
+   * Tuning the momentum beta using the Best Heavy Ball algorithm in Ref(3), T
+   * is the iteration time to find beta with largest Rayleigh quotient
+   */
+  double estimateBeta(const size_t T = 10) const {
+    // set initial estimation of maxBeta
+    Vector initVector = this->ritzVector_;
+    const double up = initVector.dot( this->A_ * initVector );
+    const double down = initVector.dot(initVector);
+    const double mu = up / down;
+    double maxBeta = mu * mu / 4;
+    size_t maxIndex;
+    std::vector<double> betas;
+
+    Matrix R = Matrix::Zero(this->dim_, 10);
+    // run T times of iteration to find the beta that has the largest Rayleigh quotient
+    for (size_t t = 0; t < T; t++) {
+      // after each t iteration, reset the betas with the current maxBeta
+      betas = {2 / 3 * maxBeta, 0.99 * maxBeta, maxBeta, 1.01 * maxBeta,
+               1.5 * maxBeta};
+      // iterate through every beta value
+      for (size_t k = 0; k < betas.size(); ++k) {
+        // initialize x0 and x00 in each iteration of each beta
+        Vector x0 = initVector;
+        Vector x00 = Vector::Zero(this->dim_);
+        // run 10 steps of accelerated power iteration with this beta
+        for (size_t j = 1; j < 10; j++) {
+          if (j < 2) {
+            R.col(0) = acceleratedPowerIteration(x0, x00, betas[k]);
+            R.col(1) = acceleratedPowerIteration(R.col(0), x0, betas[k]);
+          } else {
+            R.col(j) = acceleratedPowerIteration(R.col(j - 1), R.col(j - 2),
+  betas[k]);
+          }
+        }
+        // compute the Rayleigh quotient for the randomly sampled vector after
+        // 10 steps of power accelerated iteration
+        const Vector x = R.col(9);
+        const double up = x.dot(this->A_ * x);
+        const double down = x.dot(x);
+        const double mu = up / down;
+        // store the momentum with largest Rayleigh quotient and its according index of beta_
+        if (mu * mu / 4 > maxBeta) {
+          // save the max beta index
+          maxIndex = k;
+          maxBeta = mu * mu / 4;
+        }
+      }
+    }
+    // set beta_ to momentum with largest Rayleigh quotient
+    return betas[maxIndex];
+  }
+
+  /**
+   * Start the accelerated iteration, after performing the
+   * accelerated iteration, calculate the ritz error, repeat this
+   * operation until the ritz error converge. If converged return true, else
+   * false.
+   */
+  bool compute(size_t maxIterations, double tol) {
+    // Starting
+    bool isConverged = false;
+
+    for (size_t i = 0; i < maxIterations && !isConverged; i++) {
+      ++(this->nrIterations_);
+      Vector tmp = this->ritzVector_;
+      // update the ritzVector after accelerated power iteration
+      this->ritzVector_ = acceleratedPowerIteration();
+      // update the previousVector with ritzVector
+      previousVector_ = tmp;
+      // update the ritzValue 
+      this->ritzValue_ = this->ritzVector_.dot(this->A_ * this->ritzVector_);
+      isConverged = this->converged(tol);
+    }
+
+    return isConverged;
+  }
+};
+
+}  // namespace gtsam
--- gtsam-4.1.0.orig/gtsam/linear/GaussianBayesNet.cpp
+++ gtsam-4.1.0/gtsam/linear/GaussianBayesNet.cpp
@@ -12,15 +12,16 @@
 /**
  * @file   GaussianBayesNet.cpp
  * @brief  Chordal Bayes Net, the result of eliminating a factor graph
- * @author Frank Dellaert
+ * @author Frank Dellaert, Varun Agrawal
  */
 
+#include <gtsam/base/timing.h>
+#include <gtsam/inference/FactorGraph-inst.h>
 #include <gtsam/linear/GaussianBayesNet.h>
 #include <gtsam/linear/GaussianFactorGraph.h>
-#include <gtsam/inference/FactorGraph-inst.h>
-#include <gtsam/base/timing.h>
 
 #include <boost/range/adaptor/reversed.hpp>
+#include <fstream>
 
 using namespace std;
 using namespace gtsam;
@@ -204,5 +205,23 @@ namespace gtsam {
   }
 
   /* ************************************************************************* */
+  void GaussianBayesNet::saveGraph(const std::string& s,
+                                   const KeyFormatter& keyFormatter) const {
+    std::ofstream of(s.c_str());
+    of << "digraph G{\n";
+
+    for (auto conditional : boost::adaptors::reverse(*this)) {
+      typename GaussianConditional::Frontals frontals = conditional->frontals();
+      Key me = frontals.front();
+      typename GaussianConditional::Parents parents = conditional->parents();
+      for (Key p : parents)
+        of << keyFormatter(p) << "->" << keyFormatter(me) << std::endl;
+    }
+
+    of << "}";
+    of.close();
+  }
+
+  /* ************************************************************************* */
 
 } // namespace gtsam
--- gtsam-4.1.0.orig/gtsam/linear/GaussianBayesNet.h
+++ gtsam-4.1.0/gtsam/linear/GaussianBayesNet.h
@@ -177,6 +177,16 @@ namespace gtsam {
      */
     VectorValues backSubstituteTranspose(const VectorValues& gx) const;
 
+    /**
+     * @brief Save the GaussianBayesNet as an image. Requires `dot` to be
+     * installed.
+     *
+     * @param s The name of the figure.
+     * @param keyFormatter Formatter to use for styling keys in the graph.
+     */
+    void saveGraph(const std::string& s, const KeyFormatter& keyFormatter =
+                                             DefaultKeyFormatter) const;
+
     /// @}
 
   private:
--- gtsam-4.1.0.orig/gtsam/linear/GaussianFactorGraph.cpp
+++ gtsam-4.1.0/gtsam/linear/GaussianFactorGraph.cpp
@@ -100,33 +100,35 @@ namespace gtsam {
   }
 
   /* ************************************************************************* */
-  vector<boost::tuple<size_t, size_t, double> > GaussianFactorGraph::sparseJacobian() const {
+  using SparseTriplets = std::vector<std::tuple<int, int, double> >;
+  SparseTriplets GaussianFactorGraph::sparseJacobian(const Ordering& ordering,
+                                                     size_t& nrows,
+                                                     size_t& ncols) const {
+    gttic_(GaussianFactorGraph_sparseJacobian);
     // First find dimensions of each variable
     typedef std::map<Key, size_t> KeySizeMap;
     KeySizeMap dims;
-    for (const sharedFactor& factor : *this) {
-      if (!static_cast<bool>(factor))
-        continue;
-
-      for (GaussianFactor::const_iterator key = factor->begin();
-          key != factor->end(); ++key) {
-        dims[*key] = factor->getDim(key);
+    for (const auto& factor : *this) {
+      if (!static_cast<bool>(factor)) continue;
+
+      for (auto it = factor->begin(); it != factor->end(); ++it) {
+        dims[*it] = factor->getDim(it);
       }
     }
 
     // Compute first scalar column of each variable
-    size_t currentColIndex = 0;
+    ncols = 0;
     KeySizeMap columnIndices = dims;
-    for (const KeySizeMap::value_type& col : dims) {
-      columnIndices[col.first] = currentColIndex;
-      currentColIndex += dims[col.first];
+    for (const auto key : ordering) {
+      columnIndices[key] = ncols;
+      ncols += dims[key];
     }
 
     // Iterate over all factors, adding sparse scalar entries
-    typedef boost::tuple<size_t, size_t, double> triplet;
-    vector<triplet> entries;
-    size_t row = 0;
-    for (const sharedFactor& factor : *this) {
+    SparseTriplets entries;
+    entries.reserve(30 * size());
+    nrows = 0;
+    for (const auto& factor : *this) {
       if (!static_cast<bool>(factor)) continue;
 
       // Convert to JacobianFactor if necessary
@@ -138,52 +140,60 @@ namespace gtsam {
         if (hessian)
           jacobianFactor.reset(new JacobianFactor(*hessian));
         else
-          throw invalid_argument(
-              "GaussianFactorGraph contains a factor that is neither a JacobianFactor nor a HessianFactor.");
+          throw std::invalid_argument(
+              "GaussianFactorGraph contains a factor that is neither a "
+              "JacobianFactor nor a HessianFactor.");
       }
 
       // Whiten the factor and add entries for it
       // iterate over all variables in the factor
       const JacobianFactor whitened(jacobianFactor->whiten());
-      for (JacobianFactor::const_iterator key = whitened.begin();
-          key < whitened.end(); ++key) {
+      for (auto key = whitened.begin(); key < whitened.end(); ++key) {
         JacobianFactor::constABlock whitenedA = whitened.getA(key);
         // find first column index for this key
         size_t column_start = columnIndices[*key];
-        for (size_t i = 0; i < (size_t) whitenedA.rows(); i++)
-          for (size_t j = 0; j < (size_t) whitenedA.cols(); j++) {
+        for (size_t i = 0; i < (size_t)whitenedA.rows(); i++)
+          for (size_t j = 0; j < (size_t)whitenedA.cols(); j++) {
             double s = whitenedA(i, j);
             if (std::abs(s) > 1e-12)
-              entries.push_back(boost::make_tuple(row + i, column_start + j, s));
+              entries.emplace_back(nrows + i, column_start + j, s);
           }
       }
 
       JacobianFactor::constBVector whitenedb(whitened.getb());
-      size_t bcolumn = currentColIndex;
-      for (size_t i = 0; i < (size_t) whitenedb.size(); i++)
-        entries.push_back(boost::make_tuple(row + i, bcolumn, whitenedb(i)));
+      for (size_t i = 0; i < (size_t)whitenedb.size(); i++) {
+        double s = whitenedb(i);
+        if (std::abs(s) > 1e-12) entries.emplace_back(nrows + i, ncols, s);
+      }
 
       // Increment row index
-      row += jacobianFactor->rows();
+      nrows += jacobianFactor->rows();
     }
-    return vector<triplet>(entries.begin(), entries.end());
+
+    ncols++;  // +1 for b-column
+    return entries;
   }
 
   /* ************************************************************************* */
-  Matrix GaussianFactorGraph::sparseJacobian_() const {
+  SparseTriplets GaussianFactorGraph::sparseJacobian() const {
+    size_t nrows, ncols;
+    return sparseJacobian(Ordering(this->keys()), nrows, ncols);
+  }
 
+  /* ************************************************************************* */
+  Matrix GaussianFactorGraph::sparseJacobian_() const {
+    gttic_(GaussianFactorGraph_sparseJacobian_matrix);
     // call sparseJacobian
-    typedef boost::tuple<size_t, size_t, double> triplet;
-    vector<triplet> result = sparseJacobian();
+    auto result = sparseJacobian();
 
     // translate to base 1 matrix
     size_t nzmax = result.size();
-    Matrix IJS(3,nzmax);
+    Matrix IJS(3, nzmax);
     for (size_t k = 0; k < result.size(); k++) {
-      const triplet& entry = result[k];
-      IJS(0,k) = double(entry.get<0>() + 1);
-      IJS(1,k) = double(entry.get<1>() + 1);
-      IJS(2,k) = entry.get<2>();
+      const auto& entry = result[k];
+      IJS(0, k) = double(std::get<0>(entry) + 1);
+      IJS(1, k) = double(std::get<1>(entry) + 1);
+      IJS(2, k) = std::get<2>(entry);
     }
     return IJS;
   }
--- gtsam-4.1.0.orig/gtsam/linear/GaussianFactorGraph.h
+++ gtsam-4.1.0/gtsam/linear/GaussianFactorGraph.h
@@ -181,15 +181,25 @@ namespace gtsam {
     ///@{
 
     /**
-     * Return vector of i, j, and s to generate an m-by-n sparse Jacobian matrix,
-     * where i(k) and j(k) are the base 0 row and column indices, s(k) a double.
+     * Returns a sparse augmented Jacbian matrix as a vector of i, j, and s,
+     * where i(k) and j(k) are the base 0 row and column indices, and s(k) is
+     * the entry as a double.
      * The standard deviations are baked into A and b
+     * @return the sparse matrix as a std::vector of std::tuples
+     * @param ordering the column ordering
+     * @param[out] nrows The number of rows in the augmented Jacobian
+     * @param[out] ncols The number of columns in the augmented Jacobian
      */
-    std::vector<boost::tuple<size_t, size_t, double> > sparseJacobian() const;
+    std::vector<std::tuple<int, int, double> > sparseJacobian(
+        const Ordering& ordering, size_t& nrows, size_t& ncols) const;
+
+    /** Returns a sparse augmented Jacobian matrix with default ordering */
+    std::vector<std::tuple<int, int, double> > sparseJacobian() const;
 
     /**
-     * Matrix version of sparseJacobian: generates a 3*m matrix with [i,j,s] entries
-     * such that S(i(k),j(k)) = s(k), which can be given to MATLAB's sparse.
+     * Matrix version of sparseJacobian: generates a 3*m matrix with [i,j,s]
+     * entries such that S(i(k),j(k)) = s(k), which can be given to MATLAB's
+     * sparse.  Note: i, j are 1-indexed.
      * The standard deviations are baked into A and b
      */
     Matrix sparseJacobian_() const;
--- gtsam-4.1.0.orig/gtsam/linear/HessianFactor.h
+++ gtsam-4.1.0/gtsam/linear/HessianFactor.h
@@ -183,7 +183,7 @@ namespace gtsam {
         : HessianFactor(factors, Scatter(factors)) {}
 
     /** Destructor */
-    virtual ~HessianFactor() {}
+    ~HessianFactor() override {}
 
     /** Clone this HessianFactor */
     GaussianFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam/linear/JacobianFactor.h
+++ gtsam-4.1.0/gtsam/linear/JacobianFactor.h
@@ -183,7 +183,7 @@ namespace gtsam {
       const VariableSlots& p_variableSlots);
 
     /** Virtual destructor */
-    virtual ~JacobianFactor() {}
+    ~JacobianFactor() override {}
 
     /** Clone this JacobianFactor */
     GaussianFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam/linear/LossFunctions.h
+++ gtsam-4.1.0/gtsam/linear/LossFunctions.h
@@ -28,6 +28,7 @@
 #include <boost/serialization/optional.hpp>
 #include <boost/serialization/shared_ptr.hpp>
 #include <boost/serialization/singleton.hpp>
+#include <boost/serialization/version.hpp>
 
 namespace gtsam {
 namespace noiseModel {
@@ -129,7 +130,7 @@ class GTSAM_EXPORT Null : public Base {
   typedef boost::shared_ptr<Null> shared_ptr;
 
   Null(const ReweightScheme reweight = Block) : Base(reweight) {}
-  ~Null() {}
+  ~Null() override {}
   double weight(double /*error*/) const override { return 1.0; }
   double loss(double distance) const override { return 0.5 * distance * distance; }
   void print(const std::string &s) const override;
@@ -286,7 +287,7 @@ class GTSAM_EXPORT GemanMcClure : public
   typedef boost::shared_ptr<GemanMcClure> shared_ptr;
 
   GemanMcClure(double c = 1.0, const ReweightScheme reweight = Block);
-  ~GemanMcClure() {}
+  ~GemanMcClure() override {}
   double weight(double distance) const override;
   double loss(double distance) const override;
   void print(const std::string &s) const override;
@@ -316,7 +317,7 @@ class GTSAM_EXPORT DCS : public Base {
   typedef boost::shared_ptr<DCS> shared_ptr;
 
   DCS(double c = 1.0, const ReweightScheme reweight = Block);
-  ~DCS() {}
+  ~DCS() override {}
   double weight(double distance) const override;
   double loss(double distance) const override;
   void print(const std::string &s) const override;
--- gtsam-4.1.0.orig/gtsam/linear/NoiseModel.h
+++ gtsam-4.1.0/gtsam/linear/NoiseModel.h
@@ -188,7 +188,7 @@ namespace gtsam {
 
       typedef boost::shared_ptr<Gaussian> shared_ptr;
 
-      virtual ~Gaussian() {}
+      ~Gaussian() override {}
 
       /**
        * A Gaussian noise model created by specifying a square root information matrix.
@@ -300,7 +300,7 @@ namespace gtsam {
 
       typedef boost::shared_ptr<Diagonal> shared_ptr;
 
-      virtual ~Diagonal() {}
+      ~Diagonal() override {}
 
       /**
        * A diagonal noise model created by specifying a Vector of sigmas, i.e.
@@ -406,7 +406,7 @@ namespace gtsam {
 
       typedef boost::shared_ptr<Constrained> shared_ptr;
 
-      ~Constrained() {}
+      ~Constrained() override {}
 
       /// true if a constrained noise mode, saves slow/clumsy dynamic casting
       bool isConstrained() const override { return true; }
@@ -536,7 +536,7 @@ namespace gtsam {
 
     public:
 
-      virtual ~Isotropic() {}
+      ~Isotropic() override {}
 
       typedef boost::shared_ptr<Isotropic> shared_ptr;
 
@@ -600,7 +600,7 @@ namespace gtsam {
 
       typedef boost::shared_ptr<Unit> shared_ptr;
 
-      ~Unit() {}
+      ~Unit() override {}
 
       /**
        * Create a unit covariance noise model
@@ -671,7 +671,7 @@ namespace gtsam {
       : Base(noise->dim()), robust_(robust), noise_(noise) {}
 
       /// Destructor
-      ~Robust() {}
+      ~Robust() override {}
 
       void print(const std::string& name) const override;
       bool equals(const Base& expected, double tol=1e-9) const override;
--- gtsam-4.1.0.orig/gtsam/linear/PCGSolver.h
+++ gtsam-4.1.0/gtsam/linear/PCGSolver.h
@@ -72,7 +72,7 @@ protected:
 public:
   /* Interface to initialize a solver without a problem */
   PCGSolver(const PCGSolverParameters &p);
-  virtual ~PCGSolver() {
+  ~PCGSolver() override {
   }
 
   using IterativeSolver::optimize;
--- /dev/null
+++ gtsam-4.1.0/gtsam/linear/PowerMethod.h
@@ -0,0 +1,152 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010-2019, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * @file   PowerMethod.h
+ * @date   Sept 2020
+ * @author Jing Wu
+ * @brief  Power method for fast eigenvalue and eigenvector
+ * computation
+ */
+
+#pragma once
+
+#include <gtsam/base/Matrix.h>
+#include <gtsam/base/Vector.h>
+
+#include <Eigen/Core>
+#include <Eigen/Sparse>
+#include <random>
+#include <vector>
+
+namespace gtsam {
+
+using Sparse = Eigen::SparseMatrix<double>;
+
+/**
+ * \brief Compute maximum Eigenpair with power method
+ *
+ * References :
+ * 1) G. Golub and C. V. Loan, Matrix Computations, 3rd ed. Baltimore, Johns
+ * Hopkins University Press, 1996, pp.405-411
+ * 2) Rosen, D. and Carlone, L., 2017, September. Computational
+ * enhancements for certifiably correct SLAM. In Proceedings of the
+ * International Conference on Intelligent Robots and Systems.
+ * 3) Yulun Tian and Kasra Khosoussi and David M. Rosen and Jonathan P. How,
+ * 2020, Aug, Distributed Certifiably Correct Pose-Graph Optimization, Arxiv
+ * 4) C. de Sa, B. He, I. Mitliagkas, C. Ré, and P. Xu, “Accelerated
+ * stochastic power iteration,” in Proc. Mach. Learn. Res., no. 84, 2018, pp.
+ * 58–67
+ *
+ * It performs the following iteration: \f$ x_{k+1} = A * x_k  \f$
+ * where A is the aim matrix we want to get eigenpair of, x is the
+ * Ritz vector
+ *
+ * Template argument Operator just needs multiplication operator
+ *
+ */
+template <class Operator>
+class PowerMethod {
+ protected:
+  /**
+   * Const reference to an externally-held matrix whose minimum-eigenvalue we
+   * want to compute
+   */
+  const Operator &A_;
+
+  const int dim_;  // dimension of Matrix A
+
+  size_t nrIterations_;  // number of iterations
+
+  double ritzValue_;   // Ritz eigenvalue
+  Vector ritzVector_;  // Ritz eigenvector
+
+ public:
+  /// @name Standard Constructors
+  /// @{
+
+  /// Construct from the aim matrix and intial ritz vector
+  explicit PowerMethod(const Operator &A,
+                       const boost::optional<Vector> initial = boost::none)
+      : A_(A), dim_(A.rows()), nrIterations_(0) {
+    Vector x0;
+    x0 = initial ? initial.get() : Vector::Random(dim_);
+    x0.normalize();
+
+    // initialize Ritz eigen value
+    ritzValue_ = 0.0;
+
+    // initialize Ritz eigen vector
+    ritzVector_ = powerIteration(x0);
+  }
+
+  /**
+   * Run power iteration to get ritzVector with previous ritzVector x, and
+   * return A * x / || A * x ||
+   */
+  Vector powerIteration(const Vector &x) const {
+    Vector y = A_ * x;
+    y.normalize();
+    return y;
+  }
+
+  /**
+   * Run power iteration to get ritzVector with previous ritzVector x, and
+   * return A * x / || A * x ||
+   */  
+  Vector powerIteration() const { return powerIteration(ritzVector_); }
+
+  /**
+   * After Perform power iteration on a single Ritz value, check if the Ritz
+   * residual for the current Ritz pair is less than the required convergence
+   * tol, return true if yes, else false
+   */
+  bool converged(double tol) const {
+    const Vector x = ritzVector_;
+    // store the Ritz eigen value
+    const double ritzValue = x.dot(A_ * x);
+    const double error = (A_ * x - ritzValue * x).norm();
+    return error < tol;
+  }
+
+  /// Return the number of iterations
+  size_t nrIterations() const { return nrIterations_; }
+
+  /**
+   * Start the power/accelerated iteration, after performing the
+   * power/accelerated iteration, calculate the ritz error, repeat this
+   * operation until the ritz error converge. If converged return true, else
+   * false.
+   */
+  bool compute(size_t maxIterations, double tol) {
+    // Starting
+    bool isConverged = false;
+
+    for (size_t i = 0; i < maxIterations && !isConverged; i++) {
+      ++nrIterations_;
+      // update the ritzVector after power iteration
+      ritzVector_ = powerIteration();
+      // update the ritzValue 
+      ritzValue_ = ritzVector_.dot(A_ * ritzVector_);
+      isConverged = converged(tol);
+    }
+
+    return isConverged;
+  }
+
+  /// Return the eigenvalue
+  double eigenvalue() const { return ritzValue_; }
+
+  /// Return the eigenvector
+  Vector eigenvector() const { return ritzVector_; }
+};
+
+}  // namespace gtsam
--- gtsam-4.1.0.orig/gtsam/linear/Preconditioner.h
+++ gtsam-4.1.0/gtsam/linear/Preconditioner.h
@@ -96,7 +96,7 @@ struct GTSAM_EXPORT DummyPreconditionerP
   typedef PreconditionerParameters Base;
   typedef boost::shared_ptr<DummyPreconditionerParameters> shared_ptr;
   DummyPreconditionerParameters() : Base() {}
-  virtual ~DummyPreconditionerParameters() {}
+  ~DummyPreconditionerParameters() override {}
 };
 
 /*******************************************************************************************/
@@ -108,7 +108,7 @@ public:
 public:
 
   DummyPreconditioner() : Base() {}
-  virtual ~DummyPreconditioner() {}
+  ~DummyPreconditioner() override {}
 
   /* Computation Interfaces for raw vector */
   void solve(const Vector& y, Vector &x) const override { x = y; }
@@ -124,7 +124,7 @@ public:
 struct GTSAM_EXPORT BlockJacobiPreconditionerParameters : public PreconditionerParameters {
   typedef PreconditionerParameters Base;
   BlockJacobiPreconditionerParameters() : Base() {}
-  virtual ~BlockJacobiPreconditionerParameters() {}
+  ~BlockJacobiPreconditionerParameters() override {}
 };
 
 /*******************************************************************************************/
@@ -132,7 +132,7 @@ class GTSAM_EXPORT BlockJacobiPreconditi
 public:
   typedef Preconditioner Base;
   BlockJacobiPreconditioner() ;
-  virtual ~BlockJacobiPreconditioner() ;
+  ~BlockJacobiPreconditioner() override ;
 
   /* Computation Interfaces for raw vector */
   void solve(const Vector& y, Vector &x) const override;
--- /dev/null
+++ gtsam-4.1.0/gtsam/linear/SparseEigen.h
@@ -0,0 +1,63 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * @file SparseEigen.h
+ *
+ * @brief Utilities for creating Eigen sparse matrices (gtsam::SparseEigen)
+ *
+ * @date Aug 2019
+ * @author Mandy Xie
+ * @author Fan Jiang
+ * @author Gerry Chen
+ * @author Frank Dellaert
+ */
+
+#pragma once
+
+#include <gtsam/linear/GaussianFactorGraph.h>
+#include <gtsam/linear/VectorValues.h>
+
+#include <Eigen/Sparse>
+
+namespace gtsam {
+
+/// Eigen-format sparse matrix.  Note: ColMajor is ~20% faster since
+/// InnerIndices must be sorted
+typedef Eigen::SparseMatrix<double, Eigen::ColMajor, int> SparseEigen;
+
+/// Constructs an Eigen-format SparseMatrix of a GaussianFactorGraph
+SparseEigen sparseJacobianEigen(
+    const GaussianFactorGraph &gfg, const Ordering &ordering) {
+  gttic_(SparseEigen_sparseJacobianEigen);
+  // intermediate `entries` vector is kind of unavoidable due to how expensive
+  // factor->rows() is, which prevents us from populating SparseEigen directly.
+  size_t nrows, ncols;
+  auto entries = gfg.sparseJacobian(ordering, nrows, ncols);
+  // declare sparse matrix
+  SparseEigen Ab(nrows, ncols);
+  // See Eigen::set_from_triplets.  This is about 5% faster.
+  // pass 1: count the nnz per inner-vector
+  std::vector<int> nnz(ncols, 0);
+  for (const auto &entry : entries) nnz[std::get<1>(entry)]++;
+  Ab.reserve(nnz);
+  // pass 2: insert the elements
+  for (const auto &entry : entries)
+    Ab.insert(std::get<0>(entry), std::get<1>(entry)) = std::get<2>(entry);
+  return Ab;
+}
+
+SparseEigen sparseJacobianEigen(const GaussianFactorGraph &gfg) {
+  gttic_(SparseEigen_sparseJacobianEigen_defaultOrdering);
+  return sparseJacobianEigen(gfg, Ordering(gfg.keys()));
+}
+
+}  // namespace gtsam
--- gtsam-4.1.0.orig/gtsam/linear/SubgraphBuilder.cpp
+++ gtsam-4.1.0/gtsam/linear/SubgraphBuilder.cpp
@@ -383,7 +383,7 @@ Subgraph SubgraphBuilder::operator()(con
   const vector<size_t> tree = buildTree(gfg, forward_ordering, weights);
   if (tree.size() != n - 1) {
     throw std::runtime_error(
-        "SubgraphBuilder::operator() failure: tree.size() != n-1");
+        "SubgraphBuilder::operator() failure: tree.size() != n-1, might be caused by disconnected graph");
   }
 
   // Downweight the tree edges to zero.
--- gtsam-4.1.0.orig/gtsam/linear/SubgraphBuilder.h
+++ gtsam-4.1.0/gtsam/linear/SubgraphBuilder.h
@@ -23,6 +23,7 @@
 
 #include <boost/serialization/nvp.hpp>
 #include <boost/shared_ptr.hpp>
+#include <boost/serialization/version.hpp>
 
 #include <vector>
 
--- gtsam-4.1.0.orig/gtsam/linear/SubgraphPreconditioner.h
+++ gtsam-4.1.0/gtsam/linear/SubgraphPreconditioner.h
@@ -80,7 +80,7 @@ namespace gtsam {
     SubgraphPreconditioner(const sharedFG& Ab2, const sharedBayesNet& Rc1, const sharedValues& xbar,
                            const SubgraphPreconditionerParameters &p = SubgraphPreconditionerParameters());
 
-    virtual ~SubgraphPreconditioner() {}
+    ~SubgraphPreconditioner() override {}
 
     /** print the object */
     void print(const std::string& s = "SubgraphPreconditioner") const;
--- gtsam-4.1.0.orig/gtsam/linear/SubgraphSolver.h
+++ gtsam-4.1.0/gtsam/linear/SubgraphSolver.h
@@ -111,7 +111,7 @@ class GTSAM_EXPORT SubgraphSolver : publ
                  const Parameters &parameters);
 
   /// Destructor
-  virtual ~SubgraphSolver() {}
+  ~SubgraphSolver() override {}
 
   /// @}
   /// @name Implement interface
--- gtsam-4.1.0.orig/gtsam/linear/VectorValues.cpp
+++ gtsam-4.1.0/gtsam/linear/VectorValues.cpp
@@ -161,7 +161,7 @@ namespace gtsam {
   bool VectorValues::equals(const VectorValues& x, double tol) const {
     if(this->size() != x.size())
       return false;
-    for(const auto& values: boost::combine(*this, x)) {
+    for(const auto values: boost::combine(*this, x)) {
       if(values.get<0>().first != values.get<1>().first ||
         !equal_with_abs_tol(values.get<0>().second, values.get<1>().second, tol))
         return false;
@@ -233,7 +233,7 @@ namespace gtsam {
     double result = 0.0;
     typedef boost::tuple<value_type, value_type> ValuePair;
     using boost::adaptors::map_values;
-    for(const ValuePair& values: boost::combine(*this, v)) {
+    for(const ValuePair values: boost::combine(*this, v)) {
       assert_throw(values.get<0>().first == values.get<1>().first,
         invalid_argument("VectorValues::dot called with a VectorValues of different structure"));
       assert_throw(values.get<0>().second.size() == values.get<1>().second.size(),
--- gtsam-4.1.0.orig/gtsam/linear/linearExceptions.h
+++ gtsam-4.1.0/gtsam/linear/linearExceptions.h
@@ -95,7 +95,7 @@ namespace gtsam {
     Key j_;
   public:
     IndeterminantLinearSystemException(Key j) noexcept : j_(j) {}
-    virtual ~IndeterminantLinearSystemException() noexcept {}
+    ~IndeterminantLinearSystemException() noexcept override {}
     Key nearbyVariable() const { return j_; }
     const char* what() const noexcept override;
   };
@@ -110,7 +110,7 @@ namespace gtsam {
 
     InvalidNoiseModel(DenseIndex factorDims, DenseIndex noiseModelDims) :
       factorDims(factorDims), noiseModelDims(noiseModelDims) {}
-    virtual ~InvalidNoiseModel() noexcept {}
+    ~InvalidNoiseModel() noexcept override {}
 
     const char* what() const noexcept override;
 
@@ -128,7 +128,7 @@ namespace gtsam {
 
     InvalidMatrixBlock(DenseIndex factorRows, DenseIndex blockRows) :
       factorRows(factorRows), blockRows(blockRows) {}
-    virtual ~InvalidMatrixBlock() noexcept {}
+    ~InvalidMatrixBlock() noexcept override {}
 
     const char* what() const noexcept override;
 
--- /dev/null
+++ gtsam-4.1.0/gtsam/linear/tests/powerMethodExample.h
@@ -0,0 +1,67 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010-2019, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * powerMethodExample.h
+ *
+ * @file   powerMethodExample.h
+ * @date   Nov 2020
+ * @author Jing Wu
+ * @brief  Create sparse and dense factor graph for
+ * PowerMethod/AcceleratedPowerMethod
+ */
+
+#include <gtsam/inference/Symbol.h>
+
+#include <iostream>
+
+
+namespace gtsam {
+namespace linear {
+namespace test {
+namespace example {
+
+/* ************************************************************************* */
+inline GaussianFactorGraph createSparseGraph() {
+  using symbol_shorthand::X;
+  // Let's make a scalar synchronization graph with 4 nodes
+  GaussianFactorGraph fg;
+  auto model = noiseModel::Unit::Create(1);
+  for (size_t j = 0; j < 3; j++) {
+    fg.add(X(j), -I_1x1, X(j + 1), I_1x1, Vector1::Zero(), model);
+  }
+  fg.add(X(3), -I_1x1, X(0), I_1x1, Vector1::Zero(), model);  // extra row
+
+  return fg;
+}
+
+/* ************************************************************************* */
+inline GaussianFactorGraph createDenseGraph() {
+  using symbol_shorthand::X;
+  // Let's make a scalar synchronization graph with 10 nodes
+  GaussianFactorGraph fg;
+  auto model = noiseModel::Unit::Create(1);
+  // Iterate over nodes
+  for (size_t j = 0; j < 10; j++) {
+    // Each node has an edge with all the others
+    for (size_t i = 1; i < 10; i++)
+    fg.add(X(j), -I_1x1, X((j + i) % 10), I_1x1, Vector1::Zero(), model);
+  }
+
+  return fg;
+}
+
+/* ************************************************************************* */
+
+}  // namespace example
+}  // namespace test
+}  // namespace linear
+}  // namespace gtsam
--- /dev/null
+++ gtsam-4.1.0/gtsam/linear/tests/testAcceleratedPowerMethod.cpp
@@ -0,0 +1,140 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010-2019, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * testPowerMethod.cpp
+ *
+ * @file   testAcceleratedPowerMethod.cpp
+ * @date   Sept 2020
+ * @author Jing Wu
+ * @brief  Check eigenvalue and eigenvector computed by accelerated power method
+ */
+
+#include <CppUnitLite/TestHarness.h>
+#include <gtsam/base/Matrix.h>
+#include <gtsam/base/VectorSpace.h>
+#include <gtsam/inference/Symbol.h>
+#include <gtsam/linear/AcceleratedPowerMethod.h>
+#include <gtsam/linear/GaussianFactorGraph.h>
+#include <gtsam/linear/tests/powerMethodExample.h>
+
+#include <Eigen/Core>
+#include <Eigen/Dense>
+#include <Eigen/Eigenvalues>
+#include <iostream>
+#include <random>
+
+using namespace std;
+using namespace gtsam;
+
+/* ************************************************************************* */
+TEST(AcceleratedPowerMethod, acceleratedPowerIteration) {
+  // test power iteration, beta is set to 0
+  Sparse A(6, 6);
+  A.coeffRef(0, 0) = 6;
+  A.coeffRef(1, 1) = 5;
+  A.coeffRef(2, 2) = 4;
+  A.coeffRef(3, 3) = 3;
+  A.coeffRef(4, 4) = 2;
+  A.coeffRef(5, 5) = 1;
+  Vector initial = (Vector(6) << 0.24434602, 0.22829942, 0.70094486, 0.15463092, 0.55871359,
+       0.2465342).finished();
+  const double ev1 = 6.0;
+
+  // test accelerated power iteration
+  AcceleratedPowerMethod<Sparse> apf(A, initial);
+  apf.compute(100, 1e-5);
+  EXPECT_LONGS_EQUAL(6, apf.eigenvector().rows());
+
+  Vector6 actual1 = apf.eigenvector();
+  const double ritzValue = actual1.dot(A * actual1);
+  const double ritzResidual = (A * actual1 - ritzValue * actual1).norm();
+  EXPECT_DOUBLES_EQUAL(0, ritzResidual, 1e-5);
+
+  EXPECT_DOUBLES_EQUAL(ev1, apf.eigenvalue(), 1e-5);
+}
+
+/* ************************************************************************* */
+TEST(AcceleratedPowerMethod, useFactorGraphSparse) {
+  // Let's make a scalar synchronization graph with 4 nodes
+  GaussianFactorGraph fg = gtsam::linear::test::example::createSparseGraph();
+
+  // Get eigenvalues and eigenvectors with Eigen
+  auto L = fg.hessian();
+  Eigen::EigenSolver<Matrix> solver(L.first);
+
+  // find the index of the max eigenvalue
+  size_t maxIdx = 0;
+  for (auto i = 0; i < solver.eigenvalues().rows(); ++i) {
+    if (solver.eigenvalues()(i).real() >= solver.eigenvalues()(maxIdx).real())
+      maxIdx = i;
+  }
+  // Store the max eigenvalue and its according eigenvector
+  const auto ev1 = solver.eigenvalues()(maxIdx).real();
+
+  Vector disturb = Vector4::Random();
+  disturb.normalize();
+  Vector initial = L.first.row(0);
+  double magnitude = initial.norm();
+  initial += 0.03 * magnitude * disturb;
+  AcceleratedPowerMethod<Matrix> apf(L.first, initial);
+  apf.compute(100, 1e-5);
+  // Check if the eigenvalue is the maximum eigen value
+  EXPECT_DOUBLES_EQUAL(ev1, apf.eigenvalue(), 1e-8);
+
+  // Check if the according ritz residual converged to the threshold
+  Vector actual1 = apf.eigenvector();
+  const double ritzValue = actual1.dot(L.first * actual1);
+  const double ritzResidual = (L.first * actual1 - ritzValue * actual1).norm();
+  EXPECT_DOUBLES_EQUAL(0, ritzResidual, 1e-5);
+}
+
+/* ************************************************************************* */
+TEST(AcceleratedPowerMethod, useFactorGraphDense) {
+  // Let's make a scalar synchronization graph with 10 nodes
+  GaussianFactorGraph fg = gtsam::linear::test::example::createDenseGraph();
+
+  // Get eigenvalues and eigenvectors with Eigen
+  auto L = fg.hessian();
+  Eigen::EigenSolver<Matrix> solver(L.first);
+
+  // find the index of the max eigenvalue
+  size_t maxIdx = 0;
+  for (auto i = 0; i < solver.eigenvalues().rows(); ++i) {
+    if (solver.eigenvalues()(i).real() >= solver.eigenvalues()(maxIdx).real())
+      maxIdx = i;
+  }
+  // Store the max eigenvalue and its according eigenvector
+  const auto ev1 = solver.eigenvalues()(maxIdx).real();
+
+  Vector disturb = Vector10::Random();
+  disturb.normalize();
+  Vector initial = L.first.row(0);
+  double magnitude = initial.norm();
+  initial += 0.03 * magnitude * disturb;
+  AcceleratedPowerMethod<Matrix> apf(L.first, initial);
+  apf.compute(100, 1e-5);
+  // Check if the eigenvalue is the maximum eigen value
+  EXPECT_DOUBLES_EQUAL(ev1, apf.eigenvalue(), 1e-8);
+
+  // Check if the according ritz residual converged to the threshold
+  Vector actual1 = apf.eigenvector();
+  const double ritzValue = actual1.dot(L.first * actual1);
+  const double ritzResidual = (L.first * actual1 - ritzValue * actual1).norm();
+  EXPECT_DOUBLES_EQUAL(0, ritzResidual, 1e-5);
+}
+
+/* ************************************************************************* */
+int main() {
+  TestResult tr;
+  return TestRegistry::runAllTests(tr);
+}
+/* ************************************************************************* */
--- gtsam-4.1.0.orig/gtsam/linear/tests/testGaussianFactorGraph.cpp
+++ gtsam-4.1.0/gtsam/linear/tests/testGaussianFactorGraph.cpp
@@ -36,9 +36,18 @@ using namespace boost::assign;
 using namespace std;
 using namespace gtsam;
 
-// static SharedDiagonal
-//  sigma0_1 = noiseModel::Isotropic::Sigma(2,0.1), sigma_02 = noiseModel::Isotropic::Sigma(2,0.2),
-//  constraintModel = noiseModel::Constrained::All(2);
+typedef std::tuple<size_t, size_t, double> SparseTriplet;
+bool triplet_equal(SparseTriplet a, SparseTriplet b) {
+  if (get<0>(a) == get<0>(b) && get<1>(a) == get<1>(b) &&
+      get<2>(a) == get<2>(b)) return true;
+
+  cout << "not equal:" << endl;
+  cout << "\texpected: "
+      "(" << get<0>(a) << ", " << get<1>(a) << ") = " << get<2>(a) << endl;
+  cout << "\tactual:   "
+      "(" << get<0>(b) << ", " << get<1>(b) << ") = " << get<2>(b) << endl;
+  return false;
+}
 
 /* ************************************************************************* */
 TEST(GaussianFactorGraph, initialization) {
@@ -57,10 +66,11 @@ TEST(GaussianFactorGraph, initialization
   // Test sparse, which takes a vector and returns a matrix, used in MATLAB
   // Note that this the augmented vector and the RHS is in column 7
   Matrix expectedIJS =
-      (Matrix(3, 22) << 1., 2., 1., 2., 3., 4., 3., 4., 3., 4., 5., 6., 5., 6., 5., 6., 7., 8., 7.,
-       8., 7., 8., 1., 2., 7., 7., 1., 2., 3., 4., 7., 7., 1., 2., 5., 6., 7., 7., 3., 4., 5., 6.,
-       7., 7., 10., 10., -1., -1., -10., -10., 10., 10., 2., -1., -5., -5., 5., 5., 0., 1., -5.,
-       -5., 5., 5., -1., 1.5).finished();
+      (Matrix(3, 21) <<
+      1., 2., 1., 2., 3., 4., 3., 4., 3., 4., 5., 6., 5., 6., 6., 7., 8., 7., 8., 7., 8.,
+      1., 2., 7., 7., 1., 2., 3., 4., 7., 7., 1., 2., 5., 6., 7., 3., 4., 5., 6., 7., 7.,
+      10., 10., -1., -1., -10., -10., 10., 10., 2., -1., -5., -5., 5., 5.,
+        1., -5., -5., 5., 5., -1., 1.5).finished();
   Matrix actualIJS = fg.sparseJacobian_();
   EQUALITY(expectedIJS, actualIJS);
 }
@@ -74,8 +84,8 @@ TEST(GaussianFactorGraph, sparseJacobian
   //  9 10  0 11 12 13
   //  0  0  0 14 15 16
 
-  // Expected - NOTE that we transpose this!
-  Matrix expectedT = (Matrix(16, 3) <<
+  // Expected
+  Matrix expected = (Matrix(16, 3) <<
       1., 1., 2.,
       1., 2., 4.,
       1., 3., 6.,
@@ -93,17 +103,32 @@ TEST(GaussianFactorGraph, sparseJacobian
       3., 6.,26.,
       4., 6.,32.).finished();
 
-  Matrix expected = expectedT.transpose();
+  // expected: in matlab format - NOTE the transpose!)
+  Matrix expectedMatlab = expected.transpose();
 
   GaussianFactorGraph gfg;
   SharedDiagonal model = noiseModel::Isotropic::Sigma(2, 0.5);
-  gfg.add(0, (Matrix(2, 3) << 1., 2., 3., 5., 6., 7.).finished(), Vector2(4., 8.), model);
-  gfg.add(0, (Matrix(2, 3) << 9., 10., 0., 0., 0., 0.).finished(), 1,
-          (Matrix(2, 2) << 11., 12., 14., 15.).finished(), Vector2(13., 16.), model);
+  const Key x123 = 0, x45 = 1;
+  gfg.add(x123, (Matrix(2, 3) << 1, 2, 3, 5, 6, 7).finished(),
+          Vector2(4, 8), model);
+  gfg.add(x123, (Matrix(2, 3) << 9, 10, 0, 0, 0, 0).finished(),
+          x45,  (Matrix(2, 2) << 11, 12, 14, 15.).finished(),
+          Vector2(13, 16), model);
 
   Matrix actual = gfg.sparseJacobian_();
 
-  EXPECT(assert_equal(expected, actual));
+  EXPECT(assert_equal(expectedMatlab, actual));
+
+  // SparseTriplets
+  auto boostActual = gfg.sparseJacobian();
+  // check the triplets size...
+  EXPECT_LONGS_EQUAL(16, boostActual.size());
+  // check content
+  for (int i = 0; i < 16; i++) {
+    EXPECT(triplet_equal(
+        SparseTriplet(expected(i, 0) - 1, expected(i, 1) - 1, expected(i, 2)),
+        boostActual.at(i)));
+  }
 }
 
 /* ************************************************************************* */
--- /dev/null
+++ gtsam-4.1.0/gtsam/linear/tests/testPowerMethod.cpp
@@ -0,0 +1,124 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010-2019, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * testPowerMethod.cpp
+ *
+ * @file   testPowerMethod.cpp
+ * @date   Sept 2020
+ * @author Jing Wu
+ * @brief  Check eigenvalue and eigenvector computed by power method
+ */
+
+#include <CppUnitLite/TestHarness.h>
+#include <gtsam/base/Matrix.h>
+#include <gtsam/base/VectorSpace.h>
+#include <gtsam/inference/Symbol.h>
+#include <gtsam/linear/GaussianFactorGraph.h>
+#include <gtsam/linear/PowerMethod.h>
+#include <gtsam/linear/tests/powerMethodExample.h>
+
+#include <Eigen/Core>
+#include <Eigen/Dense>
+#include <Eigen/Eigenvalues>
+#include <iostream>
+#include <random>
+
+using namespace std;
+using namespace gtsam;
+
+/* ************************************************************************* */
+TEST(PowerMethod, powerIteration) {
+  // test power iteration, beta is set to 0
+  Sparse A(6, 6);
+  A.coeffRef(0, 0) = 6;
+  A.coeffRef(1, 1) = 5;
+  A.coeffRef(2, 2) = 4;
+  A.coeffRef(3, 3) = 3;
+  A.coeffRef(4, 4) = 2;
+  A.coeffRef(5, 5) = 1;
+  Vector initial = (Vector(6) << 0.24434602, 0.22829942, 0.70094486, 0.15463092, 0.55871359,
+       0.2465342).finished();
+  PowerMethod<Sparse> pf(A, initial);
+  pf.compute(100, 1e-5);
+  EXPECT_LONGS_EQUAL(6, pf.eigenvector().rows());
+
+  Vector6 actual1 = pf.eigenvector();
+  const double ritzValue = actual1.dot(A * actual1);
+  const double ritzResidual = (A * actual1 - ritzValue * actual1).norm();
+  EXPECT_DOUBLES_EQUAL(0, ritzResidual, 1e-5);
+
+  const double ev1 = 6.0;
+  EXPECT_DOUBLES_EQUAL(ev1, pf.eigenvalue(), 1e-5);
+}
+
+/* ************************************************************************* */
+TEST(PowerMethod, useFactorGraphSparse) {
+  // Let's make a scalar synchronization graph with 4 nodes
+  GaussianFactorGraph fg = gtsam::linear::test::example::createSparseGraph();
+
+  // Get eigenvalues and eigenvectors with Eigen
+  auto L = fg.hessian();
+  Eigen::EigenSolver<Matrix> solver(L.first);
+
+  // find the index of the max eigenvalue
+  size_t maxIdx = 0;
+  for (auto i = 0; i < solver.eigenvalues().rows(); ++i) {
+    if (solver.eigenvalues()(i).real() >= solver.eigenvalues()(maxIdx).real())
+      maxIdx = i;
+  }
+  // Store the max eigenvalue and its according eigenvector
+  const auto ev1 = solver.eigenvalues()(maxIdx).real();
+
+  Vector initial = Vector4::Random();
+  PowerMethod<Matrix> pf(L.first, initial);
+  pf.compute(100, 1e-5);
+  EXPECT_DOUBLES_EQUAL(ev1, pf.eigenvalue(), 1e-8);
+  auto actual2 = pf.eigenvector();
+  const double ritzValue = actual2.dot(L.first * actual2);
+  const double ritzResidual = (L.first * actual2 - ritzValue * actual2).norm();
+  EXPECT_DOUBLES_EQUAL(0, ritzResidual, 1e-5);
+}
+
+/* ************************************************************************* */
+TEST(PowerMethod, useFactorGraphDense) {
+  // Let's make a scalar synchronization graph with 10 nodes
+  GaussianFactorGraph fg = gtsam::linear::test::example::createDenseGraph();
+
+  // Get eigenvalues and eigenvectors with Eigen
+  auto L = fg.hessian();
+  Eigen::EigenSolver<Matrix> solver(L.first);
+
+  // find the index of the max eigenvalue
+  size_t maxIdx = 0;
+  for (auto i = 0; i < solver.eigenvalues().rows(); ++i) {
+    if (solver.eigenvalues()(i).real() >= solver.eigenvalues()(maxIdx).real())
+      maxIdx = i;
+  }
+  // Store the max eigenvalue and its according eigenvector
+  const auto ev1 = solver.eigenvalues()(maxIdx).real();
+
+  Vector initial = Vector10::Random();
+  PowerMethod<Matrix> pf(L.first, initial);
+  pf.compute(100, 1e-5);
+  EXPECT_DOUBLES_EQUAL(ev1, pf.eigenvalue(), 1e-8);
+  auto actual2 = pf.eigenvector();
+  const double ritzValue = actual2.dot(L.first * actual2);
+  const double ritzResidual = (L.first * actual2 - ritzValue * actual2).norm();
+  EXPECT_DOUBLES_EQUAL(0, ritzResidual, 1e-5);
+}
+
+/* ************************************************************************* */
+int main() {
+  TestResult tr;
+  return TestRegistry::runAllTests(tr);
+}
+/* ************************************************************************* */
--- /dev/null
+++ gtsam-4.1.0/gtsam/linear/tests/testSparseEigen.cpp
@@ -0,0 +1,72 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * @file    testSparseMatrix.cpp
+ * @author  Mandy Xie
+ * @author  Fan Jiang
+ * @author  Gerry Chen
+ * @author  Frank Dellaert
+ * @date    Jan, 2021
+ */
+
+#include <gtsam/linear/GaussianFactorGraph.h>
+#include <gtsam/linear/SparseEigen.h>
+
+#include <boost/assign/list_of.hpp>
+using boost::assign::list_of;
+
+#include <gtsam/base/TestableAssertions.h>
+#include <CppUnitLite/TestHarness.h>
+
+using namespace std;
+using namespace gtsam;
+
+/* ************************************************************************* */
+TEST(SparseEigen, sparseJacobianEigen) {
+  GaussianFactorGraph gfg;
+  SharedDiagonal model = noiseModel::Isotropic::Sigma(2, 0.5);
+  const Key x123 = 0, x45 = 1;
+  gfg.add(x123, (Matrix(2, 3) << 1, 2, 3, 5, 6, 7).finished(),
+          Vector2(4, 8), model);
+  gfg.add(x123, (Matrix(2, 3) << 9, 10, 0, 0, 0, 0).finished(),
+          x45,  (Matrix(2, 2) << 11, 12, 14, 15.).finished(),
+          Vector2(13, 16), model);
+
+  // Sparse Matrix
+  auto sparseResult = sparseJacobianEigen(gfg);
+  EXPECT_LONGS_EQUAL(16, sparseResult.nonZeros());
+  EXPECT(assert_equal(4, sparseResult.rows()));
+  EXPECT(assert_equal(6, sparseResult.cols()));
+  EXPECT(assert_equal(gfg.augmentedJacobian(), Matrix(sparseResult)));
+
+  // Call sparseJacobian with optional ordering...
+  auto ordering = Ordering(list_of(x45)(x123));
+
+  // Eigen Sparse with optional ordering
+  EXPECT(assert_equal(gfg.augmentedJacobian(ordering),
+                      Matrix(sparseJacobianEigen(gfg, ordering))));
+
+  // Check matrix dimensions when zero rows / cols
+  gfg.add(x123, Matrix23::Zero(), Vector2::Zero(), model);  // zero row
+  gfg.add(2, Matrix21::Zero(), Vector2::Zero(), model);     // zero col
+  sparseResult = sparseJacobianEigen(gfg);
+  EXPECT_LONGS_EQUAL(16, sparseResult.nonZeros());
+  EXPECT(assert_equal(8, sparseResult.rows()));
+  EXPECT(assert_equal(7, sparseResult.cols()));
+}
+
+/* ************************************************************************* */
+int main() {
+  TestResult tr;
+  return TestRegistry::runAllTests(tr);
+}
+/* ************************************************************************* */
--- gtsam-4.1.0.orig/gtsam/navigation/AHRSFactor.h
+++ gtsam-4.1.0/gtsam/navigation/AHRSFactor.h
@@ -42,7 +42,7 @@ class GTSAM_EXPORT PreintegratedAhrsMeas
 
  public:
 
-  /// Default constructor, only for serialization and Cython wrapper
+  /// Default constructor, only for serialization and wrappers
   PreintegratedAhrsMeasurements() {}
 
   /**
@@ -154,7 +154,7 @@ public:
   AHRSFactor(Key rot_i, Key rot_j, Key bias,
       const PreintegratedAhrsMeasurements& preintegratedMeasurements);
 
-  virtual ~AHRSFactor() {
+  ~AHRSFactor() override {
   }
 
   /// @return a deep copy of this factor
--- gtsam-4.1.0.orig/gtsam/navigation/AttitudeFactor.h
+++ gtsam-4.1.0/gtsam/navigation/AttitudeFactor.h
@@ -92,7 +92,7 @@ public:
   Rot3AttitudeFactor() {
   }
 
-  virtual ~Rot3AttitudeFactor() {
+  ~Rot3AttitudeFactor() override {
   }
 
   /**
@@ -166,7 +166,7 @@ public:
   Pose3AttitudeFactor() {
   }
 
-  virtual ~Pose3AttitudeFactor() {
+  ~Pose3AttitudeFactor() override {
   }
 
   /**
--- gtsam-4.1.0.orig/gtsam/navigation/CombinedImuFactor.cpp
+++ gtsam-4.1.0/gtsam/navigation/CombinedImuFactor.cpp
@@ -167,7 +167,7 @@ gtsam::NonlinearFactor::shared_ptr Combi
 //------------------------------------------------------------------------------
 void CombinedImuFactor::print(const string& s,
     const KeyFormatter& keyFormatter) const {
-  cout << (s == "" ? s : s + "\n") << "CombinedImuFactor("
+  cout << (s.empty() ? s : s + "\n") << "CombinedImuFactor("
        << keyFormatter(this->key1()) << "," << keyFormatter(this->key2()) << ","
        << keyFormatter(this->key3()) << "," << keyFormatter(this->key4()) << ","
        << keyFormatter(this->key5()) << "," << keyFormatter(this->key6())
--- gtsam-4.1.0.orig/gtsam/navigation/CombinedImuFactor.h
+++ gtsam-4.1.0/gtsam/navigation/CombinedImuFactor.h
@@ -145,7 +145,7 @@ public:
   /// @name Constructors
   /// @{
 
-  /// Default constructor only for serialization and Cython wrapper
+  /// Default constructor only for serialization and wrappers
   PreintegratedCombinedMeasurements() {
     preintMeasCov_.setZero();
   }
@@ -173,7 +173,7 @@ public:
   }
 
   /// Virtual destructor
-  virtual ~PreintegratedCombinedMeasurements() {}
+  ~PreintegratedCombinedMeasurements() override {}
 
   /// @}
 
@@ -291,7 +291,7 @@ public:
       Key pose_i, Key vel_i, Key pose_j, Key vel_j, Key bias_i, Key bias_j,
       const PreintegratedCombinedMeasurements& preintegratedMeasurements);
 
-  virtual ~CombinedImuFactor() {}
+  ~CombinedImuFactor() override {}
 
   /// @return a deep copy of this factor
   gtsam::NonlinearFactor::shared_ptr clone() const override;
--- /dev/null
+++ gtsam-4.1.0/gtsam/navigation/ConstantVelocityFactor.h
@@ -0,0 +1,68 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * @file    ConstantVelocityFactor.h
+ * @brief   Maintain a constant velocity motion model between two NavStates
+ * @author  Asa Hammond
+ */
+
+#include <gtsam/navigation/NavState.h>
+#include <gtsam/nonlinear/NonlinearFactor.h>
+
+namespace gtsam {
+
+/**
+ * Binary factor for applying a constant velocity model to a moving body represented as a NavState.
+ * The only measurement is dt, the time delta between the states.
+ */
+class ConstantVelocityFactor : public NoiseModelFactor2<NavState, NavState> {
+    double dt_;
+
+   public:
+    using Base = NoiseModelFactor2<NavState, NavState>;
+
+   public:
+    ConstantVelocityFactor(Key i, Key j, double dt, const SharedNoiseModel &model)
+        : NoiseModelFactor2<NavState, NavState>(model, i, j), dt_(dt) {}
+    ~ConstantVelocityFactor() override{};
+
+    /**
+     * @brief Caclulate error: (x2 - x1.update(dt)))
+     * where X1 and X1 are NavStates and dt is
+     * the time difference in seconds between the states.
+     * @param x1 NavState for key a
+     * @param x2 NavState for key b
+     * @param H1 optional jacobian in x1
+     * @param H2 optional jacobian in x2
+     * @return * Vector
+     */
+    gtsam::Vector evaluateError(const NavState &x1, const NavState &x2,
+                                boost::optional<gtsam::Matrix &> H1 = boost::none,
+                                boost::optional<gtsam::Matrix &> H2 = boost::none) const override {
+        // only used to use update() below
+        static const Vector3 b_accel{0.0, 0.0, 0.0};
+        static const Vector3 b_omega{0.0, 0.0, 0.0};
+
+        Matrix99 predicted_H_x1;
+        NavState predicted = x1.update(b_accel, b_omega, dt_, H1 ? &predicted_H_x1 : nullptr, {}, {});
+
+        Matrix99 error_H_predicted;
+        Vector9 error = predicted.localCoordinates(x2, H1 ? &error_H_predicted : nullptr, H2);
+
+        if (H1) {
+            *H1 = error_H_predicted * predicted_H_x1;
+        }
+        return error;
+    }
+};
+
+}  // namespace gtsam
--- gtsam-4.1.0.orig/gtsam/navigation/GPSFactor.h
+++ gtsam-4.1.0/gtsam/navigation/GPSFactor.h
@@ -51,7 +51,7 @@ public:
   /** default constructor - only use for serialization */
   GPSFactor(): nT_(0, 0, 0) {}
 
-  virtual ~GPSFactor() {}
+  ~GPSFactor() override {}
 
   /**
    * @brief Constructor from a measurement in a Cartesian frame.
@@ -129,7 +129,7 @@ public:
   /// default constructor - only use for serialization
   GPSFactor2():nT_(0, 0, 0) {}
 
-  virtual ~GPSFactor2() {}
+  ~GPSFactor2() override {}
 
   /// Constructor from a measurement in a Cartesian frame.
   GPSFactor2(Key key, const Point3& gpsIn, const SharedNoiseModel& model) :
--- gtsam-4.1.0.orig/gtsam/navigation/ImuBias.h
+++ gtsam-4.1.0/gtsam/navigation/ImuBias.h
@@ -29,8 +29,8 @@ namespace imuBias {
 
 class GTSAM_EXPORT ConstantBias {
 private:
-  Vector3 biasAcc_;
-  Vector3 biasGyro_;
+  Vector3 biasAcc_; ///< The units for stddev are σ = m/s² or m √Hz/s²
+  Vector3 biasGyro_; ///< The units for stddev are σ = rad/s or rad √Hz/s
 
 public:
   /// dimension of the variable - used to autodetect sizes
--- gtsam-4.1.0.orig/gtsam/navigation/ImuFactor.cpp
+++ gtsam-4.1.0/gtsam/navigation/ImuFactor.cpp
@@ -130,7 +130,7 @@ std::ostream& operator<<(std::ostream& o
 
 //------------------------------------------------------------------------------
 void ImuFactor::print(const string& s, const KeyFormatter& keyFormatter) const {
-  cout << (s == "" ? s : s + "\n") << "ImuFactor(" << keyFormatter(this->key1())
+  cout << (s.empty() ? s : s + "\n") << "ImuFactor(" << keyFormatter(this->key1())
        << "," << keyFormatter(this->key2()) << "," << keyFormatter(this->key3())
        << "," << keyFormatter(this->key4()) << "," << keyFormatter(this->key5())
        << ")\n";
@@ -226,7 +226,7 @@ std::ostream& operator<<(std::ostream& o
 //------------------------------------------------------------------------------
 void ImuFactor2::print(const string& s,
     const KeyFormatter& keyFormatter) const {
-  cout << (s == "" ? s : s + "\n") << "ImuFactor2("
+  cout << (s.empty() ? s : s + "\n") << "ImuFactor2("
        << keyFormatter(this->key1()) << "," << keyFormatter(this->key2()) << ","
        << keyFormatter(this->key3()) << ")\n";
   cout << *this << endl;
--- gtsam-4.1.0.orig/gtsam/navigation/ImuFactor.h
+++ gtsam-4.1.0/gtsam/navigation/ImuFactor.h
@@ -80,7 +80,7 @@ protected:
 
 public:
 
-  /// Default constructor for serialization and Cython wrapper
+  /// Default constructor for serialization and wrappers
   PreintegratedImuMeasurements() {
     preintMeasCov_.setZero();
   }
@@ -107,7 +107,7 @@ public:
   }
 
   /// Virtual destructor
-  virtual ~PreintegratedImuMeasurements() {
+  ~PreintegratedImuMeasurements() override {
   }
 
   /// print
@@ -196,7 +196,7 @@ public:
   ImuFactor(Key pose_i, Key vel_i, Key pose_j, Key vel_j, Key bias,
       const PreintegratedImuMeasurements& preintegratedMeasurements);
 
-  virtual ~ImuFactor() {
+  ~ImuFactor() override {
   }
 
   /// @return a deep copy of this factor
@@ -274,7 +274,7 @@ public:
   ImuFactor2(Key state_i, Key state_j, Key bias,
              const PreintegratedImuMeasurements& preintegratedMeasurements);
 
-  virtual ~ImuFactor2() {
+  ~ImuFactor2() override {
   }
 
   /// @return a deep copy of this factor
--- gtsam-4.1.0.orig/gtsam/navigation/NavState.cpp
+++ gtsam-4.1.0/gtsam/navigation/NavState.cpp
@@ -89,8 +89,8 @@ Matrix7 NavState::matrix() const {
 //------------------------------------------------------------------------------
 ostream& operator<<(ostream& os, const NavState& state) {
   os << "R: " << state.attitude() << "\n";
-  os << "p: " << state.position() << "\n";
-  os << "v: " << Point3(state.velocity());
+  os << "p: " << state.position().transpose() << "\n";
+  os << "v: " << state.velocity().transpose();
   return os;
 }
 
@@ -136,12 +136,12 @@ Vector9 NavState::localCoordinates(const
     OptionalJacobian<9, 9> H1, OptionalJacobian<9, 9> H2) const {
   Matrix3 D_dR_R, D_dt_R, D_dv_R;
   const Rot3 dR = R_.between(g.R_, H1 ? &D_dR_R : 0);
-  const Point3 dt = R_.unrotate(g.t_ - t_, H1 ? &D_dt_R : 0);
-  const Vector dv = R_.unrotate(g.v_ - v_, H1 ? &D_dv_R : 0);
+  const Point3 dP = R_.unrotate(g.t_ - t_, H1 ? &D_dt_R : 0);
+  const Vector dV = R_.unrotate(g.v_ - v_, H1 ? &D_dv_R : 0);
 
   Vector9 xi;
   Matrix3 D_xi_R;
-  xi << Rot3::Logmap(dR, (H1 || H2) ? &D_xi_R : 0), dt, dv;
+  xi << Rot3::Logmap(dR, (H1 || H2) ? &D_xi_R : 0), dP, dV;
   if (H1) {
     *H1 << D_xi_R * D_dR_R, Z_3x3, Z_3x3, //
     D_dt_R, -I_3x3, Z_3x3, //
@@ -218,28 +218,37 @@ Vector9 NavState::coriolis(double dt, co
   const double dt2 = dt * dt;
   const Vector3 omega_cross_vel = omega.cross(n_v);
 
-  Vector9 xi;
-  Matrix3 D_dP_R;
-  dR(xi) << nRb.unrotate((-dt) * omega, H ? &D_dP_R : 0);
-  dP(xi) << ((-dt2) * omega_cross_vel); // NOTE(luca): we got rid of the 2 wrt INS paper
-  dV(xi) << ((-2.0 * dt) * omega_cross_vel);
+  // Get perturbations in nav frame
+  Vector9 n_xi, xi;
+  Matrix3 D_dR_R, D_dP_R, D_dV_R, D_body_nav;
+  dR(n_xi) << ((-dt) * omega);
+  dP(n_xi) << ((-dt2) * omega_cross_vel); // NOTE(luca): we got rid of the 2 wrt INS paper
+  dV(n_xi) << ((-2.0 * dt) * omega_cross_vel);
   if (secondOrder) {
     const Vector3 omega_cross2_t = omega.cross(omega.cross(n_t));
-    dP(xi) -= (0.5 * dt2) * omega_cross2_t;
-    dV(xi) -= dt * omega_cross2_t;
+    dP(n_xi) -= (0.5 * dt2) * omega_cross2_t;
+    dV(n_xi) -= dt * omega_cross2_t;
   }
+
+  // Transform n_xi into the body frame
+  xi << nRb.unrotate(dR(n_xi), H ? &D_dR_R : 0, H ? &D_body_nav : 0), 
+        nRb.unrotate(dP(n_xi), H ? &D_dP_R : 0),
+        nRb.unrotate(dV(n_xi), H ? &D_dV_R : 0);
+
   if (H) {
     H->setZero();
     const Matrix3 Omega = skewSymmetric(omega);
     const Matrix3 D_cross_state = Omega * R();
     H->setZero();
-    D_R_R(H) << D_dP_R;
-    D_t_v(H) << (-dt2) * D_cross_state;
-    D_v_v(H) << (-2.0 * dt) * D_cross_state;
+    D_R_R(H) << D_dR_R;
+    D_t_v(H) << D_body_nav * (-dt2) * D_cross_state;
+    D_t_R(H) << D_dP_R;
+    D_v_v(H) << D_body_nav * (-2.0 * dt) * D_cross_state;
+    D_v_R(H) << D_dV_R;
     if (secondOrder) {
       const Matrix3 D_cross2_state = Omega * D_cross_state;
-      D_t_t(H) -= (0.5 * dt2) * D_cross2_state;
-      D_v_t(H) -= dt * D_cross2_state;
+      D_t_t(H) -= D_body_nav * (0.5 * dt2) * D_cross2_state;
+      D_v_t(H) -= D_body_nav * dt * D_cross2_state;
     }
   }
   return xi;
--- gtsam-4.1.0.orig/gtsam/navigation/PreintegratedRotation.cpp
+++ gtsam-4.1.0/gtsam/navigation/PreintegratedRotation.cpp
@@ -26,7 +26,7 @@ using namespace std;
 namespace gtsam {
 
 void PreintegratedRotationParams::print(const string& s) const {
-  cout << (s == "" ? s : s + "\n") << endl;
+  cout << (s.empty() ? s : s + "\n") << endl;
   cout << "gyroscopeCovariance:\n[\n" << gyroscopeCovariance << "\n]" << endl;
   if (omegaCoriolis)
     cout << "omegaCoriolis = (" << omegaCoriolis->transpose() << ")" << endl;
--- gtsam-4.1.0.orig/gtsam/navigation/PreintegratedRotation.h
+++ gtsam-4.1.0/gtsam/navigation/PreintegratedRotation.h
@@ -29,7 +29,9 @@ namespace gtsam {
 /// Parameters for pre-integration:
 /// Usage: Create just a single Params and pass a shared pointer to the constructor
 struct GTSAM_EXPORT PreintegratedRotationParams {
-  Matrix3 gyroscopeCovariance;  ///< continuous-time "Covariance" of gyroscope measurements
+  /// Continuous-time "Covariance" of gyroscope measurements
+  /// The units for stddev are σ = rad/s/√Hz
+  Matrix3 gyroscopeCovariance;
   boost::optional<Vector3> omegaCoriolis;  ///< Coriolis constant
   boost::optional<Pose3> body_P_sensor;    ///< The pose of the sensor in the body frame
 
--- gtsam-4.1.0.orig/gtsam/navigation/PreintegrationBase.cpp
+++ gtsam-4.1.0/gtsam/navigation/PreintegrationBase.cpp
@@ -46,7 +46,7 @@ ostream& operator<<(ostream& os, const P
 
 //------------------------------------------------------------------------------
 void PreintegrationBase::print(const string& s) const {
-  cout << (s == "" ? s : s + "\n") << *this << endl;
+  cout << (s.empty() ? s : s + "\n") << *this << endl;
 }
 
 //------------------------------------------------------------------------------
--- gtsam-4.1.0.orig/gtsam/navigation/PreintegrationParams.h
+++ gtsam-4.1.0/gtsam/navigation/PreintegrationParams.h
@@ -24,7 +24,9 @@ namespace gtsam {
 /// Parameters for pre-integration:
 /// Usage: Create just a single Params and pass a shared pointer to the constructor
 struct GTSAM_EXPORT PreintegrationParams: PreintegratedRotationParams {
-  Matrix3 accelerometerCovariance; ///< continuous-time "Covariance" of accelerometer
+  /// Continuous-time "Covariance" of accelerometer
+  /// The units for stddev are σ = m/s²/√Hz
+  Matrix3 accelerometerCovariance;
   Matrix3 integrationCovariance; ///< continuous-time "Covariance" describing integration uncertainty
   bool use2ndOrderCoriolis; ///< Whether to use second order Coriolis integration
   Vector3 n_gravity; ///< Gravity vector in nav frame
--- gtsam-4.1.0.orig/gtsam/navigation/TangentPreintegration.h
+++ gtsam-4.1.0/gtsam/navigation/TangentPreintegration.h
@@ -54,7 +54,7 @@ public:
       const imuBias::ConstantBias& biasHat = imuBias::ConstantBias());
 
   /// Virtual destructor
-  virtual ~TangentPreintegration() {
+  ~TangentPreintegration() override {
   }
 
   /// @}
--- /dev/null
+++ gtsam-4.1.0/gtsam/navigation/tests/testConstantVelocityFactor.cpp
@@ -0,0 +1,81 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * @file    testConstantVelocityFactor.cpp
+ * @brief   Unit test for ConstantVelocityFactor
+ * @author  Asa Hammond
+ */
+
+#include <gtsam/base/TestableAssertions.h>
+#include <gtsam/geometry/Pose3.h>
+#include <gtsam/inference/Symbol.h>
+#include <gtsam/navigation/ConstantVelocityFactor.h>
+
+#include <CppUnitLite/TestHarness.h>
+#include <list>
+
+/* ************************************************************************* */
+TEST(ConstantVelocityFactor, VelocityFactor) {
+    using namespace gtsam;
+
+    const double tol{1e-5};
+
+    const Key x1 = Key{1};
+    const Key x2 = Key{2};
+
+    const double dt{1.0};
+
+    // moving upward with groundtruth velocity"
+    const auto origin = NavState{Pose3{Rot3::Yaw(0), Point3{0.0, 0.0, 0.0}}, Velocity3{0.0, 0.0, 0.0}};
+
+    const auto state0 = NavState{Pose3{Rot3::Yaw(0), Point3{0.0, 0.0, 0.0}}, Velocity3{0.0, 0.0, 1.0}};
+
+    const auto state1 = NavState{Pose3{Rot3::Yaw(0), Point3{0.0, 0.0, 1.0}}, Velocity3{0.0, 0.0, 1.0}};
+
+    const auto state2 = NavState{Pose3{Rot3::Yaw(0), Point3{0.0, 0.0, 2.0}}, Velocity3{0.0, 0.0, 1.0}};
+
+    const auto state3 = NavState{Pose3{Rot3::Yaw(M_PI_2), Point3{0.0, 0.0, 2.0}}, Velocity3{0.0, 0.0, 1.0}};
+
+    const double mu{1000};
+    const auto noise_model = noiseModel::Constrained::All(9, mu);
+
+    const auto factor = ConstantVelocityFactor(x1, x2, dt, noise_model);
+
+    // positions are the same, secondary state has velocity 1.0 in z,
+    const auto state0_err_origin = factor.evaluateError(origin, state0);
+    EXPECT(assert_equal((Vector9() << 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0).finished(), state0_err_origin, tol));
+
+    // same velocities, different position
+    // second state agrees with initial state + velocity * dt
+    const auto state1_err_state0 = factor.evaluateError(state0, state1);
+    EXPECT(assert_equal((Vector9() << 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0).finished(), state1_err_state0, tol));
+
+    // same velocities, same position, different rotations
+    // second state agrees with initial state + velocity * dt
+    // as we assume that omega is 0.0 this is the same as the above case
+    //  TODO: this should respect omega and actually fail in this case
+    const auto state3_err_state2 = factor.evaluateError(state0, state1);
+    EXPECT(assert_equal((Vector9() << 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0).finished(), state3_err_state2, tol));
+
+    // both bodies have the same velocity,
+    // but state2.pose() does not agree with state0.update()
+    // error comes from this position difference
+    const auto state2_err_state0 = factor.evaluateError(state0, state2);
+    EXPECT(assert_equal((Vector9() << 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0).finished(), state2_err_state0, tol));
+}
+
+/* ************************************************************************* */
+int main() {
+    TestResult tr;
+    return TestRegistry::runAllTests(tr);
+}
+/* ************************************************************************* */
--- gtsam-4.1.0.orig/gtsam/navigation/tests/testNavState.cpp
+++ gtsam-4.1.0/gtsam/navigation/tests/testNavState.cpp
@@ -192,6 +192,49 @@ TEST(NavState, Coriolis2) {
   EXPECT(assert_equal(numericalDerivative21(coriolis, state2, true), aH));
 }
 
+TEST(NavState, Coriolis3) {
+  /** Consider a massless planet with an attached nav frame at 
+   *  n_omega = [0 0 1]', and a body at position n_t = [1 0 0]', travelling with 
+   *  velocity n_v = [0 1 0]'. Orient the body so that it is not instantaneously
+   *  aligned with the nav frame (i.e., nRb != I_3x3). Test that first and 
+   *  second order Coriolis corrections are as expected.
+   */
+
+  // Get true first and second order coriolis accelerations
+  double dt = 2.0, dt2 = dt * dt;
+  Vector3 n_omega(0.0, 0.0, 1.0), n_t(1.0, 0.0, 0.0), n_v(0.0, 1.0, 0.0);
+  Vector3 n_aCorr1 = -2.0 * n_omega.cross(n_v),
+          n_aCorr2 = -n_omega.cross(n_omega.cross(n_t));
+  Rot3 nRb = Rot3(-1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0),
+       bRn = nRb.inverse();
+
+  // Get expected first and second order corrections in the nav frame
+  Vector3 n_dP1e = 0.5 * dt2 * n_aCorr1, 
+          n_dP2e = 0.5 * dt2 * (n_aCorr1 + n_aCorr2),
+          n_dV1e = dt * n_aCorr1, 
+          n_dV2e = dt * (n_aCorr1 + n_aCorr2);
+
+  // Get expected first and second order corrections in the body frame
+  Vector3 dRe = -dt * (bRn * n_omega),
+          b_dP1e = bRn * n_dP1e, b_dP2e = bRn * n_dP2e,
+          b_dV1e = bRn * n_dV1e, b_dV2e = bRn * n_dV2e;
+
+  // Get actual first and scond order corrections in body frame
+  NavState kState2(nRb, n_t, n_v);
+  Vector9 dXi1a = kState2.coriolis(dt, n_omega, false),
+          dXi2a = kState2.coriolis(dt, n_omega, true);
+  Vector3 dRa = NavState::dR(dXi1a),
+          b_dP1a = NavState::dP(dXi1a), b_dV1a = NavState::dV(dXi1a),
+          b_dP2a = NavState::dP(dXi2a), b_dV2a = NavState::dV(dXi2a);
+
+  EXPECT(assert_equal(dRe, dRa));
+  EXPECT(assert_equal(b_dP1e, b_dP1a));
+  EXPECT(assert_equal(b_dV1e, b_dV1a));
+  EXPECT(assert_equal(b_dP2e, b_dP2a));
+  EXPECT(assert_equal(b_dV2e, b_dV2a));
+
+}
+
 /* ************************************************************************* */
 TEST(NavState, CorrectPIM) {
   Vector9 xi;
@@ -215,7 +258,7 @@ TEST(NavState, Stream)
   os << state;
 
   string expected;
-  expected = "R: [\n\t1, 0, 0;\n\t0, 1, 0;\n\t0, 0, 1\n]\np: 0\n0\n0\nv: 0\n0\n0";
+  expected = "R: [\n\t1, 0, 0;\n\t0, 1, 0;\n\t0, 0, 1\n]\np: 0 0 0\nv: 0 0 0";
 
   EXPECT(os.str() == expected);
 }
--- gtsam-4.1.0.orig/gtsam/nonlinear/DoglegOptimizer.h
+++ gtsam-4.1.0/gtsam/nonlinear/DoglegOptimizer.h
@@ -43,7 +43,7 @@ public:
   DoglegParams() :
     deltaInitial(1.0), verbosityDL(SILENT) {}
 
-  virtual ~DoglegParams() {}
+  ~DoglegParams() override {}
 
   void print(const std::string& str = "") const override {
     NonlinearOptimizerParams::print(str);
@@ -103,7 +103,7 @@ public:
   /// @{
 
   /** Virtual destructor */
-  virtual ~DoglegOptimizer() {}
+  ~DoglegOptimizer() override {}
 
   /** 
    * Perform a single iteration, returning GaussianFactorGraph corresponding to 
@@ -121,7 +121,7 @@ public:
 
 protected:
   /** Access the parameters (base class version) */
-  virtual const NonlinearOptimizerParams& _params() const override { return params_; }
+  const NonlinearOptimizerParams& _params() const override { return params_; }
 
   /** Internal function for computing a COLAMD ordering if no ordering is specified */
   DoglegParams ensureHasOrdering(DoglegParams params, const NonlinearFactorGraph& graph) const;
--- gtsam-4.1.0.orig/gtsam/nonlinear/ExpressionFactor.h
+++ gtsam-4.1.0/gtsam/nonlinear/ExpressionFactor.h
@@ -71,7 +71,7 @@ protected:
   }
 
   /// Destructor
-  virtual ~ExpressionFactor() {}
+  ~ExpressionFactor() override {}
 
   /** return the measurement */
   const T& measured() const { return measured_; }
@@ -245,7 +245,7 @@ public:
   using ArrayNKeys = std::array<Key, NARY_EXPRESSION_SIZE>;
 
   /// Destructor
-  virtual ~ExpressionFactorN() = default;
+  ~ExpressionFactorN() override = default;
 
   // Don't provide backward compatible evaluateVector(), due to its problematic
   // variable length of optional Jacobian arguments. Vector evaluateError(const
@@ -330,7 +330,7 @@ public:
     throw std::runtime_error(
         "ExpressionFactor2::expression not provided: cannot deserialize.");
   }
-  virtual Expression<T>
+  Expression<T>
   expression(const typename ExpressionFactorN<T, A1, A2>::ArrayNKeys &keys)
       const override {
     return expression(keys[0], keys[1]);
--- gtsam-4.1.0.orig/gtsam/nonlinear/FunctorizedFactor.h
+++ gtsam-4.1.0/gtsam/nonlinear/FunctorizedFactor.h
@@ -79,7 +79,7 @@ class GTSAM_EXPORT FunctorizedFactor : p
                     const std::function<R(T, boost::optional<Matrix &>)> func)
       : Base(model, key), measured_(z), noiseModel_(model), func_(func) {}
 
-  virtual ~FunctorizedFactor() {}
+  ~FunctorizedFactor() override {}
 
   /// @return a deep copy of this factor
   NonlinearFactor::shared_ptr clone() const override {
@@ -87,8 +87,8 @@ class GTSAM_EXPORT FunctorizedFactor : p
         NonlinearFactor::shared_ptr(new FunctorizedFactor<R, T>(*this)));
   }
 
-  Vector evaluateError(const T &params,
-                       boost::optional<Matrix &> H = boost::none) const override {
+  Vector evaluateError(const T &params, boost::optional<Matrix &> H =
+                                            boost::none) const override {
     R x = func_(params, H);
     Vector error = traits<R>::Local(measured_, x);
     return error;
@@ -96,8 +96,9 @@ class GTSAM_EXPORT FunctorizedFactor : p
 
   /// @name Testable
   /// @{
-  void print(const std::string &s = "",
-             const KeyFormatter &keyFormatter = DefaultKeyFormatter) const override {
+  void print(
+      const std::string &s = "",
+      const KeyFormatter &keyFormatter = DefaultKeyFormatter) const override {
     Base::print(s, keyFormatter);
     std::cout << s << (s != "" ? " " : "") << "FunctorizedFactor("
               << keyFormatter(this->key()) << ")" << std::endl;
@@ -144,4 +145,111 @@ FunctorizedFactor<R, T> MakeFunctorizedF
   return FunctorizedFactor<R, T>(key, z, model, func);
 }
 
+/**
+ * Factor which evaluates provided binary functor and uses the result to compute
+ * error with respect to the provided measurement.
+ *
+ * Template parameters are
+ * @param R: The return type of the functor after evaluation.
+ * @param T1: The first argument type for the functor.
+ * @param T2: The second argument type for the functor.
+ */
+template <typename R, typename T1, typename T2>
+class GTSAM_EXPORT FunctorizedFactor2 : public NoiseModelFactor2<T1, T2> {
+ private:
+  using Base = NoiseModelFactor2<T1, T2>;
+
+  R measured_;  ///< value that is compared with functor return value
+  SharedNoiseModel noiseModel_;  ///< noise model
+  using FunctionType = std::function<R(T1, T2, boost::optional<Matrix &>,
+                                       boost::optional<Matrix &>)>;
+  FunctionType func_;  ///< functor instance
+
+ public:
+  /** default constructor - only use for serialization */
+  FunctorizedFactor2() {}
+
+  /** Construct with given x and the parameters of the basis
+   *
+   * @param key: Factor key
+   * @param z: Measurement object of same type as that returned by functor
+   * @param model: Noise model
+   * @param func: The instance of the functor object
+   */
+  FunctorizedFactor2(Key key1, Key key2, const R &z,
+                     const SharedNoiseModel &model, const FunctionType func)
+      : Base(model, key1, key2),
+        measured_(z),
+        noiseModel_(model),
+        func_(func) {}
+
+  ~FunctorizedFactor2() override {}
+
+  /// @return a deep copy of this factor
+  NonlinearFactor::shared_ptr clone() const override {
+    return boost::static_pointer_cast<NonlinearFactor>(
+        NonlinearFactor::shared_ptr(new FunctorizedFactor2<R, T1, T2>(*this)));
+  }
+
+  Vector evaluateError(
+      const T1 &params1, const T2 &params2,
+      boost::optional<Matrix &> H1 = boost::none,
+      boost::optional<Matrix &> H2 = boost::none) const override {
+    R x = func_(params1, params2, H1, H2);
+    Vector error = traits<R>::Local(measured_, x);
+    return error;
+  }
+
+  /// @name Testable
+  /// @{
+  void print(
+      const std::string &s = "",
+      const KeyFormatter &keyFormatter = DefaultKeyFormatter) const override {
+    Base::print(s, keyFormatter);
+    std::cout << s << (s != "" ? " " : "") << "FunctorizedFactor2("
+              << keyFormatter(this->key1()) << ", "
+              << keyFormatter(this->key2()) << ")" << std::endl;
+    traits<R>::Print(measured_, "  measurement: ");
+    std::cout << "  noise model sigmas: " << noiseModel_->sigmas().transpose()
+              << std::endl;
+  }
+
+  bool equals(const NonlinearFactor &other, double tol = 1e-9) const override {
+    const FunctorizedFactor2<R, T1, T2> *e =
+        dynamic_cast<const FunctorizedFactor2<R, T1, T2> *>(&other);
+    return e && Base::equals(other, tol) &&
+           traits<R>::Equals(this->measured_, e->measured_, tol);
+  }
+  /// @}
+
+ private:
+  /** Serialization function */
+  friend class boost::serialization::access;
+  template <class ARCHIVE>
+  void serialize(ARCHIVE &ar, const unsigned int /*version*/) {
+    ar &boost::serialization::make_nvp(
+        "NoiseModelFactor2", boost::serialization::base_object<Base>(*this));
+    ar &BOOST_SERIALIZATION_NVP(measured_);
+    ar &BOOST_SERIALIZATION_NVP(func_);
+  }
+};
+
+/// traits
+template <typename R, typename T1, typename T2>
+struct traits<FunctorizedFactor2<R, T1, T2>>
+    : public Testable<FunctorizedFactor2<R, T1, T2>> {};
+
+/**
+ * Helper function to create a functorized factor.
+ *
+ * Uses function template deduction to identify return type and functor type, so
+ * template list only needs the functor argument type.
+ */
+template <typename T1, typename T2, typename R, typename FUNC>
+FunctorizedFactor2<R, T1, T2> MakeFunctorizedFactor2(
+    Key key1, Key key2, const R &z, const SharedNoiseModel &model,
+    const FUNC func) {
+  return FunctorizedFactor2<R, T1, T2>(key1, key2, z, model, func);
+}
+
 }  // namespace gtsam
--- gtsam-4.1.0.orig/gtsam/nonlinear/GaussNewtonOptimizer.h
+++ gtsam-4.1.0/gtsam/nonlinear/GaussNewtonOptimizer.h
@@ -28,6 +28,8 @@ class GaussNewtonOptimizer;
  * NonlinearOptimizationParams.
  */
 class GTSAM_EXPORT GaussNewtonParams : public NonlinearOptimizerParams {
+public:
+  using OptimizerType = GaussNewtonOptimizer;
 };
 
 /**
@@ -68,7 +70,7 @@ public:
   /// @{
 
   /** Virtual destructor */
-  virtual ~GaussNewtonOptimizer() {}
+  ~GaussNewtonOptimizer() override {}
 
   /** 
    * Perform a single iteration, returning GaussianFactorGraph corresponding to 
--- /dev/null
+++ gtsam-4.1.0/gtsam/nonlinear/GncOptimizer.h
@@ -0,0 +1,403 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * @file    GncOptimizer.h
+ * @brief   The GncOptimizer class
+ * @author  Jingnan Shi
+ * @author  Luca Carlone
+ * @author  Frank Dellaert
+ *
+ * Implementation of the paper: Yang, Antonante, Tzoumas, Carlone, "Graduated Non-Convexity for Robust Spatial Perception:
+ * From Non-Minimal Solvers to Global Outlier Rejection", ICRA/RAL, 2020. (arxiv version: https://arxiv.org/pdf/1909.08605.pdf)
+ *
+ * See also:
+ * Antonante, Tzoumas, Yang, Carlone, "Outlier-Robust Estimation: Hardness, Minimally-Tuned Algorithms, and Applications",
+ * arxiv: https://arxiv.org/pdf/2007.15109.pdf, 2020.
+ */
+
+#pragma once
+
+#include <gtsam/nonlinear/GncParams.h>
+#include <gtsam/nonlinear/NonlinearFactorGraph.h>
+#include <boost/math/distributions/chi_squared.hpp>
+
+namespace gtsam {
+/*
+ * Quantile of chi-squared distribution with given degrees of freedom at probability alpha.
+ * Equivalent to chi2inv in Matlab.
+ */
+static double Chi2inv(const double alpha, const size_t dofs) {
+  boost::math::chi_squared_distribution<double> chi2(dofs);
+  return boost::math::quantile(chi2, alpha);
+}
+
+/* ************************************************************************* */
+template<class GncParameters>
+class GncOptimizer {
+ public:
+  /// For each parameter, specify the corresponding optimizer: e.g., GaussNewtonParams -> GaussNewtonOptimizer.
+  typedef typename GncParameters::OptimizerType BaseOptimizer;
+
+ private:
+  NonlinearFactorGraph nfg_; ///< Original factor graph to be solved by GNC.
+  Values state_; ///< Initial values to be used at each iteration by GNC.
+  GncParameters params_; ///< GNC parameters.
+  Vector weights_;  ///< Weights associated to each factor in GNC (this could be a local variable in optimize, but it is useful to make it accessible from outside).
+  Vector barcSq_;  ///< Inlier thresholds. A factor is considered an inlier if factor.error() < barcSq_[i] (where i is the position of the factor in the factor graph. Note that factor.error() whitens by the covariance.
+
+ public:
+  /// Constructor.
+  GncOptimizer(const NonlinearFactorGraph& graph, const Values& initialValues,
+               const GncParameters& params = GncParameters())
+      : state_(initialValues),
+        params_(params) {
+
+    // make sure all noiseModels are Gaussian or convert to Gaussian
+    nfg_.resize(graph.size());
+    for (size_t i = 0; i < graph.size(); i++) {
+      if (graph[i]) {
+        NoiseModelFactor::shared_ptr factor = boost::dynamic_pointer_cast<
+            NoiseModelFactor>(graph[i]);
+        auto robust = boost::dynamic_pointer_cast<
+            noiseModel::Robust>(factor->noiseModel());
+        // if the factor has a robust loss, we remove the robust loss
+        nfg_[i] = robust ? factor-> cloneWithNewNoiseModel(robust->noise()) : factor;
+      }
+    }
+
+    // set default barcSq_ (inlier threshold)
+    double alpha = 0.99; // with this (default) probability, inlier residuals are smaller than barcSq_
+    setInlierCostThresholdsAtProbability(alpha);
+  }
+
+  /** Set the maximum weighted residual error for an inlier (same for all factors). For a factor in the form f(x) = 0.5 * || r(x) ||^2_Omega,
+   * the inlier threshold is the largest value of f(x) for the corresponding measurement to be considered an inlier.
+   * In other words, an inlier at x is such that 0.5 * || r(x) ||^2_Omega <= barcSq.
+   * Assuming an isotropic measurement covariance sigma^2 * Identity, the cost becomes: 0.5 * 1/sigma^2 || r(x) ||^2 <= barcSq.
+   * Hence || r(x) ||^2 <= 2 * barcSq * sigma^2.
+   * */
+  void setInlierCostThresholds(const double inth) {
+    barcSq_ = inth * Vector::Ones(nfg_.size());
+  }
+
+  /** Set the maximum weighted residual error for an inlier (one for each factor). For a factor in the form f(x) = 0.5 * || r(x) ||^2_Omega,
+   * the inlier threshold is the largest value of f(x) for the corresponding measurement to be considered an inlier.
+   * In other words, an inlier at x is such that 0.5 * || r(x) ||^2_Omega <= barcSq.
+   * */
+  void setInlierCostThresholds(const Vector& inthVec) {
+    barcSq_ = inthVec;
+  }
+
+  /** Set the maximum weighted residual error threshold by specifying the probability
+   * alpha that the inlier residuals are smaller than that threshold
+   * */
+  void setInlierCostThresholdsAtProbability(const double alpha) {
+    barcSq_  = Vector::Ones(nfg_.size()); // initialize
+    for (size_t k = 0; k < nfg_.size(); k++) {
+      if (nfg_[k]) {
+        barcSq_[k] = 0.5 * Chi2inv(alpha, nfg_[k]->dim()); // 0.5 derives from the error definition in gtsam
+      }
+    }
+  }
+
+  /// Access a copy of the internal factor graph.
+  const NonlinearFactorGraph& getFactors() const { return nfg_; }
+
+  /// Access a copy of the internal values.
+  const Values& getState() const { return state_; }
+
+  /// Access a copy of the parameters.
+  const GncParameters& getParams() const { return params_;}
+
+  /// Access a copy of the GNC weights.
+  const Vector& getWeights() const { return weights_;}
+
+  /// Get the inlier threshold.
+  const Vector& getInlierCostThresholds() const {return barcSq_;}
+
+  /// Equals.
+  bool equals(const GncOptimizer& other, double tol = 1e-9) const {
+    return nfg_.equals(other.getFactors())
+        && equal(weights_, other.getWeights())
+        && params_.equals(other.getParams())
+        && equal(barcSq_, other.getInlierCostThresholds());
+  }
+
+  /// Compute optimal solution using graduated non-convexity.
+  Values optimize() {
+    // start by assuming all measurements are inliers
+    weights_ = Vector::Ones(nfg_.size());
+    BaseOptimizer baseOptimizer(nfg_, state_);
+    Values result = baseOptimizer.optimize();
+    double mu = initializeMu();
+    double prev_cost = nfg_.error(result);
+    double cost = 0.0;  // this will be updated in the main loop
+
+    // handle the degenerate case that corresponds to small
+    // maximum residual errors at initialization
+    // For GM: if residual error is small, mu -> 0
+    // For TLS: if residual error is small, mu -> -1
+    if (mu <= 0) {
+      if (params_.verbosity >= GncParameters::Verbosity::SUMMARY) {
+        std::cout << "GNC Optimizer stopped because maximum residual at "
+                  "initialization is small."
+                  << std::endl;
+      }
+      if (params_.verbosity >= GncParameters::Verbosity::VALUES) {
+        result.print("result\n");
+        std::cout << "mu: " << mu << std::endl;
+      }
+      return result;
+    }
+
+    size_t iter;
+    for (iter = 0; iter < params_.maxIterations; iter++) {
+
+      // display info
+      if (params_.verbosity >= GncParameters::Verbosity::VALUES) {
+        std::cout << "iter: " << iter << std::endl;
+        result.print("result\n");
+        std::cout << "mu: " << mu << std::endl;
+        std::cout << "weights: " << weights_ << std::endl;
+      }
+      // weights update
+      weights_ = calculateWeights(result, mu);
+
+      // variable/values update
+      NonlinearFactorGraph graph_iter = this->makeWeightedGraph(weights_);
+      BaseOptimizer baseOptimizer_iter(graph_iter, state_);
+      result = baseOptimizer_iter.optimize();
+
+      // stopping condition
+      cost = graph_iter.error(result);
+      if (checkConvergence(mu, weights_, cost, prev_cost)) {
+        break;
+      }
+
+      // update mu
+      mu = updateMu(mu);
+
+      // get ready for next iteration
+      prev_cost = cost;
+
+      // display info
+      if (params_.verbosity >= GncParameters::Verbosity::VALUES) {
+        std::cout << "previous cost: " << prev_cost << std::endl;
+        std::cout << "current cost: " << cost << std::endl;
+      }
+    }
+    // display info
+    if (params_.verbosity >= GncParameters::Verbosity::SUMMARY) {
+      std::cout << "final iterations: " << iter << std::endl;
+      std::cout << "final mu: " << mu << std::endl;
+      std::cout << "final weights: " << weights_ << std::endl;
+      std::cout << "previous cost: " << prev_cost << std::endl;
+      std::cout << "current cost: " << cost << std::endl;
+    }
+    return result;
+  }
+
+  /// Initialize the gnc parameter mu such that loss is approximately convex (remark 5 in GNC paper).
+  double initializeMu() const {
+
+    double mu_init = 0.0;
+    // initialize mu to the value specified in Remark 5 in GNC paper.
+    switch (params_.lossType) {
+      case GncLossType::GM:
+        /* surrogate cost is convex for large mu. initialize as in remark 5 in GNC paper.
+         Since barcSq_ can be different for each factor, we compute the max of the quantity in remark 5 in GNC paper
+         */
+        for (size_t k = 0; k < nfg_.size(); k++) {
+          if (nfg_[k]) {
+            mu_init = std::max(mu_init, 2 * nfg_[k]->error(state_) / barcSq_[k]);
+          }
+        }
+        return mu_init;  // initial mu
+      case GncLossType::TLS:
+        /* surrogate cost is convex for mu close to zero. initialize as in remark 5 in GNC paper.
+         degenerate case: 2 * rmax_sq - params_.barcSq < 0 (handled in the main loop)
+         according to remark mu = params_.barcSq / (2 * rmax_sq - params_.barcSq) = params_.barcSq/ excessResidual
+         however, if the denominator is 0 or negative, we return mu = -1 which leads to termination of the main GNC loop.
+         Since barcSq_ can be different for each factor, we look for the minimimum (positive) quantity in remark 5 in GNC paper
+         */
+        mu_init = std::numeric_limits<double>::infinity();
+        for (size_t k = 0; k < nfg_.size(); k++) {
+          if (nfg_[k]) {
+            double rk = nfg_[k]->error(state_);
+            mu_init = (2 * rk - barcSq_[k]) > 0 ? // if positive, update mu, otherwise keep same
+                std::min(mu_init, barcSq_[k] / (2 * rk - barcSq_[k]) ) : mu_init;
+          }
+        }
+        return mu_init > 0 && !std::isinf(mu_init) ? mu_init : -1; // if mu <= 0 or mu = inf, return -1,
+        // which leads to termination of the main gnc loop. In this case, all residuals are already below the threshold
+        // and there is no need to robustify (TLS = least squares)
+      default:
+        throw std::runtime_error(
+            "GncOptimizer::initializeMu: called with unknown loss type.");
+    }
+  }
+
+  /// Update the gnc parameter mu to gradually increase nonconvexity.
+  double updateMu(const double mu) const {
+    switch (params_.lossType) {
+      case GncLossType::GM:
+        // reduce mu, but saturate at 1 (original cost is recovered for mu -> 1)
+        return std::max(1.0, mu / params_.muStep);
+      case GncLossType::TLS:
+        // increases mu at each iteration (original cost is recovered for mu -> inf)
+        return mu * params_.muStep;
+      default:
+        throw std::runtime_error(
+            "GncOptimizer::updateMu: called with unknown loss type.");
+    }
+  }
+
+  /// Check if we have reached the value of mu for which the surrogate loss matches the original loss.
+  bool checkMuConvergence(const double mu) const {
+    bool muConverged = false;
+    switch (params_.lossType) {
+      case GncLossType::GM:
+        muConverged = std::fabs(mu - 1.0) < 1e-9;  // mu=1 recovers the original GM function
+        break;
+      case GncLossType::TLS:
+        muConverged = false;  // for TLS there is no stopping condition on mu (it must tend to infinity)
+        break;
+      default:
+        throw std::runtime_error(
+            "GncOptimizer::checkMuConvergence: called with unknown loss type.");
+    }
+    if (muConverged && params_.verbosity >= GncParameters::Verbosity::SUMMARY)
+      std::cout << "muConverged = true " << std::endl;
+    return muConverged;
+  }
+
+  /// Check convergence of relative cost differences.
+  bool checkCostConvergence(const double cost, const double prev_cost) const {
+    bool costConverged = std::fabs(cost - prev_cost) / std::max(prev_cost, 1e-7)
+        < params_.relativeCostTol;
+    if (costConverged && params_.verbosity >= GncParameters::Verbosity::SUMMARY)
+      std::cout << "checkCostConvergence = true " << std::endl;
+    return costConverged;
+  }
+
+  /// Check convergence of weights to binary values.
+  bool checkWeightsConvergence(const Vector& weights) const {
+    bool weightsConverged = false;
+    switch (params_.lossType) {
+      case GncLossType::GM:
+        weightsConverged = false;  // for GM, there is no clear binary convergence for the weights
+        break;
+      case GncLossType::TLS:
+        weightsConverged = true;
+        for (size_t i = 0; i < weights.size(); i++) {
+          if (std::fabs(weights[i] - std::round(weights[i]))
+              > params_.weightsTol) {
+            weightsConverged = false;
+            break;
+          }
+        }
+        break;
+      default:
+        throw std::runtime_error(
+            "GncOptimizer::checkWeightsConvergence: called with unknown loss type.");
+    }
+    if (weightsConverged
+        && params_.verbosity >= GncParameters::Verbosity::SUMMARY)
+      std::cout << "weightsConverged = true " << std::endl;
+    return weightsConverged;
+  }
+
+  /// Check for convergence between consecutive GNC iterations.
+  bool checkConvergence(const double mu, const Vector& weights,
+                        const double cost, const double prev_cost) const {
+    return checkCostConvergence(cost, prev_cost)
+        || checkWeightsConvergence(weights) || checkMuConvergence(mu);
+  }
+
+  /// Create a graph where each factor is weighted by the gnc weights.
+  NonlinearFactorGraph makeWeightedGraph(const Vector& weights) const {
+    // make sure all noiseModels are Gaussian or convert to Gaussian
+    NonlinearFactorGraph newGraph;
+    newGraph.resize(nfg_.size());
+    for (size_t i = 0; i < nfg_.size(); i++) {
+      if (nfg_[i]) {
+        auto factor = boost::dynamic_pointer_cast<
+            NoiseModelFactor>(nfg_[i]);
+        auto noiseModel =
+            boost::dynamic_pointer_cast<noiseModel::Gaussian>(
+                factor->noiseModel());
+        if (noiseModel) {
+          Matrix newInfo = weights[i] * noiseModel->information();
+          auto newNoiseModel = noiseModel::Gaussian::Information(newInfo);
+          newGraph[i] = factor->cloneWithNewNoiseModel(newNoiseModel);
+        } else {
+          throw std::runtime_error(
+              "GncOptimizer::makeWeightedGraph: unexpected non-Gaussian noise model.");
+        }
+      }
+    }
+    return newGraph;
+  }
+
+  /// Calculate gnc weights.
+  Vector calculateWeights(const Values& currentEstimate, const double mu) {
+    Vector weights = Vector::Ones(nfg_.size());
+
+    // do not update the weights that the user has decided are known inliers
+    std::vector<size_t> allWeights;
+    for (size_t k = 0; k < nfg_.size(); k++) {
+      allWeights.push_back(k);
+    }
+    std::vector<size_t> unknownWeights;
+    std::set_difference(allWeights.begin(), allWeights.end(),
+                        params_.knownInliers.begin(),
+                        params_.knownInliers.end(),
+                        std::inserter(unknownWeights, unknownWeights.begin()));
+
+    // update weights of known inlier/outlier measurements
+    switch (params_.lossType) {
+      case GncLossType::GM: {  // use eq (12) in GNC paper
+        for (size_t k : unknownWeights) {
+          if (nfg_[k]) {
+            double u2_k = nfg_[k]->error(currentEstimate);  // squared (and whitened) residual
+            weights[k] = std::pow(
+                (mu * barcSq_[k]) / (u2_k + mu * barcSq_[k]), 2);
+          }
+        }
+        return weights;
+      }
+      case GncLossType::TLS: {  // use eq (14) in GNC paper
+        double upperbound = (mu + 1) / mu * barcSq_.maxCoeff();
+        double lowerbound = mu / (mu + 1) * barcSq_.minCoeff();
+        for (size_t k : unknownWeights) {
+          if (nfg_[k]) {
+            double u2_k = nfg_[k]->error(currentEstimate);  // squared (and whitened) residual
+            if (u2_k >= upperbound) {
+              weights[k] = 0;
+            } else if (u2_k <= lowerbound) {
+              weights[k] = 1;
+            } else {
+              weights[k] = std::sqrt(barcSq_[k] * mu * (mu + 1) / u2_k)
+                  - mu;
+            }
+          }
+        }
+        return weights;
+      }
+      default:
+        throw std::runtime_error(
+            "GncOptimizer::calculateWeights: called with unknown loss type.");
+    }
+  }
+};
+
+}
--- /dev/null
+++ gtsam-4.1.0/gtsam/nonlinear/GncParams.h
@@ -0,0 +1,151 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * @file    GncOptimizer.h
+ * @brief   The GncOptimizer class
+ * @author  Jingnan Shi
+ * @author  Luca Carlone
+ * @author  Frank Dellaert
+ *
+ * Implementation of the paper: Yang, Antonante, Tzoumas, Carlone, "Graduated Non-Convexity for Robust Spatial Perception:
+ * From Non-Minimal Solvers to Global Outlier Rejection", ICRA/RAL, 2020. (arxiv version: https://arxiv.org/pdf/1909.08605.pdf)
+ *
+ * See also:
+ * Antonante, Tzoumas, Yang, Carlone, "Outlier-Robust Estimation: Hardness, Minimally-Tuned Algorithms, and Applications",
+ * arxiv: https://arxiv.org/pdf/2007.15109.pdf, 2020.
+ */
+
+#pragma once
+
+#include <gtsam/nonlinear/LevenbergMarquardtOptimizer.h>
+#include <gtsam/nonlinear/GaussNewtonOptimizer.h>
+
+namespace gtsam {
+
+/* ************************************************************************* */
+/// Choice of robust loss function for GNC.
+enum GncLossType {
+  GM /*Geman McClure*/,
+  TLS /*Truncated least squares*/
+};
+
+template<class BaseOptimizerParameters>
+class GncParams {
+ public:
+  /// For each parameter, specify the corresponding optimizer: e.g., GaussNewtonParams -> GaussNewtonOptimizer.
+  typedef typename BaseOptimizerParameters::OptimizerType OptimizerType;
+
+  /// Verbosity levels
+  enum Verbosity {
+    SILENT = 0,
+    SUMMARY,
+    VALUES
+  };
+
+  /// Constructor.
+  GncParams(const BaseOptimizerParameters& baseOptimizerParams)
+      : baseOptimizerParams(baseOptimizerParams) {
+  }
+
+  /// Default constructor.
+  GncParams()
+      : baseOptimizerParams() {
+  }
+
+  /// GNC parameters.
+  BaseOptimizerParameters baseOptimizerParams;  ///< Optimization parameters used to solve the weighted least squares problem at each GNC iteration
+  /// any other specific GNC parameters:
+  GncLossType lossType = TLS;  ///< Default loss
+  size_t maxIterations = 100;  ///<  Maximum number of iterations
+  double muStep = 1.4;  ///< Multiplicative factor to reduce/increase the mu in gnc
+  double relativeCostTol = 1e-5;  ///< If relative cost change is below this threshold, stop iterating
+  double weightsTol = 1e-4;  ///< If the weights are within weightsTol from being binary, stop iterating (only for TLS)
+  Verbosity verbosity = SILENT;  ///< Verbosity level
+  std::vector<size_t> knownInliers = std::vector<size_t>();  ///< Slots in the factor graph corresponding to measurements that we know are inliers
+
+  /// Set the robust loss function to be used in GNC (chosen among the ones in GncLossType).
+  void setLossType(const GncLossType type) {
+    lossType = type;
+  }
+
+  /// Set the maximum number of iterations in GNC (changing the max nr of iters might lead to less accurate solutions and is not recommended).
+  void setMaxIterations(const size_t maxIter) {
+    std::cout
+        << "setMaxIterations: changing the max nr of iters might lead to less accurate solutions and is not recommended! "
+        << std::endl;
+    maxIterations = maxIter;
+  }
+
+  /// Set the graduated non-convexity step: at each GNC iteration, mu is updated as mu <- mu * muStep.
+  void setMuStep(const double step) {
+    muStep = step;
+  }
+
+  /// Set the maximum relative difference in mu values to stop iterating.
+  void setRelativeCostTol(double value) {
+    relativeCostTol = value;
+  }
+
+  /// Set the maximum difference between the weights and their rounding in {0,1} to stop iterating.
+  void setWeightsTol(double value) {
+    weightsTol = value;
+  }
+
+  /// Set the verbosity level.
+  void setVerbosityGNC(const Verbosity value) {
+    verbosity = value;
+  }
+
+  /** (Optional) Provide a vector of measurements that must be considered inliers. The enties in the vector
+   * corresponds to the slots in the factor graph. For instance, if you have a nonlinear factor graph nfg,
+   * and you provide  knownIn = {0, 2, 15}, GNC will not apply outlier rejection to nfg[0], nfg[2], and nfg[15].
+   * This functionality is commonly used in SLAM when one may assume the odometry is outlier free, and
+   * only apply GNC to prune outliers from the loop closures.
+   * */
+  void setKnownInliers(const std::vector<size_t>& knownIn) {
+    for (size_t i = 0; i < knownIn.size(); i++)
+      knownInliers.push_back(knownIn[i]);
+  }
+
+  /// Equals.
+  bool equals(const GncParams& other, double tol = 1e-9) const {
+    return baseOptimizerParams.equals(other.baseOptimizerParams)
+        && lossType == other.lossType && maxIterations == other.maxIterations
+        && std::fabs(muStep - other.muStep) <= tol
+        && verbosity == other.verbosity && knownInliers == other.knownInliers;
+  }
+
+  /// Print.
+  void print(const std::string& str) const {
+    std::cout << str << "\n";
+    switch (lossType) {
+      case GM:
+        std::cout << "lossType: Geman McClure" << "\n";
+        break;
+      case TLS:
+        std::cout << "lossType: Truncated Least-squares" << "\n";
+        break;
+      default:
+        throw std::runtime_error("GncParams::print: unknown loss type.");
+    }
+    std::cout << "maxIterations: " << maxIterations << "\n";
+    std::cout << "muStep: " << muStep << "\n";
+    std::cout << "relativeCostTol: " << relativeCostTol << "\n";
+    std::cout << "weightsTol: " << weightsTol << "\n";
+    std::cout << "verbosity: " << verbosity << "\n";
+    for (size_t i = 0; i < knownInliers.size(); i++)
+      std::cout << "knownInliers: " << knownInliers[i] << "\n";
+    baseOptimizerParams.print(str);
+  }
+};
+
+}
--- gtsam-4.1.0.orig/gtsam/nonlinear/ISAM2Result.h
+++ gtsam-4.1.0/gtsam/nonlinear/ISAM2Result.h
@@ -176,6 +176,8 @@ struct ISAM2Result {
   size_t getVariablesRelinearized() const { return variablesRelinearized; }
   size_t getVariablesReeliminated() const { return variablesReeliminated; }
   size_t getCliques() const { return cliques; }
+  double getErrorBefore() const { return errorBefore ? *errorBefore : std::nan(""); }
+  double getErrorAfter() const { return errorAfter ? *errorAfter : std::nan(""); }
 };
 
 }  // namespace gtsam
--- gtsam-4.1.0.orig/gtsam/nonlinear/LevenbergMarquardtOptimizer.h
+++ gtsam-4.1.0/gtsam/nonlinear/LevenbergMarquardtOptimizer.h
@@ -69,7 +69,7 @@ public:
                               const LevenbergMarquardtParams& params = LevenbergMarquardtParams());
 
   /** Virtual destructor */
-  virtual ~LevenbergMarquardtOptimizer() {
+  ~LevenbergMarquardtOptimizer() override {
   }
 
   /// @}
--- gtsam-4.1.0.orig/gtsam/nonlinear/LevenbergMarquardtParams.cpp
+++ gtsam-4.1.0/gtsam/nonlinear/LevenbergMarquardtParams.cpp
@@ -37,6 +37,8 @@ LevenbergMarquardtParams::VerbosityLM Le
     return LevenbergMarquardtParams::SILENT;
   if (s == "SUMMARY")
     return LevenbergMarquardtParams::SUMMARY;
+  if (s == "TERMINATION")
+    return LevenbergMarquardtParams::TERMINATION;
   if (s == "LAMBDA")
     return LevenbergMarquardtParams::LAMBDA;
   if (s == "TRYLAMBDA")
--- gtsam-4.1.0.orig/gtsam/nonlinear/LevenbergMarquardtParams.h
+++ gtsam-4.1.0/gtsam/nonlinear/LevenbergMarquardtParams.h
@@ -25,6 +25,8 @@
 
 namespace gtsam {
 
+class LevenbergMarquardtOptimizer;
+
 /** Parameters for Levenberg-Marquardt optimization.  Note that this parameters
  * class inherits from NonlinearOptimizerParams, which specifies the parameters
  * common to all nonlinear optimization algorithms.  This class also contains
@@ -40,6 +42,7 @@ public:
 
   static VerbosityLM verbosityLMTranslator(const std::string &s);
   static std::string verbosityLMTranslator(VerbosityLM value);
+  using OptimizerType = LevenbergMarquardtOptimizer;
 
 public:
 
@@ -119,7 +122,7 @@ public:
     return params;
   }
 
-  virtual ~LevenbergMarquardtParams() {}
+  ~LevenbergMarquardtParams() override {}
   void print(const std::string& str = "") const override;
 
   /// @name Getters/Setters, mainly for wrappers. Use fields above in C++.
--- gtsam-4.1.0.orig/gtsam/nonlinear/Marginals.h
+++ gtsam-4.1.0/gtsam/nonlinear/Marginals.h
@@ -48,7 +48,7 @@ protected:
 
 public:
 
-  /// Default constructor only for Cython wrapper
+  /// Default constructor only for wrappers
   Marginals(){}
 
   /** Construct a marginals class from a nonlinear factor graph.
@@ -156,7 +156,7 @@ protected:
   FastMap<Key, size_t> indices_;
 
 public:
-  /// Default constructor only for Cython wrapper
+  /// Default constructor only for wrappers
   JointMarginal() {}
 
   /** Access a block, corresponding to a pair of variables, of the joint
--- gtsam-4.1.0.orig/gtsam/nonlinear/NonlinearConjugateGradientOptimizer.h
+++ gtsam-4.1.0/gtsam/nonlinear/NonlinearConjugateGradientOptimizer.h
@@ -67,7 +67,7 @@ public:
       const Values& initialValues, const Parameters& params = Parameters());
 
   /// Destructor
-  virtual ~NonlinearConjugateGradientOptimizer() {
+  ~NonlinearConjugateGradientOptimizer() override {
   }
 
   /** 
@@ -200,6 +200,10 @@ boost::tuple<V, int> nonlinearConjugateG
     currentValues = system.advance(prevValues, alpha, direction);
     currentError = system.error(currentValues);
 
+    // User hook:
+    if (params.iterationHook)
+      params.iterationHook(iteration, prevError, currentError);
+
     // Maybe show output
     if (params.verbosity >= NonlinearOptimizerParams::ERROR)
       std::cout << "iteration: " << iteration << ", currentError: " << currentError << std::endl;
--- gtsam-4.1.0.orig/gtsam/nonlinear/NonlinearEquality.h
+++ gtsam-4.1.0/gtsam/nonlinear/NonlinearEquality.h
@@ -77,7 +77,7 @@ public:
   NonlinearEquality() {
   }
 
-  virtual ~NonlinearEquality() {
+  ~NonlinearEquality() override {
   }
 
   /// @name Standard Constructors
@@ -238,7 +238,7 @@ public:
               std::abs(mu)), key), value_(value) {
   }
 
-  virtual ~NonlinearEquality1() {
+  ~NonlinearEquality1() override {
   }
 
   /// @return a deep copy of this factor
@@ -313,7 +313,7 @@ public:
   NonlinearEquality2(Key key1, Key key2, double mu = 1000.0) :
       Base(noiseModel::Constrained::All(traits<X>::dimension, std::abs(mu)), key1, key2) {
   }
-  virtual ~NonlinearEquality2() {
+  ~NonlinearEquality2() override {
   }
 
   /// @return a deep copy of this factor
--- gtsam-4.1.0.orig/gtsam/nonlinear/NonlinearFactor.cpp
+++ gtsam-4.1.0/gtsam/nonlinear/NonlinearFactor.cpp
@@ -77,6 +77,14 @@ bool NoiseModelFactor::equals(const Nonl
 }
 
 /* ************************************************************************* */
+NoiseModelFactor::shared_ptr NoiseModelFactor::cloneWithNewNoiseModel(
+    const SharedNoiseModel newNoise) const {
+  NoiseModelFactor::shared_ptr new_factor = boost::dynamic_pointer_cast<NoiseModelFactor>(clone());
+  new_factor->noiseModel_ = newNoise;
+  return new_factor;
+}
+
+/* ************************************************************************* */
 static void check(const SharedNoiseModel& noiseModel, size_t m) {
   if (noiseModel && m != noiseModel->dim())
     throw std::invalid_argument(
--- gtsam-4.1.0.orig/gtsam/nonlinear/NonlinearFactor.h
+++ gtsam-4.1.0/gtsam/nonlinear/NonlinearFactor.h
@@ -169,7 +169,7 @@ public:
   NoiseModelFactor() {}
 
   /** Destructor */
-  virtual ~NoiseModelFactor() {}
+  ~NoiseModelFactor() override {}
 
   /**
    * Constructor
@@ -244,6 +244,12 @@ public:
    */
   boost::shared_ptr<GaussianFactor> linearize(const Values& x) const override;
 
+  /**
+   * Creates a shared_ptr clone of the
+   * factor with a new noise model
+   */
+  shared_ptr cloneWithNewNoiseModel(const SharedNoiseModel newNoise) const;
+
  private:
   /** Serialization function */
   friend class boost::serialization::access;
@@ -287,7 +293,7 @@ public:
   /** Default constructor for I/O only */
   NoiseModelFactor1() {}
 
-  virtual ~NoiseModelFactor1() {}
+  ~NoiseModelFactor1() override {}
 
   inline Key key() const { return keys_[0]; }
 
@@ -381,7 +387,7 @@ public:
   NoiseModelFactor2(const SharedNoiseModel& noiseModel, Key j1, Key j2) :
     Base(noiseModel, cref_list_of<2>(j1)(j2)) {}
 
-  virtual ~NoiseModelFactor2() {}
+  ~NoiseModelFactor2() override {}
 
   /** methods to retrieve both keys */
   inline Key key1() const { return keys_[0];  }
@@ -458,7 +464,7 @@ public:
   NoiseModelFactor3(const SharedNoiseModel& noiseModel, Key j1, Key j2, Key j3) :
     Base(noiseModel, cref_list_of<3>(j1)(j2)(j3)) {}
 
-  virtual ~NoiseModelFactor3() {}
+  ~NoiseModelFactor3() override {}
 
   /** methods to retrieve keys */
   inline Key key1() const { return keys_[0]; }
@@ -537,7 +543,7 @@ public:
   NoiseModelFactor4(const SharedNoiseModel& noiseModel, Key j1, Key j2, Key j3, Key j4) :
     Base(noiseModel, cref_list_of<4>(j1)(j2)(j3)(j4)) {}
 
-  virtual ~NoiseModelFactor4() {}
+  ~NoiseModelFactor4() override {}
 
   /** methods to retrieve keys */
   inline Key key1() const { return keys_[0]; }
@@ -620,7 +626,7 @@ public:
   NoiseModelFactor5(const SharedNoiseModel& noiseModel, Key j1, Key j2, Key j3, Key j4, Key j5) :
     Base(noiseModel, cref_list_of<5>(j1)(j2)(j3)(j4)(j5)) {}
 
-  virtual ~NoiseModelFactor5() {}
+  ~NoiseModelFactor5() override {}
 
   /** methods to retrieve keys */
   inline Key key1() const { return keys_[0]; }
@@ -707,7 +713,7 @@ public:
   NoiseModelFactor6(const SharedNoiseModel& noiseModel, Key j1, Key j2, Key j3, Key j4, Key j5, Key j6) :
     Base(noiseModel, cref_list_of<6>(j1)(j2)(j3)(j4)(j5)(j6)) {}
 
-  virtual ~NoiseModelFactor6() {}
+  ~NoiseModelFactor6() override {}
 
   /** methods to retrieve keys */
   inline Key key1() const { return keys_[0]; }
--- gtsam-4.1.0.orig/gtsam/nonlinear/NonlinearFactorGraph.cpp
+++ gtsam-4.1.0/gtsam/nonlinear/NonlinearFactorGraph.cpp
@@ -34,6 +34,7 @@
 #endif
 
 #include <cmath>
+#include <fstream>
 #include <limits>
 
 using namespace std;
@@ -205,42 +206,49 @@ void NonlinearFactorGraph::saveGraph(std
     // Create factors and variable connections
     for(size_t i = 0; i < size(); ++i) {
       const NonlinearFactor::shared_ptr& factor = at(i);
-      if(formatting.plotFactorPoints) {
+      // If null pointer, move on to the next
+      if (!factor) {
+        continue;
+      }
+
+      if (formatting.plotFactorPoints) {
         const KeyVector& keys = factor->keys();
-        if (formatting.binaryEdges && keys.size()==2) {
-          stm << "  var" << keys[0] << "--" << "var" << keys[1] << ";\n";
+        if (formatting.binaryEdges && keys.size() == 2) {
+          stm << "  var" << keys[0] << "--"
+              << "var" << keys[1] << ";\n";
         } else {
           // Make each factor a dot
           stm << "  factor" << i << "[label=\"\", shape=point";
           {
-            map<size_t, Point2>::const_iterator pos = formatting.factorPositions.find(i);
-            if(pos != formatting.factorPositions.end())
-              stm << ", pos=\"" << formatting.scale*(pos->second.x() - minX) << ","
-                  << formatting.scale*(pos->second.y() - minY) << "!\"";
+            map<size_t, Point2>::const_iterator pos =
+                formatting.factorPositions.find(i);
+            if (pos != formatting.factorPositions.end())
+              stm << ", pos=\"" << formatting.scale * (pos->second.x() - minX)
+                  << "," << formatting.scale * (pos->second.y() - minY)
+                  << "!\"";
           }
           stm << "];\n";
 
           // Make factor-variable connections
-          if(formatting.connectKeysToFactor && factor) {
-            for(Key key: *factor) {
-              stm << "  var" << key << "--" << "factor" << i << ";\n";
+          if (formatting.connectKeysToFactor && factor) {
+            for (Key key : *factor) {
+              stm << "  var" << key << "--"
+                  << "factor" << i << ";\n";
             }
           }
         }
-      }
-      else {
-        if(factor) {
-          Key k;
-          bool firstTime = true;
-          for(Key key: *this->at(i)) {
-            if(firstTime) {
-              k = key;
-              firstTime = false;
-              continue;
-            }
-            stm << "  var" << key << "--" << "var" << k << ";\n";
+      } else {
+        Key k;
+        bool firstTime = true;
+        for (Key key : *this->at(i)) {
+          if (firstTime) {
             k = key;
+            firstTime = false;
+            continue;
           }
+          stm << "  var" << key << "--"
+              << "var" << k << ";\n";
+          k = key;
         }
       }
     }
@@ -250,6 +258,16 @@ void NonlinearFactorGraph::saveGraph(std
 }
 
 /* ************************************************************************* */
+void NonlinearFactorGraph::saveGraph(
+    const std::string& file, const Values& values,
+    const GraphvizFormatting& graphvizFormatting,
+    const KeyFormatter& keyFormatter) const {
+  std::ofstream of(file);
+  saveGraph(of, values, graphvizFormatting, keyFormatter);
+  of.close();
+}
+
+/* ************************************************************************* */
 double NonlinearFactorGraph::error(const Values& values) const {
   gttic(NonlinearFactorGraph_error);
   double total_error = 0.;
@@ -358,7 +376,7 @@ static Scatter scatterFromValues(const V
   scatter.reserve(values.size());
 
   // use "natural" ordering with keys taken from the initial values
-  for (const auto& key_value : values) {
+  for (const auto key_value : values) {
     scatter.add(key_value.key, key_value.value.dim());
   }
 
--- gtsam-4.1.0.orig/gtsam/nonlinear/NonlinearFactorGraph.h
+++ gtsam-4.1.0/gtsam/nonlinear/NonlinearFactorGraph.h
@@ -11,7 +11,7 @@
 
 /**
  * @file    NonlinearFactorGraph.h
- * @brief   Factor Graph Constsiting of non-linear factors
+ * @brief   Factor Graph consisting of non-linear factors
  * @author  Frank Dellaert
  * @author  Carlos Nieto
  * @author  Christian Potthast
@@ -111,11 +111,21 @@ namespace gtsam {
     /** Test equality */
     bool equals(const NonlinearFactorGraph& other, double tol = 1e-9) const;
 
-    /** Write the graph in GraphViz format for visualization */
+    /// Write the graph in GraphViz format for visualization
     void saveGraph(std::ostream& stm, const Values& values = Values(),
       const GraphvizFormatting& graphvizFormatting = GraphvizFormatting(),
       const KeyFormatter& keyFormatter = DefaultKeyFormatter) const;
 
+    /**
+     * Write the graph in GraphViz format to file for visualization.
+     *
+     * This is a wrapper friendly version since wrapped languages don't have
+     * access to C++ streams.
+     */
+    void saveGraph(const std::string& file, const Values& values = Values(),
+      const GraphvizFormatting& graphvizFormatting = GraphvizFormatting(),
+      const KeyFormatter& keyFormatter = DefaultKeyFormatter) const;
+
     /** unnormalized error, \f$ 0.5 \sum_i (h_i(X_i)-z)^2/\sigma^2 \f$ in the most common case */
     double error(const Values& values) const;
 
--- gtsam-4.1.0.orig/gtsam/nonlinear/NonlinearOptimizer.cpp
+++ gtsam-4.1.0/gtsam/nonlinear/NonlinearOptimizer.cpp
@@ -88,20 +88,28 @@ void NonlinearOptimizer::defaultOptimize
   }
 
   // Iterative loop
+  double newError = currentError; // used to avoid repeated calls to error()
   do {
     // Do next iteration
-    currentError = error(); // TODO(frank): don't do this twice at first !? Computed above!
+    currentError = newError;
     iterate();
     tictoc_finishedIteration();
 
+    // Update newError for either printouts or conditional-end checks:
+    newError = error();
+
+    // User hook:
+    if (params.iterationHook)
+      params.iterationHook(iterations(), currentError, newError);
+
     // Maybe show output
     if (params.verbosity >= NonlinearOptimizerParams::VALUES)
       values().print("newValues");
     if (params.verbosity >= NonlinearOptimizerParams::ERROR)
-      cout << "newError: " << error() << endl;
+      cout << "newError: " << newError << endl;
   } while (iterations() < params.maxIterations &&
            !checkConvergence(params.relativeErrorTol, params.absoluteErrorTol, params.errorTol,
-                             currentError, error(), params.verbosity) && std::isfinite(currentError));
+                             currentError, newError, params.verbosity) && std::isfinite(currentError));
 
   // Printing if verbose
   if (params.verbosity >= NonlinearOptimizerParams::TERMINATION) {
--- gtsam-4.1.0.orig/gtsam/nonlinear/NonlinearOptimizer.h
+++ gtsam-4.1.0/gtsam/nonlinear/NonlinearOptimizer.h
@@ -81,7 +81,7 @@ protected:
 
 public:
   /** A shared pointer to this class */
-  typedef boost::shared_ptr<const NonlinearOptimizer> shared_ptr;
+  using shared_ptr = boost::shared_ptr<const NonlinearOptimizer>;
 
   /// @name Standard interface
   /// @{
--- gtsam-4.1.0.orig/gtsam/nonlinear/NonlinearOptimizerParams.h
+++ gtsam-4.1.0/gtsam/nonlinear/NonlinearOptimizerParams.h
@@ -38,21 +38,12 @@ public:
     SILENT, TERMINATION, ERROR, VALUES, DELTA, LINEAR
   };
 
-  size_t maxIterations; ///< The maximum iterations to stop iterating (default 100)
-  double relativeErrorTol; ///< The maximum relative error decrease to stop iterating (default 1e-5)
-  double absoluteErrorTol; ///< The maximum absolute error decrease to stop iterating (default 1e-5)
-  double errorTol; ///< The maximum total error to stop iterating (default 0.0)
-  Verbosity verbosity; ///< The printing verbosity during optimization (default SILENT)
-  Ordering::OrderingType orderingType; ///< The method of ordering use during variable elimination (default COLAMD)
-
-  NonlinearOptimizerParams() :
-      maxIterations(100), relativeErrorTol(1e-5), absoluteErrorTol(1e-5), errorTol(
-          0.0), verbosity(SILENT), orderingType(Ordering::COLAMD),
-          linearSolverType(MULTIFRONTAL_CHOLESKY) {}
-
-  virtual ~NonlinearOptimizerParams() {
-  }
-  virtual void print(const std::string& str = "") const;
+  size_t maxIterations = 100; ///< The maximum iterations to stop iterating (default 100)
+  double relativeErrorTol = 1e-5; ///< The maximum relative error decrease to stop iterating (default 1e-5)
+  double absoluteErrorTol = 1e-5; ///< The maximum absolute error decrease to stop iterating (default 1e-5)
+  double errorTol = 0.0; ///< The maximum total error to stop iterating (default 0.0)
+  Verbosity verbosity = SILENT; ///< The printing verbosity during optimization (default SILENT)
+  Ordering::OrderingType orderingType = Ordering::COLAMD; ///< The method of ordering use during variable elimination (default COLAMD)
 
   size_t getMaxIterations() const { return maxIterations; }
   double getRelativeErrorTol() const { return relativeErrorTol; }
@@ -71,6 +62,37 @@ public:
   static Verbosity verbosityTranslator(const std::string &s) ;
   static std::string verbosityTranslator(Verbosity value) ;
 
+  /** Type for an optional user-provided hook to be called after each
+   * internal optimizer iteration. See iterationHook below. */
+  using IterationHook = std::function<
+    void(size_t /*iteration*/, double/*errorBefore*/, double/*errorAfter*/)>;
+
+  /** Optional user-provided iteration hook to be called after each
+   * optimization iteration (Default: none).
+   * Note that `IterationHook` is defined as a std::function<> with this
+   * signature:
+   * \code
+   *  void(size_t iteration, double errorBefore, double errorAfter)
+   * \endcode
+   * which allows binding by means of a reference to a regular function:
+   * \code
+   *  void foo(size_t iteration, double errorBefore, double errorAfter);
+   *  // ...
+   *  lmOpts.iterationHook = &foo;
+   * \endcode
+   * or to a C++11 lambda (preferred if you need to capture additional
+   * context variables, such that the optimizer object itself, the factor graph,
+   * etc.):
+   * \code
+   *  lmOpts.iterationHook = [&](size_t iter, double oldError, double newError)
+   *  {
+   *    // ...
+   *  };
+   * \endcode
+   * or to the result of a properly-formed `std::bind` call.
+   */
+  IterationHook iterationHook;
+
   /** See NonlinearOptimizerParams::linearSolverType */
   enum LinearSolverType {
     MULTIFRONTAL_CHOLESKY,
@@ -81,10 +103,27 @@ public:
     CHOLMOD, /* Experimental Flag */
   };
 
-  LinearSolverType linearSolverType; ///< The type of linear solver to use in the nonlinear optimizer
+  LinearSolverType linearSolverType = MULTIFRONTAL_CHOLESKY; ///< The type of linear solver to use in the nonlinear optimizer
   boost::optional<Ordering> ordering; ///< The optional variable elimination ordering, or empty to use COLAMD (default: empty)
   IterativeOptimizationParameters::shared_ptr iterativeParams; ///< The container for iterativeOptimization parameters. used in CG Solvers.
 
+  NonlinearOptimizerParams() = default;
+  virtual ~NonlinearOptimizerParams() {
+  }
+
+  virtual void print(const std::string& str = "") const;
+
+  bool equals(const NonlinearOptimizerParams& other, double tol = 1e-9) const {
+    return maxIterations == other.getMaxIterations()
+        && std::abs(relativeErrorTol - other.getRelativeErrorTol()) <= tol
+        && std::abs(absoluteErrorTol - other.getAbsoluteErrorTol()) <= tol
+        && std::abs(errorTol - other.getErrorTol()) <= tol
+        && verbosityTranslator(verbosity) == other.getVerbosity();
+    //  && orderingType.equals(other.getOrderingType()_;
+    // && linearSolverType == other.getLinearSolverType();
+    // TODO: check ordering, iterativeParams, and iterationsHook
+  }
+
   inline bool isMultifrontal() const {
     return (linearSolverType == MULTIFRONTAL_CHOLESKY)
         || (linearSolverType == MULTIFRONTAL_QR);
--- gtsam-4.1.0.orig/gtsam/nonlinear/PriorFactor.h
+++ gtsam-4.1.0/gtsam/nonlinear/PriorFactor.h
@@ -52,7 +52,7 @@ namespace gtsam {
     /** default constructor - only use for serialization */
     PriorFactor() {}
 
-    virtual ~PriorFactor() {}
+    ~PriorFactor() override {}
 
     /** Constructor */
     PriorFactor(Key key, const VALUE& prior, const SharedNoiseModel& model = nullptr) :
--- gtsam-4.1.0.orig/gtsam/nonlinear/Values-inl.h
+++ gtsam-4.1.0/gtsam/nonlinear/Values-inl.h
@@ -217,7 +217,7 @@ namespace gtsam {
   /** Constructor from a Filtered view copies out all values */
   template<class ValueType>
   Values::Values(const Values::Filtered<ValueType>& view) {
-    for(const typename Filtered<ValueType>::KeyValuePair& key_value: view) {
+    for(const auto key_value: view) {
       Key key = key_value.key;
       insert(key, static_cast<const ValueType&>(key_value.value));
     }
@@ -226,7 +226,7 @@ namespace gtsam {
   /* ************************************************************************* */
   template<class ValueType>
   Values::Values(const Values::ConstFiltered<ValueType>& view) {
-    for(const typename ConstFiltered<ValueType>::KeyValuePair& key_value: view) {
+    for(const auto key_value: view) {
       Key key = key_value.key;
       insert(key, static_cast<const ValueType&>(key_value.value));
     }
@@ -338,19 +338,18 @@ namespace gtsam {
    }  // internal
 
    /* ************************************************************************* */
-   template<typename ValueType>
-   ValueType Values::at(Key j) const {
+   template <typename ValueType>
+   const ValueType Values::at(Key j) const {
      // Find the item
      KeyValueMap::const_iterator item = values_.find(j);
 
      // Throw exception if it does not exist
-     if(item == values_.end())
-       throw ValuesKeyDoesNotExist("at", j);
+     if (item == values_.end()) throw ValuesKeyDoesNotExist("at", j);
 
-    // Check the type and throw exception if incorrect
-    // h() split in two lines to avoid internal compiler error (MSVC2017)
-    auto h = internal::handle<ValueType>();
-    return h(j,item->second);
+     // Check the type and throw exception if incorrect
+     // h() split in two lines to avoid internal compiler error (MSVC2017)
+     auto h = internal::handle<ValueType>();
+     return h(j, item->second);
   }
 
   /* ************************************************************************* */
--- gtsam-4.1.0.orig/gtsam/nonlinear/Values.cpp
+++ gtsam-4.1.0/gtsam/nonlinear/Values.cpp
@@ -75,7 +75,7 @@ namespace gtsam {
 
   /* ************************************************************************* */
   void Values::print(const string& str, const KeyFormatter& keyFormatter) const {
-    cout << str << (str == "" ? "" : "\n");
+    cout << str << (str.empty() ? "" : "\n");
     cout << "Values with " << size() << " values:\n";
     for(const_iterator key_value = begin(); key_value != end(); ++key_value) {
       cout << "Value " << keyFormatter(key_value->key) << ": ";
@@ -206,7 +206,7 @@ namespace gtsam {
   /* ************************************************************************* */
   size_t Values::dim() const {
     size_t result = 0;
-    for(const ConstKeyValuePair& key_value: *this) {
+    for(const auto key_value: *this) {
       result += key_value.value.dim();
     }
     return result;
@@ -215,7 +215,7 @@ namespace gtsam {
   /* ************************************************************************* */
   VectorValues Values::zeroVectors() const {
     VectorValues result;
-    for(const ConstKeyValuePair& key_value: *this)
+    for(const auto key_value: *this)
       result.insert(key_value.key, Vector::Zero(key_value.value.dim()));
     return result;
   }
--- gtsam-4.1.0.orig/gtsam/nonlinear/Values.h
+++ gtsam-4.1.0/gtsam/nonlinear/Values.h
@@ -187,8 +187,8 @@ namespace gtsam {
      * Dynamic matrices/vectors can be retrieved as fixed-size, but not vice-versa.
      * @return The stored value
      */
-    template<typename ValueType>
-    ValueType at(Key j) const;
+    template <typename ValueType>
+    const ValueType at(Key j) const;
 
     /// version for double
     double atDouble(size_t key) const { return at<double>(key);}
@@ -442,7 +442,7 @@ namespace gtsam {
     ValuesKeyAlreadyExists(Key key) noexcept :
       key_(key) {}
 
-    virtual ~ValuesKeyAlreadyExists() noexcept {}
+    ~ValuesKeyAlreadyExists() noexcept override {}
 
     /// The duplicate key that was attempted to be added
     Key key() const noexcept { return key_; }
@@ -465,7 +465,7 @@ namespace gtsam {
     ValuesKeyDoesNotExist(const char* operation, Key key) noexcept :
       operation_(operation), key_(key) {}
 
-    virtual ~ValuesKeyDoesNotExist() noexcept {}
+    ~ValuesKeyDoesNotExist() noexcept override {}
 
     /// The key that was attempted to be accessed that does not exist
     Key key() const noexcept { return key_; }
@@ -490,7 +490,7 @@ namespace gtsam {
         const std::type_info& storedTypeId, const std::type_info& requestedTypeId) noexcept :
       key_(key), storedTypeId_(storedTypeId), requestedTypeId_(requestedTypeId) {}
 
-    virtual ~ValuesIncorrectType() noexcept {}
+    ~ValuesIncorrectType() noexcept override {}
 
     /// The key that was attempted to be accessed that does not exist
     Key key() const noexcept { return key_; }
@@ -511,7 +511,7 @@ namespace gtsam {
   public:
     DynamicValuesMismatched() noexcept {}
 
-    virtual ~DynamicValuesMismatched() noexcept {}
+    ~DynamicValuesMismatched() noexcept override {}
 
     const char* what() const noexcept override {
       return "The Values 'this' and the argument passed to Values::localCoordinates have mismatched keys and values";
@@ -533,7 +533,7 @@ namespace gtsam {
         M1_(M1), N1_(N1), M2_(M2), N2_(N2) {
     }
 
-    virtual ~NoMatchFoundForFixed() noexcept {
+    ~NoMatchFoundForFixed() noexcept override {
     }
 
     GTSAM_EXPORT const char* what() const noexcept override;
--- gtsam-4.1.0.orig/gtsam/nonlinear/WhiteNoiseFactor.h
+++ gtsam-4.1.0/gtsam/nonlinear/WhiteNoiseFactor.h
@@ -100,7 +100,7 @@ namespace gtsam {
     /// @{
 
     /// Destructor
-    virtual ~WhiteNoiseFactor() {
+    ~WhiteNoiseFactor() override {
     }
 
     /// @}
--- gtsam-4.1.0.orig/gtsam/nonlinear/internal/ExpressionNode.h
+++ gtsam-4.1.0/gtsam/nonlinear/internal/ExpressionNode.h
@@ -131,7 +131,7 @@ class ConstantExpression: public Express
 public:
 
   /// Destructor
-  virtual ~ConstantExpression() {
+  ~ConstantExpression() override {
   }
 
   /// Print
@@ -172,7 +172,7 @@ class LeafExpression: public ExpressionN
 public:
 
   /// Destructor
-  virtual ~LeafExpression() {
+  ~LeafExpression() override {
   }
 
   /// Print
@@ -244,7 +244,7 @@ class UnaryExpression: public Expression
 public:
 
   /// Destructor
-  virtual ~UnaryExpression() {
+  ~UnaryExpression() override {
   }
 
   /// Print
@@ -353,7 +353,7 @@ class BinaryExpression: public Expressio
 public:
 
   /// Destructor
-  virtual ~BinaryExpression() {
+  ~BinaryExpression() override {
   }
 
   /// Print
@@ -460,7 +460,7 @@ class TernaryExpression: public Expressi
 public:
 
   /// Destructor
-  virtual ~TernaryExpression() {
+  ~TernaryExpression() override {
   }
 
   /// Print
@@ -571,7 +571,7 @@ class ScalarMultiplyNode : public Expres
   }
 
   /// Destructor
-  virtual ~ScalarMultiplyNode() {}
+  ~ScalarMultiplyNode() override {}
 
   /// Print
   void print(const std::string& indent = "") const override {
@@ -659,7 +659,7 @@ class BinarySumNode : public ExpressionN
   }
 
   /// Destructor
-  virtual ~BinarySumNode() {}
+  ~BinarySumNode() override {}
 
   /// Print
   void print(const std::string& indent = "") const override {
--- gtsam-4.1.0.orig/gtsam/nonlinear/internal/LevenbergMarquardtState.h
+++ gtsam-4.1.0/gtsam/nonlinear/internal/LevenbergMarquardtState.h
@@ -126,7 +126,7 @@ struct LevenbergMarquardtState : public
     noiseModelCache.resize(0);
     // for each of the variables, add a prior
     damped.reserve(damped.size() + values.size());
-    for (const auto& key_value : values) {
+    for (const auto key_value : values) {
       const Key key = key_value.key;
       const size_t dim = key_value.value.dim();
       const CachedModel* item = getCachedModel(dim);
--- gtsam-4.1.0.orig/gtsam/nonlinear/tests/testAdaptAutoDiff.cpp
+++ gtsam-4.1.0/gtsam/nonlinear/tests/testAdaptAutoDiff.cpp
@@ -41,7 +41,7 @@ struct Cal3Bundler0 : public Cal3Bundler
                double v0 = 0)
       : Cal3Bundler(f, k1, k2, u0, v0) {}
   Cal3Bundler0 retract(const Vector& d) const {
-    return Cal3Bundler0(fx() + d(0), k1() + d(1), k2() + d(2), u0(), v0());
+    return Cal3Bundler0(fx() + d(0), k1() + d(1), k2() + d(2), px(), py());
   }
   Vector3 localCoordinates(const Cal3Bundler0& T2) const {
     return T2.vector() - vector();
--- gtsam-4.1.0.orig/gtsam/nonlinear/tests/testCallRecord.cpp
+++ gtsam-4.1.0/gtsam/nonlinear/tests/testCallRecord.cpp
@@ -77,7 +77,7 @@ template<> struct traits<CallConfig> : p
 
 struct Record: public internal::CallRecordImplementor<Record, Cols> {
   Record() : cc(0, 0) {}
-  virtual ~Record() {
+  ~Record() override {
   }
   void print(const std::string& indent) const {
   }
--- gtsam-4.1.0.orig/gtsam/nonlinear/tests/testFunctorizedFactor.cpp
+++ gtsam-4.1.0/gtsam/nonlinear/tests/testFunctorizedFactor.cpp
@@ -19,6 +19,7 @@
 
 #include <CppUnitLite/TestHarness.h>
 #include <gtsam/base/Testable.h>
+#include <gtsam/base/TestableAssertions.h>
 #include <gtsam/inference/Symbol.h>
 #include <gtsam/nonlinear/FunctorizedFactor.h>
 #include <gtsam/nonlinear/factorTesting.h>
@@ -26,8 +27,15 @@
 using namespace std;
 using namespace gtsam;
 
+// Key for FunctorizedFactor
 Key key = Symbol('X', 0);
+
+// Keys for FunctorizedFactor2
+Key keyA = Symbol('A', 0);
+Key keyx = Symbol('x', 0);
+
 auto model = noiseModel::Isotropic::Sigma(9, 1);
+auto model2 = noiseModel::Isotropic::Sigma(3, 1);
 
 /// Functor that takes a matrix and multiplies every element by m
 class MultiplyFunctor {
@@ -43,6 +51,21 @@ class MultiplyFunctor {
   }
 };
 
+/// Functor that performs Ax where A is a matrix and x is a vector.
+class ProjectionFunctor {
+ public:
+  Vector operator()(const Matrix &A, const Vector &x,
+                    OptionalJacobian<-1, -1> H1 = boost::none,
+                    OptionalJacobian<-1, -1> H2 = boost::none) const {
+    if (H1) {
+      H1->resize(x.size(), A.size());
+      *H1 << I_3x3, I_3x3, I_3x3;
+    } 
+    if (H2) *H2 = A;
+    return A * x;
+  }
+};
+
 /* ************************************************************************* */
 // Test identity operation for FunctorizedFactor.
 TEST(FunctorizedFactor, Identity) {
@@ -87,7 +110,7 @@ TEST(FunctorizedFactor, Equality) {
   EXPECT(factor1.equals(factor2));
 }
 
-/* *************************************************************************** */
+/* ************************************************************************* */
 // Test Jacobians of FunctorizedFactor.
 TEST(FunctorizedFactor, Jacobians) {
   Matrix X = Matrix::Identity(3, 3);
@@ -115,16 +138,6 @@ TEST(FunctorizedFactor, Print) {
   auto factor =
       MakeFunctorizedFactor<Matrix>(key, X, model, MultiplyFunctor(multiplier));
 
-  // redirect output to buffer so we can compare
-  stringstream buffer;
-  streambuf *old = cout.rdbuf(buffer.rdbuf());
-
-  factor.print();
-
-  // get output string and reset stdout
-  string actual = buffer.str();
-  cout.rdbuf(old);
-
   string expected =
       "  keys = { X0 }\n"
       "  noise model: unit (9) \n"
@@ -135,7 +148,7 @@ TEST(FunctorizedFactor, Print) {
       "]\n"
       "  noise model sigmas: 1 1 1 1 1 1 1 1 1\n";
 
-  CHECK_EQUAL(expected, actual);
+  EXPECT(assert_print_equal(expected, factor));
 }
 
 /* ************************************************************************* */
@@ -178,6 +191,83 @@ TEST(FunctorizedFactor, Lambda) {
 }
 
 /* ************************************************************************* */
+// Test identity operation for FunctorizedFactor2.
+TEST(FunctorizedFactor, Identity2) {
+  // x = Ax since A is I_3x3
+  Matrix A = Matrix::Identity(3, 3);
+  Vector x = Vector::Ones(3);
+
+  auto functor = ProjectionFunctor();
+  auto factor =
+      MakeFunctorizedFactor2<Matrix, Vector>(keyA, keyx, x, model2, functor);
+
+  Vector error = factor.evaluateError(A, x);
+
+  EXPECT(assert_equal(Vector::Zero(3), error, 1e-9));
+}
+
+/* ************************************************************************* */
+// Test Jacobians of FunctorizedFactor2.
+TEST(FunctorizedFactor, Jacobians2) {
+  Matrix A = Matrix::Identity(3, 3);
+  Vector x = Vector::Ones(3);
+  Matrix actualH1, actualH2;
+
+  auto factor = MakeFunctorizedFactor2<Matrix, Vector>(keyA, keyx, x, model2,
+                                                       ProjectionFunctor());
+
+  Values values;
+  values.insert<Matrix>(keyA, A);
+  values.insert<Vector>(keyx, x);
+
+  // Check Jacobians
+  EXPECT_CORRECT_FACTOR_JACOBIANS(factor, values, 1e-7, 1e-5);
+}
+
+/* ************************************************************************* */
+// Test FunctorizedFactor2 using a std::function type.
+TEST(FunctorizedFactor, Functional2) {
+  Matrix A = Matrix::Identity(3, 3);
+  Vector3 x(1, 2, 3);
+  Vector measurement = A * x;
+
+  std::function<Matrix(Matrix, Matrix, boost::optional<Matrix &>,
+                       boost::optional<Matrix &>)>
+      functional = ProjectionFunctor();
+  auto factor = MakeFunctorizedFactor2<Matrix, Vector>(keyA, keyx, measurement,
+                                                       model2, functional);
+
+  Vector error = factor.evaluateError(A, x);
+
+  EXPECT(assert_equal(Vector::Zero(3), error, 1e-9));
+}
+
+/* ************************************************************************* */
+// Test FunctorizedFactor2 with a lambda function.
+TEST(FunctorizedFactor, Lambda2) {
+  Matrix A = Matrix::Identity(3, 3);
+  Vector3 x = Vector3(1, 2, 3);
+  Matrix measurement = A * x;
+
+  auto lambda = [](const Matrix &A, const Vector &x,
+                   OptionalJacobian<-1, -1> H1 = boost::none,
+                   OptionalJacobian<-1, -1> H2 = boost::none) {
+    if (H1) {
+      H1->resize(x.size(), A.size());
+      *H1 << I_3x3, I_3x3, I_3x3;
+    } 
+    if (H2) *H2 = A;
+    return A * x;
+  };
+  // FunctorizedFactor<Matrix> factor(key, measurement, model, lambda);
+  auto factor = MakeFunctorizedFactor2<Matrix, Vector>(keyA, keyx, measurement, model2, lambda);
+
+  Vector error = factor.evaluateError(A, x);
+
+  EXPECT(assert_equal(Vector::Zero(3), error, 1e-9));
+}
+
+/* ************************************************************************* */
 int main() {
   TestResult tr;
   return TestRegistry::runAllTests(tr);
--- gtsam-4.1.0.orig/gtsam/nonlinear/tests/testValues.cpp
+++ gtsam-4.1.0/gtsam/nonlinear/tests/testValues.cpp
@@ -175,10 +175,11 @@ TEST(Values, basic_functions)
 {
   Values values;
   const Values& values_c = values;
-  values.insert(2, Vector3());
-  values.insert(4, Vector3());
-  values.insert(6, Matrix23());
-  values.insert(8, Matrix23());
+  Matrix23 M1 = Matrix23::Zero(), M2 = Matrix23::Zero();
+  values.insert(2, Vector3(0, 0, 0));
+  values.insert(4, Vector3(0, 0, 0));
+  values.insert(6, M1);
+  values.insert(8, M2);
 
   // find
   EXPECT_LONGS_EQUAL(4, values.find(4)->key);
@@ -335,7 +336,7 @@ TEST(Values, filter) {
   int i = 0;
   Values::Filtered<Value> filtered = values.filter(boost::bind(std::greater_equal<Key>(), _1, 2));
   EXPECT_LONGS_EQUAL(2, (long)filtered.size());
-  for(const Values::Filtered<>::KeyValuePair& key_value: filtered) {
+  for(const auto key_value: filtered) {
     if(i == 0) {
       LONGS_EQUAL(2, (long)key_value.key);
       try {key_value.value.cast<Pose2>();} catch (const std::bad_cast& e) { FAIL("can't cast Value to Pose2");}
@@ -370,7 +371,7 @@ TEST(Values, filter) {
   i = 0;
   Values::ConstFiltered<Pose3> pose_filtered = values.filter<Pose3>();
   EXPECT_LONGS_EQUAL(2, (long)pose_filtered.size());
-  for(const Values::ConstFiltered<Pose3>::KeyValuePair& key_value: pose_filtered) {
+  for(const auto key_value: pose_filtered) {
     if(i == 0) {
       EXPECT_LONGS_EQUAL(1, (long)key_value.key);
       EXPECT(assert_equal(pose1, key_value.value));
@@ -408,7 +409,7 @@ TEST(Values, Symbol_filter) {
   values.insert(Symbol('y', 3), pose3);
 
   int i = 0;
-  for(const Values::Filtered<Value>::KeyValuePair& key_value: values.filter(Symbol::ChrTest('y'))) {
+  for(const auto key_value: values.filter(Symbol::ChrTest('y'))) {
     if(i == 0) {
       LONGS_EQUAL(Symbol('y', 1), (long)key_value.key);
       EXPECT(assert_equal(pose1, key_value.value.cast<Pose3>()));
@@ -595,15 +596,7 @@ TEST(Values, Demangle) {
   values.insert(key1, v);
   string expected = "Values with 1 values:\nValue v1: (Eigen::Matrix<double, 1, 3, 1, 1, 3>)\n[\n	5, 6, 7\n]\n\n";
 
-  stringstream buffer;
-  streambuf * old = cout.rdbuf(buffer.rdbuf());
-
-  values.print();
-
-  string actual = buffer.str();
-  cout.rdbuf(old);
-
-  EXPECT(assert_equal(expected, actual));
+  EXPECT(assert_print_equal(expected, values));
 }
 
 /* ************************************************************************* */
--- gtsam-4.1.0.orig/gtsam/sam/BearingRangeFactor.h
+++ gtsam-4.1.0/gtsam/sam/BearingRangeFactor.h
@@ -59,7 +59,7 @@ class BearingRangeFactor
     this->initialize(expression({{key1, key2}}));
   }
 
-  virtual ~BearingRangeFactor() {}
+  ~BearingRangeFactor() override {}
 
   /// @return a deep copy of this factor
   gtsam::NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam/sam/RangeFactor.h
+++ gtsam-4.1.0/gtsam/sam/RangeFactor.h
@@ -118,7 +118,7 @@ class RangeFactorWithTransform : public
     this->initialize(expression({key1, key2}));
   }
 
-  virtual ~RangeFactorWithTransform() {}
+  ~RangeFactorWithTransform() override {}
 
   /// @return a deep copy of this factor
   gtsam::NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam/sfm/BinaryMeasurement.h
+++ gtsam-4.1.0/gtsam/sfm/BinaryMeasurement.h
@@ -45,10 +45,11 @@ private:
   T measured_;                  ///< The measurement
   SharedNoiseModel noiseModel_; ///< Noise model
 
-public:
+ public:
   BinaryMeasurement(Key key1, Key key2, const T &measured,
                     const SharedNoiseModel &model = nullptr)
-      : Factor(std::vector<Key>({key1, key2})), measured_(measured),
+      : Factor(std::vector<Key>({key1, key2})),
+        measured_(measured),
         noiseModel_(model) {}
 
   /// @name Standard Interface
@@ -80,4 +81,4 @@ public:
   }
   /// @}
 };
-} // namespace gtsam
\ No newline at end of file
+} // namespace gtsam
--- /dev/null
+++ gtsam-4.1.0/gtsam/sfm/MFAS.cpp
@@ -0,0 +1,171 @@
+/**
+ *  @file  MFAS.cpp
+ *  @brief Source file for the MFAS class
+ *  @author Akshay Krishnan
+ *  @date July 2020
+ */
+
+#include <gtsam/sfm/MFAS.h>
+
+#include <algorithm>
+#include <map>
+#include <unordered_map>
+#include <vector>
+#include <unordered_set>
+
+using namespace gtsam;
+using std::map;
+using std::pair;
+using std::unordered_map;
+using std::vector;
+using std::unordered_set;
+
+// A node in the graph.
+struct GraphNode {
+  double inWeightSum;               // Sum of absolute weights of incoming edges
+  double outWeightSum;              // Sum of absolute weights of outgoing edges
+  unordered_set<Key> inNeighbors;   // Nodes from which there is an incoming edge
+  unordered_set<Key> outNeighbors;  // Nodes to which there is an outgoing edge
+
+  // Heuristic for the node that is to select nodes in MFAS.
+  double heuristic() const { return (outWeightSum + 1) / (inWeightSum + 1); }
+};
+
+// A graph is a map from key to GraphNode. This function returns the graph from
+// the edgeWeights between keys.
+unordered_map<Key, GraphNode> graphFromEdges(
+    const map<MFAS::KeyPair, double>& edgeWeights) {
+  unordered_map<Key, GraphNode> graph;
+
+  for (const auto& edgeWeight : edgeWeights) {
+    // The weights can be either negative or positive. The direction of the edge
+    // is the direction of positive weight. This means that the edges is from
+    // edge.first -> edge.second if weight is positive and edge.second ->
+    // edge.first if weight is negative.
+    const MFAS::KeyPair& edge = edgeWeight.first;
+    const double& weight = edgeWeight.second;
+
+    Key edgeSource = weight >= 0 ? edge.first : edge.second;
+    Key edgeDest = weight >= 0 ? edge.second : edge.first;
+
+    // Update the in weight and neighbors for the destination.
+    graph[edgeDest].inWeightSum += std::abs(weight);
+    graph[edgeDest].inNeighbors.insert(edgeSource);
+
+    // Update the out weight and neighbors for the source.
+    graph[edgeSource].outWeightSum += std::abs(weight);
+    graph[edgeSource].outNeighbors.insert(edgeDest);
+  }
+  return graph;
+}
+
+// Selects the next node in the ordering from the graph.
+Key selectNextNodeInOrdering(const unordered_map<Key, GraphNode>& graph) {
+  // Find the root nodes in the graph.
+  for (const auto& keyNode : graph) {
+    // It is a root node if the inWeightSum is close to zero.
+    if (keyNode.second.inWeightSum < 1e-8) {
+      // TODO(akshay-krishnan) if there are multiple roots, it is better to
+      // choose the one with highest heuristic. This is missing in the 1dsfm
+      // solution.
+      return keyNode.first;
+    }
+  }
+  // If there are no root nodes, return the node with the highest heuristic.
+  return std::max_element(graph.begin(), graph.end(),
+                          [](const std::pair<Key, GraphNode>& keyNode1,
+                             const std::pair<Key, GraphNode>& keyNode2) {
+                            return keyNode1.second.heuristic() <
+                                   keyNode2.second.heuristic();
+                          })
+      ->first;
+}
+
+// Returns the absolute weight of the edge between node1 and node2.
+double absWeightOfEdge(const Key key1, const Key key2,
+                       const map<MFAS::KeyPair, double>& edgeWeights) {
+  // Check the direction of the edge before returning.
+  return edgeWeights.find(MFAS::KeyPair(key1, key2)) != edgeWeights.end()
+             ? std::abs(edgeWeights.at(MFAS::KeyPair(key1, key2)))
+             : std::abs(edgeWeights.at(MFAS::KeyPair(key2, key1)));
+}
+
+// Removes a node from the graph and updates edge weights of its neighbors.
+void removeNodeFromGraph(const Key node,
+                         const map<MFAS::KeyPair, double> edgeWeights,
+                         unordered_map<Key, GraphNode>& graph) {
+  // Update the outweights and outNeighbors of node's inNeighbors
+  for (const Key neighbor : graph[node].inNeighbors) {
+    // the edge could be either (*it, choice) with a positive weight or
+    // (choice, *it) with a negative weight
+    graph[neighbor].outWeightSum -=
+        absWeightOfEdge(node, neighbor, edgeWeights);
+    graph[neighbor].outNeighbors.erase(node);
+  }
+  // Update the inWeights and inNeighbors of node's outNeighbors
+  for (const Key neighbor : graph[node].outNeighbors) {
+    graph[neighbor].inWeightSum -= absWeightOfEdge(node, neighbor, edgeWeights);
+    graph[neighbor].inNeighbors.erase(node);
+  }
+  // Erase node.
+  graph.erase(node);
+}
+
+MFAS::MFAS(const TranslationEdges& relativeTranslations,
+           const Unit3& projectionDirection) {
+  // Iterate over edges, obtain weights by projecting
+  // their relativeTranslations along the projection direction
+  for (const auto& measurement : relativeTranslations) {
+    edgeWeights_[std::make_pair(measurement.key1(), measurement.key2())] =
+        measurement.measured().dot(projectionDirection);
+  }
+}
+
+KeyVector MFAS::computeOrdering() const {
+  KeyVector ordering;  // Nodes in MFAS order (result).
+
+  // A graph is an unordered map from keys to nodes. Each node contains a list
+  // of its adjacent nodes. Create the graph from the edgeWeights.
+  unordered_map<Key, GraphNode> graph = graphFromEdges(edgeWeights_);
+
+  // In each iteration, one node is removed from the graph and appended to the
+  // ordering.
+  while (!graph.empty()) {
+    Key selection = selectNextNodeInOrdering(graph);
+    removeNodeFromGraph(selection, edgeWeights_, graph);
+    ordering.push_back(selection);
+  }
+  return ordering;
+}
+
+map<MFAS::KeyPair, double> MFAS::computeOutlierWeights() const {
+  // Find the ordering.
+  KeyVector ordering = computeOrdering();
+
+  // Create a map from the node key to its position in the ordering. This makes
+  // it easier to lookup positions of different nodes.
+  unordered_map<Key, int> orderingPositions;
+  for (size_t i = 0; i < ordering.size(); i++) {
+    orderingPositions[ordering[i]] = i;
+  }
+
+  map<KeyPair, double> outlierWeights;
+  // Check if the direction of each edge is consistent with the ordering.
+  for (const auto& edgeWeight : edgeWeights_) {
+    // Find edge source and destination.
+    Key source = edgeWeight.first.first;
+    Key dest = edgeWeight.first.second;
+    if (edgeWeight.second < 0) {
+      std::swap(source, dest);
+    }
+
+    // If the direction is not consistent with the ordering (i.e dest occurs
+    // before src), it is an outlier edge, and has non-zero outlier weight.
+    if (orderingPositions.at(dest) < orderingPositions.at(source)) {
+      outlierWeights[edgeWeight.first] = std::abs(edgeWeight.second);
+    } else {
+      outlierWeights[edgeWeight.first] = 0;
+    }
+  }
+  return outlierWeights;
+}
--- /dev/null
+++ gtsam-4.1.0/gtsam/sfm/MFAS.h
@@ -0,0 +1,101 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010-2020, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+#pragma once
+
+/**
+ *  @file  MFAS.h
+ *  @brief MFAS class to solve Minimum Feedback Arc Set graph problem
+ *  @author Akshay Krishnan
+ *  @date September 2020
+ */
+
+#include <gtsam/geometry/Unit3.h>
+#include <gtsam/inference/Key.h>
+#include <gtsam/sfm/BinaryMeasurement.h>
+
+#include <memory>
+#include <unordered_map>
+#include <vector>
+
+namespace gtsam {
+
+/**
+  The MFAS class to solve a Minimum feedback arc set (MFAS)
+  problem. We implement the solution from:
+  Kyle Wilson and Noah Snavely, "Robust Global Translations with 1DSfM",
+  Proceedings of the European Conference on Computer Vision, ECCV 2014
+
+  Given a weighted directed graph, the objective in a Minimum feedback arc set
+  problem is to obtain a directed acyclic graph by removing
+  edges such that the total weight of removed edges is minimum.
+
+  Although MFAS is a general graph problem and can be applied in many areas,
+  this classed was designed for the purpose of outlier rejection in a
+  translation averaging for SfM setting. For more details, refer to the above
+  paper. The nodes of the graph in this context represents cameras in 3D and the
+  edges between them represent unit translations in the world coordinate frame,
+  i.e w_aZb is the unit translation from a to b expressed in the world
+  coordinate frame. The weights for the edges are obtained by projecting the
+  unit translations in a projection direction.
+  @addtogroup SFM
+*/
+class MFAS {
+ public:
+  // used to represent edges between two nodes in the graph. When used in
+  // translation averaging for global SfM
+  using KeyPair = std::pair<Key, Key>;
+  using TranslationEdges = std::vector<BinaryMeasurement<Unit3>>;
+
+ private:
+  // edges with a direction such that all weights are positive
+  // i.e, edges that originally had negative weights are flipped
+  std::map<KeyPair, double> edgeWeights_;
+
+ public:
+  /**
+   * @brief Construct from the weighted directed edges
+   * between the nodes. Each node is identified by a Key.
+   * @param edgeWeights: weights of edges in the graph
+   */
+  MFAS(const std::map<KeyPair, double> &edgeWeights)
+      : edgeWeights_(edgeWeights) {}
+
+  /**
+   * @brief Constructor to be used in the context of translation averaging.
+   * Here, the nodes of the graph are cameras in 3D and the edges have a unit
+   * translation direction between them. The weights of the edges is computed by
+   * projecting them along a projection direction.
+   * @param relativeTranslations translation directions between the cameras
+   * @param projectionDirection direction in which edges are to be projected
+   */
+  MFAS(const TranslationEdges &relativeTranslations,
+       const Unit3 &projectionDirection);
+
+  /**
+   * @brief Computes the 1D MFAS ordering of nodes in the graph
+   * @return orderedNodes: vector of nodes in the obtained order
+   */
+  KeyVector computeOrdering() const;
+
+  /**
+   * @brief Computes the outlier weights of the graph. We define the outlier
+   * weight of a edge to be zero if the edge is an inlier and the magnitude of
+   * its edgeWeight if it is an outlier. This function internally calls
+   * computeOrdering and uses the obtained ordering to identify outlier edges.
+   * @return outlierWeights: map from an edge to its outlier weight.
+   */
+  std::map<KeyPair, double> computeOutlierWeights() const;
+};
+
+typedef std::map<std::pair<Key, Key>, double> KeyPairDoubleMap;
+
+}  // namespace gtsam
--- gtsam-4.1.0.orig/gtsam/sfm/ShonanAveraging.cpp
+++ gtsam-4.1.0/gtsam/sfm/ShonanAveraging.cpp
@@ -16,26 +16,26 @@
  * @brief  Shonan Averaging algorithm
  */
 
-#include <gtsam/sfm/ShonanAveraging.h>
-
+#include <SymEigsSolver.h>
+#include <cmath>
 #include <gtsam/linear/PCGSolver.h>
 #include <gtsam/linear/SubgraphPreconditioner.h>
 #include <gtsam/nonlinear/LevenbergMarquardtOptimizer.h>
 #include <gtsam/nonlinear/NonlinearEquality.h>
 #include <gtsam/nonlinear/NonlinearFactorGraph.h>
+#include <gtsam/sfm/ShonanAveraging.h>
+#include <gtsam/sfm/ShonanFactor.h>
 #include <gtsam/sfm/ShonanGaugeFactor.h>
 #include <gtsam/slam/FrobeniusFactor.h>
 #include <gtsam/slam/KarcherMeanFactor-inl.h>
-#include <gtsam/sfm/ShonanFactor.h>
 
 #include <Eigen/Eigenvalues>
-#include <SymEigsSolver.h>
-
 #include <algorithm>
 #include <complex>
 #include <iostream>
 #include <map>
 #include <random>
+#include <set>
 #include <vector>
 
 namespace gtsam {
@@ -50,8 +50,13 @@ template <size_t d>
 ShonanAveragingParameters<d>::ShonanAveragingParameters(
     const LevenbergMarquardtParams &_lm, const std::string &method,
     double optimalityThreshold, double alpha, double beta, double gamma)
-    : lm(_lm), optimalityThreshold(optimalityThreshold), alpha(alpha),
-      beta(beta), gamma(gamma) {
+    : lm(_lm),
+      optimalityThreshold(optimalityThreshold),
+      alpha(alpha),
+      beta(beta),
+      gamma(gamma),
+      useHuber(false),
+      certifyOptimality(true) {
   // By default, we will do conjugate gradient
   lm.linearSolverType = LevenbergMarquardtParams::Iterative;
 
@@ -92,29 +97,40 @@ template struct ShonanAveragingParameter
 
 /* ************************************************************************* */
 // Calculate number of unknown rotations referenced by measurements
+// Throws exception of keys are not numbered as expected (may change in future).
 template <size_t d>
-static size_t
-NrUnknowns(const typename ShonanAveraging<d>::Measurements &measurements) {
+static size_t NrUnknowns(
+    const typename ShonanAveraging<d>::Measurements &measurements) {
+  Key maxKey = 0;
   std::set<Key> keys;
   for (const auto &measurement : measurements) {
-    keys.insert(measurement.key1());
-    keys.insert(measurement.key2());
+    for (const Key &key : measurement.keys()) {
+      maxKey = std::max(key, maxKey);
+      keys.insert(key);
+    }
+  }
+  size_t N = keys.size();
+  if (maxKey != N - 1) {
+    throw std::invalid_argument(
+        "As of now, ShonanAveraging expects keys numbered 0..N-1");
   }
-  return keys.size();
+  return N;
 }
 
 /* ************************************************************************* */
 template <size_t d>
 ShonanAveraging<d>::ShonanAveraging(const Measurements &measurements,
                                     const Parameters &parameters)
-    : parameters_(parameters), measurements_(measurements),
+    : parameters_(parameters),
+      measurements_(measurements),
       nrUnknowns_(NrUnknowns<d>(measurements)) {
   for (const auto &measurement : measurements_) {
     const auto &model = measurement.noiseModel();
     if (model && model->dim() != SO<d>::dimension) {
       measurement.print("Factor with incorrect noise model:\n");
-      throw std::invalid_argument("ShonanAveraging: measurements passed to "
-                                  "constructor have incorrect dimension.");
+      throw std::invalid_argument(
+          "ShonanAveraging: measurements passed to "
+          "constructor have incorrect dimension.");
     }
   }
   Q_ = buildQ();
@@ -127,25 +143,23 @@ template <size_t d>
 NonlinearFactorGraph ShonanAveraging<d>::buildGraphAt(size_t p) const {
   NonlinearFactorGraph graph;
   auto G = boost::make_shared<Matrix>(SO<-1>::VectorizedGenerators(p));
+
   for (const auto &measurement : measurements_) {
     const auto &keys = measurement.keys();
     const auto &Rij = measurement.measured();
     const auto &model = measurement.noiseModel();
     graph.emplace_shared<ShonanFactor<d>>(keys[0], keys[1], Rij, p, model, G);
   }
-
   // Possibly add Karcher prior
   if (parameters_.beta > 0) {
     const size_t dim = SOn::Dimension(p);
     graph.emplace_shared<KarcherMeanFactor<SOn>>(graph.keys(), dim);
   }
-
   // Possibly add gauge factors - they are probably useless as gradient is zero
   if (parameters_.gamma > 0 && p > d + 1) {
     for (auto key : graph.keys())
       graph.emplace_shared<ShonanGaugeFactor>(key, p, d, parameters_.gamma);
   }
-
   return graph;
 }
 
@@ -173,7 +187,6 @@ ShonanAveraging<d>::createOptimizerAt(si
     graph.emplace_shared<PriorFactor<SOn>>(i, SOn::Lift(p, value.matrix()),
                                            model);
   }
-
   // Optimize
   return boost::make_shared<LevenbergMarquardtOptimizer>(graph, initial,
                                                          parameters_.lm);
@@ -196,7 +209,7 @@ Matrix ShonanAveraging<d>::StiefelElemen
   Matrix S(p, N * d);
   for (const auto it : values.filter<SOn>()) {
     S.middleCols<d>(it.key * d) =
-        it.value.matrix().leftCols<d>(); // project Qj to Stiefel
+        it.value.matrix().leftCols<d>();  // project Qj to Stiefel
   }
   return S;
 }
@@ -227,7 +240,8 @@ Values ShonanAveraging<3>::projectFrom(s
 }
 
 /* ************************************************************************* */
-template <size_t d> static Matrix RoundSolutionS(const Matrix &S) {
+template <size_t d>
+static Matrix RoundSolutionS(const Matrix &S) {
   const size_t N = S.cols() / d;
   // First, compute a thin SVD of S
   Eigen::JacobiSVD<Matrix> svd(S, Eigen::ComputeThinV);
@@ -246,8 +260,7 @@ template <size_t d> static Matrix RoundS
   for (size_t i = 0; i < N; ++i) {
     // Compute the determinant of the ith dxd block of R
     double determinant = R.middleCols<d>(d * i).determinant();
-    if (determinant > 0)
-      ++numPositiveBlocks;
+    if (determinant > 0) ++numPositiveBlocks;
   }
 
   if (numPositiveBlocks < N / 2) {
@@ -263,7 +276,8 @@ template <size_t d> static Matrix RoundS
 }
 
 /* ************************************************************************* */
-template <> Values ShonanAveraging<2>::roundSolutionS(const Matrix &S) const {
+template <>
+Values ShonanAveraging<2>::roundSolutionS(const Matrix &S) const {
   // Round to a 2*2N matrix
   Matrix R = RoundSolutionS<2>(S);
 
@@ -276,7 +290,8 @@ template <> Values ShonanAveraging<2>::r
   return values;
 }
 
-template <> Values ShonanAveraging<3>::roundSolutionS(const Matrix &S) const {
+template <>
+Values ShonanAveraging<3>::roundSolutionS(const Matrix &S) const {
   // Round to a 3*3N matrix
   Matrix R = RoundSolutionS<3>(S);
 
@@ -319,20 +334,39 @@ double ShonanAveraging<d>::cost(const Va
 
 /* ************************************************************************* */
 // Get kappa from noise model
-template <typename T>
-static double Kappa(const BinaryMeasurement<T> &measurement) {
+template <typename T, size_t d>
+static double Kappa(const BinaryMeasurement<T> &measurement,
+                    const ShonanAveragingParameters<d> &parameters) {
   const auto &isotropic = boost::dynamic_pointer_cast<noiseModel::Isotropic>(
       measurement.noiseModel());
-  if (!isotropic) {
-    throw std::invalid_argument(
-        "Shonan averaging noise models must be isotropic.");
+  double sigma;
+  if (isotropic) {
+    sigma = isotropic->sigma();
+  } else {
+    const auto &robust = boost::dynamic_pointer_cast<noiseModel::Robust>(
+        measurement.noiseModel());
+    // Check if noise model is robust
+    if (robust) {
+      // If robust, check if optimality certificate is expected
+      if (parameters.getCertifyOptimality()) {
+        throw std::invalid_argument(
+            "Certification of optimality does not work with robust cost.");
+      } else {
+        // Optimality certificate not required, so setting default sigma
+        sigma = 1;
+      }
+    } else {
+      throw std::invalid_argument(
+          "Shonan averaging noise models must be isotropic (but robust losses "
+          "are allowed).");
+    }
   }
-  const double sigma = isotropic->sigma();
   return 1.0 / (sigma * sigma);
 }
 
 /* ************************************************************************* */
-template <size_t d> Sparse ShonanAveraging<d>::buildD() const {
+template <size_t d>
+Sparse ShonanAveraging<d>::buildD() const {
   // Each measurement contributes 2*d elements along the diagonal of the
   // degree matrix.
   static constexpr size_t stride = 2 * d;
@@ -346,7 +380,7 @@ template <size_t d> Sparse ShonanAveragi
     const auto &keys = measurement.keys();
 
     // Get kappa from noise model
-    double kappa = Kappa<Rot>(measurement);
+    double kappa = Kappa<Rot, d>(measurement, parameters_);
 
     const size_t di = d * keys[0], dj = d * keys[1];
     for (size_t k = 0; k < d; k++) {
@@ -366,7 +400,8 @@ template <size_t d> Sparse ShonanAveragi
 }
 
 /* ************************************************************************* */
-template <size_t d> Sparse ShonanAveraging<d>::buildQ() const {
+template <size_t d>
+Sparse ShonanAveraging<d>::buildQ() const {
   // Each measurement contributes 2*d^2 elements on a pair of symmetric
   // off-diagonal blocks
   static constexpr size_t stride = 2 * d * d;
@@ -383,7 +418,7 @@ template <size_t d> Sparse ShonanAveragi
     const auto Rij = measurement.measured().matrix();
 
     // Get kappa from noise model
-    double kappa = Kappa<Rot>(measurement);
+    double kappa = Kappa<Rot, d>(measurement, parameters_);
 
     const size_t di = d * keys[0], dj = d * keys[1];
     for (size_t r = 0; r < d; r++) {
@@ -454,7 +489,87 @@ Sparse ShonanAveraging<d>::computeA(cons
 }
 
 /* ************************************************************************* */
+template <size_t d>
+Sparse ShonanAveraging<d>::computeA(const Matrix &S) const {
+  auto Lambda = computeLambda(S);
+  return Lambda - Q_;
+}
+
+/* ************************************************************************* */
+// Perturb the initial initialVector by adding a spherically-uniformly
+// distributed random vector with 0.03*||initialVector||_2 magnitude to
+// initialVector
+// ref : Part III. C, Rosen, D. and Carlone, L., 2017, September. Computational
+// enhancements for certifiably correct SLAM. In Proceedings of the
+// International Conference on Intelligent Robots and Systems.
+static Vector perturb(const Vector &initialVector) {
+  // generate a 0.03*||x_0||_2 as stated in David's paper
+  int n = initialVector.rows();
+  Vector disturb = Vector::Random(n);
+  disturb.normalize();
+
+  double magnitude = initialVector.norm();
+  Vector perturbedVector = initialVector + 0.03 * magnitude * disturb;
+  perturbedVector.normalize();
+  return perturbedVector;
+}
+
+/* ************************************************************************* */
 /// MINIMUM EIGENVALUE COMPUTATIONS
+// Alg.6 from paper Distributed Certifiably Correct Pose-Graph Optimization,
+// it takes in the certificate matrix A as input, the maxIterations and the
+// minEigenvalueNonnegativityTolerance is set to 1000 and 10e-4 ad default,
+// there are two parts
+// in this algorithm:
+// (1) compute the maximum eigenpair (\lamda_dom, \vect{v}_dom) of A by power
+// method. if \lamda_dom is less than zero, then return the eigenpair. (2)
+// compute the maximum eigenpair (\theta, \vect{v}) of C = \lamda_dom * I - A by
+// accelerated power method. Then return (\lamda_dom - \theta, \vect{v}).
+static bool PowerMinimumEigenValue(
+    const Sparse &A, const Matrix &S, double &minEigenValue,
+    Vector *minEigenVector = 0, size_t *numIterations = 0,
+    size_t maxIterations = 1000,
+    double minEigenvalueNonnegativityTolerance = 10e-4) {
+
+  // a. Compute dominant eigenpair of S using power method
+  PowerMethod<Sparse> pmOperator(A);
+
+  const bool pmConverged = pmOperator.compute(
+      maxIterations, 1e-5);
+
+  // Check convergence and bail out if necessary
+  if (!pmConverged) return false;
+
+  const double pmEigenValue = pmOperator.eigenvalue();
+
+  if (pmEigenValue < 0) {
+    // The largest-magnitude eigenvalue is negative, and therefore also the
+    // minimum eigenvalue, so just return this solution
+    minEigenValue = pmEigenValue;
+    if (minEigenVector) {
+      *minEigenVector = pmOperator.eigenvector();
+      minEigenVector->normalize();  // Ensure that this is a unit vector
+    }
+    return true;
+  }
+
+  const Sparse C = pmEigenValue * Matrix::Identity(A.rows(), A.cols()).sparseView() - A;
+  const boost::optional<Vector> initial = perturb(S.row(0));
+  AcceleratedPowerMethod<Sparse> apmShiftedOperator(C, initial);
+
+  const bool minConverged = apmShiftedOperator.compute(
+      maxIterations, minEigenvalueNonnegativityTolerance / pmEigenValue);
+
+  if (!minConverged) return false;
+
+  minEigenValue = pmEigenValue - apmShiftedOperator.eigenvalue();
+  if (minEigenVector) {
+    *minEigenVector = apmShiftedOperator.eigenvector();
+    minEigenVector->normalize();  // Ensure that this is a unit vector
+  }
+  if (numIterations) *numIterations = apmShiftedOperator.nrIterations();
+  return true;
+}
 
 /** This is a lightweight struct used in conjunction with Spectra to compute
  * the minimum eigenvalue and eigenvector of a sparse matrix A; it has a single
@@ -513,12 +628,12 @@ struct MatrixProdFunctor {
 //   - We've been using 10^-4 for the nonnegativity tolerance
 //   - for numLanczosVectors, 20 is a good default value
 
-static bool
-SparseMinimumEigenValue(const Sparse &A, const Matrix &S, double *minEigenValue,
-                        Vector *minEigenVector = 0, size_t *numIterations = 0,
-                        size_t maxIterations = 1000,
-                        double minEigenvalueNonnegativityTolerance = 10e-4,
-                        Eigen::Index numLanczosVectors = 20) {
+static bool SparseMinimumEigenValue(
+    const Sparse &A, const Matrix &S, double *minEigenValue,
+    Vector *minEigenVector = 0, size_t *numIterations = 0,
+    size_t maxIterations = 1000,
+    double minEigenvalueNonnegativityTolerance = 10e-4,
+    Eigen::Index numLanczosVectors = 20) {
   // a. Estimate the largest-magnitude eigenvalue of this matrix using Lanczos
   MatrixProdFunctor lmOperator(A);
   Spectra::SymEigsSolver<double, Spectra::SELECT_EIGENVALUE::LARGEST_MAGN,
@@ -530,8 +645,7 @@ SparseMinimumEigenValue(const Sparse &A,
       maxIterations, 1e-4, Spectra::SELECT_EIGENVALUE::LARGEST_MAGN);
 
   // Check convergence and bail out if necessary
-  if (lmConverged != 1)
-    return false;
+  if (lmConverged != 1) return false;
 
   const double lmEigenValue = lmEigenValueSolver.eigenvalues()(0);
 
@@ -541,7 +655,7 @@ SparseMinimumEigenValue(const Sparse &A,
     *minEigenValue = lmEigenValue;
     if (minEigenVector) {
       *minEigenVector = lmEigenValueSolver.eigenvectors(1).col(0);
-      minEigenVector->normalize(); // Ensure that this is a unit vector
+      minEigenVector->normalize();  // Ensure that this is a unit vector
     }
     return true;
   }
@@ -578,7 +692,7 @@ SparseMinimumEigenValue(const Sparse &A,
   Vector perturbation(v0.size());
   perturbation.setRandom();
   perturbation.normalize();
-  Vector xinit = v0 + (.03 * v0.norm()) * perturbation; // Perturb v0 by ~3%
+  Vector xinit = v0 + (.03 * v0.norm()) * perturbation;  // Perturb v0 by ~3%
 
   // Use this to initialize the eigensolver
   minEigenValueSolver.init(xinit.data());
@@ -590,26 +704,18 @@ SparseMinimumEigenValue(const Sparse &A,
       maxIterations, minEigenvalueNonnegativityTolerance / lmEigenValue,
       Spectra::SELECT_EIGENVALUE::LARGEST_MAGN);
 
-  if (minConverged != 1)
-    return false;
+  if (minConverged != 1) return false;
 
   *minEigenValue = minEigenValueSolver.eigenvalues()(0) + 2 * lmEigenValue;
   if (minEigenVector) {
     *minEigenVector = minEigenValueSolver.eigenvectors(1).col(0);
-    minEigenVector->normalize(); // Ensure that this is a unit vector
+    minEigenVector->normalize();  // Ensure that this is a unit vector
   }
-  if (numIterations)
-    *numIterations = minEigenValueSolver.num_iterations();
+  if (numIterations) *numIterations = minEigenValueSolver.num_iterations();
   return true;
 }
 
 /* ************************************************************************* */
-template <size_t d> Sparse ShonanAveraging<d>::computeA(const Matrix &S) const {
-  auto Lambda = computeLambda(S);
-  return Lambda - Q_;
-}
-
-/* ************************************************************************* */
 template <size_t d>
 double ShonanAveraging<d>::computeMinEigenValue(const Values &values,
                                                 Vector *minEigenVector) const {
@@ -628,8 +734,25 @@ double ShonanAveraging<d>::computeMinEig
 
 /* ************************************************************************* */
 template <size_t d>
-std::pair<double, Vector>
-ShonanAveraging<d>::computeMinEigenVector(const Values &values) const {
+double ShonanAveraging<d>::computeMinEigenValueAP(const Values &values,
+                                                Vector *minEigenVector) const {
+  assert(values.size() == nrUnknowns());
+  const Matrix S = StiefelElementMatrix(values);
+  auto A = computeA(S);
+
+  double minEigenValue = 0;
+  bool success = PowerMinimumEigenValue(A, S, minEigenValue, minEigenVector);
+  if (!success) {
+    throw std::runtime_error(
+        "PowerMinimumEigenValue failed to compute minimum eigenvalue.");
+  }
+  return minEigenValue;
+}
+
+/* ************************************************************************* */
+template <size_t d>
+std::pair<double, Vector> ShonanAveraging<d>::computeMinEigenVector(
+    const Values &values) const {
   Vector minEigenVector;
   double minEigenValue = computeMinEigenValue(values, &minEigenVector);
   return std::make_pair(minEigenValue, minEigenVector);
@@ -643,20 +766,25 @@ bool ShonanAveraging<d>::checkOptimality
 }
 
 /* ************************************************************************* */
-/// Create a tangent direction xi with eigenvector segment v_i
 template <size_t d>
-Vector ShonanAveraging<d>::MakeATangentVector(size_t p, const Vector &v,
-                                              size_t i) {
+VectorValues ShonanAveraging<d>::TangentVectorValues(size_t p,
+                                                     const Vector &v) {
+  VectorValues delta;
   // Create a tangent direction xi with eigenvector segment v_i
   const size_t dimension = SOn::Dimension(p);
-  const auto v_i = v.segment<d>(d * i);
-  Vector xi = Vector::Zero(dimension);
-  double sign = pow(-1.0, round((p + 1) / 2) + 1);
-  for (size_t j = 0; j < d; j++) {
-    xi(j + p - d - 1) = sign * v_i(d - j - 1);
-    sign = -sign;
+  double sign0 = pow(-1.0, round((p + 1) / 2) + 1);
+  for (size_t i = 0; i < v.size() / d; i++) {
+    // Assumes key is 0-based integer
+    const auto v_i = v.segment<d>(d * i);
+    Vector xi = Vector::Zero(dimension);
+    double sign = sign0;
+    for (size_t j = 0; j < d; j++) {
+      xi(j + p - d - 1) = sign * v_i(d - j - 1);
+      sign = -sign;
+    }
+    delta.insert(i, xi);
   }
-  return xi;
+  return delta;
 }
 
 /* ************************************************************************* */
@@ -690,14 +818,8 @@ template <size_t d>
 Values ShonanAveraging<d>::LiftwithDescent(size_t p, const Values &values,
                                            const Vector &minEigenVector) {
   Values lifted = LiftTo<SOn>(p, values);
-  for (auto it : lifted.filter<SOn>()) {
-    // Create a tangent direction xi with eigenvector segment v_i
-    // Assumes key is 0-based integer
-    const Vector xi = MakeATangentVector(p, minEigenVector, it.key);
-    // Move the old value in the descent direction
-    it.value = it.value.retract(xi);
-  }
-  return lifted;
+  VectorValues delta = TangentVectorValues(p, minEigenVector);
+  return lifted.retract(delta);
 }
 
 /* ************************************************************************* */
@@ -750,7 +872,8 @@ Values ShonanAveraging<d>::initializeRan
 }
 
 /* ************************************************************************* */
-template <size_t d> Values ShonanAveraging<d>::initializeRandomly() const {
+template <size_t d>
+Values ShonanAveraging<d>::initializeRandomly() const {
   return initializeRandomly(kRandomNumberGenerator);
 }
 
@@ -759,7 +882,7 @@ template <size_t d>
 Values ShonanAveraging<d>::initializeRandomlyAt(size_t p,
                                                 std::mt19937 &rng) const {
   const Values randomRotations = initializeRandomly(rng);
-  return LiftTo<Rot3>(p, randomRotations); // lift to p!
+  return LiftTo<Rot3>(p, randomRotations);  // lift to p!
 }
 
 /* ************************************************************************* */
@@ -778,21 +901,30 @@ std::pair<Values, double> ShonanAveragin
   for (size_t p = pMin; p <= pMax; p++) {
     // Optimize until convergence at this level
     Qstar = tryOptimizingAt(p, initialSOp);
-
-    // Check certificate of global optimzality
-    Vector minEigenVector;
-    double minEigenValue = computeMinEigenValue(Qstar, &minEigenVector);
-    if (minEigenValue > parameters_.optimalityThreshold) {
-      // If at global optimum, round and return solution
+    if (parameters_.getUseHuber() || !parameters_.getCertifyOptimality()) {
+      // in this case, there is no optimality certification
+      if (pMin != pMax) {
+        throw std::runtime_error(
+            "When using robust norm, Shonan only tests a single rank. Set pMin = pMax");
+      }
       const Values SO3Values = roundSolution(Qstar);
-      return std::make_pair(SO3Values, minEigenValue);
-    }
+      return std::make_pair(SO3Values, 0);
+    } else {
+      // Check certificate of global optimality
+      Vector minEigenVector;
+      double minEigenValue = computeMinEigenValue(Qstar, &minEigenVector);
+      if (minEigenValue > parameters_.optimalityThreshold) {
+        // If at global optimum, round and return solution
+        const Values SO3Values = roundSolution(Qstar);
+        return std::make_pair(SO3Values, minEigenValue);
+      }
 
-    // Not at global optimimum yet, so check whether we will go to next level
-    if (p != pMax) {
-      // Calculate initial estimate for next level by following minEigenVector
-      initialSOp =
-          initializeWithDescent(p + 1, Qstar, minEigenVector, minEigenValue);
+      // Not at global optimimum yet, so check whether we will go to next level
+      if (p != pMax) {
+        // Calculate initial estimate for next level by following minEigenVector
+        initialSOp =
+            initializeWithDescent(p + 1, Qstar, minEigenVector, minEigenValue);
+      }
     }
   }
   throw std::runtime_error("Shonan::run did not converge for given pMax");
@@ -804,9 +936,13 @@ template class ShonanAveraging<2>;
 
 ShonanAveraging2::ShonanAveraging2(const Measurements &measurements,
                                    const Parameters &parameters)
-    : ShonanAveraging<2>(measurements, parameters) {}
+    : ShonanAveraging<2>(maybeRobust(measurements, parameters.getUseHuber()),
+                         parameters) {}
+
 ShonanAveraging2::ShonanAveraging2(string g2oFile, const Parameters &parameters)
-    : ShonanAveraging<2>(parseMeasurements<Rot2>(g2oFile), parameters) {}
+    : ShonanAveraging<2>(maybeRobust(parseMeasurements<Rot2>(g2oFile),
+                                     parameters.getUseHuber()),
+                         parameters) {}
 
 /* ************************************************************************* */
 // Explicit instantiation for d=3
@@ -814,17 +950,20 @@ template class ShonanAveraging<3>;
 
 ShonanAveraging3::ShonanAveraging3(const Measurements &measurements,
                                    const Parameters &parameters)
-    : ShonanAveraging<3>(measurements, parameters) {}
+    : ShonanAveraging<3>(maybeRobust(measurements, parameters.getUseHuber()),
+                         parameters) {}
 
 ShonanAveraging3::ShonanAveraging3(string g2oFile, const Parameters &parameters)
-    : ShonanAveraging<3>(parseMeasurements<Rot3>(g2oFile), parameters) {}
+    : ShonanAveraging<3>(maybeRobust(parseMeasurements<Rot3>(g2oFile),
+                                     parameters.getUseHuber()),
+                         parameters) {}
 
 // TODO(frank): Deprecate after we land pybind wrapper
 
 // Extract Rot3 measurement from Pose3 betweenfactors
 // Modeled after similar function in dataset.cpp
-static BinaryMeasurement<Rot3>
-convert(const BetweenFactor<Pose3>::shared_ptr &f) {
+static BinaryMeasurement<Rot3> convert(
+    const BetweenFactor<Pose3>::shared_ptr &f) {
   auto gaussian =
       boost::dynamic_pointer_cast<noiseModel::Gaussian>(f->noiseModel());
   if (!gaussian)
@@ -832,23 +971,24 @@ convert(const BetweenFactor<Pose3>::shar
         "parseMeasurements<Rot3> can only convert Pose3 measurements "
         "with Gaussian noise models.");
   const Matrix6 M = gaussian->covariance();
-  return BinaryMeasurement<Rot3>(
-      f->key1(), f->key2(), f->measured().rotation(),
-      noiseModel::Gaussian::Covariance(M.block<3, 3>(3, 3), true));
+  auto model = noiseModel::Gaussian::Covariance(M.block<3, 3>(3, 3));
+  return BinaryMeasurement<Rot3>(f->key1(), f->key2(), f->measured().rotation(),
+                                 model);
 }
 
-static ShonanAveraging3::Measurements
-extractRot3Measurements(const BetweenFactorPose3s &factors) {
+static ShonanAveraging3::Measurements extractRot3Measurements(
+    const BetweenFactorPose3s &factors) {
   ShonanAveraging3::Measurements result;
   result.reserve(factors.size());
-  for (auto f : factors)
-    result.push_back(convert(f));
+  for (auto f : factors) result.push_back(convert(f));
   return result;
 }
 
 ShonanAveraging3::ShonanAveraging3(const BetweenFactorPose3s &factors,
                                    const Parameters &parameters)
-    : ShonanAveraging<3>(extractRot3Measurements(factors), parameters) {}
+    : ShonanAveraging<3>(maybeRobust(extractRot3Measurements(factors),
+                                     parameters.getUseHuber()),
+                         parameters) {}
 
 /* ************************************************************************* */
-} // namespace gtsam
+}  // namespace gtsam
--- gtsam-4.1.0.orig/gtsam/sfm/ShonanAveraging.h
+++ gtsam-4.1.0/gtsam/sfm/ShonanAveraging.h
@@ -20,36 +20,45 @@
 
 #include <gtsam/base/Matrix.h>
 #include <gtsam/base/Vector.h>
+#include <gtsam/dllexport.h>
 #include <gtsam/geometry/Rot2.h>
 #include <gtsam/geometry/Rot3.h>
+#include <gtsam/linear/VectorValues.h>
 #include <gtsam/nonlinear/LevenbergMarquardtParams.h>
 #include <gtsam/sfm/BinaryMeasurement.h>
+#include <gtsam/linear/PowerMethod.h>
+#include <gtsam/linear/AcceleratedPowerMethod.h>
 #include <gtsam/slam/dataset.h>
-#include <gtsam/dllexport.h>
 
 #include <Eigen/Sparse>
 #include <map>
 #include <string>
 #include <type_traits>
 #include <utility>
+#include <vector>
 
 namespace gtsam {
 class NonlinearFactorGraph;
 class LevenbergMarquardtOptimizer;
 
 /// Parameters governing optimization etc.
-template <size_t d> struct GTSAM_EXPORT ShonanAveragingParameters {
+template <size_t d>
+struct GTSAM_EXPORT ShonanAveragingParameters {
   // Select Rot2 or Rot3 interface based template parameter d
   using Rot = typename std::conditional<d == 2, Rot2, Rot3>::type;
   using Anchor = std::pair<size_t, Rot>;
 
-  // Paremeters themselves:
-  LevenbergMarquardtParams lm; // LM parameters
-  double optimalityThreshold;  // threshold used in checkOptimality
-  Anchor anchor;               // pose to use as anchor if not Karcher
-  double alpha;                // weight of anchor-based prior (default 0)
-  double beta;                 // weight of Karcher-based prior (default 1)
-  double gamma;                // weight of gauge-fixing factors (default 0)
+  // Parameters themselves:
+  LevenbergMarquardtParams lm;  ///< LM parameters
+  double optimalityThreshold;   ///< threshold used in checkOptimality
+  Anchor anchor;                ///< pose to use as anchor if not Karcher
+  double alpha;                 ///< weight of anchor-based prior (default 0)
+  double beta;                  ///< weight of Karcher-based prior (default 1)
+  double gamma;                 ///< weight of gauge-fixing factors (default 0)
+  /// if enabled, the Huber loss is used (default false)
+  bool useHuber;
+  /// if enabled solution optimality is certified (default true)
+  bool certifyOptimality;
 
   ShonanAveragingParameters(const LevenbergMarquardtParams &lm =
                                 LevenbergMarquardtParams::CeresDefaults(),
@@ -64,15 +73,32 @@ template <size_t d> struct GTSAM_EXPORT
   double getOptimalityThreshold() const { return optimalityThreshold; }
 
   void setAnchor(size_t index, const Rot &value) { anchor = {index, value}; }
+  std::pair<size_t, Rot> getAnchor() const { return anchor; }
 
   void setAnchorWeight(double value) { alpha = value; }
-  double getAnchorWeight() { return alpha; }
+  double getAnchorWeight() const { return alpha; }
 
   void setKarcherWeight(double value) { beta = value; }
-  double getKarcherWeight() { return beta; }
+  double getKarcherWeight() const { return beta; }
 
   void setGaugesWeight(double value) { gamma = value; }
-  double getGaugesWeight() { return gamma; }
+  double getGaugesWeight() const { return gamma; }
+
+  void setUseHuber(bool value) { useHuber = value; }
+  bool getUseHuber() const { return useHuber; }
+
+  void setCertifyOptimality(bool value) { certifyOptimality = value; }
+  bool getCertifyOptimality() const { return certifyOptimality; }
+
+  /// Print the parameters and flags used for rotation averaging.
+  void print(const std::string &s = "") const {
+    std::cout << (s.empty() ? s : s + " ");
+    std::cout << " ShonanAveragingParameters: " << std::endl;
+    std::cout << " alpha: " << alpha << std::endl;
+    std::cout << " beta: " << beta << std::endl;
+    std::cout << " gamma: " << gamma << std::endl;
+    std::cout << " useHuber: " << useHuber << std::endl;
+  }
 };
 
 using ShonanAveragingParameters2 = ShonanAveragingParameters<2>;
@@ -93,8 +119,9 @@ using ShonanAveragingParameters3 = Shona
  *    European Computer Vision Conference, 2020.
  * You can view our ECCV spotlight video at https://youtu.be/5ppaqMyHtE0
  */
-template <size_t d> class GTSAM_EXPORT ShonanAveraging {
-public:
+template <size_t d>
+class GTSAM_EXPORT ShonanAveraging {
+ public:
   using Sparse = Eigen::SparseMatrix<double>;
 
   // Define the Parameters type and use its typedef of the rotation type:
@@ -102,16 +129,15 @@ public:
   using Rot = typename Parameters::Rot;
 
   // We store SO(d) BetweenFactors to get noise model
-  // TODO(frank): use BinaryMeasurement?
   using Measurements = std::vector<BinaryMeasurement<Rot>>;
 
-private:
+ private:
   Parameters parameters_;
   Measurements measurements_;
   size_t nrUnknowns_;
-  Sparse D_; // Sparse (diagonal) degree matrix
-  Sparse Q_; // Sparse measurement matrix, == \tilde{R} in Eriksson18cvpr
-  Sparse L_; // connection Laplacian L = D - Q, needed for optimality check
+  Sparse D_;  // Sparse (diagonal) degree matrix
+  Sparse Q_;  // Sparse measurement matrix, == \tilde{R} in Eriksson18cvpr
+  Sparse L_;  // connection Laplacian L = D - Q, needed for optimality check
 
   /**
    * Build 3Nx3N sparse matrix consisting of rotation measurements, arranged as
@@ -122,7 +148,7 @@ private:
   /// Build 3Nx3N sparse degree matrix D
   Sparse buildD() const;
 
-public:
+ public:
   /// @name Standard Constructors
   /// @{
 
@@ -146,6 +172,36 @@ public:
     return measurements_[k];
   }
 
+  /**
+   * Update factors to use robust Huber loss.
+   *
+   * @param measurements Vector of BinaryMeasurements.
+   * @param k Huber noise model threshold.
+   */
+  Measurements makeNoiseModelRobust(const Measurements &measurements,
+                                    double k = 1.345) const {
+    Measurements robustMeasurements;
+    for (auto &measurement : measurements) {
+      auto model = measurement.noiseModel();
+      const auto &robust =
+          boost::dynamic_pointer_cast<noiseModel::Robust>(model);
+
+      SharedNoiseModel robust_model;
+      // Check if the noise model is already robust
+      if (robust) {
+        robust_model = model;
+      } else {
+        // make robust
+        robust_model = noiseModel::Robust::Create(
+            noiseModel::mEstimator::Huber::Create(k), model);
+      }
+      BinaryMeasurement<Rot> meas(measurement.key1(), measurement.key2(),
+                                  measurement.measured(), robust_model);
+      robustMeasurements.push_back(meas);
+    }
+    return robustMeasurements;
+  }
+
   /// k^th measurement, as a Rot.
   const Rot &measured(size_t k) const { return measurements_[k].measured(); }
 
@@ -156,12 +212,12 @@ public:
   /// @name Matrix API (advanced use, debugging)
   /// @{
 
-  Sparse D() const { return D_; }              ///< Sparse version of D
-  Matrix denseD() const { return Matrix(D_); } ///< Dense version of D
-  Sparse Q() const { return Q_; }              ///< Sparse version of Q
-  Matrix denseQ() const { return Matrix(Q_); } ///< Dense version of Q
-  Sparse L() const { return L_; }              ///< Sparse version of L
-  Matrix denseL() const { return Matrix(L_); } ///< Dense version of L
+  Sparse D() const { return D_; }               ///< Sparse version of D
+  Matrix denseD() const { return Matrix(D_); }  ///< Dense version of D
+  Sparse Q() const { return Q_; }               ///< Sparse version of Q
+  Matrix denseQ() const { return Matrix(Q_); }  ///< Dense version of Q
+  Sparse L() const { return L_; }               ///< Sparse version of L
+  Matrix denseL() const { return Matrix(L_); }  ///< Dense version of L
 
   /// Version that takes pxdN Stiefel manifold elements
   Sparse computeLambda(const Matrix &S) const;
@@ -197,11 +253,18 @@ public:
   double computeMinEigenValue(const Values &values,
                               Vector *minEigenVector = nullptr) const;
 
+  /**
+   * Compute minimum eigenvalue with accelerated power method.
+   * @param values: should be of type SOn
+   */
+  double computeMinEigenValueAP(const Values &values,
+                                Vector *minEigenVector = nullptr) const;
+
   /// Project pxdN Stiefel manifold matrix S to Rot3^N
   Values roundSolutionS(const Matrix &S) const;
 
-  /// Create a tangent direction xi with eigenvector segment v_i
-  static Vector MakeATangentVector(size_t p, const Vector &v, size_t i);
+  /// Create a VectorValues with eigenvector v_i
+  static VectorValues TangentVectorValues(size_t p, const Vector &v);
 
   /// Calculate the riemannian gradient of F(values) at values
   Matrix riemannianGradient(size_t p, const Values &values) const;
@@ -220,11 +283,10 @@ public:
    * @param minEigenVector corresponding to minEigenValue at level p-1
    * @return values of type SO(p)
    */
-  Values
-  initializeWithDescent(size_t p, const Values &values,
-                        const Vector &minEigenVector, double minEigenValue,
-                        double gradienTolerance = 1e-2,
-                        double preconditionedGradNormTolerance = 1e-4) const;
+  Values initializeWithDescent(
+      size_t p, const Values &values, const Vector &minEigenVector,
+      double minEigenValue, double gradienTolerance = 1e-2,
+      double preconditionedGradNormTolerance = 1e-4) const;
   /// @}
   /// @name Advanced API
   /// @{
@@ -237,11 +299,11 @@ public:
 
   /**
    * Create initial Values of type SO(p)
-   * @param p the dimensionality of the rotation manifold 
+   * @param p the dimensionality of the rotation manifold
    */
   Values initializeRandomlyAt(size_t p, std::mt19937 &rng) const;
 
-  /// Version of initializeRandomlyAt with fixed random seed. 
+  /// Version of initializeRandomlyAt with fixed random seed.
   Values initializeRandomlyAt(size_t p) const;
 
   /**
@@ -300,7 +362,8 @@ public:
   Values roundSolution(const Values &values) const;
 
   /// Lift Values of type T to SO(p)
-  template <class T> static Values LiftTo(size_t p, const Values &values) {
+  template <class T>
+  static Values LiftTo(size_t p, const Values &values) {
     Values result;
     for (const auto it : values.filter<T>()) {
       result.insert(it.key, SOn::Lift(p, it.value.matrix()));
@@ -327,7 +390,7 @@ public:
    */
   Values initializeRandomly(std::mt19937 &rng) const;
 
-  /// Random initialization for wrapper, fixed random seed. 
+  /// Random initialization for wrapper, fixed random seed.
   Values initializeRandomly() const;
 
   /**
@@ -340,26 +403,44 @@ public:
   std::pair<Values, double> run(const Values &initialEstimate, size_t pMin = d,
                                 size_t pMax = 10) const;
   /// @}
+
+  /**
+   * Helper function to convert measurements to robust noise model
+   * if flag is set.
+   *
+   * @tparam T the type of measurement, e.g. Rot3.
+   * @param measurements vector of BinaryMeasurements of type T.
+   * @param useRobustModel flag indicating whether use robust noise model
+   * instead.
+   */
+  template <typename T>
+  inline std::vector<BinaryMeasurement<T>> maybeRobust(
+      const std::vector<BinaryMeasurement<T>> &measurements,
+      bool useRobustModel = false) const {
+    return useRobustModel ? makeNoiseModelRobust(measurements) : measurements;
+  }
 };
 
 // Subclasses for d=2 and d=3 that explicitly instantiate, as well as provide a
 // convenience interface with file access.
 
-class ShonanAveraging2 : public ShonanAveraging<2> {
-public:
+class GTSAM_EXPORT ShonanAveraging2 : public ShonanAveraging<2> {
+ public:
   ShonanAveraging2(const Measurements &measurements,
                    const Parameters &parameters = Parameters());
-  ShonanAveraging2(string g2oFile, const Parameters &parameters = Parameters());
+  explicit ShonanAveraging2(std::string g2oFile,
+                            const Parameters &parameters = Parameters());
 };
 
-class ShonanAveraging3 : public ShonanAveraging<3> {
-public:
+class GTSAM_EXPORT ShonanAveraging3 : public ShonanAveraging<3> {
+ public:
   ShonanAveraging3(const Measurements &measurements,
                    const Parameters &parameters = Parameters());
-  ShonanAveraging3(string g2oFile, const Parameters &parameters = Parameters());
+  explicit ShonanAveraging3(std::string g2oFile,
+                            const Parameters &parameters = Parameters());
 
   // TODO(frank): Deprecate after we land pybind wrapper
   ShonanAveraging3(const BetweenFactorPose3s &factors,
                    const Parameters &parameters = Parameters());
 };
-} // namespace gtsam
+}  // namespace gtsam
--- gtsam-4.1.0.orig/gtsam/sfm/ShonanGaugeFactor.h
+++ gtsam-4.1.0/gtsam/sfm/ShonanGaugeFactor.h
@@ -90,7 +90,7 @@ public:
   }
 
   /// Destructor
-  virtual ~ShonanGaugeFactor() {}
+  ~ShonanGaugeFactor() override {}
 
   /// Calculate the error of the factor: always zero
   double error(const Values &c) const override { return 0; }
--- gtsam-4.1.0.orig/gtsam/sfm/TranslationRecovery.cpp
+++ gtsam-4.1.0/gtsam/sfm/TranslationRecovery.cpp
@@ -11,13 +11,12 @@
 
 /**
  * @file TranslationRecovery.cpp
- * @author Frank Dellaert
+ * @author Frank Dellaert, Akshay Krishnan
  * @date March 2020
  * @brief Source code for recovering translations when rotations are given
  */
 
-#include <gtsam/sfm/TranslationRecovery.h>
-
+#include <gtsam/base/DSFMap.h>
 #include <gtsam/geometry/Point3.h>
 #include <gtsam/geometry/Pose3.h>
 #include <gtsam/geometry/Unit3.h>
@@ -27,11 +26,45 @@
 #include <gtsam/nonlinear/NonlinearFactorGraph.h>
 #include <gtsam/nonlinear/Values.h>
 #include <gtsam/sfm/TranslationFactor.h>
+#include <gtsam/sfm/TranslationRecovery.h>
 #include <gtsam/slam/PriorFactor.h>
 
+#include <set>
+#include <utility>
+
 using namespace gtsam;
 using namespace std;
 
+TranslationRecovery::TranslationRecovery(
+    const TranslationRecovery::TranslationEdges &relativeTranslations,
+    const LevenbergMarquardtParams &lmParams)
+    : params_(lmParams) {
+  // Some relative translations may be zero. We treat nodes that have a zero
+  // relativeTranslation as a single node.
+
+  // A DSFMap is used to find sets of nodes that have a zero relative
+  // translation. Add the nodes in each edge to the DSFMap, and merge nodes that
+  // are connected by a zero relative translation.
+  DSFMap<Key> sameTranslationDSF;
+  for (const auto &edge : relativeTranslations) {
+    Key key1 = sameTranslationDSF.find(edge.key1());
+    Key key2 = sameTranslationDSF.find(edge.key2());
+    if (key1 != key2 && edge.measured().equals(Unit3(0.0, 0.0, 0.0))) {
+      sameTranslationDSF.merge(key1, key2);
+    }
+  }
+  // Use only those edges for which two keys have a distinct root in the DSFMap.
+  for (const auto &edge : relativeTranslations) {
+    Key key1 = sameTranslationDSF.find(edge.key1());
+    Key key2 = sameTranslationDSF.find(edge.key2());
+    if (key1 == key2) continue;
+    relativeTranslations_.emplace_back(key1, key2, edge.measured(),
+                                       edge.noiseModel());
+  }
+  // Store the DSF map for post-processing results.
+  sameTranslationNodes_ = sameTranslationDSF.sets();
+}
+
 NonlinearFactorGraph TranslationRecovery::buildGraph() const {
   NonlinearFactorGraph graph;
 
@@ -44,14 +77,15 @@ NonlinearFactorGraph TranslationRecovery
   return graph;
 }
 
-void TranslationRecovery::addPrior(const double scale,
-                                   NonlinearFactorGraph *graph) const {
-  //TODO(akshay-krishnan): make this an input argument                                     
-  auto priorNoiseModel = noiseModel::Isotropic::Sigma(3, 0.01);
+void TranslationRecovery::addPrior(
+    const double scale, NonlinearFactorGraph *graph,
+    const SharedNoiseModel &priorNoiseModel) const {
   auto edge = relativeTranslations_.begin();
-  graph->emplace_shared<PriorFactor<Point3> >(edge->key1(), Point3(0, 0, 0), priorNoiseModel);
-  graph->emplace_shared<PriorFactor<Point3> >(edge->key2(), scale * edge->measured().point3(),
-                                              edge->noiseModel());
+  if (edge == relativeTranslations_.end()) return;
+  graph->emplace_shared<PriorFactor<Point3> >(edge->key1(), Point3(0, 0, 0),
+                                              priorNoiseModel);
+  graph->emplace_shared<PriorFactor<Point3> >(
+      edge->key2(), scale * edge->measured().point3(), edge->noiseModel());
 }
 
 Values TranslationRecovery::initalizeRandomly() const {
@@ -69,6 +103,15 @@ Values TranslationRecovery::initalizeRan
     insert(edge.key1());
     insert(edge.key2());
   }
+
+  // If there are no valid edges, but zero-distance edges exist, initialize one
+  // of the nodes in a connected component of zero-distance edges.
+  if (initial.empty() && !sameTranslationNodes_.empty()) {
+    for (const auto &optimizedAndDuplicateKeys : sameTranslationNodes_) {
+      Key optimizedKey = optimizedAndDuplicateKeys.first;
+      initial.insert<Point3>(optimizedKey, Point3(0, 0, 0));
+    }
+  }
   return initial;
 }
 
@@ -78,6 +121,19 @@ Values TranslationRecovery::run(const do
   const Values initial = initalizeRandomly();
   LevenbergMarquardtOptimizer lm(graph, initial, params_);
   Values result = lm.optimize();
+
+  // Nodes that were not optimized are stored in sameTranslationNodes_ as a map
+  // from a key that was optimized to keys that were not optimized. Iterate over
+  // map and add results for keys not optimized.
+  for (const auto &optimizedAndDuplicateKeys : sameTranslationNodes_) {
+    Key optimizedKey = optimizedAndDuplicateKeys.first;
+    std::set<Key> duplicateKeys = optimizedAndDuplicateKeys.second;
+    // Add the result for the duplicate key if it does not already exist.
+    for (const Key duplicateKey : duplicateKeys) {
+      if (result.exists(duplicateKey)) continue;
+      result.insert<Point3>(duplicateKey, result.at<Point3>(optimizedKey));
+    }
+  }
   return result;
 }
 
--- gtsam-4.1.0.orig/gtsam/sfm/TranslationRecovery.h
+++ gtsam-4.1.0/gtsam/sfm/TranslationRecovery.h
@@ -16,14 +16,16 @@
  * @brief Recovering translations in an epipolar graph when rotations are given.
  */
 
+#include <map>
+#include <set>
+#include <utility>
+#include <vector>
+
 #include <gtsam/geometry/Unit3.h>
 #include <gtsam/nonlinear/LevenbergMarquardtOptimizer.h>
 #include <gtsam/nonlinear/Values.h>
 #include <gtsam/sfm/BinaryMeasurement.h>
 
-#include <utility>
-#include <vector>
-
 namespace gtsam {
 
 // Set up an optimization problem for the unknown translations Ti in the world
@@ -52,25 +54,30 @@ class TranslationRecovery {
   using TranslationEdges = std::vector<BinaryMeasurement<Unit3>>;
 
  private:
+  // Translation directions between camera pairs.
   TranslationEdges relativeTranslations_;
+
+  // Parameters used by the LM Optimizer.
   LevenbergMarquardtParams params_;
 
+  // Map from a key in the graph to a set of keys that share the same
+  // translation.
+  std::map<Key, std::set<Key>> sameTranslationNodes_;
+
  public:
   /**
    * @brief Construct a new Translation Recovery object
    *
    * @param relativeTranslations the relative translations, in world coordinate
-   * frames, vector of BinaryMeasurements of Unit3, where each key of a measurement 
-   * is a point in 3D. 
+   * frames, vector of BinaryMeasurements of Unit3, where each key of a
+   * measurement is a point in 3D.
    * @param lmParams (optional) gtsam::LavenbergMarquardtParams that can be
    * used to modify the parameters for the LM optimizer. By default, uses the
-   * default LM parameters. 
+   * default LM parameters.
    */
-  TranslationRecovery(const TranslationEdges &relativeTranslations,
-                      const LevenbergMarquardtParams &lmParams = LevenbergMarquardtParams())
-      : relativeTranslations_(relativeTranslations), params_(lmParams) {
-    params_.setVerbosityLM("Summary");
-  }
+  TranslationRecovery(
+      const TranslationEdges &relativeTranslations,
+      const LevenbergMarquardtParams &lmParams = LevenbergMarquardtParams());
 
   /**
    * @brief Build the factor graph to do the optimization.
@@ -84,8 +91,11 @@ class TranslationRecovery {
    *
    * @param scale scale for first relative translation which fixes gauge.
    * @param graph factor graph to which prior is added.
+   * @param priorNoiseModel the noise model to use with the prior.
    */
-  void addPrior(const double scale, NonlinearFactorGraph *graph) const;
+  void addPrior(const double scale, NonlinearFactorGraph *graph,
+                const SharedNoiseModel &priorNoiseModel =
+                    noiseModel::Isotropic::Sigma(3, 0.01)) const;
 
   /**
    * @brief Create random initial translations.
@@ -107,8 +117,8 @@ class TranslationRecovery {
    *
    * @param poses SE(3) ground truth poses stored as Values
    * @param edges pairs (a,b) for which a measurement w_aZb will be generated.
-   * @return TranslationEdges vector of binary measurements where the keys are 
-   * the cameras and the measurement is the simulated Unit3 translation 
+   * @return TranslationEdges vector of binary measurements where the keys are
+   * the cameras and the measurement is the simulated Unit3 translation
    * direction between the cameras.
    */
   static TranslationEdges SimulateMeasurements(
--- gtsam-4.1.0.orig/gtsam/sfm/tests/testBinaryMeasurement.cpp
+++ gtsam-4.1.0/gtsam/sfm/tests/testBinaryMeasurement.cpp
@@ -36,6 +36,7 @@ static SharedNoiseModel rot3_model(noise
 const Unit3 unit3Measured(Vector3(1, 1, 1));
 const Rot3 rot3Measured;
 
+/* ************************************************************************* */
 TEST(BinaryMeasurement, Unit3) {
   BinaryMeasurement<Unit3> unit3Measurement(kKey1, kKey2, unit3Measured,
                                             unit3_model);
@@ -48,6 +49,7 @@ TEST(BinaryMeasurement, Unit3) {
   EXPECT(unit3Measurement.equals(unit3MeasurementCopy));
 }
 
+/* ************************************************************************* */
 TEST(BinaryMeasurement, Rot3) {
   // testing the accessors
   BinaryMeasurement<Rot3> rot3Measurement(kKey1, kKey2, rot3Measured,
@@ -63,6 +65,21 @@ TEST(BinaryMeasurement, Rot3) {
 }
 
 /* ************************************************************************* */
+TEST(BinaryMeasurement, Rot3MakeRobust) {
+  auto huber_model = noiseModel::Robust::Create(
+      noiseModel::mEstimator::Huber::Create(1.345), rot3_model);
+  BinaryMeasurement<Rot3> rot3Measurement(kKey1, kKey2, rot3Measured,
+                                          huber_model);
+
+  EXPECT_LONGS_EQUAL(rot3Measurement.key1(), kKey1);
+  EXPECT_LONGS_EQUAL(rot3Measurement.key2(), kKey2);
+  EXPECT(rot3Measurement.measured().equals(rot3Measured));
+  const auto &robust = boost::dynamic_pointer_cast<noiseModel::Robust>(
+      rot3Measurement.noiseModel());
+  EXPECT(robust);
+}
+
+/* ************************************************************************* */
 int main() {
   TestResult tr;
   return TestRegistry::runAllTests(tr);
--- /dev/null
+++ gtsam-4.1.0/gtsam/sfm/tests/testMFAS.cpp
@@ -0,0 +1,104 @@
+/**
+ *  @file  testMFAS.cpp
+ *  @brief Unit tests for the MFAS class
+ *  @author Akshay Krishnan
+ *  @date July 2020
+ */
+
+#include <gtsam/sfm/MFAS.h>
+
+#include <CppUnitLite/TestHarness.h>
+
+using namespace std;
+using namespace gtsam;
+
+/**
+ * We (partially) use the example from the paper on 1dsfm
+ * (https://research.cs.cornell.edu/1dsfm/docs/1DSfM_ECCV14.pdf, Fig 1, Page 5)
+ * for the unit tests here. The only change is that we leave out node 4 and use
+ * only nodes 0-3. This makes the test easier to understand and also
+ * avoids an ambiguity in the ground truth ordering that arises due to
+ * insufficient edges in the geaph when using the 4th node.
+ */
+
+// edges in the graph - last edge from node 3 to 0 is an outlier
+vector<MFAS::KeyPair> edges = {make_pair(3, 2), make_pair(0, 1), make_pair(3, 1),
+                         make_pair(1, 2), make_pair(0, 2), make_pair(3, 0)};
+// nodes in the graph
+KeyVector nodes = {Key(0), Key(1), Key(2), Key(3)};
+// weights from projecting in direction-1 (bad direction, outlier accepted)
+vector<double> weights1 = {2, 1.5, 0.5, 0.25, 1, 0.75};
+// weights from projecting in direction-2 (good direction, outlier rejected)
+vector<double> weights2 = {0.5, 0.75, -0.25, 0.75, 1, 0.5};
+
+// helper function to obtain map from keypairs to weights from the 
+// vector representations
+map<MFAS::KeyPair, double> getEdgeWeights(const vector<MFAS::KeyPair> &edges,
+                                         const vector<double> &weights) {
+  map<MFAS::KeyPair, double> edgeWeights;
+  for (size_t i = 0; i < edges.size(); i++) {
+    edgeWeights[edges[i]] = weights[i];
+  }
+  return edgeWeights;
+}
+
+// test the ordering and the outlierWeights function using weights2 - outlier
+// edge is rejected when projected in a direction that gives weights2
+TEST(MFAS, OrderingWeights2) {
+  MFAS mfas_obj(getEdgeWeights(edges, weights2));
+
+  KeyVector ordered_nodes = mfas_obj.computeOrdering();
+
+  // ground truth (expected) ordering in this example
+  KeyVector gt_ordered_nodes = {0, 1, 3, 2};
+
+  // check if the expected ordering is obtained
+  for (size_t i = 0; i < ordered_nodes.size(); i++) {
+    EXPECT_LONGS_EQUAL(gt_ordered_nodes[i], ordered_nodes[i]);
+  }
+
+  map<MFAS::KeyPair, double> outlier_weights = mfas_obj.computeOutlierWeights();
+
+  // since edge between 3 and 0 is inconsistent with the ordering, it must have
+  // positive outlier weight, other outlier weights must be zero
+  for (auto &edge : edges) {
+    if (edge == make_pair(Key(3), Key(0)) ||
+        edge == make_pair(Key(0), Key(3))) {
+      EXPECT_DOUBLES_EQUAL(outlier_weights[edge], 0.5, 1e-6);
+    } else {
+      EXPECT_DOUBLES_EQUAL(outlier_weights[edge], 0, 1e-6);
+    }
+  }
+}
+
+// test the ordering function and the outlierWeights method using
+// weights1 (outlier edge is accepted when projected in a direction that
+// produces weights1)
+TEST(MFAS, OrderingWeights1) {
+  MFAS mfas_obj(getEdgeWeights(edges, weights1));
+
+  KeyVector ordered_nodes = mfas_obj.computeOrdering();
+
+  // "ground truth" expected ordering in this example
+  KeyVector gt_ordered_nodes = {3, 0, 1, 2};
+
+  // check if the expected ordering is obtained
+  for (size_t i = 0; i < ordered_nodes.size(); i++) {
+    EXPECT_LONGS_EQUAL(gt_ordered_nodes[i], ordered_nodes[i]);
+  }
+
+  map<MFAS::KeyPair, double> outlier_weights = mfas_obj.computeOutlierWeights();
+
+  // since edge between 3 and 0 is inconsistent with the ordering, it must have
+  // positive outlier weight, other outlier weights must be zero
+  for (auto &edge : edges) {
+    EXPECT_DOUBLES_EQUAL(outlier_weights[edge], 0, 1e-6);
+  }
+}
+
+/* ************************************************************************* */
+int main() {
+  TestResult tr;
+  return TestRegistry::runAllTests(tr);
+}
+/* ************************************************************************* */
--- gtsam-4.1.0.orig/gtsam/sfm/tests/testShonanAveraging.cpp
+++ gtsam-4.1.0/gtsam/sfm/tests/testShonanAveraging.cpp
@@ -17,6 +17,7 @@
  */
 
 #include <CppUnitLite/TestHarness.h>
+#include <gtsam/base/TestableAssertions.h>
 #include <gtsam/sfm/ShonanAveraging.h>
 #include <gtsam/slam/BetweenFactor.h>
 #include <gtsam/slam/FrobeniusFactor.h>
@@ -92,6 +93,27 @@ TEST(ShonanAveraging3, checkOptimality)
 }
 
 /* ************************************************************************* */
+TEST(ShonanAveraging3, checkSubgraph) {
+  // Create parameter with solver set to SUBGRAPH
+  auto params = ShonanAveragingParameters3(
+      gtsam::LevenbergMarquardtParams::CeresDefaults(), "SUBGRAPH");
+  ShonanAveraging3::Measurements measurements;
+
+  // The toyExample.g2o has 5 vertices, from 0-4
+  // The edges are: 1-2, 2-3, 3-4, 3-1, 1-4, 0-1,
+  // which can build a connected graph
+  auto subgraphShonan = fromExampleName("toyExample.g2o", params);
+
+  // Create initial random estimation
+  Values initial;
+  initial = subgraphShonan.initializeRandomly(kRandomNumberGenerator);
+
+  // Run Shonan with SUBGRAPH solver
+  auto result = subgraphShonan.run(initial, 3, 3);
+  EXPECT_DOUBLES_EQUAL(1e-11, subgraphShonan.cost(result.first), 1e-4);
+}
+
+/* ************************************************************************* */
 TEST(ShonanAveraging3, tryOptimizingAt3) {
   const Values randomRotations = kShonan.initializeRandomly(kRandomNumberGenerator);
   Values initial = ShonanAveraging3::LiftTo<Rot3>(3, randomRotations);  // convert to SOn
@@ -121,18 +143,17 @@ TEST(ShonanAveraging3, tryOptimizingAt4)
 }
 
 /* ************************************************************************* */
-TEST(ShonanAveraging3, MakeATangentVector) {
+TEST(ShonanAveraging3, TangentVectorValues) {
   Vector9 v;
   v << 1, 2, 3, 4, 5, 6, 7, 8, 9;
-  Matrix expected(5, 5);
-  expected << 0, 0, 0, 0, -4, //
-      0, 0, 0, 0, -5,         //
-      0, 0, 0, 0, -6,         //
-      0, 0, 0, 0, 0,          //
-      4, 5, 6, 0, 0;
-  const Vector xi_1 = ShonanAveraging3::MakeATangentVector(5, v, 1);
-  const auto actual = SOn::Hat(xi_1);
-  CHECK(assert_equal(expected, actual));
+  Vector expected0(10), expected1(10), expected2(10);
+  expected0 << 0, 3, -2, 1, 0, 0, 0, 0, 0, 0;
+  expected1 << 0, 6, -5, 4, 0, 0, 0, 0, 0, 0;
+  expected2 << 0, 9, -8, 7, 0, 0, 0, 0, 0, 0;
+  const VectorValues xi = ShonanAveraging3::TangentVectorValues(5, v);
+  EXPECT(assert_equal(expected0, xi[0]));
+  EXPECT(assert_equal(expected1, xi[1]));
+  EXPECT(assert_equal(expected2, xi[2]));
 }
 
 /* ************************************************************************* */
@@ -167,8 +188,14 @@ TEST(ShonanAveraging3, CheckWithEigen) {
   for (int i = 1; i < lambdas.size(); i++)
       minEigenValue = min(lambdas(i), minEigenValue);
 
+  // Compute Eigenvalue with Accelerated Power method
+  double lambdaAP = kShonan.computeMinEigenValueAP(Qstar3);
+
   // Actual check
-  EXPECT_DOUBLES_EQUAL(minEigenValue, lambda, 1e-12);
+  EXPECT_DOUBLES_EQUAL(0, lambda, 1e-11);
+  EXPECT_DOUBLES_EQUAL(0, minEigenValue, 1e-11);
+  EXPECT_DOUBLES_EQUAL(0, lambdaAP, 1e-11);
+
 
   // Construct test descent direction (as minEigenVector is not predictable
   // across platforms, being one from a basically flat 3d- subspace)
@@ -320,6 +347,42 @@ TEST(ShonanAveraging2, noisyToyGraph) {
   EXPECT_DOUBLES_EQUAL(0.0008211, shonan.cost(result.first), 1e-6);
   EXPECT_DOUBLES_EQUAL(0, result.second, 1e-10); // certificate!
 }
+
+/* ************************************************************************* */
+TEST(ShonanAveraging2, noisyToyGraphWithHuber) {
+  // Load 2D toy example
+  auto lmParams = LevenbergMarquardtParams::CeresDefaults();
+  string g2oFile = findExampleDataFile("noisyToyGraph.txt");
+  ShonanAveraging2::Parameters parameters(lmParams);
+  auto measurements = parseMeasurements<Rot2>(g2oFile);
+  parameters.setUseHuber(true);
+  parameters.setCertifyOptimality(false);
+
+  string parameters_print =
+      " ShonanAveragingParameters: \n alpha: 0\n beta: 1\n gamma: 0\n "
+      "useHuber: 1\n";
+  assert_print_equal(parameters_print, parameters);
+
+  ShonanAveraging2 shonan(measurements, parameters);
+  EXPECT_LONGS_EQUAL(4, shonan.nrUnknowns());
+
+  // Check graph building
+  NonlinearFactorGraph graph = shonan.buildGraphAt(2);
+  EXPECT_LONGS_EQUAL(6, graph.size());
+
+  // test that each factor is actually robust
+  for (size_t i=0; i<=4; i++) { // note: last is the Gauge factor and is not robust
+	  const auto &robust = boost::dynamic_pointer_cast<noiseModel::Robust>(
+			  boost::dynamic_pointer_cast<NoiseModelFactor>(graph[i])->noiseModel());
+	  EXPECT(robust); // we expect the factors to be use a robust noise model (in particular, Huber)
+  }
+
+  // test result
+  auto initial = shonan.initializeRandomly(kRandomNumberGenerator);
+  auto result = shonan.run(initial, 2,2);
+  EXPECT_DOUBLES_EQUAL(0.0008211, shonan.cost(result.first), 1e-6);
+  EXPECT_DOUBLES_EQUAL(0, result.second, 1e-10); // certificate!
+}
 
 /* ************************************************************************* */
 // Test alpha/beta/gamma prior weighting.
--- gtsam-4.1.0.orig/gtsam/slam/AntiFactor.h
+++ gtsam-4.1.0/gtsam/slam/AntiFactor.h
@@ -49,7 +49,7 @@ namespace gtsam {
     /** constructor - Creates the equivalent AntiFactor from an existing factor */
     AntiFactor(NonlinearFactor::shared_ptr factor) : Base(factor->keys()), factor_(factor) {}
 
-    virtual ~AntiFactor() {}
+    ~AntiFactor() override {}
 
     /// @return a deep copy of this factor
     gtsam::NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam/slam/BetweenFactor.h
+++ gtsam-4.1.0/gtsam/slam/BetweenFactor.h
@@ -68,7 +68,7 @@ namespace gtsam {
       Base(model, key1, key2), measured_(measured) {
     }
 
-    virtual ~BetweenFactor() {}
+    ~BetweenFactor() override {}
 
     /// @return a deep copy of this factor
     gtsam::NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam/slam/BoundingConstraint.h
+++ gtsam-4.1.0/gtsam/slam/BoundingConstraint.h
@@ -44,7 +44,7 @@ struct BoundingConstraint1: public Noise
         threshold_(threshold), isGreaterThan_(isGreaterThan) {
   }
 
-  virtual ~BoundingConstraint1() {}
+  ~BoundingConstraint1() override {}
 
   inline double threshold() const { return threshold_; }
   inline bool isGreaterThan() const { return isGreaterThan_; }
@@ -112,7 +112,7 @@ struct BoundingConstraint2: public Noise
   : Base(noiseModel::Constrained::All(1, mu), key1, key2),
     threshold_(threshold), isGreaterThan_(isGreaterThan) {}
 
-  virtual ~BoundingConstraint2() {}
+  ~BoundingConstraint2() override {}
 
   inline double threshold() const { return threshold_; }
   inline bool isGreaterThan() const { return isGreaterThan_; }
--- gtsam-4.1.0.orig/gtsam/slam/EssentialMatrixConstraint.h
+++ gtsam-4.1.0/gtsam/slam/EssentialMatrixConstraint.h
@@ -57,7 +57,7 @@ public:
       Base(model, key1, key2), measuredE_(measuredE) {
   }
 
-  virtual ~EssentialMatrixConstraint() {
+  ~EssentialMatrixConstraint() override {
   }
 
   /// @return a deep copy of this factor
--- gtsam-4.1.0.orig/gtsam/slam/FrobeniusFactor.cpp
+++ gtsam-4.1.0/gtsam/slam/FrobeniusFactor.cpp
@@ -23,17 +23,25 @@ using namespace std;
 namespace gtsam {
 
 //******************************************************************************
-boost::shared_ptr<noiseModel::Isotropic>
+SharedNoiseModel
 ConvertNoiseModel(const SharedNoiseModel &model, size_t d, bool defaultToUnit) {
   double sigma = 1.0;
+
   if (model != nullptr) {
-    auto sigmas = model->sigmas();
+    const auto &robust = boost::dynamic_pointer_cast<noiseModel::Robust>(model);
+    Vector sigmas;
+    if (robust) {
+      sigmas = robust->noise()->sigmas();
+    } else {
+      sigmas = model->sigmas();
+    }
+
     size_t n = sigmas.size();
     if (n == 1) {
       sigma = sigmas(0); // Rot2
       goto exit;
     }
-    if (n == 3 || n == 6) {
+    else if (n == 3 || n == 6) {
       sigma = sigmas(2); // Pose2, Rot3, or Pose3
       if (sigmas(0) != sigma || sigmas(1) != sigma) {
         if (!defaultToUnit) {
@@ -46,8 +54,15 @@ ConvertNoiseModel(const SharedNoiseModel
       throw std::runtime_error("Can only convert Pose2/Pose3 noise models");
     }
   }
-exit:
-  return noiseModel::Isotropic::Sigma(d, sigma);
+  exit:
+  auto isoModel = noiseModel::Isotropic::Sigma(d, sigma);
+  const auto &robust = boost::dynamic_pointer_cast<noiseModel::Robust>(model);
+  if (robust) {
+    return noiseModel::Robust::Create(
+        noiseModel::mEstimator::Huber::Create(1.345), isoModel);
+  } else {
+    return isoModel;
+  }
 }
 
 //******************************************************************************
--- gtsam-4.1.0.orig/gtsam/slam/FrobeniusFactor.h
+++ gtsam-4.1.0/gtsam/slam/FrobeniusFactor.h
@@ -26,15 +26,20 @@
 namespace gtsam {
 
 /**
- * When creating (any) FrobeniusFactor we can convert a Rot/Pose
- * BetweenFactor noise model into a n-dimensional isotropic noise
- * model used to weight the Frobenius norm.  If the noise model passed is
- * null we return a n-dimensional isotropic noise model with sigma=1.0. If
- * not, we we check if the d-dimensional noise model on rotations is
+ * When creating (any) FrobeniusFactor we can convert a Rot/Pose BetweenFactor
+ * noise model into a n-dimensional isotropic noise
+ * model used to weight the Frobenius norm.
+ * If the noise model passed is null we return a n-dimensional isotropic noise
+ * model with sigma=1.0.
+ * If not, we we check if the d-dimensional noise model on rotations is
  * isotropic. If it is, we extend to 'n' dimensions, otherwise we throw an
- * error. If defaultToUnit == false throws an exception on unexepcted input.
+ * error.
+ * If the noise model is a robust error model, we use the sigmas of the
+ * underlying noise model.
+ *
+ * If defaultToUnit == false throws an exception on unexepcted input.
  */
-GTSAM_EXPORT boost::shared_ptr<noiseModel::Isotropic>
+GTSAM_EXPORT SharedNoiseModel
 ConvertNoiseModel(const SharedNoiseModel &model, size_t n,
                   bool defaultToUnit = true);
 
--- gtsam-4.1.0.orig/gtsam/slam/GeneralSFMFactor.h
+++ gtsam-4.1.0/gtsam/slam/GeneralSFMFactor.h
@@ -86,14 +86,17 @@ public:
    * @param cameraKey is the index of the camera
    * @param landmarkKey is the index of the landmark
    */
-  GeneralSFMFactor(const Point2& measured, const SharedNoiseModel& model, Key cameraKey, Key landmarkKey) :
-  Base(model, cameraKey, landmarkKey), measured_(measured) {}
+  GeneralSFMFactor(const Point2& measured, const SharedNoiseModel& model,
+                   Key cameraKey, Key landmarkKey)
+      : Base(model, cameraKey, landmarkKey), measured_(measured) {}
+
+  GeneralSFMFactor() : measured_(0.0, 0.0) {}  ///< default constructor
+  ///< constructor that takes a Point2
+  GeneralSFMFactor(const Point2& p) : measured_(p) {}
+  ///< constructor that takes doubles x,y to make a Point2
+  GeneralSFMFactor(double x, double y) : measured_(x, y) {}
 
-  GeneralSFMFactor():measured_(0.0,0.0) {} ///< default constructor
-  GeneralSFMFactor(const Point2 & p):measured_(p) {} ///< constructor that takes a Point2
-  GeneralSFMFactor(double x, double y):measured_(x,y) {} ///< constructor that takes doubles x,y to make a Point2
-
-  virtual ~GeneralSFMFactor() {} ///< destructor
+  ~GeneralSFMFactor() override {} ///< destructor
 
   /// @return a deep copy of this factor
   gtsam::NonlinearFactor::shared_ptr clone() const override {
@@ -127,7 +130,7 @@ public:
     catch( CheiralityException& e) {
       if (H1) *H1 = JacobianC::Zero();
       if (H2) *H2 = JacobianL::Zero();
-      // TODO warn if verbose output asked for
+      //TODO Print the exception via logging
       return Z_2x1;
     }
   }
@@ -149,7 +152,7 @@ public:
       H1.setZero();
       H2.setZero();
       b.setZero();
-      // TODO warn if verbose output asked for
+      //TODO Print the exception via logging
     }
 
     // Whiten the system if needed
@@ -227,7 +230,7 @@ public:
   Base(model, poseKey, landmarkKey, calibKey), measured_(measured) {}
   GeneralSFMFactor2():measured_(0.0,0.0) {} ///< default constructor
 
-  virtual ~GeneralSFMFactor2() {} ///< destructor
+  ~GeneralSFMFactor2() override {} ///< destructor
 
   /// @return a deep copy of this factor
   gtsam::NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam/slam/InitializePose.h
+++ gtsam-4.1.0/gtsam/slam/InitializePose.h
@@ -62,7 +62,7 @@ static Values computePoses(const Values&
 
   // Upgrade rotations to full poses
   Values initialPose;
-  for (const auto& key_value : initialRot) {
+  for (const auto key_value : initialRot) {
     Key key = key_value.key;
     const auto& rot = initialRot.at<typename Pose::Rotation>(key);
     Pose initializedPose = Pose(rot, origin);
@@ -86,7 +86,7 @@ static Values computePoses(const Values&
 
   // put into Values structure
   Values estimate;
-  for (const auto& key_value : GNresult) {
+  for (const auto key_value : GNresult) {
     Key key = key_value.key;
     if (key != kAnchorKey) {
       const Pose& pose = GNresult.at<Pose>(key);
--- gtsam-4.1.0.orig/gtsam/slam/InitializePose3.cpp
+++ gtsam-4.1.0/gtsam/slam/InitializePose3.cpp
@@ -124,7 +124,7 @@ Values InitializePose3::computeOrientati
   // this works on the inverse rotations, according to Tron&Vidal,2011
   Values inverseRot;
   inverseRot.insert(initialize::kAnchorKey, Rot3());
-  for(const auto& key_value: givenGuess) {
+  for(const auto key_value: givenGuess) {
     Key key = key_value.key;
     const Pose3& pose = givenGuess.at<Pose3>(key);
     inverseRot.insert(key, pose.rotation().inverse());
@@ -139,7 +139,7 @@ Values InitializePose3::computeOrientati
   // calculate max node degree & allocate gradient
   size_t maxNodeDeg = 0;
   VectorValues grad;
-  for(const auto& key_value: inverseRot) {
+  for(const auto key_value: inverseRot) {
     Key key = key_value.key;
     grad.insert(key,Z_3x1);
     size_t currNodeDeg = (adjEdgesMap.at(key)).size();
@@ -162,7 +162,7 @@ Values InitializePose3::computeOrientati
     //////////////////////////////////////////////////////////////////////////
     // compute the gradient at each node
     maxGrad = 0;
-    for (const auto& key_value : inverseRot) {
+    for (const auto key_value : inverseRot) {
       Key key = key_value.key;
       Vector gradKey = Z_3x1;
       // collect the gradient for each edge incident on key
@@ -203,7 +203,7 @@ Values InitializePose3::computeOrientati
   // Return correct rotations
   const Rot3& Rref = inverseRot.at<Rot3>(initialize::kAnchorKey); // This will be set to the identity as so far we included no prior
   Values estimateRot;
-  for(const auto& key_value: inverseRot) {
+  for(const auto key_value: inverseRot) {
     Key key = key_value.key;
     if (key != initialize::kAnchorKey) {
       const Rot3& R = inverseRot.at<Rot3>(key);
--- gtsam-4.1.0.orig/gtsam/slam/KarcherMeanFactor.h
+++ gtsam-4.1.0/gtsam/slam/KarcherMeanFactor.h
@@ -63,7 +63,7 @@ public:
                     boost::optional<double> beta = boost::none);
 
   /// Destructor
-  virtual ~KarcherMeanFactor() {}
+  ~KarcherMeanFactor() override {}
 
   /// Calculate the error of the factor: always zero
   double error(const Values &c) const override { return 0; }
--- gtsam-4.1.0.orig/gtsam/slam/OrientedPlane3Factor.cpp
+++ gtsam-4.1.0/gtsam/slam/OrientedPlane3Factor.cpp
@@ -2,7 +2,7 @@
  * OrientedPlane3Factor.cpp
  *
  *  Created on: Jan 29, 2014
- *      Author: Natesh Srinivasan
+ *  Author: Natesh Srinivasan
  */
 
 #include "OrientedPlane3Factor.h"
@@ -14,15 +14,42 @@ namespace gtsam {
 //***************************************************************************
 void OrientedPlane3Factor::print(const string& s,
     const KeyFormatter& keyFormatter) const {
-  cout << "OrientedPlane3Factor Factor on " << landmarkKey_ << "\n";
+  cout << s << (s == "" ? "" : "\n");
+  cout << "OrientedPlane3Factor Factor (" << keyFormatter(key1()) << ", "
+       << keyFormatter(key2()) << ")\n";
   measured_p_.print("Measured Plane");
   this->noiseModel_->print("  noise model: ");
 }
 
 //***************************************************************************
+Vector OrientedPlane3Factor::evaluateError(const Pose3& pose,
+    const OrientedPlane3& plane, boost::optional<Matrix&> H1,
+    boost::optional<Matrix&> H2) const {
+  Matrix36 predicted_H_pose;
+  Matrix33 predicted_H_plane, error_H_predicted;
+
+  OrientedPlane3 predicted_plane = plane.transform(pose,
+    H2 ? &predicted_H_plane : nullptr, H1 ? &predicted_H_pose  : nullptr);
+
+  Vector3 err = predicted_plane.errorVector(
+      measured_p_, (H1 || H2) ? &error_H_predicted : nullptr);
+
+  // Apply the chain rule to calculate the derivatives.
+  if (H1) {
+    *H1 = error_H_predicted * predicted_H_pose;
+  }
+  if (H2) {
+    *H2 = error_H_predicted * predicted_H_plane;
+  }
+
+  return err;
+}
+
+//***************************************************************************
 void OrientedPlane3DirectionPrior::print(const string& s,
     const KeyFormatter& keyFormatter) const {
-  cout << "Prior Factor on " << landmarkKey_ << "\n";
+  cout << s << (s == "" ? "" : "\n");
+  cout << s << "Prior Factor on " << keyFormatter(key()) << "\n";
   measured_p_.print("Measured Plane");
   this->noiseModel_->print("  noise model: ");
 }
@@ -36,26 +63,17 @@ bool OrientedPlane3DirectionPrior::equal
 }
 
 //***************************************************************************
-
-Vector OrientedPlane3DirectionPrior::evaluateError(const OrientedPlane3& plane,
-    boost::optional<Matrix&> H) const {
-
+Vector OrientedPlane3DirectionPrior::evaluateError(
+    const OrientedPlane3& plane, boost::optional<Matrix&> H) const {
+  Unit3 n_hat_p = measured_p_.normal();
+  Unit3 n_hat_q = plane.normal();
+  Matrix2 H_p;
+  Vector e = n_hat_p.error(n_hat_q, H ? &H_p : nullptr);
   if (H) {
-    Matrix H_p;
-    Unit3 n_hat_p = measured_p_.normal();
-    Unit3 n_hat_q = plane.normal();
-    Vector e = n_hat_p.error(n_hat_q, H_p);
     H->resize(2, 3);
-    H->block<2, 2>(0, 0) << H_p;
-    H->block<2, 1>(0, 2) << Z_2x1;
-    return e;
-  } else {
-    Unit3 n_hat_p = measured_p_.normal();
-    Unit3 n_hat_q = plane.normal();
-    Vector e = n_hat_p.error(n_hat_q);
-    return e;
+    *H << H_p, Z_2x1;
   }
-
-}
+  return e;
 }
 
+}  // namespace gtsam
--- gtsam-4.1.0.orig/gtsam/slam/OrientedPlane3Factor.h
+++ gtsam-4.1.0/gtsam/slam/OrientedPlane3Factor.h
@@ -16,66 +16,54 @@ namespace gtsam {
  * Factor to measure a planar landmark from a given pose
  */
 class OrientedPlane3Factor: public NoiseModelFactor2<Pose3, OrientedPlane3> {
-
-protected:
-  Key poseKey_;
-  Key landmarkKey_;
-  Vector measured_coeffs_;
+ protected:
   OrientedPlane3 measured_p_;
-
   typedef NoiseModelFactor2<Pose3, OrientedPlane3> Base;
 
-public:
-
+ public:
   /// Constructor
   OrientedPlane3Factor() {
   }
-  virtual ~OrientedPlane3Factor() {}
+  ~OrientedPlane3Factor() override {}
 
-  /// Constructor with measured plane coefficients (a,b,c,d), noise model, pose symbol
-  OrientedPlane3Factor(const Vector&z, const SharedGaussian& noiseModel,
-      const Key& pose, const Key& landmark) :
-      Base(noiseModel, pose, landmark), poseKey_(pose), landmarkKey_(landmark), measured_coeffs_(
-          z) {
-    measured_p_ = OrientedPlane3(Unit3(z(0), z(1), z(2)), z(3));
-  }
+  /** Constructor with measured plane (a,b,c,d) coefficients
+   * @param z measured plane (a,b,c,d) coefficients as 4D vector
+   * @param noiseModel noiseModel Gaussian noise model
+   * @param poseKey Key or symbol for unknown pose
+   * @param landmarkKey Key or symbol for unknown planar landmark
+   * @return the transformed plane
+   */
+  OrientedPlane3Factor(const Vector4& z, const SharedGaussian& noiseModel,
+                       Key poseKey, Key landmarkKey)
+      : Base(noiseModel, poseKey, landmarkKey), measured_p_(z) {}
 
   /// print
   void print(const std::string& s = "OrientedPlane3Factor",
       const KeyFormatter& keyFormatter = DefaultKeyFormatter) const override;
 
   /// evaluateError
-  Vector evaluateError(const Pose3& pose, const OrientedPlane3& plane,
-      boost::optional<Matrix&> H1 = boost::none, boost::optional<Matrix&> H2 =
-          boost::none) const override {
-    OrientedPlane3 predicted_plane = OrientedPlane3::Transform(plane, pose, H1,
-        H2);
-    Vector err(3);
-    err << predicted_plane.error(measured_p_);
-    return (err);
-  }
-  ;
+  Vector evaluateError(
+      const Pose3& pose, const OrientedPlane3& plane,
+      boost::optional<Matrix&> H1 = boost::none,
+      boost::optional<Matrix&> H2 = boost::none) const override;
 };
 
 // TODO: Convert this factor to dimension two, three dimensions is redundant for direction prior
-class OrientedPlane3DirectionPrior: public NoiseModelFactor1<OrientedPlane3> {
-protected:
-  OrientedPlane3 measured_p_; /// measured plane parameters
-  Key landmarkKey_;
+class OrientedPlane3DirectionPrior : public NoiseModelFactor1<OrientedPlane3> {
+ protected:
+  OrientedPlane3 measured_p_;  /// measured plane parameters
   typedef NoiseModelFactor1<OrientedPlane3> Base;
-public:
 
+ public:
   typedef OrientedPlane3DirectionPrior This;
   /// Constructor
   OrientedPlane3DirectionPrior() {
   }
 
   /// Constructor with measured plane coefficients (a,b,c,d), noise model, landmark symbol
-  OrientedPlane3DirectionPrior(Key key, const Vector&z,
-      const SharedGaussian& noiseModel) :
-      Base(noiseModel, key), landmarkKey_(key) {
-    measured_p_ = OrientedPlane3(Unit3(z(0), z(1), z(2)), z(3));
-  }
+  OrientedPlane3DirectionPrior(Key key, const Vector4& z,
+                               const SharedGaussian& noiseModel)
+      : Base(noiseModel, key), measured_p_(z) {}
 
   /// print
   void print(const std::string& s = "OrientedPlane3DirectionPrior",
--- gtsam-4.1.0.orig/gtsam/slam/PoseRotationPrior.h
+++ gtsam-4.1.0/gtsam/slam/PoseRotationPrior.h
@@ -47,7 +47,7 @@ public:
   PoseRotationPrior(Key key, const POSE& pose_z, const SharedNoiseModel& model)
   : Base(model, key), measured_(pose_z.rotation()) {}
 
-  virtual ~PoseRotationPrior() {}
+  ~PoseRotationPrior() override {}
 
   /// @return a deep copy of this factor
   gtsam::NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam/slam/PoseTranslationPrior.h
+++ gtsam-4.1.0/gtsam/slam/PoseTranslationPrior.h
@@ -49,7 +49,7 @@ public:
   : Base(model, key), measured_(pose_z.translation()) {
   }
 
-  virtual ~PoseTranslationPrior() {}
+  ~PoseTranslationPrior() override {}
 
   const Translation& measured() const { return measured_; }
 
--- gtsam-4.1.0.orig/gtsam/slam/ProjectionFactor.h
+++ gtsam-4.1.0/gtsam/slam/ProjectionFactor.h
@@ -97,7 +97,7 @@ namespace gtsam {
           throwCheirality_(throwCheirality), verboseCheirality_(verboseCheirality) {}
 
     /** Virtual destructor */
-    virtual ~GenericProjectionFactor() {}
+    ~GenericProjectionFactor() override {}
 
     /// @return a deep copy of this factor
     gtsam::NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam/slam/ReferenceFrameFactor.h
+++ gtsam-4.1.0/gtsam/slam/ReferenceFrameFactor.h
@@ -87,7 +87,7 @@ public:
   : Base(noiseModel::Isotropic::Sigma(traits<POINT>::dimension, sigma),
       globalKey, transKey, localKey) {}
 
-  virtual ~ReferenceFrameFactor(){}
+  ~ReferenceFrameFactor() override{}
 
   NonlinearFactor::shared_ptr clone() const override {
     return boost::static_pointer_cast<NonlinearFactor>(
--- gtsam-4.1.0.orig/gtsam/slam/RegularImplicitSchurFactor.h
+++ gtsam-4.1.0/gtsam/slam/RegularImplicitSchurFactor.h
@@ -59,7 +59,7 @@ public:
   }
 
   /// Destructor
-  virtual ~RegularImplicitSchurFactor() {
+  ~RegularImplicitSchurFactor() override {
   }
 
   std::vector<MatrixZD, Eigen::aligned_allocator<MatrixZD> >& FBlocks() const {
--- gtsam-4.1.0.orig/gtsam/slam/SmartFactorBase.h
+++ gtsam-4.1.0/gtsam/slam/SmartFactorBase.h
@@ -13,6 +13,7 @@
  * @file   SmartFactorBase.h
  * @brief  Base class to create smart factors on poses or cameras
  * @author Luca Carlone
+ * @author Antoni Rosinol
  * @author Zsolt Kira
  * @author Frank Dellaert
  * @author Chris Beall
@@ -111,7 +112,7 @@ protected:
   }
 
   /// Virtual destructor, subclasses from NonlinearFactor
-  virtual ~SmartFactorBase() {
+  ~SmartFactorBase() override {
   }
 
   /**
@@ -131,9 +132,10 @@ protected:
   /**
    * Add a bunch of measurements, together with the camera keys
    */
-  void add(ZVector& measurements, KeyVector& cameraKeys) {
+  void add(const ZVector& measurements, const KeyVector& cameraKeys) {
+    assert(measurements.size() == cameraKeys.size());
     for (size_t i = 0; i < measurements.size(); i++) {
-      this->add(measurements.at(i), cameraKeys.at(i));
+      this->add(measurements[i], cameraKeys[i]);
     }
   }
 
--- gtsam-4.1.0.orig/gtsam/slam/SmartProjectionFactor.h
+++ gtsam-4.1.0/gtsam/slam/SmartProjectionFactor.h
@@ -90,7 +90,7 @@ public:
         result_(TriangulationResult::Degenerate()) {}
 
   /** Virtual destructor */
-  virtual ~SmartProjectionFactor() {
+  ~SmartProjectionFactor() override {
   }
 
   /**
--- gtsam-4.1.0.orig/gtsam/slam/SmartProjectionPoseFactor.h
+++ gtsam-4.1.0/gtsam/slam/SmartProjectionPoseFactor.h
@@ -94,7 +94,7 @@ public:
   }
 
   /** Virtual destructor */
-  virtual ~SmartProjectionPoseFactor() {
+  ~SmartProjectionPoseFactor() override {
   }
 
   /**
--- gtsam-4.1.0.orig/gtsam/slam/StereoFactor.h
+++ gtsam-4.1.0/gtsam/slam/StereoFactor.h
@@ -88,7 +88,7 @@ public:
     throwCheirality_(throwCheirality), verboseCheirality_(verboseCheirality) {}
 
   /** Virtual destructor */
-  virtual ~GenericStereoFactor() {}
+  ~GenericStereoFactor() override {}
 
   /// @return a deep copy of this factor
   gtsam::NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam/slam/TriangulationFactor.h
+++ gtsam-4.1.0/gtsam/slam/TriangulationFactor.h
@@ -86,7 +86,7 @@ public:
   }
 
   /** Virtual destructor */
-  virtual ~TriangulationFactor() {
+  ~TriangulationFactor() override {
   }
 
   /// @return a deep copy of this factor
--- gtsam-4.1.0.orig/gtsam/slam/dataset.cpp
+++ gtsam-4.1.0/gtsam/slam/dataset.cpp
@@ -586,7 +586,7 @@ void save2D(const NonlinearFactorGraph &
   fstream stream(filename.c_str(), fstream::out);
 
   // save poses
-  for (const Values::ConstKeyValuePair key_value : config) {
+  for (const auto key_value : config) {
     const Pose2 &pose = key_value.value.cast<Pose2>();
     stream << "VERTEX2 " << key_value.key << " " << pose.x() << " " << pose.y()
            << " " << pose.theta() << endl;
@@ -1130,6 +1130,13 @@ bool readBAL(const string &filename, Sfm
 }
 
 /* ************************************************************************* */
+SfmData readBal(const string &filename) {
+  SfmData data;
+  readBAL(filename, data);
+  return data;
+}
+
+/* ************************************************************************* */
 bool writeBAL(const string &filename, SfmData &data) {
   // Open the output file
   ofstream os;
@@ -1157,8 +1164,8 @@ bool writeBAL(const string &filename, Sf
     for (size_t k = 0; k < track.number_measurements();
          k++) { // for each observation of the 3D point j
       size_t i = track.measurements[k].first; // camera id
-      double u0 = data.cameras[i].calibration().u0();
-      double v0 = data.cameras[i].calibration().v0();
+      double u0 = data.cameras[i].calibration().px();
+      double v0 = data.cameras[i].calibration().py();
 
       if (u0 != 0 || v0 != 0) {
         cout << "writeBAL has not been tested for calibration with nonzero "
--- gtsam-4.1.0.orig/gtsam/slam/dataset.h
+++ gtsam-4.1.0/gtsam/slam/dataset.h
@@ -29,6 +29,8 @@
 #include <gtsam/nonlinear/NonlinearFactorGraph.h>
 #include <gtsam/nonlinear/Values.h>
 #include <gtsam/linear/NoiseModel.h>
+#include <gtsam/base/serialization.h>
+#include <gtsam/base/Testable.h>
 #include <gtsam/base/types.h>
 
 #include <boost/smart_ptr/shared_ptr.hpp>
@@ -211,16 +213,22 @@ GTSAM_EXPORT GraphAndValues load3D(const
 /// A measurement with its camera index
 typedef std::pair<size_t, Point2> SfmMeasurement;
 
-/// SfmTrack
+/// Sift index for SfmTrack
 typedef std::pair<size_t, size_t> SiftIndex;
 
 /// Define the structure for the 3D points
 struct SfmTrack {
-  SfmTrack(): p(0,0,0) {}
+  SfmTrack(float r = 0, float g = 0, float b = 0): p(0,0,0), r(r), g(g), b(b) {}
+  SfmTrack(const gtsam::Point3& pt, float r = 0, float g = 0, float b = 0) : p(pt), r(r), g(g), b(b) {}
+ 
   Point3 p; ///< 3D position of the point
   float r, g, b; ///< RGB color of the 3D point
   std::vector<SfmMeasurement> measurements; ///< The 2D image projections (id,(u,v))
   std::vector<SiftIndex> siftIndices;
+  
+  /// Get RGB values describing 3d point
+  const Point3 rgb() const { return Point3(r, g, b); }
+
   /// Total number of measurements in this track
   size_t number_measurements() const {
     return measurements.size();
@@ -233,8 +241,84 @@ struct SfmTrack {
   SiftIndex siftIndex(size_t idx) const {
     return siftIndices[idx];
   }
+  /// Get 3D point
+  const Point3& point3() const {
+    return p;
+  }
+  /// Add measurement (camera_idx, Point2) to track
+  void add_measurement(size_t idx, const gtsam::Point2& m) {
+    measurements.emplace_back(idx, m);
+  }
+
+  /** Serialization function */
+  friend class boost::serialization::access;
+  template<class ARCHIVE>
+  void serialize(ARCHIVE & ar, const unsigned int /*version*/) {
+    ar & BOOST_SERIALIZATION_NVP(p);
+    ar & BOOST_SERIALIZATION_NVP(r);
+    ar & BOOST_SERIALIZATION_NVP(g);
+    ar & BOOST_SERIALIZATION_NVP(b);
+    ar & BOOST_SERIALIZATION_NVP(measurements);
+    ar & BOOST_SERIALIZATION_NVP(siftIndices);
+  }
+
+  /// assert equality up to a tolerance
+  bool equals(const SfmTrack &sfmTrack, double tol = 1e-9) const {
+    // check the 3D point
+    if (!p.isApprox(sfmTrack.p)) {
+      return false;
+    }
+
+    // check the RGB values
+    if (r!=sfmTrack.r || g!=sfmTrack.g || b!=sfmTrack.b) {
+      return false;
+    }
+
+    // compare size of vectors for measurements and siftIndices
+    if (number_measurements() != sfmTrack.number_measurements() ||
+        siftIndices.size() != sfmTrack.siftIndices.size()) {
+      return false;
+    }
+
+    // compare measurements (order sensitive)
+    for (size_t idx = 0; idx < number_measurements(); ++idx) {
+      SfmMeasurement measurement = measurements[idx];
+      SfmMeasurement otherMeasurement = sfmTrack.measurements[idx];
+
+      if (measurement.first != otherMeasurement.first ||
+          !measurement.second.isApprox(otherMeasurement.second)) {
+        return false;
+      }
+    }
+
+    // compare sift indices (order sensitive)
+    for (size_t idx = 0; idx < siftIndices.size(); ++idx) {
+      SiftIndex index = siftIndices[idx];
+      SiftIndex otherIndex = sfmTrack.siftIndices[idx];
+
+      if (index.first != otherIndex.first ||
+          index.second != otherIndex.second) {
+        return false;
+      }
+    }
+
+    return true;
+  }
+
+  /// print
+  void print(const std::string& s = "") const {
+    std::cout << "Track with " << measurements.size();
+    std::cout << " measurements of point " << p << std::endl;
+  }
 };
 
+/* ************************************************************************* */
+/// traits
+template<>
+struct traits<SfmTrack> : public Testable<SfmTrack> {
+};
+
+
 /// Define the structure for the camera poses
 typedef PinholeCamera<Cal3Bundler> SfmCamera;
 
@@ -257,6 +341,63 @@ struct SfmData {
   SfmTrack track(size_t idx) const {
     return tracks[idx];
   }
+  /// Add a track to SfmData
+  void add_track(const SfmTrack& t) {
+    tracks.push_back(t);
+  }
+  /// Add a camera to SfmData
+  void add_camera(const SfmCamera& cam) {
+    cameras.push_back(cam);
+  }
+
+  /** Serialization function */
+  friend class boost::serialization::access;
+  template<class Archive>
+  void serialize(Archive & ar, const unsigned int /*version*/) {
+    ar & BOOST_SERIALIZATION_NVP(cameras);
+    ar & BOOST_SERIALIZATION_NVP(tracks);
+  }
+
+  /// @}
+  /// @name Testable
+  /// @{
+
+  /// assert equality up to a tolerance
+  bool equals(const SfmData &sfmData, double tol = 1e-9) const {
+    // check number of cameras and tracks
+    if (number_cameras() != sfmData.number_cameras() ||
+        number_tracks() != sfmData.number_tracks()) {
+      return false;
+    }
+
+    // check each camera
+    for (size_t i = 0; i < number_cameras(); ++i) {
+      if (!camera(i).equals(sfmData.camera(i), tol)) {
+        return false;
+      }
+    }
+
+    // check each track
+    for (size_t j = 0; j < number_tracks(); ++j) {
+      if (!track(j).equals(sfmData.track(j), tol)) {
+        return false;
+      }
+    }
+
+    return true;
+  }
+
+  /// print
+  void print(const std::string& s = "") const {
+    std::cout << "Number of cameras = " << number_cameras() << std::endl;
+    std::cout << "Number of tracks = " << number_tracks() << std::endl;
+  }
+};
+
+/* ************************************************************************* */
+/// traits
+template<>
+struct traits<SfmData> : public Testable<SfmData> {
 };
 
 /**
@@ -278,6 +419,14 @@ GTSAM_EXPORT bool readBundler(const std:
 GTSAM_EXPORT bool readBAL(const std::string& filename, SfmData &data);
 
 /**
+ * @brief This function parses a "Bundle Adjustment in the Large" (BAL) file and returns the data
+ * as a SfmData structure. Mainly used by wrapped code.
+ * @param filename The name of the BAL file.
+ * @return SfM structure where the data is stored.
+ */
+GTSAM_EXPORT SfmData readBal(const std::string& filename);
+
+/**
  * @brief This function writes a "Bundle Adjustment in the Large" (BAL) file from a
  * SfmData structure
  * @param filename The name of the BAL file to write
@@ -354,6 +503,7 @@ parse3DFactors(const std::string &filena
                const noiseModel::Diagonal::shared_ptr &model = nullptr,
                size_t maxIndex = 0);
 
+using BinaryMeasurementsUnit3 = std::vector<BinaryMeasurement<Unit3>>;
 #ifdef GTSAM_ALLOW_DEPRECATED_SINCE_V41
 inline boost::optional<IndexedPose> parseVertex(std::istream &is,
                                                 const std::string &tag) {
--- gtsam-4.1.0.orig/gtsam/slam/tests/testInitializePose3.cpp
+++ gtsam-4.1.0/gtsam/slam/tests/testInitializePose3.cpp
@@ -75,8 +75,15 @@ NonlinearFactorGraph graph2() {
   g.add(BetweenFactor<Pose3>(x0, x1, pose0.between(pose1), noiseModel::Isotropic::Precision(6, 1.0)));
   g.add(BetweenFactor<Pose3>(x1, x2, pose1.between(pose2), noiseModel::Isotropic::Precision(6, 1.0)));
   g.add(BetweenFactor<Pose3>(x2, x3, pose2.between(pose3), noiseModel::Isotropic::Precision(6, 1.0)));
-  g.add(BetweenFactor<Pose3>(x2, x0, Pose3(Rot3::Ypr(0.1,0,0.1), Point3()), noiseModel::Isotropic::Precision(6, 0.0))); // random pose, but zero information
-  g.add(BetweenFactor<Pose3>(x0, x3, Pose3(Rot3::Ypr(0.5,-0.2,0.2), Point3(10,20,30)), noiseModel::Isotropic::Precision(6, 0.0))); // random pose, but zero informatoin
+  // random pose, but zero information
+  auto noise_zero_info = noiseModel::Isotropic::Precision(6, 0.0);
+  g.add(BetweenFactor<Pose3>(
+      x2, x0, Pose3(Rot3::Ypr(0.1, 0.0, 0.1), Point3(0.0, 0.0, 0.0)),
+      noise_zero_info));
+  // random pose, but zero information
+  g.add(BetweenFactor<Pose3>(
+      x0, x3, Pose3(Rot3::Ypr(0.5, -0.2, 0.2), Point3(10, 20, 30)),
+      noise_zero_info));
   g.addPrior(x0, pose0, model);
   return g;
 }
--- gtsam-4.1.0.orig/gtsam/slam/tests/testLago.cpp
+++ gtsam-4.1.0/gtsam/slam/tests/testLago.cpp
@@ -284,7 +284,7 @@ TEST( Lago, largeGraphNoisy_orientations
   Values::shared_ptr expected;
   boost::tie(gmatlab, expected) = readG2o(matlabFile);
 
-  for(const Values::KeyValuePair& key_val: *expected){
+  for(const auto key_val: *expected){
     Key k = key_val.key;
     EXPECT(assert_equal(expected->at<Pose2>(k), actual.at<Pose2>(k), 1e-5));
   }
@@ -310,7 +310,7 @@ TEST( Lago, largeGraphNoisy ) {
   Values::shared_ptr expected;
   boost::tie(gmatlab, expected) = readG2o(matlabFile);
 
-  for(const Values::KeyValuePair& key_val: *expected){
+  for(const auto key_val: *expected){
     Key k = key_val.key;
     EXPECT(assert_equal(expected->at<Pose2>(k), actual.at<Pose2>(k), 1e-2));
   }
--- gtsam-4.1.0.orig/gtsam/slam/tests/testOrientedPlane3Factor.cpp
+++ gtsam-4.1.0/gtsam/slam/tests/testOrientedPlane3Factor.cpp
@@ -10,20 +10,24 @@
  * -------------------------------------------------------------------------- */
 
 /*
- * @file testOrientedPlane3.cpp
+ * @file testOrientedPlane3Factor.cpp
  * @date Dec 19, 2012
  * @author Alex Trevor
  * @brief Tests the OrientedPlane3Factor class
  */
 
 #include <gtsam/slam/OrientedPlane3Factor.h>
-#include <gtsam/nonlinear/ISAM2.h>
-#include <gtsam/inference/Symbol.h>
+
 #include <gtsam/base/numericalDerivative.h>
+#include <gtsam/inference/Symbol.h>
+#include <gtsam/nonlinear/GaussNewtonOptimizer.h>
+#include <gtsam/nonlinear/ISAM2.h>
 
 #include <CppUnitLite/TestHarness.h>
-#include <boost/bind.hpp>
+
 #include <boost/assign/std/vector.hpp>
+#include <boost/assign/std.hpp>
+#include <boost/bind.hpp>
 
 using namespace boost::assign;
 using namespace gtsam;
@@ -32,46 +36,46 @@ using namespace std;
 GTSAM_CONCEPT_TESTABLE_INST(OrientedPlane3)
 GTSAM_CONCEPT_MANIFOLD_INST(OrientedPlane3)
 
+using symbol_shorthand::P;  //< Planes
+using symbol_shorthand::X;  //< Pose3
+
 // *************************************************************************
-TEST (OrientedPlane3Factor, lm_translation_error) {
+TEST(OrientedPlane3Factor, lm_translation_error) {
   // Tests one pose, two measurements of the landmark that differ in range only.
   // Normal along -x, 3m away
-  Symbol lm_sym('p', 0);
   OrientedPlane3 test_lm0(-1.0, 0.0, 0.0, 3.0);
 
-  ISAM2 isam2;
-  Values new_values;
-  NonlinearFactorGraph new_graph;
+  NonlinearFactorGraph graph;
 
-  // Init pose and prior.  Pose Prior is needed since a single plane measurement does not fully constrain the pose
-  Symbol init_sym('x', 0);
+  // Init pose and prior.  Pose Prior is needed since a single plane measurement
+  // does not fully constrain the pose
   Pose3 init_pose(Rot3::Ypr(0.0, 0.0, 0.0), Point3(0.0, 0.0, 0.0));
-  Vector sigmas(6);
+  Vector6 sigmas;
   sigmas << 0.001, 0.001, 0.001, 0.001, 0.001, 0.001;
-  new_graph.addPrior(
-      init_sym, init_pose, noiseModel::Diagonal::Sigmas(sigmas));
-  new_values.insert(init_sym, init_pose);
+  graph.addPrior(X(0), init_pose, noiseModel::Diagonal::Sigmas(sigmas));
 
   // Add two landmark measurements, differing in range
-  new_values.insert(lm_sym, test_lm0);
-  Vector sigmas3(3);
-  sigmas3 << 0.1, 0.1, 0.1;
-  Vector test_meas0_mean(4);
-  test_meas0_mean << -1.0, 0.0, 0.0, 3.0;
-  OrientedPlane3Factor test_meas0(test_meas0_mean,
-      noiseModel::Diagonal::Sigmas(sigmas3), init_sym, lm_sym);
-  new_graph.add(test_meas0);
-  Vector test_meas1_mean(4);
-  test_meas1_mean << -1.0, 0.0, 0.0, 1.0;
-  OrientedPlane3Factor test_meas1(test_meas1_mean,
-      noiseModel::Diagonal::Sigmas(sigmas3), init_sym, lm_sym);
-  new_graph.add(test_meas1);
+  Vector3 sigmas3 {0.1, 0.1, 0.1};
+  Vector4 measurement0 {-1.0, 0.0, 0.0, 3.0};
+  OrientedPlane3Factor factor0(
+      measurement0, noiseModel::Diagonal::Sigmas(sigmas3), X(0), P(0));
+  graph.add(factor0);
+  Vector4 measurement1 {-1.0, 0.0, 0.0, 1.0};
+  OrientedPlane3Factor factor1(
+      measurement1, noiseModel::Diagonal::Sigmas(sigmas3), X(0), P(0));
+  graph.add(factor1);
+
+  // Initial Estimate
+  Values values;
+  values.insert(X(0), init_pose);
+  values.insert(P(0), test_lm0);
 
   // Optimize
-  ISAM2Result result = isam2.update(new_graph, new_values);
+  ISAM2 isam2;
+  ISAM2Result result = isam2.update(graph, values);
   Values result_values = isam2.calculateEstimate();
-  OrientedPlane3 optimized_plane_landmark = result_values.at<OrientedPlane3>(
-      lm_sym);
+  OrientedPlane3 optimized_plane_landmark =
+      result_values.at<OrientedPlane3>(P(0));
 
   // Given two noisy measurements of equal weight, expect result between the two
   OrientedPlane3 expected_plane_landmark(-1.0, 0.0, 0.0, 2.0);
@@ -79,48 +83,80 @@ TEST (OrientedPlane3Factor, lm_translati
 }
 
 // *************************************************************************
+// TODO As described in PR #564 after correcting the derivatives in
+// OrientedPlane3Factor this test fails. It should be debugged and re-enabled.
+/*
 TEST (OrientedPlane3Factor, lm_rotation_error) {
   // Tests one pose, two measurements of the landmark that differ in angle only.
   // Normal along -x, 3m away
-  Symbol lm_sym('p', 0);
-  OrientedPlane3 test_lm0(-1.0, 0.0, 0.0, 3.0);
+  OrientedPlane3 test_lm0(-1.0/sqrt(1.01), 0.1/sqrt(1.01), 0.0, 3.0);
 
-  ISAM2 isam2;
-  Values new_values;
-  NonlinearFactorGraph new_graph;
+  NonlinearFactorGraph graph;
 
   // Init pose and prior.  Pose Prior is needed since a single plane measurement does not fully constrain the pose
-  Symbol init_sym('x', 0);
   Pose3 init_pose(Rot3::Ypr(0.0, 0.0, 0.0), Point3(0.0, 0.0, 0.0));
-  new_graph.addPrior(init_sym, init_pose,
+  graph.addPrior(X(0), init_pose,
       noiseModel::Diagonal::Sigmas(
           (Vector(6) << 0.001, 0.001, 0.001, 0.001, 0.001, 0.001).finished()));
-  new_values.insert(init_sym, init_pose);
 
-//  // Add two landmark measurements, differing in angle
-  new_values.insert(lm_sym, test_lm0);
-  Vector test_meas0_mean(4);
-  test_meas0_mean << -1.0, 0.0, 0.0, 3.0;
-  OrientedPlane3Factor test_meas0(test_meas0_mean,
-      noiseModel::Diagonal::Sigmas(Vector3(0.1, 0.1, 0.1)), init_sym, lm_sym);
-  new_graph.add(test_meas0);
-  Vector test_meas1_mean(4);
-  test_meas1_mean << 0.0, -1.0, 0.0, 3.0;
-  OrientedPlane3Factor test_meas1(test_meas1_mean,
-      noiseModel::Diagonal::Sigmas(Vector3(0.1, 0.1, 0.1)), init_sym, lm_sym);
-  new_graph.add(test_meas1);
+  // Add two landmark measurements, differing in angle
+  Vector4 measurement0 {-1.0, 0.0, 0.0, 3.0};
+  OrientedPlane3Factor factor0(measurement0,
+      noiseModel::Diagonal::Sigmas(Vector3(0.1, 0.1, 0.1)), X(0), P(0));
+  graph.add(factor0);
+  Vector4 measurement1 {0.0, -1.0, 0.0, 3.0};
+  OrientedPlane3Factor factor1(measurement1,
+      noiseModel::Diagonal::Sigmas(Vector3(0.1, 0.1, 0.1)), X(0), P(0));
+  graph.add(factor1);
+
+  // Initial Estimate
+  Values values;
+  values.insert(X(0), init_pose);
+  values.insert(P(0), test_lm0);
 
   // Optimize
-  ISAM2Result result = isam2.update(new_graph, new_values);
+  ISAM2 isam2;
+  ISAM2Result result = isam2.update(graph, values);
   Values result_values = isam2.calculateEstimate();
-  OrientedPlane3 optimized_plane_landmark = result_values.at<OrientedPlane3>(
-      lm_sym);
+  auto optimized_plane_landmark = result_values.at<OrientedPlane3>(P(0));
 
   // Given two noisy measurements of equal weight, expect result between the two
   OrientedPlane3 expected_plane_landmark(-sqrt(2.0) / 2.0, -sqrt(2.0) / 2.0,
       0.0, 3.0);
   EXPECT(assert_equal(optimized_plane_landmark, expected_plane_landmark));
 }
+*/
+
+// *************************************************************************
+TEST( OrientedPlane3Factor, Derivatives ) {
+  // Measurement
+  OrientedPlane3 p(sqrt(2)/2, -sqrt(2)/2, 0, 5);
+
+  // Linearisation point
+  OrientedPlane3 pLin(sqrt(3)/3, -sqrt(3)/3, sqrt(3)/3, 7);
+  gtsam::Point3 pointLin  = gtsam::Point3(1, 2, -4);
+  gtsam::Rot3 rotationLin = gtsam::Rot3::RzRyRx(0.5*M_PI, -0.3*M_PI, 1.4*M_PI);
+  Pose3 poseLin(rotationLin, pointLin);
+
+  // Factor
+  Key planeKey(1), poseKey(2);
+  SharedGaussian noise = noiseModel::Diagonal::Sigmas(Vector3(0.1, 0.1, 0.1));
+  OrientedPlane3Factor factor(p.planeCoefficients(), noise, poseKey, planeKey);
+
+  // Calculate numerical derivatives
+  boost::function<Vector(const Pose3&, const OrientedPlane3&)> f = boost::bind(
+      &OrientedPlane3Factor::evaluateError, factor, _1, _2, boost::none, boost::none);
+  Matrix numericalH1 = numericalDerivative21<Vector, Pose3, OrientedPlane3>(f, poseLin, pLin);
+  Matrix numericalH2 = numericalDerivative22<Vector, Pose3, OrientedPlane3>(f, poseLin, pLin);
+
+  // Use the factor to calculate the derivative
+  Matrix actualH1, actualH2;
+  factor.evaluateError(poseLin, pLin, actualH1, actualH2);
+
+  // Verify we get the expected error
+  EXPECT(assert_equal(numericalH1, actualH1, 1e-8));
+  EXPECT(assert_equal(numericalH2, actualH2, 1e-8));
+}
 
 // *************************************************************************
 TEST( OrientedPlane3DirectionPrior, Constructor ) {
@@ -129,7 +165,7 @@ TEST( OrientedPlane3DirectionPrior, Cons
   // If pitch and roll are zero for an aerospace frame,
   // that means Z is pointing down, i.e., direction of Z = (0,0,-1)
 
-  Vector planeOrientation = (Vector(4) << 0.0, 0.0, -1.0, 10.0).finished(); // all vertical planes directly facing the origin
+  Vector4 planeOrientation = (Vector(4) << 0.0, 0.0, -1.0, 10.0).finished(); // all vertical planes directly facing the origin
 
   // Factor
   Key key(1);
@@ -137,9 +173,9 @@ TEST( OrientedPlane3DirectionPrior, Cons
   OrientedPlane3DirectionPrior factor(key, planeOrientation, model);
 
   // Create a linearization point at the zero-error point
-  Vector theta1 = Vector4(0.0, 0.02, -1.2, 10.0);
-  Vector theta2 = Vector4(0.0, 0.1, -0.8, 10.0);
-  Vector theta3 = Vector4(0.0, 0.2, -0.9, 10.0);
+  Vector4 theta1 {0.0, 0.02, -1.2, 10.0};
+  Vector4 theta2 {0.0, 0.1, -0.8, 10.0};
+  Vector4 theta3 {0.0, 0.2, -0.9, 10.0};
 
   OrientedPlane3 T1(theta1);
   OrientedPlane3 T2(theta2);
@@ -171,6 +207,59 @@ TEST( OrientedPlane3DirectionPrior, Cons
 }
 
 /* ************************************************************************* */
+// Simplified version of the test by Marco Camurri to debug issue #561
+TEST(OrientedPlane3Factor, Issue561Simplified) {
+  // Typedefs
+  using Plane = OrientedPlane3;
+
+  NonlinearFactorGraph graph;
+
+  // Setup prior factors
+  // Note: If x0 is too far away from the origin (e.g. x=100) this test can fail.
+  Pose3 x0(Rot3::identity(), Vector3(10, -1, 1));
+  auto x0_noise = noiseModel::Isotropic::Sigma(6, 0.01);
+  graph.addPrior<Pose3>(X(0), x0, x0_noise);
+
+  // Two horizontal planes with different heights, in the world frame.
+  const Plane p1(0,0,1,1), p2(0,0,1,2);
+  auto p1_noise = noiseModel::Diagonal::Sigmas(Vector3{1, 1, 5});
+  auto p2_noise = noiseModel::Diagonal::Sigmas(Vector3{1, 1, 5});
+  graph.addPrior<Plane>(P(1), p1, p1_noise);
+  graph.addPrior<Plane>(P(2), p2, p2_noise);
+
+  // Plane factors
+  auto p1_measured_from_x0 = p1.transform(x0); // transform p1 to pose x0 as a measurement
+  auto p2_measured_from_x0 = p2.transform(x0); // transform p2 to pose x0 as a measurement
+  const auto x0_p1_noise = noiseModel::Isotropic::Sigma(3, 0.05);
+  const auto x0_p2_noise = noiseModel::Isotropic::Sigma(3, 0.05);
+  graph.emplace_shared<OrientedPlane3Factor>(
+      p1_measured_from_x0.planeCoefficients(), x0_p1_noise, X(0), P(1));
+  graph.emplace_shared<OrientedPlane3Factor>(
+      p2_measured_from_x0.planeCoefficients(), x0_p2_noise, X(0), P(2));
+
+  // Initial values
+  // Just offset the initial pose by 1m. This is what we are trying to optimize.
+  Values initialEstimate;
+  Pose3 x0_initial = x0.compose(Pose3(Rot3::identity(), Vector3(1,0,0)));
+  initialEstimate.insert(P(1), p1);
+  initialEstimate.insert(P(2), p2);
+  initialEstimate.insert(X(0), x0_initial);
+
+  // Optimize
+  try {
+    GaussNewtonOptimizer optimizer(graph, initialEstimate);
+    Values result = optimizer.optimize();
+    EXPECT_DOUBLES_EQUAL(0, graph.error(result), 0.1);
+    EXPECT(x0.equals(result.at<Pose3>(X(0))));
+    EXPECT(p1.equals(result.at<Plane>(P(1))));
+    EXPECT(p2.equals(result.at<Plane>(P(2))));
+  } catch (const IndeterminantLinearSystemException &e) {
+    std::cerr << "CAPTURED THE EXCEPTION: " << DefaultKeyFormatter(e.nearbyVariable()) << std::endl;
+    EXPECT(false); // fail if this happens
+  }
+}
+
+/* ************************************************************************* */
 int main() {
   srand(time(nullptr));
   TestResult tr;
--- /dev/null
+++ gtsam-4.1.0/gtsam/slam/tests/testSerializationDataset.cpp
@@ -0,0 +1,58 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * @file testSerializationDataset.cpp
+ * @brief serialization tests for dataset.cpp
+ * @author Ayush Baid
+ * @date Jan 1, 2021
+ */
+
+#include <gtsam/slam/dataset.h>
+
+#include <gtsam/base/serializationTestHelpers.h>
+#include <CppUnitLite/TestHarness.h>
+
+using namespace std;
+using namespace gtsam;
+using namespace gtsam::serializationTestHelpers;
+
+/* ************************************************************************* */
+TEST(dataSet, sfmDataSerialization) {
+  // Test the serialization of SfmData
+  const string filename = findExampleDataFile("dubrovnik-3-7-pre");
+  SfmData mydata;
+  CHECK(readBAL(filename, mydata));
+
+  // round-trip equality check on serialization and subsequent deserialization
+  EXPECT(equalsObj(mydata));
+  EXPECT(equalsXML(mydata));
+  EXPECT(equalsBinary(mydata));
+}
+
+/* ************************************************************************* */
+TEST(dataSet, sfmTrackSerialization) {
+  // Test the serialization of SfmTrack
+  const string filename = findExampleDataFile("dubrovnik-3-7-pre");
+  SfmData mydata;
+  CHECK(readBAL(filename, mydata));
+
+  SfmTrack track = mydata.track(0);
+
+  // round-trip equality check on serialization and subsequent deserialization
+  EXPECT(equalsObj(track));
+  EXPECT(equalsXML(track));
+  EXPECT(equalsBinary(track));
+}
+
+/* ************************************************************************* */
+int main() { TestResult tr; return TestRegistry::runAllTests(tr); }
+/* ************************************************************************* */
--- gtsam-4.1.0.orig/gtsam/symbolic/SymbolicConditional.h
+++ gtsam-4.1.0/gtsam/symbolic/SymbolicConditional.h
@@ -95,7 +95,7 @@ namespace gtsam {
       return FromIteratorsShared(keys.begin(), keys.end(), nrFrontals);
     }
 
-    virtual ~SymbolicConditional() {}
+    ~SymbolicConditional() override {}
 
     /// Copy this object as its actual derived type.
     SymbolicFactor::shared_ptr clone() const { return boost::make_shared<This>(*this); }
--- gtsam-4.1.0.orig/gtsam_extra.cmake.in
+++ gtsam-4.1.0/gtsam_extra.cmake.in
@@ -7,8 +7,3 @@ set (GTSAM_VERSION_STRING "@GTSAM_VERSIO
 
 set (GTSAM_USE_TBB @GTSAM_USE_TBB@)
 set (GTSAM_DEFAULT_ALLOCATOR @GTSAM_DEFAULT_ALLOCATOR@)
-
-if("@GTSAM_INSTALL_CYTHON_TOOLBOX@")
-  list(APPEND GTSAM_CYTHON_INSTALL_PATH "@GTSAM_CYTHON_INSTALL_PATH@")
-  list(APPEND GTSAM_EIGENCY_INSTALL_PATH "@GTSAM_EIGENCY_INSTALL_PATH@")
-endif()
--- gtsam-4.1.0.orig/gtsam_unstable/CMakeLists.txt
+++ gtsam-4.1.0/gtsam_unstable/CMakeLists.txt
@@ -107,22 +107,6 @@ install(
 list(APPEND GTSAM_EXPORTED_TARGETS gtsam_unstable)
 set(GTSAM_EXPORTED_TARGETS "${GTSAM_EXPORTED_TARGETS}" PARENT_SCOPE)
 
-# Wrap version for gtsam_unstable
-if (GTSAM_UNSTABLE_INSTALL_MATLAB_TOOLBOX)
-    # Set up codegen
-    include(GtsamMatlabWrap)
-
-    # Generate, build and install toolbox
-    set(mexFlags "${GTSAM_BUILD_MEX_BINARY_FLAGS}")
-        if(NOT BUILD_SHARED_LIBS)
-                list(APPEND mexFlags -DGTSAM_IMPORT_STATIC)
-        endif()
-
-    # Wrap
-    wrap_and_install_library(gtsam_unstable.i "gtsam" "" "${mexFlags}")
-endif(GTSAM_UNSTABLE_INSTALL_MATLAB_TOOLBOX)
-
-
 # Build examples
 add_subdirectory(examples)
 
--- gtsam-4.1.0.orig/gtsam_unstable/discrete/Constraint.h
+++ gtsam-4.1.0/gtsam_unstable/discrete/Constraint.h
@@ -67,7 +67,7 @@ namespace gtsam {
     Constraint();
 
     /// Virtual destructor
-    virtual ~Constraint() {}
+    ~Constraint() override {}
 
     /// @}
     /// @name Standard Interface
--- gtsam-4.1.0.orig/gtsam_unstable/dynamics/DynamicsPriors.h
+++ gtsam-4.1.0/gtsam_unstable/dynamics/DynamicsPriors.h
@@ -9,20 +9,28 @@
 
 #pragma once
 
-#include <gtsam_unstable/slam/PartialPriorFactor.h>
-
 #include <gtsam_unstable/dynamics/PoseRTV.h>
+#include <gtsam_unstable/slam/PartialPriorFactor.h>
 
 namespace gtsam {
 
+// Indices of relevant variables in the PoseRTV tangent vector:
+// [ rx ry rz tx ty tz vx vy vz ]
+static const size_t kRollIndex = 0;
+static const size_t kPitchIndex = 1;
+static const size_t kHeightIndex = 5;
+static const size_t kVelocityZIndex = 8;
+static const std::vector<size_t> kVelocityIndices = { 6, 7, 8 };
+
 /**
- * Forces the value of the height in a PoseRTV to a specific value
+ * Forces the value of the height (z) in a PoseRTV to a specific value.
  * Dim: 1
  */
 struct DHeightPrior : public gtsam::PartialPriorFactor<PoseRTV> {
   typedef gtsam::PartialPriorFactor<PoseRTV> Base;
+
   DHeightPrior(Key key, double height, const gtsam::SharedNoiseModel& model)
-  : Base(key, 5, height, model)  {  }
+  : Base(key, kHeightIndex, height, model)  {}
 };
 
 /**
@@ -35,11 +43,11 @@ struct DRollPrior : public gtsam::Partia
 
   /** allows for explicit roll parameterization - uses canonical coordinate */
   DRollPrior(Key key, double wx, const gtsam::SharedNoiseModel& model)
-  : Base(key, 0, wx, model)  {  }
+      : Base(key, kRollIndex, wx, model)  {  }
 
   /** Forces roll to zero */
   DRollPrior(Key key, const gtsam::SharedNoiseModel& model)
-  : Base(key, 0, 0.0, model)  {  }
+      : Base(key, kRollIndex, 0.0, model)  {  }
 };
 
 /**
@@ -49,17 +57,9 @@ struct DRollPrior : public gtsam::Partia
  */
 struct VelocityPrior : public gtsam::PartialPriorFactor<PoseRTV> {
   typedef gtsam::PartialPriorFactor<PoseRTV> Base;
+
   VelocityPrior(Key key, const gtsam::Vector& vel, const gtsam::SharedNoiseModel& model)
-  : Base(key, model) {
-    this->prior_ = vel;
-    assert(vel.size() == 3);
-    this->mask_.resize(3);
-    this->mask_[0] = 6;
-    this->mask_[1] = 7;
-    this->mask_[2] = 8;
-    this->H_ = Matrix::Zero(3, 9);
-    this->fillH();
-  }
+      : Base(key, kVelocityIndices, vel, model) {}
 };
 
 /**
@@ -74,31 +74,15 @@ struct DGroundConstraint : public gtsam:
    * Primary constructor allows for variable height of the "floor"
    */
   DGroundConstraint(Key key, double height, const gtsam::SharedNoiseModel& model)
-  : Base(key, model) {
-    this->prior_ = Vector::Unit(4,0)*height; // [z, vz, roll, pitch]
-    this->mask_.resize(4);
-    this->mask_[0] = 5; // z = height
-    this->mask_[1] = 8; // vz
-    this->mask_[2] = 0; // roll
-    this->mask_[3] = 1; // pitch
-    this->H_ = Matrix::Zero(3, 9);
-    this->fillH();
-  }
+      : Base(key, { kHeightIndex, kVelocityZIndex, kRollIndex, kPitchIndex },
+             Vector::Unit(4, 0)*height, model) {}
 
   /**
    * Fully specify vector - use only for debugging
    */
   DGroundConstraint(Key key, const Vector& constraint, const gtsam::SharedNoiseModel& model)
-  : Base(key, model) {
+  : Base(key, { kHeightIndex, kVelocityZIndex, kRollIndex, kPitchIndex }, constraint, model) {
     assert(constraint.size() == 4);
-    this->prior_ = constraint; // [z, vz, roll, pitch]
-    this->mask_.resize(4);
-    this->mask_[0] = 5; // z = height
-    this->mask_[1] = 8; // vz
-    this->mask_[2] = 0; // roll
-    this->mask_[3] = 1; // pitch
-    this->H_ = Matrix::Zero(3, 9);
-    this->fillH();
   }
 };
 
--- gtsam-4.1.0.orig/gtsam_unstable/dynamics/FullIMUFactor.h
+++ gtsam-4.1.0/gtsam_unstable/dynamics/FullIMUFactor.h
@@ -48,7 +48,7 @@ public:
     assert(model->dim() == 9);
   }
 
-  virtual ~FullIMUFactor() {}
+  ~FullIMUFactor() override {}
 
   /// @return a deep copy of this factor
   gtsam::NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam_unstable/dynamics/IMUFactor.h
+++ gtsam-4.1.0/gtsam_unstable/dynamics/IMUFactor.h
@@ -41,7 +41,7 @@ public:
       double dt, const Key& key1, const Key& key2, const SharedNoiseModel& model)
   : Base(model, key1, key2), accel_(imu_vector.head(3)), gyro_(imu_vector.tail(3)), dt_(dt) {}
 
-  virtual ~IMUFactor() {}
+  ~IMUFactor() override {}
 
   /// @return a deep copy of this factor
   gtsam::NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam_unstable/dynamics/PoseRTV.h
+++ gtsam-4.1.0/gtsam_unstable/dynamics/PoseRTV.h
@@ -80,6 +80,7 @@ public:
   using Base::Dim;
   using Base::retract;
   using Base::localCoordinates;
+  using Base::LocalCoordinates;
   /// @}
 
   /// @name measurement functions
--- gtsam-4.1.0.orig/gtsam_unstable/dynamics/SimpleHelicopter.h
+++ gtsam-4.1.0/gtsam_unstable/dynamics/SimpleHelicopter.h
@@ -33,7 +33,7 @@ public:
     Base(noiseModel::Constrained::All(6, std::abs(mu)), gKey1, gKey,
         xiKey), h_(h) {
   }
-  virtual ~Reconstruction() {}
+  ~Reconstruction() override {}
 
   /// @return a deep copy of this factor
   gtsam::NonlinearFactor::shared_ptr clone() const override {
@@ -95,7 +95,7 @@ public:
         Base(noiseModel::Constrained::All(6, std::abs(mu)), xiKey1, xiKey_1, gKey),
         h_(h), Inertia_(Inertia), Fu_(Fu), m_(m) {
   }
-  virtual ~DiscreteEulerPoincareHelicopter() {}
+  ~DiscreteEulerPoincareHelicopter() override {}
 
   /// @return a deep copy of this factor
   gtsam::NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam_unstable/dynamics/VelocityConstraint.h
+++ gtsam-4.1.0/gtsam_unstable/dynamics/VelocityConstraint.h
@@ -70,7 +70,7 @@ public:
   VelocityConstraint(Key key1, Key key2, double dt, const gtsam::SharedNoiseModel& model)
   : Base(model, key1, key2), dt_(dt), integration_mode_(dynamics::TRAPEZOIDAL) {}
 
-  virtual ~VelocityConstraint() {}
+  ~VelocityConstraint() override {}
 
   /// @return a deep copy of this factor
   gtsam::NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam_unstable/dynamics/VelocityConstraint3.h
+++ gtsam-4.1.0/gtsam_unstable/dynamics/VelocityConstraint3.h
@@ -28,7 +28,7 @@ public:
   ///TODO: comment
   VelocityConstraint3(Key key1, Key key2, Key velKey, double dt, double mu = 1000.0)
   : Base(noiseModel::Constrained::All(1, std::abs(mu)), key1, key2, velKey), dt_(dt) {}
-  virtual ~VelocityConstraint3() {}
+  ~VelocityConstraint3() override {}
 
   /// @return a deep copy of this factor
   gtsam::NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam_unstable/examples/ConcurrentFilteringAndSmoothingExample.cpp
+++ gtsam-4.1.0/gtsam_unstable/examples/ConcurrentFilteringAndSmoothingExample.cpp
@@ -308,11 +308,11 @@ int main(int argc, char** argv) {
   // And to demonstrate the fixed-lag aspect, print the keys contained in each smoother after 3.0 seconds
   cout << "After 15.0 seconds, each version contains to the following keys:" << endl;
   cout << "  Concurrent Filter Keys: " << endl;
-  for(const auto& key_value: concurrentFilter.getLinearizationPoint()) {
+  for(const auto key_value: concurrentFilter.getLinearizationPoint()) {
     cout << setprecision(5) << "    Key: " << key_value.key << endl;
   }
   cout << "  Concurrent Smoother Keys: " << endl;
-  for(const auto& key_value: concurrentSmoother.getLinearizationPoint()) {
+  for(const auto key_value: concurrentSmoother.getLinearizationPoint()) {
     cout << setprecision(5) << "    Key: " << key_value.key << endl;
   }
   cout << "  Fixed-Lag Smoother Keys: " << endl;
--- /dev/null
+++ gtsam-4.1.0/gtsam_unstable/examples/ISAM2_SmartFactorStereo_IMU.cpp
@@ -0,0 +1,233 @@
+/**
+ * @file ISAM2_SmartFactorStereo_IMU.cpp
+ * @brief test of iSAM2 with smart stereo factors and IMU preintegration,
+ * originally used to debug valgrind invalid reads with Eigen
+ * @author Nghia Ho
+ *
+ * Setup is a stationary stereo camera with an IMU attached.
+ * The data file is at examples/Data/ISAM2_SmartFactorStereo_IMU.txt
+ * It contains 5 frames of stereo matches and IMU data.
+ */
+#include <gtsam/navigation/CombinedImuFactor.h>
+#include <gtsam/nonlinear/ISAM2.h>
+#include <gtsam_unstable/slam/SmartStereoProjectionPoseFactor.h>
+
+#include <fstream>
+#include <iostream>
+#include <sstream>
+#include <string>
+#include <vector>
+
+using namespace std;
+using namespace gtsam;
+using symbol_shorthand::X;
+using symbol_shorthand::V;
+using symbol_shorthand::B;
+
+struct IMUHelper {
+  IMUHelper() {
+    {
+      auto gaussian = noiseModel::Diagonal::Sigmas(
+          (Vector(6) << Vector3::Constant(5.0e-2), Vector3::Constant(5.0e-3))
+              .finished());
+      auto huber = noiseModel::Robust::Create(
+          noiseModel::mEstimator::Huber::Create(1.345), gaussian);
+
+      biasNoiseModel = huber;
+    }
+
+    {
+      auto gaussian = noiseModel::Isotropic::Sigma(3, 0.01);
+      auto huber = noiseModel::Robust::Create(
+          noiseModel::mEstimator::Huber::Create(1.345), gaussian);
+
+      velocityNoiseModel = huber;
+    }
+
+    // expect IMU to be rotated in image space co-ords
+    auto p = boost::make_shared<PreintegratedCombinedMeasurements::Params>(
+        Vector3(0.0, 9.8, 0.0));
+
+    p->accelerometerCovariance =
+        I_3x3 * pow(0.0565, 2.0);  // acc white noise in continuous
+    p->integrationCovariance =
+        I_3x3 * 1e-9;  // integration uncertainty continuous
+    p->gyroscopeCovariance =
+        I_3x3 * pow(4.0e-5, 2.0);  // gyro white noise in continuous
+    p->biasAccCovariance = I_3x3 * pow(0.00002, 2.0);  // acc bias in continuous
+    p->biasOmegaCovariance =
+        I_3x3 * pow(0.001, 2.0);  // gyro bias in continuous
+    p->biasAccOmegaInt = Matrix::Identity(6, 6) * 1e-5;
+
+    // body to IMU rotation
+    Rot3 iRb(0.036129, -0.998727, 0.035207,
+             0.045417, -0.033553, -0.998404,
+             0.998315, 0.037670, 0.044147);
+
+    // body to IMU translation (meters)
+    Point3 iTb(0.03, -0.025, -0.06);
+
+    // body in this example is the left camera
+    p->body_P_sensor = Pose3(iRb, iTb);
+
+    Rot3 prior_rotation = Rot3(I_3x3);
+    Pose3 prior_pose(prior_rotation, Point3(0, 0, 0));
+
+    Vector3 acc_bias(0.0, -0.0942015, 0.0);  // in camera frame
+    Vector3 gyro_bias(-0.00527483, -0.00757152, -0.00469968);
+
+    priorImuBias = imuBias::ConstantBias(acc_bias, gyro_bias);
+
+    prevState = NavState(prior_pose, Vector3(0, 0, 0));
+    propState = prevState;
+    prevBias = priorImuBias;
+
+    preintegrated = new PreintegratedCombinedMeasurements(p, priorImuBias);
+  }
+
+  imuBias::ConstantBias priorImuBias;  // assume zero initial bias
+  noiseModel::Robust::shared_ptr velocityNoiseModel;
+  noiseModel::Robust::shared_ptr biasNoiseModel;
+  NavState prevState;
+  NavState propState;
+  imuBias::ConstantBias prevBias;
+  PreintegratedCombinedMeasurements* preintegrated;
+};
+
+int main(int argc, char* argv[]) {
+  if (argc != 2) {
+    cout << "./ISAM2_SmartFactorStereo_IMU [data.txt]\n";
+    return 0;
+  }
+
+  ifstream in(argv[1]);
+
+  if (!in) {
+    cerr << "error opening: " << argv[1] << "\n";
+    return 1;
+  }
+
+  // Camera parameters
+  double fx = 822.37;
+  double fy = 822.37;
+  double cx = 538.73;
+  double cy = 579.10;
+  double baseline = 0.372;  // meters
+
+  Cal3_S2Stereo::shared_ptr K(new Cal3_S2Stereo(fx, fy, 0.0, cx, cy, baseline));
+
+  ISAM2Params parameters;
+  parameters.relinearizeThreshold = 0.1;
+  ISAM2 isam(parameters);
+
+  // Create a factor graph
+  std::map<size_t, SmartStereoProjectionPoseFactor::shared_ptr> smartFactors;
+  NonlinearFactorGraph graph;
+  Values initialEstimate;
+  IMUHelper imu;
+
+  // Pose prior - at identity
+  auto priorPoseNoise = noiseModel::Diagonal::Sigmas(
+      (Vector(6) << Vector3::Constant(0.1), Vector3::Constant(0.1)).finished());
+  graph.addPrior(X(1), Pose3::identity(), priorPoseNoise);
+  initialEstimate.insert(X(0), Pose3::identity());
+
+  // Bias prior
+  graph.addPrior(B(1), imu.priorImuBias,
+                                               imu.biasNoiseModel);
+  initialEstimate.insert(B(0), imu.priorImuBias);
+
+  // Velocity prior - assume stationary
+  graph.addPrior(V(1), Vector3(0, 0, 0), imu.velocityNoiseModel);
+  initialEstimate.insert(V(0), Vector3(0, 0, 0));
+
+  int lastFrame = 1;
+  int frame;
+
+  while (true) {
+    char line[1024];
+
+    in.getline(line, sizeof(line));
+    stringstream ss(line);
+    char type;
+
+    ss >> type;
+    ss >> frame;
+
+    if (frame != lastFrame || in.eof()) {
+      cout << "Running iSAM for frame: " << lastFrame << "\n";
+
+      initialEstimate.insert(X(lastFrame), Pose3::identity());
+      initialEstimate.insert(V(lastFrame), Vector3(0, 0, 0));
+      initialEstimate.insert(B(lastFrame), imu.prevBias);
+
+      CombinedImuFactor imuFactor(X(lastFrame - 1), V(lastFrame - 1),
+                                  X(lastFrame), V(lastFrame), B(lastFrame - 1),
+                                  B(lastFrame), *imu.preintegrated);
+
+      graph.add(imuFactor);
+
+      isam.update(graph, initialEstimate);
+
+      Values currentEstimate = isam.calculateEstimate();
+
+      imu.propState = imu.preintegrated->predict(imu.prevState, imu.prevBias);
+      imu.prevState = NavState(currentEstimate.at<Pose3>(X(lastFrame)),
+                               currentEstimate.at<Vector3>(V(lastFrame)));
+      imu.prevBias = currentEstimate.at<imuBias::ConstantBias>(B(lastFrame));
+      imu.preintegrated->resetIntegrationAndSetBias(imu.prevBias);
+
+      graph.resize(0);
+      initialEstimate.clear();
+
+      if (in.eof()) {
+        break;
+      }
+    }
+
+    if (type == 'i') {  // Process IMU measurement
+      double ax, ay, az;
+      double gx, gy, gz;
+      double dt = 1 / 800.0;  // IMU at ~800Hz
+
+      ss >> ax;
+      ss >> ay;
+      ss >> az;
+
+      ss >> gx;
+      ss >> gy;
+      ss >> gz;
+
+      Vector3 acc(ax, ay, az);
+      Vector3 gyr(gx, gy, gz);
+
+      imu.preintegrated->integrateMeasurement(acc, gyr, dt);
+    } else if (type == 's') {  // Process stereo measurement
+      int landmark;
+      double xl, xr, y;
+
+      ss >> landmark;
+      ss >> xl;
+      ss >> xr;
+      ss >> y;
+
+      if (smartFactors.count(landmark) == 0) {
+        auto gaussian = noiseModel::Isotropic::Sigma(3, 1.0);
+
+        SmartProjectionParams params(HESSIAN, ZERO_ON_DEGENERACY);
+
+        smartFactors[landmark] = SmartStereoProjectionPoseFactor::shared_ptr(
+            new SmartStereoProjectionPoseFactor(gaussian, params));
+        graph.push_back(smartFactors[landmark]);
+      }
+
+      smartFactors[landmark]->add(StereoPoint2(xl, xr, y), X(frame), K);
+    } else {
+      throw runtime_error("unexpected data type: " + string(1, type));
+    }
+
+    lastFrame = frame;
+  }
+
+  return 0;
+}
--- gtsam-4.1.0.orig/gtsam_unstable/examples/SmartRangeExample_plaza1.cpp
+++ gtsam-4.1.0/gtsam_unstable/examples/SmartRangeExample_plaza1.cpp
@@ -188,7 +188,8 @@ int main(int argc, char** argv) {
             smartFactors[j]->addRange(i, range);
             printf("adding range %g for %d",range,(int)j);
           } catch (const invalid_argument& e) {
-            printf("warning: omitting duplicate range %g for %d",range,(int)j);
+            printf("warning: omitting duplicate range %g for %d: %s", range,
+                   (int)j, e.what());
           }
           cout << endl;
         }
@@ -233,7 +234,7 @@ int main(int argc, char** argv) {
         }
       }
       countK = 0;
-      for(const Values::ConstFiltered<Point2>::KeyValuePair& it: result.filter<Point2>())
+      for(const auto it: result.filter<Point2>())
         os2 << it.key << "\t" << it.value.x() << "\t" << it.value.y() << "\t1"
             << endl;
       if (smart) {
@@ -256,7 +257,7 @@ int main(int argc, char** argv) {
   // Write result to file
   Values result = isam.calculateEstimate();
   ofstream os("rangeResult.txt");
-  for(const Values::ConstFiltered<Pose2>::KeyValuePair& it: result.filter<Pose2>())
+  for(const auto it: result.filter<Pose2>())
     os << it.key << "\t" << it.value.x() << "\t" << it.value.y() << "\t"
         << it.value.theta() << endl;
   exit(0);
--- gtsam-4.1.0.orig/gtsam_unstable/examples/SmartRangeExample_plaza2.cpp
+++ gtsam-4.1.0/gtsam_unstable/examples/SmartRangeExample_plaza2.cpp
@@ -202,11 +202,11 @@ int main(int argc, char** argv) {
   // Write result to file
   Values result = isam.calculateEstimate();
   ofstream os2("rangeResultLM.txt");
-  for(const Values::ConstFiltered<Point2>::KeyValuePair& it: result.filter<Point2>())
+  for(const auto it: result.filter<Point2>())
     os2 << it.key << "\t" << it.value.x() << "\t" << it.value.y() << "\t1"
         << endl;
   ofstream os("rangeResult.txt");
-  for(const Values::ConstFiltered<Pose2>::KeyValuePair& it: result.filter<Pose2>())
+  for(const auto it: result.filter<Pose2>())
     os << it.key << "\t" << it.value.x() << "\t" << it.value.y() << "\t"
         << it.value.theta() << endl;
   exit(0);
--- gtsam-4.1.0.orig/gtsam_unstable/gtsam_unstable.i
+++ gtsam-4.1.0/gtsam_unstable/gtsam_unstable.i
@@ -5,8 +5,6 @@
 // specify the classes from gtsam we are using
 virtual class gtsam::Value;
 class gtsam::Vector6;
-class gtsam::LieScalar;
-class gtsam::LieVector;
 class gtsam::Point2;
 class gtsam::Point2Vector;
 class gtsam::Rot2;
@@ -165,6 +163,7 @@ class BearingS2 {
   void serializable() const; // enabling serialization functionality
 };
 
+  
 #include <gtsam_unstable/geometry/SimWall2D.h>
 class SimWall2D {
   SimWall2D();
@@ -476,14 +475,12 @@ virtual class DGroundConstraint : gtsam:
   DGroundConstraint(size_t key, Vector constraint, const gtsam::noiseModel::Base* model);
 };
 
-#include <gtsam/base/deprecated/LieScalar.h>
-
 #include <gtsam_unstable/dynamics/VelocityConstraint3.h>
 virtual class VelocityConstraint3 : gtsam::NonlinearFactor {
   /** Standard constructor */
   VelocityConstraint3(size_t key1, size_t key2, size_t velKey, double dt);
 
-  Vector evaluateError(const gtsam::LieScalar& x1, const gtsam::LieScalar& x2, const gtsam::LieScalar& v) const;
+  Vector evaluateError(const double& x1, const double& x2, const double& v) const;
 };
 
 #include <gtsam_unstable/dynamics/Pendulum.h>
@@ -491,7 +488,7 @@ virtual class PendulumFactor1 : gtsam::N
   /** Standard constructor */
   PendulumFactor1(size_t k1, size_t k, size_t velKey, double dt);
 
-  Vector evaluateError(const gtsam::LieScalar& qk1, const gtsam::LieScalar& qk, const gtsam::LieScalar& v) const;
+  Vector evaluateError(const double& qk1, const double& qk, const double& v) const;
 };
 
 #include <gtsam_unstable/dynamics/Pendulum.h>
@@ -499,21 +496,21 @@ virtual class PendulumFactor2 : gtsam::N
   /** Standard constructor */
   PendulumFactor2(size_t vk1, size_t vk, size_t qKey, double dt, double L, double g);
 
-  Vector evaluateError(const gtsam::LieScalar& vk1, const gtsam::LieScalar& vk, const gtsam::LieScalar& q) const;
+  Vector evaluateError(const double& vk1, const double& vk, const double& q) const;
 };
 
 virtual class PendulumFactorPk : gtsam::NonlinearFactor {
   /** Standard constructor */
   PendulumFactorPk(size_t pk, size_t qk, size_t qk1, double h, double m, double r, double g, double alpha);
 
-  Vector evaluateError(const gtsam::LieScalar& pk, const gtsam::LieScalar& qk, const gtsam::LieScalar& qk1) const;
+  Vector evaluateError(const double& pk, const double& qk, const double& qk1) const;
 };
 
 virtual class PendulumFactorPk1 : gtsam::NonlinearFactor {
   /** Standard constructor */
   PendulumFactorPk1(size_t pk1, size_t qk, size_t qk1, double h, double m, double r, double g, double alpha);
 
-  Vector evaluateError(const gtsam::LieScalar& pk1, const gtsam::LieScalar& qk, const gtsam::LieScalar& qk1) const;
+  Vector evaluateError(const double& pk1, const double& qk, const double& qk1) const;
 };
 
 #include <gtsam_unstable/dynamics/SimpleHelicopter.h>
--- gtsam-4.1.0.orig/gtsam_unstable/linear/ActiveSetSolver-inl.h
+++ gtsam-4.1.0/gtsam_unstable/linear/ActiveSetSolver-inl.h
@@ -149,7 +149,7 @@ Template JacobianFactor::shared_ptr This
     // to compute the least-square approximation of dual variables
     return boost::make_shared<JacobianFactor>(Aterms, b);
   } else {
-    return boost::make_shared<JacobianFactor>();
+    return nullptr;
   }
 }
 
@@ -165,14 +165,13 @@ Template JacobianFactor::shared_ptr This
  *  if lambda = 0  you are on the constraint
  *  if lambda > 0  you are violating the constraint.
  */
-Template GaussianFactorGraph::shared_ptr This::buildDualGraph(
+Template GaussianFactorGraph This::buildDualGraph(
     const InequalityFactorGraph& workingSet, const VectorValues& delta) const {
-  GaussianFactorGraph::shared_ptr dualGraph(new GaussianFactorGraph());
+  GaussianFactorGraph dualGraph;
   for (Key key : constrainedKeys_) {
     // Each constrained key becomes a factor in the dual graph
-    JacobianFactor::shared_ptr dualFactor =
-        createDualFactor(key, workingSet, delta);
-    if (!dualFactor->empty()) dualGraph->push_back(dualFactor);
+    auto dualFactor = createDualFactor(key, workingSet, delta);
+    if (dualFactor) dualGraph.push_back(dualFactor);
   }
   return dualGraph;
 }
@@ -193,19 +192,16 @@ This::buildWorkingGraph(const Inequality
 Template typename This::State This::iterate(
     const typename This::State& state) const {
   // Algorithm 16.3 from Nocedal06book.
-  // Solve with the current working set eqn 16.39, but instead of solving for p
-  // solve for x
-  GaussianFactorGraph workingGraph =
-      buildWorkingGraph(state.workingSet, state.values);
+  // Solve with the current working set eqn 16.39, but solve for x not p
+  auto workingGraph = buildWorkingGraph(state.workingSet, state.values);
   VectorValues newValues = workingGraph.optimize();
   // If we CAN'T move further
   // if p_k = 0 is the original condition, modified by Duy to say that the state
   // update is zero.
   if (newValues.equals(state.values, 1e-7)) {
     // Compute lambda from the dual graph
-    GaussianFactorGraph::shared_ptr dualGraph = buildDualGraph(state.workingSet,
-        newValues);
-    VectorValues duals = dualGraph->optimize();
+    auto dualGraph = buildDualGraph(state.workingSet, newValues);
+    VectorValues duals = dualGraph.optimize();
     int leavingFactor = identifyLeavingConstraint(state.workingSet, duals);
     // If all inequality constraints are satisfied: We have the solution!!
     if (leavingFactor < 0) {
--- gtsam-4.1.0.orig/gtsam_unstable/linear/ActiveSetSolver.h
+++ gtsam-4.1.0/gtsam_unstable/linear/ActiveSetSolver.h
@@ -154,8 +154,8 @@ protected:
 public: /// Just for testing...
 
   /// Builds a dual graph from the current working set.
-  GaussianFactorGraph::shared_ptr buildDualGraph(
-      const InequalityFactorGraph& workingSet, const VectorValues& delta) const;
+  GaussianFactorGraph buildDualGraph(const InequalityFactorGraph &workingSet,
+                                     const VectorValues &delta) const;
 
   /**
    * Build a working graph of cost, equality and active inequality constraints
--- gtsam-4.1.0.orig/gtsam_unstable/linear/EqualityFactorGraph.h
+++ gtsam-4.1.0/gtsam_unstable/linear/EqualityFactorGraph.h
@@ -31,6 +31,11 @@ class EqualityFactorGraph: public Factor
 public:
   typedef boost::shared_ptr<EqualityFactorGraph> shared_ptr;
 
+  /// Add a linear inequality, forwards arguments to LinearInequality.
+  template <class... Args> void add(Args &&... args) {
+    emplace_shared<LinearEquality>(std::forward<Args>(args)...);
+  }
+
   /// Compute error of a guess.
   double error(const VectorValues& x) const {
     double total_error = 0.;
--- gtsam-4.1.0.orig/gtsam_unstable/linear/InequalityFactorGraph.h
+++ gtsam-4.1.0/gtsam_unstable/linear/InequalityFactorGraph.h
@@ -47,6 +47,11 @@ public:
     return Base::equals(other, tol);
   }
 
+  /// Add a linear inequality, forwards arguments to LinearInequality.
+  template <class... Args> void add(Args &&... args) {
+    emplace_shared<LinearInequality>(std::forward<Args>(args)...);
+  }
+
   /**
    * Compute error of a guess.
    * Infinity error if it violates an inequality; zero otherwise. */
--- gtsam-4.1.0.orig/gtsam_unstable/linear/InfeasibleInitialValues.h
+++ gtsam-4.1.0/gtsam_unstable/linear/InfeasibleInitialValues.h
@@ -29,7 +29,7 @@ public:
   InfeasibleInitialValues() {
   }
 
-  virtual ~InfeasibleInitialValues() noexcept {
+  ~InfeasibleInitialValues() noexcept override {
   }
 
   const char *what() const noexcept override {
--- gtsam-4.1.0.orig/gtsam_unstable/linear/InfeasibleOrUnboundedProblem.h
+++ gtsam-4.1.0/gtsam_unstable/linear/InfeasibleOrUnboundedProblem.h
@@ -25,7 +25,7 @@ class InfeasibleOrUnboundedProblem: publ
 public:
   InfeasibleOrUnboundedProblem() {
   }
-  virtual ~InfeasibleOrUnboundedProblem() noexcept {
+  ~InfeasibleOrUnboundedProblem() noexcept override {
   }
 
   const char* what() const noexcept override {
--- gtsam-4.1.0.orig/gtsam_unstable/linear/LPInitSolver.h
+++ gtsam-4.1.0/gtsam_unstable/linear/LPInitSolver.h
@@ -21,7 +21,6 @@
 
 #include <gtsam_unstable/linear/LP.h>
 #include <gtsam/linear/GaussianFactorGraph.h>
-#include <CppUnitLite/Test.h>
 
 namespace gtsam {
 /**
@@ -83,7 +82,7 @@ private:
       const InequalityFactorGraph& inequalities) const;
 
   // friend class for unit-testing private methods
-  FRIEND_TEST(LPInitSolver, initialization);
+  friend class LPInitSolverInitializationTest;
 };
 
 }
--- gtsam-4.1.0.orig/gtsam_unstable/linear/LinearCost.h
+++ gtsam-4.1.0/gtsam_unstable/linear/LinearCost.h
@@ -84,7 +84,7 @@ public:
   }
 
   /** Virtual destructor */
-  virtual ~LinearCost() {
+  ~LinearCost() override {
   }
 
   /** equals */
--- gtsam-4.1.0.orig/gtsam_unstable/linear/LinearEquality.h
+++ gtsam-4.1.0/gtsam_unstable/linear/LinearEquality.h
@@ -85,7 +85,7 @@ public:
   }
 
   /** Virtual destructor */
-  virtual ~LinearEquality() {
+  ~LinearEquality() override {
   }
 
   /** equals */
--- gtsam-4.1.0.orig/gtsam_unstable/linear/LinearInequality.h
+++ gtsam-4.1.0/gtsam_unstable/linear/LinearInequality.h
@@ -96,7 +96,7 @@ public:
   }
 
   /** Virtual destructor */
-  virtual ~LinearInequality() {
+  ~LinearInequality() override {
   }
 
   /** equals */
--- gtsam-4.1.0.orig/gtsam_unstable/linear/QPSParser.cpp
+++ gtsam-4.1.0/gtsam_unstable/linear/QPSParser.cpp
@@ -81,7 +81,7 @@ class QPSVisitor {
       varname_to_key;  // Variable QPS string name to key
   std::unordered_map<Key, std::unordered_map<Key, Matrix11>>
       H;                 // H from hessian
-  double f;              // Constant term of quadratic cost
+  double f = 0;          // Constant term of quadratic cost
   std::string obj_name;  // the objective function has a name in the QPS
   std::string name_;     // the quadratic program has a name in the QPS
   std::unordered_map<Key, double>
@@ -175,10 +175,11 @@ class QPSVisitor {
     string var_ = fromChars<1>(vars);
     string row_ = fromChars<3>(vars);
     double coefficient = at_c<5>(vars);
-    if (row_ == obj_name)
+    if (row_ == obj_name) {
       f = -coefficient;
-    else
+    } else {
       b[row_] = coefficient;
+    }
 
     if (debug) {
       cout << "Added RHS for Var: " << var_ << " Row: " << row_
@@ -194,15 +195,17 @@ class QPSVisitor {
     string row2_ = fromChars<7>(vars);
     double coefficient1 = at_c<5>(vars);
     double coefficient2 = at_c<9>(vars);
-    if (row1_ == obj_name)
+    if (row1_ == obj_name) {
       f = -coefficient1;
-    else
+    } else {
       b[row1_] = coefficient1;
+    }
 
-    if (row2_ == obj_name)
+    if (row2_ == obj_name) {
       f = -coefficient2;
-    else
+    } else {
       b[row2_] = coefficient2;
+    }
 
     if (debug) {
       cout << "Added RHS for Var: " << var_ << " Row: " << row1_
--- gtsam-4.1.0.orig/gtsam_unstable/linear/QPSParserException.h
+++ gtsam-4.1.0/gtsam_unstable/linear/QPSParserException.h
@@ -25,7 +25,7 @@ public:
   QPSParserException() {
   }
 
-  virtual ~QPSParserException() noexcept {
+  ~QPSParserException() noexcept override {
   }
 
   const char *what() const noexcept override {
--- gtsam-4.1.0.orig/gtsam_unstable/linear/tests/testLPSolver.cpp
+++ gtsam-4.1.0/gtsam_unstable/linear/tests/testLPSolver.cpp
@@ -16,21 +16,23 @@
  * @author Duy-Nguyen Ta
  */
 
+#include <gtsam_unstable/linear/LPInitSolver.h>
+#include <gtsam_unstable/linear/LPSolver.h>
+
 #include <gtsam/base/Testable.h>
-#include <gtsam/inference/Symbol.h>
 #include <gtsam/inference/FactorGraph-inst.h>
-#include <gtsam/linear/VectorValues.h>
+#include <gtsam/inference/Symbol.h>
 #include <gtsam/linear/GaussianFactorGraph.h>
+#include <gtsam/linear/VectorValues.h>
 #include <gtsam_unstable/linear/EqualityFactorGraph.h>
 #include <gtsam_unstable/linear/InequalityFactorGraph.h>
 #include <gtsam_unstable/linear/InfeasibleInitialValues.h>
+
 #include <CppUnitLite/TestHarness.h>
+
 #include <boost/foreach.hpp>
 #include <boost/range/adaptor/map.hpp>
 
-#include <gtsam_unstable/linear/LPSolver.h>
-#include <gtsam_unstable/linear/LPInitSolver.h>
-
 using namespace std;
 using namespace gtsam;
 using namespace gtsam::symbol_shorthand;
@@ -47,37 +49,27 @@ static const Vector kOne = Vector::Ones(
  */
 LP simpleLP1() {
   LP lp;
-  lp.cost = LinearCost(1, Vector2(-1., -1.));  // min -x1-x2 (max x1+x2)
-  lp.inequalities.push_back(
-      LinearInequality(1, Vector2(-1, 0), 0, 1));  // x1 >= 0
-  lp.inequalities.push_back(
-      LinearInequality(1, Vector2(0, -1), 0, 2));  //  x2 >= 0
-  lp.inequalities.push_back(
-      LinearInequality(1, Vector2(1, 2), 4, 3));  //  x1 + 2*x2 <= 4
-  lp.inequalities.push_back(
-      LinearInequality(1, Vector2(4, 2), 12, 4));  //  4x1 + 2x2 <= 12
-  lp.inequalities.push_back(
-      LinearInequality(1, Vector2(-1, 1), 1, 5));  //  -x1 + x2 <= 1
+  lp.cost = LinearCost(1, Vector2(-1., -1.));   // min -x1-x2 (max x1+x2)
+  lp.inequalities.add(1, Vector2(-1, 0), 0, 1); // x1 >= 0
+  lp.inequalities.add(1, Vector2(0, -1), 0, 2); //  x2 >= 0
+  lp.inequalities.add(1, Vector2(1, 2), 4, 3);  //  x1 + 2*x2 <= 4
+  lp.inequalities.add(1, Vector2(4, 2), 12, 4); //  4x1 + 2x2 <= 12
+  lp.inequalities.add(1, Vector2(-1, 1), 1, 5); //  -x1 + x2 <= 1
   return lp;
 }
 
 /* ************************************************************************* */
 namespace gtsam {
 
-TEST(LPInitSolver, infinite_loop_single_var) {
-  LP initchecker;
-  initchecker.cost = LinearCost(1, Vector3(0, 0, 1));  // min alpha
-  initchecker.inequalities.push_back(
-      LinearInequality(1, Vector3(-2, -1, -1), -2, 1));  //-2x-y-alpha <= -2
-  initchecker.inequalities.push_back(
-      LinearInequality(1, Vector3(-1, 2, -1), 6, 2));  // -x+2y-alpha <= 6
-  initchecker.inequalities.push_back(
-      LinearInequality(1, Vector3(-1, 0, -1), 0, 3));  // -x - alpha <= 0
-  initchecker.inequalities.push_back(
-      LinearInequality(1, Vector3(1, 0, -1), 20, 4));  // x - alpha <= 20
-  initchecker.inequalities.push_back(
-      LinearInequality(1, Vector3(0, -1, -1), 0, 5));  // -y - alpha <= 0
-  LPSolver solver(initchecker);
+TEST(LPInitSolver, InfiniteLoopSingleVar) {
+  LP lp;
+  lp.cost = LinearCost(1, Vector3(0, 0, 1));          // min alpha
+  lp.inequalities.add(1, Vector3(-2, -1, -1), -2, 1); //-2x-y-a <= -2
+  lp.inequalities.add(1, Vector3(-1, 2, -1), 6, 2);   // -x+2y-a <= 6
+  lp.inequalities.add(1, Vector3(-1, 0, -1), 0, 3);   // -x - a <= 0
+  lp.inequalities.add(1, Vector3(1, 0, -1), 20, 4);   // x - a <= 20
+  lp.inequalities.add(1, Vector3(0, -1, -1), 0, 5);   // -y - a <= 0
+  LPSolver solver(lp);
   VectorValues starter;
   starter.insert(1, Vector3(0, 0, 2));
   VectorValues results, duals;
@@ -87,25 +79,23 @@ TEST(LPInitSolver, infinite_loop_single_
   CHECK(assert_equal(results, expected, 1e-7));
 }
 
-TEST(LPInitSolver, infinite_loop_multi_var) {
-  LP initchecker;
+TEST(LPInitSolver, InfiniteLoopMultiVar) {
+  LP lp;
   Key X = symbol('X', 1);
   Key Y = symbol('Y', 1);
   Key Z = symbol('Z', 1);
-  initchecker.cost = LinearCost(Z, kOne);  // min alpha
-  initchecker.inequalities.push_back(
-      LinearInequality(X, -2.0 * kOne, Y, -1.0 * kOne, Z, -1.0 * kOne, -2,
-                       1));  //-2x-y-alpha <= -2
-  initchecker.inequalities.push_back(
-      LinearInequality(X, -1.0 * kOne, Y, 2.0 * kOne, Z, -1.0 * kOne, 6,
-                       2));  // -x+2y-alpha <= 6
-  initchecker.inequalities.push_back(LinearInequality(
-      X, -1.0 * kOne, Z, -1.0 * kOne, 0, 3));  // -x - alpha <= 0
-  initchecker.inequalities.push_back(LinearInequality(
-      X, 1.0 * kOne, Z, -1.0 * kOne, 20, 4));  // x - alpha <= 20
-  initchecker.inequalities.push_back(LinearInequality(
-      Y, -1.0 * kOne, Z, -1.0 * kOne, 0, 5));  // -y - alpha <= 0
-  LPSolver solver(initchecker);
+  lp.cost = LinearCost(Z, kOne); // min alpha
+  lp.inequalities.add(X, -2.0 * kOne, Y, -1.0 * kOne, Z, -1.0 * kOne, -2,
+                      1); //-2x-y-alpha <= -2
+  lp.inequalities.add(X, -1.0 * kOne, Y, 2.0 * kOne, Z, -1.0 * kOne, 6,
+                      2); // -x+2y-alpha <= 6
+  lp.inequalities.add(X, -1.0 * kOne, Z, -1.0 * kOne, 0,
+                      3); // -x - alpha <= 0
+  lp.inequalities.add(X, 1.0 * kOne, Z, -1.0 * kOne, 20,
+                      4); // x - alpha <= 20
+  lp.inequalities.add(Y, -1.0 * kOne, Z, -1.0 * kOne, 0,
+                      5); // -y - alpha <= 0
+  LPSolver solver(lp);
   VectorValues starter;
   starter.insert(X, kZero);
   starter.insert(Y, kZero);
@@ -119,7 +109,7 @@ TEST(LPInitSolver, infinite_loop_multi_v
   CHECK(assert_equal(results, expected, 1e-7));
 }
 
-TEST(LPInitSolver, initialization) {
+TEST(LPInitSolver, Initialization) {
   LP lp = simpleLP1();
   LPInitSolver initSolver(lp);
 
@@ -138,19 +128,19 @@ TEST(LPInitSolver, initialization) {
   LP::shared_ptr initLP = initSolver.buildInitialLP(yKey);
   LP expectedInitLP;
   expectedInitLP.cost = LinearCost(yKey, kOne);
-  expectedInitLP.inequalities.push_back(LinearInequality(
-      1, Vector2(-1, 0), 2, Vector::Constant(1, -1), 0, 1));  // -x1 - y <= 0
-  expectedInitLP.inequalities.push_back(LinearInequality(
-      1, Vector2(0, -1), 2, Vector::Constant(1, -1), 0, 2));  // -x2 - y <= 0
-  expectedInitLP.inequalities.push_back(
-      LinearInequality(1, Vector2(1, 2), 2, Vector::Constant(1, -1), 4,
-                       3));  //  x1 + 2*x2 - y <= 4
-  expectedInitLP.inequalities.push_back(
-      LinearInequality(1, Vector2(4, 2), 2, Vector::Constant(1, -1), 12,
-                       4));  //  4x1 + 2x2 - y <= 12
-  expectedInitLP.inequalities.push_back(
-      LinearInequality(1, Vector2(-1, 1), 2, Vector::Constant(1, -1), 1,
-                       5));  //  -x1 + x2 - y <= 1
+  expectedInitLP.inequalities.add(1, Vector2(-1, 0), 2, Vector::Constant(1, -1),
+                                  0, 1); // -x1 - y <= 0
+  expectedInitLP.inequalities.add(1, Vector2(0, -1), 2, Vector::Constant(1, -1),
+                                  0, 2); // -x2 - y <= 0
+  expectedInitLP.inequalities.add(1, Vector2(1, 2), 2, Vector::Constant(1, -1),
+                                  4,
+                                  3); //  x1 + 2*x2 - y <= 4
+  expectedInitLP.inequalities.add(1, Vector2(4, 2), 2, Vector::Constant(1, -1),
+                                  12,
+                                  4); //  4x1 + 2x2 - y <= 12
+  expectedInitLP.inequalities.add(1, Vector2(-1, 1), 2, Vector::Constant(1, -1),
+                                  1,
+                                  5); //  -x1 + x2 - y <= 1
   CHECK(assert_equal(expectedInitLP, *initLP, 1e-10));
   LPSolver lpSolveInit(*initLP);
   VectorValues xy0(x0);
@@ -164,7 +154,7 @@ TEST(LPInitSolver, initialization) {
   VectorValues x = initSolver.solve();
   CHECK(lp.isFeasible(x));
 }
-}
+} // namespace gtsam
 
 /* ************************************************************************* */
 /**
@@ -173,28 +163,24 @@ TEST(LPInitSolver, initialization) {
  *  x - y = 5
  *  x + 2y = 6
  */
-TEST(LPSolver, overConstrainedLinearSystem) {
+TEST(LPSolver, OverConstrainedLinearSystem) {
   GaussianFactorGraph graph;
   Matrix A1 = Vector3(1, 1, 1);
   Matrix A2 = Vector3(1, -1, 2);
   Vector b = Vector3(1, 5, 6);
-  JacobianFactor factor(1, A1, 2, A2, b, noiseModel::Constrained::All(3));
-  graph.push_back(factor);
+  graph.add(1, A1, 2, A2, b, noiseModel::Constrained::All(3));
 
   VectorValues x = graph.optimize();
   // This check confirms that gtsam linear constraint solver can't handle
   // over-constrained system
-  CHECK(factor.error(x) != 0.0);
+  CHECK(graph[0]->error(x) != 0.0);
 }
 
 TEST(LPSolver, overConstrainedLinearSystem2) {
   GaussianFactorGraph graph;
-  graph.emplace_shared<JacobianFactor>(1, I_1x1, 2, I_1x1, kOne,
-                                 noiseModel::Constrained::All(1));
-  graph.emplace_shared<JacobianFactor>(1, I_1x1, 2, -I_1x1, 5 * kOne,
-                                 noiseModel::Constrained::All(1));
-  graph.emplace_shared<JacobianFactor>(1, I_1x1, 2, 2 * I_1x1, 6 * kOne,
-                                 noiseModel::Constrained::All(1));
+  graph.add(1, I_1x1, 2, I_1x1, kOne, noiseModel::Constrained::All(1));
+  graph.add(1, I_1x1, 2, -I_1x1, 5 * kOne, noiseModel::Constrained::All(1));
+  graph.add(1, I_1x1, 2, 2 * I_1x1, 6 * kOne, noiseModel::Constrained::All(1));
   VectorValues x = graph.optimize();
   // This check confirms that gtsam linear constraint solver can't handle
   // over-constrained system
@@ -202,7 +188,7 @@ TEST(LPSolver, overConstrainedLinearSyst
 }
 
 /* ************************************************************************* */
-TEST(LPSolver, simpleTest1) {
+TEST(LPSolver, SimpleTest1) {
   LP lp = simpleLP1();
   LPSolver lpSolver(lp);
   VectorValues init;
@@ -222,7 +208,7 @@ TEST(LPSolver, simpleTest1) {
 }
 
 /* ************************************************************************* */
-TEST(LPSolver, testWithoutInitialValues) {
+TEST(LPSolver, TestWithoutInitialValues) {
   LP lp = simpleLP1();
   LPSolver lpSolver(lp);
   VectorValues result, duals, expectedResult;
--- gtsam-4.1.0.orig/gtsam_unstable/linear/tests/testQPSolver.cpp
+++ gtsam-4.1.0/gtsam_unstable/linear/tests/testQPSolver.cpp
@@ -17,10 +17,12 @@
  * @author Ivan Dario Jimenez
  */
 
+#include <gtsam_unstable/linear/QPSParser.h>
+#include <gtsam_unstable/linear/QPSolver.h>
+
 #include <gtsam/base/Testable.h>
 #include <gtsam/inference/Symbol.h>
-#include <gtsam_unstable/linear/QPSolver.h>
-#include <gtsam_unstable/linear/QPSParser.h>
+
 #include <CppUnitLite/TestHarness.h>
 
 using namespace std;
@@ -40,15 +42,15 @@ QP createTestCase() {
   // Hence, we have G11=2, G12 = -1, g1 = +3, G22 = 2, g2 = 0, f = 10
   //TODO:  THIS TEST MIGHT BE WRONG : the last parameter  might be 5 instead of 10 because the form of the equation
   // Should be 0.5x'Gx + gx + f : Nocedal 449
-  qp.cost.push_back(
-      HessianFactor(X(1), X(2), 2.0 * I_1x1, -I_1x1, 3.0 * I_1x1, 2.0 * I_1x1,
-          Z_1x1, 10.0));
+  qp.cost.push_back(HessianFactor(X(1), X(2), 2.0 * I_1x1, -I_1x1, 3.0 * I_1x1,
+                                  2.0 * I_1x1, Z_1x1, 10.0));
 
   // Inequality constraints
-  qp.inequalities.push_back(LinearInequality(X(1), I_1x1, X(2), I_1x1, 2, 0)); // x1 + x2 <= 2 --> x1 + x2 -2 <= 0, --> b=2
-  qp.inequalities.push_back(LinearInequality(X(1), -I_1x1, 0, 1)); // -x1     <= 0
-  qp.inequalities.push_back(LinearInequality(X(2), -I_1x1, 0, 2)); //    -x2  <= 0
-  qp.inequalities.push_back(LinearInequality(X(1), I_1x1, 1.5, 3)); // x1      <= 3/2
+  qp.inequalities.add(X(1), I_1x1, X(2), I_1x1, 2,
+                      0); // x1 + x2 <= 2 --> x1 + x2 -2 <= 0, --> b=2
+  qp.inequalities.add(X(1), -I_1x1, 0, 1);  // -x1     <= 0
+  qp.inequalities.add(X(2), -I_1x1, 0, 2);  //    -x2  <= 0
+  qp.inequalities.add(X(1), I_1x1, 1.5, 3); // x1      <= 3/2
 
   return qp;
 }
@@ -94,16 +96,15 @@ QP createEqualityConstrainedTest() {
   // Note the Hessian encodes:
   //        0.5*x1'*G11*x1 + x1'*G12*x2 + 0.5*x2'*G22*x2 - x1'*g1 - x2'*g2 + 0.5*f
   // Hence, we have G11=2, G12 = 0, g1 = 0, G22 = 2, g2 = 0, f = 0
-  qp.cost.push_back(
-      HessianFactor(X(1), X(2), 2.0 * I_1x1, Z_1x1, Z_1x1, 2.0 * I_1x1, Z_1x1,
-          0.0));
+  qp.cost.push_back(HessianFactor(X(1), X(2), 2.0 * I_1x1, Z_1x1, Z_1x1,
+                                  2.0 * I_1x1, Z_1x1, 0.0));
 
   // Equality constraints
   // x1 + x2 = 1 --> x1 + x2 -1 = 0, hence we negate the b vector
   Matrix A1 = I_1x1;
   Matrix A2 = I_1x1;
   Vector b = -kOne;
-  qp.equalities.push_back(LinearEquality(X(1), A1, X(2), A2, b, 0));
+  qp.equalities.add(X(1), A1, X(2), A2, b, 0);
 
   return qp;
 }
@@ -118,9 +119,8 @@ TEST(QPSolver, dual) {
 
   QPSolver solver(qp);
 
-  GaussianFactorGraph::shared_ptr dualGraph = solver.buildDualGraph(
-      qp.inequalities, initialValues);
-  VectorValues dual = dualGraph->optimize();
+  auto dualGraph = solver.buildDualGraph(qp.inequalities, initialValues);
+  VectorValues dual = dualGraph.optimize();
   VectorValues expectedDual;
   expectedDual.insert(0, (Vector(1) << 2.0).finished());
   CHECK(assert_equal(expectedDual, dual, 1e-10));
@@ -135,19 +135,19 @@ TEST(QPSolver, indentifyActiveConstraint
   currentSolution.insert(X(1), Z_1x1);
   currentSolution.insert(X(2), Z_1x1);
 
-  InequalityFactorGraph workingSet = solver.identifyActiveConstraints(
-      qp.inequalities, currentSolution);
+  auto workingSet =
+      solver.identifyActiveConstraints(qp.inequalities, currentSolution);
 
   CHECK(!workingSet.at(0)->active()); // inactive
-  CHECK(workingSet.at(1)->active());// active
-  CHECK(workingSet.at(2)->active());// active
-  CHECK(!workingSet.at(3)->active());// inactive
+  CHECK(workingSet.at(1)->active());  // active
+  CHECK(workingSet.at(2)->active());  // active
+  CHECK(!workingSet.at(3)->active()); // inactive
 
   VectorValues solution = solver.buildWorkingGraph(workingSet).optimize();
-  VectorValues expectedSolution;
-  expectedSolution.insert(X(1), kZero);
-  expectedSolution.insert(X(2), kZero);
-  CHECK(assert_equal(expectedSolution, solution, 1e-100));
+  VectorValues expected;
+  expected.insert(X(1), kZero);
+  expected.insert(X(2), kZero);
+  CHECK(assert_equal(expected, solution, 1e-100));
 }
 
 /* ************************************************************************* */
@@ -159,24 +159,24 @@ TEST(QPSolver, iterate) {
   currentSolution.insert(X(1), Z_1x1);
   currentSolution.insert(X(2), Z_1x1);
 
-  std::vector<VectorValues> expectedSolutions(4), expectedDuals(4);
-  expectedSolutions[0].insert(X(1), kZero);
-  expectedSolutions[0].insert(X(2), kZero);
+  std::vector<VectorValues> expected(4), expectedDuals(4);
+  expected[0].insert(X(1), kZero);
+  expected[0].insert(X(2), kZero);
   expectedDuals[0].insert(1, (Vector(1) << 3).finished());
   expectedDuals[0].insert(2, kZero);
 
-  expectedSolutions[1].insert(X(1), (Vector(1) << 1.5).finished());
-  expectedSolutions[1].insert(X(2), kZero);
+  expected[1].insert(X(1), (Vector(1) << 1.5).finished());
+  expected[1].insert(X(2), kZero);
   expectedDuals[1].insert(3, (Vector(1) << 1.5).finished());
 
-  expectedSolutions[2].insert(X(1), (Vector(1) << 1.5).finished());
-  expectedSolutions[2].insert(X(2), (Vector(1) << 0.75).finished());
+  expected[2].insert(X(1), (Vector(1) << 1.5).finished());
+  expected[2].insert(X(2), (Vector(1) << 0.75).finished());
 
-  expectedSolutions[3].insert(X(1), (Vector(1) << 1.5).finished());
-  expectedSolutions[3].insert(X(2), (Vector(1) << 0.5).finished());
+  expected[3].insert(X(1), (Vector(1) << 1.5).finished());
+  expected[3].insert(X(2), (Vector(1) << 0.5).finished());
 
-  InequalityFactorGraph workingSet = solver.identifyActiveConstraints(
-      qp.inequalities, currentSolution);
+  auto workingSet =
+      solver.identifyActiveConstraints(qp.inequalities, currentSolution);
 
   QPSolver::State state(currentSolution, VectorValues(), workingSet, false,
                         100);
@@ -188,12 +188,12 @@ TEST(QPSolver, iterate) {
     // Forst10book do not follow exactly what we implemented from Nocedal06book.
     // Specifically, we do not re-identify active constraints and
     // do not recompute dual variables after every step!!!
-//    CHECK(assert_equal(expectedSolutions[it], state.values, 1e-10));
-//    CHECK(assert_equal(expectedDuals[it], state.duals, 1e-10));
+    //    CHECK(assert_equal(expected[it], state.values, 1e-10));
+    //    CHECK(assert_equal(expectedDuals[it], state.duals, 1e-10));
     it++;
   }
 
-  CHECK(assert_equal(expectedSolutions[3], state.values, 1e-10));
+  CHECK(assert_equal(expected[3], state.values, 1e-10));
 }
 
 /* ************************************************************************* */
@@ -204,182 +204,161 @@ TEST(QPSolver, optimizeForst10book_pg171
   VectorValues initialValues;
   initialValues.insert(X(1), Z_1x1);
   initialValues.insert(X(2), Z_1x1);
-  VectorValues solution;
-  boost::tie(solution, boost::tuples::ignore) = solver.optimize(initialValues);
-  VectorValues expectedSolution;
-  expectedSolution.insert(X(1), (Vector(1) << 1.5).finished());
-  expectedSolution.insert(X(2), (Vector(1) << 0.5).finished());
-  CHECK(assert_equal(expectedSolution, solution, 1e-100));
+  VectorValues solution = solver.optimize(initialValues).first;
+  VectorValues expected;
+  expected.insert(X(1), (Vector(1) << 1.5).finished());
+  expected.insert(X(2), (Vector(1) << 0.5).finished());
+  CHECK(assert_equal(expected, solution, 1e-100));
 }
 
 pair<QP, QP> testParser(QPSParser parser) {
   QP exampleqp = parser.Parse();
-  QP expectedqp;
+  QP expected;
   Key X1(Symbol('X', 1)), X2(Symbol('X', 2));
   // min f(x,y) = 4 + 1.5x -y + 0.58x^2 + 2xy + 2yx + 10y^2
-  expectedqp.cost.push_back(
-      HessianFactor(X1, X2, 8.0 * I_1x1, 2.0 * I_1x1, -1.5 * kOne, 10.0 * I_1x1,
-          2.0 * kOne, 8.0));
-  // 2x + y >= 2
-  // -x + 2y <= 6
-  expectedqp.inequalities.push_back(
-      LinearInequality(X1, -2.0 * I_1x1, X2, -I_1x1, -2, 0));
-  expectedqp.inequalities.push_back(
-      LinearInequality(X1, -I_1x1, X2, 2.0 * I_1x1, 6, 1));
-  // x<= 20
-  expectedqp.inequalities.push_back(LinearInequality(X1, I_1x1, 20, 4));
-  //x >= 0
-  expectedqp.inequalities.push_back(LinearInequality(X1, -I_1x1, 0, 2));
-  // y > = 0
-  expectedqp.inequalities.push_back(LinearInequality(X2, -I_1x1, 0, 3));
-  return std::make_pair(expectedqp, exampleqp);
-}
-;
+  expected.cost.push_back(HessianFactor(X1, X2, 8.0 * I_1x1, 2.0 * I_1x1,
+                                        -1.5 * kOne, 10.0 * I_1x1, 2.0 * kOne,
+                                        8.0));
+
+  expected.inequalities.add(X1, -2.0 * I_1x1, X2, -I_1x1, -2, 0); // 2x + y >= 2
+  expected.inequalities.add(X1, -I_1x1, X2, 2.0 * I_1x1, 6, 1); // -x + 2y <= 6
+  expected.inequalities.add(X1, I_1x1, 20, 4);                  // x<= 20
+  expected.inequalities.add(X1, -I_1x1, 0, 2);                  // x >= 0
+  expected.inequalities.add(X2, -I_1x1, 0, 3);                  // y > = 0
+  return {expected, exampleqp};
+};
 
 TEST(QPSolver, ParserSyntaticTest) {
-  auto expectedActual = testParser(QPSParser("QPExample.QPS"));
-  CHECK(assert_equal(expectedActual.first.cost, expectedActual.second.cost,
+  auto result = testParser(QPSParser("QPExample.QPS"));
+  CHECK(assert_equal(result.first.cost, result.second.cost, 1e-7));
+  CHECK(assert_equal(result.first.inequalities, result.second.inequalities,
                      1e-7));
-  CHECK(assert_equal(expectedActual.first.inequalities,
-                     expectedActual.second.inequalities, 1e-7));
-  CHECK(assert_equal(expectedActual.first.equalities,
-                     expectedActual.second.equalities, 1e-7));
+  CHECK(assert_equal(result.first.equalities, result.second.equalities, 1e-7));
 }
 
 TEST(QPSolver, ParserSemanticTest) {
-  auto expected_actual = testParser(QPSParser("QPExample.QPS"));
-  VectorValues actualSolution, expectedSolution;
-  boost::tie(expectedSolution, boost::tuples::ignore) =
-      QPSolver(expected_actual.first).optimize();
-  boost::tie(actualSolution, boost::tuples::ignore) =
-      QPSolver(expected_actual.second).optimize();
-  CHECK(assert_equal(actualSolution, expectedSolution, 1e-7));
+  auto result = testParser(QPSParser("QPExample.QPS"));
+  VectorValues expected = QPSolver(result.first).optimize().first;
+  VectorValues actual = QPSolver(result.second).optimize().first;
+  CHECK(assert_equal(actual, expected, 1e-7));
 }
 
-TEST(QPSolver, QPExampleTest){
+TEST(QPSolver, QPExampleTest) {
   QP problem = QPSParser("QPExample.QPS").Parse();
-  VectorValues actualSolution;
   auto solver = QPSolver(problem);
-  boost::tie(actualSolution, boost::tuples::ignore) = solver.optimize();
-  VectorValues expectedSolution;
-  expectedSolution.insert(Symbol('X',1),0.7625*I_1x1);
-  expectedSolution.insert(Symbol('X',2),0.4750*I_1x1);
-  double error_expected = problem.cost.error(expectedSolution);
-  double error_actual = problem.cost.error(actualSolution);
-  CHECK(assert_equal(expectedSolution, actualSolution, 1e-7))
+  VectorValues actual = solver.optimize().first;
+  VectorValues expected;
+  expected.insert(Symbol('X', 1), 0.7625 * I_1x1);
+  expected.insert(Symbol('X', 2), 0.4750 * I_1x1);
+  double error_expected = problem.cost.error(expected);
+  double error_actual = problem.cost.error(actual);
+  CHECK(assert_equal(expected, actual, 1e-7))
   CHECK(assert_equal(error_expected, error_actual))
 }
 
 TEST(QPSolver, HS21) {
   QP problem = QPSParser("HS21.QPS").Parse();
-  VectorValues actualSolution;
-  VectorValues expectedSolution;
-  expectedSolution.insert(Symbol('X',1), 2.0*I_1x1);
-  expectedSolution.insert(Symbol('X',2), 0.0*I_1x1);
-  boost::tie(actualSolution, boost::tuples::ignore) = QPSolver(problem).optimize();
-  double error_actual = problem.cost.error(actualSolution);
+  VectorValues expected;
+  expected.insert(Symbol('X', 1), 2.0 * I_1x1);
+  expected.insert(Symbol('X', 2), 0.0 * I_1x1);
+  VectorValues actual = QPSolver(problem).optimize().first;
+  double error_actual = problem.cost.error(actual);
   CHECK(assert_equal(-99.9599999, error_actual, 1e-7))
-  CHECK(assert_equal(expectedSolution, actualSolution))
+  CHECK(assert_equal(expected, actual))
 }
 
 TEST(QPSolver, HS35) {
   QP problem = QPSParser("HS35.QPS").Parse();
-  VectorValues actualSolution;
-  boost::tie(actualSolution, boost::tuples::ignore) = QPSolver(problem).optimize();
-  double error_actual = problem.cost.error(actualSolution);
-  CHECK(assert_equal(1.11111111e-01,error_actual, 1e-7))
+  VectorValues actual = QPSolver(problem).optimize().first;
+  double error_actual = problem.cost.error(actual);
+  CHECK(assert_equal(1.11111111e-01, error_actual, 1e-7))
 }
 
 TEST(QPSolver, HS35MOD) {
   QP problem = QPSParser("HS35MOD.QPS").Parse();
-  VectorValues actualSolution;
-  boost::tie(actualSolution, boost::tuples::ignore) = QPSolver(problem).optimize();
-  double error_actual = problem.cost.error(actualSolution);
-  CHECK(assert_equal(2.50000001e-01,error_actual, 1e-7))
+  VectorValues actual = QPSolver(problem).optimize().first;
+  double error_actual = problem.cost.error(actual);
+  CHECK(assert_equal(2.50000001e-01, error_actual, 1e-7))
 }
 
 TEST(QPSolver, HS51) {
   QP problem = QPSParser("HS51.QPS").Parse();
-  VectorValues actualSolution;
-  boost::tie(actualSolution, boost::tuples::ignore) = QPSolver(problem).optimize();
-  double error_actual = problem.cost.error(actualSolution);
-  CHECK(assert_equal(8.88178420e-16,error_actual, 1e-7))
+  VectorValues actual = QPSolver(problem).optimize().first;
+  double error_actual = problem.cost.error(actual);
+  CHECK(assert_equal(8.88178420e-16, error_actual, 1e-7))
 }
 
 TEST(QPSolver, HS52) {
   QP problem = QPSParser("HS52.QPS").Parse();
-  VectorValues actualSolution;
-  boost::tie(actualSolution, boost::tuples::ignore) = QPSolver(problem).optimize();
-  double error_actual = problem.cost.error(actualSolution);
-  CHECK(assert_equal(5.32664756,error_actual, 1e-7))
+  VectorValues actual = QPSolver(problem).optimize().first;
+  double error_actual = problem.cost.error(actual);
+  CHECK(assert_equal(5.32664756, error_actual, 1e-7))
 }
 
-TEST(QPSolver, HS268) { // This test needs an extra order of magnitude of tolerance than the rest
+TEST(QPSolver, HS268) { // This test needs an extra order of magnitude of
+                        // tolerance than the rest
   QP problem = QPSParser("HS268.QPS").Parse();
-  VectorValues actualSolution;
-  boost::tie(actualSolution, boost::tuples::ignore) = QPSolver(problem).optimize();
-  double error_actual = problem.cost.error(actualSolution);
-  CHECK(assert_equal(5.73107049e-07,error_actual, 1e-6))
+  VectorValues actual = QPSolver(problem).optimize().first;
+  double error_actual = problem.cost.error(actual);
+  CHECK(assert_equal(5.73107049e-07, error_actual, 1e-6))
 }
 
 TEST(QPSolver, QPTEST) { // REQUIRES Jacobian Fix
   QP problem = QPSParser("QPTEST.QPS").Parse();
-  VectorValues actualSolution;
-  boost::tie(actualSolution, boost::tuples::ignore) = QPSolver(problem).optimize();
-  double error_actual = problem.cost.error(actualSolution);
-  CHECK(assert_equal(0.437187500e01,error_actual, 1e-7))
+  VectorValues actual = QPSolver(problem).optimize().first;
+  double error_actual = problem.cost.error(actual);
+  CHECK(assert_equal(0.437187500e01, error_actual, 1e-7))
 }
 
 /* ************************************************************************* */
-// Create Matlab's test graph as in http://www.mathworks.com/help/optim/ug/quadprog.html
+// Create Matlab's test graph as in
+// http://www.mathworks.com/help/optim/ug/quadprog.html
 QP createTestMatlabQPEx() {
   QP qp;
 
   // Objective functions 0.5*x1^2 + x2^2 - x1*x2 - 2*x1 -6*x2
   // Note the Hessian encodes:
-  //        0.5*x1'*G11*x1 + x1'*G12*x2 + 0.5*x2'*G22*x2 - x1'*g1 - x2'*g2 + 0.5*f
+  //        0.5*x1'*G11*x1 + x1'*G12*x2 + 0.5*x2'*G22*x2 - x1'*g1 - x2'*g2 +
+  //        0.5*f
   // Hence, we have G11=1, G12 = -1, g1 = +2, G22 = 2, g2 = +6, f = 0
-  qp.cost.push_back(
-      HessianFactor(X(1), X(2), 1.0 * I_1x1, -I_1x1, 2.0 * I_1x1, 2.0 * I_1x1,
-          6 * I_1x1, 1000.0));
+  qp.cost.push_back(HessianFactor(X(1), X(2), 1.0 * I_1x1, -I_1x1, 2.0 * I_1x1,
+                                  2.0 * I_1x1, 6 * I_1x1, 1000.0));
 
   // Inequality constraints
-  qp.inequalities.push_back(LinearInequality(X(1), I_1x1, X(2), I_1x1, 2, 0)); // x1 + x2 <= 2
-  qp.inequalities.push_back(
-      LinearInequality(X(1), -I_1x1, X(2), 2 * I_1x1, 2, 1)); //-x1 + 2*x2 <=2
-  qp.inequalities.push_back(
-      LinearInequality(X(1), 2 * I_1x1, X(2), I_1x1, 3, 2)); // 2*x1 + x2 <=3
-  qp.inequalities.push_back(LinearInequality(X(1), -I_1x1, 0, 3)); // -x1      <= 0
-  qp.inequalities.push_back(LinearInequality(X(2), -I_1x1, 0, 4)); //      -x2 <= 0
+  qp.inequalities.add(X(1), I_1x1, X(2), I_1x1, 2, 0);      // x1 + x2 <= 2
+  qp.inequalities.add(X(1), -I_1x1, X(2), 2 * I_1x1, 2, 1); //-x1 + 2*x2 <=2
+  qp.inequalities.add(X(1), 2 * I_1x1, X(2), I_1x1, 3, 2);  // 2*x1 + x2 <=3
+  qp.inequalities.add(X(1), -I_1x1, 0, 3);                  // -x1      <= 0
+  qp.inequalities.add(X(2), -I_1x1, 0, 4);                  //      -x2 <= 0
 
   return qp;
 }
 
-///* ************************************************************************* */
+///* *************************************************************************
+///*/
 TEST(QPSolver, optimizeMatlabEx) {
   QP qp = createTestMatlabQPEx();
   QPSolver solver(qp);
   VectorValues initialValues;
   initialValues.insert(X(1), Z_1x1);
   initialValues.insert(X(2), Z_1x1);
-  VectorValues solution;
-  boost::tie(solution, boost::tuples::ignore) = solver.optimize(initialValues);
-  VectorValues expectedSolution;
-  expectedSolution.insert(X(1), (Vector(1) << 2.0 / 3.0).finished());
-  expectedSolution.insert(X(2), (Vector(1) << 4.0 / 3.0).finished());
-  CHECK(assert_equal(expectedSolution, solution, 1e-7));
+  VectorValues solution = solver.optimize(initialValues).first;
+  VectorValues expected;
+  expected.insert(X(1), (Vector(1) << 2.0 / 3.0).finished());
+  expected.insert(X(2), (Vector(1) << 4.0 / 3.0).finished());
+  CHECK(assert_equal(expected, solution, 1e-7));
 }
 
-///* ************************************************************************* */
+///* *************************************************************************
+///*/
 TEST(QPSolver, optimizeMatlabExNoinitials) {
   QP qp = createTestMatlabQPEx();
   QPSolver solver(qp);
-  VectorValues solution;
-  boost::tie(solution, boost::tuples::ignore) = solver.optimize();
-  VectorValues expectedSolution;
-  expectedSolution.insert(X(1), (Vector(1) << 2.0 / 3.0).finished());
-  expectedSolution.insert(X(2), (Vector(1) << 4.0 / 3.0).finished());
-  CHECK(assert_equal(expectedSolution, solution, 1e-7));
+  VectorValues solution = solver.optimize().first;
+  VectorValues expected;
+  expected.insert(X(1), (Vector(1) << 2.0 / 3.0).finished());
+  expected.insert(X(2), (Vector(1) << 4.0 / 3.0).finished());
+  CHECK(assert_equal(expected, solution, 1e-7));
 }
 
 /* ************************************************************************* */
@@ -387,18 +366,15 @@ TEST(QPSolver, optimizeMatlabExNoinitial
 QP createTestNocedal06bookEx16_4() {
   QP qp;
 
-  qp.cost.push_back(JacobianFactor(X(1), I_1x1, I_1x1));
-  qp.cost.push_back(JacobianFactor(X(2), I_1x1, 2.5 * I_1x1));
+  qp.cost.add(X(1), I_1x1, I_1x1);
+  qp.cost.add(X(2), I_1x1, 2.5 * I_1x1);
 
   // Inequality constraints
-  qp.inequalities.push_back(
-      LinearInequality(X(1), -I_1x1, X(2), 2 * I_1x1, 2, 0));
-  qp.inequalities.push_back(
-      LinearInequality(X(1), I_1x1, X(2), 2 * I_1x1, 6, 1));
-  qp.inequalities.push_back(
-      LinearInequality(X(1), I_1x1, X(2), -2 * I_1x1, 2, 2));
-  qp.inequalities.push_back(LinearInequality(X(1), -I_1x1, 0.0, 3));
-  qp.inequalities.push_back(LinearInequality(X(2), -I_1x1, 0.0, 4));
+  qp.inequalities.add(X(1), -I_1x1, X(2), 2 * I_1x1, 2, 0);
+  qp.inequalities.add(X(1), I_1x1, X(2), 2 * I_1x1, 6, 1);
+  qp.inequalities.add(X(1), I_1x1, X(2), -2 * I_1x1, 2, 2);
+  qp.inequalities.add(X(1), -I_1x1, 0.0, 3);
+  qp.inequalities.add(X(2), -I_1x1, 0.0, 4);
 
   return qp;
 }
@@ -410,21 +386,19 @@ TEST(QPSolver, optimizeNocedal06bookEx16
   initialValues.insert(X(1), (Vector(1) << 2.0).finished());
   initialValues.insert(X(2), Z_1x1);
 
-  VectorValues solution;
-  boost::tie(solution, boost::tuples::ignore) = solver.optimize(initialValues);
-  VectorValues expectedSolution;
-  expectedSolution.insert(X(1), (Vector(1) << 1.4).finished());
-  expectedSolution.insert(X(2), (Vector(1) << 1.7).finished());
-  CHECK(assert_equal(expectedSolution, solution, 1e-7));
+  VectorValues solution = solver.optimize(initialValues).first;
+  VectorValues expected;
+  expected.insert(X(1), (Vector(1) << 1.4).finished());
+  expected.insert(X(2), (Vector(1) << 1.7).finished());
+  CHECK(assert_equal(expected, solution, 1e-7));
 }
 
 /* ************************************************************************* */
 TEST(QPSolver, failedSubproblem) {
   QP qp;
-  qp.cost.push_back(JacobianFactor(X(1), I_2x2, Z_2x1));
+  qp.cost.add(X(1), I_2x2, Z_2x1);
   qp.cost.push_back(HessianFactor(X(1), Z_2x2, Z_2x1, 100.0));
-  qp.inequalities.push_back(
-      LinearInequality(X(1), (Matrix(1, 2) << -1.0, 0.0).finished(), -1.0, 0));
+  qp.inequalities.add(X(1), (Matrix(1, 2) << -1.0, 0.0).finished(), -1.0, 0);
 
   VectorValues expected;
   expected.insert(X(1), (Vector(2) << 1.0, 0.0).finished());
@@ -433,8 +407,7 @@ TEST(QPSolver, failedSubproblem) {
   initialValues.insert(X(1), (Vector(2) << 10.0, 100.0).finished());
 
   QPSolver solver(qp);
-  VectorValues solution;
-  boost::tie(solution, boost::tuples::ignore) = solver.optimize(initialValues);
+  VectorValues solution = solver.optimize(initialValues).first;
 
   CHECK(assert_equal(expected, solution, 1e-7));
 }
@@ -442,10 +415,9 @@ TEST(QPSolver, failedSubproblem) {
 /* ************************************************************************* */
 TEST(QPSolver, infeasibleInitial) {
   QP qp;
-  qp.cost.push_back(JacobianFactor(X(1), I_2x2, Vector::Zero(2)));
+  qp.cost.add(X(1), I_2x2, Vector::Zero(2));
   qp.cost.push_back(HessianFactor(X(1), Z_2x2, Vector::Zero(2), 100.0));
-  qp.inequalities.push_back(
-      LinearInequality(X(1), (Matrix(1, 2) << -1.0, 0.0).finished(), -1.0, 0));
+  qp.inequalities.add(X(1), (Matrix(1, 2) << -1.0, 0.0).finished(), -1.0, 0);
 
   VectorValues expected;
   expected.insert(X(1), (Vector(2) << 1.0, 0.0).finished());
@@ -464,4 +436,3 @@ int main() {
   return TestRegistry::runAllTests(tr);
 }
 /* ************************************************************************* */
-
--- gtsam-4.1.0.orig/gtsam_unstable/nonlinear/BatchFixedLagSmoother.cpp
+++ gtsam-4.1.0/gtsam_unstable/nonlinear/BatchFixedLagSmoother.cpp
@@ -59,7 +59,7 @@ FixedLagSmoother::Result BatchFixedLagSm
   // Add the new variables to theta
   theta_.insert(newTheta);
   // Add new variables to the end of the ordering
-  for (const auto& key_value : newTheta) {
+  for (const auto key_value : newTheta) {
     ordering_.push_back(key_value.key);
   }
   // Augment Delta
@@ -267,7 +267,7 @@ FixedLagSmoother::Result BatchFixedLagSm
           // Put the linearization points and deltas back for specific variables
           if (enforceConsistency_ && (linearKeys_.size() > 0)) {
             theta_.update(linearKeys_);
-            for(const auto& key_value: linearKeys_) {
+            for(const auto key_value: linearKeys_) {
               delta_.at(key_value.key) = newDelta.at(key_value.key);
             }
           }
--- gtsam-4.1.0.orig/gtsam_unstable/nonlinear/BatchFixedLagSmoother.h
+++ gtsam-4.1.0/gtsam_unstable/nonlinear/BatchFixedLagSmoother.h
@@ -38,7 +38,7 @@ public:
     FixedLagSmoother(smootherLag), parameters_(parameters), enforceConsistency_(enforceConsistency) { };
 
   /** destructor */
-  virtual ~BatchFixedLagSmoother() { };
+  ~BatchFixedLagSmoother() override { };
 
   /** Print the factor for debugging and testing (implementing Testable) */
   void print(const std::string& s = "BatchFixedLagSmoother:\n", const KeyFormatter& keyFormatter = DefaultKeyFormatter) const override;
--- gtsam-4.1.0.orig/gtsam_unstable/nonlinear/ConcurrentBatchFilter.cpp
+++ gtsam-4.1.0/gtsam_unstable/nonlinear/ConcurrentBatchFilter.cpp
@@ -139,7 +139,7 @@ ConcurrentBatchFilter::Result Concurrent
   // Add the new variables to theta
   theta_.insert(newTheta);
   // Add new variables to the end of the ordering
-  for(const Values::ConstKeyValuePair& key_value: newTheta) {
+  for(const auto key_value: newTheta) {
     ordering_.push_back(key_value.key);
   }
   // Augment Delta
@@ -222,7 +222,7 @@ void ConcurrentBatchFilter::synchronize(
 
   // Find the set of new separator keys
   KeySet newSeparatorKeys;
-  for(const Values::ConstKeyValuePair& key_value: separatorValues_) {
+  for(const auto key_value: separatorValues_) {
     newSeparatorKeys.insert(key_value.key);
   }
 
@@ -236,7 +236,7 @@ void ConcurrentBatchFilter::synchronize(
     graph.push_back(smootherShortcut_);
     Values values;
     values.insert(smootherSummarizationValues);
-    for(const Values::ConstKeyValuePair& key_value: separatorValues_) {
+    for(const auto key_value: separatorValues_) {
       if(!values.exists(key_value.key)) {
         values.insert(key_value.key, key_value.value);
       }
@@ -471,7 +471,7 @@ void ConcurrentBatchFilter::optimize(con
           // Put the linearization points and deltas back for specific variables
           if(linearValues.size() > 0) {
             theta.update(linearValues);
-            for(const Values::ConstKeyValuePair& key_value: linearValues) {
+            for(const auto key_value: linearValues) {
               delta.at(key_value.key) = newDelta.at(key_value.key);
             }
           }
@@ -574,7 +574,7 @@ void ConcurrentBatchFilter::moveSeparato
 
   // Calculate the set of new separator keys: AffectedKeys + PreviousSeparatorKeys - KeysToMove
   KeySet newSeparatorKeys = removedFactors.keys();
-  for(const Values::ConstKeyValuePair& key_value: separatorValues_) {
+  for(const auto key_value: separatorValues_) {
     newSeparatorKeys.insert(key_value.key);
   }
   for(Key key: keysToMove) {
--- gtsam-4.1.0.orig/gtsam_unstable/nonlinear/ConcurrentBatchFilter.h
+++ gtsam-4.1.0/gtsam_unstable/nonlinear/ConcurrentBatchFilter.h
@@ -64,7 +64,7 @@ public:
   ConcurrentBatchFilter(const LevenbergMarquardtParams& parameters = LevenbergMarquardtParams()) : parameters_(parameters) {};
 
   /** Default destructor */
-  virtual ~ConcurrentBatchFilter() {};
+  ~ConcurrentBatchFilter() override {};
 
   /** Implement a GTSAM standard 'print' function */
   void print(const std::string& s = "Concurrent Batch Filter:\n", const KeyFormatter& keyFormatter = DefaultKeyFormatter) const override;
@@ -130,7 +130,7 @@ public:
    * Perform any required operations before the synchronization process starts.
    * Called by 'synchronize'
    */
-  virtual void presync() override;
+  void presync() override;
 
   /**
    * Populate the provided containers with factors that constitute the filter branch summarization
@@ -162,7 +162,7 @@ public:
    * Perform any required operations after the synchronization process finishes.
    * Called by 'synchronize'
    */
-  virtual void postsync() override;
+  void postsync() override;
 
 protected:
 
--- gtsam-4.1.0.orig/gtsam_unstable/nonlinear/ConcurrentBatchSmoother.cpp
+++ gtsam-4.1.0/gtsam_unstable/nonlinear/ConcurrentBatchSmoother.cpp
@@ -61,7 +61,7 @@ ConcurrentBatchSmoother::Result Concurre
     theta_.insert(newTheta);
 
     // Add new variables to the end of the ordering
-    for(const Values::ConstKeyValuePair& key_value: newTheta) {
+    for(const auto key_value: newTheta) {
       ordering_.push_back(key_value.key);
     }
 
@@ -135,7 +135,7 @@ void ConcurrentBatchSmoother::synchroniz
   removeFactors(filterSummarizationSlots_);
 
   // Insert new linpoints into the values, augment the ordering, and store new dims to augment delta
-  for(const Values::ConstKeyValuePair& key_value: smootherValues) {
+  for(const auto key_value: smootherValues) {
     std::pair<Values::iterator, bool> iter_inserted = theta_.tryInsert(key_value.key, key_value.value);
     if(iter_inserted.second) {
       // If the insert succeeded
@@ -146,7 +146,7 @@ void ConcurrentBatchSmoother::synchroniz
       iter_inserted.first->value = key_value.value;
     }
   }
-  for(const Values::ConstKeyValuePair& key_value: separatorValues) {
+  for(const auto key_value: separatorValues) {
     std::pair<Values::iterator, bool> iter_inserted = theta_.tryInsert(key_value.key, key_value.value);
     if(iter_inserted.second) {
       // If the insert succeeded
@@ -322,7 +322,7 @@ ConcurrentBatchSmoother::Result Concurre
           // Put the linearization points and deltas back for specific variables
           if(separatorValues_.size() > 0) {
             theta_.update(separatorValues_);
-            for(const Values::ConstKeyValuePair& key_value: separatorValues_) {
+            for(const auto key_value: separatorValues_) {
               delta_.at(key_value.key) = newDelta.at(key_value.key);
             }
           }
@@ -372,7 +372,7 @@ void ConcurrentBatchSmoother::updateSmoo
 
   // Get the set of separator keys
   gtsam::KeySet separatorKeys;
-  for(const Values::ConstKeyValuePair& key_value: separatorValues_) {
+  for(const auto key_value: separatorValues_) {
     separatorKeys.insert(key_value.key);
   }
 
--- gtsam-4.1.0.orig/gtsam_unstable/nonlinear/ConcurrentBatchSmoother.h
+++ gtsam-4.1.0/gtsam_unstable/nonlinear/ConcurrentBatchSmoother.h
@@ -57,7 +57,7 @@ public:
   ConcurrentBatchSmoother(const LevenbergMarquardtParams& parameters = LevenbergMarquardtParams()) : parameters_(parameters) {};
 
   /** Default destructor */
-  virtual ~ConcurrentBatchSmoother() {};
+  ~ConcurrentBatchSmoother() override {};
 
   /** Implement a GTSAM standard 'print' function */
   void print(const std::string& s = "Concurrent Batch Smoother:\n", const KeyFormatter& keyFormatter = DefaultKeyFormatter) const override;
@@ -124,7 +124,7 @@ public:
    * Perform any required operations before the synchronization process starts.
    * Called by 'synchronize'
    */
-  virtual void presync() override;
+  void presync() override;
 
   /**
    * Populate the provided containers with factors that constitute the smoother branch summarization
@@ -150,7 +150,7 @@ public:
    * Perform any required operations after the synchronization process finishes.
    * Called by 'synchronize'
    */
-  virtual void postsync() override;
+  void postsync() override;
 
 protected:
 
--- gtsam-4.1.0.orig/gtsam_unstable/nonlinear/ConcurrentIncrementalFilter.cpp
+++ gtsam-4.1.0/gtsam_unstable/nonlinear/ConcurrentIncrementalFilter.cpp
@@ -69,13 +69,13 @@ ConcurrentIncrementalFilter::Result Conc
     int group = 1;
     // Set all existing variables to Group1
     if(isam2_.getLinearizationPoint().size() > 0) {
-      for(const Values::ConstKeyValuePair& key_value: isam2_.getLinearizationPoint()) {
+      for(const auto key_value: isam2_.getLinearizationPoint()) {
         orderingConstraints->operator[](key_value.key) = group;
       }
       ++group;
     }
     // Assign new variables to the root
-    for(const Values::ConstKeyValuePair& key_value: newTheta) {
+    for(const auto key_value: newTheta) {
       orderingConstraints->operator[](key_value.key) = group;
     }
     // Set marginalizable variables to Group0
@@ -201,7 +201,7 @@ void ConcurrentIncrementalFilter::synchr
 
   // Force iSAM2 not to relinearize anything during this iteration
   FastList<Key> noRelinKeys;
-  for(const Values::ConstKeyValuePair& key_value: isam2_.getLinearizationPoint()) {
+  for(const auto key_value: isam2_.getLinearizationPoint()) {
     noRelinKeys.push_back(key_value.key);
   }
 
--- gtsam-4.1.0.orig/gtsam_unstable/nonlinear/ConcurrentIncrementalFilter.h
+++ gtsam-4.1.0/gtsam_unstable/nonlinear/ConcurrentIncrementalFilter.h
@@ -64,7 +64,7 @@ public:
   ConcurrentIncrementalFilter(const ISAM2Params& parameters = ISAM2Params()) : isam2_(parameters) {};
 
   /** Default destructor */
-  virtual ~ConcurrentIncrementalFilter() {};
+  ~ConcurrentIncrementalFilter() override {};
 
   /** Implement a GTSAM standard 'print' function */
   void print(const std::string& s = "Concurrent Incremental Filter:\n", const KeyFormatter& keyFormatter = DefaultKeyFormatter) const override;
--- gtsam-4.1.0.orig/gtsam_unstable/nonlinear/ConcurrentIncrementalSmoother.cpp
+++ gtsam-4.1.0/gtsam_unstable/nonlinear/ConcurrentIncrementalSmoother.cpp
@@ -66,7 +66,7 @@ ConcurrentIncrementalSmoother::Result Co
   // Also, mark the separator keys as fixed linearization points
   FastMap<Key,int> constrainedKeys;
   FastList<Key> noRelinKeys;
-  for(const Values::ConstKeyValuePair& key_value: separatorValues_) {
+  for(const auto key_value: separatorValues_) {
     constrainedKeys[key_value.key] = 1;
     noRelinKeys.push_back(key_value.key);
   }
@@ -82,12 +82,12 @@ ConcurrentIncrementalSmoother::Result Co
       Values values(newTheta);
       // Unfortunately, we must be careful here, as some of the smoother values
       // and/or separator values may have been added previously
-      for(const Values::ConstKeyValuePair& key_value: smootherValues_) {
+      for(const auto key_value: smootherValues_) {
         if(!isam2_.getLinearizationPoint().exists(key_value.key)) {
           values.insert(key_value.key, smootherValues_.at(key_value.key));
         }
       }
-      for(const Values::ConstKeyValuePair& key_value: separatorValues_) {
+      for(const auto key_value: separatorValues_) {
         if(!isam2_.getLinearizationPoint().exists(key_value.key)) {
           values.insert(key_value.key, separatorValues_.at(key_value.key));
         }
@@ -246,7 +246,7 @@ void ConcurrentIncrementalSmoother::upda
 
   // Get the set of separator keys
   KeySet separatorKeys;
-  for(const Values::ConstKeyValuePair& key_value: separatorValues_) {
+  for(const auto key_value: separatorValues_) {
     separatorKeys.insert(key_value.key);
   }
 
--- gtsam-4.1.0.orig/gtsam_unstable/nonlinear/ConcurrentIncrementalSmoother.h
+++ gtsam-4.1.0/gtsam_unstable/nonlinear/ConcurrentIncrementalSmoother.h
@@ -54,7 +54,7 @@ public:
   ConcurrentIncrementalSmoother(const ISAM2Params& parameters = ISAM2Params()) : isam2_(parameters) {};
 
   /** Default destructor */
-  virtual ~ConcurrentIncrementalSmoother() {};
+  ~ConcurrentIncrementalSmoother() override {};
 
   /** Implement a GTSAM standard 'print' function */
   void print(const std::string& s = "Concurrent Incremental Smoother:\n", const KeyFormatter& keyFormatter = DefaultKeyFormatter) const override;
--- gtsam-4.1.0.orig/gtsam_unstable/nonlinear/IncrementalFixedLagSmoother.h
+++ gtsam-4.1.0/gtsam_unstable/nonlinear/IncrementalFixedLagSmoother.h
@@ -44,15 +44,15 @@ public:
   }
 
   /** destructor */
-  virtual ~IncrementalFixedLagSmoother() {
+  ~IncrementalFixedLagSmoother() override {
   }
 
   /** Print the factor for debugging and testing (implementing Testable) */
-  virtual void print(const std::string& s = "IncrementalFixedLagSmoother:\n",
+  void print(const std::string& s = "IncrementalFixedLagSmoother:\n",
       const KeyFormatter& keyFormatter = DefaultKeyFormatter) const override;
 
   /** Check if two IncrementalFixedLagSmoother Objects are equal */
-  virtual bool equals(const FixedLagSmoother& rhs, double tol = 1e-9) const override;
+  bool equals(const FixedLagSmoother& rhs, double tol = 1e-9) const override;
 
   /**
    * Add new factors, updating the solution and re-linearizing as needed.
--- gtsam-4.1.0.orig/gtsam_unstable/nonlinear/LinearizedFactor.h
+++ gtsam-4.1.0/gtsam_unstable/nonlinear/LinearizedFactor.h
@@ -53,7 +53,7 @@ public:
    */
   LinearizedGaussianFactor(const GaussianFactor::shared_ptr& gaussian, const Values& lin_points);
 
-  virtual ~LinearizedGaussianFactor() {};
+  ~LinearizedGaussianFactor() override {};
 
   // access functions
   const Values& linearizationPoint() const { return lin_points_; }
@@ -109,7 +109,7 @@ public:
    */
   LinearizedJacobianFactor(const JacobianFactor::shared_ptr& jacobian, const Values& lin_points);
 
-  virtual ~LinearizedJacobianFactor() {}
+  ~LinearizedJacobianFactor() override {}
 
   /// @return a deep copy of this factor
   gtsam::NonlinearFactor::shared_ptr clone() const override {
@@ -199,7 +199,7 @@ public:
    */
   LinearizedHessianFactor(const HessianFactor::shared_ptr& hessian, const Values& lin_points);
 
-  virtual ~LinearizedHessianFactor() {}
+  ~LinearizedHessianFactor() override {}
 
   /// @return a deep copy of this factor
   gtsam::NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam_unstable/nonlinear/tests/testConcurrentBatchFilter.cpp
+++ gtsam-4.1.0/gtsam_unstable/nonlinear/tests/testConcurrentBatchFilter.cpp
@@ -64,7 +64,7 @@ NonlinearFactorGraph CalculateMarginals(
 
 
   std::set<Key> KeysToKeep;
-  for(const Values::ConstKeyValuePair& key_value: linPoint) { // we cycle over all the keys of factorGraph
+  for(const auto key_value: linPoint) { // we cycle over all the keys of factorGraph
     KeysToKeep.insert(key_value.key);
   } // so far we are keeping all keys, but we want to delete the ones that we are going to marginalize
   for(Key key: keysToMarginalize) {
--- gtsam-4.1.0.orig/gtsam_unstable/nonlinear/tests/testConcurrentBatchSmoother.cpp
+++ gtsam-4.1.0/gtsam_unstable/nonlinear/tests/testConcurrentBatchSmoother.cpp
@@ -560,7 +560,7 @@ TEST( ConcurrentBatchSmoother, synchroni
   GaussianFactorGraph::shared_ptr linearFactors = allFactors.linearize(allValues);
 
   KeySet eliminateKeys = linearFactors->keys();
-  for(const Values::ConstKeyValuePair& key_value: filterSeparatorValues) {
+  for(const auto key_value: filterSeparatorValues) {
     eliminateKeys.erase(key_value.key);
   }
   KeyVector variables(eliminateKeys.begin(), eliminateKeys.end());
--- gtsam-4.1.0.orig/gtsam_unstable/nonlinear/tests/testConcurrentIncrementalFilter.cpp
+++ gtsam-4.1.0/gtsam_unstable/nonlinear/tests/testConcurrentIncrementalFilter.cpp
@@ -80,7 +80,7 @@ NonlinearFactorGraph CalculateMarginals(
 
 
   std::set<Key> KeysToKeep;
-  for(const Values::ConstKeyValuePair& key_value: linPoint) { // we cycle over all the keys of factorGraph
+  for(const auto key_value: linPoint) { // we cycle over all the keys of factorGraph
     KeysToKeep.insert(key_value.key);
   } // so far we are keeping all keys, but we want to delete the ones that we are going to marginalize
   for(Key key: keysToMarginalize) {
--- gtsam-4.1.0.orig/gtsam_unstable/nonlinear/tests/testConcurrentIncrementalSmootherDL.cpp
+++ gtsam-4.1.0/gtsam_unstable/nonlinear/tests/testConcurrentIncrementalSmootherDL.cpp
@@ -512,7 +512,7 @@ TEST( ConcurrentIncrementalSmootherDL, s
 //  Values expectedLinearizationPoint = BatchOptimize(allFactors, allValues, 1);
   Values expectedLinearizationPoint = filterSeparatorValues;
   Values actualLinearizationPoint;
-  for(const Values::ConstKeyValuePair& key_value: filterSeparatorValues) {
+  for(const auto key_value: filterSeparatorValues) {
     actualLinearizationPoint.insert(key_value.key, smoother.getLinearizationPoint().at(key_value.key));
   }
   CHECK(assert_equal(expectedLinearizationPoint, actualLinearizationPoint, 1e-6));
@@ -580,7 +580,7 @@ TEST( ConcurrentIncrementalSmootherDL, s
 //  GaussianBayesNet::shared_ptr GBNsptr = GSS.eliminate();
 
   KeySet allkeys = LinFactorGraph->keys();
-  for(const Values::ConstKeyValuePair& key_value: filterSeparatorValues) {
+  for(const auto key_value: filterSeparatorValues) {
     allkeys.erase(key_value.key);
   }
   KeyVector variables(allkeys.begin(), allkeys.end());
--- gtsam-4.1.0.orig/gtsam_unstable/nonlinear/tests/testConcurrentIncrementalSmootherGN.cpp
+++ gtsam-4.1.0/gtsam_unstable/nonlinear/tests/testConcurrentIncrementalSmootherGN.cpp
@@ -513,7 +513,7 @@ TEST( ConcurrentIncrementalSmootherGN, s
 //  Values expectedLinearizationPoint = BatchOptimize(allFactors, allValues, 1);
   Values expectedLinearizationPoint = filterSeparatorValues;
   Values actualLinearizationPoint;
-  for(const Values::ConstKeyValuePair& key_value: filterSeparatorValues) {
+  for(const auto key_value: filterSeparatorValues) {
     actualLinearizationPoint.insert(key_value.key, smoother.getLinearizationPoint().at(key_value.key));
   }
   CHECK(assert_equal(expectedLinearizationPoint, actualLinearizationPoint, 1e-6));
@@ -582,7 +582,7 @@ TEST( ConcurrentIncrementalSmootherGN, s
 //  GaussianBayesNet::shared_ptr GBNsptr = GSS.eliminate();
 
   KeySet allkeys = LinFactorGraph->keys();
-  for(const Values::ConstKeyValuePair& key_value: filterSeparatorValues)
+  for(const auto key_value: filterSeparatorValues)
     allkeys.erase(key_value.key);
   KeyVector variables(allkeys.begin(), allkeys.end());
   std::pair<GaussianBayesNet::shared_ptr, GaussianFactorGraph::shared_ptr> result = LinFactorGraph->eliminatePartialSequential(variables, EliminateCholesky);
--- gtsam-4.1.0.orig/gtsam_unstable/slam/BetweenFactorEM.h
+++ gtsam-4.1.0/gtsam_unstable/slam/BetweenFactorEM.h
@@ -78,7 +78,7 @@ public:
           flag_bump_up_near_zero_probs) {
   }
 
-  virtual ~BetweenFactorEM() {
+  ~BetweenFactorEM() override {
   }
 
   /** implement functions needed for Testable */
--- gtsam-4.1.0.orig/gtsam_unstable/slam/BiasedGPSFactor.h
+++ gtsam-4.1.0/gtsam_unstable/slam/BiasedGPSFactor.h
@@ -50,7 +50,7 @@ namespace gtsam {
       Base(model, posekey, biaskey), measured_(measured) {
     }
 
-    virtual ~BiasedGPSFactor() {}
+    ~BiasedGPSFactor() override {}
 
     /** implement functions needed for Testable */
 
--- gtsam-4.1.0.orig/gtsam_unstable/slam/DummyFactor.h
+++ gtsam-4.1.0/gtsam_unstable/slam/DummyFactor.h
@@ -29,7 +29,7 @@ public:
   /** standard binary constructor */
   DummyFactor(const Key& key1, size_t dim1, const Key& key2, size_t dim2);
 
-  virtual ~DummyFactor() {}
+  ~DummyFactor() override {}
 
   // testable
 
--- gtsam-4.1.0.orig/gtsam_unstable/slam/EquivInertialNavFactor_GlobalVel.h
+++ gtsam-4.1.0/gtsam_unstable/slam/EquivInertialNavFactor_GlobalVel.h
@@ -128,7 +128,7 @@ public:
         dt12_(dt12), world_g_(world_g), world_rho_(world_rho), world_omega_earth_(world_omega_earth), Jacobian_wrt_t0_Overall_(Jacobian_wrt_t0_Overall),
         Bias_initial_(Bias_initial), body_P_sensor_(body_P_sensor) {  }
 
-  virtual ~EquivInertialNavFactor_GlobalVel() {}
+  ~EquivInertialNavFactor_GlobalVel() override {}
 
   /** implement functions needed for Testable */
 
--- gtsam-4.1.0.orig/gtsam_unstable/slam/GaussMarkov1stOrderFactor.h
+++ gtsam-4.1.0/gtsam_unstable/slam/GaussMarkov1stOrderFactor.h
@@ -66,7 +66,7 @@ public:
         Base(calcDiscreteNoiseModel(model, delta_t), key1, key2), dt_(delta_t), tau_(tau) {
   }
 
-  virtual ~GaussMarkov1stOrderFactor() {}
+  ~GaussMarkov1stOrderFactor() override {}
 
   /** implement functions needed for Testable */
 
--- gtsam-4.1.0.orig/gtsam_unstable/slam/InertialNavFactor_GlobalVelocity.h
+++ gtsam-4.1.0/gtsam_unstable/slam/InertialNavFactor_GlobalVelocity.h
@@ -109,7 +109,7 @@ public:
             Pose1, Vel1, IMUBias1, Pose2, Vel2), measurement_acc_(measurement_acc), measurement_gyro_(measurement_gyro),
             dt_(measurement_dt), world_g_(world_g), world_rho_(world_rho), world_omega_earth_(world_omega_earth), body_P_sensor_(body_P_sensor) {  }
 
-  virtual ~InertialNavFactor_GlobalVelocity() {}
+  ~InertialNavFactor_GlobalVelocity() override {}
 
   /** implement functions needed for Testable */
 
--- gtsam-4.1.0.orig/gtsam_unstable/slam/InvDepthFactor3.h
+++ gtsam-4.1.0/gtsam_unstable/slam/InvDepthFactor3.h
@@ -62,7 +62,7 @@ public:
         Base(model, poseKey, pointKey, invDepthKey), measured_(measured), K_(K) {}
 
   /** Virtual destructor */
-  virtual ~InvDepthFactor3() {}
+  ~InvDepthFactor3() override {}
 
   /**
    * print
--- gtsam-4.1.0.orig/gtsam_unstable/slam/InvDepthFactorVariant1.h
+++ gtsam-4.1.0/gtsam_unstable/slam/InvDepthFactorVariant1.h
@@ -58,7 +58,7 @@ public:
         Base(model, poseKey, landmarkKey), measured_(measured), K_(K) {}
 
   /** Virtual destructor */
-  virtual ~InvDepthFactorVariant1() {}
+  ~InvDepthFactorVariant1() override {}
 
   /**
    * print
--- gtsam-4.1.0.orig/gtsam_unstable/slam/InvDepthFactorVariant2.h
+++ gtsam-4.1.0/gtsam_unstable/slam/InvDepthFactorVariant2.h
@@ -61,7 +61,7 @@ public:
         Base(model, poseKey, landmarkKey), measured_(measured), K_(K), referencePoint_(referencePoint) {}
 
   /** Virtual destructor */
-  virtual ~InvDepthFactorVariant2() {}
+  ~InvDepthFactorVariant2() override {}
 
   /**
    * print
--- gtsam-4.1.0.orig/gtsam_unstable/slam/InvDepthFactorVariant3.h
+++ gtsam-4.1.0/gtsam_unstable/slam/InvDepthFactorVariant3.h
@@ -60,7 +60,7 @@ public:
         Base(model, poseKey, landmarkKey), measured_(measured), K_(K) {}
 
   /** Virtual destructor */
-  virtual ~InvDepthFactorVariant3a() {}
+  ~InvDepthFactorVariant3a() override {}
 
   /**
    * print
@@ -180,7 +180,7 @@ public:
         Base(model, poseKey1, poseKey2, landmarkKey), measured_(measured), K_(K) {}
 
   /** Virtual destructor */
-  virtual ~InvDepthFactorVariant3b() {}
+  ~InvDepthFactorVariant3b() override {}
 
   /**
    * print
--- /dev/null
+++ gtsam-4.1.0/gtsam_unstable/slam/LocalOrientedPlane3Factor.cpp
@@ -0,0 +1,64 @@
+/*
+ * LocalOrientedPlane3Factor.cpp
+ *
+ *  Author: David Wisth
+ *  Created on: February 12, 2021
+ */
+
+#include "LocalOrientedPlane3Factor.h"
+
+using namespace std;
+
+namespace gtsam {
+
+//***************************************************************************
+void LocalOrientedPlane3Factor::print(const string& s,
+    const KeyFormatter& keyFormatter) const {
+  cout << s << (s == "" ? "" : "\n");
+  cout << "LocalOrientedPlane3Factor Factor (" << keyFormatter(key1()) << ", "
+       << keyFormatter(key2()) << ", " << keyFormatter(key3()) << ")\n";
+  measured_p_.print("Measured Plane");
+  this->noiseModel_->print("  noise model: ");
+}
+
+//***************************************************************************
+Vector LocalOrientedPlane3Factor::evaluateError(const Pose3& wTwi,
+    const Pose3& wTwa, const OrientedPlane3& a_plane,
+    boost::optional<Matrix&> H1, boost::optional<Matrix&> H2,
+    boost::optional<Matrix&> H3) const {
+
+  Matrix66 aTai_H_wTwa, aTai_H_wTwi;
+  Matrix36 predicted_H_aTai;
+  Matrix33 predicted_H_plane, error_H_predicted;
+
+  // Find the relative transform from anchor to sensor frame.
+  const Pose3 aTai = wTwa.transformPoseTo(wTwi,
+      H2 ? &aTai_H_wTwa : nullptr,
+      H1 ? &aTai_H_wTwi : nullptr);
+
+  // Transform the plane measurement into sensor frame.
+  const OrientedPlane3 i_plane = a_plane.transform(aTai,
+      H2 ? &predicted_H_plane : nullptr,
+      (H1 || H3) ? &predicted_H_aTai  : nullptr);
+
+  // Calculate the error between measured and estimated planes in sensor frame.
+  const Vector3 err = measured_p_.errorVector(i_plane,
+    boost::none, (H1 || H2 || H3) ? &error_H_predicted : nullptr);
+
+  // Apply the chain rule to calculate the derivatives.
+  if (H1) {
+    *H1 = error_H_predicted * predicted_H_aTai * aTai_H_wTwi;
+  }
+
+  if (H2) {
+    *H2 = error_H_predicted * predicted_H_aTai * aTai_H_wTwa;
+  }
+
+  if (H3) {
+    *H3 = error_H_predicted * predicted_H_plane;
+  }
+
+  return err;
+}
+
+}  // namespace gtsam
--- /dev/null
+++ gtsam-4.1.0/gtsam_unstable/slam/LocalOrientedPlane3Factor.h
@@ -0,0 +1,92 @@
+/*
+ * @file LocalOrientedPlane3Factor.h
+ * @brief LocalOrientedPlane3 Factor class
+ * @author David Wisth
+ * @date February 12, 2021
+ */
+
+#pragma once
+
+#include <gtsam/geometry/OrientedPlane3.h>
+#include <gtsam/nonlinear/NonlinearFactor.h>
+#include <string>
+
+namespace gtsam {
+
+/**
+ * Factor to measure a planar landmark from a given pose, with a given local
+ * linearization point.
+ *
+ * This factor is based on the relative plane factor formulation proposed in:
+ * Equation 25,
+ * M. Kaess, "Simultaneous Localization and Mapping with Infinite Planes",
+ * IEEE International Conference on Robotics and Automation, 2015.
+ * 
+ *
+ * The main purpose of this factor is to improve the numerical stability of the
+ * optimization, especially compared to gtsam::OrientedPlane3Factor. This
+ * is especially relevant when the sensor is far from the origin (and thus
+ * the derivatives associated to transforming the plane are large).
+ *
+ * x0 is the current sensor pose, and x1 is the local "anchor pose" - i.e.
+ * a local linearisation point for the plane. The plane is representated and
+ * optimized in x1 frame in the optimization.
+ */
+class LocalOrientedPlane3Factor: public NoiseModelFactor3<Pose3, Pose3,
+                                                          OrientedPlane3> {
+protected:
+  OrientedPlane3 measured_p_;
+  typedef NoiseModelFactor3<Pose3, Pose3, OrientedPlane3> Base;
+public:
+  /// Constructor
+  LocalOrientedPlane3Factor() {}
+
+  virtual ~LocalOrientedPlane3Factor() {}
+
+  /** Constructor with measured plane (a,b,c,d) coefficients
+   * @param z measured plane (a,b,c,d) coefficients as 4D vector
+   * @param noiseModel noiseModel Gaussian noise model
+   * @param poseKey Key or symbol for unknown pose
+   * @param anchorPoseKey Key or symbol for the plane's linearization point,
+                          (called the "anchor pose").
+   * @param landmarkKey Key or symbol for unknown planar landmark
+   *
+   * Note: The anchorPoseKey can simply be chosen as the first pose a plane
+   * is observed.  
+   */
+  LocalOrientedPlane3Factor(const Vector4& z, const SharedGaussian& noiseModel,
+                            Key poseKey, Key anchorPoseKey, Key landmarkKey)
+      : Base(noiseModel, poseKey, anchorPoseKey, landmarkKey), measured_p_(z) {}
+
+  LocalOrientedPlane3Factor(const OrientedPlane3& z,
+                            const SharedGaussian& noiseModel,
+                            Key poseKey, Key anchorPoseKey, Key landmarkKey)
+    : Base(noiseModel, poseKey, anchorPoseKey, landmarkKey), measured_p_(z) {}
+
+  /// print
+  void print(const std::string& s = "LocalOrientedPlane3Factor",
+      const KeyFormatter& keyFormatter = DefaultKeyFormatter) const override;
+
+  /***
+    * Vector of errors
+    * @brief Error = measured_plane_.error(a_plane.transform(inv(wTwa) * wTwi))
+    * 
+    * This is the error of the measured and predicted plane in the current
+    * sensor frame, i. The plane is represented in the anchor pose, a.
+    *
+    * @param wTwi The pose of the sensor in world coordinates
+    * @param wTwa The pose of the anchor frame in world coordinates
+    * @param a_plane The estimated plane in anchor frame.
+    *
+    * Note: The optimized plane is represented in anchor frame, a, not the
+    * world frame.
+    */
+  Vector evaluateError(const Pose3& wTwi, const Pose3& wTwa,
+      const OrientedPlane3& a_plane,
+      boost::optional<Matrix&> H1 = boost::none,
+      boost::optional<Matrix&> H2 = boost::none,
+      boost::optional<Matrix&> H3 = boost::none) const override;
+};
+
+}  // namespace gtsam
+
--- gtsam-4.1.0.orig/gtsam_unstable/slam/MultiProjectionFactor.h
+++ gtsam-4.1.0/gtsam_unstable/slam/MultiProjectionFactor.h
@@ -98,7 +98,7 @@ namespace gtsam {
           throwCheirality_(throwCheirality), verboseCheirality_(verboseCheirality) {}
 
     /** Virtual destructor */
-    virtual ~MultiProjectionFactor() {}
+    ~MultiProjectionFactor() override {}
 
     /// @return a deep copy of this factor
     NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam_unstable/slam/PartialPriorFactor.h
+++ gtsam-4.1.0/gtsam_unstable/slam/PartialPriorFactor.h
@@ -29,11 +29,9 @@ namespace gtsam {
    *
    * The prior vector used in this factor is stored in compressed form, such that
    * it only contains values for measurements that are to be compared, and they are in
-   * the same order as VALUE::Logmap().  The mask will determine which components to extract
-   * in the error function.
+   * the same order as VALUE::Logmap(). The provided indices will determine which components to
+   * extract in the error function.
    *
-   * For practical use, it would be good to subclass this factor and have the class type
-   * construct the mask.
    * @tparam VALUE is the type of variable the prior effects
    */
   template<class VALUE>
@@ -43,16 +41,14 @@ namespace gtsam {
     typedef VALUE T;
 
   protected:
-
     // Concept checks on the variable type - currently requires Lie
     GTSAM_CONCEPT_LIE_TYPE(VALUE)
 
     typedef NoiseModelFactor1<VALUE> Base;
     typedef PartialPriorFactor<VALUE> This;
 
-    Vector prior_;             ///< measurement on tangent space parameters, in compressed form
-    std::vector<size_t> mask_; ///< indices of values to constrain in compressed prior vector
-    Matrix H_;                  ///< Constant Jacobian - computed at creation
+    Vector prior_;                 ///< Measurement on tangent space parameters, in compressed form.
+    std::vector<size_t> indices_;  ///< Indices of the measured tangent space parameters.
 
     /** default constructor - only use for serialization */
     PartialPriorFactor() {}
@@ -66,22 +62,24 @@ namespace gtsam {
 
   public:
 
-    virtual ~PartialPriorFactor() {}
+    ~PartialPriorFactor() override {}
 
-    /** Single Element Constructor: acts on a single parameter specified by idx */
+    /** Single Element Constructor: Prior on a single parameter at index 'idx' in the tangent vector.*/
     PartialPriorFactor(Key key, size_t idx, double prior, const SharedNoiseModel& model) :
-      Base(model, key), prior_((Vector(1) << prior).finished()), mask_(1, idx), H_(Matrix::Zero(1, T::dimension)) {
+      Base(model, key),
+      prior_((Vector(1) << prior).finished()),
+      indices_(1, idx) {
       assert(model->dim() == 1);
-      this->fillH();
     }
 
-    /** Indices Constructor: specify the mask with a set of indices */
-    PartialPriorFactor(Key key, const std::vector<size_t>& mask, const Vector& prior,
+    /** Indices Constructor: Specify the relevant measured indices in the tangent vector.*/
+    PartialPriorFactor(Key key, const std::vector<size_t>& indices, const Vector& prior,
         const SharedNoiseModel& model) :
-      Base(model, key), prior_(prior), mask_(mask), H_(Matrix::Zero(mask.size(), T::dimension)) {
-      assert((size_t)prior_.size() == mask.size());
-      assert(model->dim() == (size_t) prior.size());
-      this->fillH();
+        Base(model, key),
+        prior_(prior),
+        indices_(indices) {
+      assert((size_t)prior_.size() == indices_.size());
+      assert(model->dim() == (size_t)prior.size());
     }
 
     /// @return a deep copy of this factor
@@ -102,35 +100,41 @@ namespace gtsam {
       const This *e = dynamic_cast<const This*> (&expected);
       return e != nullptr && Base::equals(*e, tol) &&
           gtsam::equal_with_abs_tol(this->prior_, e->prior_, tol) &&
-          this->mask_ == e->mask_;
+          this->indices_ == e->indices_;
     }
 
     /** implement functions needed to derive from Factor */
 
-    /** vector of errors */
+    /** Returns a vector of errors for the measured tangent parameters.  */
     Vector evaluateError(const T& p, boost::optional<Matrix&> H = boost::none) const override {
-      if (H) (*H) = H_;
-      // FIXME: this was originally the generic retraction - may not produce same results
-      Vector full_logmap = T::Logmap(p);
-//      Vector full_logmap = T::identity().localCoordinates(p); // Alternate implementation
-      Vector masked_logmap = Vector::Zero(this->dim());
-      for (size_t i=0; i<mask_.size(); ++i)
-        masked_logmap(i) = full_logmap(mask_[i]);
-      return masked_logmap - prior_;
+      Eigen::Matrix<double, T::dimension, T::dimension> H_local;
+
+      // If the Rot3 Cayley map is used, Rot3::LocalCoordinates will throw a runtime error
+      // when asked to compute the Jacobian matrix (see Rot3M.cpp).
+      #ifdef GTSAM_ROT3_EXPMAP
+      const Vector full_tangent = T::LocalCoordinates(p, H ? &H_local : nullptr);
+      #else
+      const Vector full_tangent = T::Logmap(p, H ? &H_local : nullptr);
+      #endif
+
+      if (H) {
+        (*H) = Matrix::Zero(indices_.size(), T::dimension);
+        for (size_t i = 0; i < indices_.size(); ++i) {
+          (*H).row(i) = H_local.row(indices_.at(i));
+        }
+      }
+      // Select relevant parameters from the tangent vector.
+      Vector partial_tangent = Vector::Zero(indices_.size());
+      for (size_t i = 0; i < indices_.size(); ++i) {
+        partial_tangent(i) = full_tangent(indices_.at(i));
+      }
+
+      return partial_tangent - prior_;
     }
 
     // access
     const Vector& prior() const { return prior_; }
-    const std::vector<size_t>& mask() const { return  mask_; }
-    const Matrix& H() const { return H_; }
-
-  protected:
-
-    /** Constructs the jacobian matrix in place */
-    void fillH() {
-      for (size_t i=0; i<mask_.size(); ++i)
-        H_(i, mask_[i]) = 1.0;
-    }
+    const std::vector<size_t>& indices() const { return indices_; }
 
   private:
     /** Serialization function */
@@ -140,8 +144,8 @@ namespace gtsam {
       ar & boost::serialization::make_nvp("NoiseModelFactor1",
           boost::serialization::base_object<Base>(*this));
       ar & BOOST_SERIALIZATION_NVP(prior_);
-      ar & BOOST_SERIALIZATION_NVP(mask_);
-      ar & BOOST_SERIALIZATION_NVP(H_);
+      ar & BOOST_SERIALIZATION_NVP(indices_);
+      // ar & BOOST_SERIALIZATION_NVP(H_);
     }
   }; // \class PartialPriorFactor
 
--- gtsam-4.1.0.orig/gtsam_unstable/slam/PoseBetweenFactor.h
+++ gtsam-4.1.0/gtsam_unstable/slam/PoseBetweenFactor.h
@@ -56,7 +56,7 @@ namespace gtsam {
       Base(model, key1, key2), measured_(measured), body_P_sensor_(body_P_sensor) {
     }
 
-    virtual ~PoseBetweenFactor() {}
+    ~PoseBetweenFactor() override {}
 
     /// @return a deep copy of this factor
     gtsam::NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam_unstable/slam/PosePriorFactor.h
+++ gtsam-4.1.0/gtsam_unstable/slam/PosePriorFactor.h
@@ -47,7 +47,7 @@ namespace gtsam {
     /** default constructor - only use for serialization */
     PosePriorFactor() {}
 
-    virtual ~PosePriorFactor() {}
+    ~PosePriorFactor() override {}
 
     /** Constructor */
     PosePriorFactor(Key key, const POSE& prior, const SharedNoiseModel& model,
--- gtsam-4.1.0.orig/gtsam_unstable/slam/ProjectionFactorPPP.h
+++ gtsam-4.1.0/gtsam_unstable/slam/ProjectionFactorPPP.h
@@ -93,7 +93,7 @@ namespace gtsam {
           throwCheirality_(throwCheirality), verboseCheirality_(verboseCheirality) {}
 
     /** Virtual destructor */
-    virtual ~ProjectionFactorPPP() {}
+    ~ProjectionFactorPPP() override {}
 
     /// @return a deep copy of this factor
     NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam_unstable/slam/ProjectionFactorPPPC.h
+++ gtsam-4.1.0/gtsam_unstable/slam/ProjectionFactorPPPC.h
@@ -88,7 +88,7 @@ namespace gtsam {
           throwCheirality_(throwCheirality), verboseCheirality_(verboseCheirality) {}
 
     /** Virtual destructor */
-    virtual ~ProjectionFactorPPPC() {}
+    ~ProjectionFactorPPPC() override {}
 
     /// @return a deep copy of this factor
     NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam_unstable/slam/RelativeElevationFactor.h
+++ gtsam-4.1.0/gtsam_unstable/slam/RelativeElevationFactor.h
@@ -40,7 +40,7 @@ public:
   RelativeElevationFactor(Key poseKey, Key pointKey, double measured,
       const SharedNoiseModel& model);
 
-  virtual ~RelativeElevationFactor() {}
+  ~RelativeElevationFactor() override {}
 
   /// @return a deep copy of this factor
   gtsam::NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/gtsam_unstable/slam/SmartRangeFactor.h
+++ gtsam-4.1.0/gtsam_unstable/slam/SmartRangeFactor.h
@@ -54,7 +54,7 @@ class SmartRangeFactor: public NoiseMode
       NoiseModelFactor(noiseModel::Isotropic::Sigma(1, s)), variance_(s * s) {
   }
 
-  virtual ~SmartRangeFactor() {
+  ~SmartRangeFactor() override {
   }
 
   /// Add a range measurement to a pose with given key.
--- gtsam-4.1.0.orig/gtsam_unstable/slam/SmartStereoProjectionFactor.h
+++ gtsam-4.1.0/gtsam_unstable/slam/SmartStereoProjectionFactor.h
@@ -93,7 +93,7 @@ public:
   }
 
   /** Virtual destructor */
-  virtual ~SmartStereoProjectionFactor() {
+  ~SmartStereoProjectionFactor() override {
   }
 
   /**
--- /dev/null
+++ gtsam-4.1.0/gtsam_unstable/slam/SmartStereoProjectionPoseFactor.cpp
@@ -0,0 +1,97 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * @file   SmartStereoProjectionPoseFactor.cpp
+ * @brief  Smart stereo factor on poses, assuming camera calibration is fixed
+ * @author Luca Carlone
+ * @author Antoni Rosinol
+ * @author Chris Beall
+ * @author Zsolt Kira
+ * @author Frank Dellaert
+ */
+
+#include <gtsam_unstable/slam/SmartStereoProjectionPoseFactor.h>
+
+namespace gtsam {
+
+SmartStereoProjectionPoseFactor::SmartStereoProjectionPoseFactor(
+    const SharedNoiseModel& sharedNoiseModel,
+    const SmartStereoProjectionParams& params,
+    const boost::optional<Pose3>& body_P_sensor)
+    : Base(sharedNoiseModel, params, body_P_sensor) {}
+
+void SmartStereoProjectionPoseFactor::add(
+    const StereoPoint2& measured, const Key& poseKey,
+    const boost::shared_ptr<Cal3_S2Stereo>& K) {
+  Base::add(measured, poseKey);
+  K_all_.push_back(K);
+}
+
+void SmartStereoProjectionPoseFactor::add(
+    const std::vector<StereoPoint2>& measurements, const KeyVector& poseKeys,
+    const std::vector<boost::shared_ptr<Cal3_S2Stereo>>& Ks) {
+  assert(measurements.size() == poseKeys.size());
+  assert(poseKeys.size() == Ks.size());
+  Base::add(measurements, poseKeys);
+  K_all_.insert(K_all_.end(), Ks.begin(), Ks.end());
+}
+
+void SmartStereoProjectionPoseFactor::add(
+    const std::vector<StereoPoint2>& measurements, const KeyVector& poseKeys,
+    const boost::shared_ptr<Cal3_S2Stereo>& K) {
+  assert(poseKeys.size() == measurements.size());
+  for (size_t i = 0; i < measurements.size(); i++) {
+    Base::add(measurements[i], poseKeys[i]);
+    K_all_.push_back(K);
+  }
+}
+
+void SmartStereoProjectionPoseFactor::print(
+    const std::string& s, const KeyFormatter& keyFormatter) const {
+  std::cout << s << "SmartStereoProjectionPoseFactor, z = \n ";
+  for (const boost::shared_ptr<Cal3_S2Stereo>& K : K_all_) {
+    K->print("calibration = ");
+  }
+  Base::print("", keyFormatter);
+}
+
+bool SmartStereoProjectionPoseFactor::equals(const NonlinearFactor& p,
+                                             double tol) const {
+  const SmartStereoProjectionPoseFactor* e =
+      dynamic_cast<const SmartStereoProjectionPoseFactor*>(&p);
+
+  return e && Base::equals(p, tol);
+}
+
+double SmartStereoProjectionPoseFactor::error(const Values& values) const {
+  if (this->active(values)) {
+    return this->totalReprojectionError(cameras(values));
+  } else {  // else of active flag
+    return 0.0;
+  }
+}
+
+SmartStereoProjectionPoseFactor::Base::Cameras
+SmartStereoProjectionPoseFactor::cameras(const Values& values) const {
+  assert(keys_.size() == K_all_.size());
+  Base::Cameras cameras;
+  for (size_t i = 0; i < keys_.size(); i++) {
+    Pose3 pose = values.at<Pose3>(keys_[i]);
+    if (Base::body_P_sensor_) {
+      pose = pose.compose(*(Base::body_P_sensor_));
+    }
+    cameras.push_back(StereoCamera(pose, K_all_[i]));
+  }
+  return cameras;
+}
+
+}  // \ namespace gtsam
--- gtsam-4.1.0.orig/gtsam_unstable/slam/SmartStereoProjectionPoseFactor.h
+++ gtsam-4.1.0/gtsam_unstable/slam/SmartStereoProjectionPoseFactor.h
@@ -13,6 +13,7 @@
  * @file   SmartStereoProjectionPoseFactor.h
  * @brief  Smart stereo factor on poses, assuming camera calibration is fixed
  * @author Luca Carlone
+ * @author Antoni Rosinol
  * @author Chris Beall
  * @author Zsolt Kira
  * @author Frank Dellaert
@@ -28,8 +29,9 @@ namespace gtsam {
  * @addtogroup SLAM
  *
  * If you are using the factor, please cite:
- * L. Carlone, Z. Kira, C. Beall, V. Indelman, F. Dellaert, Eliminating conditionally
- * independent sets in factor graphs: a unifying perspective based on smart factors,
+ * L. Carlone, Z. Kira, C. Beall, V. Indelman, F. Dellaert,
+ * Eliminating conditionally independent sets in factor graphs:
+ * a unifying perspective based on smart factors,
  * Int. Conf. on Robotics and Automation (ICRA), 2014.
  *
  */
@@ -41,14 +43,12 @@ namespace gtsam {
  * This factor requires that values contains the involved poses (Pose3).
  * @addtogroup SLAM
  */
-class SmartStereoProjectionPoseFactor: public SmartStereoProjectionFactor {
-
-protected:
-
-  std::vector<boost::shared_ptr<Cal3_S2Stereo> > K_all_; ///< shared pointer to calibration object (one for each camera)
-
-public:
+class SmartStereoProjectionPoseFactor : public SmartStereoProjectionFactor {
+ protected:
+  /// shared pointer to calibration object (one for each camera)
+  std::vector<boost::shared_ptr<Cal3_S2Stereo>> K_all_;
 
+ public:
   EIGEN_MAKE_ALIGNED_OPERATOR_NEW
 
   /// shorthand for base class type
@@ -65,54 +65,49 @@ public:
    * @param Isotropic measurement noise
    * @param params internal parameters of the smart factors
    */
-  SmartStereoProjectionPoseFactor(const SharedNoiseModel& sharedNoiseModel,
+  SmartStereoProjectionPoseFactor(
+      const SharedNoiseModel& sharedNoiseModel,
       const SmartStereoProjectionParams& params = SmartStereoProjectionParams(),
-      const boost::optional<Pose3> body_P_sensor = boost::none) :
-      Base(sharedNoiseModel, params, body_P_sensor) {
-  }
+      const boost::optional<Pose3>& body_P_sensor = boost::none);
 
   /** Virtual destructor */
-  virtual ~SmartStereoProjectionPoseFactor() {}
+  ~SmartStereoProjectionPoseFactor() override = default;
 
   /**
    * add a new measurement and pose key
-   * @param measured is the 2m dimensional location of the projection of a single landmark in the m view (the measurement)
-   * @param poseKey is key corresponding to the camera observing the same landmark
+   * @param measured is the 2m dimensional location of the projection of a
+   * single landmark in the m view (the measurement)
+   * @param poseKey is key corresponding to the camera observing the same
+   * landmark
    * @param K is the (fixed) camera calibration
    */
-  void add(const StereoPoint2 measured, const Key poseKey,
-      const boost::shared_ptr<Cal3_S2Stereo> K) {
-    Base::add(measured, poseKey);
-    K_all_.push_back(K);
-  }
+  void add(const StereoPoint2& measured, const Key& poseKey,
+           const boost::shared_ptr<Cal3_S2Stereo>& K);
 
   /**
    *  Variant of the previous one in which we include a set of measurements
-   * @param measurements vector of the 2m dimensional location of the projection of a single landmark in the m view (the measurement)
-   * @param poseKeys vector of keys corresponding to the camera observing the same landmark
+   * @param measurements vector of the 2m dimensional location of the projection
+   * of a single landmark in the m view (the measurement)
+   * @param poseKeys vector of keys corresponding to the camera observing
+   * the same landmark
    * @param Ks vector of calibration objects
    */
-  void add(std::vector<StereoPoint2> measurements, KeyVector poseKeys,
-      std::vector<boost::shared_ptr<Cal3_S2Stereo> > Ks) {
-    Base::add(measurements, poseKeys);
-    for (size_t i = 0; i < measurements.size(); i++) {
-      K_all_.push_back(Ks.at(i));
-    }
-  }
+  void add(const std::vector<StereoPoint2>& measurements,
+           const KeyVector& poseKeys,
+           const std::vector<boost::shared_ptr<Cal3_S2Stereo>>& Ks);
 
   /**
-   * Variant of the previous one in which we include a set of measurements with the same noise and calibration
-   * @param measurements vector of the 2m dimensional location of the projection of a single landmark in the m view (the measurement)
-   * @param poseKeys vector of keys corresponding to the camera observing the same landmark
+   * Variant of the previous one in which we include a set of measurements with
+   * the same noise and calibration
+   * @param measurements vector of the 2m dimensional location of the projection
+   * of a single landmark in the m view (the measurement)
+   * @param poseKeys vector of keys corresponding to the camera observing the
+   * same landmark
    * @param K the (known) camera calibration (same for all measurements)
    */
-  void add(std::vector<StereoPoint2> measurements, KeyVector poseKeys,
-      const boost::shared_ptr<Cal3_S2Stereo> K) {
-    for (size_t i = 0; i < measurements.size(); i++) {
-      Base::add(measurements.at(i), poseKeys.at(i));
-      K_all_.push_back(K);
-    }
-  }
+  void add(const std::vector<StereoPoint2>& measurements,
+           const KeyVector& poseKeys,
+           const boost::shared_ptr<Cal3_S2Stereo>& K);
 
   /**
    * print
@@ -120,74 +115,44 @@ public:
    * @param keyFormatter optional formatter useful for printing Symbols
    */
   void print(const std::string& s = "", const KeyFormatter& keyFormatter =
-      DefaultKeyFormatter) const override {
-    std::cout << s << "SmartStereoProjectionPoseFactor, z = \n ";
-    for(const boost::shared_ptr<Cal3_S2Stereo>& K: K_all_)
-    K->print("calibration = ");
-    Base::print("", keyFormatter);
-  }
+                                            DefaultKeyFormatter) const override;
 
   /// equals
-  bool equals(const NonlinearFactor& p, double tol = 1e-9) const override {
-    const SmartStereoProjectionPoseFactor *e =
-        dynamic_cast<const SmartStereoProjectionPoseFactor*>(&p);
-
-    return e && Base::equals(p, tol);
-  }
+  bool equals(const NonlinearFactor& p, double tol = 1e-9) const override;
 
   /**
    * error calculates the error of the factor.
    */
-  double error(const Values& values) const override {
-    if (this->active(values)) {
-      return this->totalReprojectionError(cameras(values));
-    } else { // else of active flag
-      return 0.0;
-    }
-  }
+  double error(const Values& values) const override;
 
   /** return the calibration object */
-  inline const std::vector<boost::shared_ptr<Cal3_S2Stereo> > calibration() const {
+  inline std::vector<boost::shared_ptr<Cal3_S2Stereo>> calibration() const {
     return K_all_;
   }
 
   /**
    * Collect all cameras involved in this factor
-   * @param values Values structure which must contain camera poses corresponding
+   * @param values Values structure which must contain camera poses
+   * corresponding
    * to keys involved in this factor
    * @return vector of Values
    */
-   Base::Cameras cameras(const Values& values) const override {
-    Base::Cameras cameras;
-    size_t i=0;
-    for(const Key& k: this->keys_) {
-      Pose3 pose = values.at<Pose3>(k);
-
-      if (Base::body_P_sensor_)
-    	  pose = pose.compose(*(Base::body_P_sensor_));
-
-      StereoCamera camera(pose, K_all_[i++]);
-      cameras.push_back(camera);
-    }
-    return cameras;
-  }
-
-private:
+  Base::Cameras cameras(const Values& values) const override;
 
+ private:
   /// Serialization function
   friend class boost::serialization::access;
-  template<class ARCHIVE>
-  void serialize(ARCHIVE & ar, const unsigned int /*version*/) {
-    ar & BOOST_SERIALIZATION_BASE_OBJECT_NVP(Base);
-    ar & BOOST_SERIALIZATION_NVP(K_all_);
+  template <class ARCHIVE>
+  void serialize(ARCHIVE& ar, const unsigned int /*version*/) {
+    ar& BOOST_SERIALIZATION_BASE_OBJECT_NVP(Base);
+    ar& BOOST_SERIALIZATION_NVP(K_all_);
   }
 
-}; // end of class declaration
+};  // end of class declaration
 
 /// traits
-template<>
-struct traits<SmartStereoProjectionPoseFactor> : public Testable<
-    SmartStereoProjectionPoseFactor> {
-};
+template <>
+struct traits<SmartStereoProjectionPoseFactor>
+    : public Testable<SmartStereoProjectionPoseFactor> {};
 
-} // \ namespace gtsam
+}  // namespace gtsam
--- gtsam-4.1.0.orig/gtsam_unstable/slam/TransformBtwRobotsUnaryFactor.h
+++ gtsam-4.1.0/gtsam_unstable/slam/TransformBtwRobotsUnaryFactor.h
@@ -77,7 +77,7 @@ namespace gtsam {
 
     }
 
-    virtual ~TransformBtwRobotsUnaryFactor() {}
+    ~TransformBtwRobotsUnaryFactor() override {}
 
 
     /** Clone */
--- gtsam-4.1.0.orig/gtsam_unstable/slam/TransformBtwRobotsUnaryFactorEM.h
+++ gtsam-4.1.0/gtsam_unstable/slam/TransformBtwRobotsUnaryFactorEM.h
@@ -93,7 +93,7 @@ namespace gtsam {
 
     }
 
-    virtual ~TransformBtwRobotsUnaryFactorEM() {}
+    ~TransformBtwRobotsUnaryFactorEM() override {}
 
 
     /** Clone */
--- gtsam-4.1.0.orig/gtsam_unstable/slam/serialization.cpp
+++ gtsam-4.1.0/gtsam_unstable/slam/serialization.cpp
@@ -43,7 +43,6 @@ typedef PriorFactor<Pose3>
 typedef PriorFactor<Cal3_S2>              PriorFactorCal3_S2;
 typedef PriorFactor<Cal3DS2>              PriorFactorCal3DS2;
 typedef PriorFactor<CalibratedCamera>     PriorFactorCalibratedCamera;
-typedef PriorFactor<SimpleCamera>         PriorFactorSimpleCamera;
 typedef PriorFactor<PinholeCameraCal3_S2> PriorFactorPinholeCameraCal3_S2;
 typedef PriorFactor<StereoCamera>         PriorFactorStereoCamera;
 
@@ -68,7 +67,6 @@ typedef NonlinearEquality<Pose3>
 typedef NonlinearEquality<Cal3_S2>                NonlinearEqualityCal3_S2;
 typedef NonlinearEquality<Cal3DS2>                NonlinearEqualityCal3DS2;
 typedef NonlinearEquality<CalibratedCamera>       NonlinearEqualityCalibratedCamera;
-typedef NonlinearEquality<SimpleCamera>           NonlinearEqualitySimpleCamera;
 typedef NonlinearEquality<PinholeCameraCal3_S2>   NonlinearEqualityPinholeCameraCal3_S2;
 typedef NonlinearEquality<StereoCamera>           NonlinearEqualityStereoCamera;
 
@@ -77,10 +75,8 @@ typedef RangeFactor<Pose3, Point3>
 typedef RangeFactor<Pose2, Pose2>                               RangeFactorPose2;
 typedef RangeFactor<Pose3, Pose3>                               RangeFactorPose3;
 typedef RangeFactor<CalibratedCamera, Point3>                   RangeFactorCalibratedCameraPoint;
-typedef RangeFactor<SimpleCamera, Point3>                       RangeFactorSimpleCameraPoint;
 typedef RangeFactor<PinholeCameraCal3_S2, Point3>               RangeFactorPinholeCameraCal3_S2Point;
 typedef RangeFactor<CalibratedCamera, CalibratedCamera>         RangeFactorCalibratedCamera;
-typedef RangeFactor<SimpleCamera, SimpleCamera>                 RangeFactorSimpleCamera;
 typedef RangeFactor<PinholeCameraCal3_S2, PinholeCameraCal3_S2> RangeFactorPinholeCameraCal3_S2;
 
 typedef BearingRangeFactor<Pose2, Point2>  BearingRangeFactor2D;
@@ -90,7 +86,7 @@ typedef GenericProjectionFactor<Pose3, P
 typedef GenericProjectionFactor<Pose3, Point3, Cal3DS2> GenericProjectionFactorCal3DS2;
 
 typedef gtsam::GeneralSFMFactor<gtsam::PinholeCameraCal3_S2, gtsam::Point3> GeneralSFMFactorCal3_S2;
-//typedef gtsam::GeneralSFMFactor<gtsam::PinholeCameraCal3DS2, gtsam::Point3> GeneralSFMFactorCal3DS2;
+typedef gtsam::GeneralSFMFactor<gtsam::PinholeCameraCal3DS2, gtsam::Point3> GeneralSFMFactorCal3DS2;
 
 typedef gtsam::GeneralSFMFactor2<gtsam::Cal3_S2> GeneralSFMFactor2Cal3_S2;
 
@@ -129,7 +125,6 @@ GTSAM_VALUE_EXPORT(gtsam::Cal3_S2);
 GTSAM_VALUE_EXPORT(gtsam::Cal3DS2);
 GTSAM_VALUE_EXPORT(gtsam::Cal3_S2Stereo);
 GTSAM_VALUE_EXPORT(gtsam::CalibratedCamera);
-GTSAM_VALUE_EXPORT(gtsam::SimpleCamera);
 GTSAM_VALUE_EXPORT(gtsam::PinholeCameraCal3_S2);
 GTSAM_VALUE_EXPORT(gtsam::StereoCamera);
 
@@ -150,7 +145,6 @@ BOOST_CLASS_EXPORT_GUID(PriorFactorPose3
 BOOST_CLASS_EXPORT_GUID(PriorFactorCal3_S2, "gtsam::PriorFactorCal3_S2");
 BOOST_CLASS_EXPORT_GUID(PriorFactorCal3DS2, "gtsam::PriorFactorCal3DS2");
 BOOST_CLASS_EXPORT_GUID(PriorFactorCalibratedCamera, "gtsam::PriorFactorCalibratedCamera");
-BOOST_CLASS_EXPORT_GUID(PriorFactorSimpleCamera, "gtsam::PriorFactorSimpleCamera");
 BOOST_CLASS_EXPORT_GUID(PriorFactorStereoCamera, "gtsam::PriorFactorStereoCamera");
 
 BOOST_CLASS_EXPORT_GUID(BetweenFactorLieVector, "gtsam::BetweenFactorLieVector");
@@ -174,7 +168,6 @@ BOOST_CLASS_EXPORT_GUID(NonlinearEqualit
 BOOST_CLASS_EXPORT_GUID(NonlinearEqualityCal3_S2, "gtsam::NonlinearEqualityCal3_S2");
 BOOST_CLASS_EXPORT_GUID(NonlinearEqualityCal3DS2, "gtsam::NonlinearEqualityCal3DS2");
 BOOST_CLASS_EXPORT_GUID(NonlinearEqualityCalibratedCamera, "gtsam::NonlinearEqualityCalibratedCamera");
-BOOST_CLASS_EXPORT_GUID(NonlinearEqualitySimpleCamera, "gtsam::NonlinearEqualitySimpleCamera");
 BOOST_CLASS_EXPORT_GUID(NonlinearEqualityStereoCamera, "gtsam::NonlinearEqualityStereoCamera");
 
 BOOST_CLASS_EXPORT_GUID(RangeFactor2D, "gtsam::RangeFactor2D");
@@ -182,9 +175,7 @@ BOOST_CLASS_EXPORT_GUID(RangeFactor3D, "
 BOOST_CLASS_EXPORT_GUID(RangeFactorPose2, "gtsam::RangeFactorPose2");
 BOOST_CLASS_EXPORT_GUID(RangeFactorPose3, "gtsam::RangeFactorPose3");
 BOOST_CLASS_EXPORT_GUID(RangeFactorCalibratedCameraPoint, "gtsam::RangeFactorCalibratedCameraPoint");
-BOOST_CLASS_EXPORT_GUID(RangeFactorSimpleCameraPoint, "gtsam::RangeFactorSimpleCameraPoint");
 BOOST_CLASS_EXPORT_GUID(RangeFactorCalibratedCamera, "gtsam::RangeFactorCalibratedCamera");
-BOOST_CLASS_EXPORT_GUID(RangeFactorSimpleCamera, "gtsam::RangeFactorSimpleCamera");
 
 BOOST_CLASS_EXPORT_GUID(BearingRangeFactor2D, "gtsam::BearingRangeFactor2D");
 
@@ -192,12 +183,28 @@ BOOST_CLASS_EXPORT_GUID(GenericProjectio
 BOOST_CLASS_EXPORT_GUID(GenericProjectionFactorCal3DS2, "gtsam::GenericProjectionFactorCal3DS2");
 
 BOOST_CLASS_EXPORT_GUID(GeneralSFMFactorCal3_S2, "gtsam::GeneralSFMFactorCal3_S2");
-//BOOST_CLASS_EXPORT_GUID(GeneralSFMFactorCal3DS2, "gtsam::GeneralSFMFactorCal3DS2");
+BOOST_CLASS_EXPORT_GUID(GeneralSFMFactorCal3DS2, "gtsam::GeneralSFMFactorCal3DS2");
 
 BOOST_CLASS_EXPORT_GUID(GeneralSFMFactor2Cal3_S2, "gtsam::GeneralSFMFactor2Cal3_S2");
 
 BOOST_CLASS_EXPORT_GUID(GenericStereoFactor3D, "gtsam::GenericStereoFactor3D");
 
+#ifdef GTSAM_ALLOW_DEPRECATED_SINCE_V41
+
+typedef PriorFactor<SimpleCamera>               PriorFactorSimpleCamera;
+typedef NonlinearEquality<SimpleCamera>         NonlinearEqualitySimpleCamera;
+typedef RangeFactor<SimpleCamera, Point3>       RangeFactorSimpleCameraPoint;
+typedef RangeFactor<SimpleCamera, SimpleCamera> RangeFactorSimpleCamera;
+
+GTSAM_VALUE_EXPORT(gtsam::SimpleCamera);
+BOOST_CLASS_EXPORT_GUID(PriorFactorSimpleCamera, "gtsam::PriorFactorSimpleCamera");
+BOOST_CLASS_EXPORT_GUID(NonlinearEqualitySimpleCamera, "gtsam::NonlinearEqualitySimpleCamera");
+BOOST_CLASS_EXPORT_GUID(RangeFactorSimpleCameraPoint, "gtsam::RangeFactorSimpleCameraPoint");
+BOOST_CLASS_EXPORT_GUID(RangeFactorSimpleCamera, "gtsam::RangeFactorSimpleCamera");
+
+#endif
+
+
 /* ************************************************************************* */
 // Actual implementations of functions
 /* ************************************************************************* */
--- /dev/null
+++ gtsam-4.1.0/gtsam_unstable/slam/tests/testLocalOrientedPlane3Factor.cpp
@@ -0,0 +1,243 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/*
+ * @file testLocalOrientedPlane3Factor.cpp
+ * @date Feb 12, 2021
+ * @author David Wisth
+ * @brief Tests the LocalOrientedPlane3Factor class
+ */
+
+#include <gtsam_unstable/slam/LocalOrientedPlane3Factor.h>
+
+#include <gtsam/base/numericalDerivative.h>
+#include <gtsam/inference/Symbol.h>
+#include <gtsam/nonlinear/ISAM2.h>
+
+#include <CppUnitLite/TestHarness.h>
+
+#include <boost/bind.hpp>
+
+using namespace gtsam;
+using namespace std;
+
+GTSAM_CONCEPT_TESTABLE_INST(OrientedPlane3)
+GTSAM_CONCEPT_MANIFOLD_INST(OrientedPlane3)
+
+using symbol_shorthand::P;  //< Planes
+using symbol_shorthand::X;  //< Pose3
+
+// *************************************************************************
+TEST(LocalOrientedPlane3Factor, lm_translation_error) {
+  // Tests one pose, two measurements of the landmark that differ in range only.
+  // Normal along -x, 3m away
+  OrientedPlane3 test_lm0(-1.0, 0.0, 0.0, 3.0);
+
+  NonlinearFactorGraph graph;
+
+  // Init pose and prior.  Pose Prior is needed since a single plane measurement
+  // does not fully constrain the pose
+  Pose3 init_pose = Pose3::identity();
+  Pose3 anchor_pose = Pose3::identity();
+  graph.addPrior(X(0), init_pose, noiseModel::Isotropic::Sigma(6, 0.001));
+  graph.addPrior(X(1), anchor_pose, noiseModel::Isotropic::Sigma(6, 0.001));
+
+  // Add two landmark measurements, differing in range
+  Vector4 measurement0(-1.0, 0.0, 0.0, 3.0);
+  Vector4 measurement1(-1.0, 0.0, 0.0, 1.0);
+  LocalOrientedPlane3Factor factor0(
+      measurement0, noiseModel::Isotropic::Sigma(3, 0.1), X(0), X(1), P(0));
+  LocalOrientedPlane3Factor factor1(
+      measurement1, noiseModel::Isotropic::Sigma(3, 0.1), X(0), X(1), P(0));
+  graph.add(factor0);
+  graph.add(factor1);
+
+  // Initial Estimate
+  Values values;
+  values.insert(X(0), init_pose);
+  values.insert(X(1), anchor_pose);
+  values.insert(P(0), test_lm0);
+
+  // Optimize
+  ISAM2 isam2;
+  isam2.update(graph, values);
+  Values result_values = isam2.calculateEstimate();
+  auto optimized_plane_landmark = result_values.at<OrientedPlane3>(P(0));
+
+  // Given two noisy measurements of equal weight, expect result between the two
+  OrientedPlane3 expected_plane_landmark(-1.0, 0.0, 0.0, 2.0);
+  EXPECT(assert_equal(optimized_plane_landmark, expected_plane_landmark));
+}
+
+// *************************************************************************
+// TODO As described in PR #564 after correcting the derivatives in
+// OrientedPlane3Factor this test fails. It should be debugged and re-enabled.
+/*
+TEST (LocalOrientedPlane3Factor, lm_rotation_error) {
+  // Tests one pose, two measurements of the landmark that differ in angle only.
+  // Normal along -x, 3m away
+  OrientedPlane3 test_lm0(-1.0/sqrt(1.01), -0.1/sqrt(1.01), 0.0, 3.0);
+
+  NonlinearFactorGraph graph;
+
+  // Init pose and prior.  Pose Prior is needed since a single plane measurement
+  // does not fully constrain the pose
+  Pose3 init_pose = Pose3::identity();
+  graph.addPrior(X(0), init_pose, noiseModel::Isotropic::Sigma(6, 0.001));
+
+  // Add two landmark measurements, differing in angle
+  Vector4 measurement0(-1.0, 0.0, 0.0, 3.0);
+  Vector4 measurement1(0.0, -1.0, 0.0, 3.0);
+  LocalOrientedPlane3Factor factor0(measurement0,
+      noiseModel::Isotropic::Sigma(3, 0.1), X(0), X(0), P(0));
+  LocalOrientedPlane3Factor factor1(measurement1,
+      noiseModel::Isotropic::Sigma(3, 0.1), X(0), X(0), P(0));
+  graph.add(factor0);
+  graph.add(factor1);
+
+  // Initial Estimate
+  Values values;
+  values.insert(X(0), init_pose);
+  values.insert(P(0), test_lm0);
+
+  // Optimize
+  ISAM2 isam2;
+  isam2.update(graph, values);
+  Values result_values = isam2.calculateEstimate();
+  isam2.getDelta().print();
+
+  auto optimized_plane_landmark = result_values.at<OrientedPlane3>(P(0));
+
+  values.print();
+  result_values.print();
+
+  // Given two noisy measurements of equal weight, expect result between the two
+  OrientedPlane3 expected_plane_landmark(-sqrt(2.0) / 2.0, -sqrt(2.0) / 2.0,
+      0.0, 3.0);
+  EXPECT(assert_equal(optimized_plane_landmark, expected_plane_landmark));
+}
+*/
+
+// *************************************************************************
+TEST(LocalOrientedPlane3Factor, Derivatives) {
+  // Measurement
+  OrientedPlane3 p(sqrt(2)/2, -sqrt(2)/2, 0, 5);
+
+  // Linearisation point
+  OrientedPlane3 pLin(sqrt(3)/3, -sqrt(3)/3, sqrt(3)/3, 7);
+  Pose3 poseLin(Rot3::RzRyRx(0.5*M_PI, -0.3*M_PI, 1.4*M_PI), Point3(1, 2, -4));
+  Pose3 anchorPoseLin(Rot3::RzRyRx(-0.1*M_PI, 0.2*M_PI, 1.0), Point3(-5, 0, 1));
+
+  // Factor
+  Key planeKey(1), poseKey(2), anchorPoseKey(3);
+  SharedGaussian noise = noiseModel::Isotropic::Sigma(3, 0.1);
+  LocalOrientedPlane3Factor factor(p, noise, poseKey, anchorPoseKey, planeKey);
+
+  // Calculate numerical derivatives
+  auto f = boost::bind(&LocalOrientedPlane3Factor::evaluateError, factor,
+    _1, _2, _3, boost::none, boost::none, boost::none);
+  Matrix numericalH1 = numericalDerivative31<Vector3, Pose3, Pose3,
+    OrientedPlane3>(f, poseLin, anchorPoseLin, pLin);
+  Matrix numericalH2 = numericalDerivative32<Vector3, Pose3, Pose3,
+    OrientedPlane3>(f, poseLin, anchorPoseLin, pLin);
+  Matrix numericalH3 = numericalDerivative33<Vector3, Pose3, Pose3,
+    OrientedPlane3>(f, poseLin, anchorPoseLin, pLin);
+
+  // Use the factor to calculate the derivative
+  Matrix actualH1, actualH2, actualH3;
+  factor.evaluateError(poseLin, anchorPoseLin, pLin, actualH1, actualH2,
+      actualH3);
+
+  // Verify we get the expected error
+  EXPECT(assert_equal(numericalH1, actualH1, 1e-8));
+  EXPECT(assert_equal(numericalH2, actualH2, 1e-8));
+  EXPECT(assert_equal(numericalH3, actualH3, 1e-8));
+}
+
+
+/* ************************************************************************* */
+// Simplified version of the test by Marco Camurri to debug issue #561
+//
+// This test provides an example of how LocalOrientedPlane3Factor works.
+// x0 is the current sensor pose, and x1 is the local "anchor pose" - i.e.
+// a local linearisation point for the plane. The plane is representated and
+// optimized in x1 frame in the optimization. This greatly improves numerical
+// stability when the pose is far from the origin.
+//
+TEST(LocalOrientedPlane3Factor, Issue561Simplified) {
+  // Typedefs
+  using Plane = OrientedPlane3;
+
+  NonlinearFactorGraph graph;
+
+  // Setup prior factors
+  Pose3 x0(Rot3::identity(), Vector3(100, 30, 10));  // the "sensor pose"
+  Pose3 x1(Rot3::identity(), Vector3(90, 40,  5) );  // the "anchor pose"
+
+  auto x0_noise = noiseModel::Isotropic::Sigma(6, 0.01);
+  auto x1_noise = noiseModel::Isotropic::Sigma(6, 0.01);
+  graph.addPrior<Pose3>(X(0), x0, x0_noise);
+  graph.addPrior<Pose3>(X(1), x1, x1_noise);
+
+  // Two horizontal planes with different heights, in the world frame.
+  const Plane p1(0, 0, 1, 1), p2(0, 0, 1, 2);
+  // Transform to x1, the "anchor frame" (i.e. local frame)
+  auto p1_in_x1 = p1.transform(x1);
+  auto p2_in_x1 = p2.transform(x1);
+  auto p1_noise = noiseModel::Diagonal::Sigmas(Vector3{1, 1, 5});
+  auto p2_noise = noiseModel::Diagonal::Sigmas(Vector3{1, 1, 5});
+  graph.addPrior<Plane>(P(1), p1_in_x1, p1_noise);
+  graph.addPrior<Plane>(P(2), p2_in_x1, p2_noise);
+
+  // Add plane factors, with a local linearization point.
+  // transform p1 to pose x0 as a measurement
+  auto p1_measured_from_x0 = p1.transform(x0);
+  // transform p2 to pose x0 as a measurement
+  auto p2_measured_from_x0 = p2.transform(x0);
+  const auto x0_p1_noise = noiseModel::Isotropic::Sigma(3, 0.05);
+  const auto x0_p2_noise = noiseModel::Isotropic::Sigma(3, 0.05);
+  graph.emplace_shared<LocalOrientedPlane3Factor>(
+      p1_measured_from_x0.planeCoefficients(), x0_p1_noise, X(0), X(1), P(1));
+  graph.emplace_shared<LocalOrientedPlane3Factor>(
+      p2_measured_from_x0.planeCoefficients(), x0_p2_noise, X(0), X(1), P(2));
+
+  // Initial values
+  // Just offset the initial pose by 1m. This is what we are trying to optimize.
+  Values initialEstimate;
+  Pose3 x0_initial = x0.compose(Pose3(Rot3::identity(), Vector3(1, 0, 0)));
+  initialEstimate.insert(P(1), p1_in_x1);
+  initialEstimate.insert(P(2), p2_in_x1);
+  initialEstimate.insert(X(0), x0_initial);
+  initialEstimate.insert(X(1), x1);
+
+  // Optimize
+  try {
+    ISAM2 isam2;
+    isam2.update(graph, initialEstimate);
+    Values result = isam2.calculateEstimate();
+    EXPECT_DOUBLES_EQUAL(0, graph.error(result), 0.1);
+    EXPECT(x0.equals(result.at<Pose3>(X(0))));
+    EXPECT(p1_in_x1.equals(result.at<Plane>(P(1))));
+    EXPECT(p2_in_x1.equals(result.at<Plane>(P(2))));
+  } catch (const IndeterminantLinearSystemException &e) {
+    cerr << "CAPTURED THE EXCEPTION: "
+      << DefaultKeyFormatter(e.nearbyVariable()) << endl;
+    EXPECT(false);  // fail if this happens
+  }
+}
+
+/* ************************************************************************* */
+int main() {
+  srand(time(nullptr));
+  TestResult tr;
+  return TestRegistry::runAllTests(tr);
+}
+/* ************************************************************************* */
--- /dev/null
+++ gtsam-4.1.0/gtsam_unstable/slam/tests/testPartialPriorFactor.cpp
@@ -0,0 +1,283 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+#include <gtsam_unstable/slam/PartialPriorFactor.h>
+#include <gtsam/inference/Symbol.h>
+#include <gtsam/geometry/Pose2.h>
+#include <gtsam/geometry/Pose3.h>
+#include <gtsam/base/numericalDerivative.h>
+#include <gtsam/base/TestableAssertions.h>
+#include <CppUnitLite/TestHarness.h>
+
+using namespace std;
+using namespace gtsam;
+
+namespace NM = gtsam::noiseModel;
+
+// Pose3 tangent representation is [ Rx Ry Rz Tx Ty Tz ].
+static const int kIndexRx = 0;
+static const int kIndexRy = 1;
+static const int kIndexRz = 2;
+static const int kIndexTx = 3;
+static const int kIndexTy = 4;
+static const int kIndexTz = 5;
+
+typedef PartialPriorFactor<Pose2> TestPartialPriorFactor2;
+typedef PartialPriorFactor<Pose3> TestPartialPriorFactor3;
+typedef std::vector<size_t> Indices;
+
+/// traits
+namespace gtsam {
+template<>
+struct traits<TestPartialPriorFactor2> : public Testable<TestPartialPriorFactor2> {};
+
+template<>
+struct traits<TestPartialPriorFactor3> : public Testable<TestPartialPriorFactor3> {};
+}
+
+/* ************************************************************************* */
+TEST(PartialPriorFactor, Constructors2) {
+  Key poseKey(1);
+  Pose2 measurement(-13.1, 3.14, -0.73);
+
+  // Prior on x component of translation.
+  TestPartialPriorFactor2 factor1(poseKey, 0, measurement.x(), NM::Isotropic::Sigma(1, 0.25));
+  CHECK(assert_equal(1, factor1.prior().rows()));
+  CHECK(assert_equal(measurement.x(), factor1.prior()(0)));
+  CHECK(assert_container_equality<Indices>({ 0 }, factor1.indices()));
+
+  // Prior on full translation vector.
+  const Indices t_indices = { 0, 1 };
+  TestPartialPriorFactor2 factor2(poseKey, t_indices, measurement.translation(), NM::Isotropic::Sigma(2, 0.25));
+  CHECK(assert_equal(2, factor2.prior().rows()));
+  CHECK(assert_equal(measurement.translation(), factor2.prior()));
+  CHECK(assert_container_equality<Indices>(t_indices, factor2.indices()));
+
+  // Prior on theta.
+  TestPartialPriorFactor2 factor3(poseKey, 2, measurement.theta(), NM::Isotropic::Sigma(1, 0.1));
+  CHECK(assert_equal(1, factor3.prior().rows()));
+  CHECK(assert_equal(measurement.theta(), factor3.prior()(0)));
+  CHECK(assert_container_equality<Indices>({ 2 }, factor3.indices()));
+}
+
+/* ************************************************************************* */
+TEST(PartialPriorFactor, JacobianPartialTranslation2) {
+  Key poseKey(1);
+  Pose2 measurement(-13.1, 3.14, -0.73);
+
+  // Prior on x component of translation.
+  TestPartialPriorFactor2 factor(poseKey, 0, measurement.x(), NM::Isotropic::Sigma(1, 0.25));
+
+  Pose2 pose = measurement; // Zero-error linearization point.
+
+  // Calculate numerical derivatives.
+  Matrix expectedH1 = numericalDerivative11<Vector, Pose2>(
+      boost::bind(&TestPartialPriorFactor2::evaluateError, &factor, _1, boost::none), pose);
+
+  // Use the factor to calculate the derivative.
+  Matrix actualH1;
+  factor.evaluateError(pose, actualH1);
+
+  // Verify we get the expected error.
+  CHECK(assert_equal(expectedH1, actualH1, 1e-5));
+}
+
+/* ************************************************************************* */
+TEST(PartialPriorFactor, JacobianFullTranslation2) {
+  Key poseKey(1);
+  Pose2 measurement(-6.0, 3.5, 0.123);
+
+  // Prior on x component of translation.
+  TestPartialPriorFactor2 factor(poseKey, { 0, 1 }, measurement.translation(), NM::Isotropic::Sigma(2, 0.25));
+
+  Pose2 pose = measurement; // Zero-error linearization point.
+
+  // Calculate numerical derivatives.
+  Matrix expectedH1 = numericalDerivative11<Vector, Pose2>(
+      boost::bind(&TestPartialPriorFactor2::evaluateError, &factor, _1, boost::none), pose);
+
+  // Use the factor to calculate the derivative.
+  Matrix actualH1;
+  factor.evaluateError(pose, actualH1);
+
+  // Verify we get the expected error.
+  CHECK(assert_equal(expectedH1, actualH1, 1e-5));
+}
+
+/* ************************************************************************* */
+TEST(PartialPriorFactor, JacobianTheta) {
+  Key poseKey(1);
+  Pose2 measurement(-1.0, 0.4, -2.5);
+
+  // Prior on x component of translation.
+  TestPartialPriorFactor2 factor(poseKey, 2, measurement.theta(), NM::Isotropic::Sigma(1, 0.25));
+
+  Pose2 pose = measurement; // Zero-error linearization point.
+
+  // Calculate numerical derivatives.
+  Matrix expectedH1 = numericalDerivative11<Vector, Pose2>(
+      boost::bind(&TestPartialPriorFactor2::evaluateError, &factor, _1, boost::none), pose);
+
+  // Use the factor to calculate the derivative.
+  Matrix actualH1;
+  factor.evaluateError(pose, actualH1);
+
+  // Verify we get the expected error.
+  CHECK(assert_equal(expectedH1, actualH1, 1e-5));
+}
+
+/* ************************************************************************* */
+TEST(PartialPriorFactor, Constructors3) {
+  Key poseKey(1);
+  Pose3 measurement(Rot3::RzRyRx(-0.17, 0.567, M_PI), Point3(10.0, -2.3, 3.14));
+
+  // Single component of translation.
+  TestPartialPriorFactor3 factor1(poseKey, kIndexTy, measurement.y(),
+      NM::Isotropic::Sigma(1, 0.25));
+  CHECK(assert_equal(1, factor1.prior().rows()));
+  CHECK(assert_equal(measurement.y(), factor1.prior()(0)));
+  CHECK(assert_container_equality<Indices>({ kIndexTy }, factor1.indices()));
+
+  // Full translation vector.
+  const Indices t_indices = { kIndexTx, kIndexTy, kIndexTz };
+  TestPartialPriorFactor3 factor2(poseKey, t_indices, measurement.translation(),
+      NM::Isotropic::Sigma(3, 0.25));
+  CHECK(assert_equal(3, factor2.prior().rows()));
+  CHECK(assert_equal(measurement.translation(), factor2.prior()));
+  CHECK(assert_container_equality<Indices>(t_indices, factor2.indices()));
+
+  // Full tangent vector of rotation.
+  const Indices r_indices = { kIndexRx, kIndexRy, kIndexRz };
+  TestPartialPriorFactor3 factor3(poseKey, r_indices, Rot3::Logmap(measurement.rotation()),
+      NM::Isotropic::Sigma(3, 0.1));
+  CHECK(assert_equal(3, factor3.prior().rows()));
+  CHECK(assert_equal(Rot3::Logmap(measurement.rotation()), factor3.prior()));
+  CHECK(assert_container_equality<Indices>(r_indices, factor3.indices()));
+}
+
+/* ************************************************************************* */
+TEST(PartialPriorFactor, JacobianAtIdentity3) {
+  Key poseKey(1);
+  Pose3 measurement = Pose3::identity();
+  SharedNoiseModel model = NM::Isotropic::Sigma(1, 0.25);
+
+  TestPartialPriorFactor3 factor(poseKey, kIndexTy, measurement.translation().y(), model);
+
+  Pose3 pose = measurement; // Zero-error linearization point.
+
+  // Calculate numerical derivatives.
+  Matrix expectedH1 = numericalDerivative11<Vector, Pose3>(
+      boost::bind(&TestPartialPriorFactor3::evaluateError, &factor, _1, boost::none), pose);
+
+  // Use the factor to calculate the derivative.
+  Matrix actualH1;
+  factor.evaluateError(pose, actualH1);
+
+  // Verify we get the expected error.
+  CHECK(assert_equal(expectedH1, actualH1, 1e-5));
+}
+
+/* ************************************************************************* */
+TEST(PartialPriorFactor, JacobianPartialTranslation3) {
+  Key poseKey(1);
+  Pose3 measurement(Rot3::RzRyRx(0.15, -0.30, 0.45), Point3(-5.0, 8.0, -11.0));
+  SharedNoiseModel model = NM::Isotropic::Sigma(1, 0.25);
+
+  TestPartialPriorFactor3 factor(poseKey, kIndexTy, measurement.translation().y(), model);
+
+  Pose3 pose = measurement; // Zero-error linearization point.
+
+  // Calculate numerical derivatives.
+  Matrix expectedH1 = numericalDerivative11<Vector, Pose3>(
+      boost::bind(&TestPartialPriorFactor3::evaluateError, &factor, _1, boost::none), pose);
+
+  // Use the factor to calculate the derivative.
+  Matrix actualH1;
+  factor.evaluateError(pose, actualH1);
+
+  // Verify we get the expected error.
+  CHECK(assert_equal(expectedH1, actualH1, 1e-5));
+}
+
+/* ************************************************************************* */
+TEST(PartialPriorFactor, JacobianFullTranslation3) {
+  Key poseKey(1);
+  Pose3 measurement(Rot3::RzRyRx(0.15, -0.30, 0.45), Point3(-5.0, 8.0, -11.0));
+  SharedNoiseModel model = NM::Isotropic::Sigma(3, 0.25);
+
+  std::vector<size_t> translationIndices = { kIndexTx, kIndexTy, kIndexTz };
+  TestPartialPriorFactor3 factor(poseKey, translationIndices, measurement.translation(), model);
+
+  // Create a linearization point at the zero-error point
+  Pose3 pose = measurement; // Zero-error linearization point.
+
+  // Calculate numerical derivatives.
+  Matrix expectedH1 = numericalDerivative11<Vector, Pose3>(
+      boost::bind(&TestPartialPriorFactor3::evaluateError, &factor, _1, boost::none), pose);
+
+  // Use the factor to calculate the derivative.
+  Matrix actualH1;
+  factor.evaluateError(pose, actualH1);
+
+  // Verify we get the expected error.
+  CHECK(assert_equal(expectedH1, actualH1, 1e-5));
+}
+
+/* ************************************************************************* */
+TEST(PartialPriorFactor, JacobianTxTz3) {
+  Key poseKey(1);
+  Pose3 measurement(Rot3::RzRyRx(-0.17, 0.567, M_PI), Point3(10.0, -2.3, 3.14));
+  SharedNoiseModel model = NM::Isotropic::Sigma(2, 0.25);
+
+  std::vector<size_t> translationIndices = { kIndexTx, kIndexTz };
+  TestPartialPriorFactor3 factor(poseKey, translationIndices,
+      (Vector(2) << measurement.x(), measurement.z()).finished(), model);
+
+  Pose3 pose = measurement; // Zero-error linearization point.
+
+  // Calculate numerical derivatives.
+  Matrix expectedH1 = numericalDerivative11<Vector, Pose3>(
+      boost::bind(&TestPartialPriorFactor3::evaluateError, &factor, _1, boost::none), pose);
+
+  // Use the factor to calculate the derivative.
+  Matrix actualH1;
+  factor.evaluateError(pose, actualH1);
+
+  // Verify we get the expected error.
+  CHECK(assert_equal(expectedH1, actualH1, 1e-5));
+}
+
+/* ************************************************************************* */
+TEST(PartialPriorFactor, JacobianFullRotation3) {
+  Key poseKey(1);
+  Pose3 measurement(Rot3::RzRyRx(0.15, -0.30, 0.45), Point3(-5.0, 8.0, -11.0));
+  SharedNoiseModel model = NM::Isotropic::Sigma(3, 0.25);
+
+  std::vector<size_t> rotationIndices = { kIndexRx, kIndexRy, kIndexRz };
+  TestPartialPriorFactor3 factor(poseKey, rotationIndices, Rot3::Logmap(measurement.rotation()), model);
+
+  Pose3 pose = measurement; // Zero-error linearization point.
+
+  // Calculate numerical derivatives.
+  Matrix expectedH1 = numericalDerivative11<Vector, Pose3>(
+      boost::bind(&TestPartialPriorFactor3::evaluateError, &factor, _1, boost::none), pose);
+
+  // Use the factor to calculate the derivative.
+  Matrix actualH1;
+  factor.evaluateError(pose, actualH1);
+
+  // Verify we get the expected error.
+  CHECK(assert_equal(expectedH1, actualH1, 1e-5));
+}
+
+/* ************************************************************************* */
+int main() { TestResult tr; return TestRegistry::runAllTests(tr); }
+/* ************************************************************************* */
--- gtsam-4.1.0.orig/matlab/+gtsam/Contents.m
+++ gtsam-4.1.0/matlab/+gtsam/Contents.m
@@ -99,6 +99,7 @@
 % 
 %% SLAM and SFM
 %   BearingFactor2D                   - class BearingFactor2D, see Doxygen page for details
+%   BearingFactor3D                   - class BearingFactor3D, see Doxygen page for details
 %   BearingRangeFactor2D              - class BearingRangeFactor2D, see Doxygen page for details
 %   BetweenFactorLieMatrix            - class BetweenFactorLieMatrix, see Doxygen page for details
 %   BetweenFactorLieScalar            - class BetweenFactorLieScalar, see Doxygen page for details
--- gtsam-4.1.0.orig/matlab/+gtsam/plotBayesNet.m
+++ gtsam-4.1.0/matlab/+gtsam/plotBayesNet.m
@@ -5,4 +5,6 @@ function plotBayesNet(bayesNet)
 bayesNet.saveGraph('/tmp/bayesNet.dot')
 !dot -Tpng -o /tmp/dotImage.png /tmp/bayesNet.dot
 dotImage=imread('/tmp/dotImage.png');
-imshow(dotImage)
\ No newline at end of file
+imshow(dotImage)
+
+end
\ No newline at end of file
--- gtsam-4.1.0.orig/matlab/+gtsam/plotBayesTree.m
+++ gtsam-4.1.0/matlab/+gtsam/plotBayesTree.m
@@ -5,4 +5,6 @@ function plotBayesTree(bayesTree)
 bayesTree.saveGraph('/tmp/bayesTree.dot')
 !dot -Tpng -o /tmp/dotImage.png /tmp/bayesTree.dot
 dotImage=imread('/tmp/dotImage.png');
-imshow(dotImage)
\ No newline at end of file
+imshow(dotImage)
+
+end
\ No newline at end of file
--- gtsam-4.1.0.orig/matlab/CMakeLists.txt
+++ gtsam-4.1.0/matlab/CMakeLists.txt
@@ -1,41 +1,132 @@
 # Install matlab components
 
-include(GtsamMatlabWrap)
+# Check if flag is enabled
+if(NOT GTSAM_INSTALL_MATLAB_TOOLBOX)
+  return()
+endif()
+
+# Create the matlab toolbox for the gtsam library
+
+# Set the wrapping script variable
+set(MATLAB_WRAP_SCRIPT "${GTSAM_SOURCE_DIR}/wrap/scripts/matlab_wrap.py")
+
+# Set up cache options
+option(GTSAM_MEX_BUILD_STATIC_MODULE
+       "Build MATLAB wrapper statically (increases build time)" OFF)
+set(GTSAM_BUILD_MEX_BINARY_FLAGS
+    ""
+    CACHE STRING "Extra flags for running Matlab MEX compilation")
+set(GTSAM_TOOLBOX_INSTALL_PATH
+    ""
+    CACHE
+      PATH
+      "Matlab toolbox destination, blank defaults to CMAKE_INSTALL_PREFIX/gtsam_toolbox"
+)
+if(NOT GTSAM_TOOLBOX_INSTALL_PATH)
+  set(GTSAM_TOOLBOX_INSTALL_PATH "${CMAKE_INSTALL_PREFIX}/gtsam_toolbox")
+endif()
+
+set(WRAP_MEX_BUILD_STATIC_MODULE ${GTSAM_MEX_BUILD_STATIC_MODULE})
+set(WRAP_BUILD_MEX_BINARY_FLAGS ${GTSAM_BUILD_MEX_BINARY_FLAGS})
+set(WRAP_TOOLBOX_INSTALL_PATH ${GTSAM_TOOLBOX_INSTALL_PATH})
+set(WRAP_CUSTOM_MATLAB_PATH ${GTSAM_CUSTOM_MATLAB_PATH})
+set(WRAP_BUILD_TYPE_POSTFIXES ${GTSAM_BUILD_TYPE_POSTFIXES})
+
+# Fixup the Python paths
+if(GTWRAP_DIR)
+  # packaged
+  set(GTWRAP_PACKAGE_DIR ${GTWRAP_DIR})
+else()
+  set(GTWRAP_PACKAGE_DIR ${GTSAM_SOURCE_DIR}/wrap)
+endif()
 
-# Tests
-#message(STATUS "Installing Matlab Toolbox")
+include(MatlabWrap)
+
+if(NOT BUILD_SHARED_LIBS)
+  message(
+    FATAL_ERROR
+      "GTSAM_INSTALL_MATLAB_TOOLBOX and BUILD_SHARED_LIBS=OFF."
+      "The MATLAB wrapper cannot be compiled with a static GTSAM library because mex modules are themselves shared libraries."
+      "If you want a self-contained mex module, enable GTSAM_MEX_BUILD_STATIC_MODULE instead of BUILD_SHARED_LIBS=OFF."
+  )
+endif()
+
+# ##############################################################################
+# Generate, build and install toolbox
+set(mexFlags "${GTSAM_BUILD_MEX_BINARY_FLAGS}")
+if(NOT BUILD_SHARED_LIBS)
+  list(APPEND mexFlags -DGTSAM_IMPORT_STATIC)
+endif()
+
+# ignoring the non-concrete types (type aliases)
+set(ignore
+    gtsam::Point2
+    gtsam::Point3)
+
+# Wrap
+matlab_wrap(${GTSAM_SOURCE_DIR}/gtsam/gtsam.i "${GTSAM_ADDITIONAL_LIBRARIES}"
+            "" "${mexFlags}" "${ignore}")
+
+# Wrap version for gtsam_unstable
+if(GTSAM_UNSTABLE_INSTALL_MATLAB_TOOLBOX)
+  # Generate, build and install toolbox
+  set(mexFlags "${GTSAM_BUILD_MEX_BINARY_FLAGS}")
+  if(NOT BUILD_SHARED_LIBS)
+    list(APPEND mexFlags -DGTSAM_IMPORT_STATIC)
+  endif()
+
+  # Wrap
+  matlab_wrap(${GTSAM_SOURCE_DIR}/gtsam_unstable/gtsam_unstable.i "gtsam" ""
+              "${mexFlags}" "${ignore}")
+endif(GTSAM_UNSTABLE_INSTALL_MATLAB_TOOLBOX)
+
+# Record the root dir for gtsam - needed during external builds, e.g., ROS
+set(GTSAM_SOURCE_ROOT_DIR ${GTSAM_SOURCE_DIR})
+message(STATUS "GTSAM_SOURCE_ROOT_DIR: [${GTSAM_SOURCE_ROOT_DIR}]")
+
+# Tests message(STATUS "Installing Matlab Toolbox")
 install_matlab_scripts("${GTSAM_SOURCE_ROOT_DIR}/matlab/" "*.m;*.fig")
-install_matlab_scripts("${GTSAM_SOURCE_ROOT_DIR}/matlab/" "README-gtsam-toolbox.txt")
+install_matlab_scripts("${GTSAM_SOURCE_ROOT_DIR}/matlab/"
+                       "README-gtsam-toolbox.txt")
 
-# Examples
-#message(STATUS "Installing Matlab Toolbox Examples")
-# Matlab files: *.m and *.fig
-#install_matlab_scripts("${GTSAM_SOURCE_ROOT_DIR}/matlab/gtsam_examples" "*.m;*.fig")
-
-# Utilities
-#message(STATUS "Installing Matlab Toolbox Utilities")
-#install_matlab_scripts("${GTSAM_SOURCE_ROOT_DIR}/matlab/+gtsam" "*.m")
-
-#message(STATUS "Installing Matlab Toolbox Example Data")
-# Data files: *.graph, *.mat, and *.txt
-file(GLOB matlab_examples_data_graph "${GTSAM_SOURCE_ROOT_DIR}/examples/Data/*.graph")
-file(GLOB matlab_examples_data_mat "${GTSAM_SOURCE_ROOT_DIR}/examples/Data/*.mat")
-file(GLOB matlab_examples_data_txt "${GTSAM_SOURCE_ROOT_DIR}/examples/Data/*.txt")
-set(matlab_examples_data ${matlab_examples_data_graph} ${matlab_examples_data_mat} ${matlab_examples_data_txt}) 
+# Examples message(STATUS "Installing Matlab Toolbox Examples") Matlab files:
+# *.m and *.fig
+# install_matlab_scripts("${GTSAM_SOURCE_ROOT_DIR}/matlab/gtsam_examples"
+# "*.m;*.fig")
+
+# Utilities message(STATUS "Installing Matlab Toolbox Utilities")
+# install_matlab_scripts("${GTSAM_SOURCE_ROOT_DIR}/matlab/+gtsam" "*.m")
+
+# message(STATUS "Installing Matlab Toolbox Example Data") Data files: *.graph,
+# *.mat, and *.txt
+file(GLOB matlab_examples_data_graph
+     "${GTSAM_SOURCE_ROOT_DIR}/examples/Data/*.graph")
+file(GLOB matlab_examples_data_mat
+     "${GTSAM_SOURCE_ROOT_DIR}/examples/Data/*.mat")
+file(GLOB matlab_examples_data_txt
+     "${GTSAM_SOURCE_ROOT_DIR}/examples/Data/*.txt")
+set(matlab_examples_data
+    ${matlab_examples_data_graph} ${matlab_examples_data_mat}
+    ${matlab_examples_data_txt})
 if(GTSAM_BUILD_TYPE_POSTFIXES)
-	foreach(build_type ${CMAKE_CONFIGURATION_TYPES})
-		string(TOUPPER "${build_type}" build_type_upper)
-		if(${build_type_upper} STREQUAL "RELEASE")
-			set(build_type_tag "") # Don't create release mode tag on installed directory
-		else()
-			set(build_type_tag "${build_type}")
-		endif()
-		# Split up filename to strip trailing '/' in GTSAM_TOOLBOX_INSTALL_PATH if there is one
-		get_filename_component(location "${GTSAM_TOOLBOX_INSTALL_PATH}" PATH)
-		get_filename_component(name "${GTSAM_TOOLBOX_INSTALL_PATH}" NAME)
-		install(FILES ${matlab_examples_data} DESTINATION "${location}/${name}${build_type_tag}/gtsam_examples/Data" CONFIGURATIONS "${build_type}")
-	endforeach()
+  foreach(build_type ${CMAKE_CONFIGURATION_TYPES})
+    string(TOUPPER "${build_type}" build_type_upper)
+    if(${build_type_upper} STREQUAL "RELEASE")
+      set(build_type_tag "") # Don't create release mode tag on installed
+      # directory
+    else()
+      set(build_type_tag "${build_type}")
+    endif()
+    # Split up filename to strip trailing '/' in GTSAM_TOOLBOX_INSTALL_PATH if
+    # there is one
+    get_filename_component(location "${GTSAM_TOOLBOX_INSTALL_PATH}" PATH)
+    get_filename_component(name "${GTSAM_TOOLBOX_INSTALL_PATH}" NAME)
+    install(
+      FILES ${matlab_examples_data}
+      DESTINATION "${location}/${name}${build_type_tag}/gtsam_examples/Data"
+      CONFIGURATIONS "${build_type}")
+  endforeach()
 else()
-	install(FILES ${matlab_examples_data} DESTINATION ${GTSAM_TOOLBOX_INSTALL_PATH}/gtsam_examples/Data)
+  install(FILES ${matlab_examples_data}
+          DESTINATION ${GTSAM_TOOLBOX_INSTALL_PATH}/gtsam_examples/Data)
 endif()
-
--- gtsam-4.1.0.orig/matlab/README.md
+++ gtsam-4.1.0/matlab/README.md
@@ -4,16 +4,16 @@ http://borg.cc.gatech.edu/projects/gtsam
 
 This is the GTSAM MATLAB toolbox, a MATLAB wrapper around the GTSAM C++ library. To build it, enable `GTSAM_INSTALL_MATLAB_TOOLBOX=ON` in CMake.
 
-The interface to the toolbox is generated automatically by the wrap
-tool which directly parses C++ header files. The tool generates matlab proxy objects together with all the native functions for wrapping and unwrapping scalar and non scalar types and objects. The interface generated by the wrap tool also redirects the standard output stream (cout) to matlab's console.
+The interface to the toolbox is generated automatically by the wrap tool which directly parses C++ header files.
+The tool generates matlab proxy objects together with all the native functions for wrapping and unwrapping scalar and non scalar types and objects.
+The interface generated by the wrap tool also redirects the standard output stream (cout) to matlab's console.
 
 ## Ubuntu
 
-If you have a newer Ubuntu system (later than 10.04), you must make a small modification to your MATLAB installation, due to MATLAB being distributed with an old version of the C++ standard library.  Delete or rename all files starting with `libstdc++` in your MATLAB installation directory, in paths:
-
-	/usr/local/MATLAB/[version]/sys/os/[system]/ 
-	/usr/local/MATLAB/[version]/bin/[system]/
+If you have a newer Ubuntu system (later than 10.04), you must make a small modification to your MATLAB installation, due to MATLAB being distributed with an old version of the C++ standard library. Delete or rename all files starting with `libstdc++` in your MATLAB installation directory, in paths:
 
+    /usr/local/MATLAB/[version]/sys/os/[system]/
+    /usr/local/MATLAB/[version]/bin/[system]/
 
 ## Adding the toolbox to your MATLAB path
 
@@ -37,25 +37,28 @@ export LD_LIBRARY_PATH=<install-path>/gt
 
 ### Linker issues
 
-If you compile the MATLAB toolbox and everything compiles smoothly, but when you run any MATLAB script, you get following error messages in MATLAB
+If you compile the MATLAB toolbox and everything compiles smoothly, but when you run any MATLAB script, you get any of the following error messages in MATLAB
+
 ```
 Invalid MEX-file '/usr/local/gtsam_toolbox/gtsam_wrapper.mexa64':
 Missing symbol 'mexAtExit' required by '/usr/local/gtsam_toolbox/gtsam_wrapper.mexa64'
 Missing symbol 'mexCallMATLABWithObject' required by '/usr/local/gtsam_toolbox/gtsam_wrapper.mexa64'
 ...
 ```
+
 run following shell line
+
 ```sh
 export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libstdc++.so.6
 ```
-before you run MATLAB from the same shell. 
 
-This mainly happens if you have GCC >= 5 and newer version MATLAB like R2017a.
+before you run MATLAB from the same shell.
 
+This mainly happens if you have GCC >= 5 and newer version MATLAB like R2017a.
 
 ## Trying out the examples
 
-The examples are located in the 'gtsam_examples' subfolder.  You may either run them individually at the MATLAB command line, or open the GTSAM example GUI by running 'gtsamExamples'.  Example:
+The examples are located in the 'gtsam_examples' subfolder. You may either run them individually at the MATLAB command line, or open the GTSAM example GUI by running 'gtsamExamples'. Example:
 
 ```matlab
 >> cd /Users/yourname/toolbox  % Change to wherever you installed the toolbox
@@ -65,7 +68,7 @@ The examples are located in the 'gtsam_e
 
 ## Running the unit tests
 
-The GTSAM MATLAB toolbox also has a small set of unit tests located in the gtsam_tests directory.  Example:
+The GTSAM MATLAB toolbox also has a small set of unit tests located in the gtsam_tests directory. Example:
 
 ```matlab
 >> cd /Users/yourname/toolbox  % Change to wherever you installed the toolbox
@@ -86,4 +89,4 @@ Tests complete!
 
 ## Writing your own code
 
-Coding for the GTSAM MATLAB toolbox is straightforward and very fast once you understand a few basic concepts!  Please see the manual to get started.
+Coding for the GTSAM MATLAB toolbox is straightforward and very fast once you understand a few basic concepts! Please see the manual to get started.
--- gtsam-4.1.0.orig/matlab/gtsam_tests/testSerialization.m
+++ gtsam-4.1.0/matlab/gtsam_tests/testSerialization.m
@@ -28,10 +28,6 @@ serialized_pose1 = pose1.string_serializ
 pose1ds = Pose2.string_deserialize(serialized_pose1);
 CHECK('pose1ds.equals(pose1, 1e-9)', pose1ds.equals(pose1, 1e-9));
 
-serialized_landmark1 = landmark1.string_serialize();
-landmark1ds = Point2.string_deserialize(serialized_landmark1);
-CHECK('landmark1ds.equals(landmark1, 1e-9)', landmark1ds.equals(landmark1, 1e-9));
-
 %% Create and serialize Values
 values = Values;
 values.insert(i1, pose1);
--- gtsam-4.1.0.orig/matlab/gtsam_tests/testThinBayesTree.m
+++ gtsam-4.1.0/matlab/gtsam_tests/testThinBayesTree.m
@@ -20,4 +20,4 @@
 %% Run the tests
 import gtsam.*
 bayesTree = thinBayesTree(3,2);
-EQUALITY('7 = bayesTree.size', 7, bayesTree.size);
\ No newline at end of file
+EQUALITY('7 = bayesTree.size', 4, bayesTree.size);
\ No newline at end of file
--- gtsam-4.1.0.orig/matlab/gtsam_tests/testTriangulation.m
+++ gtsam-4.1.0/matlab/gtsam_tests/testTriangulation.m
@@ -44,15 +44,15 @@ optimize = true;
 rank_tol = 1e-9;
 
 triangulated_landmark = triangulatePoint3(poses,sharedCal, measurements, rank_tol, optimize);
-CHECK('triangulated_landmark',landmark.equals(triangulated_landmark,1e-9));
+CHECK('triangulated_landmark', abs(landmark - triangulated_landmark) < 1e-9);
 
 %% 2. Add some noise and try again: result should be ~ (4.995, 0.499167, 1.19814)
 measurements = Point2Vector;
-measurements.push_back(z1.retract([0.1;0.5]));
-measurements.push_back(z2.retract([-0.2;0.3]));
+measurements.push_back(z1 + [0.1;0.5]);
+measurements.push_back(z2 + [-0.2;0.3]);
 
 triangulated_landmark = triangulatePoint3(poses,sharedCal, measurements, rank_tol, optimize);
-CHECK('triangulated_landmark',landmark.equals(triangulated_landmark,1e-2));
+CHECK('triangulated_landmark', abs(landmark - triangulated_landmark) < 1e-2);
 
 %% two Poses with Bundler Calibration
 bundlerCal = Cal3Bundler(1500, 0, 0, 640, 480);
@@ -67,4 +67,4 @@ measurements.push_back(z1);
 measurements.push_back(z2);
 
 triangulated_landmark = triangulatePoint3(poses,bundlerCal, measurements, rank_tol, optimize);
-CHECK('triangulated_landmark',landmark.equals(triangulated_landmark,1e-9));
+CHECK('triangulated_landmark', abs(landmark - triangulated_landmark) < 1e-9);
--- gtsam-4.1.0.orig/matlab/gtsam_tests/thinBayesTree.m
+++ gtsam-4.1.0/matlab/gtsam_tests/thinBayesTree.m
@@ -1,5 +1,6 @@
 function bayesTree = thinBayesTree(depth, width)
     import gtsam.*
     bayesNet = thinTreeBayesNet(depth, width);
-    bayesTree = GaussianBayesTree(bayesNet);
+    fg = GaussianFactorGraph(bayesNet);
+    bayesTree = fg.eliminateMultifrontal();
 end
\ No newline at end of file
--- gtsam-4.1.0.orig/matlab/gtsam_tests/thinTreeBayesNet.m
+++ gtsam-4.1.0/matlab/gtsam_tests/thinTreeBayesNet.m
@@ -6,8 +6,9 @@ bayesNet = GaussianBayesNet;
 tree = thinTree(depth,width);
 
 % Add root to the Bayes net
-gc = gtsam.GaussianConditional(1, 5*rand(1), 5*rand(1), 3*rand(1));
-bayesNet.push_front(gc);
+model = noiseModel.Isotropic.Sigma(1, 3*rand(1));
+gc = gtsam.GaussianConditional(1, 5*rand(1), 5*rand(1), model);
+bayesNet.push_back(gc);
 
 n=tree.getNumberOfElements();
 for i=2:n
@@ -17,13 +18,15 @@ for i=2:n
   % Create and link the corresponding GaussianConditionals
   if tree.getW == 1 || di == 2
     % Creation of single-parent GaussianConditional
-    gc = gtsam.GaussianConditional(n-i, 5*rand(1), 5*rand(1), n-parents(1), 5*rand(1), 5*rand(1));
+    model = noiseModel.Isotropic.Sigma(1, 5*rand(1));
+    gc = gtsam.GaussianConditional(n-i, 5*rand(1), 5*rand(1), n-parents(1), 5*rand(1), model);
   elseif tree.getW == 2 || di == 3
     % GaussianConditionalj associated with the second parent
-    gc = gtsam.GaussianConditional(n-i, 5*rand(1), 5*rand(1), n-parents(1), 5*rand(1), n-parents(2), 5*rand(1), 5*rand(1));
+    model = noiseModel.Isotropic.Sigma(1, 5*rand(1));
+    gc = gtsam.GaussianConditional(n-i, 5*rand(1), 5*rand(1), n-parents(1), 5*rand(1), n-parents(2), 5*rand(1), model);
   end
   % Add conditional to the Bayes net
-  bayesNet.push_front(gc);
+  bayesNet.push_back(gc);
 end
 
 end
\ No newline at end of file
--- gtsam-4.1.0.orig/python/CMakeLists.txt
+++ gtsam-4.1.0/python/CMakeLists.txt
@@ -9,11 +9,23 @@ file(READ "${PROJECT_SOURCE_DIR}/README.
 configure_file(${PROJECT_SOURCE_DIR}/python/setup.py.in
                 ${GTSAM_PYTHON_BUILD_DIRECTORY}/setup.py)
 
-set(WRAP_USE_CUSTOM_PYTHON_LIBRARY ${GTSAM_USE_CUSTOM_PYTHON_LIBRARY})
-set(WRAP_PYTHON_VERSION ${GTSAM_PYTHON_VERSION})
+# Supply MANIFEST.in for older versions of Python
+file(COPY ${PROJECT_SOURCE_DIR}/python/MANIFEST.in
+     DESTINATION ${GTSAM_PYTHON_BUILD_DIRECTORY})
+
+set(WRAP_BUILD_TYPE_POSTFIXES ${GTSAM_BUILD_TYPE_POSTFIXES})
 
 include(PybindWrap)
 
+############################################################
+## Load the necessary files to compile the wrapper
+
+# Load the pybind11 code
+add_subdirectory(${PROJECT_SOURCE_DIR}/wrap/pybind11 pybind11)
+# Set the wrapping script variable
+set(PYBIND_WRAP_SCRIPT "${PROJECT_SOURCE_DIR}/wrap/scripts/pybind_wrap.py")
+############################################################
+
 add_custom_target(gtsam_header DEPENDS "${PROJECT_SOURCE_DIR}/gtsam/gtsam.i")
 add_custom_target(gtsam_unstable_header DEPENDS "${PROJECT_SOURCE_DIR}/gtsam_unstable/gtsam_unstable.i")
 
@@ -26,11 +38,17 @@ set(ignore
     gtsam::ISAM2ThresholdMapValue
     gtsam::FactorIndices
     gtsam::FactorIndexSet
+    gtsam::IndexPairSetMap
+    gtsam::IndexPairVector
     gtsam::BetweenFactorPose2s
     gtsam::BetweenFactorPose3s
     gtsam::Point2Vector
+    gtsam::Point3Pairs
+    gtsam::Pose3Pairs
     gtsam::Pose3Vector
-    gtsam::KeyVector)
+    gtsam::KeyVector
+    gtsam::BinaryMeasurementsUnit3
+    gtsam::KeyPairDoubleMap)
 
 pybind_wrap(gtsam_py # target
             ${PROJECT_SOURCE_DIR}/gtsam/gtsam.i # interface_header
@@ -59,50 +77,68 @@ set(GTSAM_MODULE_PATH ${GTSAM_PYTHON_BUI
 create_symlinks("${CMAKE_CURRENT_SOURCE_DIR}/gtsam"
         "${GTSAM_MODULE_PATH}")
 
+# Common directory for data/datasets stored with the package.
+# This will store the data in the Python site package directly.
+file(COPY "${GTSAM_SOURCE_DIR}/examples/Data" DESTINATION "${GTSAM_MODULE_PATH}")
+
+# Add gtsam as a dependency to the install target
+set(GTSAM_PYTHON_DEPENDENCIES gtsam_py)
+
+
 if(GTSAM_UNSTABLE_BUILD_PYTHON)
-set(ignore
-        gtsam::Point2
-        gtsam::Point3
-        gtsam::LieVector
-        gtsam::LieMatrix
-        gtsam::ISAM2ThresholdMapValue
-        gtsam::FactorIndices
-        gtsam::FactorIndexSet
-        gtsam::BetweenFactorPose3s
-        gtsam::Point2Vector
-        gtsam::Pose3Vector
-        gtsam::KeyVector
-        gtsam::FixedLagSmootherKeyTimestampMapValue)
-pybind_wrap(gtsam_unstable_py # target
-        ${PROJECT_SOURCE_DIR}/gtsam_unstable/gtsam_unstable.i # interface_header
-        "gtsam_unstable.cpp" # generated_cpp
-        "gtsam_unstable" # module_name
-        "gtsam" # top_namespace
-        "${ignore}" # ignore_classes
-        ${PROJECT_SOURCE_DIR}/python/gtsam_unstable/gtsam_unstable.tpl
-        gtsam_unstable # libs
-        "gtsam_unstable;gtsam_unstable_header" # dependencies
-        ON # use_boost
-        )
-
-set_target_properties(gtsam_unstable_py PROPERTIES
-        INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib"
-        INSTALL_RPATH_USE_LINK_PATH TRUE
-        OUTPUT_NAME "gtsam_unstable"
-        LIBRARY_OUTPUT_DIRECTORY "${GTSAM_PYTHON_BUILD_DIRECTORY}/gtsam_unstable"
-        DEBUG_POSTFIX "" # Otherwise you will have a wrong name
-        RELWITHDEBINFO_POSTFIX "" # Otherwise you will have a wrong name
-        )
+    set(ignore
+            gtsam::Point2
+            gtsam::Point3
+            gtsam::LieVector
+            gtsam::LieMatrix
+            gtsam::ISAM2ThresholdMapValue
+            gtsam::FactorIndices
+            gtsam::FactorIndexSet
+            gtsam::BetweenFactorPose3s
+            gtsam::Point2Vector
+            gtsam::Pose3Vector
+            gtsam::KeyVector
+            gtsam::FixedLagSmootherKeyTimestampMapValue
+            gtsam::BinaryMeasurementsUnit3
+            gtsam::CameraSetCal3_S2
+            gtsam::CameraSetCal3Bundler
+            gtsam::KeyPairDoubleMap)
+            
+    pybind_wrap(gtsam_unstable_py # target
+            ${PROJECT_SOURCE_DIR}/gtsam_unstable/gtsam_unstable.i # interface_header
+            "gtsam_unstable.cpp" # generated_cpp
+            "gtsam_unstable" # module_name
+            "gtsam" # top_namespace
+            "${ignore}" # ignore_classes
+            ${PROJECT_SOURCE_DIR}/python/gtsam_unstable/gtsam_unstable.tpl
+            gtsam_unstable # libs
+            "gtsam_unstable;gtsam_unstable_header" # dependencies
+            ON # use_boost
+            )
+
+    set_target_properties(gtsam_unstable_py PROPERTIES
+            INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib"
+            INSTALL_RPATH_USE_LINK_PATH TRUE
+            OUTPUT_NAME "gtsam_unstable"
+            LIBRARY_OUTPUT_DIRECTORY "${GTSAM_PYTHON_BUILD_DIRECTORY}/gtsam_unstable"
+            DEBUG_POSTFIX "" # Otherwise you will have a wrong name
+            RELWITHDEBINFO_POSTFIX "" # Otherwise you will have a wrong name
+            )
 
-set(GTSAM_UNSTABLE_MODULE_PATH ${GTSAM_PYTHON_BUILD_DIRECTORY}/gtsam_unstable)
+    set(GTSAM_UNSTABLE_MODULE_PATH ${GTSAM_PYTHON_BUILD_DIRECTORY}/gtsam_unstable)
+
+    # Symlink all tests .py files to build folder.
+    create_symlinks("${CMAKE_CURRENT_SOURCE_DIR}/gtsam_unstable"
+            "${GTSAM_UNSTABLE_MODULE_PATH}")
+
+    # Add gtsam_unstable to the install target
+    list(APPEND GTSAM_PYTHON_DEPENDENCIES gtsam_unstable_py)
 
-# Symlink all tests .py files to build folder.
-create_symlinks("${CMAKE_CURRENT_SOURCE_DIR}/gtsam_unstable"
-        "${GTSAM_UNSTABLE_MODULE_PATH}")
 endif()
 
+# Add custom target so we can install with `make python-install`
 set(GTSAM_PYTHON_INSTALL_TARGET python-install)
 add_custom_target(${GTSAM_PYTHON_INSTALL_TARGET}
         COMMAND ${PYTHON_EXECUTABLE} ${GTSAM_PYTHON_BUILD_DIRECTORY}/setup.py install
-        DEPENDS gtsam_py gtsam_unstable_py
+        DEPENDS ${GTSAM_PYTHON_DEPENDENCIES}
         WORKING_DIRECTORY ${GTSAM_PYTHON_BUILD_DIRECTORY})
--- /dev/null
+++ gtsam-4.1.0/python/MANIFEST.in
@@ -0,0 +1 @@
+recursive-include gtsam/Data *
--- gtsam-4.1.0.orig/python/README.md
+++ gtsam-4.1.0/python/README.md
@@ -18,8 +18,10 @@ This is the Python wrapper around the GT
 
 ## Install
 
-- Run cmake with the `GTSAM_BUILD_PYTHON` cmake flag enabled to configure building the wrapper. The wrapped module will be built and copied to the directory `<PROJECT_BINARY_DIR>/python`.
-
+- Run cmake with the `GTSAM_BUILD_PYTHON` cmake flag enabled to configure building the wrapper. The wrapped module will be built and copied to the directory `<PROJECT_BINARY_DIR>/python`. For example, if your local Python version is 3.6.10, then you should run:
+  ```bash
+  cmake .. -DGTSAM_BUILD_PYTHON=1 -DGTSAM_PYTHON_VERSION=3.6.10
+  ```
 - Build GTSAM and the wrapper with `make` (or `ninja` if you use `-GNinja`).
 
 - To install, simply run `make python-install` (`ninja python-install`).
--- gtsam-4.1.0.orig/python/gtsam/__init__.py
+++ gtsam-4.1.0/python/gtsam/__init__.py
@@ -1,4 +1,6 @@
+from . import utils
 from .gtsam import *
+from .utils import findExampleDataFile
 
 
 def _init():
--- gtsam-4.1.0.orig/python/gtsam/examples/ImuFactorExample.py
+++ gtsam-4.1.0/python/gtsam/examples/ImuFactorExample.py
@@ -104,7 +104,7 @@ class ImuFactorExample(PreintegrationExa
 
                 if verbose:
                     print(factor)
-                    print(pim.predict(actual_state_i, self.actualBias))
+                    print(pim.predict(initial_state_i, self.actualBias))
 
                 pim.resetIntegration()
 
@@ -125,7 +125,7 @@ class ImuFactorExample(PreintegrationExa
                 i += 1
 
         # add priors on end
-        # self.addPrior(num_poses - 1, graph)
+        self.addPrior(num_poses - 1, graph)
 
         initial.print_("Initial values:")
 
--- gtsam-4.1.0.orig/python/gtsam/examples/ImuFactorISAM2Example.py
+++ gtsam-4.1.0/python/gtsam/examples/ImuFactorISAM2Example.py
@@ -1,6 +1,6 @@
 """
-iSAM2 example with ImuFactor.
-Author: Robert Truax (C++), Frank Dellaert, Varun Agrawal
+ImuFactor example with iSAM2.
+Authors: Robert Truax (C++), Frank Dellaert, Varun Agrawal (Python)
 """
 # pylint: disable=invalid-name, E1101
 
@@ -8,9 +8,11 @@ from __future__ import print_function
 
 import math
 
-import gtsam
 import matplotlib.pyplot as plt
 import numpy as np
+from mpl_toolkits.mplot3d import Axes3D  # pylint: disable=W0611
+
+import gtsam
 from gtsam import (ISAM2, BetweenFactorConstantBias, Cal3_S2,
                    ConstantTwistScenario, ImuFactor, NonlinearFactorGraph,
                    PinholeCameraCal3_S2, Point3, Pose3,
@@ -18,12 +20,11 @@ from gtsam import (ISAM2, BetweenFactorC
                    PriorFactorVector, Rot3, Values)
 from gtsam.symbol_shorthand import B, V, X
 from gtsam.utils import plot
-from mpl_toolkits.mplot3d import Axes3D  # pylint: disable=W0611
 
 
 def vector3(x, y, z):
     """Create 3d double numpy array."""
-    return np.array([x, y, z], dtype=np.float)
+    return np.array([x, y, z], dtype=float)
 
 
 g = 9.81
@@ -58,7 +59,6 @@ def get_camera(radius):
 
 def get_scenario(radius, pose_0, angular_velocity, delta_t):
     """Create the set of ground-truth landmarks and poses"""
-
     angular_velocity_vector = vector3(0, -angular_velocity, 0)
     linear_velocity_vector = vector3(radius * angular_velocity, 0, 0)
     scenario = ConstantTwistScenario(
--- gtsam-4.1.0.orig/python/gtsam/examples/PlanarManipulatorExample.py
+++ gtsam-4.1.0/python/gtsam/examples/PlanarManipulatorExample.py
@@ -29,7 +29,7 @@ from gtsam.utils.test_case import GtsamT
 
 def vector3(x, y, z):
     """Create 3D double numpy array."""
-    return np.array([x, y, z], dtype=np.float)
+    return np.array([x, y, z], dtype=float)
 
 
 def compose(*poses):
@@ -94,7 +94,7 @@ class ThreeLinkArm(object):
                          [-self.L1*math.sin(q[0]) - self.L2*math.sin(a)-self.L3*math.sin(b),
                           -self.L1*math.sin(a)-self.L3*math.sin(b),
                           - self.L3*math.sin(b)],
-                         [1, 1, 1]], np.float)
+                         [1, 1, 1]], float)
 
     def poe(self, q):
         """ Forward kinematics.
@@ -230,12 +230,12 @@ class TestPose2SLAMExample(GtsamTestCase
     def test_jacobian(self):
         """Test Jacobian calculation."""
         # at rest
-        expected = np.array([[-9.5, -6, -2.5], [0, 0, 0], [1, 1, 1]], np.float)
+        expected = np.array([[-9.5, -6, -2.5], [0, 0, 0], [1, 1, 1]], float)
         J = self.arm.jacobian(Q0)
         np.testing.assert_array_almost_equal(J, expected)
 
         # at -90, 90, 0
-        expected = np.array([[-6, -6, -2.5], [3.5, 0, 0], [1, 1, 1]], np.float)
+        expected = np.array([[-6, -6, -2.5], [3.5, 0, 0], [1, 1, 1]], float)
         J = self.arm.jacobian(Q2)
         np.testing.assert_array_almost_equal(J, expected)
 
@@ -280,13 +280,13 @@ class TestPose2SLAMExample(GtsamTestCase
     def test_manipulator_jacobian(self):
         """Test Jacobian calculation."""
         # at rest
-        expected = np.array([[0, 3.5, 7], [0, 0, 0], [1, 1, 1]], np.float)
+        expected = np.array([[0, 3.5, 7], [0, 0, 0], [1, 1, 1]], float)
         J = self.arm.manipulator_jacobian(Q0)
         np.testing.assert_array_almost_equal(J, expected)
 
         # at -90, 90, 0
         expected = np.array(
-            [[0, 0, 3.5], [0, -3.5, -3.5], [1, 1, 1]], np.float)
+            [[0, 0, 3.5], [0, -3.5, -3.5], [1, 1, 1]], float)
         J = self.arm.manipulator_jacobian(Q2)
         np.testing.assert_array_almost_equal(J, expected)
 
--- gtsam-4.1.0.orig/python/gtsam/examples/Pose2SLAMExample.py
+++ gtsam-4.1.0/python/gtsam/examples/Pose2SLAMExample.py
@@ -25,7 +25,7 @@ import gtsam.utils.plot as gtsam_plot
 
 def vector3(x, y, z):
     """Create 3d double numpy array."""
-    return np.array([x, y, z], dtype=np.float)
+    return np.array([x, y, z], dtype=float)
 
 # Create noise models
 PRIOR_NOISE = gtsam.noiseModel.Diagonal.Sigmas(vector3(0.3, 0.3, 0.1))
--- gtsam-4.1.0.orig/python/gtsam/examples/Pose2SLAMExample_g2o.py
+++ gtsam-4.1.0/python/gtsam/examples/Pose2SLAMExample_g2o.py
@@ -23,7 +23,7 @@ from gtsam.utils import plot
 
 def vector3(x, y, z):
     """Create 3d double numpy array."""
-    return np.array([x, y, z], dtype=np.float)
+    return np.array([x, y, z], dtype=float)
 
 
 parser = argparse.ArgumentParser(
--- gtsam-4.1.0.orig/python/gtsam/examples/Pose3SLAMExample_g2o.py
+++ gtsam-4.1.0/python/gtsam/examples/Pose3SLAMExample_g2o.py
@@ -19,7 +19,7 @@ from gtsam.utils import plot
 
 def vector6(x, y, z, a, b, c):
     """Create 6d double numpy array."""
-    return np.array([x, y, z, a, b, c], dtype=np.float)
+    return np.array([x, y, z, a, b, c], dtype=float)
 
 
 parser = argparse.ArgumentParser(
--- gtsam-4.1.0.orig/python/gtsam/examples/PreintegrationExample.py
+++ gtsam-4.1.0/python/gtsam/examples/PreintegrationExample.py
@@ -29,11 +29,11 @@ class PreintegrationExample(object):
         kGyroSigma = math.radians(0.5) / 60  # 0.5 degree ARW
         kAccelSigma = 0.1 / 60  # 10 cm VRW
         params.setGyroscopeCovariance(
-            kGyroSigma ** 2 * np.identity(3, np.float))
+            kGyroSigma ** 2 * np.identity(3, float))
         params.setAccelerometerCovariance(
-            kAccelSigma ** 2 * np.identity(3, np.float))
+            kAccelSigma ** 2 * np.identity(3, float))
         params.setIntegrationCovariance(
-            0.0000001 ** 2 * np.identity(3, np.float))
+            0.0000001 ** 2 * np.identity(3, float))
         return params
 
     def __init__(self, twist=None, bias=None, dt=1e-2):
@@ -111,7 +111,7 @@ class PreintegrationExample(object):
     def plotGroundTruthPose(self, t, scale=0.3, time_interval=0.01):
         # plot ground truth pose, as well as prediction from integrated IMU measurements
         actualPose = self.scenario.pose(t)
-        plot_pose3(POSES_FIG, actualPose, 0.3)
+        plot_pose3(POSES_FIG, actualPose, scale)
         t = actualPose.translation()
         self.maxDim = max([max(np.abs(t)), self.maxDim])
         ax = plt.gca()
--- gtsam-4.1.0.orig/python/gtsam/examples/README.md
+++ gtsam-4.1.0/python/gtsam/examples/README.md
@@ -3,50 +3,62 @@
 | C++ Example Name                                      | Ported |
 |-------------------------------------------------------|--------|
 | CameraResectioning                                    |        |
+| CombinedImuFactorsExample                             |        |
 | CreateSFMExampleData                                  |        |
+| DiscreteBayesNetExample                               |        |
 | DiscreteBayesNet_FG                                   | none of the required discrete functionality is exposed through Python |
 | easyPoint2KalmanFilter                                | ExtendedKalmanFilter not yet exposed through Python |
 | elaboratePoint2KalmanFilter                           | GaussianSequentialSolver not yet exposed through Python |
-| ImuFactorExample2                                     | X      |
+| FisheyeExample                                        |        |
+| HMMExample                                            |        |
+| ImuFactorsExample2                                    | :heavy_check_mark:      |
 | ImuFactorsExample                                     |        |
+| IMUKittiExampleGPS                                    |        |
+| InverseKinematicsExampleExpressions.cpp               |        |
 | ISAM2Example_SmartFactor                              |        |
 | ISAM2_SmartFactorStereo_IMU                           |        |
 | LocalizationExample                                   | impossible? |
 | METISOrderingExample                                  |        |
-| OdometryExample                                       | X      |
-| PlanarSLAMExample                                     | X      |
-| Pose2SLAMExample                                      | X      |
+| OdometryExample                                       | :heavy_check_mark:      |
+| PlanarSLAMExample                                     | :heavy_check_mark:      |
+| Pose2SLAMExample                                      | :heavy_check_mark:      |
 | Pose2SLAMExampleExpressions                           |        |
-| Pose2SLAMExample_g2o                                  | X      |
+| Pose2SLAMExample_g2o                                  | :heavy_check_mark:      |
 | Pose2SLAMExample_graph                                |        |
 | Pose2SLAMExample_graphviz                             |        |
 | Pose2SLAMExample_lago                                 | lago not yet exposed through Python |
 | Pose2SLAMStressTest                                   |        |
 | Pose2SLAMwSPCG                                        |        |
+| Pose3Localization                                 |        |
 | Pose3SLAMExample_changeKeys                           |        |
 | Pose3SLAMExampleExpressions_BearingRangeWithTransform |        |
-| Pose3SLAMExample_g2o                                  | X      |
-| Pose3SLAMExample_initializePose3Chordal               |        |
+| Pose3SLAMExample_g2o                                  | :heavy_check_mark:      |
+| Pose3SLAMExample_initializePose3Chordal               | :heavy_check_mark:        |
 | Pose3SLAMExample_initializePose3Gradient              |        |
 | RangeISAMExample_plaza2                               |        |
 | SelfCalibrationExample                                |        |
+| SFMdata                                               |        |     
 | SFMExample_bal_COLAMD_METIS                           |        |
-| SFMExample_bal                                        |        |
-| SFMExample                                            | X      |
+| SFMExample_bal                                        | :heavy_check_mark:      |
+| SFMExample                                            | :heavy_check_mark:      |
 | SFMExampleExpressions_bal                             |        |
 | SFMExampleExpressions                                 |        |
 | SFMExample_SmartFactor                                |        |
 | SFMExample_SmartFactorPCG                             |        |
-| SimpleRotation                                        | X      |
+| ShonanAveragingCLI                                    | :heavy_check_mark:       |
+| SimpleRotation                                        | :heavy_check_mark:      |
 | SolverComparer                                        |        |
 | StereoVOExample                                       |        |
 | StereoVOExample_large                                 |        |
 | TimeTBB                                               |        |
 | UGM_chain                                             | discrete functionality not yet exposed |
 | UGM_small                                             | discrete functionality not yet exposed |
-| VisualISAM2Example                                    | X      |
-| VisualISAMExample                                     | X      |
+| VisualISAM2Example                                    | :heavy_check_mark:      |
+| VisualISAMExample                                     | :heavy_check_mark:      |
 
 Extra Examples (with no C++ equivalent)
+- DogLegOptimizerExample
+- GPSFactorExample
 - PlanarManipulatorExample
-- SFMData
\ No newline at end of file
+- PreintegrationExample
+- SFMData
--- /dev/null
+++ gtsam-4.1.0/python/gtsam/examples/SFMExample_bal.py
@@ -0,0 +1,118 @@
+"""
+  GTSAM Copyright 2010, Georgia Tech Research Corporation,
+  Atlanta, Georgia 30332-0415
+  All Rights Reserved
+  Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+  See LICENSE for the license information
+
+  Solve a structure-from-motion problem from a "Bundle Adjustment in the Large" file
+  Author: Frank Dellaert (Python: Akshay Krishnan, John Lambert)
+"""
+
+import argparse
+import logging
+import sys
+
+import matplotlib.pyplot as plt
+import numpy as np
+
+import gtsam
+from gtsam import (
+    GeneralSFMFactorCal3Bundler,
+    PinholeCameraCal3Bundler,
+    PriorFactorPinholeCameraCal3Bundler,
+    readBal,
+    symbol_shorthand
+)
+
+C = symbol_shorthand.C
+P = symbol_shorthand.P
+
+
+logging.basicConfig(stream=sys.stdout, level=logging.DEBUG)
+
+def run(args):
+    """ Run LM optimization with BAL input data and report resulting error """
+    input_file = gtsam.findExampleDataFile(args.input_file)
+
+    # Load the SfM data from file
+    scene_data = readBal(input_file)
+    logging.info(f"read {scene_data.number_tracks()} tracks on {scene_data.number_cameras()} cameras\n")
+
+    # Create a factor graph
+    graph = gtsam.NonlinearFactorGraph()
+
+    # We share *one* noiseModel between all projection factors
+    noise = gtsam.noiseModel.Isotropic.Sigma(2, 1.0) # one pixel in u and v
+
+    # Add measurements to the factor graph
+    j = 0
+    for t_idx in range(scene_data.number_tracks()):
+        track = scene_data.track(t_idx) # SfmTrack
+        # retrieve the SfmMeasurement objects
+        for m_idx in range(track.number_measurements()):
+            # i represents the camera index, and uv is the 2d measurement
+            i, uv = track.measurement(m_idx)
+            # note use of shorthand symbols C and P
+            graph.add(GeneralSFMFactorCal3Bundler(uv, noise, C(i), P(j)))
+        j += 1
+
+    # Add a prior on pose x1. This indirectly specifies where the origin is.
+    graph.push_back(
+        gtsam.PriorFactorPinholeCameraCal3Bundler(
+            C(0), scene_data.camera(0), gtsam.noiseModel.Isotropic.Sigma(9, 0.1)
+        )
+    )
+    # Also add a prior on the position of the first landmark to fix the scale
+    graph.push_back(
+        gtsam.PriorFactorPoint3(
+            P(0), scene_data.track(0).point3(), gtsam.noiseModel.Isotropic.Sigma(3, 0.1)
+        )
+    )
+
+    # Create initial estimate
+    initial = gtsam.Values()
+    
+    i = 0
+    # add each PinholeCameraCal3Bundler
+    for cam_idx in range(scene_data.number_cameras()):
+        camera = scene_data.camera(cam_idx)
+        initial.insert(C(i), camera)
+        i += 1
+
+    j = 0
+    # add each SfmTrack
+    for t_idx in range(scene_data.number_tracks()):
+        track = scene_data.track(t_idx)  
+        initial.insert(P(j), track.point3())
+        j += 1
+
+    # Optimize the graph and print results
+    try:
+        params = gtsam.LevenbergMarquardtParams()
+        params.setVerbosityLM("ERROR")
+        lm = gtsam.LevenbergMarquardtOptimizer(graph, initial, params)
+        result = lm.optimize()
+    except Exception as e:
+        logging.exception("LM Optimization failed")
+        return
+    # Error drops from ~2764.22 to ~0.046
+    logging.info(f"final error: {graph.error(result)}")
+
+
+if __name__ == "__main__":
+    parser = argparse.ArgumentParser()
+    parser.add_argument(
+        '-i',
+        '--input_file',
+        type=str,
+        default="dubrovnik-3-7-pre",
+        help='Read SFM data from the specified BAL file'
+        'The data format is described here: https://grail.cs.washington.edu/projects/bal/.'
+        'BAL files contain (nrPoses, nrPoints, nrObservations), followed by (i,j,u,v) tuples, '
+        'then (wx,wy,wz,tx,ty,tz,f,k1,k1) as Bundler camera calibrations w/ Rodrigues vector'
+        'and (x,y,z) 3d point initializations.'
+    )
+    run(parser.parse_args())
+
--- /dev/null
+++ gtsam-4.1.0/python/gtsam/examples/TranslationAveragingExample.py
@@ -0,0 +1,144 @@
+"""
+GTSAM Copyright 2010-2018, Georgia Tech Research Corporation,
+Atlanta, Georgia 30332-0415
+All Rights Reserved
+Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+See LICENSE for the license information
+
+This example shows how 1dsfm uses outlier rejection (MFAS) and optimization (translation recovery)
+together for estimating global translations from relative translation directions and global rotations.
+The purpose of this example is to illustrate the connection between these two classes using a small SfM dataset.
+
+Author: Akshay Krishnan
+Date: September 2020
+"""
+
+from collections import defaultdict
+from typing import List, Tuple
+
+import numpy as np
+
+import gtsam
+from gtsam.examples import SFMdata
+
+# Hyperparameters for 1dsfm, values used from Kyle Wilson's code.
+MAX_1DSFM_PROJECTION_DIRECTIONS = 48
+OUTLIER_WEIGHT_THRESHOLD = 0.1
+
+
+def get_data() -> Tuple[gtsam.Values, List[gtsam.BinaryMeasurementUnit3]]:
+    """"Returns global rotations and unit translation directions between 8 cameras
+    that lie on a circle and face the center. The poses of 8 cameras are obtained from SFMdata
+    and the unit translations directions between some camera pairs are computed from their
+    global translations. """
+    fx, fy, s, u0, v0 = 50.0, 50.0, 0.0, 50.0, 50.0
+    wTc_list = SFMdata.createPoses(gtsam.Cal3_S2(fx, fy, s, u0, v0))
+    # Rotations of the cameras in the world frame.
+    wRc_values = gtsam.Values()
+    # Normalized translation directions from camera i to camera j
+    # in the coordinate frame of camera i.
+    i_iZj_list = []
+    for i in range(0, len(wTc_list) - 2):
+        # Add the rotation.
+        wRi = wTc_list[i].rotation()
+        wRc_values.insert(i, wRi)
+        # Create unit translation measurements with next two poses.
+        for j in range(i + 1, i + 3):
+            # Compute the translation from pose i to pose j, in the world reference frame.
+            w_itj = wTc_list[j].translation() - wTc_list[i].translation()
+            # Obtain the translation in the camera i's reference frame.
+            i_itj = wRi.unrotate(w_itj)
+            # Compute the normalized unit translation direction.
+            i_iZj = gtsam.Unit3(i_itj)
+            i_iZj_list.append(gtsam.BinaryMeasurementUnit3(
+                i, j, i_iZj, gtsam.noiseModel.Isotropic.Sigma(3, 0.01)))
+    # Add the last two rotations.
+    wRc_values.insert(len(wTc_list) - 1, wTc_list[-1].rotation())
+    wRc_values.insert(len(wTc_list) - 2, wTc_list[-2].rotation())
+    return wRc_values, i_iZj_list
+
+
+def filter_outliers(w_iZj_list: gtsam.BinaryMeasurementsUnit3) -> gtsam.BinaryMeasurementsUnit3:
+    """Removes outliers from a list of Unit3 measurements that are the 
+    translation directions from camera i to camera j in the world frame."""
+
+    # Indices of measurements that are to be used as projection directions.
+    # These are randomly chosen. All sampled directions must be unique.
+    num_directions_to_sample = min(
+        MAX_1DSFM_PROJECTION_DIRECTIONS, len(w_iZj_list))
+    sampled_indices = np.random.choice(
+        len(w_iZj_list), num_directions_to_sample, replace=False)
+
+    # Sample projection directions from the measurements.
+    projection_directions = [w_iZj_list[idx].measured()
+                             for idx in sampled_indices]
+
+    outlier_weights = []
+    # Find the outlier weights for each direction using MFAS.
+    for direction in projection_directions:
+        algorithm = gtsam.MFAS(w_iZj_list, direction)
+        outlier_weights.append(algorithm.computeOutlierWeights())
+
+    # Compute average of outlier weights. Each outlier weight is a map from a pair of Keys
+    # (camera IDs) to a weight, where weights are proportional to the probability of the edge
+    # being an outlier.
+    avg_outlier_weights = defaultdict(float)
+    for outlier_weight_dict in outlier_weights:
+        for keypair, weight in outlier_weight_dict.items():
+            avg_outlier_weights[keypair] += weight / len(outlier_weights)
+
+    # Remove w_iZj that have weight greater than threshold, these are outliers.
+    w_iZj_inliers = gtsam.BinaryMeasurementsUnit3()
+    [w_iZj_inliers.append(w_iZj) for w_iZj in w_iZj_list if avg_outlier_weights[(
+        w_iZj.key1(), w_iZj.key2())] < OUTLIER_WEIGHT_THRESHOLD]
+
+    return w_iZj_inliers
+
+
+def estimate_poses(i_iZj_list: gtsam.BinaryMeasurementsUnit3,
+                   wRc_values: gtsam.Values) -> gtsam.Values:
+    """Estimate poses given rotations and normalized translation directions between cameras.
+
+    Args:
+        i_iZj_list: List of normalized translation direction measurements between camera pairs, 
+                    Z here refers to measurements. The measurements are of camera j with reference 
+                    to camera i (iZj), in camera i's coordinate frame (i_). iZj represents a unit 
+                    vector to j in i's frame and is not a transformation. 
+        wRc_values: Rotations of the cameras in the world frame.
+
+    Returns:
+        gtsam.Values: Estimated poses.
+    """
+
+    # Convert the translation direction measurements to world frame using the rotations.
+    w_iZj_list = gtsam.BinaryMeasurementsUnit3()
+    for i_iZj in i_iZj_list:
+        w_iZj = gtsam.Unit3(wRc_values.atRot3(i_iZj.key1())
+                                      .rotate(i_iZj.measured().point3()))
+        w_iZj_list.append(gtsam.BinaryMeasurementUnit3(
+            i_iZj.key1(), i_iZj.key2(), w_iZj, i_iZj.noiseModel()))
+
+    # Remove the outliers in the unit translation directions.
+    w_iZj_inliers = filter_outliers(w_iZj_list)
+
+    # Run the optimizer to obtain translations for normalized directions.
+    wtc_values = gtsam.TranslationRecovery(w_iZj_inliers).run()
+
+    wTc_values = gtsam.Values()
+    for key in wRc_values.keys():
+        wTc_values.insert(key, gtsam.Pose3(
+            wRc_values.atRot3(key), wtc_values.atPoint3(key)))
+    return wTc_values
+
+
+def main():
+    wRc_values, i_iZj_list = get_data()
+    wTc_values = estimate_poses(i_iZj_list, wRc_values)
+    print("**** Translation averaging output ****")
+    print(wTc_values)
+    print("**************************************")
+
+
+if __name__ == '__main__':
+    main()
--- gtsam-4.1.0.orig/python/gtsam/gtsam.tpl
+++ gtsam-4.1.0/python/gtsam/gtsam.tpl
@@ -25,7 +25,7 @@
 {boost_class_export}
 
 // Holder type for pybind11
-{hoder_type}
+{holder_type}
 
 // Preamble for STL classes
 // TODO(fan): make this automatic
--- gtsam-4.1.0.orig/python/gtsam/preamble.h
+++ gtsam-4.1.0/python/gtsam/preamble.h
@@ -9,3 +9,6 @@ PYBIND11_MAKE_OPAQUE(std::vector<gtsam::
 PYBIND11_MAKE_OPAQUE(std::vector<gtsam::Pose3>);
 PYBIND11_MAKE_OPAQUE(std::vector<boost::shared_ptr<gtsam::BetweenFactor<gtsam::Pose3> > >);
 PYBIND11_MAKE_OPAQUE(std::vector<boost::shared_ptr<gtsam::BetweenFactor<gtsam::Pose2> > >);
+PYBIND11_MAKE_OPAQUE(std::vector<gtsam::IndexPair>);
+PYBIND11_MAKE_OPAQUE(gtsam::CameraSet<gtsam::PinholeCamera<gtsam::Cal3Bundler> >);
+PYBIND11_MAKE_OPAQUE(gtsam::CameraSet<gtsam::PinholeCamera<gtsam::Cal3_S2> >);
--- gtsam-4.1.0.orig/python/gtsam/specializations.h
+++ gtsam-4.1.0/python/gtsam/specializations.h
@@ -6,6 +6,14 @@ py::bind_vector<std::vector<gtsam::Key,
 py::bind_vector<std::vector<gtsam::Key> >(m_, "KeyVector");
 #endif
 py::bind_vector<std::vector<gtsam::Point2, Eigen::aligned_allocator<gtsam::Point2> > >(m_, "Point2Vector");
+py::bind_vector<std::vector<gtsam::Point3Pair> >(m_, "Point3Pairs");
+py::bind_vector<std::vector<gtsam::Pose3Pair> >(m_, "Pose3Pairs");
 py::bind_vector<std::vector<gtsam::Pose3> >(m_, "Pose3Vector");
 py::bind_vector<std::vector<boost::shared_ptr<gtsam::BetweenFactor<gtsam::Pose3> > > >(m_, "BetweenFactorPose3s");
 py::bind_vector<std::vector<boost::shared_ptr<gtsam::BetweenFactor<gtsam::Pose2> > > >(m_, "BetweenFactorPose2s");
+py::bind_vector<std::vector<gtsam::BinaryMeasurement<gtsam::Unit3> > >(m_, "BinaryMeasurementsUnit3");
+py::bind_map<gtsam::IndexPairSetMap>(m_, "IndexPairSetMap");
+py::bind_vector<gtsam::IndexPairVector>(m_, "IndexPairVector");
+py::bind_map<gtsam::KeyPairDoubleMap>(m_, "KeyPairDoubleMap");
+py::bind_vector<gtsam::CameraSet<gtsam::PinholeCamera<gtsam::Cal3_S2> > >(m_, "CameraSetCal3_S2");
+py::bind_vector<gtsam::CameraSet<gtsam::PinholeCamera<gtsam::Cal3Bundler> > >(m_, "CameraSetCal3Bundler");
--- gtsam-4.1.0.orig/python/gtsam/tests/test_JacobianFactor.py
+++ gtsam-4.1.0/python/gtsam/tests/test_JacobianFactor.py
@@ -19,7 +19,7 @@ from gtsam.utils.test_case import GtsamT
 class TestJacobianFactor(GtsamTestCase):
 
     def test_eliminate(self):
-        # Recommended way to specify a matrix (see cython/README)
+        # Recommended way to specify a matrix (see python/README)
         Ax2 = np.array(
            [[-5., 0.],
             [+0., -5.],
--- gtsam-4.1.0.orig/python/gtsam/tests/test_Pose3.py
+++ gtsam-4.1.0/python/gtsam/tests/test_Pose3.py
@@ -65,6 +65,14 @@ class TestPose3(GtsamTestCase):
         actual = Pose3.adjoint_(xi, xi)
         np.testing.assert_array_equal(actual, expected)
 
+    def test_serialization(self):
+        """Test if serialization is working normally"""
+        expected = Pose3(Rot3.Ypr(0.0, 1.0, 0.0), Point3(1, 1, 0))
+        actual = Pose3()
+        serialized = expected.serialize()
+        actual.deserialize(serialized)
+        self.gtsamAssertEquals(expected, actual, 1e-10)
+
 
 if __name__ == "__main__":
     unittest.main()
--- gtsam-4.1.0.orig/python/gtsam/tests/test_SO4.py
+++ gtsam-4.1.0/python/gtsam/tests/test_SO4.py
@@ -32,13 +32,13 @@ class TestSO4(unittest.TestCase):
 
     def test_retract(self):
         """Test retraction to manifold."""
-        v = np.zeros((6,), np.float)
+        v = np.zeros((6,), float)
         actual = I4.retract(v)
         self.assertTrue(actual.equals(I4, 1e-9))
 
     def test_local(self):
         """Check localCoordinates for trivial case."""
-        v0 = np.zeros((6,), np.float)
+        v0 = np.zeros((6,), float)
         actual = I4.localCoordinates(I4)
         np.testing.assert_array_almost_equal(actual, v0)
 
--- gtsam-4.1.0.orig/python/gtsam/tests/test_SOn.py
+++ gtsam-4.1.0/python/gtsam/tests/test_SOn.py
@@ -32,13 +32,13 @@ class TestSO4(unittest.TestCase):
 
     def test_retract(self):
         """Test retraction to manifold."""
-        v = np.zeros((6,), np.float)
+        v = np.zeros((6,), float)
         actual = I4.retract(v)
         self.assertTrue(actual.equals(I4, 1e-9))
 
     def test_local(self):
         """Check localCoordinates for trivial case."""
-        v0 = np.zeros((6,), np.float)
+        v0 = np.zeros((6,), float)
         actual = I4.localCoordinates(I4)
         np.testing.assert_array_almost_equal(actual, v0)
 
--- /dev/null
+++ gtsam-4.1.0/python/gtsam/tests/test_SfmData.py
@@ -0,0 +1,79 @@
+"""
+GTSAM Copyright 2010-2019, Georgia Tech Research Corporation,
+Atlanta, Georgia 30332-0415
+All Rights Reserved
+
+See LICENSE for the license information
+
+Unit tests for testing dataset access.
+Author: Frank Dellaert (Python: Sushmita Warrier)
+"""
+# pylint: disable=invalid-name, no-name-in-module, no-member
+
+from __future__ import print_function
+
+import unittest
+
+import numpy as np
+
+import gtsam
+from gtsam.utils.test_case import GtsamTestCase
+
+
+class TestSfmData(GtsamTestCase):
+    """Tests for SfmData and SfmTrack modules."""
+
+    def setUp(self):
+        """Initialize SfmData and SfmTrack"""
+        self.data = gtsam.SfmData()
+        # initialize SfmTrack with 3D point
+        self.tracks = gtsam.SfmTrack()
+
+    def test_tracks(self):
+        """Test functions in SfmTrack"""
+        # measurement is of format (camera_idx, imgPoint)
+        # create arbitrary camera indices for two cameras
+        i1, i2 = 4,5
+        # create arbitrary image measurements for cameras i1 and i2
+        uv_i1 = gtsam.Point2(12.6, 82)
+        # translating point uv_i1 along X-axis
+        uv_i2 = gtsam.Point2(24.88, 82)
+        # add measurements to the track
+        self.tracks.add_measurement(i1, uv_i1)
+        self.tracks.add_measurement(i2, uv_i2)
+        # Number of measurements in the track is 2
+        self.assertEqual(self.tracks.number_measurements(), 2)
+        # camera_idx in the first measurement of the track corresponds to i1
+        cam_idx, img_measurement = self.tracks.measurement(0)
+        self.assertEqual(cam_idx, i1)
+        np.testing.assert_array_almost_equal(
+            gtsam.Point3(0.,0.,0.), 
+            self.tracks.point3()
+        )
+
+
+    def test_data(self):
+        """Test functions in SfmData"""
+        # Create new track with 3 measurements
+        i1, i2, i3 = 3,5,6
+        uv_i1 = gtsam.Point2(21.23, 45.64)
+        # translating along X-axis
+        uv_i2 = gtsam.Point2(45.7, 45.64)
+        uv_i3 = gtsam.Point2(68.35, 45.64)
+        # add measurements and arbitrary point to the track
+        measurements = [(i1, uv_i1), (i2, uv_i2), (i3, uv_i3)]
+        pt = gtsam.Point3(1.0, 6.0, 2.0)
+        track2 = gtsam.SfmTrack(pt)
+        track2.add_measurement(i1, uv_i1)
+        track2.add_measurement(i2, uv_i2)
+        track2.add_measurement(i3, uv_i3)
+        self.data.add_track(self.tracks)
+        self.data.add_track(track2)
+        # Number of tracks in SfmData is 2
+        self.assertEqual(self.data.number_tracks(), 2)
+        # camera idx of first measurement of second track corresponds to i1
+        cam_idx, img_measurement = self.data.track(1).measurement(0)
+        self.assertEqual(cam_idx, i1)
+
+if __name__ == '__main__':
+    unittest.main()
--- /dev/null
+++ gtsam-4.1.0/python/gtsam/tests/test_Sim3.py
@@ -0,0 +1,134 @@
+"""
+GTSAM Copyright 2010-2019, Georgia Tech Research Corporation,
+Atlanta, Georgia 30332-0415
+All Rights Reserved
+
+See LICENSE for the license information
+
+Sim3 unit tests.
+Author: John Lambert
+"""
+# pylint: disable=no-name-in-module
+import unittest
+
+import numpy as np
+
+import gtsam
+from gtsam import Point3, Pose3, Pose3Pairs, Rot3, Similarity3
+from gtsam.utils.test_case import GtsamTestCase
+
+
+class TestSim3(GtsamTestCase):
+    """Test selected Sim3 methods."""
+
+    def test_align_poses_along_straight_line(self):
+        """Test Align Pose3Pairs method.
+
+        Scenario:
+           3 object poses
+           same scale (no gauge ambiguity)
+           world frame has poses rotated about x-axis (90 degree roll)
+           world and egovehicle frame translated by 15 meters w.r.t. each other
+        """
+        Rx90 = Rot3.Rx(np.deg2rad(90))
+
+        # Create source poses (three objects o1, o2, o3 living in the egovehicle "e" frame)
+        # Suppose they are 3d cuboids detected by an onboard sensor in the egovehicle frame
+        eTo0 = Pose3(Rot3(), np.array([5, 0, 0]))
+        eTo1 = Pose3(Rot3(), np.array([10, 0, 0]))
+        eTo2 = Pose3(Rot3(), np.array([15, 0, 0]))
+
+        eToi_list = [eTo0, eTo1, eTo2]
+
+        # Create destination poses
+        # (same three objects, but instead living in the world/city "w" frame)
+        wTo0 = Pose3(Rx90, np.array([-10, 0, 0]))
+        wTo1 = Pose3(Rx90, np.array([-5, 0, 0]))
+        wTo2 = Pose3(Rx90, np.array([0, 0, 0]))
+
+        wToi_list = [wTo0, wTo1, wTo2]
+
+        we_pairs = Pose3Pairs(list(zip(wToi_list, eToi_list)))
+
+        # Recover the transformation wSe (i.e. world_S_egovehicle)
+        wSe = Similarity3.Align(we_pairs)
+
+        for wToi, eToi in zip(wToi_list, eToi_list):
+            self.gtsamAssertEquals(wToi, wSe.transformFrom(eToi))
+
+    def test_align_poses_along_straight_line_gauge(self):
+        """Test if Align Pose3Pairs method can account for gauge ambiguity.
+
+        Scenario:
+           3 object poses
+           with gauge ambiguity (2x scale)
+           world frame has poses rotated about z-axis (90 degree yaw)
+           world and egovehicle frame translated by 11 meters w.r.t. each other
+        """
+        Rz90 = Rot3.Rz(np.deg2rad(90))
+
+        # Create source poses (three objects o1, o2, o3 living in the egovehicle "e" frame)
+        # Suppose they are 3d cuboids detected by an onboard sensor in the egovehicle frame
+        eTo0 = Pose3(Rot3(), np.array([1, 0, 0]))
+        eTo1 = Pose3(Rot3(), np.array([2, 0, 0]))
+        eTo2 = Pose3(Rot3(), np.array([4, 0, 0]))
+
+        eToi_list = [eTo0, eTo1, eTo2]
+
+        # Create destination poses
+        # (same three objects, but instead living in the world/city "w" frame)
+        wTo0 = Pose3(Rz90, np.array([0, 12, 0]))
+        wTo1 = Pose3(Rz90, np.array([0, 14, 0]))
+        wTo2 = Pose3(Rz90, np.array([0, 18, 0]))
+
+        wToi_list = [wTo0, wTo1, wTo2]
+
+        we_pairs = Pose3Pairs(list(zip(wToi_list, eToi_list)))
+
+        # Recover the transformation wSe (i.e. world_S_egovehicle)
+        wSe = Similarity3.Align(we_pairs)
+
+        for wToi, eToi in zip(wToi_list, eToi_list):
+            self.gtsamAssertEquals(wToi, wSe.transformFrom(eToi))
+
+    def test_align_poses_scaled_squares(self):
+        """Test if Align Pose3Pairs method can account for gauge ambiguity.
+
+        Make sure a big and small square can be aligned.
+        The u's represent a big square (10x10), and v's represents a small square (4x4).
+
+        Scenario:
+           4 object poses
+           with gauge ambiguity (2.5x scale)
+        """
+        # 0, 90, 180, and 270 degrees yaw
+        R0 = Rot3.Rz(np.deg2rad(0))
+        R90 = Rot3.Rz(np.deg2rad(90))
+        R180 = Rot3.Rz(np.deg2rad(180))
+        R270 = Rot3.Rz(np.deg2rad(270))
+
+        aTi0 = Pose3(R0, np.array([2, 3, 0]))
+        aTi1 = Pose3(R90, np.array([12, 3, 0]))
+        aTi2 = Pose3(R180, np.array([12, 13, 0]))
+        aTi3 = Pose3(R270, np.array([2, 13, 0]))
+
+        aTi_list = [aTi0, aTi1, aTi2, aTi3]
+
+        bTi0 = Pose3(R0, np.array([4, 3, 0]))
+        bTi1 = Pose3(R90, np.array([8, 3, 0]))
+        bTi2 = Pose3(R180, np.array([8, 7, 0]))
+        bTi3 = Pose3(R270, np.array([4, 7, 0]))
+
+        bTi_list = [bTi0, bTi1, bTi2, bTi3]
+
+        ab_pairs = Pose3Pairs(list(zip(aTi_list, bTi_list)))
+
+        # Recover the transformation wSe (i.e. world_S_egovehicle)
+        aSb = Similarity3.Align(ab_pairs)
+
+        for aTi, bTi in zip(aTi_list, bTi_list):
+            self.gtsamAssertEquals(aTi, aSb.transformFrom(bTi))
+
+
+if __name__ == "__main__":
+    unittest.main()
--- gtsam-4.1.0.orig/python/gtsam/tests/test_SimpleCamera.py
+++ gtsam-4.1.0/python/gtsam/tests/test_SimpleCamera.py
@@ -14,11 +14,12 @@ import unittest
 import numpy as np
 
 import gtsam
-from gtsam import Cal3_S2, Point3, Pose2, Pose3, Rot3, SimpleCamera
+from gtsam import Cal3_S2, Point3, Pose2, Pose3, Rot3, PinholeCameraCal3_S2 as SimpleCamera
 from gtsam.utils.test_case import GtsamTestCase
 
 K = Cal3_S2(625, 625, 0, 0, 0)
 
+
 class TestSimpleCamera(GtsamTestCase):
 
     def test_constructor(self):
@@ -29,15 +30,15 @@ class TestSimpleCamera(GtsamTestCase):
 
     def test_level2(self):
         # Create a level camera, looking in Y-direction
-        pose2 = Pose2(0.4,0.3,math.pi/2.0)
+        pose2 = Pose2(0.4, 0.3, math.pi/2.0)
         camera = SimpleCamera.Level(K, pose2, 0.1)
 
         # expected
-        x = Point3(1,0,0)
-        y = Point3(0,0,-1)
-        z = Point3(0,1,0)
-        wRc = Rot3(x,y,z)
-        expected = Pose3(wRc,Point3(0.4,0.3,0.1))
+        x = Point3(1, 0, 0)
+        y = Point3(0, 0, -1)
+        z = Point3(0, 1, 0)
+        wRc = Rot3(x, y, z)
+        expected = Pose3(wRc, Point3(0.4, 0.3, 0.1))
         self.gtsamAssertEquals(camera.pose(), expected, 1e-9)
 
 
--- /dev/null
+++ gtsam-4.1.0/python/gtsam/tests/test_TranslationRecovery.py
@@ -0,0 +1,63 @@
+from __future__ import print_function
+
+import numpy as np
+import unittest
+
+import gtsam
+
+""" Returns example pose values of 3 points A, B and C in the world frame """
+def ExampleValues():
+    T = []
+    T.append(gtsam.Point3(np.array([3.14, 1.59, 2.65])))
+    T.append(gtsam.Point3(np.array([-1.0590e+00, -3.6017e-02, -1.5720e+00])))
+    T.append(gtsam.Point3(np.array([8.5034e+00, 6.7499e+00, -3.6383e+00])))
+    
+    data = gtsam.Values()
+    for i in range(len(T)):
+        data.insert(i, gtsam.Pose3(gtsam.Rot3(), T[i]))
+    return data
+
+""" Returns binary measurements for the points in the given edges."""
+def SimulateMeasurements(gt_poses, graph_edges):
+    measurements = gtsam.BinaryMeasurementsUnit3()
+    for edge in graph_edges:
+        Ta = gt_poses.atPose3(edge[0]).translation()
+        Tb = gt_poses.atPose3(edge[1]).translation()
+        measurements.append(gtsam.BinaryMeasurementUnit3( \
+            edge[0], edge[1], gtsam.Unit3(Tb - Ta), \
+            gtsam.noiseModel.Isotropic.Sigma(3, 0.01)))
+    return measurements
+
+""" Tests for the translation recovery class """
+class TestTranslationRecovery(unittest.TestCase):
+    """Test selected Translation Recovery methods."""
+
+    def test_constructor(self):
+        """Construct from binary measurements."""
+        algorithm = gtsam.TranslationRecovery(gtsam.BinaryMeasurementsUnit3())
+        self.assertIsInstance(algorithm, gtsam.TranslationRecovery)
+
+    def test_run(self):
+        gt_poses = ExampleValues()
+        measurements = SimulateMeasurements(gt_poses, [[0, 1], [0, 2], [1, 2]])
+
+        # Set verbosity to Silent for tests
+        lmParams = gtsam.LevenbergMarquardtParams()
+        lmParams.setVerbosityLM("silent")
+
+        algorithm = gtsam.TranslationRecovery(measurements, lmParams)
+        scale = 2.0
+        result = algorithm.run(scale)
+
+        w_aTc = gt_poses.atPose3(2).translation() - gt_poses.atPose3(0).translation()
+        w_aTb = gt_poses.atPose3(1).translation() - gt_poses.atPose3(0).translation()
+        w_aTc_expected = w_aTc*scale/np.linalg.norm(w_aTb)
+        w_aTb_expected = w_aTb*scale/np.linalg.norm(w_aTb)
+
+        np.testing.assert_array_almost_equal(result.atPoint3(0), np.array([0,0,0]), 6, "Origin result is incorrect.")
+        np.testing.assert_array_almost_equal(result.atPoint3(1), w_aTb_expected, 6, "Point B result is incorrect.")
+        np.testing.assert_array_almost_equal(result.atPoint3(2), w_aTc_expected, 6, "Point C result is incorrect.")
+
+if __name__ == "__main__":
+    unittest.main()
+
--- gtsam-4.1.0.orig/python/gtsam/tests/test_Triangulation.py
+++ gtsam-4.1.0/python/gtsam/tests/test_Triangulation.py
@@ -12,69 +12,123 @@ import unittest
 
 import numpy as np
 
-import gtsam as g
+import gtsam
+from gtsam import (Cal3_S2, Cal3Bundler, CameraSetCal3_S2,
+                   CameraSetCal3Bundler, PinholeCameraCal3_S2,
+                   PinholeCameraCal3Bundler, Point2Vector, Point3, Pose3,
+                   Pose3Vector, Rot3)
 from gtsam.utils.test_case import GtsamTestCase
-from gtsam import Cal3_S2, Cal3Bundler, Rot3, Pose3, \
-    PinholeCameraCal3_S2, Point3, Point2Vector, Pose3Vector, triangulatePoint3
+
 
 class TestVisualISAMExample(GtsamTestCase):
-    def test_TriangulationExample(self):
-        # Some common constants
-        sharedCal = Cal3_S2(1500, 1200, 0, 640, 480)
+    """ Tests for triangulation with shared and individual calibrations """
 
+    def setUp(self):
+        """ Set up two camera poses """
         # Looking along X-axis, 1 meter above ground plane (x-y)
         upright = Rot3.Ypr(-np.pi / 2, 0., -np.pi / 2)
         pose1 = Pose3(upright, Point3(0, 0, 1))
-        camera1 = PinholeCameraCal3_S2(pose1, sharedCal)
 
         # create second camera 1 meter to the right of first camera
         pose2 = pose1.compose(Pose3(Rot3(), Point3(1, 0, 0)))
-        camera2 = PinholeCameraCal3_S2(pose2, sharedCal)
+        # twoPoses
+        self.poses = Pose3Vector()
+        self.poses.append(pose1)
+        self.poses.append(pose2)
 
         # landmark ~5 meters infront of camera
-        landmark = Point3(5, 0.5, 1.2)
-
-        # 1. Project two landmarks into two cameras and triangulate
-        z1 = camera1.project(landmark)
-        z2 = camera2.project(landmark)
+        self.landmark = Point3(5, 0.5, 1.2)
 
-        # twoPoses
-        poses = Pose3Vector()
+    def generate_measurements(self, calibration, camera_model, cal_params, camera_set=None):
+        """
+        Generate vector of measurements for given calibration and camera model.
+
+        Args: 
+            calibration: Camera calibration e.g. Cal3_S2
+            camera_model: Camera model e.g. PinholeCameraCal3_S2
+            cal_params: Iterable of camera parameters for `calibration` e.g. [K1, K2]
+            camera_set: Cameraset object (for individual calibrations)
+        Returns:
+            list of measurements and list/CameraSet object for cameras
+        """
+        if camera_set is not None:
+            cameras = camera_set()
+        else:
+            cameras = []
         measurements = Point2Vector()
 
-        poses.append(pose1)
-        poses.append(pose2)
-        measurements.append(z1)
-        measurements.append(z2)
+        for k, pose in zip(cal_params, self.poses):
+            K = calibration(*k)
+            camera = camera_model(pose, K)
+            cameras.append(camera)
+            z = camera.project(self.landmark)
+            measurements.append(z)
 
-        optimize = True
-        rank_tol = 1e-9
+        return measurements, cameras
 
-        triangulated_landmark = triangulatePoint3(poses,sharedCal, measurements, rank_tol, optimize)
-        self.gtsamAssertEquals(landmark, triangulated_landmark,1e-9)
+    def test_TriangulationExample(self):
+        """ Tests triangulation with shared Cal3_S2 calibration"""
+        # Some common constants
+        sharedCal = (1500, 1200, 0, 640, 480)
 
-        # 2. Add some noise and try again: result should be ~ (4.995, 0.499167, 1.19814)
-        measurements = Point2Vector()
-        measurements.append(z1 - np.array([0.1, 0.5]))
-        measurements.append(z2 - np.array([-0.2, 0.3]))
+        measurements, _ = self.generate_measurements(Cal3_S2,
+                                                     PinholeCameraCal3_S2,
+                                                     (sharedCal, sharedCal))
+
+        triangulated_landmark = gtsam.triangulatePoint3(self.poses,
+                                                        Cal3_S2(sharedCal),
+                                                        measurements,
+                                                        rank_tol=1e-9,
+                                                        optimize=True)
+        self.gtsamAssertEquals(self.landmark, triangulated_landmark, 1e-9)
+
+        # Add some noise and try again: result should be ~ (4.995, 0.499167, 1.19814)
+        measurements_noisy = Point2Vector()
+        measurements_noisy.append(measurements[0] - np.array([0.1, 0.5]))
+        measurements_noisy.append(measurements[1] - np.array([-0.2, 0.3]))
+
+        triangulated_landmark = gtsam.triangulatePoint3(self.poses,
+                                                        Cal3_S2(sharedCal),
+                                                        measurements_noisy,
+                                                        rank_tol=1e-9,
+                                                        optimize=True)
+
+        self.gtsamAssertEquals(self.landmark, triangulated_landmark, 1e-2)
+
+    def test_distinct_Ks(self):
+        """ Tests triangulation with individual Cal3_S2 calibrations """
+        # two camera parameters
+        K1 = (1500, 1200, 0, 640, 480)
+        K2 = (1600, 1300, 0, 650, 440)
+
+        measurements, cameras = self.generate_measurements(Cal3_S2,
+                                                           PinholeCameraCal3_S2,
+                                                           (K1, K2),
+                                                           camera_set=CameraSetCal3_S2)
+
+        triangulated_landmark = gtsam.triangulatePoint3(cameras,
+                                                        measurements,
+                                                        rank_tol=1e-9,
+                                                        optimize=True)
+        self.gtsamAssertEquals(self.landmark, triangulated_landmark, 1e-9)
+
+    def test_distinct_Ks_Bundler(self):
+        """ Tests triangulation with individual Cal3Bundler calibrations"""
+        # two camera parameters
+        K1 = (1500, 0, 0, 640, 480)
+        K2 = (1600, 0, 0, 650, 440)
+
+        measurements, cameras = self.generate_measurements(Cal3Bundler,
+                                                           PinholeCameraCal3Bundler,
+                                                           (K1, K2),
+                                                           camera_set=CameraSetCal3Bundler)
+
+        triangulated_landmark = gtsam.triangulatePoint3(cameras,
+                                                        measurements,
+                                                        rank_tol=1e-9,
+                                                        optimize=True)
+        self.gtsamAssertEquals(self.landmark, triangulated_landmark, 1e-9)
 
-        triangulated_landmark = triangulatePoint3(poses,sharedCal, measurements, rank_tol, optimize)
-        self.gtsamAssertEquals(landmark, triangulated_landmark,1e-2)
-        #
-        # # two Poses with Bundler Calibration
-        # bundlerCal = Cal3Bundler(1500, 0, 0, 640, 480)
-        # camera1 = PinholeCameraCal3Bundler(pose1, bundlerCal)
-        # camera2 = PinholeCameraCal3Bundler(pose2, bundlerCal)
-        #
-        # z1 = camera1.project(landmark)
-        # z2 = camera2.project(landmark)
-        #
-        # measurements = Point2Vector()
-        # measurements.append(z1)
-        # measurements.append(z2)
-        #
-        # triangulated_landmark = triangulatePoint3(poses,bundlerCal, measurements, rank_tol, optimize)
-        # self.gtsamAssertEquals(landmark, triangulated_landmark,1e-9)
 
 if __name__ == "__main__":
     unittest.main()
--- gtsam-4.1.0.orig/python/gtsam/tests/test_dsf_map.py
+++ gtsam-4.1.0/python/gtsam/tests/test_dsf_map.py
@@ -35,6 +35,20 @@ class TestDSFMap(GtsamTestCase):
         dsf.merge(pair1, pair2)
         self.assertEqual(key(dsf.find(pair1)), key(dsf.find(pair2)))
 
+    def test_sets(self):
+        from gtsam import IndexPair
+        dsf = gtsam.DSFMapIndexPair()
+        dsf.merge(IndexPair(0, 1), IndexPair(1,2))
+        dsf.merge(IndexPair(0, 1), IndexPair(3,4))
+        dsf.merge(IndexPair(4,5), IndexPair(6,8))
+        sets = dsf.sets()
+
+        for i in sets:
+            s = sets[i]
+            for val in gtsam.IndexPairSetAsArray(s):
+                val.i()
+                val.j()
+
 
 if __name__ == '__main__':
     unittest.main()
--- /dev/null
+++ gtsam-4.1.0/python/gtsam/tests/test_pickle.py
@@ -0,0 +1,46 @@
+"""
+GTSAM Copyright 2010-2020, Georgia Tech Research Corporation,
+Atlanta, Georgia 30332-0415
+All Rights Reserved
+
+See LICENSE for the license information
+
+Unit tests to check pickling.
+
+Author: Ayush Baid
+"""
+from gtsam import Cal3Bundler, PinholeCameraCal3Bundler, Point2, Point3, Pose3, Rot3, SfmTrack, Unit3 
+
+from gtsam.utils.test_case import GtsamTestCase
+
+class TestPickle(GtsamTestCase):
+    """Tests pickling on some of the classes."""
+
+    def test_cal3Bundler_roundtrip(self):
+        obj = Cal3Bundler(fx=100, k1=0.1, k2=0.2, u0=100, v0=70)
+        self.assertEqualityOnPickleRoundtrip(obj)
+    
+    def test_pinholeCameraCal3Bundler_roundtrip(self):
+        obj = PinholeCameraCal3Bundler(
+            Pose3(Rot3.RzRyRx(0, 0.1, -0.05), Point3(1, 1, 0)),
+            Cal3Bundler(fx=100, k1=0.1, k2=0.2, u0=100, v0=70),
+        )
+        self.assertEqualityOnPickleRoundtrip(obj)
+    
+    def test_rot3_roundtrip(self):
+        obj = Rot3.RzRyRx(0, 0.05, 0.1)
+        self.assertEqualityOnPickleRoundtrip(obj)
+
+    def test_pose3_roundtrip(self):
+        obj = Pose3(Rot3.Ypr(0.0, 1.0, 0.0), Point3(1, 1, 0))
+        self.assertEqualityOnPickleRoundtrip(obj)
+
+    def test_sfmTrack_roundtrip(self):
+        obj = SfmTrack(Point3(1, 1, 0))
+        obj.add_measurement(0, Point2(-1, 5))
+        obj.add_measurement(1, Point2(6, 2))
+        self.assertEqualityOnPickleRoundtrip(obj)
+
+    def test_unit3_roundtrip(self):
+        obj = Unit3(Point3(1, 1, 0))
+        self.assertEqualityOnPickleRoundtrip(obj)
--- gtsam-4.1.0.orig/python/gtsam/utils/__init__.py
+++ gtsam-4.1.0/python/gtsam/utils/__init__.py
@@ -0,0 +1,22 @@
+import glob
+import os.path as osp
+
+
+def findExampleDataFile(name):
+    """
+    Find the example data file specified by `name`.
+    """
+    # This is okay since gtsam will already be loaded
+    # before this function is accessed. Thus no effect.
+    import gtsam
+
+    site_package_path = gtsam.__path__[0]
+    # add the * at the end to glob the entire directory
+    data_path = osp.join(site_package_path, "Data", "*")
+
+    extensions = ("", ".graph", ".txt", ".out", ".xml", ".g2o")
+
+    for data_file_path in glob.glob(data_path, recursive=True):
+        for ext in extensions:
+            if (name + ext) == osp.basename(data_file_path):
+                return data_file_path
--- gtsam-4.1.0.orig/python/gtsam/utils/plot.py
+++ gtsam-4.1.0/python/gtsam/utils/plot.py
@@ -36,18 +36,15 @@ def set_axes_equal(fignum):
     ax.set_zlim3d([origin[2] - radius, origin[2] + radius])
 
 
-def ellipsoid(xc, yc, zc, rx, ry, rz, n):
+def ellipsoid(rx, ry, rz, n):
     """
     Numpy equivalent of Matlab's ellipsoid function.
 
     Args:
-        xc (double): Center of ellipsoid in X-axis.
-        yc (double): Center of ellipsoid in Y-axis.
-        zc (double): Center of ellipsoid in Z-axis.
         rx (double): Radius of ellipsoid in X-axis.
         ry (double): Radius of ellipsoid in Y-axis.
         rz (double): Radius of ellipsoid in Z-axis.
-        n (int): The granularity of the ellipsoid plotted. 
+        n (int): The granularity of the ellipsoid plotted.
 
     Returns:
         tuple[numpy.ndarray]: The points in the x, y and z axes to use for the surface plot.
@@ -72,7 +69,8 @@ def plot_covariance_ellipse_3d(axes, ori
     Args:
         axes (matplotlib.axes.Axes): Matplotlib axes.
         origin (gtsam.Point3): The origin in the world frame.
-        P (numpy.ndarray): The marginal covariance matrix of the 3D point which will be represented as an ellipse.
+        P (numpy.ndarray): The marginal covariance matrix of the 3D point
+            which will be represented as an ellipse.
         scale (float): Scaling factor of the radii of the covariance ellipse.
         n (int): Defines the granularity of the ellipse. Higher values indicate finer ellipses.
         alpha (float): Transparency value for the plotted surface in the range [0, 1].
@@ -85,7 +83,7 @@ def plot_covariance_ellipse_3d(axes, ori
     rx, ry, rz = radii
 
     # generate data for "unrotated" ellipsoid
-    xc, yc, zc = ellipsoid(0, 0, 0, rx, ry, rz, n)
+    xc, yc, zc = ellipsoid(rx, ry, rz, n)
 
     # rotate data with orientation matrix U and center c
     data = np.kron(U[:, 0:1], xc) + np.kron(U[:, 1:2], yc) + \
@@ -106,7 +104,8 @@ def plot_pose2_on_axes(axes, pose, axis_
         axes (matplotlib.axes.Axes): Matplotlib axes.
         pose (gtsam.Pose2): The pose to be plotted.
         axis_length (float): The length of the camera axes.
-        covariance (numpy.ndarray): Marginal covariance matrix to plot the uncertainty of the estimation.
+        covariance (numpy.ndarray): Marginal covariance matrix to plot
+            the uncertainty of the estimation.
     """
     # get rotation and translation (center)
     gRp = pose.rotation().matrix()  # rotation from pose to global
@@ -146,7 +145,8 @@ def plot_pose2(fignum, pose, axis_length
         fignum (int): Integer representing the figure number to use for plotting.
         pose (gtsam.Pose2): The pose to be plotted.
         axis_length (float): The length of the camera axes.
-        covariance (numpy.ndarray): Marginal covariance matrix to plot the uncertainty of the estimation.
+        covariance (numpy.ndarray): Marginal covariance matrix to plot
+            the uncertainty of the estimation.
         axis_labels (iterable[string]): List of axis labels to set.
     """
     # get figure object
@@ -215,7 +215,8 @@ def plot_3d_points(fignum, values, lines
         fignum (int): Integer representing the figure number to use for plotting.
         values (gtsam.Values): Values dictionary consisting of points to be plotted.
         linespec (string): String representing formatting options for Matplotlib.
-        marginals (numpy.ndarray): Marginal covariance matrix to plot the uncertainty of the estimation.
+        marginals (numpy.ndarray): Marginal covariance matrix to plot the
+            uncertainty of the estimation.
         title (string): The title of the plot.
         axis_labels (iterable[string]): List of axis labels to set.
     """
@@ -238,6 +239,7 @@ def plot_3d_points(fignum, values, lines
             continue
             # I guess it's not a Point3
 
+    fig = plt.figure(fignum)
     fig.suptitle(title)
     fig.canvas.set_window_title(title.lower())
 
--- gtsam-4.1.0.orig/python/gtsam/utils/test_case.py
+++ gtsam-4.1.0/python/gtsam/utils/test_case.py
@@ -8,6 +8,7 @@ See LICENSE for the license information
 TestCase class with GTSAM assert utils.
 Author: Frank Dellaert
 """
+import pickle
 import unittest
 
 
@@ -29,3 +30,14 @@ class GtsamTestCase(unittest.TestCase):
         if not equal:
             raise self.failureException(
                 "Values are not equal:\n{}!={}".format(actual, expected))
+
+    def assertEqualityOnPickleRoundtrip(self, obj: object, tol=1e-9) -> None:
+        """ Performs a round-trip using pickle and asserts equality.
+
+            Usage:
+                self.assertEqualityOnPickleRoundtrip(obj)
+            Keyword Arguments:
+                tol {float} -- tolerance passed to 'equals', default 1e-9
+        """
+        roundTripObj = pickle.loads(pickle.dumps(obj))
+        self.gtsamAssertEquals(roundTripObj, obj)
--- gtsam-4.1.0.orig/python/gtsam_unstable/gtsam_unstable.tpl
+++ gtsam-4.1.0/python/gtsam_unstable/gtsam_unstable.tpl
@@ -22,7 +22,7 @@
 
 {boost_class_export}
 
-{hoder_type}
+{holder_type}
 
 #include "python/gtsam_unstable/preamble.h"
 
--- gtsam-4.1.0.orig/python/setup.py.in
+++ gtsam-4.1.0/python/setup.py.in
@@ -1,5 +1,4 @@
-import os
-import sys
+"""Setup file to install the GTSAM package."""
 
 try:
     from setuptools import setup, find_packages
@@ -8,15 +7,18 @@ except ImportError:
 
 packages = find_packages(where=".")
 print("PACKAGES: ", packages)
+
 package_data = {
     '': [
-        './*.so',
-        './*.dll',
+        "./*.so",
+        "./*.dll",
+        "Data/*"  # Add the data files to the package
+        "Data/**/*"  # Add the data files in subdirectories
     ]
 }
 
 # Cleaner to read in the contents rather than copy them over.
-readme_contents = open("${PROJECT_SOURCE_DIR}/README.md").read()
+readme_contents = open("${GTSAM_SOURCE_DIR}/README.md").read()
 
 setup(
     name='gtsam',
@@ -43,8 +45,9 @@ setup(
         'Programming Language :: Python :: 3',
     ],
     packages=packages,
+    include_package_data=True,
     package_data=package_data,
     test_suite="gtsam.tests",
-    install_requires=["numpy"],
+    install_requires=open("${GTSAM_SOURCE_DIR}/python/requirements.txt").readlines(),
     zip_safe=False,
 )
--- /dev/null
+++ gtsam-4.1.0/tests/ImuMeasurement.h
@@ -0,0 +1,35 @@
+#pragma once
+
+#include <tests/Measurement.h>
+
+namespace gtsam {
+
+/**
+ *\brief Contains data from the IMU mesaurements.
+ */
+class ImuMeasurement : public Measurement {
+ public:
+  enum Name { BODY = 0, RF_FOOT = 1, RH_FOOT = 2 };
+
+  Name name;               ///< Unique string identifier
+  Eigen::Vector3d I_a_WI;  ///< Raw acceleration from the IMU (m/s/s)
+  Eigen::Vector3d I_w_WI;  ///< Raw angular velocity from the IMU (rad/s)
+
+  ImuMeasurement()
+      : Measurement("ImuMeasurement"), I_a_WI{0, 0, 0}, I_w_WI{0, 0, 0} {}
+
+  ~ImuMeasurement() override {}
+
+  friend std::ostream& operator<<(std::ostream& stream,
+                                  const ImuMeasurement& meas);
+};
+
+std::ostream& operator<<(std::ostream& stream, const ImuMeasurement& meas) {
+  stream << "IMU Measurement at time = " << meas.time << " : \n"
+         << "dt    : " << meas.dt << "\n"
+         << "I_a_WI: " << meas.I_a_WI.transpose() << "\n"
+         << "I_w_WI: " << meas.I_w_WI.transpose() << "\n";
+  return stream;
+}
+
+}  // namespace gtsam
--- /dev/null
+++ gtsam-4.1.0/tests/Measurement.h
@@ -0,0 +1,25 @@
+#pragma once
+
+#include <Eigen/Core>
+#include <string>
+
+namespace gtsam {
+
+/**
+ * \brief This is the base class for all measurement types.
+ */
+class Measurement {
+ public:
+  EIGEN_MAKE_ALIGNED_OPERATOR_NEW
+  size_t dt;    ///< Time since the last message of this type (nanoseconds).
+  size_t time;  ///< ROS time message recieved (nanoseconds).
+  ///< The type of message (to enable dynamic/static casting).
+  std::string type;
+
+  Measurement() : dt(0), time(0), type("UNDEFINED") {}
+  Measurement(std::string _type) : dt(0), time(0), type(_type) {}
+
+  virtual ~Measurement() {}
+};
+
+}  // namespace gtsam
--- gtsam-4.1.0.orig/tests/simulated2D.h
+++ gtsam-4.1.0/tests/simulated2D.h
@@ -143,7 +143,7 @@ namespace simulated2D {
       return (prior(x, H) - measured_);
     }
 
-    virtual ~GenericPrior() {}
+    ~GenericPrior() override {}
 
     /// @return a deep copy of this factor
     gtsam::NonlinearFactor::shared_ptr clone() const override {
@@ -189,7 +189,7 @@ namespace simulated2D {
       return (odo(x1, x2, H1, H2) - measured_);
     }
 
-    virtual ~GenericOdometry() {}
+    ~GenericOdometry() override {}
 
     /// @return a deep copy of this factor
     gtsam::NonlinearFactor::shared_ptr clone() const override {
@@ -236,7 +236,7 @@ namespace simulated2D {
       return (mea(x1, x2, H1, H2) - measured_);
     }
 
-    virtual ~GenericMeasurement() {}
+    ~GenericMeasurement() override {}
 
     /// @return a deep copy of this factor
     gtsam::NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/tests/simulated2DConstraints.h
+++ gtsam-4.1.0/tests/simulated2DConstraints.h
@@ -57,7 +57,7 @@ namespace simulated2D {
       typedef boost::shared_ptr<ScalarCoordConstraint1<VALUE, IDX> > shared_ptr; ///< boost::shared_ptr convenience typedef
       typedef VALUE Point; ///< Constrained variable type
 
-      virtual ~ScalarCoordConstraint1() {}
+      ~ScalarCoordConstraint1() override {}
 
       /// @return a deep copy of this factor
       gtsam::NonlinearFactor::shared_ptr clone() const override {
@@ -125,7 +125,7 @@ namespace simulated2D {
       typedef MaxDistanceConstraint<VALUE> This;  ///< This class for factor
       typedef VALUE Point; ///< Type of variable constrained
 
-      virtual ~MaxDistanceConstraint() {}
+      ~MaxDistanceConstraint() override {}
 
       /// @return a deep copy of this factor
       gtsam::NonlinearFactor::shared_ptr clone() const override {
@@ -174,7 +174,7 @@ namespace simulated2D {
       typedef POSE Pose; ///< Type of pose variable constrained
       typedef POINT Point; ///< Type of point variable constrained
 
-      virtual ~MinDistanceConstraint() {}
+      ~MinDistanceConstraint() override {}
 
       /// @return a deep copy of this factor
       gtsam::NonlinearFactor::shared_ptr clone() const override {
--- gtsam-4.1.0.orig/tests/simulated2DOriented.h
+++ gtsam-4.1.0/tests/simulated2DOriented.h
@@ -114,7 +114,7 @@ namespace simulated2DOriented {
           NoiseModelFactor2<VALUE, VALUE>(model, i1, i2), measured_(measured) {
     }
 
-    virtual ~GenericOdometry() {}
+    ~GenericOdometry() override {}
 
     /// Evaluate error and optionally derivative
     Vector evaluateError(const VALUE& x1, const VALUE& x2,
--- gtsam-4.1.0.orig/tests/smallExample.h
+++ gtsam-4.1.0/tests/smallExample.h
@@ -342,11 +342,26 @@ struct UnaryFactor: public gtsam::NoiseM
     return (h(x) - z_);
   }
 
+  gtsam::NonlinearFactor::shared_ptr clone() const override {
+        return boost::static_pointer_cast<gtsam::NonlinearFactor>(
+            gtsam::NonlinearFactor::shared_ptr(new UnaryFactor(*this))); }
 };
 
 }
 
 /* ************************************************************************* */
+inline NonlinearFactorGraph nonlinearFactorGraphWithGivenSigma(const double sigma) {
+  using symbol_shorthand::X;
+  using symbol_shorthand::L;
+  boost::shared_ptr<NonlinearFactorGraph> fg(new NonlinearFactorGraph);
+  Point2 z(1.0, 0.0);
+  boost::shared_ptr<smallOptimize::UnaryFactor> factor(
+      new smallOptimize::UnaryFactor(z, noiseModel::Isotropic::Sigma(2,sigma), X(1)));
+  fg->push_back(factor);
+  return *fg;
+}
+
+/* ************************************************************************* */
 inline boost::shared_ptr<const NonlinearFactorGraph> sharedReallyNonlinearFactorGraph() {
   using symbol_shorthand::X;
   using symbol_shorthand::L;
@@ -364,6 +379,54 @@ inline NonlinearFactorGraph createReally
 }
 
 /* ************************************************************************* */
+inline NonlinearFactorGraph sharedNonRobustFactorGraphWithOutliers() {
+  using symbol_shorthand::X;
+  boost::shared_ptr<NonlinearFactorGraph> fg(new NonlinearFactorGraph);
+  Point2 z(0.0, 0.0);
+  double sigma = 0.1;
+
+  boost::shared_ptr<PriorFactor<Point2>> factor(
+      new PriorFactor<Point2>(X(1), z, noiseModel::Isotropic::Sigma(2,sigma)));
+  // 3 noiseless inliers
+  fg->push_back(factor);
+  fg->push_back(factor);
+  fg->push_back(factor);
+
+  // 1 outlier
+  Point2 z_out(1.0, 0.0);
+  boost::shared_ptr<PriorFactor<Point2>> factor_out(
+      new PriorFactor<Point2>(X(1), z_out, noiseModel::Isotropic::Sigma(2,sigma)));
+  fg->push_back(factor_out);
+
+  return *fg;
+}
+
+/* ************************************************************************* */
+inline NonlinearFactorGraph sharedRobustFactorGraphWithOutliers() {
+  using symbol_shorthand::X;
+  boost::shared_ptr<NonlinearFactorGraph> fg(new NonlinearFactorGraph);
+  Point2 z(0.0, 0.0);
+  double sigma = 0.1;
+  auto gmNoise = noiseModel::Robust::Create(
+            noiseModel::mEstimator::GemanMcClure::Create(1.0), noiseModel::Isotropic::Sigma(2,sigma));
+  boost::shared_ptr<PriorFactor<Point2>> factor(
+      new PriorFactor<Point2>(X(1), z, gmNoise));
+  // 3 noiseless inliers
+  fg->push_back(factor);
+  fg->push_back(factor);
+  fg->push_back(factor);
+
+  // 1 outlier
+  Point2 z_out(1.0, 0.0);
+  boost::shared_ptr<PriorFactor<Point2>> factor_out(
+      new PriorFactor<Point2>(X(1), z_out, gmNoise));
+  fg->push_back(factor_out);
+
+  return *fg;
+}
+
+
+/* ************************************************************************* */
 inline std::pair<NonlinearFactorGraph, Values> createNonlinearSmoother(int T) {
   using namespace impl;
   using symbol_shorthand::X;
--- gtsam-4.1.0.orig/tests/testExtendedKalmanFilter.cpp
+++ gtsam-4.1.0/tests/testExtendedKalmanFilter.cpp
@@ -120,7 +120,7 @@ public:
     Q_invsqrt_ = inverse_square_root(Q_);
   }
 
-  virtual ~NonlinearMotionModel() {}
+  ~NonlinearMotionModel() override {}
 
   // Calculate the next state prediction using the nonlinear function f()
   Point2 f(const Point2& x_t0) const {
@@ -255,7 +255,7 @@ public:
     R_invsqrt_ = inverse_square_root(R_);
   }
 
-  virtual ~NonlinearMeasurementModel() {}
+  ~NonlinearMeasurementModel() override {}
 
   // Calculate the predicted measurement using the nonlinear function h()
   // Byproduct: updates Jacobian H, and noiseModel (R)
--- /dev/null
+++ gtsam-4.1.0/tests/testGncOptimizer.cpp
@@ -0,0 +1,757 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * @file    testGncOptimizer.cpp
+ * @brief   Unit tests for GncOptimizer class
+ * @author  Jingnan Shi
+ * @author  Luca Carlone
+ * @author  Frank Dellaert
+ *
+ * Implementation of the paper: Yang, Antonante, Tzoumas, Carlone, "Graduated
+ * Non-Convexity for Robust Spatial Perception: From Non-Minimal Solvers to
+ * Global Outlier Rejection", ICRA/RAL, 2020. (arxiv version:
+ * https://arxiv.org/pdf/1909.08605.pdf)
+ *
+ * See also:
+ * Antonante, Tzoumas, Yang, Carlone, "Outlier-Robust Estimation: Hardness,
+ * Minimally-Tuned Algorithms, and Applications", arxiv:
+ * https://arxiv.org/pdf/2007.15109.pdf, 2020.
+ */
+
+#include <CppUnitLite/TestHarness.h>
+#include <gtsam/nonlinear/GncOptimizer.h>
+#include <gtsam/nonlinear/LinearContainerFactor.h>
+#include <gtsam/slam/dataset.h>
+#include <tests/smallExample.h>
+
+#include <gtsam/sam/BearingFactor.h>
+#include <gtsam/geometry/Pose2.h>
+
+using namespace std;
+using namespace gtsam;
+
+using symbol_shorthand::L;
+using symbol_shorthand::X;
+static double tol = 1e-7;
+
+/* ************************************************************************* */
+TEST(GncOptimizer, gncParamsConstructor) {
+  // check params are correctly parsed
+  LevenbergMarquardtParams lmParams;
+  GncParams<LevenbergMarquardtParams> gncParams1(lmParams);
+  CHECK(lmParams.equals(gncParams1.baseOptimizerParams));
+
+  // check also default constructor
+  GncParams<LevenbergMarquardtParams> gncParams1b;
+  CHECK(lmParams.equals(gncParams1b.baseOptimizerParams));
+
+  // and check params become different if we change lmParams
+  lmParams.setVerbosity("DELTA");
+  CHECK(!lmParams.equals(gncParams1.baseOptimizerParams));
+
+  // and same for GN
+  GaussNewtonParams gnParams;
+  GncParams<GaussNewtonParams> gncParams2(gnParams);
+  CHECK(gnParams.equals(gncParams2.baseOptimizerParams));
+
+  // check default constructor
+  GncParams<GaussNewtonParams> gncParams2b;
+  CHECK(gnParams.equals(gncParams2b.baseOptimizerParams));
+
+  // change something at the gncParams level
+  GncParams<GaussNewtonParams> gncParams2c(gncParams2b);
+  gncParams2c.setLossType(GncLossType::GM);
+  CHECK(!gncParams2c.equals(gncParams2b.baseOptimizerParams));
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, gncConstructor) {
+  // has to have Gaussian noise models !
+  auto fg = example::createReallyNonlinearFactorGraph();  // just a unary factor
+                                                          // on a 2D point
+
+  Point2 p0(3, 3);
+  Values initial;
+  initial.insert(X(1), p0);
+
+  GncParams<LevenbergMarquardtParams> gncParams;
+  auto gnc = GncOptimizer<GncParams<LevenbergMarquardtParams>>(fg, initial,
+                                                               gncParams);
+
+  CHECK(gnc.getFactors().equals(fg));
+  CHECK(gnc.getState().equals(initial));
+  CHECK(gnc.getParams().equals(gncParams));
+
+  auto gnc2 = GncOptimizer<GncParams<LevenbergMarquardtParams>>(fg, initial,
+                                                                 gncParams);
+
+  // check the equal works
+  CHECK(gnc.equals(gnc2));
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, gncConstructorWithRobustGraphAsInput) {
+  auto fg = example::sharedNonRobustFactorGraphWithOutliers();
+  // same graph with robust noise model
+  auto fg_robust = example::sharedRobustFactorGraphWithOutliers();
+
+  Point2 p0(3, 3);
+  Values initial;
+  initial.insert(X(1), p0);
+
+  GncParams<LevenbergMarquardtParams> gncParams;
+  auto gnc = GncOptimizer<GncParams<LevenbergMarquardtParams>>(fg_robust,
+                                                               initial,
+                                                               gncParams);
+
+  // make sure that when parsing the graph is transformed into one without
+  // robust loss
+  CHECK(fg.equals(gnc.getFactors()));
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, initializeMu) {
+  auto fg = example::createReallyNonlinearFactorGraph();
+
+  Point2 p0(3, 3);
+  Values initial;
+  initial.insert(X(1), p0);
+
+  // testing GM mu initialization
+  GncParams<LevenbergMarquardtParams> gncParams;
+  gncParams.setLossType(GncLossType::GM);
+  auto gnc_gm = GncOptimizer<GncParams<LevenbergMarquardtParams>>(fg, initial,
+                                                                  gncParams);
+  gnc_gm.setInlierCostThresholds(1.0);
+  // according to rmk 5 in the gnc paper: m0 = 2 rmax^2 / barcSq
+  // (barcSq=1 in this example)
+  EXPECT_DOUBLES_EQUAL(gnc_gm.initializeMu(), 2 * 198.999, 1e-3);
+
+  // testing TLS mu initialization
+  gncParams.setLossType(GncLossType::TLS);
+  auto gnc_tls = GncOptimizer<GncParams<LevenbergMarquardtParams>>(fg, initial,
+                                                                   gncParams);
+  gnc_tls.setInlierCostThresholds(1.0);
+  // according to rmk 5 in the gnc paper: m0 =  barcSq / (2 * rmax^2 - barcSq)
+  // (barcSq=1 in this example)
+  EXPECT_DOUBLES_EQUAL(gnc_tls.initializeMu(), 1 / (2 * 198.999 - 1), 1e-3);
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, updateMuGM) {
+  // has to have Gaussian noise models !
+  auto fg = example::createReallyNonlinearFactorGraph();
+
+  Point2 p0(3, 3);
+  Values initial;
+  initial.insert(X(1), p0);
+
+  GncParams<LevenbergMarquardtParams> gncParams;
+  gncParams.setLossType(GncLossType::GM);
+  gncParams.setMuStep(1.4);
+  auto gnc = GncOptimizer<GncParams<LevenbergMarquardtParams>>(fg, initial,
+                                                               gncParams);
+
+  double mu = 5.0;
+  EXPECT_DOUBLES_EQUAL(gnc.updateMu(mu), mu / 1.4, tol);
+
+  // check it correctly saturates to 1 for GM
+  mu = 1.2;
+  EXPECT_DOUBLES_EQUAL(gnc.updateMu(mu), 1.0, tol);
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, updateMuTLS) {
+  // has to have Gaussian noise models !
+  auto fg = example::createReallyNonlinearFactorGraph();
+
+  Point2 p0(3, 3);
+  Values initial;
+  initial.insert(X(1), p0);
+
+  GncParams<LevenbergMarquardtParams> gncParams;
+  gncParams.setMuStep(1.4);
+  gncParams.setLossType(GncLossType::TLS);
+  auto gnc = GncOptimizer<GncParams<LevenbergMarquardtParams>>(fg, initial,
+                                                               gncParams);
+
+  double mu = 5.0;
+  EXPECT_DOUBLES_EQUAL(gnc.updateMu(mu), mu * 1.4, tol);
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, checkMuConvergence) {
+  // has to have Gaussian noise models !
+  auto fg = example::createReallyNonlinearFactorGraph();
+
+  Point2 p0(3, 3);
+  Values initial;
+  initial.insert(X(1), p0);
+
+  {
+    GncParams<LevenbergMarquardtParams> gncParams;
+    gncParams.setLossType(GncLossType::GM);
+    auto gnc = GncOptimizer<GncParams<LevenbergMarquardtParams>>(fg, initial,
+                                                                 gncParams);
+
+    double mu = 1.0;
+    CHECK(gnc.checkMuConvergence(mu));
+  }
+  {
+    GncParams<LevenbergMarquardtParams> gncParams;
+    gncParams.setLossType(
+        GncLossType::TLS);
+    auto gnc = GncOptimizer<GncParams<LevenbergMarquardtParams>>(fg, initial,
+                                                                 gncParams);
+
+    double mu = 1.0;
+    CHECK(!gnc.checkMuConvergence(mu));  //always false for TLS
+  }
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, checkCostConvergence) {
+  // has to have Gaussian noise models !
+  auto fg = example::createReallyNonlinearFactorGraph();
+
+  Point2 p0(3, 3);
+  Values initial;
+  initial.insert(X(1), p0);
+
+  {
+    GncParams<LevenbergMarquardtParams> gncParams;
+    gncParams.setRelativeCostTol(0.49);
+    auto gnc = GncOptimizer<GncParams<LevenbergMarquardtParams>>(fg, initial,
+                                                                 gncParams);
+
+    double prev_cost = 1.0;
+    double cost = 0.5;
+    // relative cost reduction = 0.5 > 0.49, hence checkCostConvergence = false
+    CHECK(!gnc.checkCostConvergence(cost, prev_cost));
+  }
+  {
+    GncParams<LevenbergMarquardtParams> gncParams;
+    gncParams.setRelativeCostTol(0.51);
+    auto gnc = GncOptimizer<GncParams<LevenbergMarquardtParams>>(fg, initial,
+                                                                 gncParams);
+
+    double prev_cost = 1.0;
+    double cost = 0.5;
+    // relative cost reduction = 0.5 < 0.51, hence checkCostConvergence = true
+    CHECK(gnc.checkCostConvergence(cost, prev_cost));
+  }
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, checkWeightsConvergence) {
+  // has to have Gaussian noise models !
+  auto fg = example::createReallyNonlinearFactorGraph();
+
+  Point2 p0(3, 3);
+  Values initial;
+  initial.insert(X(1), p0);
+
+  {
+    GncParams<LevenbergMarquardtParams> gncParams;
+    gncParams.setLossType(GncLossType::GM);
+    auto gnc = GncOptimizer<GncParams<LevenbergMarquardtParams>>(fg, initial,
+                                                                 gncParams);
+
+    Vector weights = Vector::Ones(fg.size());
+    CHECK(!gnc.checkWeightsConvergence(weights));  //always false for GM
+  }
+  {
+    GncParams<LevenbergMarquardtParams> gncParams;
+    gncParams.setLossType(
+        GncLossType::TLS);
+    auto gnc = GncOptimizer<GncParams<LevenbergMarquardtParams>>(fg, initial,
+                                                                 gncParams);
+
+    Vector weights = Vector::Ones(fg.size());
+    // weights are binary, so checkWeightsConvergence = true
+    CHECK(gnc.checkWeightsConvergence(weights));
+  }
+  {
+    GncParams<LevenbergMarquardtParams> gncParams;
+    gncParams.setLossType(
+        GncLossType::TLS);
+    auto gnc = GncOptimizer<GncParams<LevenbergMarquardtParams>>(fg, initial,
+                                                                 gncParams);
+
+    Vector weights = Vector::Ones(fg.size());
+    weights[0] = 0.9;  // more than weightsTol = 1e-4 from 1, hence checkWeightsConvergence = false
+    CHECK(!gnc.checkWeightsConvergence(weights));
+  }
+  {
+    GncParams<LevenbergMarquardtParams> gncParams;
+    gncParams.setLossType(
+        GncLossType::TLS);
+    gncParams.setWeightsTol(0.1);
+    auto gnc = GncOptimizer<GncParams<LevenbergMarquardtParams>>(fg, initial,
+                                                                 gncParams);
+
+    Vector weights = Vector::Ones(fg.size());
+    weights[0] = 0.9;  // exactly weightsTol = 0.1 from 1, hence checkWeightsConvergence = true
+    CHECK(gnc.checkWeightsConvergence(weights));
+  }
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, checkConvergenceTLS) {
+  // has to have Gaussian noise models !
+  auto fg = example::createReallyNonlinearFactorGraph();
+
+  Point2 p0(3, 3);
+  Values initial;
+  initial.insert(X(1), p0);
+
+  GncParams<LevenbergMarquardtParams> gncParams;
+  gncParams.setRelativeCostTol(1e-5);
+  gncParams.setLossType(GncLossType::TLS);
+  auto gnc = GncOptimizer<GncParams<LevenbergMarquardtParams>>(fg, initial,
+                                                               gncParams);
+
+  CHECK(gnc.checkCostConvergence(1.0, 1.0));
+  CHECK(!gnc.checkCostConvergence(1.0, 2.0));
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, calculateWeightsGM) {
+  auto fg = example::sharedNonRobustFactorGraphWithOutliers();
+
+  Point2 p0(0, 0);
+  Values initial;
+  initial.insert(X(1), p0);
+
+  // we have 4 factors, 3 with zero errors (inliers), 1 with error 50 = 0.5 *
+  // 1/sigma^2 || [1;0] - [0;0] ||^2 (outlier)
+  Vector weights_expected = Vector::Zero(4);
+  weights_expected[0] = 1.0;                             // zero error
+  weights_expected[1] = 1.0;                             // zero error
+  weights_expected[2] = 1.0;                             // zero error
+  weights_expected[3] = std::pow(1.0 / (50.0 + 1.0), 2);  // outlier, error = 50
+
+  GaussNewtonParams gnParams;
+  GncParams<GaussNewtonParams> gncParams(gnParams);
+  gncParams.setLossType(GncLossType::GM);
+  auto gnc = GncOptimizer<GncParams<GaussNewtonParams>>(fg, initial, gncParams);
+  gnc.setInlierCostThresholds(1.0);
+  double mu = 1.0;
+  Vector weights_actual = gnc.calculateWeights(initial, mu);
+  CHECK(assert_equal(weights_expected, weights_actual, tol));
+
+  mu = 2.0;
+  double barcSq = 5.0;
+  weights_expected[3] = std::pow(mu * barcSq / (50.0 + mu * barcSq), 2);  // outlier, error = 50
+
+  auto gnc2 = GncOptimizer<GncParams<GaussNewtonParams>>(fg, initial,
+                                                         gncParams);
+  gnc2.setInlierCostThresholds(barcSq);
+  weights_actual = gnc2.calculateWeights(initial, mu);
+  CHECK(assert_equal(weights_expected, weights_actual, tol));
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, calculateWeightsTLS) {
+  auto fg = example::sharedNonRobustFactorGraphWithOutliers();
+
+  Point2 p0(0, 0);
+  Values initial;
+  initial.insert(X(1), p0);
+
+  // we have 4 factors, 3 with zero errors (inliers), 1 with error
+  Vector weights_expected = Vector::Zero(4);
+  weights_expected[0] = 1.0;                             // zero error
+  weights_expected[1] = 1.0;                             // zero error
+  weights_expected[2] = 1.0;                             // zero error
+  weights_expected[3] = 0;                               // outliers
+
+  GaussNewtonParams gnParams;
+  GncParams<GaussNewtonParams> gncParams(gnParams);
+  gncParams.setLossType(GncLossType::TLS);
+  auto gnc = GncOptimizer<GncParams<GaussNewtonParams>>(fg, initial, gncParams);
+  double mu = 1.0;
+  Vector weights_actual = gnc.calculateWeights(initial, mu);
+  CHECK(assert_equal(weights_expected, weights_actual, tol));
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, calculateWeightsTLS2) {
+
+  // create values
+  Point2 x_val(0.0, 0.0);
+  Point2 x_prior(1.0, 0.0);
+  Values initial;
+  initial.insert(X(1), x_val);
+
+  // create very simple factor graph with a single factor 0.5 * 1/sigma^2 * || x - [1;0] ||^2
+  double sigma = 1;
+  SharedDiagonal noise = noiseModel::Diagonal::Sigmas(Vector2(sigma, sigma));
+  NonlinearFactorGraph nfg;
+  nfg.add(PriorFactor<Point2>(X(1), x_prior, noise));
+
+  // cost of the factor:
+  DOUBLES_EQUAL(0.5 * 1 / (sigma * sigma), nfg.error(initial), tol);
+
+  // check the TLS weights are correct: CASE 1: residual below barcsq
+  {
+    // expected:
+    Vector weights_expected = Vector::Zero(1);
+    weights_expected[0] = 1.0;  // inlier
+    // actual:
+    GaussNewtonParams gnParams;
+    GncParams<GaussNewtonParams> gncParams(gnParams);
+    gncParams.setLossType(GncLossType::TLS);
+    auto gnc = GncOptimizer<GncParams<GaussNewtonParams>>(nfg, initial,
+                                                          gncParams);
+    gnc.setInlierCostThresholds(0.51);  // if inlier threshold is slightly larger than 0.5, then measurement is inlier
+
+    double mu = 1e6;
+    Vector weights_actual = gnc.calculateWeights(initial, mu);
+    CHECK(assert_equal(weights_expected, weights_actual, tol));
+  }
+  // check the TLS weights are correct: CASE 2: residual above barcsq
+  {
+    // expected:
+    Vector weights_expected = Vector::Zero(1);
+    weights_expected[0] = 0.0;  // outlier
+    // actual:
+    GaussNewtonParams gnParams;
+    GncParams<GaussNewtonParams> gncParams(gnParams);
+    gncParams.setLossType(GncLossType::TLS);
+    auto gnc = GncOptimizer<GncParams<GaussNewtonParams>>(nfg, initial,
+                                                          gncParams);
+    gnc.setInlierCostThresholds(0.49);  // if inlier threshold is slightly below 0.5, then measurement is outlier
+    double mu = 1e6;  // very large mu recovers original TLS cost
+    Vector weights_actual = gnc.calculateWeights(initial, mu);
+    CHECK(assert_equal(weights_expected, weights_actual, tol));
+  }
+  // check the TLS weights are correct: CASE 2: residual at barcsq
+  {
+    // expected:
+    Vector weights_expected = Vector::Zero(1);
+    weights_expected[0] = 0.5;  // undecided
+    // actual:
+    GaussNewtonParams gnParams;
+    GncParams<GaussNewtonParams> gncParams(gnParams);
+    gncParams.setLossType(GncLossType::TLS);
+    auto gnc = GncOptimizer<GncParams<GaussNewtonParams>>(nfg, initial,
+                                                          gncParams);
+    gnc.setInlierCostThresholds(0.5);  // if inlier threshold is slightly below 0.5, then measurement is outlier
+    double mu = 1e6;  // very large mu recovers original TLS cost
+    Vector weights_actual = gnc.calculateWeights(initial, mu);
+    CHECK(assert_equal(weights_expected, weights_actual, 1e-5));
+  }
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, makeWeightedGraph) {
+  // create original factor
+  double sigma1 = 0.1;
+  NonlinearFactorGraph nfg = example::nonlinearFactorGraphWithGivenSigma(
+      sigma1);
+
+  // create expected
+  double sigma2 = 10;
+  NonlinearFactorGraph expected = example::nonlinearFactorGraphWithGivenSigma(
+      sigma2);
+
+  // create weights
+  Vector weights = Vector::Ones(1);  // original info:1/0.1^2 = 100. New info: 1/10^2 = 0.01. Ratio is 10-4
+  weights[0] = 1e-4;
+
+  // create actual
+  Point2 p0(3, 3);
+  Values initial;
+  initial.insert(X(1), p0);
+
+  LevenbergMarquardtParams lmParams;
+  GncParams<LevenbergMarquardtParams> gncParams(lmParams);
+  auto gnc = GncOptimizer<GncParams<LevenbergMarquardtParams>>(nfg, initial,
+                                                               gncParams);
+  NonlinearFactorGraph actual = gnc.makeWeightedGraph(weights);
+
+  // check it's all good
+  CHECK(assert_equal(expected, actual));
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, optimizeSimple) {
+  auto fg = example::createReallyNonlinearFactorGraph();
+
+  Point2 p0(3, 3);
+  Values initial;
+  initial.insert(X(1), p0);
+
+  LevenbergMarquardtParams lmParams;
+  GncParams<LevenbergMarquardtParams> gncParams(lmParams);
+  auto gnc = GncOptimizer<GncParams<LevenbergMarquardtParams>>(fg, initial,
+                                                               gncParams);
+
+  Values actual = gnc.optimize();
+  DOUBLES_EQUAL(0, fg.error(actual), tol);
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, optimize) {
+  auto fg = example::sharedNonRobustFactorGraphWithOutliers();
+
+  Point2 p0(1, 0);
+  Values initial;
+  initial.insert(X(1), p0);
+
+  // try with nonrobust cost function and standard GN
+  GaussNewtonParams gnParams;
+  GaussNewtonOptimizer gn(fg, initial, gnParams);
+  Values gn_results = gn.optimize();
+  // converges to incorrect point due to lack of robustness to an outlier, ideal
+  // solution is Point2(0,0)
+  CHECK(assert_equal(Point2(0.25, 0.0), gn_results.at<Point2>(X(1)), 1e-3));
+
+  // try with robust loss function and standard GN
+  auto fg_robust = example::sharedRobustFactorGraphWithOutliers();  // same as fg, but with
+                                                                    // factors wrapped in
+                                                                    // Geman McClure losses
+  GaussNewtonOptimizer gn2(fg_robust, initial, gnParams);
+  Values gn2_results = gn2.optimize();
+  // converges to incorrect point, this time due to the nonconvexity of the loss
+  CHECK(assert_equal(Point2(0.999706, 0.0), gn2_results.at<Point2>(X(1)), 1e-3));
+
+  // .. but graduated nonconvexity ensures both robustness and convergence in
+  // the face of nonconvexity
+  GncParams<GaussNewtonParams> gncParams(gnParams);
+  // gncParams.setVerbosityGNC(GncParams<GaussNewtonParams>::Verbosity::SUMMARY);
+  auto gnc = GncOptimizer<GncParams<GaussNewtonParams>>(fg, initial, gncParams);
+  Values gnc_result = gnc.optimize();
+  CHECK(assert_equal(Point2(0.0, 0.0), gnc_result.at<Point2>(X(1)), 1e-3));
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, optimizeWithKnownInliers) {
+  auto fg = example::sharedNonRobustFactorGraphWithOutliers();
+
+  Point2 p0(1, 0);
+  Values initial;
+  initial.insert(X(1), p0);
+
+  std::vector<size_t> knownInliers;
+  knownInliers.push_back(0);
+  knownInliers.push_back(1);
+  knownInliers.push_back(2);
+
+  // nonconvexity with known inliers
+  {
+    GncParams<GaussNewtonParams> gncParams;
+    gncParams.setKnownInliers(knownInliers);
+    gncParams.setLossType(GncLossType::GM);
+    //gncParams.setVerbosityGNC(GncParams<GaussNewtonParams>::Verbosity::SUMMARY);
+    auto gnc = GncOptimizer<GncParams<GaussNewtonParams>>(fg, initial,
+                                                          gncParams);
+    gnc.setInlierCostThresholds(1.0);
+    Values gnc_result = gnc.optimize();
+    CHECK(assert_equal(Point2(0.0, 0.0), gnc_result.at<Point2>(X(1)), 1e-3));
+
+    // check weights were actually fixed:
+    Vector finalWeights = gnc.getWeights();
+    DOUBLES_EQUAL(1.0, finalWeights[0], tol);
+    DOUBLES_EQUAL(1.0, finalWeights[1], tol);
+    DOUBLES_EQUAL(1.0, finalWeights[2], tol);
+  }
+  {
+    GncParams<GaussNewtonParams> gncParams;
+    gncParams.setKnownInliers(knownInliers);
+    gncParams.setLossType(GncLossType::TLS);
+    // gncParams.setVerbosityGNC(GncParams<GaussNewtonParams>::Verbosity::SUMMARY);
+    auto gnc = GncOptimizer<GncParams<GaussNewtonParams>>(fg, initial,
+                                                          gncParams);
+
+    Values gnc_result = gnc.optimize();
+    CHECK(assert_equal(Point2(0.0, 0.0), gnc_result.at<Point2>(X(1)), 1e-3));
+
+    // check weights were actually fixed:
+    Vector finalWeights = gnc.getWeights();
+    DOUBLES_EQUAL(1.0, finalWeights[0], tol);
+    DOUBLES_EQUAL(1.0, finalWeights[1], tol);
+    DOUBLES_EQUAL(1.0, finalWeights[2], tol);
+    DOUBLES_EQUAL(0.0, finalWeights[3], tol);
+  }
+  {
+    // if we set the threshold large, they are all inliers
+    GncParams<GaussNewtonParams> gncParams;
+    gncParams.setKnownInliers(knownInliers);
+    gncParams.setLossType(GncLossType::TLS);
+    //gncParams.setVerbosityGNC(GncParams<GaussNewtonParams>::Verbosity::VALUES);
+    auto gnc = GncOptimizer<GncParams<GaussNewtonParams>>(fg, initial,
+                                                          gncParams);
+    gnc.setInlierCostThresholds(100.0);
+
+    Values gnc_result = gnc.optimize();
+    CHECK(assert_equal(Point2(0.25, 0.0), gnc_result.at<Point2>(X(1)), 1e-3));
+
+    // check weights were actually fixed:
+    Vector finalWeights = gnc.getWeights();
+    DOUBLES_EQUAL(1.0, finalWeights[0], tol);
+    DOUBLES_EQUAL(1.0, finalWeights[1], tol);
+    DOUBLES_EQUAL(1.0, finalWeights[2], tol);
+    DOUBLES_EQUAL(1.0, finalWeights[3], tol);
+  }
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, chi2inv) {
+  DOUBLES_EQUAL(8.807468393511950, Chi2inv(0.997, 1), tol); // from MATLAB: chi2inv(0.997, 1) = 8.807468393511950
+  DOUBLES_EQUAL(13.931422665512077, Chi2inv(0.997, 3), tol); // from MATLAB: chi2inv(0.997, 3) = 13.931422665512077
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, barcsq) {
+  auto fg = example::sharedNonRobustFactorGraphWithOutliers();
+
+  Point2 p0(1, 0);
+  Values initial;
+  initial.insert(X(1), p0);
+
+  std::vector<size_t> knownInliers;
+  knownInliers.push_back(0);
+  knownInliers.push_back(1);
+  knownInliers.push_back(2);
+
+  GncParams<GaussNewtonParams> gncParams;
+  gncParams.setKnownInliers(knownInliers);
+  gncParams.setLossType(GncLossType::GM);
+  //gncParams.setVerbosityGNC(GncParams<GaussNewtonParams>::Verbosity::SUMMARY);
+  auto gnc = GncOptimizer<GncParams<GaussNewtonParams>>(fg, initial,
+      gncParams);
+  // expected: chi2inv(0.99, 2)/2
+  CHECK(assert_equal(4.605170185988091 * Vector::Ones(fg.size()), gnc.getInlierCostThresholds(), 1e-3));
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, barcsq_heterogeneousFactors) {
+  NonlinearFactorGraph fg;
+  // specify noise model, otherwise it segfault if we leave default noise model
+   SharedNoiseModel model3D(noiseModel::Isotropic::Sigma(3, 0.5));
+   fg.add( PriorFactor<Pose2>(  0, Pose2(0.0, 0.0, 0.0) , model3D )); // size 3
+  SharedNoiseModel model2D(noiseModel::Isotropic::Sigma(2, 0.5));
+  fg.add( PriorFactor<Point2>(  1, Point2(0.0,0.0), model2D )); // size 2
+  SharedNoiseModel model1D(noiseModel::Isotropic::Sigma(1, 0.5));
+  fg.add( BearingFactor<Pose2, Point2>(  0, 1, 1.0, model1D) ); // size 1
+
+  Values initial;
+  initial.insert(0, Pose2(0.0, 0.0, 0.0));
+  initial.insert(1, Point2(0.0,0.0));
+
+  auto gnc = GncOptimizer<GncParams<GaussNewtonParams>>(fg, initial);
+  CHECK(assert_equal(Vector3(5.672433365072185, 4.605170185988091, 3.317448300510607),
+                     gnc.getInlierCostThresholds(), 1e-3));
+
+  // extra test:
+  // fg.add( PriorFactor<Pose2>(  0, Pose2(0.0, 0.0, 0.0) )); // works if we add model3D as noise model
+  // std::cout <<  "fg[3]->dim() " << fg[3]->dim() << std::endl; // this segfaults?
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, setWeights) {
+  auto fg = example::sharedNonRobustFactorGraphWithOutliers();
+
+  Point2 p0(1, 0);
+  Values initial;
+  initial.insert(X(1), p0);
+
+  std::vector<size_t> knownInliers;
+  knownInliers.push_back(0);
+  knownInliers.push_back(1);
+  knownInliers.push_back(2);
+  {
+    GncParams<GaussNewtonParams> gncParams;
+    gncParams.setKnownInliers(knownInliers);
+    gncParams.setLossType(GncLossType::GM);
+    //gncParams.setVerbosityGNC(GncParams<GaussNewtonParams>::Verbosity::SUMMARY);
+    auto gnc = GncOptimizer<GncParams<GaussNewtonParams>>(fg, initial,
+        gncParams);
+    gnc.setInlierCostThresholds(2.0);
+    Values gnc_result = gnc.optimize();
+    CHECK(assert_equal(Point2(0.0, 0.0), gnc_result.at<Point2>(X(1)), 1e-3));
+
+    // check weights were actually fixed:
+    Vector finalWeights = gnc.getWeights();
+    DOUBLES_EQUAL(1.0, finalWeights[0], tol);
+    DOUBLES_EQUAL(1.0, finalWeights[1], tol);
+    DOUBLES_EQUAL(1.0, finalWeights[2], tol);
+    CHECK(assert_equal(2.0 * Vector::Ones(fg.size()), gnc.getInlierCostThresholds(), 1e-3));
+  }
+  {
+    GncParams<GaussNewtonParams> gncParams;
+    gncParams.setKnownInliers(knownInliers);
+    gncParams.setLossType(GncLossType::GM);
+    //gncParams.setVerbosityGNC(GncParams<GaussNewtonParams>::Verbosity::SUMMARY);
+    auto gnc = GncOptimizer<GncParams<GaussNewtonParams>>(fg, initial,
+        gncParams);
+    gnc.setInlierCostThresholds(2.0 * Vector::Ones(fg.size()));
+    Values gnc_result = gnc.optimize();
+    CHECK(assert_equal(Point2(0.0, 0.0), gnc_result.at<Point2>(X(1)), 1e-3));
+
+    // check weights were actually fixed:
+    Vector finalWeights = gnc.getWeights();
+    DOUBLES_EQUAL(1.0, finalWeights[0], tol);
+    DOUBLES_EQUAL(1.0, finalWeights[1], tol);
+    DOUBLES_EQUAL(1.0, finalWeights[2], tol);
+    CHECK(assert_equal(2.0 * Vector::Ones(fg.size()), gnc.getInlierCostThresholds(), 1e-3));
+  }
+}
+
+/* ************************************************************************* */
+TEST(GncOptimizer, optimizeSmallPoseGraph) {
+  /// load small pose graph
+  const string filename = findExampleDataFile("w100.graph");
+  NonlinearFactorGraph::shared_ptr graph;
+  Values::shared_ptr initial;
+  boost::tie(graph, initial) = load2D(filename);
+  // Add a Gaussian prior on first poses
+  Pose2 priorMean(0.0, 0.0, 0.0);  // prior at origin
+  SharedDiagonal priorNoise = noiseModel::Diagonal::Sigmas(
+      Vector3(0.01, 0.01, 0.01));
+  graph->addPrior(0, priorMean, priorNoise);
+
+  /// get expected values by optimizing outlier-free graph
+  Values expected = LevenbergMarquardtOptimizer(*graph, *initial).optimize();
+
+  // add a few outliers
+  SharedDiagonal betweenNoise = noiseModel::Diagonal::Sigmas(
+      Vector3(0.1, 0.1, 0.01));
+  graph->push_back(BetweenFactor<Pose2>(90, 50, Pose2(), betweenNoise));  // some arbitrary and incorrect between factor
+
+  /// get expected values by optimizing outlier-free graph
+  Values expectedWithOutliers = LevenbergMarquardtOptimizer(*graph, *initial)
+      .optimize();
+  // as expected, the following test fails due to the presence of an outlier!
+  // CHECK(assert_equal(expected, expectedWithOutliers, 1e-3));
+
+  // GNC
+  // Note: in difficult instances, we set the odometry measurements to be
+  // inliers, but this problem is simple enought to succeed even without that
+  // assumption std::vector<size_t> knownInliers;
+  GncParams<GaussNewtonParams> gncParams;
+  auto gnc = GncOptimizer<GncParams<GaussNewtonParams>>(*graph, *initial,
+                                                        gncParams);
+  Values actual = gnc.optimize();
+
+  // compare
+  CHECK(assert_equal(expected, actual, 1e-3));  // yay! we are robust to outliers!
+}
+
+/* ************************************************************************* */
+int main() {
+  TestResult tr;
+  return TestRegistry::runAllTests(tr);
+}
+/* ************************************************************************* */
--- /dev/null
+++ gtsam-4.1.0/tests/testImuPreintegration.cpp
@@ -0,0 +1,127 @@
+/* ----------------------------------------------------------------------------
+
+ * GTSAM Copyright 2010, Georgia Tech Research Corporation,
+ * Atlanta, Georgia 30332-0415
+ * All Rights Reserved
+ * Authors: Frank Dellaert, et al. (see THANKS for the full author list)
+
+ * See LICENSE for the license information
+
+ * -------------------------------------------------------------------------- */
+
+/**
+ * @file   testImuPreintegration.cpp
+ * @brief  Unit tests for IMU Preintegration
+ * @author Russell Buchanan
+ **/
+
+#include <CppUnitLite/TestHarness.h>
+#include <gtsam/base/Testable.h>
+#include <gtsam/base/numericalDerivative.h>
+#include <gtsam/navigation/CombinedImuFactor.h>
+#include <gtsam/slam/dataset.h>
+#include <tests/ImuMeasurement.h>
+
+#include <fstream>
+#include <iostream>
+
+using namespace std;
+using namespace gtsam;
+
+/* ************************************************************************* */
+/**
+ * \brief Uses the GTSAM library to perform IMU preintegration on an
+ * acceleration input.
+ */
+TEST(TestImuPreintegration, LoadedSimulationData) {
+  Vector3 finalPos(0, 0, 0);
+
+  vector<ImuMeasurement> imuMeasurements;
+
+  double accNoiseSigma = 0.001249;
+  double accBiasRwSigma = 0.000106;
+  double gyrNoiseSigma = 0.000208;
+  double gyrBiasRwSigma = 0.000004;
+  double integrationCovariance = 1e-8;
+  double biasAccOmegaInt = 1e-5;
+
+  double gravity = 9.81;
+  double rate = 400.0;  // Hz
+
+  string inFileString = findExampleDataFile("quadraped_imu_data.csv");
+  ifstream inputFile(inFileString);
+  string line;
+  while (getline(inputFile, line)) {
+    stringstream ss(line);
+    string str;
+    vector<double> results;
+    while (getline(ss, str, ',')) {
+      results.push_back(atof(str.c_str()));
+    }
+    ImuMeasurement measurement;
+    measurement.dt = static_cast<size_t>(1e9 * (1 / rate));
+    measurement.time = results[2];
+    measurement.I_a_WI = {results[29], results[30], results[31]};
+    measurement.I_w_WI = {results[17], results[18], results[19]};
+    imuMeasurements.push_back(measurement);
+  }
+
+  // Assume a Z-up navigation (assuming we are performing optimization in the
+  // IMU frame).
+  auto imuPreintegratedParams =
+      PreintegratedCombinedMeasurements::Params::MakeSharedU(gravity);
+  imuPreintegratedParams->accelerometerCovariance =
+      I_3x3 * pow(accNoiseSigma, 2);
+  imuPreintegratedParams->biasAccCovariance = I_3x3 * pow(accBiasRwSigma, 2);
+  imuPreintegratedParams->gyroscopeCovariance = I_3x3 * pow(gyrNoiseSigma, 2);
+  imuPreintegratedParams->biasOmegaCovariance = I_3x3 * pow(gyrBiasRwSigma, 2);
+  imuPreintegratedParams->integrationCovariance = I_3x3 * integrationCovariance;
+  imuPreintegratedParams->biasAccOmegaInt = I_6x6 * biasAccOmegaInt;
+
+  // Initial state
+  Pose3 priorPose;
+  Vector3 priorVelocity(0, 0, 0);
+  imuBias::ConstantBias priorImuBias;
+  PreintegratedCombinedMeasurements imuPreintegrated;
+  Vector3 position(0, 0, 0);
+  Vector3 velocity(0, 0, 0);
+  NavState propState;
+
+  NavState initialNavState(priorPose, priorVelocity);
+
+  // Assume zero bias for simulated data
+  priorImuBias =
+      imuBias::ConstantBias(Eigen::Vector3d(0, 0, 0), Eigen::Vector3d(0, 0, 0));
+
+  imuPreintegrated =
+      PreintegratedCombinedMeasurements(imuPreintegratedParams, priorImuBias);
+
+  // start at 1 to skip header
+  for (size_t n = 1; n < imuMeasurements.size(); n++) {
+    // integrate
+    imuPreintegrated.integrateMeasurement(imuMeasurements[n].I_a_WI,
+                                          imuMeasurements[n].I_w_WI, 1 / rate);
+    // predict
+    propState = imuPreintegrated.predict(initialNavState, priorImuBias);
+    position = propState.pose().translation();
+    velocity = propState.velocity();
+  }
+
+  Vector3 rotation = propState.pose().rotation().rpy();
+
+  // Dont have ground truth for x and y position yet
+  // DOUBLES_EQUAL(0.1, position[0], 1e-2);
+  // DOUBLES_EQUAL(0.1, position[1], 1e-2);
+  DOUBLES_EQUAL(0.0, position[2], 1e-2);
+
+  DOUBLES_EQUAL(0.0, rotation[0], 1e-2);
+  DOUBLES_EQUAL(0.0, rotation[1], 1e-2);
+  DOUBLES_EQUAL(0.0, rotation[2], 1e-2);
+}
+
+/* ************************************************************************* */
+int main() {
+  TestResult tr;
+  return TestRegistry::runAllTests(tr);
+}
+/* ************************************************************************* */
--- gtsam-4.1.0.orig/tests/testNonlinearFactor.cpp
+++ gtsam-4.1.0/tests/testNonlinearFactor.cpp
@@ -234,6 +234,26 @@ TEST( NonlinearFactor, linearize_constra
 }
 
 /* ************************************************************************* */
+TEST( NonlinearFactor, cloneWithNewNoiseModel )
+{
+  // create original factor
+  double sigma1 = 0.1;
+  NonlinearFactorGraph nfg = example::nonlinearFactorGraphWithGivenSigma(sigma1);
+
+  // create expected
+  double sigma2 = 10;
+  NonlinearFactorGraph expected = example::nonlinearFactorGraphWithGivenSigma(sigma2);
+
+  // create actual
+  NonlinearFactorGraph actual;
+  SharedNoiseModel noise2 = noiseModel::Isotropic::Sigma(2,sigma2);
+  actual.push_back( boost::dynamic_pointer_cast<NoiseModelFactor>(nfg[0])->cloneWithNewNoiseModel(noise2) );
+
+  // check it's all good
+  CHECK(assert_equal(expected, actual));
+}
+
+/* ************************************************************************* */
 class TestFactor4 : public NoiseModelFactor4<double, double, double, double> {
 public:
   typedef NoiseModelFactor4<double, double, double, double> Base;
--- gtsam-4.1.0.orig/tests/testNonlinearOptimizer.cpp
+++ gtsam-4.1.0/tests/testNonlinearOptimizer.cpp
@@ -49,6 +49,19 @@ using symbol_shorthand::X;
 using symbol_shorthand::L;
 
 /* ************************************************************************* */
+TEST( NonlinearOptimizer, paramsEquals )
+{
+  // default constructors lead to two identical params
+  GaussNewtonParams gnParams1;
+  GaussNewtonParams gnParams2;
+  CHECK(gnParams1.equals(gnParams2));
+
+  // but the params become different if we change something in gnParams2
+  gnParams2.setVerbosity("DELTA");
+  CHECK(!gnParams1.equals(gnParams2));
+}
+
+/* ************************************************************************* */
 TEST( NonlinearOptimizer, iterateLM )
 {
   // really non-linear factor graph
@@ -567,6 +580,58 @@ TEST( NonlinearOptimizer, logfile )
 }
 
 /* ************************************************************************* */
+TEST( NonlinearOptimizer, iterationHook_LM )
+{
+  NonlinearFactorGraph fg(example::createReallyNonlinearFactorGraph());
+
+  Point2 x0(3,3);
+  Values c0;
+  c0.insert(X(1), x0);
+
+  // Levenberg-Marquardt
+  LevenbergMarquardtParams lmParams;
+  size_t lastIterCalled = 0;
+  lmParams.iterationHook = [&](size_t iteration, double oldError, double newError)
+  {
+    // Tests:
+    lastIterCalled = iteration;
+    EXPECT(newError<oldError);
+    
+    // Example of evolution printout:
+    //std::cout << "iter: " << iteration << " error: " << oldError << " => " << newError <<"\n";
+  };
+  LevenbergMarquardtOptimizer(fg, c0, lmParams).optimize();
+  
+  EXPECT(lastIterCalled>5);
+}
+/* ************************************************************************* */
+TEST( NonlinearOptimizer, iterationHook_CG )
+{
+  NonlinearFactorGraph fg(example::createReallyNonlinearFactorGraph());
+
+  Point2 x0(3,3);
+  Values c0;
+  c0.insert(X(1), x0);
+
+  // Levenberg-Marquardt
+  NonlinearConjugateGradientOptimizer::Parameters cgParams;
+  size_t lastIterCalled = 0;
+  cgParams.iterationHook = [&](size_t iteration, double oldError, double newError)
+  {
+    // Tests:
+    lastIterCalled = iteration;
+    EXPECT(newError<oldError);
+    
+    // Example of evolution printout:
+    //std::cout << "iter: " << iteration << " error: " << oldError << " => " << newError <<"\n";
+  };
+  NonlinearConjugateGradientOptimizer(fg, c0, cgParams).optimize();
+  
+  EXPECT(lastIterCalled>5);
+}
+
+
+/* ************************************************************************* */
 //// Minimal traits example
 struct MyType : public Vector3 {
   using Vector3::Vector3;
--- gtsam-4.1.0.orig/tests/testSerializationSLAM.cpp
+++ gtsam-4.1.0/tests/testSerializationSLAM.cpp
@@ -89,10 +89,8 @@ typedef RangeFactor<Pose3, Point3>
 typedef RangeFactor<Pose2, Pose2>                               RangeFactorPose2;
 typedef RangeFactor<Pose3, Pose3>                               RangeFactorPose3;
 typedef RangeFactor<CalibratedCamera, Point3>                   RangeFactorCalibratedCameraPoint;
-typedef RangeFactor<SimpleCamera, Point3>                       RangeFactorSimpleCameraPoint;
 typedef RangeFactor<PinholeCameraCal3_S2, Point3>               RangeFactorPinholeCameraCal3_S2Point;
 typedef RangeFactor<CalibratedCamera, CalibratedCamera>         RangeFactorCalibratedCamera;
-typedef RangeFactor<SimpleCamera, SimpleCamera>                 RangeFactorSimpleCamera;
 typedef RangeFactor<PinholeCameraCal3_S2, PinholeCameraCal3_S2> RangeFactorPinholeCameraCal3_S2;
 
 typedef BearingRangeFactor<Pose2, Point2>  BearingRangeFactor2D;
@@ -102,7 +100,7 @@ typedef GenericProjectionFactor<Pose3, P
 typedef GenericProjectionFactor<Pose3, Point3, Cal3DS2> GenericProjectionFactorCal3DS2;
 
 typedef gtsam::GeneralSFMFactor<gtsam::PinholeCameraCal3_S2, gtsam::Point3> GeneralSFMFactorCal3_S2;
-//typedef gtsam::GeneralSFMFactor<gtsam::PinholeCameraCal3DS2, gtsam::Point3> GeneralSFMFactorCal3DS2;
+typedef gtsam::GeneralSFMFactor<gtsam::PinholeCameraCal3DS2, gtsam::Point3> GeneralSFMFactorCal3DS2;
 
 typedef gtsam::GeneralSFMFactor2<gtsam::Cal3_S2> GeneralSFMFactor2Cal3_S2;
 
@@ -145,7 +143,6 @@ GTSAM_VALUE_EXPORT(gtsam::Cal3_S2);
 GTSAM_VALUE_EXPORT(gtsam::Cal3DS2);
 GTSAM_VALUE_EXPORT(gtsam::Cal3_S2Stereo);
 GTSAM_VALUE_EXPORT(gtsam::CalibratedCamera);
-GTSAM_VALUE_EXPORT(gtsam::SimpleCamera);
 GTSAM_VALUE_EXPORT(gtsam::PinholeCameraCal3_S2);
 GTSAM_VALUE_EXPORT(gtsam::StereoCamera);
 
@@ -190,9 +187,9 @@ BOOST_CLASS_EXPORT_GUID(RangeFactor3D, "
 BOOST_CLASS_EXPORT_GUID(RangeFactorPose2, "gtsam::RangeFactorPose2");
 BOOST_CLASS_EXPORT_GUID(RangeFactorPose3, "gtsam::RangeFactorPose3");
 BOOST_CLASS_EXPORT_GUID(RangeFactorCalibratedCameraPoint, "gtsam::RangeFactorCalibratedCameraPoint");
-BOOST_CLASS_EXPORT_GUID(RangeFactorSimpleCameraPoint, "gtsam::RangeFactorSimpleCameraPoint");
+BOOST_CLASS_EXPORT_GUID(RangeFactorPinholeCameraCal3_S2Point, "gtsam::RangeFactorPinholeCameraCal3_S2Point");
 BOOST_CLASS_EXPORT_GUID(RangeFactorCalibratedCamera, "gtsam::RangeFactorCalibratedCamera");
-BOOST_CLASS_EXPORT_GUID(RangeFactorSimpleCamera, "gtsam::RangeFactorSimpleCamera");
+BOOST_CLASS_EXPORT_GUID(RangeFactorPinholeCameraCal3_S2, "gtsam::RangeFactorPinholeCameraCal3_S2");
 
 BOOST_CLASS_EXPORT_GUID(BearingRangeFactor2D, "gtsam::BearingRangeFactor2D");
 
@@ -200,7 +197,7 @@ BOOST_CLASS_EXPORT_GUID(GenericProjectio
 BOOST_CLASS_EXPORT_GUID(GenericProjectionFactorCal3DS2, "gtsam::GenericProjectionFactorCal3DS2");
 
 BOOST_CLASS_EXPORT_GUID(GeneralSFMFactorCal3_S2, "gtsam::GeneralSFMFactorCal3_S2");
-//BOOST_CLASS_EXPORT_GUID(GeneralSFMFactorCal3DS2, "gtsam::GeneralSFMFactorCal3DS2");
+BOOST_CLASS_EXPORT_GUID(GeneralSFMFactorCal3DS2, "gtsam::GeneralSFMFactorCal3DS2");
 
 BOOST_CLASS_EXPORT_GUID(GeneralSFMFactor2Cal3_S2, "gtsam::GeneralSFMFactor2Cal3_S2");
 
@@ -352,9 +349,9 @@ TEST (testSerializationSLAM, factors) {
   RangeFactorPose2 rangeFactorPose2(a08, b08, 2.0, model1);
   RangeFactorPose3 rangeFactorPose3(a09, b09, 2.0, model1);
   RangeFactorCalibratedCameraPoint rangeFactorCalibratedCameraPoint(a12, a05, 2.0, model1);
-  RangeFactorSimpleCameraPoint rangeFactorSimpleCameraPoint(a13, a05, 2.0, model1);
+  RangeFactorPinholeCameraCal3_S2Point rangeFactorPinholeCameraCal3_S2Point(a13, a05, 2.0, model1);
   RangeFactorCalibratedCamera rangeFactorCalibratedCamera(a12, b12, 2.0, model1);
-  RangeFactorSimpleCamera rangeFactorSimpleCamera(a13, b13, 2.0, model1);
+  RangeFactorPinholeCameraCal3_S2 rangeFactorPinholeCameraCal3_S2(a13, b13, 2.0, model1);
 
   BearingRangeFactor2D bearingRangeFactor2D(a08, a03, rot2, 2.0, model2);
 
@@ -405,9 +402,9 @@ TEST (testSerializationSLAM, factors) {
   graph += rangeFactorPose2;
   graph += rangeFactorPose3;
   graph += rangeFactorCalibratedCameraPoint;
-  graph += rangeFactorSimpleCameraPoint;
+  graph += rangeFactorPinholeCameraCal3_S2Point;
   graph += rangeFactorCalibratedCamera;
-  graph += rangeFactorSimpleCamera;
+  graph += rangeFactorPinholeCameraCal3_S2;
 
   graph += bearingRangeFactor2D;
 
@@ -463,9 +460,9 @@ TEST (testSerializationSLAM, factors) {
   EXPECT(equalsObj<RangeFactorPose2>(rangeFactorPose2));
   EXPECT(equalsObj<RangeFactorPose3>(rangeFactorPose3));
   EXPECT(equalsObj<RangeFactorCalibratedCameraPoint>(rangeFactorCalibratedCameraPoint));
-  EXPECT(equalsObj<RangeFactorSimpleCameraPoint>(rangeFactorSimpleCameraPoint));
+  EXPECT(equalsObj<RangeFactorPinholeCameraCal3_S2Point>(rangeFactorPinholeCameraCal3_S2Point));
   EXPECT(equalsObj<RangeFactorCalibratedCamera>(rangeFactorCalibratedCamera));
-  EXPECT(equalsObj<RangeFactorSimpleCamera>(rangeFactorSimpleCamera));
+  EXPECT(equalsObj<RangeFactorPinholeCameraCal3_S2>(rangeFactorPinholeCameraCal3_S2));
 
   EXPECT(equalsObj<BearingRangeFactor2D>(bearingRangeFactor2D));
 
@@ -521,9 +518,9 @@ TEST (testSerializationSLAM, factors) {
   EXPECT(equalsXML<RangeFactorPose2>(rangeFactorPose2));
   EXPECT(equalsXML<RangeFactorPose3>(rangeFactorPose3));
   EXPECT(equalsXML<RangeFactorCalibratedCameraPoint>(rangeFactorCalibratedCameraPoint));
-  EXPECT(equalsXML<RangeFactorSimpleCameraPoint>(rangeFactorSimpleCameraPoint));
+  EXPECT(equalsXML<RangeFactorPinholeCameraCal3_S2Point>(rangeFactorPinholeCameraCal3_S2Point));
   EXPECT(equalsXML<RangeFactorCalibratedCamera>(rangeFactorCalibratedCamera));
-  EXPECT(equalsXML<RangeFactorSimpleCamera>(rangeFactorSimpleCamera));
+  EXPECT(equalsXML<RangeFactorPinholeCameraCal3_S2>(rangeFactorPinholeCameraCal3_S2));
 
   EXPECT(equalsXML<BearingRangeFactor2D>(bearingRangeFactor2D));
 
@@ -579,9 +576,9 @@ TEST (testSerializationSLAM, factors) {
   EXPECT(equalsBinary<RangeFactorPose2>(rangeFactorPose2));
   EXPECT(equalsBinary<RangeFactorPose3>(rangeFactorPose3));
   EXPECT(equalsBinary<RangeFactorCalibratedCameraPoint>(rangeFactorCalibratedCameraPoint));
-  EXPECT(equalsBinary<RangeFactorSimpleCameraPoint>(rangeFactorSimpleCameraPoint));
+  EXPECT(equalsBinary<RangeFactorPinholeCameraCal3_S2Point>(rangeFactorPinholeCameraCal3_S2Point));
   EXPECT(equalsBinary<RangeFactorCalibratedCamera>(rangeFactorCalibratedCamera));
-  EXPECT(equalsBinary<RangeFactorSimpleCamera>(rangeFactorSimpleCamera));
+  EXPECT(equalsBinary<RangeFactorPinholeCameraCal3_S2>(rangeFactorPinholeCameraCal3_S2));
 
   EXPECT(equalsBinary<BearingRangeFactor2D>(bearingRangeFactor2D));
 
--- gtsam-4.1.0.orig/tests/testTranslationRecovery.cpp
+++ gtsam-4.1.0/tests/testTranslationRecovery.cpp
@@ -11,19 +11,28 @@
 
 /**
  * @file testTranslationRecovery.cpp
- * @author Frank Dellaert
+ * @author Frank Dellaert, Akshay Krishnan
  * @date March 2020
  * @brief test recovering translations when rotations are given.
  */
 
-#include <gtsam/sfm/TranslationRecovery.h>
-
 #include <CppUnitLite/TestHarness.h>
+#include <gtsam/sfm/TranslationRecovery.h>
 #include <gtsam/slam/dataset.h>
 
 using namespace std;
 using namespace gtsam;
 
+// Returns the Unit3 direction as measured in the binary measurement, but
+// computed from the input poses. Helper function used in the unit tests.
+Unit3 GetDirectionFromPoses(const Values& poses,
+                            const BinaryMeasurement<Unit3>& unitTranslation) {
+  const Pose3 wTa = poses.at<Pose3>(unitTranslation.key1()),
+              wTb = poses.at<Pose3>(unitTranslation.key2());
+  const Point3 Ta = wTa.translation(), Tb = wTb.translation();
+  return Unit3(Tb - Ta);
+}
+
 /* ************************************************************************* */
 // We read the BAL file, which has 3 cameras in it, with poses. We then assume
 // the rotations are correct, but translations have to be estimated from
@@ -48,43 +57,215 @@ TEST(TranslationRecovery, BAL) {
   const auto relativeTranslations = TranslationRecovery::SimulateMeasurements(
       poses, {{0, 1}, {0, 2}, {1, 2}});
 
-  // Check
-  Unit3 w_aZb_stored; // measurement between 0 and 1 stored for next unit test
-  for(auto& unitTranslation : relativeTranslations) {
-    const Pose3 wTa = poses.at<Pose3>(unitTranslation.key1()), 
-                wTb = poses.at<Pose3>(unitTranslation.key2());
-    const Point3 Ta = wTa.translation(), Tb = wTb.translation();
-    const Unit3 w_aZb = unitTranslation.measured();
-    EXPECT(assert_equal(Unit3(Tb - Ta), w_aZb));
-    if(unitTranslation.key1() == 0 && unitTranslation.key2() == 1) {
-      w_aZb_stored = unitTranslation.measured();
-    }
+  // Check simulated measurements.
+  for (auto& unitTranslation : relativeTranslations) {
+    EXPECT(assert_equal(GetDirectionFromPoses(poses, unitTranslation),
+                        unitTranslation.measured()));
   }
 
   TranslationRecovery algorithm(relativeTranslations);
   const auto graph = algorithm.buildGraph();
   EXPECT_LONGS_EQUAL(3, graph.size());
 
-  // Translation recovery, version 1
+  // Run translation recovery
   const double scale = 2.0;
   const auto result = algorithm.run(scale);
 
   // Check result for first two translations, determined by prior
   EXPECT(assert_equal(Point3(0, 0, 0), result.at<Point3>(0)));
-  EXPECT(assert_equal(Point3(2 * w_aZb_stored.point3()), result.at<Point3>(1)));
+  EXPECT(assert_equal(
+      Point3(2 * GetDirectionFromPoses(poses, relativeTranslations[0])),
+      result.at<Point3>(1)));
 
   // Check that the third translations is correct
   Point3 Ta = poses.at<Pose3>(0).translation();
   Point3 Tb = poses.at<Pose3>(1).translation();
   Point3 Tc = poses.at<Pose3>(2).translation();
-  Point3 expected = 
-      (Tc - Ta) * (scale / (Tb - Ta).norm());
+  Point3 expected = (Tc - Ta) * (scale / (Tb - Ta).norm());
   EXPECT(assert_equal(expected, result.at<Point3>(2), 1e-4));
 
   // TODO(frank): how to get stats back?
   // EXPECT_DOUBLES_EQUAL(0.0199833, actualError, 1e-5);
 }
 
+TEST(TranslationRecovery, TwoPoseTest) {
+  // Create a dataset with 2 poses.
+  // __      __
+  // \/      \/
+  //  0 _____ 1
+  //
+  // 0 and 1 face in the same direction but have a translation offset.
+  Values poses;
+  poses.insert<Pose3>(0, Pose3(Rot3(), Point3(0, 0, 0)));
+  poses.insert<Pose3>(1, Pose3(Rot3(), Point3(2, 0, 0)));
+
+  auto relativeTranslations =
+      TranslationRecovery::SimulateMeasurements(poses, {{0, 1}});
+
+  // Check simulated measurements.
+  for (auto& unitTranslation : relativeTranslations) {
+    EXPECT(assert_equal(GetDirectionFromPoses(poses, unitTranslation),
+                        unitTranslation.measured()));
+  }
+
+  TranslationRecovery algorithm(relativeTranslations);
+  const auto graph = algorithm.buildGraph();
+  EXPECT_LONGS_EQUAL(1, graph.size());
+
+  // Run translation recovery
+  const auto result = algorithm.run(/*scale=*/3.0);
+
+  // Check result for first two translations, determined by prior
+  EXPECT(assert_equal(Point3(0, 0, 0), result.at<Point3>(0)));
+  EXPECT(assert_equal(Point3(3, 0, 0), result.at<Point3>(1)));
+}
+
+TEST(TranslationRecovery, ThreePoseTest) {
+  // Create a dataset with 3 poses.
+  // __      __
+  // \/      \/
+  //  0 _____ 1
+  //    \ __ /
+  //     \\//
+  //       3
+  //
+  // 0 and 1 face in the same direction but have a translation offset. 3 is in
+  // the same direction as 0 and 1, in between 0 and 1, with some Y axis offset.
+
+  Values poses;
+  poses.insert<Pose3>(0, Pose3(Rot3(), Point3(0, 0, 0)));
+  poses.insert<Pose3>(1, Pose3(Rot3(), Point3(2, 0, 0)));
+  poses.insert<Pose3>(3, Pose3(Rot3(), Point3(1, -1, 0)));
+
+  auto relativeTranslations = TranslationRecovery::SimulateMeasurements(
+      poses, {{0, 1}, {1, 3}, {3, 0}});
+
+  // Check simulated measurements.
+  for (auto& unitTranslation : relativeTranslations) {
+    EXPECT(assert_equal(GetDirectionFromPoses(poses, unitTranslation),
+                        unitTranslation.measured()));
+  }
+
+  TranslationRecovery algorithm(relativeTranslations);
+  const auto graph = algorithm.buildGraph();
+  EXPECT_LONGS_EQUAL(3, graph.size());
+
+  const auto result = algorithm.run(/*scale=*/3.0);
+
+  // Check result
+  EXPECT(assert_equal(Point3(0, 0, 0), result.at<Point3>(0)));
+  EXPECT(assert_equal(Point3(3, 0, 0), result.at<Point3>(1)));
+  EXPECT(assert_equal(Point3(1.5, -1.5, 0), result.at<Point3>(3)));
+}
+
+TEST(TranslationRecovery, ThreePosesIncludingZeroTranslation) {
+  // Create a dataset with 3 poses.
+  // __      __
+  // \/      \/
+  //  0 _____ 1
+  //          2 <|
+  //
+  // 0 and 1 face in the same direction but have a translation offset. 2 is at
+  // the same point as 1 but is rotated, with little FOV overlap.
+  Values poses;
+  poses.insert<Pose3>(0, Pose3(Rot3(), Point3(0, 0, 0)));
+  poses.insert<Pose3>(1, Pose3(Rot3(), Point3(2, 0, 0)));
+  poses.insert<Pose3>(2, Pose3(Rot3::RzRyRx(-M_PI / 2, 0, 0), Point3(2, 0, 0)));
+
+  auto relativeTranslations =
+      TranslationRecovery::SimulateMeasurements(poses, {{0, 1}, {1, 2}});
+
+  // Check simulated measurements.
+  for (auto& unitTranslation : relativeTranslations) {
+    EXPECT(assert_equal(GetDirectionFromPoses(poses, unitTranslation),
+                        unitTranslation.measured()));
+  }
+
+  TranslationRecovery algorithm(relativeTranslations);
+  const auto graph = algorithm.buildGraph();
+  // There is only 1 non-zero translation edge.
+  EXPECT_LONGS_EQUAL(1, graph.size());
+
+  // Run translation recovery
+  const auto result = algorithm.run(/*scale=*/3.0);
+
+  // Check result
+  EXPECT(assert_equal(Point3(0, 0, 0), result.at<Point3>(0)));
+  EXPECT(assert_equal(Point3(3, 0, 0), result.at<Point3>(1)));
+  EXPECT(assert_equal(Point3(3, 0, 0), result.at<Point3>(2)));
+}
+
+TEST(TranslationRecovery, FourPosesIncludingZeroTranslation) {
+  // Create a dataset with 4 poses.
+  // __      __
+  // \/      \/
+  //  0 _____ 1
+  //    \ __  2 <|
+  //     \\//
+  //       3
+  //
+  // 0 and 1 face in the same direction but have a translation offset. 2 is at
+  // the same point as 1 but is rotated, with very little FOV overlap. 3 is in
+  // the same direction as 0 and 1, in between 0 and 1, with some Y axis offset.
+
+  Values poses;
+  poses.insert<Pose3>(0, Pose3(Rot3(), Point3(0, 0, 0)));
+  poses.insert<Pose3>(1, Pose3(Rot3(), Point3(2, 0, 0)));
+  poses.insert<Pose3>(2, Pose3(Rot3::RzRyRx(-M_PI / 2, 0, 0), Point3(2, 0, 0)));
+  poses.insert<Pose3>(3, Pose3(Rot3(), Point3(1, -1, 0)));
+
+  auto relativeTranslations = TranslationRecovery::SimulateMeasurements(
+      poses, {{0, 1}, {1, 2}, {1, 3}, {3, 0}});
+
+  // Check simulated measurements.
+  for (auto& unitTranslation : relativeTranslations) {
+    EXPECT(assert_equal(GetDirectionFromPoses(poses, unitTranslation),
+                        unitTranslation.measured()));
+  }
+
+  TranslationRecovery algorithm(relativeTranslations);
+  const auto graph = algorithm.buildGraph();
+  EXPECT_LONGS_EQUAL(3, graph.size());
+
+  // Run translation recovery
+  const auto result = algorithm.run(/*scale=*/4.0);
+
+  // Check result
+  EXPECT(assert_equal(Point3(0, 0, 0), result.at<Point3>(0)));
+  EXPECT(assert_equal(Point3(4, 0, 0), result.at<Point3>(1)));
+  EXPECT(assert_equal(Point3(4, 0, 0), result.at<Point3>(2)));
+  EXPECT(assert_equal(Point3(2, -2, 0), result.at<Point3>(3)));
+}
+
+TEST(TranslationRecovery, ThreePosesWithZeroTranslation) {
+  Values poses;
+  poses.insert<Pose3>(0, Pose3(Rot3::RzRyRx(-M_PI / 6, 0, 0), Point3(0, 0, 0)));
+  poses.insert<Pose3>(1, Pose3(Rot3(), Point3(0, 0, 0)));
+  poses.insert<Pose3>(2, Pose3(Rot3::RzRyRx(M_PI / 6, 0, 0), Point3(0, 0, 0)));
+
+  auto relativeTranslations = TranslationRecovery::SimulateMeasurements(
+      poses, {{0, 1}, {1, 2}, {2, 0}});
+
+  // Check simulated measurements.
+  for (auto& unitTranslation : relativeTranslations) {
+    EXPECT(assert_equal(GetDirectionFromPoses(poses, unitTranslation),
+                        unitTranslation.measured()));
+  }
+
+  TranslationRecovery algorithm(relativeTranslations);
+  const auto graph = algorithm.buildGraph();
+  // Graph size will be zero as there no 'non-zero distance' edges.
+  EXPECT_LONGS_EQUAL(0, graph.size());
+
+  // Run translation recovery
+  const auto result = algorithm.run(/*scale=*/4.0);
+
+  // Check result
+  EXPECT(assert_equal(Point3(0, 0, 0), result.at<Point3>(0)));
+  EXPECT(assert_equal(Point3(0, 0, 0), result.at<Point3>(1)));
+  EXPECT(assert_equal(Point3(0, 0, 0), result.at<Point3>(2)));
+}
+
 /* ************************************************************************* */
 int main() {
   TestResult tr;
--- gtsam-4.1.0.orig/timing/timeVirtual2.cpp
+++ gtsam-4.1.0/timing/timeVirtual2.cpp
@@ -34,7 +34,7 @@ struct DtorTestBase {
 
 struct DtorTestDerived : public DtorTestBase {
   DtorTestDerived() { cout << "  DtorTestDerived" << endl; }
-  virtual ~DtorTestDerived() { cout << "  ~DtorTestDerived" << endl; }
+  ~DtorTestDerived() override { cout << "  ~DtorTestDerived" << endl; }
 };
 
 
@@ -47,8 +47,8 @@ struct VirtualBase {
 struct VirtualDerived : public VirtualBase {
   double data;
   VirtualDerived() { data = rand(); }
-  virtual void method() { data = rand(); }
-  virtual ~VirtualDerived() { }
+  void method() override { data = rand(); }
+  ~VirtualDerived() override { }
 };
 
 struct NonVirtualBase {
--- /dev/null
+++ gtsam-4.1.0/wrap/.github/workflows/linux-ci.yml
@@ -0,0 +1,39 @@
+name: Wrap CI for Linux
+
+on: [pull_request]
+
+jobs:
+  build:
+    name: Tests for 🐍 ${{ matrix.python-version }}
+    runs-on: ubuntu-18.04
+
+    strategy:
+      fail-fast: false
+      matrix:
+        python-version: [3.6, 3.7, 3.8, 3.9]
+
+    steps:
+      - name: Checkout
+        uses: actions/checkout@v2
+
+      - name: Install Dependencies
+        run: |
+          sudo apt-get -y update
+          sudo apt install cmake build-essential pkg-config libpython-dev python-numpy libboost-all-dev
+
+      - name: Set up Python ${{ matrix.python-version }}
+        uses: actions/setup-python@v2
+        with:
+          python-version: ${{ matrix.python-version }}
+
+      - name: Python Dependencies
+        run: |
+          sudo pip3 install -U pip setuptools
+          sudo pip3 install -r requirements.txt
+
+      - name: Build and Test
+        run: |
+          cmake .
+          cd tests
+          # Use Pytest to run all the tests.
+          pytest
--- /dev/null
+++ gtsam-4.1.0/wrap/.github/workflows/macos-ci.yml
@@ -0,0 +1,38 @@
+name: Wrap CI for macOS
+
+on: [pull_request]
+
+jobs:
+  build:
+    name: Tests for 🐍 ${{ matrix.python-version }}
+    runs-on: macos-10.15
+
+    strategy:
+      fail-fast: false
+      matrix:
+        python-version: [3.6, 3.7, 3.8, 3.9]
+
+    steps:
+      - name: Checkout
+        uses: actions/checkout@v2
+
+      - name: Install Dependencies
+        run: |
+          brew install cmake ninja boost
+
+      - name: Set up Python ${{ matrix.python-version }}
+        uses: actions/setup-python@v2
+        with:
+          python-version: ${{ matrix.python-version }}
+
+      - name: Python Dependencies
+        run: |
+          pip3 install -r requirements.txt
+
+      - name: Build and Test
+        run: |
+          cmake .
+          cd tests
+          # Use Pytest to run all the tests.
+          pytest
+
--- /dev/null
+++ gtsam-4.1.0/wrap/CMakeLists.txt
@@ -0,0 +1,83 @@
+cmake_minimum_required(VERSION 3.9)
+
+# Set the project name and version
+project(gtwrap VERSION 1.0)
+
+# ##############################################################################
+# General configuration
+
+include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/GtwrapUtils.cmake)
+gtwrap_get_python_version(${WRAP_PYTHON_VERSION})
+
+# Set the variables to be used for the cmake config file.
+if(WIN32 AND NOT CYGWIN)
+  set(INSTALL_CMAKE_DIR CMake/${PROJECT_NAME})
+else()
+  set(INSTALL_CMAKE_DIR lib/cmake/${PROJECT_NAME})
+endif()
+
+set(INSTALL_LIB_DIR lib/${PROJECT_NAME})
+set(INSTALL_BIN_DIR bin/${PROJECT_NAME})
+set(INSTALL_INCLUDE_DIR include/${PROJECT_NAME})
+
+# ##############################################################################
+# Package Configuration
+
+# Helper functions for generating the gtwrapConfig.cmake file correctly.
+include(CMakePackageConfigHelpers)
+
+# Configure the config file which is used for `find_package`.
+configure_package_config_file(
+  ${CMAKE_CURRENT_SOURCE_DIR}/cmake/gtwrapConfig.cmake.in
+  ${CMAKE_CURRENT_BINARY_DIR}/cmake/gtwrapConfig.cmake
+  INSTALL_DESTINATION "${INSTALL_CMAKE_DIR}"
+  PATH_VARS INSTALL_CMAKE_DIR INSTALL_LIB_DIR INSTALL_BIN_DIR
+            INSTALL_INCLUDE_DIR
+  INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX})
+
+message(STATUS "Package config  : ${CMAKE_INSTALL_PREFIX}/${INSTALL_CMAKE_DIR}")
+
+# ##############################################################################
+# Install the package
+
+message(STATUS "CMake           : ${CMAKE_INSTALL_PREFIX}/${INSTALL_CMAKE_DIR}")
+# Install CMake scripts to the standard CMake script directory.
+install(
+  FILES ${CMAKE_CURRENT_BINARY_DIR}/cmake/gtwrapConfig.cmake
+        cmake/MatlabWrap.cmake cmake/PybindWrap.cmake cmake/GtwrapUtils.cmake
+  DESTINATION "${CMAKE_INSTALL_PREFIX}/${INSTALL_CMAKE_DIR}")
+
+# Configure the include directory for matlab.h This allows the #include to be
+# either gtwrap/matlab.h, wrap/matlab.h or something custom.
+if(NOT DEFINED GTWRAP_INCLUDE_NAME)
+  set(GTWRAP_INCLUDE_NAME
+      "gtwrap"
+      CACHE INTERNAL "Directory name for Matlab includes")
+endif()
+
+configure_file(${PROJECT_SOURCE_DIR}/templates/matlab_wrapper.tpl.in
+               ${PROJECT_SOURCE_DIR}/gtwrap/matlab_wrapper.tpl)
+
+# Install the gtwrap python package as a directory so it can be found  by CMake
+# for wrapping.
+message(STATUS "Lib path        : ${CMAKE_INSTALL_PREFIX}/${INSTALL_LIB_DIR}")
+install(DIRECTORY gtwrap
+        DESTINATION "${CMAKE_INSTALL_PREFIX}/${INSTALL_LIB_DIR}")
+
+# Install pybind11 directory to `CMAKE_INSTALL_PREFIX/lib/gtwrap/pybind11` This
+# will allow the gtwrapConfig.cmake file to load it later.
+install(DIRECTORY pybind11
+        DESTINATION "${CMAKE_INSTALL_PREFIX}/${INSTALL_LIB_DIR}")
+
+# Install wrapping scripts as binaries to `CMAKE_INSTALL_PREFIX/bin` so they can
+# be invoked for wrapping. We use DESTINATION (instead of TYPE) so we can
+# support older CMake versions.
+message(STATUS "Bin path        : ${CMAKE_INSTALL_PREFIX}/${INSTALL_BIN_DIR}")
+install(PROGRAMS scripts/pybind_wrap.py scripts/matlab_wrap.py
+        DESTINATION "${CMAKE_INSTALL_PREFIX}/${INSTALL_BIN_DIR}")
+
+# Install the matlab.h file to `CMAKE_INSTALL_PREFIX/lib/gtwrap/matlab.h`.
+message(
+  STATUS "Header path     : ${CMAKE_INSTALL_PREFIX}/${INSTALL_INCLUDE_DIR}")
+install(FILES matlab.h
+        DESTINATION "${CMAKE_INSTALL_PREFIX}/${INSTALL_INCLUDE_DIR}")
--- /dev/null
+++ gtsam-4.1.0/wrap/DOCS.md
@@ -0,0 +1,194 @@
+## Wrap Module Definition
+
+### Important
+
+The python wrapper supports keyword arguments for functions/methods. Hence, the argument names matter. An implementation restriction is that in overloaded methods or functions, arguments of different types *have* to have different names.
+
+### Requirements
+
+- Classes must start with an uppercase letter.
+    - The wrapper can wrap a typedef, e.g. `typedef TemplatedClass<Arg> EasyName;`.
+
+- Only one Method/Constructor per line, though methods/constructors can extend across multiple lines.
+
+- Methods can return
+    - Eigen types: `Matrix`, `Vector`.
+    - C/C++ basic types: `string`, `bool`, `size_t`, `int`, `double`, `char`, `unsigned char`.
+    - `void`
+    - Any class with which be copied with `boost::make_shared()`.
+    - `boost::shared_ptr` of any object type.
+
+- Constructors
+    - Overloads are supported, but arguments of different types *have* to have different names.
+    - A class with no constructors can be returned from other functions but not allocated directly in MATLAB.
+
+- Methods
+    - Constness has no effect.
+    - Specify by-value (not reference) return types, even if C++ method returns reference.
+    - Must start with a letter (upper or lowercase).
+    - Overloads are supported.
+
+- Static methods
+    - Must start with a letter (upper or lowercase) and use the "static" keyword, e.g. `static void func()`.
+    - The first letter will be made uppercase in the generated MATLAB interface.
+    - Overloads are supported, but arguments of different types *have* to have different names.
+
+- Arguments to functions can be any of
+    - Eigen types: `Matrix`, `Vector`.
+    - Eigen types and classes as an optionally const reference.
+    - C/C++ basic types: `string`, `bool`, `size_t`, `size_t`, `double`, `char`, `unsigned char`.
+    - Any class with which be copied with `boost::make_shared()` (except Eigen).
+    - `boost::shared_ptr` of any object type (except Eigen).
+
+- Properties or Variables
+    - You can specify class variables in the interface file as long as they are in the `public` scope, e.g.
+
+    ```cpp
+    class Sample {
+        double seed;
+    };
+    ```
+
+    - Class variables are read-write so they can be updated directly in Python.
+
+- Operator Overloading (Python only)
+    - You can overload operators just like in C++.
+
+    ```cpp
+    class Overload {
+        Overload operator*(const Overload& other) const;
+    };
+    ```
+    - Supported operators are the intersection of those supported in C++ and in Python.
+    - Operator overloading definitions have to be marked as `const` methods.
+
+- Pointer types
+    - To declare a simple/raw pointer, simply add an `@` to the class name, e.g.`Pose3@`.
+    - To declare a shared pointer (e.g. `gtsam::noiseModel::Base::shared_ptr`), use an asterisk (i.e. `*`). E.g. `gtsam::noiseModel::Base*` to define the wrapping for the `Base` noise model shared pointer.
+
+- Comments can use either C++ or C style, with multiple lines.
+
+- Namespace definitions
+    - Names of namespaces must start with a lowercase letter.
+    - Start a namespace with `namespace example_ns {`, where `example_ns` is the namespace name.
+    - End a namespace with exactly `}`
+    - Namespaces can be nested.
+
+- Namespace usage
+     - Namespaces can be specified for classes in arguments and return values.
+     - In each case, the namespace must be fully specified, e.g., `namespace1::namespace2::ClassName`.
+
+- Includes in C++ wrappers
+    - All includes will be collected and added in a single file.
+    - All namespaces must have angle brackets, e.g. `#include <path>`.
+    - No default includes will be added.
+
+- Global/Namespace functions
+    - Functions specified outside of a class are **global**.
+    - Can be overloaded with different arguments.
+    - Can have multiple functions of the same name in different namespaces.
+    - Functions can be templated and have multiple template arguments, e.g.
+        ```cpp
+        template<T, R, S>
+        ```
+
+- Using classes defined in other modules
+    - If you are using a class `OtherClass` not wrapped in an interface file, add `class OtherClass;` as a forward declaration to avoid a dependency error. `OtherClass` should be in the same project.
+
+- Virtual inheritance
+    - Specify fully-qualified base classes, i.e. `virtual class Derived : ns::Base {` where `ns` is the namespace.
+    - Mark with `virtual` keyword, e.g. `virtual class Base {`, and also `virtual class Derived : ns::Base {`.
+    - Forward declarations must also be marked virtual, e.g. `virtual class ns::Base;` and
+      also `virtual class ns::Derived;`.
+    - Pure virtual (abstract) classes should list no constructors in the interface file.
+    - Virtual classes must have a `clone()` function in C++ (though it does not have to be included
+      in the interface file). `clone()` will be called whenever an object copy is needed, instead
+      of using the copy constructor (which is used for non-virtual objects).
+    - Signature of clone function - `clone()` will be called virtually, so must appear at least at the top of the inheritance tree
+
+        ```cpp
+        virtual boost::shared_ptr<CLASS_NAME> clone() const;
+        ```
+
+- Templates
+    - Basic templates are supported either with an explicit list of types to instantiate,
+      e.g.
+
+      ```cpp
+      template<T = {gtsam::Pose2, gtsam::Rot2, gtsam::Point3}> class Class1 { ... };
+      ```
+
+      or with typedefs, e.g.
+
+      ```cpp
+      template<T, U> class Class2 { ... };
+      typedef Class2<Type1, Type2> MyInstantiatedClass;
+      ```
+    - Templates can also be defined for methods, properties and static methods.
+    - In the class definition, appearances of the template argument(s) will be replaced with their
+      instantiated types, e.g. `void setValue(const T& value);`.
+    - To refer to the instantiation of the template class itself, use `This`, i.e. `static This Create();`.
+    - To create new instantiations in other modules, you must copy-and-paste the whole class definition
+      into the new module, but use only your new instantiation types.
+    - When forward-declaring template instantiations, use the generated/typedef'd name, e.g.
+
+      ```cpp
+      class gtsam::Class1Pose2;
+      class gtsam::MyInstantiatedClass;
+      ```
+    - Template arguments can be templates themselves, e.g.
+
+      ```cpp
+      // Typedef'd PinholeCamera
+      template<CALIBRATION>
+      class PinholeCamera { ... };
+      typedef gtsam::PinholeCamera<gtsam::Cal3_S2> PinholeCameraCal3_S2;
+
+      template<CAMERA>
+      class SfmFactor { ... };
+      // This is valid.
+      typedef gtsam::SfmFactor<gtsam::PinholeCamera<gtsam::Cal3_S2>> BasicSfmFactor;
+      ```
+
+- `Boost.serialization` within the wrapper:
+    - You need to mark classes as being serializable in the markup file (see `gtsam.i` for examples).
+    - There are two options currently, depending on the class.  To "mark" a class as serializable,
+      add a function with a particular signature so that `wrap` will catch it.
+       - Add `void serialize()` to a class to create serialization functions for a class.
+         Adding this flag subsumes the `serializable()` flag below.
+         
+         Requirements:
+            - A default constructor must be publicly accessible.
+            - Must not be an abstract base class.
+            - The class must have an actual boost.serialization `serialize()` function.
+
+       - Add `void serializable()` to a class if you only want the class to be serialized as a
+         part of a container (such as `noiseModel`). This version does not require a publicly
+         accessible default constructor.
+
+- Forward declarations and class definitions for **Pybind**:
+    - Need to specify the base class (both this forward class and base class are declared in an external Pybind header)
+    - This is so that Pybind can generate proper inheritance.
+
+    - Example for when wrapping a gtsam-based project:
+
+        ```cpp
+         // forward declarations
+         virtual class gtsam::NonlinearFactor
+         virtual class gtsam::NoiseModelFactor : gtsam::NonlinearFactor
+         // class definition
+         #include <MyFactor.h>
+         virtual class MyFactor : gtsam::NoiseModelFactor {...};
+         ```
+
+   - **DO NOT** re-define an overriden function already declared in the external (forward-declared) base class. This will cause an ambiguity problem in the Pybind header file.
+
+
+### TODO
+- Default values for arguments.
+    - WORKAROUND: make multiple versions of the same function for different configurations of default arguments.
+- Handle `gtsam::Rot3M` conversions to quaternions.
+- Parse return of const ref arguments.
+- Parse `std::string` variants and convert directly to special string.
+- Add enum support.
+- Add generalized serialization support via `boost.serialization` with hooks to MATLAB save/load.
--- /dev/null
+++ gtsam-4.1.0/wrap/LICENSE
@@ -0,0 +1,13 @@
+Copyright (c) 2010, Georgia Tech Research Corporation
+Atlanta, Georgia 30332-0415
+All Rights Reserved
+
+Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
+
+1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
+
+2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
+
+3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
\ No newline at end of file
--- gtsam-4.1.0.orig/wrap/README.md
+++ gtsam-4.1.0/wrap/README.md
@@ -1,76 +1,111 @@
-
 # WRAP
 
 The wrap library wraps the GTSAM library into a Python library or MATLAB toolbox.
 It was designed to be more general than just wrapping GTSAM. For notes on creating a wrap interface, see `gtsam.h` for what features can be wrapped into a toolbox, as well as the current state of the toolbox for GTSAM.
 
-## Prerequisites: Pybind11 and pyparsing
+## Prerequisites
+
+`Pybind11` and `pyparsing`
 
 1. This library uses `pybind11`, which is included as a subdirectory in GTSAM.
 2. The `interface_parser.py` in this library uses `pyparsing` to parse the interface file `gtsam.h`. Please install it first in your current Python environment before attempting the build.
-    ```
-    python3 -m pip install pyparsing
-    ```
 
-## GTSAM Python wrapper
+```sh
+python3 -m pip install pyparsing
+```
 
-**WARNING: On macOS, you have to statically build GTSAM to use the wrapper.**
+## Getting Started
 
-1. Set `GTSAM_BUILD_PYTHON=ON` while configuring the build with `cmake`.
-1. What you can do in the `build` folder:
-    1. Just run python then import GTSAM and play around:
-        ```
+Clone this repository to your local machine and perform the standard CMake install:
 
-        import gtsam
-        gtsam.__dir__()
-        ```
-
-    1. Run the unittests:
-        ```
-        python -m unittest discover
-        ```
-    1. Edit the unittests in `python/gtsam/*.py` and simply rerun the test.
-    They were symlinked to `<build_folder>/gtsam/*.py` to facilitate fast development.
-        ```
-        python -m unittest gtsam/tests/test_Pose3.py
-        ```
-        - NOTE: You might need to re-run `cmake ..` if files are deleted or added.
-1. Do `make install` and `cd <gtsam_install_folder>/python`. Here, you can:
-    1. Run the unittests:
-        ```
-        python setup.py test
-        ```
-    2. Install `gtsam` to your current Python environment.
-        ```
-        python setup.py install
-        ```
-        - NOTE: It's a good idea to create a virtual environment otherwise it will be installed in your system Python's site-packages.
+```sh
+mkdir build && cd build
+cmake ..
+make install # use sudo if needed
+```
 
+Using `wrap` in your project is straightforward from here. In your `CMakeLists.txt` file, you just need to add the following:
 
-## Old GTSAM Wrapper
+```cmake
+find_package(gtwrap)
 
-*Outdated note from the original wrap.*
+pybind_wrap(${PROJECT_NAME}_py # target
+            ${PROJECT_SOURCE_DIR}/cpp/${PROJECT_NAME}.h # interface header file
+            "${PROJECT_NAME}.cpp" # the generated cpp
+            "${PROJECT_NAME}" # module_name
+            "${PROJECT_MODULE_NAME}" # top namespace in the cpp file e.g. gtsam
+            "${ignore}" # ignore classes
+            ${PROJECT_BINARY_DIR}/${PROJECT_NAME}.tpl # the wrapping template file
+            ${PROJECT_NAME} # libs
+            "${PROJECT_NAME}" # dependencies
+            ON # use boost
+            )
+```
 
-TODO: Update this.
+For more information, please follow our [tutorial](https://github.com/borglab/gtsam-project-python).
 
-It was designed to be more general than just wrapping GTSAM, but a small amount of GTSAM specific code exists in `matlab.h`, the include file that is included by the `mex` files. The GTSAM-specific functionality consists primarily of handling of Eigen Matrix and Vector classes.
+## Documentation
 
-For notes on creating a wrap interface, see `gtsam.h` for what features can be wrapped into a toolbox, as well as the current state of the toolbox for GTSAM. For more technical details on the interface, please read comments in `matlab.h`
+Documentation for wrapping C++ code can be found [here](https://github.com/borglab/wrap/blob/master/DOCS.md).
 
-Some good things to know:
+## Python Wrapper
 
-OBJECT CREATION
+**WARNING: On macOS, you have to statically build GTSAM to use the wrapper.**
 
-- Classes are created by special constructors, e.g., `new_GaussianFactorGraph_.cpp`.
-	These constructors are called from the MATLAB class `@GaussianFactorGraph`.
-	`new_GaussianFactorGraph_` calls wrap_constructed in `matlab.h`, see documentation there
+1. Set `GTSAM_BUILD_PYTHON=ON` while configuring the build with `cmake`.
+1. What you can do in the `build` folder:
 
-METHOD (AND CONSTRUCTOR) ARGUMENTS
+   1. Just run python then import GTSAM and play around:
 
-- Simple argument types of methods, such as "double", will be converted in the
-  `mex` wrappers by calling unwrap<double>, defined in matlab.h
-- Vector and Matrix arguments are normally passed by reference in GTSAM, but
-  in `gtsam.h` you need to pretend they are passed by value, to trigger the
-  generation of the correct conversion routines `unwrap<Vector>` and `unwrap<Matrix>`
-- passing classes as arguments works, provided they are passed by reference.
-	This triggers a call to unwrap_shared_ptr
+      ```python
+      import gtsam
+      gtsam.__dir__()
+      ```
+
+   1. Run the unittests:
+      ```sh
+      python -m unittest discover
+      ```
+   1. Edit the unittests in `python/gtsam/*.py` and simply rerun the test.
+      They were symlinked to `<build_folder>/gtsam/*.py` to facilitate fast development.
+      `python -m unittest gtsam/tests/test_Pose3.py` - NOTE: You might need to re-run `cmake ..` if files are deleted or added.
+
+1. Do `make install` and `cd <gtsam_install_folder>/python`. Here, you can:
+   1. Run the unittests:
+      ```sh
+      python setup.py test
+      ```
+   2. Install `gtsam` to your current Python environment.
+      ```sh
+      python setup.py install
+      ```
+      - NOTE: It's a good idea to create a virtual environment otherwise it will be installed in your system Python's site-packages.
+
+## Matlab Wrapper
+
+In the CMake, simply include the `MatlabWrap.cmake` file.
+
+```cmake
+include(MatlabWrap)
+```
+
+This cmake file defines functions for generating MATLAB wrappers.
+
+- `wrap_and_install_library(interfaceHeader linkLibraries extraIncludeDirs extraMexFlags)` Generates wrap code and compiles the wrapper.
+
+Usage example:
+
+    `wrap_and_install_library("lba.h" "" "" "")`
+
+Arguments:
+
+- `interfaceHeader`: The relative or absolute path to the wrapper interface definition file.
+- `linkLibraries`: Any _additional_ libraries to link. Your project library
+  (e.g. `lba`), libraries it depends on, and any necessary
+  MATLAB libraries will be linked automatically. So normally,
+  leave this empty.
+- `extraIncludeDirs`: Any _additional_ include paths required by dependent
+  libraries that have not already been added by
+  include_directories. Again, normally, leave this empty.
+- `extraMexFlags`: Any _additional_ flags to pass to the compiler when building
+  the wrap code. Normally, leave this empty.
--- /dev/null
+++ gtsam-4.1.0/wrap/cmake/GtwrapUtils.cmake
@@ -0,0 +1,105 @@
+# Utilities to help with wrapping.
+
+# Use CMake's find_package to find the version of Python installed.
+macro(get_python_version)
+  if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
+    # Use older version of cmake's find_python
+    find_package(PythonInterp)
+
+    if(NOT ${PYTHONINTERP_FOUND})
+      message(
+        FATAL_ERROR
+          "Cannot find Python interpreter. Please install Python>=3.5.")
+    endif()
+
+    find_package(PythonLibs ${PYTHON_VERSION_STRING})
+
+  else()
+    # Get info about the Python interpreter
+    # https://cmake.org/cmake/help/latest/module/FindPython.html#module:FindPython
+    find_package(Python COMPONENTS Interpreter Development)
+
+    if(NOT ${Python_FOUND})
+      message(
+        FATAL_ERROR
+          "Cannot find Python interpreter. Please install Python>=3.5.")
+    endif()
+
+  endif()
+endmacro()
+
+# Depending on the version of CMake, ensure all the appropriate variables are set.
+macro(configure_python_variables)
+  if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
+    set(Python_VERSION_MAJOR
+        ${PYTHON_VERSION_MAJOR}
+        CACHE INTERNAL "")
+    set(Python_VERSION_MINOR
+        ${PYTHON_VERSION_MINOR}
+        CACHE INTERNAL "")
+    set(Python_VERSION_PATCH
+        ${PYTHON_VERSION_PATCH}
+        CACHE INTERNAL "")
+    set(Python_EXECUTABLE
+        ${PYTHON_EXECUTABLE}
+        CACHE PATH "")
+
+  else()
+    # Set both sets of variables
+    set(PYTHON_VERSION_MAJOR
+        ${Python_VERSION_MAJOR}
+        CACHE INTERNAL "")
+    set(PYTHON_VERSION_MINOR
+        ${Python_VERSION_MINOR}
+        CACHE INTERNAL "")
+    set(PYTHON_VERSION_PATCH
+        ${Python_VERSION_PATCH}
+        CACHE INTERNAL "")
+    set(PYTHON_EXECUTABLE
+        ${Python_EXECUTABLE}
+        CACHE PATH "")
+
+  endif()
+endmacro()
+
+# Set the Python version for the wrapper and set the paths to the executable and
+# include/library directories.
+# WRAP_PYTHON_VERSION (optionally) can be "Default" or a
+# specific major.minor version.
+macro(gtwrap_get_python_version)
+  # Unset these cached variables to avoid surprises when the python in the
+  # current environment are different from the cached!
+  unset(Python_EXECUTABLE CACHE)
+  unset(Python_INCLUDE_DIRS CACHE)
+  unset(Python_VERSION_MAJOR CACHE)
+  unset(Python_VERSION_MINOR CACHE)
+  unset(Python_VERSION_PATCH CACHE)
+
+  # Set default value if the parameter is not passed in
+  if(NOT WRAP_PYTHON_VERSION)
+    set(WRAP_PYTHON_VERSION "Default")
+  endif()
+
+  # Allow override
+  if(${WRAP_PYTHON_VERSION} STREQUAL "Default")
+    # Check for Python3 or Python2 in order
+    get_python_version()
+
+    # Set the wrapper python version
+    set(WRAP_PYTHON_VERSION
+        "${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}.${Python_VERSION_PATCH}"
+        CACHE STRING "The version of Python to build the wrappers against."
+              FORCE)
+
+  else()
+    # Find the Python that best matches the python version specified.
+    find_package(
+      Python ${WRAP_PYTHON_VERSION}
+      COMPONENTS Interpreter Development
+      EXACT)
+  endif()
+
+  # (Always) Configure the variables once we find the python package
+  configure_python_variables()
+
+endmacro()
--- /dev/null
+++ gtsam-4.1.0/wrap/cmake/MatlabWrap.cmake
@@ -0,0 +1,488 @@
+if(GTWRAP_PYTHON_PACKAGE_DIR)
+  # packaged
+  set(GTWRAP_PACKAGE_DIR "${GTWRAP_PYTHON_PACKAGE_DIR}")
+else()
+  set(GTWRAP_PACKAGE_DIR ${CMAKE_CURRENT_LIST_DIR}/..)
+endif()
+
+# Macro which finds and configure Matlab before we do any wrapping.
+macro(find_and_configure_matlab)
+  find_package(
+    Matlab
+    COMPONENTS MEX_COMPILER
+    REQUIRED)
+
+  if(NOT Matlab_MEX_COMPILER)
+    message(
+      FATAL_ERROR
+        "Cannot find MEX compiler binary. Please check your Matlab installation and ensure MEX in installed as well."
+    )
+  endif()
+
+  if(WRAP_BUILD_TYPE_POSTFIXES)
+      set(CURRENT_POSTFIX ${CMAKE_${CMAKE_BUILD_TYPE_UPPER}_POSTFIX})
+  endif()
+
+  # WRAP_MEX_BUILD_STATIC_MODULE is not for Windows - on Windows any static
+  # are already compiled into the library by the linker
+  if(WRAP_MEX_BUILD_STATIC_MODULE AND WIN32)
+      message(FATAL_ERROR "WRAP_MEX_BUILD_STATIC_MODULE should not be set on Windows - the linker already automatically compiles in any dependent static libraries. To create a standalone toolbox pacakge, simply ensure that CMake finds the static versions of all dependent libraries (Boost, etc).")
+  endif()
+
+  set(MEX_COMMAND ${Matlab_MEX_COMPILER} CACHE PATH "Path to MATLAB MEX compiler")
+  set(MATLAB_ROOT ${Matlab_ROOT_DIR} CACHE PATH "Path to MATLAB installation root (e.g. /usr/local/MATLAB/R2012a)")
+
+  # Try to automatically configure mex path from provided custom `bin` path.
+  if(WRAP_CUSTOM_MATLAB_PATH)
+    set(matlab_bin_directory ${WRAP_CUSTOM_MATLAB_PATH})
+
+    if(WIN32)
+      set(mex_program_name "mex.bat")
+    else()
+      set(mex_program_name "mex")
+    endif()
+
+    # Run find_program explicitly putting $PATH after our predefined program
+    # directories using 'ENV PATH' and 'NO_SYSTEM_ENVIRONMENT_PATH' - this prevents
+    # finding the LaTeX mex program (totally unrelated to MATLAB Mex) when LaTeX is
+    # on the system path.
+    find_program(MEX_COMMAND ${mex_program_name}
+      PATHS ${matlab_bin_directory} ENV PATH
+      NO_DEFAULT_PATH)
+    mark_as_advanced(FORCE MEX_COMMAND)
+    # Now that we have mex, trace back to find the Matlab installation root
+    get_filename_component(MEX_COMMAND "${MEX_COMMAND}" REALPATH)
+    get_filename_component(mex_path "${MEX_COMMAND}" PATH)
+    if(mex_path MATCHES ".*/win64$")
+      get_filename_component(MATLAB_ROOT "${mex_path}/../.." ABSOLUTE)
+    else()
+      get_filename_component(MATLAB_ROOT "${mex_path}/.." ABSOLUTE)
+    endif()
+  endif()
+endmacro()
+
+# Consistent and user-friendly wrap function
+function(matlab_wrap interfaceHeader linkLibraries
+         extraIncludeDirs extraMexFlags ignore_classes)
+  find_and_configure_matlab()
+  wrap_and_install_library("${interfaceHeader}" "${linkLibraries}"
+                           "${extraIncludeDirs}" "${extraMexFlags}"
+                           "${ignore_classes}")
+endfunction()
+
+# Wrapping function.  Builds a mex module from the provided
+# interfaceHeader. For example, for the interface header gtsam.h, this will
+# build the wrap module 'gtsam'.
+#
+# Arguments:
+#
+# interfaceHeader:  The relative path to the wrapper interface definition file.
+# linkLibraries:    Any *additional* libraries to link.  Your project library
+# (e.g. `lba`), libraries it depends on, and any necessary MATLAB libraries will
+# be linked automatically.  So normally, leave this empty.
+# extraIncludeDirs: Any *additional* include paths required by dependent libraries that have not
+# already been added by include_directories.  Again, normally, leave this empty.
+# extraMexFlags:    Any *additional* flags to pass to the compiler when building
+# the wrap code.  Normally, leave this empty.
+# ignore_classes:  List of classes to ignore in the wrapping.
+function(wrap_and_install_library interfaceHeader linkLibraries
+         extraIncludeDirs extraMexFlags ignore_classes)
+  wrap_library_internal("${interfaceHeader}" "${linkLibraries}"
+                        "${extraIncludeDirs}" "${mexFlags}")
+  install_wrapped_library_internal("${interfaceHeader}")
+endfunction()
+
+# Internal function that wraps a library and compiles the wrapper
+function(wrap_library_internal interfaceHeader linkLibraries extraIncludeDirs
+         extraMexFlags)
+  if(UNIX AND NOT APPLE)
+    if(CMAKE_SIZEOF_VOID_P EQUAL 8)
+      set(mexModuleExt mexa64)
+    else()
+      set(mexModuleExt mexglx)
+    endif()
+  elseif(APPLE)
+    set(mexModuleExt mexmaci64)
+  elseif(MSVC)
+    if(CMAKE_CL_64)
+      set(mexModuleExt mexw64)
+    else()
+      set(mexModuleExt mexw32)
+    endif()
+  endif()
+
+  # Wrap codegen interface usage: wrap interfacePath moduleName toolboxPath
+  # headerPath interfacePath : *absolute* path to directory of module interface
+  # file moduleName    : the name of the module, interface file must be called
+  # moduleName.h toolboxPath : the directory in which to generate the wrappers
+  # headerPath    : path to matlab.h
+
+  # Extract module name from interface header file name
+  get_filename_component(interfaceHeader "${interfaceHeader}" ABSOLUTE)
+  get_filename_component(modulePath "${interfaceHeader}" PATH)
+  get_filename_component(moduleName "${interfaceHeader}" NAME_WE)
+
+  # Paths for generated files
+  set(generated_files_path "${PROJECT_BINARY_DIR}/wrap/${moduleName}")
+  set(generated_cpp_file "${generated_files_path}/${moduleName}_wrapper.cpp")
+  set(compiled_mex_modules_root "${PROJECT_BINARY_DIR}/wrap/${moduleName}_mex")
+
+  message(STATUS "Building wrap module ${moduleName}")
+
+  # Set matlab.h in project
+  set(matlab_h_path "${CMAKE_SOURCE_DIR}")
+
+  # If building a static mex module, add all cmake-linked libraries to the
+  # explicit link libraries list so that the next block of code can unpack any
+  # static libraries
+  set(automaticDependencies "")
+  foreach(lib ${moduleName} ${linkLibraries})
+    # message("MODULE NAME: ${moduleName}")
+    if(TARGET "${lib}")
+      get_target_property(dependentLibraries ${lib} INTERFACE_LINK_LIBRARIES)
+      # message("DEPENDENT LIBRARIES:  ${dependentLibraries}")
+      if(dependentLibraries)
+        list(APPEND automaticDependencies ${dependentLibraries})
+      endif()
+    endif()
+  endforeach()
+
+  # CHRIS: Temporary fix. On my system the get_target_property above returned
+  # Not-found for gtsam module This needs to be fixed!!
+  if(UNIX AND NOT APPLE)
+    list(
+      APPEND
+      automaticDependencies
+      ${Boost_SERIALIZATION_LIBRARY_RELEASE}
+      ${Boost_FILESYSTEM_LIBRARY_RELEASE}
+      ${Boost_SYSTEM_LIBRARY_RELEASE}
+      ${Boost_THREAD_LIBRARY_RELEASE}
+      ${Boost_DATE_TIME_LIBRARY_RELEASE})
+    # Only present in Boost >= 1.48.0
+    if(Boost_TIMER_LIBRARY_RELEASE)
+      list(APPEND automaticDependencies ${Boost_TIMER_LIBRARY_RELEASE}
+           ${Boost_CHRONO_LIBRARY_RELEASE})
+      if(WRAP_MEX_BUILD_STATIC_MODULE)
+        # list(APPEND automaticDependencies -Wl,--no-as-needed -lrt)
+      endif()
+    endif()
+  endif()
+
+  # message("AUTOMATIC DEPENDENCIES:  ${automaticDependencies}") CHRIS: End
+  # temporary fix
+
+  # Separate dependencies
+  set(correctedOtherLibraries "")
+  set(otherLibraryTargets "")
+  set(otherLibraryNontargets "")
+  set(otherSourcesAndObjects "")
+  foreach(lib ${moduleName} ${linkLibraries} ${automaticDependencies})
+    if(TARGET "${lib}")
+      if(WRAP_MEX_BUILD_STATIC_MODULE)
+        get_target_property(target_sources ${lib} SOURCES)
+        list(APPEND otherSourcesAndObjects ${target_sources})
+      else()
+        list(APPEND correctedOtherLibraries ${lib})
+        list(APPEND otherLibraryTargets ${lib})
+      endif()
+    else()
+      get_filename_component(file_extension "${lib}" EXT)
+      get_filename_component(lib_name "${lib}" NAME_WE)
+      if(file_extension STREQUAL ".a" AND WRAP_MEX_BUILD_STATIC_MODULE)
+        # For building a static MEX module, unpack the static library and
+        # compile its object files into our module
+        file(MAKE_DIRECTORY "${generated_files_path}/${lib_name}_objects")
+        execute_process(
+          COMMAND ar -x "${lib}"
+          WORKING_DIRECTORY "${generated_files_path}/${lib_name}_objects"
+          RESULT_VARIABLE ar_result)
+        if(NOT ar_result EQUAL 0)
+          message(FATAL_ERROR "Failed extracting ${lib}")
+        endif()
+
+        # Get list of object files
+        execute_process(
+          COMMAND ar -t "${lib}"
+          OUTPUT_VARIABLE object_files
+          RESULT_VARIABLE ar_result)
+        if(NOT ar_result EQUAL 0)
+          message(FATAL_ERROR "Failed listing ${lib}")
+        endif()
+
+        # Add directory to object files
+        string(REPLACE "\n" ";" object_files_list "${object_files}")
+        foreach(object_file ${object_files_list})
+          get_filename_component(file_extension "${object_file}" EXT)
+          if(file_extension STREQUAL ".o")
+            list(APPEND otherSourcesAndObjects
+                 "${generated_files_path}/${lib_name}_objects/${object_file}")
+          endif()
+        endforeach()
+      else()
+        list(APPEND correctedOtherLibraries ${lib})
+        list(APPEND otherLibraryNontargets ${lib})
+      endif()
+    endif()
+  endforeach()
+
+  # Check libraries for conflicting versions built-in to MATLAB
+  set(dependentLibraries "")
+  if(NOT "${otherLibraryTargets}" STREQUAL "")
+    foreach(target ${otherLibraryTargets})
+      get_target_property(dependentLibrariesOne ${target}
+                          INTERFACE_LINK_LIBRARIES)
+      list(APPEND dependentLibraries ${dependentLibrariesOne})
+    endforeach()
+  endif()
+  list(APPEND dependentLibraries ${otherLibraryNontargets})
+  check_conflicting_libraries_internal("${dependentLibraries}")
+
+  # Set up generation of module source file
+  file(MAKE_DIRECTORY "${generated_files_path}")
+
+  find_package(PythonInterp ${WRAP_PYTHON_VERSION} EXACT)
+  find_package(PythonLibs ${WRAP_PYTHON_VERSION} EXACT)
+
+  add_custom_command(
+    OUTPUT ${generated_cpp_file}
+    DEPENDS ${interfaceHeader} ${module_library_target} ${otherLibraryTargets}
+            ${otherSourcesAndObjects}
+    COMMAND
+      ${CMAKE_COMMAND} -E env
+      "PYTHONPATH=${GTWRAP_PACKAGE_DIR}${GTWRAP_PATH_SEPARATOR}$ENV{PYTHONPATH}"
+      ${PYTHON_EXECUTABLE} ${MATLAB_WRAP_SCRIPT} --src ${interfaceHeader}
+      --module_name ${moduleName} --out ${generated_files_path}
+      --top_module_namespaces ${moduleName} --ignore ${ignore_classes}
+    VERBATIM
+    WORKING_DIRECTORY ${generated_files_path})
+
+  # Set up building of mex module
+  string(REPLACE ";" " " extraMexFlagsSpaced "${extraMexFlags}")
+  string(REPLACE ";" " " mexFlagsSpaced "${WRAP_BUILD_MEX_BINARY_FLAGS}")
+  add_library(
+    ${moduleName}_matlab_wrapper MODULE
+    ${generated_cpp_file} ${interfaceHeader} ${otherSourcesAndObjects})
+  target_link_libraries(${moduleName}_matlab_wrapper ${correctedOtherLibraries})
+  target_link_libraries(${moduleName}_matlab_wrapper ${moduleName})
+  set_target_properties(
+    ${moduleName}_matlab_wrapper
+    PROPERTIES OUTPUT_NAME "${moduleName}_wrapper"
+               PREFIX ""
+               SUFFIX ".${mexModuleExt}"
+               LIBRARY_OUTPUT_DIRECTORY "${compiled_mex_modules_root}"
+               ARCHIVE_OUTPUT_DIRECTORY "${compiled_mex_modules_root}"
+               RUNTIME_OUTPUT_DIRECTORY "${compiled_mex_modules_root}"
+               CLEAN_DIRECT_OUTPUT 1)
+  set_property(
+    TARGET ${moduleName}_matlab_wrapper
+    APPEND_STRING
+    PROPERTY
+      COMPILE_FLAGS
+      " ${extraMexFlagsSpaced} ${mexFlagsSpaced} \"-I${MATLAB_ROOT}/extern/include\" -DMATLAB_MEX_FILE -DMX_COMPAT_32"
+  )
+  set_property(
+    TARGET ${moduleName}_matlab_wrapper
+    APPEND
+    PROPERTY INCLUDE_DIRECTORIES ${extraIncludeDirs})
+  # Disable build type postfixes for the mex module - we install in different
+  # directories for each build type instead
+  foreach(build_type ${CMAKE_CONFIGURATION_TYPES})
+    string(TOUPPER "${build_type}" build_type_upper)
+    set_target_properties(${moduleName}_matlab_wrapper
+                          PROPERTIES ${build_type_upper}_POSTFIX "")
+  endforeach()
+  # Set up platform-specific flags
+  if(MSVC)
+    if(CMAKE_CL_64)
+      set(mxLibPath "${MATLAB_ROOT}/extern/lib/win64/microsoft")
+    else()
+      set(mxLibPath "${MATLAB_ROOT}/extern/lib/win32/microsoft")
+    endif()
+    target_link_libraries(
+      ${moduleName}_matlab_wrapper "${mxLibPath}/libmex.lib"
+      "${mxLibPath}/libmx.lib" "${mxLibPath}/libmat.lib")
+    set_target_properties(${moduleName}_matlab_wrapper
+                          PROPERTIES LINK_FLAGS "/export:mexFunction")
+    set_property(
+      SOURCE "${generated_cpp_file}"
+      APPEND
+      PROPERTY COMPILE_FLAGS "/bigobj")
+  elseif(APPLE)
+    set(mxLibPath "${MATLAB_ROOT}/bin/maci64")
+    target_link_libraries(
+      ${moduleName}_matlab_wrapper "${mxLibPath}/libmex.dylib"
+      "${mxLibPath}/libmx.dylib" "${mxLibPath}/libmat.dylib")
+  endif()
+
+  # Hacking around output issue with custom command Deletes generated build
+  # folder
+  add_custom_target(
+    wrap_${moduleName}_matlab_distclean
+    COMMAND cmake -E remove_directory ${generated_files_path}
+    COMMAND cmake -E remove_directory ${compiled_mex_modules_root})
+endfunction()
+
+# Internal function that installs a wrap toolbox
+function(install_wrapped_library_internal interfaceHeader)
+  get_filename_component(moduleName "${interfaceHeader}" NAME_WE)
+  set(generated_files_path "${PROJECT_BINARY_DIR}/wrap/${moduleName}")
+
+  # NOTE: only installs .m and mex binary files (not .cpp) - the trailing slash
+  # on the directory name here prevents creating the top-level module name
+  # directory in the destination.
+  message(STATUS "Installing Matlab Toolbox to ${WRAP_TOOLBOX_INSTALL_PATH}")
+  if(WRAP_BUILD_TYPE_POSTFIXES)
+    foreach(build_type ${CMAKE_CONFIGURATION_TYPES})
+      string(TOUPPER "${build_type}" build_type_upper)
+      if(${build_type_upper} STREQUAL "RELEASE")
+        set(build_type_tag "") # Don't create release mode tag on installed
+                               # directory
+      else()
+        set(build_type_tag "${build_type}")
+      endif()
+      # Split up filename to strip trailing '/' in WRAP_TOOLBOX_INSTALL_PATH if
+      # there is one
+      get_filename_component(location "${WRAP_TOOLBOX_INSTALL_PATH}" PATH)
+      get_filename_component(name "${WRAP_TOOLBOX_INSTALL_PATH}" NAME)
+      install(
+        DIRECTORY "${generated_files_path}/"
+        DESTINATION "${location}/${name}${build_type_tag}"
+        CONFIGURATIONS "${build_type}"
+        FILES_MATCHING
+        PATTERN "*.m")
+      install(
+        TARGETS ${moduleName}_matlab_wrapper
+        LIBRARY DESTINATION "${location}/${name}${build_type_tag}"
+                CONFIGURATIONS "${build_type}"
+        RUNTIME DESTINATION "${location}/${name}${build_type_tag}"
+                CONFIGURATIONS "${build_type}")
+    endforeach()
+  else()
+    install(
+      DIRECTORY "${generated_files_path}/"
+      DESTINATION ${WRAP_TOOLBOX_INSTALL_PATH}
+      FILES_MATCHING
+      PATTERN "*.m")
+    install(
+      TARGETS ${moduleName}_matlab_wrapper
+      LIBRARY DESTINATION ${WRAP_TOOLBOX_INSTALL_PATH}
+      RUNTIME DESTINATION ${WRAP_TOOLBOX_INSTALL_PATH})
+  endif()
+endfunction()
+
+# Internal function to check for libraries installed with MATLAB that may
+# conflict and prints a warning to move them if problems occur.
+function(check_conflicting_libraries_internal libraries)
+  if(UNIX)
+    # Set path for matlab's built-in libraries
+    if(APPLE)
+      set(mxLibPath "${MATLAB_ROOT}/bin/maci64")
+    else()
+      if(CMAKE_CL_64)
+        set(mxLibPath "${MATLAB_ROOT}/bin/glnxa64")
+      else()
+        set(mxLibPath "${MATLAB_ROOT}/bin/glnx86")
+      endif()
+    endif()
+
+    # List matlab's built-in libraries
+    file(
+      GLOB matlabLibs
+      RELATIVE "${mxLibPath}"
+      "${mxLibPath}/lib*")
+
+    # Convert to base names
+    set(matlabLibNames "")
+    foreach(lib ${matlabLibs})
+      get_filename_component(libName "${lib}" NAME_WE)
+      list(APPEND matlabLibNames "${libName}")
+    endforeach()
+
+    # Get names of link libraries
+    set(linkLibNames "")
+    foreach(lib ${libraries})
+      string(FIND "${lib}" "/" slashPos)
+      if(NOT slashPos EQUAL -1)
+        # If the name is a path, just get the library name
+        get_filename_component(libName "${lib}" NAME_WE)
+        list(APPEND linkLibNames "${libName}")
+      else()
+        # It's not a path, so see if it looks like a filename
+        get_filename_component(ext "${lib}" EXT)
+        if(NOT "${ext}" STREQUAL "")
+          # It's a filename, so get the base name
+          get_filename_component(libName "${lib}" NAME_WE)
+          list(APPEND linkLibNames "${libName}")
+        else()
+          # It's not a filename so it must be a short name, add the "lib" prefix
+          list(APPEND linkLibNames "lib${lib}")
+        endif()
+      endif()
+    endforeach()
+
+    # Remove duplicates
+    list(REMOVE_DUPLICATES linkLibNames)
+
+    set(conflictingLibs "")
+    foreach(lib ${linkLibNames})
+      list(FIND matlabLibNames "${lib}" libPos)
+      if(NOT libPos EQUAL -1)
+        if(NOT conflictingLibs STREQUAL "")
+          set(conflictingLibs "${conflictingLibs}, ")
+        endif()
+        set(conflictingLibs "${conflictingLibs}${lib}")
+      endif()
+    endforeach()
+
+    if(NOT "${conflictingLibs}" STREQUAL "")
+      message(
+        WARNING
+          "The project links to the libraries [ ${conflictingLibs} ] on your system, but "
+          "MATLAB is distributed with its own versions of these libraries which may conflict. "
+          "If you get strange errors or crashes with the MATLAB wrapper, move these "
+          "libraries out of MATLAB's built-in library directory, which is ${mxLibPath} on "
+          "your system. MATLAB will usually still work with these libraries moved away, but "
+          "if not, you'll have to compile the static MATLAB wrapper module."
+      )
+    endif()
+  endif()
+endfunction()
+
+# Helper function to install MATLAB scripts and handle multiple build types
+# where the scripts should be installed to all build type toolboxes
+function(install_matlab_scripts source_directory patterns)
+  set(patterns_args "")
+  set(exclude_patterns "")
+
+  foreach(pattern ${patterns})
+    list(APPEND patterns_args PATTERN "${pattern}")
+  endforeach()
+  if(WRAP_BUILD_TYPE_POSTFIXES)
+    foreach(build_type ${CMAKE_CONFIGURATION_TYPES})
+      string(TOUPPER "${build_type}" build_type_upper)
+      if(${build_type_upper} STREQUAL "RELEASE")
+        set(build_type_tag "") # Don't create release mode tag on installed
+                               # directory
+      else()
+        set(build_type_tag "${build_type}")
+      endif()
+      # Split up filename to strip trailing '/' in WRAP_TOOLBOX_INSTALL_PATH if
+      # there is one
+      get_filename_component(location "${WRAP_TOOLBOX_INSTALL_PATH}" PATH)
+      get_filename_component(name "${WRAP_TOOLBOX_INSTALL_PATH}" NAME)
+      install(
+        DIRECTORY "${source_directory}"
+        DESTINATION "${location}/${name}${build_type_tag}"
+        CONFIGURATIONS "${build_type}"
+        FILES_MATCHING ${patterns_args}
+        PATTERN "${exclude_patterns}" EXCLUDE)
+    endforeach()
+  else()
+    install(
+      DIRECTORY "${source_directory}"
+      DESTINATION "${WRAP_TOOLBOX_INSTALL_PATH}"
+      FILES_MATCHING ${patterns_args}
+      PATTERN "${exclude_patterns}" EXCLUDE)
+  endif()
+
+endfunction()
--- gtsam-4.1.0.orig/wrap/cmake/PybindWrap.cmake
+++ gtsam-4.1.0/wrap/cmake/PybindWrap.cmake
@@ -1,41 +1,36 @@
-# Unset these cached variables to avoid surprises when the python in the current
-# environment are different from the cached!
-unset(PYTHON_EXECUTABLE CACHE)
-unset(PYTHON_INCLUDE_DIR CACHE)
-unset(PYTHON_MAJOR_VERSION CACHE)
-
-# Allow override from command line
-if(NOT DEFINED WRAP_USE_CUSTOM_PYTHON_LIBRARY)
-  if(WRAP_PYTHON_VERSION STREQUAL "Default")
-    find_package(PythonInterp REQUIRED)
-    find_package(PythonLibs REQUIRED)
-  else()
-    find_package(PythonInterp
-                ${WRAP_PYTHON_VERSION}
-                EXACT
-                REQUIRED)
-    find_package(PythonLibs
-                ${WRAP_PYTHON_VERSION}
-                EXACT
-                REQUIRED)
-  endif()
+if(GTWRAP_PYTHON_PACKAGE_DIR)
+  # packaged
+  set(GTWRAP_PACKAGE_DIR "${GTWRAP_PYTHON_PACKAGE_DIR}")
+else()
+  set(GTWRAP_PACKAGE_DIR ${CMAKE_CURRENT_LIST_DIR}/..)
 endif()
 
-set(DIR_OF_WRAP_PYBIND_CMAKE ${CMAKE_CURRENT_LIST_DIR})
+# Get the Python version
+include(GtwrapUtils)
+message(STATUS "Checking Python Version")
+gtwrap_get_python_version(${WRAP_PYTHON_VERSION})
 
+message(STATUS "Setting Python version for wrapper")
 set(PYBIND11_PYTHON_VERSION ${WRAP_PYTHON_VERSION})
 
-add_subdirectory(${CMAKE_CURRENT_LIST_DIR}/../pybind11 pybind11)
-
-# User-friendly Pybind11 wrapping and installing function. Builds a Pybind11
-# module from the provided interface_header. For example, for the interface
-# header gtsam.h, this will build the wrap module 'gtsam_py.cc'.
+# User-friendly Pybind11 wrapping and installing function.
+# Builds a Pybind11 module from the provided interface_header.
+# For example, for the interface header gtsam.h, this will
+# build the wrap module 'gtsam_py.cc'.
 #
 # Arguments:
 # ~~~
+# target: The Make target
 # interface_header:  The relative path to the wrapper interface definition file.
-# install_path: destination to install the library libs: libraries to link with
-# dependencies: Dependencies which need to be built before the wrapper
+# generated_cpp: The name of the cpp file which is generated from the tpl file.
+# module_name: The name of the Python module to use.
+# top_namespace: The C++ namespace under which the code to be wrapped exists.
+# ignore_classes: CMake list of classes to ignore from wrapping.
+# install_path: Destination to install the library.
+# module_template: The template file (.tpl) from which to generate the Pybind11 module.
+# libs: Libraries to link with.
+# dependencies: Dependencies which need to be built before the wrapper.
+# use_boost (optional): Flag indicating whether to include Boost.
 function(pybind_wrap
          target
          interface_header
@@ -53,10 +48,17 @@ function(pybind_wrap
   else(USE_BOOST)
     set(_WRAP_BOOST_ARG "")
   endif(USE_BOOST)
-  
+
+  if (UNIX)
+    set(GTWRAP_PATH_SEPARATOR ":")
+  else()
+    set(GTWRAP_PATH_SEPARATOR ";")
+  endif()
+
   add_custom_command(OUTPUT ${generated_cpp}
-                     COMMAND ${PYTHON_EXECUTABLE}
-                             ${CMAKE_SOURCE_DIR}/wrap/pybind_wrapper.py
+          COMMAND ${CMAKE_COMMAND} -E env "PYTHONPATH=${GTWRAP_PACKAGE_DIR}${GTWRAP_PATH_SEPARATOR}$ENV{PYTHONPATH}"
+          ${PYTHON_EXECUTABLE}
+                             ${PYBIND_WRAP_SCRIPT}
                              --src
                              ${interface_header}
                              --out
@@ -80,9 +82,9 @@ function(pybind_wrap
   # ~~~
   add_custom_command(OUTPUT ${generated_cpp}
                      DEPENDS ${interface_header}
-                             ${CMAKE_SOURCE_DIR}/wrap/interface_parser.py
-                             ${CMAKE_SOURCE_DIR}/wrap/pybind_wrapper.py
-                             ${CMAKE_SOURCE_DIR}/wrap/template_instantiator.py
+                            #  @GTWRAP_SOURCE_DIR@/gtwrap/interface_parser.py
+                            #  @GTWRAP_SOURCE_DIR@/gtwrap/pybind_wrapper.py
+                            #  @GTWRAP_SOURCE_DIR@/gtwrap/template_instantiator.py
                      APPEND)
 
   pybind11_add_module(${target} ${generated_cpp})
@@ -137,7 +139,7 @@ function(install_python_scripts
       else()
         set(build_type_tag "")
       endif()
-      # Split up filename to strip trailing '/' in WRAP_CYTHON_INSTALL_PATH if
+      # Split up filename to strip trailing '/' in GTSAM_PY_INSTALL_PATH if
       # there is one
       get_filename_component(location "${dest_directory}" PATH)
       get_filename_component(name "${dest_directory}" NAME)
--- /dev/null
+++ gtsam-4.1.0/wrap/cmake/gtwrapConfig.cmake.in
@@ -0,0 +1,24 @@
+# This config file modifies CMAKE_MODULE_PATH so that the wrap cmake files may
+# be included This file also allows the use of `find_package(gtwrap)` in CMake.
+
+@PACKAGE_INIT@
+
+list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}")
+
+# Set the path to the Python package directory so we can add it to the PYTHONPATH.
+# Used in the *Wrap.cmake files.
+set_and_check(GTWRAP_PYTHON_PACKAGE_DIR @PACKAGE_INSTALL_LIB_DIR@)
+
+# Load all the CMake scripts from the standard location
+include(@PACKAGE_INSTALL_CMAKE_DIR@/PybindWrap.cmake)
+include(@PACKAGE_INSTALL_CMAKE_DIR@/MatlabWrap.cmake)
+include(@PACKAGE_INSTALL_CMAKE_DIR@/GtwrapUtils.cmake)
+
+# Set the variables for the wrapping scripts to be used in the build.
+set_and_check(PYBIND_WRAP_SCRIPT "@PACKAGE_INSTALL_BIN_DIR@/pybind_wrap.py")
+set_and_check(MATLAB_WRAP_SCRIPT "@PACKAGE_INSTALL_BIN_DIR@/matlab_wrap.py")
+
+# Load the pybind11 code from the library installation path
+add_subdirectory(@PACKAGE_INSTALL_LIB_DIR@/pybind11 pybind11)
+
+check_required_components(gtwrap)
--- /dev/null
+++ gtsam-4.1.0/wrap/docs/parser/doxygen.conf
@@ -0,0 +1,2564 @@
+# Doxyfile 1.9.1
+
+# This file describes the settings to be used by the documentation system
+# doxygen (www.doxygen.org) for a project.
+#
+# All text after a double hash (##) is considered a comment and is placed in
+# front of the TAG it is preceding.
+#
+# All text after a single hash (#) is considered a comment and will be ignored.
+# The format is:
+# TAG = value [value, ...]
+# For lists, items can also be appended using:
+# TAG += value [value, ...]
+# Values that contain spaces should be placed between quotes (\" \").
+
+#---------------------------------------------------------------------------
+# Project related configuration options
+#---------------------------------------------------------------------------
+
+# This tag specifies the encoding used for all characters in the configuration
+# file that follow. The default is UTF-8 which is also the encoding used for all
+# text before the first occurrence of this tag. Doxygen uses libiconv (or the
+# iconv built into libc) for the transcoding. See
+# https://www.gnu.org/software/libiconv/ for the list of possible encodings.
+# The default value is: UTF-8.
+
+DOXYFILE_ENCODING      = UTF-8
+
+# The PROJECT_NAME tag is a single word (or a sequence of words surrounded by
+# double-quotes, unless you are using Doxywizard) that should identify the
+# project for which the documentation is generated. This name is used in the
+# title of most generated pages and in a few other places.
+# The default value is: My Project.
+
+PROJECT_NAME           = GTSAM
+
+# The PROJECT_NUMBER tag can be used to enter a project or revision number. This
+# could be handy for archiving the generated documentation or if some version
+# control system is used.
+
+PROJECT_NUMBER         = 0.0
+
+# Using the PROJECT_BRIEF tag one can provide an optional one line description
+# for a project that appears at the top of each page and should give viewer a
+# quick idea about the purpose of the project. Keep the description short.
+
+PROJECT_BRIEF          =
+
+# With the PROJECT_LOGO tag one can specify a logo or an icon that is included
+# in the documentation. The maximum height of the logo should not exceed 55
+# pixels and the maximum width should not exceed 200 pixels. Doxygen will copy
+# the logo to the output directory.
+
+PROJECT_LOGO           =
+
+# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) path
+# into which the generated documentation will be written. If a relative path is
+# entered, it will be relative to the location where doxygen was started. If
+# left blank the current directory will be used.
+
+OUTPUT_DIRECTORY       =
+
+# If the CREATE_SUBDIRS tag is set to YES then doxygen will create 4096 sub-
+# directories (in 2 levels) under the output directory of each output format and
+# will distribute the generated files over these directories. Enabling this
+# option can be useful when feeding doxygen a huge amount of source files, where
+# putting all generated files in the same directory would otherwise causes
+# performance problems for the file system.
+# The default value is: NO.
+
+CREATE_SUBDIRS         = NO
+
+# If the ALLOW_UNICODE_NAMES tag is set to YES, doxygen will allow non-ASCII
+# characters to appear in the names of generated files. If set to NO, non-ASCII
+# characters will be escaped, for example _xE3_x81_x84 will be used for Unicode
+# U+3044.
+# The default value is: NO.
+
+ALLOW_UNICODE_NAMES    = NO
+
+# The OUTPUT_LANGUAGE tag is used to specify the language in which all
+# documentation generated by doxygen is written. Doxygen will use this
+# information to generate all constant output in the proper language.
+# Possible values are: Afrikaans, Arabic, Armenian, Brazilian, Catalan, Chinese,
+# Chinese-Traditional, Croatian, Czech, Danish, Dutch, English (United States),
+# Esperanto, Farsi (Persian), Finnish, French, German, Greek, Hungarian,
+# Indonesian, Italian, Japanese, Japanese-en (Japanese with English messages),
+# Korean, Korean-en (Korean with English messages), Latvian, Lithuanian,
+# Macedonian, Norwegian, Persian (Farsi), Polish, Portuguese, Romanian, Russian,
+# Serbian, Serbian-Cyrillic, Slovak, Slovene, Spanish, Swedish, Turkish,
+# Ukrainian and Vietnamese.
+# The default value is: English.
+
+OUTPUT_LANGUAGE        = English
+
+# The OUTPUT_TEXT_DIRECTION tag is used to specify the direction in which all
+# documentation generated by doxygen is written. Doxygen will use this
+# information to generate all generated output in the proper direction.
+# Possible values are: None, LTR, RTL and Context.
+# The default value is: None.
+
+OUTPUT_TEXT_DIRECTION  = None
+
+# If the BRIEF_MEMBER_DESC tag is set to YES, doxygen will include brief member
+# descriptions after the members that are listed in the file and class
+# documentation (similar to Javadoc). Set to NO to disable this.
+# The default value is: YES.
+
+BRIEF_MEMBER_DESC      = YES
+
+# If the REPEAT_BRIEF tag is set to YES, doxygen will prepend the brief
+# description of a member or function before the detailed description
+#
+# Note: If both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the
+# brief descriptions will be completely suppressed.
+# The default value is: YES.
+
+REPEAT_BRIEF           = YES
+
+# This tag implements a quasi-intelligent brief description abbreviator that is
+# used to form the text in various listings. Each string in this list, if found
+# as the leading text of the brief description, will be stripped from the text
+# and the result, after processing the whole list, is used as the annotated
+# text. Otherwise, the brief description is used as-is. If left blank, the
+# following values are used ($name is automatically replaced with the name of
+# the entity):The $name class, The $name widget, The $name file, is, provides,
+# specifies, contains, represents, a, an and the.
+
+ABBREVIATE_BRIEF       =
+
+# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then
+# doxygen will generate a detailed section even if there is only a brief
+# description.
+# The default value is: NO.
+
+ALWAYS_DETAILED_SEC    = NO
+
+# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all
+# inherited members of a class in the documentation of that class as if those
+# members were ordinary class members. Constructors, destructors and assignment
+# operators of the base classes will not be shown.
+# The default value is: NO.
+
+INLINE_INHERITED_MEMB  = NO
+
+# If the FULL_PATH_NAMES tag is set to YES, doxygen will prepend the full path
+# before files name in the file list and in the header files. If set to NO the
+# shortest path that makes the file name unique will be used
+# The default value is: YES.
+
+FULL_PATH_NAMES        = YES
+
+# The STRIP_FROM_PATH tag can be used to strip a user-defined part of the path.
+# Stripping is only done if one of the specified strings matches the left-hand
+# part of the path. The tag can be used to show relative paths in the file list.
+# If left blank the directory from which doxygen is run is used as the path to
+# strip.
+#
+# Note that you can specify absolute paths here, but also relative paths, which
+# will be relative from the directory where doxygen is started.
+# This tag requires that the tag FULL_PATH_NAMES is set to YES.
+
+STRIP_FROM_PATH        =
+
+# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of the
+# path mentioned in the documentation of a class, which tells the reader which
+# header file to include in order to use a class. If left blank only the name of
+# the header file containing the class definition is used. Otherwise one should
+# specify the list of include paths that are normally passed to the compiler
+# using the -I flag.
+
+STRIP_FROM_INC_PATH    =
+
+# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter (but
+# less readable) file names. This can be useful is your file systems doesn't
+# support long names like on DOS, Mac, or CD-ROM.
+# The default value is: NO.
+
+SHORT_NAMES            = NO
+
+# If the JAVADOC_AUTOBRIEF tag is set to YES then doxygen will interpret the
+# first line (until the first dot) of a Javadoc-style comment as the brief
+# description. If set to NO, the Javadoc-style will behave just like regular Qt-
+# style comments (thus requiring an explicit @brief command for a brief
+# description.)
+# The default value is: NO.
+
+JAVADOC_AUTOBRIEF      = NO
+
+# If the JAVADOC_BANNER tag is set to YES then doxygen will interpret a line
+# such as
+# /***************
+# as being the beginning of a Javadoc-style comment "banner". If set to NO, the
+# Javadoc-style will behave just like regular comments and it will not be
+# interpreted by doxygen.
+# The default value is: NO.
+
+JAVADOC_BANNER         = NO
+
+# If the QT_AUTOBRIEF tag is set to YES then doxygen will interpret the first
+# line (until the first dot) of a Qt-style comment as the brief description. If
+# set to NO, the Qt-style will behave just like regular Qt-style comments (thus
+# requiring an explicit \brief command for a brief description.)
+# The default value is: NO.
+
+QT_AUTOBRIEF           = NO
+
+# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make doxygen treat a
+# multi-line C++ special comment block (i.e. a block of //! or /// comments) as
+# a brief description. This used to be the default behavior. The new default is
+# to treat a multi-line C++ comment block as a detailed description. Set this
+# tag to YES if you prefer the old behavior instead.
+#
+# Note that setting this tag to YES also means that rational rose comments are
+# not recognized any more.
+# The default value is: NO.
+
+MULTILINE_CPP_IS_BRIEF = NO
+
+# By default Python docstrings are displayed as preformatted text and doxygen's
+# special commands cannot be used. By setting PYTHON_DOCSTRING to NO the
+# doxygen's special commands can be used and the contents of the docstring
+# documentation blocks is shown as doxygen documentation.
+# The default value is: YES.
+
+PYTHON_DOCSTRING       = YES
+
+# If the INHERIT_DOCS tag is set to YES then an undocumented member inherits the
+# documentation from any documented member that it re-implements.
+# The default value is: YES.
+
+INHERIT_DOCS           = YES
+
+# If the SEPARATE_MEMBER_PAGES tag is set to YES then doxygen will produce a new
+# page for each member. If set to NO, the documentation of a member will be part
+# of the file/class/namespace that contains it.
+# The default value is: NO.
+
+SEPARATE_MEMBER_PAGES  = NO
+
+# The TAB_SIZE tag can be used to set the number of spaces in a tab. Doxygen
+# uses this value to replace tabs by spaces in code fragments.
+# Minimum value: 1, maximum value: 16, default value: 4.
+
+TAB_SIZE               = 4
+
+# This tag can be used to specify a number of aliases that act as commands in
+# the documentation. An alias has the form:
+# name=value
+# For example adding
+# "sideeffect=@par Side Effects:\n"
+# will allow you to put the command \sideeffect (or @sideeffect) in the
+# documentation, which will result in a user-defined paragraph with heading
+# "Side Effects:". You can put \n's in the value part of an alias to insert
+# newlines (in the resulting output). You can put ^^ in the value part of an
+# alias to insert a newline as if a physical newline was in the original file.
+# When you need a literal { or } or , in the value part of an alias you have to
+# escape them by means of a backslash (\), this can lead to conflicts with the
+# commands \{ and \} for these it is advised to use the version @{ and @} or use
+# a double escape (\\{ and \\})
+
+ALIASES                =
+
+# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C sources
+# only. Doxygen will then generate output that is more tailored for C. For
+# instance, some of the names that are used will be different. The list of all
+# members will be omitted, etc.
+# The default value is: NO.
+
+OPTIMIZE_OUTPUT_FOR_C  = NO
+
+# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java or
+# Python sources only. Doxygen will then generate output that is more tailored
+# for that language. For instance, namespaces will be presented as packages,
+# qualified scopes will look different, etc.
+# The default value is: NO.
+
+OPTIMIZE_OUTPUT_JAVA   = NO
+
+# Set the OPTIMIZE_FOR_FORTRAN tag to YES if your project consists of Fortran
+# sources. Doxygen will then generate output that is tailored for Fortran.
+# The default value is: NO.
+
+OPTIMIZE_FOR_FORTRAN   = NO
+
+# Set the OPTIMIZE_OUTPUT_VHDL tag to YES if your project consists of VHDL
+# sources. Doxygen will then generate output that is tailored for VHDL.
+# The default value is: NO.
+
+OPTIMIZE_OUTPUT_VHDL   = NO
+
+# Set the OPTIMIZE_OUTPUT_SLICE tag to YES if your project consists of Slice
+# sources only. Doxygen will then generate output that is more tailored for that
+# language. For instance, namespaces will be presented as modules, types will be
+# separated into more groups, etc.
+# The default value is: NO.
+
+OPTIMIZE_OUTPUT_SLICE  = NO
+
+# Doxygen selects the parser to use depending on the extension of the files it
+# parses. With this tag you can assign which parser to use for a given
+# extension. Doxygen has a built-in mapping, but you can override or extend it
+# using this tag. The format is ext=language, where ext is a file extension, and
+# language is one of the parsers supported by doxygen: IDL, Java, JavaScript,
+# Csharp (C#), C, C++, D, PHP, md (Markdown), Objective-C, Python, Slice, VHDL,
+# Fortran (fixed format Fortran: FortranFixed, free formatted Fortran:
+# FortranFree, unknown formatted Fortran: Fortran. In the later case the parser
+# tries to guess whether the code is fixed or free formatted code, this is the
+# default for Fortran type files). For instance to make doxygen treat .inc files
+# as Fortran files (default is PHP), and .f files as C (default is Fortran),
+# use: inc=Fortran f=C.
+#
+# Note: For files without extension you can use no_extension as a placeholder.
+#
+# Note that for custom extensions you also need to set FILE_PATTERNS otherwise
+# the files are not read by doxygen. When specifying no_extension you should add
+# * to the FILE_PATTERNS.
+#
+# Note see also the list of default file extension mappings.
+
+EXTENSION_MAPPING      =
+
+# If the MARKDOWN_SUPPORT tag is enabled then doxygen pre-processes all comments
+# according to the Markdown format, which allows for more readable
+# documentation. See https://daringfireball.net/projects/markdown/ for details.
+# The output of markdown processing is further processed by doxygen, so you can
+# mix doxygen, HTML, and XML commands with Markdown formatting. Disable only in
+# case of backward compatibilities issues.
+# The default value is: YES.
+
+MARKDOWN_SUPPORT       = YES
+
+# When the TOC_INCLUDE_HEADINGS tag is set to a non-zero value, all headings up
+# to that level are automatically included in the table of contents, even if
+# they do not have an id attribute.
+# Note: This feature currently applies only to Markdown headings.
+# Minimum value: 0, maximum value: 99, default value: 5.
+# This tag requires that the tag MARKDOWN_SUPPORT is set to YES.
+
+TOC_INCLUDE_HEADINGS   = 5
+
+# When enabled doxygen tries to link words that correspond to documented
+# classes, or namespaces to their corresponding documentation. Such a link can
+# be prevented in individual cases by putting a % sign in front of the word or
+# globally by setting AUTOLINK_SUPPORT to NO.
+# The default value is: YES.
+
+AUTOLINK_SUPPORT       = YES
+
+# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want
+# to include (a tag file for) the STL sources as input, then you should set this
+# tag to YES in order to let doxygen match functions declarations and
+# definitions whose arguments contain STL classes (e.g. func(std::string);
+# versus func(std::string) {}). This also make the inheritance and collaboration
+# diagrams that involve STL classes more complete and accurate.
+# The default value is: NO.
+
+BUILTIN_STL_SUPPORT    = NO
+
+# If you use Microsoft's C++/CLI language, you should set this option to YES to
+# enable parsing support.
+# The default value is: NO.
+
+CPP_CLI_SUPPORT        = NO
+
+# Set the SIP_SUPPORT tag to YES if your project consists of sip (see:
+# https://www.riverbankcomputing.com/software/sip/intro) sources only. Doxygen
+# will parse them like normal C++ but will assume all classes use public instead
+# of private inheritance when no explicit protection keyword is present.
+# The default value is: NO.
+
+SIP_SUPPORT            = NO
+
+# For Microsoft's IDL there are propget and propput attributes to indicate
+# getter and setter methods for a property. Setting this option to YES will make
+# doxygen to replace the get and set methods by a property in the documentation.
+# This will only work if the methods are indeed getting or setting a simple
+# type. If this is not the case, or you want to show the methods anyway, you
+# should set this option to NO.
+# The default value is: YES.
+
+IDL_PROPERTY_SUPPORT   = YES
+
+# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC
+# tag is set to YES then doxygen will reuse the documentation of the first
+# member in the group (if any) for the other members of the group. By default
+# all members of a group must be documented explicitly.
+# The default value is: NO.
+
+DISTRIBUTE_GROUP_DOC   = NO
+
+# If one adds a struct or class to a group and this option is enabled, then also
+# any nested class or struct is added to the same group. By default this option
+# is disabled and one has to add nested compounds explicitly via \ingroup.
+# The default value is: NO.
+
+GROUP_NESTED_COMPOUNDS = NO
+
+# Set the SUBGROUPING tag to YES to allow class member groups of the same type
+# (for instance a group of public functions) to be put as a subgroup of that
+# type (e.g. under the Public Functions section). Set it to NO to prevent
+# subgrouping. Alternatively, this can be done per class using the
+# \nosubgrouping command.
+# The default value is: YES.
+
+SUBGROUPING            = YES
+
+# When the INLINE_GROUPED_CLASSES tag is set to YES, classes, structs and unions
+# are shown inside the group in which they are included (e.g. using \ingroup)
+# instead of on a separate page (for HTML and Man pages) or section (for LaTeX
+# and RTF).
+#
+# Note that this feature does not work in combination with
+# SEPARATE_MEMBER_PAGES.
+# The default value is: NO.
+
+INLINE_GROUPED_CLASSES = NO
+
+# When the INLINE_SIMPLE_STRUCTS tag is set to YES, structs, classes, and unions
+# with only public data fields or simple typedef fields will be shown inline in
+# the documentation of the scope in which they are defined (i.e. file,
+# namespace, or group documentation), provided this scope is documented. If set
+# to NO, structs, classes, and unions are shown on a separate page (for HTML and
+# Man pages) or section (for LaTeX and RTF).
+# The default value is: NO.
+
+INLINE_SIMPLE_STRUCTS  = NO
+
+# When TYPEDEF_HIDES_STRUCT tag is enabled, a typedef of a struct, union, or
+# enum is documented as struct, union, or enum with the name of the typedef. So
+# typedef struct TypeS {} TypeT, will appear in the documentation as a struct
+# with name TypeT. When disabled the typedef will appear as a member of a file,
+# namespace, or class. And the struct will be named TypeS. This can typically be
+# useful for C code in case the coding convention dictates that all compound
+# types are typedef'ed and only the typedef is referenced, never the tag name.
+# The default value is: NO.
+
+TYPEDEF_HIDES_STRUCT   = NO
+
+# The size of the symbol lookup cache can be set using LOOKUP_CACHE_SIZE. This
+# cache is used to resolve symbols given their name and scope. Since this can be
+# an expensive process and often the same symbol appears multiple times in the
+# code, doxygen keeps a cache of pre-resolved symbols. If the cache is too small
+# doxygen will become slower. If the cache is too large, memory is wasted. The
+# cache size is given by this formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range
+# is 0..9, the default is 0, corresponding to a cache size of 2^16=65536
+# symbols. At the end of a run doxygen will report the cache usage and suggest
+# the optimal cache size from a speed point of view.
+# Minimum value: 0, maximum value: 9, default value: 0.
+
+LOOKUP_CACHE_SIZE      = 0
+
+# The NUM_PROC_THREADS specifies the number threads doxygen is allowed to use
+# during processing. When set to 0 doxygen will based this on the number of
+# cores available in the system. You can set it explicitly to a value larger
+# than 0 to get more control over the balance between CPU load and processing
+# speed. At this moment only the input processing can be done using multiple
+# threads. Since this is still an experimental feature the default is set to 1,
+# which efficively disables parallel processing. Please report any issues you
+# encounter. Generating dot graphs in parallel is controlled by the
+# DOT_NUM_THREADS setting.
+# Minimum value: 0, maximum value: 32, default value: 1.
+
+NUM_PROC_THREADS       = 1
+
+#---------------------------------------------------------------------------
+# Build related configuration options
+#---------------------------------------------------------------------------
+
+# If the EXTRACT_ALL tag is set to YES, doxygen will assume all entities in
+# documentation are documented, even if no documentation was available. Private
+# class members and static file members will be hidden unless the
+# EXTRACT_PRIVATE respectively EXTRACT_STATIC tags are set to YES.
+# Note: This will also disable the warnings about undocumented members that are
+# normally produced when WARNINGS is set to YES.
+# The default value is: NO.
+
+EXTRACT_ALL            = NO
+
+# If the EXTRACT_PRIVATE tag is set to YES, all private members of a class will
+# be included in the documentation.
+# The default value is: NO.
+
+EXTRACT_PRIVATE        = NO
+
+# If the EXTRACT_PRIV_VIRTUAL tag is set to YES, documented private virtual
+# methods of a class will be included in the documentation.
+# The default value is: NO.
+
+EXTRACT_PRIV_VIRTUAL   = NO
+
+# If the EXTRACT_PACKAGE tag is set to YES, all members with package or internal
+# scope will be included in the documentation.
+# The default value is: NO.
+
+EXTRACT_PACKAGE        = NO
+
+# If the EXTRACT_STATIC tag is set to YES, all static members of a file will be
+# included in the documentation.
+# The default value is: NO.
+
+EXTRACT_STATIC         = NO
+
+# If the EXTRACT_LOCAL_CLASSES tag is set to YES, classes (and structs) defined
+# locally in source files will be included in the documentation. If set to NO,
+# only classes defined in header files are included. Does not have any effect
+# for Java sources.
+# The default value is: YES.
+
+EXTRACT_LOCAL_CLASSES  = YES
+
+# This flag is only useful for Objective-C code. If set to YES, local methods,
+# which are defined in the implementation section but not in the interface are
+# included in the documentation. If set to NO, only methods in the interface are
+# included.
+# The default value is: NO.
+
+EXTRACT_LOCAL_METHODS  = NO
+
+# If this flag is set to YES, the members of anonymous namespaces will be
+# extracted and appear in the documentation as a namespace called
+# 'anonymous_namespace{file}', where file will be replaced with the base name of
+# the file that contains the anonymous namespace. By default anonymous namespace
+# are hidden.
+# The default value is: NO.
+
+EXTRACT_ANON_NSPACES   = NO
+
+# If this flag is set to YES, the name of an unnamed parameter in a declaration
+# will be determined by the corresponding definition. By default unnamed
+# parameters remain unnamed in the output.
+# The default value is: YES.
+
+RESOLVE_UNNAMED_PARAMS = YES
+
+# If the HIDE_UNDOC_MEMBERS tag is set to YES, doxygen will hide all
+# undocumented members inside documented classes or files. If set to NO these
+# members will be included in the various overviews, but no documentation
+# section is generated. This option has no effect if EXTRACT_ALL is enabled.
+# The default value is: NO.
+
+HIDE_UNDOC_MEMBERS     = NO
+
+# If the HIDE_UNDOC_CLASSES tag is set to YES, doxygen will hide all
+# undocumented classes that are normally visible in the class hierarchy. If set
+# to NO, these classes will be included in the various overviews. This option
+# has no effect if EXTRACT_ALL is enabled.
+# The default value is: NO.
+
+HIDE_UNDOC_CLASSES     = NO
+
+# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, doxygen will hide all friend
+# declarations. If set to NO, these declarations will be included in the
+# documentation.
+# The default value is: NO.
+
+HIDE_FRIEND_COMPOUNDS  = NO
+
+# If the HIDE_IN_BODY_DOCS tag is set to YES, doxygen will hide any
+# documentation blocks found inside the body of a function. If set to NO, these
+# blocks will be appended to the function's detailed documentation block.
+# The default value is: NO.
+
+HIDE_IN_BODY_DOCS      = NO
+
+# The INTERNAL_DOCS tag determines if documentation that is typed after a
+# \internal command is included. If the tag is set to NO then the documentation
+# will be excluded. Set it to YES to include the internal documentation.
+# The default value is: NO.
+
+INTERNAL_DOCS          = NO
+
+# With the correct setting of option CASE_SENSE_NAMES doxygen will better be
+# able to match the capabilities of the underlying filesystem. In case the
+# filesystem is case sensitive (i.e. it supports files in the same directory
+# whose names only differ in casing), the option must be set to YES to properly
+# deal with such files in case they appear in the input. For filesystems that
+# are not case sensitive the option should be be set to NO to properly deal with
+# output files written for symbols that only differ in casing, such as for two
+# classes, one named CLASS and the other named Class, and to also support
+# references to files without having to specify the exact matching casing. On
+# Windows (including Cygwin) and MacOS, users should typically set this option
+# to NO, whereas on Linux or other Unix flavors it should typically be set to
+# YES.
+# The default value is: system dependent.
+
+CASE_SENSE_NAMES       = YES
+
+# If the HIDE_SCOPE_NAMES tag is set to NO then doxygen will show members with
+# their full class and namespace scopes in the documentation. If set to YES, the
+# scope will be hidden.
+# The default value is: NO.
+
+HIDE_SCOPE_NAMES       = NO
+
+# If the HIDE_COMPOUND_REFERENCE tag is set to NO (default) then doxygen will
+# append additional text to a page's title, such as Class Reference. If set to
+# YES the compound reference will be hidden.
+# The default value is: NO.
+
+HIDE_COMPOUND_REFERENCE= NO
+
+# If the SHOW_INCLUDE_FILES tag is set to YES then doxygen will put a list of
+# the files that are included by a file in the documentation of that file.
+# The default value is: YES.
+
+SHOW_INCLUDE_FILES     = YES
+
+# If the SHOW_GROUPED_MEMB_INC tag is set to YES then Doxygen will add for each
+# grouped member an include statement to the documentation, telling the reader
+# which file to include in order to use the member.
+# The default value is: NO.
+
+SHOW_GROUPED_MEMB_INC  = NO
+
+# If the FORCE_LOCAL_INCLUDES tag is set to YES then doxygen will list include
+# files with double quotes in the documentation rather than with sharp brackets.
+# The default value is: NO.
+
+FORCE_LOCAL_INCLUDES   = NO
+
+# If the INLINE_INFO tag is set to YES then a tag [inline] is inserted in the
+# documentation for inline members.
+# The default value is: YES.
+
+INLINE_INFO            = YES
+
+# If the SORT_MEMBER_DOCS tag is set to YES then doxygen will sort the
+# (detailed) documentation of file and class members alphabetically by member
+# name. If set to NO, the members will appear in declaration order.
+# The default value is: YES.
+
+SORT_MEMBER_DOCS       = YES
+
+# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the brief
+# descriptions of file, namespace and class members alphabetically by member
+# name. If set to NO, the members will appear in declaration order. Note that
+# this will also influence the order of the classes in the class list.
+# The default value is: NO.
+
+SORT_BRIEF_DOCS        = NO
+
+# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen will sort the
+# (brief and detailed) documentation of class members so that constructors and
+# destructors are listed first. If set to NO the constructors will appear in the
+# respective orders defined by SORT_BRIEF_DOCS and SORT_MEMBER_DOCS.
+# Note: If SORT_BRIEF_DOCS is set to NO this option is ignored for sorting brief
+# member documentation.
+# Note: If SORT_MEMBER_DOCS is set to NO this option is ignored for sorting
+# detailed member documentation.
+# The default value is: NO.
+
+SORT_MEMBERS_CTORS_1ST = NO
+
+# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the hierarchy
+# of group names into alphabetical order. If set to NO the group names will
+# appear in their defined order.
+# The default value is: NO.
+
+SORT_GROUP_NAMES       = NO
+
+# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be sorted by
+# fully-qualified names, including namespaces. If set to NO, the class list will
+# be sorted only by class name, not including the namespace part.
+# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.
+# Note: This option applies only to the class list, not to the alphabetical
+# list.
+# The default value is: NO.
+
+SORT_BY_SCOPE_NAME     = NO
+
+# If the STRICT_PROTO_MATCHING option is enabled and doxygen fails to do proper
+# type resolution of all parameters of a function it will reject a match between
+# the prototype and the implementation of a member function even if there is
+# only one candidate or it is obvious which candidate to choose by doing a
+# simple string match. By disabling STRICT_PROTO_MATCHING doxygen will still
+# accept a match between prototype and implementation in such cases.
+# The default value is: NO.
+
+STRICT_PROTO_MATCHING  = NO
+
+# The GENERATE_TODOLIST tag can be used to enable (YES) or disable (NO) the todo
+# list. This list is created by putting \todo commands in the documentation.
+# The default value is: YES.
+
+GENERATE_TODOLIST      = YES
+
+# The GENERATE_TESTLIST tag can be used to enable (YES) or disable (NO) the test
+# list. This list is created by putting \test commands in the documentation.
+# The default value is: YES.
+
+GENERATE_TESTLIST      = YES
+
+# The GENERATE_BUGLIST tag can be used to enable (YES) or disable (NO) the bug
+# list. This list is created by putting \bug commands in the documentation.
+# The default value is: YES.
+
+GENERATE_BUGLIST       = YES
+
+# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or disable (NO)
+# the deprecated list. This list is created by putting \deprecated commands in
+# the documentation.
+# The default value is: YES.
+
+GENERATE_DEPRECATEDLIST= YES
+
+# The ENABLED_SECTIONS tag can be used to enable conditional documentation
+# sections, marked by \if <section_label> ... \endif and \cond <section_label>
+# ... \endcond blocks.
+
+ENABLED_SECTIONS       =
+
+# The MAX_INITIALIZER_LINES tag determines the maximum number of lines that the
+# initial value of a variable or macro / define can have for it to appear in the
+# documentation. If the initializer consists of more lines than specified here
+# it will be hidden. Use a value of 0 to hide initializers completely. The
+# appearance of the value of individual variables and macros / defines can be
+# controlled using \showinitializer or \hideinitializer command in the
+# documentation regardless of this setting.
+# Minimum value: 0, maximum value: 10000, default value: 30.
+
+MAX_INITIALIZER_LINES  = 30
+
+# Set the SHOW_USED_FILES tag to NO to disable the list of files generated at
+# the bottom of the documentation of classes and structs. If set to YES, the
+# list will mention the files that were used to generate the documentation.
+# The default value is: YES.
+
+SHOW_USED_FILES        = YES
+
+# Set the SHOW_FILES tag to NO to disable the generation of the Files page. This
+# will remove the Files entry from the Quick Index and from the Folder Tree View
+# (if specified).
+# The default value is: YES.
+
+SHOW_FILES             = YES
+
+# Set the SHOW_NAMESPACES tag to NO to disable the generation of the Namespaces
+# page. This will remove the Namespaces entry from the Quick Index and from the
+# Folder Tree View (if specified).
+# The default value is: YES.
+
+SHOW_NAMESPACES        = YES
+
+# The FILE_VERSION_FILTER tag can be used to specify a program or script that
+# doxygen should invoke to get the current version for each file (typically from
+# the version control system). Doxygen will invoke the program by executing (via
+# popen()) the command command input-file, where command is the value of the
+# FILE_VERSION_FILTER tag, and input-file is the name of an input file provided
+# by doxygen. Whatever the program writes to standard output is used as the file
+# version. For an example see the documentation.
+
+FILE_VERSION_FILTER    =
+
+# The LAYOUT_FILE tag can be used to specify a layout file which will be parsed
+# by doxygen. The layout file controls the global structure of the generated
+# output files in an output format independent way. To create the layout file
+# that represents doxygen's defaults, run doxygen with the -l option. You can
+# optionally specify a file name after the option, if omitted DoxygenLayout.xml
+# will be used as the name of the layout file.
+#
+# Note that if you run doxygen from a directory containing a file called
+# DoxygenLayout.xml, doxygen will parse it automatically even if the LAYOUT_FILE
+# tag is left empty.
+
+LAYOUT_FILE            =
+
+# The CITE_BIB_FILES tag can be used to specify one or more bib files containing
+# the reference definitions. This must be a list of .bib files. The .bib
+# extension is automatically appended if omitted. This requires the bibtex tool
+# to be installed. See also https://en.wikipedia.org/wiki/BibTeX for more info.
+# For LaTeX the style of the bibliography can be controlled using
+# LATEX_BIB_STYLE. To use this feature you need bibtex and perl available in the
+# search path. See also \cite for info how to create references.
+
+CITE_BIB_FILES         =
+
+#---------------------------------------------------------------------------
+# Configuration options related to warning and progress messages
+#---------------------------------------------------------------------------
+
+# The QUIET tag can be used to turn on/off the messages that are generated to
+# standard output by doxygen. If QUIET is set to YES this implies that the
+# messages are off.
+# The default value is: NO.
+
+QUIET                  = YES
+
+# The WARNINGS tag can be used to turn on/off the warning messages that are
+# generated to standard error (stderr) by doxygen. If WARNINGS is set to YES
+# this implies that the warnings are on.
+#
+# Tip: Turn warnings on while writing the documentation.
+# The default value is: YES.
+
+WARNINGS               = YES
+
+# If the WARN_IF_UNDOCUMENTED tag is set to YES then doxygen will generate
+# warnings for undocumented members. If EXTRACT_ALL is set to YES then this flag
+# will automatically be disabled.
+# The default value is: YES.
+
+WARN_IF_UNDOCUMENTED   = YES
+
+# If the WARN_IF_DOC_ERROR tag is set to YES, doxygen will generate warnings for
+# potential errors in the documentation, such as not documenting some parameters
+# in a documented function, or documenting parameters that don't exist or using
+# markup commands wrongly.
+# The default value is: YES.
+
+WARN_IF_DOC_ERROR      = YES
+
+# This WARN_NO_PARAMDOC option can be enabled to get warnings for functions that
+# are documented, but have no documentation for their parameters or return
+# value. If set to NO, doxygen will only warn about wrong or incomplete
+# parameter documentation, but not about the absence of documentation. If
+# EXTRACT_ALL is set to YES then this flag will automatically be disabled.
+# The default value is: NO.
+
+WARN_NO_PARAMDOC       = NO
+
+# If the WARN_AS_ERROR tag is set to YES then doxygen will immediately stop when
+# a warning is encountered. If the WARN_AS_ERROR tag is set to FAIL_ON_WARNINGS
+# then doxygen will continue running as if WARN_AS_ERROR tag is set to NO, but
+# at the end of the doxygen process doxygen will return with a non-zero status.
+# Possible values are: NO, YES and FAIL_ON_WARNINGS.
+# The default value is: NO.
+
+WARN_AS_ERROR          = NO
+
+# The WARN_FORMAT tag determines the format of the warning messages that doxygen
+# can produce. The string should contain the $file, $line, and $text tags, which
+# will be replaced by the file and line number from which the warning originated
+# and the warning text. Optionally the format may contain $version, which will
+# be replaced by the version of the file (if it could be obtained via
+# FILE_VERSION_FILTER)
+# The default value is: $file:$line: $text.
+
+WARN_FORMAT            = "$file:$line: $text"
+
+# The WARN_LOGFILE tag can be used to specify a file to which warning and error
+# messages should be written. If left blank the output is written to standard
+# error (stderr).
+
+WARN_LOGFILE           =
+
+#---------------------------------------------------------------------------
+# Configuration options related to the input files
+#---------------------------------------------------------------------------
+
+# The INPUT tag is used to specify the files and/or directories that contain
+# documented source files. You may enter file names like myfile.cpp or
+# directories like /usr/src/myproject. Separate the files or directories with
+# spaces. See also FILE_PATTERNS and EXTENSION_MAPPING
+# Note: If this tag is empty the current directory is searched.
+
+INPUT                  =
+
+# This tag can be used to specify the character encoding of the source files
+# that doxygen parses. Internally doxygen uses the UTF-8 encoding. Doxygen uses
+# libiconv (or the iconv built into libc) for the transcoding. See the libiconv
+# documentation (see:
+# https://www.gnu.org/software/libiconv/) for the list of possible encodings.
+# The default value is: UTF-8.
+
+INPUT_ENCODING         = UTF-8
+
+# If the value of the INPUT tag contains directories, you can use the
+# FILE_PATTERNS tag to specify one or more wildcard patterns (like *.cpp and
+# *.h) to filter out the source-files in the directories.
+#
+# Note that for custom extensions or not directly supported extensions you also
+# need to set EXTENSION_MAPPING for the extension otherwise the files are not
+# read by doxygen.
+#
+# Note the list of default checked file patterns might differ from the list of
+# default file extension mappings.
+#
+# If left blank the following patterns are tested:*.c, *.cc, *.cxx, *.cpp,
+# *.c++, *.java, *.ii, *.ixx, *.ipp, *.i++, *.inl, *.idl, *.ddl, *.odl, *.h,
+# *.hh, *.hxx, *.hpp, *.h++, *.cs, *.d, *.php, *.php4, *.php5, *.phtml, *.inc,
+# *.m, *.markdown, *.md, *.mm, *.dox (to be provided as doxygen C comment),
+# *.py, *.pyw, *.f90, *.f95, *.f03, *.f08, *.f18, *.f, *.for, *.vhd, *.vhdl,
+# *.ucf, *.qsf and *.ice.
+
+FILE_PATTERNS          =
+
+# The RECURSIVE tag can be used to specify whether or not subdirectories should
+# be searched for input files as well.
+# The default value is: NO.
+
+RECURSIVE              = NO
+
+# The EXCLUDE tag can be used to specify files and/or directories that should be
+# excluded from the INPUT source files. This way you can easily exclude a
+# subdirectory from a directory tree whose root is specified with the INPUT tag.
+#
+# Note that relative paths are relative to the directory from which doxygen is
+# run.
+
+EXCLUDE                =
+
+# The EXCLUDE_SYMLINKS tag can be used to select whether or not files or
+# directories that are symbolic links (a Unix file system feature) are excluded
+# from the input.
+# The default value is: NO.
+
+EXCLUDE_SYMLINKS       = NO
+
+# If the value of the INPUT tag contains directories, you can use the
+# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude
+# certain files from those directories.
+#
+# Note that the wildcards are matched against the file with absolute path, so to
+# exclude all test directories for example use the pattern */test/*
+
+EXCLUDE_PATTERNS       =
+
+# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names
+# (namespaces, classes, functions, etc.) that should be excluded from the
+# output. The symbol name can be a fully qualified name, a word, or if the
+# wildcard * is used, a substring. Examples: ANamespace, AClass,
+# AClass::ANamespace, ANamespace::*Test
+#
+# Note that the wildcards are matched against the file with absolute path, so to
+# exclude all test directories use the pattern */test/*
+
+EXCLUDE_SYMBOLS        =
+
+# The EXAMPLE_PATH tag can be used to specify one or more files or directories
+# that contain example code fragments that are included (see the \include
+# command).
+
+EXAMPLE_PATH           =
+
+# If the value of the EXAMPLE_PATH tag contains directories, you can use the
+# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp and
+# *.h) to filter out the source-files in the directories. If left blank all
+# files are included.
+
+EXAMPLE_PATTERNS       =
+
+# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be
+# searched for input files to be used with the \include or \dontinclude commands
+# irrespective of the value of the RECURSIVE tag.
+# The default value is: NO.
+
+EXAMPLE_RECURSIVE      = NO
+
+# The IMAGE_PATH tag can be used to specify one or more files or directories
+# that contain images that are to be included in the documentation (see the
+# \image command).
+
+IMAGE_PATH             =
+
+# The INPUT_FILTER tag can be used to specify a program that doxygen should
+# invoke to filter for each input file. Doxygen will invoke the filter program
+# by executing (via popen()) the command:
+#
+# <filter> <input-file>
+#
+# where <filter> is the value of the INPUT_FILTER tag, and <input-file> is the
+# name of an input file. Doxygen will then use the output that the filter
+# program writes to standard output. If FILTER_PATTERNS is specified, this tag
+# will be ignored.
+#
+# Note that the filter must not add or remove lines; it is applied before the
+# code is scanned, but not when the output code is generated. If lines are added
+# or removed, the anchors will not be placed correctly.
+#
+# Note that for custom extensions or not directly supported extensions you also
+# need to set EXTENSION_MAPPING for the extension otherwise the files are not
+# properly processed by doxygen.
+
+INPUT_FILTER           =
+
+# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern
+# basis. Doxygen will compare the file name with each pattern and apply the
+# filter if there is a match. The filters are a list of the form: pattern=filter
+# (like *.cpp=my_cpp_filter). See INPUT_FILTER for further information on how
+# filters are used. If the FILTER_PATTERNS tag is empty or if none of the
+# patterns match the file name, INPUT_FILTER is applied.
+#
+# Note that for custom extensions or not directly supported extensions you also
+# need to set EXTENSION_MAPPING for the extension otherwise the files are not
+# properly processed by doxygen.
+
+FILTER_PATTERNS        =
+
+# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using
+# INPUT_FILTER) will also be used to filter the input files that are used for
+# producing the source files to browse (i.e. when SOURCE_BROWSER is set to YES).
+# The default value is: NO.
+
+FILTER_SOURCE_FILES    = NO
+
+# The FILTER_SOURCE_PATTERNS tag can be used to specify source filters per file
+# pattern. A pattern will override the setting for FILTER_PATTERN (if any) and
+# it is also possible to disable source filtering for a specific pattern using
+# *.ext= (so without naming a filter).
+# This tag requires that the tag FILTER_SOURCE_FILES is set to YES.
+
+FILTER_SOURCE_PATTERNS =
+
+# If the USE_MDFILE_AS_MAINPAGE tag refers to the name of a markdown file that
+# is part of the input, its contents will be placed on the main page
+# (index.html). This can be useful if you have a project on for instance GitHub
+# and want to reuse the introduction page also for the doxygen output.
+
+USE_MDFILE_AS_MAINPAGE =
+
+#---------------------------------------------------------------------------
+# Configuration options related to source browsing
+#---------------------------------------------------------------------------
+
+# If the SOURCE_BROWSER tag is set to YES then a list of source files will be
+# generated. Documented entities will be cross-referenced with these sources.
+#
+# Note: To get rid of all source code in the generated output, make sure that
+# also VERBATIM_HEADERS is set to NO.
+# The default value is: NO.
+
+SOURCE_BROWSER         = NO
+
+# Setting the INLINE_SOURCES tag to YES will include the body of functions,
+# classes and enums directly into the documentation.
+# The default value is: NO.
+
+INLINE_SOURCES         = NO
+
+# Setting the STRIP_CODE_COMMENTS tag to YES will instruct doxygen to hide any
+# special comment blocks from generated source code fragments. Normal C, C++ and
+# Fortran comments will always remain visible.
+# The default value is: YES.
+
+STRIP_CODE_COMMENTS    = YES
+
+# If the REFERENCED_BY_RELATION tag is set to YES then for each documented
+# entity all documented functions referencing it will be listed.
+# The default value is: NO.
+
+REFERENCED_BY_RELATION = NO
+
+# If the REFERENCES_RELATION tag is set to YES then for each documented function
+# all documented entities called/used by that function will be listed.
+# The default value is: NO.
+
+REFERENCES_RELATION    = NO
+
+# If the REFERENCES_LINK_SOURCE tag is set to YES and SOURCE_BROWSER tag is set
+# to YES then the hyperlinks from functions in REFERENCES_RELATION and
+# REFERENCED_BY_RELATION lists will link to the source code. Otherwise they will
+# link to the documentation.
+# The default value is: YES.
+
+REFERENCES_LINK_SOURCE = YES
+
+# If SOURCE_TOOLTIPS is enabled (the default) then hovering a hyperlink in the
+# source code will show a tooltip with additional information such as prototype,
+# brief description and links to the definition and documentation. Since this
+# will make the HTML file larger and loading of large files a bit slower, you
+# can opt to disable this feature.
+# The default value is: YES.
+# This tag requires that the tag SOURCE_BROWSER is set to YES.
+
+SOURCE_TOOLTIPS        = YES
+
+# If the USE_HTAGS tag is set to YES then the references to source code will
+# point to the HTML generated by the htags(1) tool instead of doxygen built-in
+# source browser. The htags tool is part of GNU's global source tagging system
+# (see https://www.gnu.org/software/global/global.html). You will need version
+# 4.8.6 or higher.
+#
+# To use it do the following:
+# - Install the latest version of global
+# - Enable SOURCE_BROWSER and USE_HTAGS in the configuration file
+# - Make sure the INPUT points to the root of the source tree
+# - Run doxygen as normal
+#
+# Doxygen will invoke htags (and that will in turn invoke gtags), so these
+# tools must be available from the command line (i.e. in the search path).
+#
+# The result: instead of the source browser generated by doxygen, the links to
+# source code will now point to the output of htags.
+# The default value is: NO.
+# This tag requires that the tag SOURCE_BROWSER is set to YES.
+
+USE_HTAGS              = NO
+
+# If the VERBATIM_HEADERS tag is set the YES then doxygen will generate a
+# verbatim copy of the header file for each class for which an include is
+# specified. Set to NO to disable this.
+# See also: Section \class.
+# The default value is: YES.
+
+VERBATIM_HEADERS       = YES
+
+#---------------------------------------------------------------------------
+# Configuration options related to the alphabetical class index
+#---------------------------------------------------------------------------
+
+# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index of all
+# compounds will be generated. Enable this if the project contains a lot of
+# classes, structs, unions or interfaces.
+# The default value is: YES.
+
+ALPHABETICAL_INDEX     = YES
+
+# In case all classes in a project start with a common prefix, all classes will
+# be put under the same header in the alphabetical index. The IGNORE_PREFIX tag
+# can be used to specify a prefix (or a list of prefixes) that should be ignored
+# while generating the index headers.
+# This tag requires that the tag ALPHABETICAL_INDEX is set to YES.
+
+IGNORE_PREFIX          =
+
+#---------------------------------------------------------------------------
+# Configuration options related to the HTML output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_HTML tag is set to YES, doxygen will generate HTML output
+# The default value is: YES.
+
+GENERATE_HTML          = NO
+
+# The HTML_OUTPUT tag is used to specify where the HTML docs will be put. If a
+# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of
+# it.
+# The default directory is: html.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+HTML_OUTPUT            = html
+
+# The HTML_FILE_EXTENSION tag can be used to specify the file extension for each
+# generated HTML page (for example: .htm, .php, .asp).
+# The default value is: .html.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+HTML_FILE_EXTENSION    = .html
+
+# The HTML_HEADER tag can be used to specify a user-defined HTML header file for
+# each generated HTML page. If the tag is left blank doxygen will generate a
+# standard header.
+#
+# To get valid HTML the header file that includes any scripts and style sheets
+# that doxygen needs, which is dependent on the configuration options used (e.g.
+# the setting GENERATE_TREEVIEW). It is highly recommended to start with a
+# default header using
+# doxygen -w html new_header.html new_footer.html new_stylesheet.css
+# YourConfigFile
+# and then modify the file new_header.html. See also section "Doxygen usage"
+# for information on how to generate the default header that doxygen normally
+# uses.
+# Note: The header is subject to change so you typically have to regenerate the
+# default header when upgrading to a newer version of doxygen. For a description
+# of the possible markers and block names see the documentation.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+HTML_HEADER            =
+
+# The HTML_FOOTER tag can be used to specify a user-defined HTML footer for each
+# generated HTML page. If the tag is left blank doxygen will generate a standard
+# footer. See HTML_HEADER for more information on how to generate a default
+# footer and what special commands can be used inside the footer. See also
+# section "Doxygen usage" for information on how to generate the default footer
+# that doxygen normally uses.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+HTML_FOOTER            =
+
+# The HTML_STYLESHEET tag can be used to specify a user-defined cascading style
+# sheet that is used by each HTML page. It can be used to fine-tune the look of
+# the HTML output. If left blank doxygen will generate a default style sheet.
+# See also section "Doxygen usage" for information on how to generate the style
+# sheet that doxygen normally uses.
+# Note: It is recommended to use HTML_EXTRA_STYLESHEET instead of this tag, as
+# it is more robust and this tag (HTML_STYLESHEET) will in the future become
+# obsolete.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+HTML_STYLESHEET        =
+
+# The HTML_EXTRA_STYLESHEET tag can be used to specify additional user-defined
+# cascading style sheets that are included after the standard style sheets
+# created by doxygen. Using this option one can overrule certain style aspects.
+# This is preferred over using HTML_STYLESHEET since it does not replace the
+# standard style sheet and is therefore more robust against future updates.
+# Doxygen will copy the style sheet files to the output directory.
+# Note: The order of the extra style sheet files is of importance (e.g. the last
+# style sheet in the list overrules the setting of the previous ones in the
+# list). For an example see the documentation.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+HTML_EXTRA_STYLESHEET  =
+
+# The HTML_EXTRA_FILES tag can be used to specify one or more extra images or
+# other source files which should be copied to the HTML output directory. Note
+# that these files will be copied to the base HTML output directory. Use the
+# $relpath^ marker in the HTML_HEADER and/or HTML_FOOTER files to load these
+# files. In the HTML_STYLESHEET file, use the file name only. Also note that the
+# files will be copied as-is; there are no commands or markers available.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+HTML_EXTRA_FILES       =
+
+# The HTML_COLORSTYLE_HUE tag controls the color of the HTML output. Doxygen
+# will adjust the colors in the style sheet and background images according to
+# this color. Hue is specified as an angle on a colorwheel, see
+# https://en.wikipedia.org/wiki/Hue for more information. For instance the value
+# 0 represents red, 60 is yellow, 120 is green, 180 is cyan, 240 is blue, 300
+# purple, and 360 is red again.
+# Minimum value: 0, maximum value: 359, default value: 220.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+HTML_COLORSTYLE_HUE    = 220
+
+# The HTML_COLORSTYLE_SAT tag controls the purity (or saturation) of the colors
+# in the HTML output. For a value of 0 the output will use grayscales only. A
+# value of 255 will produce the most vivid colors.
+# Minimum value: 0, maximum value: 255, default value: 100.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+HTML_COLORSTYLE_SAT    = 100
+
+# The HTML_COLORSTYLE_GAMMA tag controls the gamma correction applied to the
+# luminance component of the colors in the HTML output. Values below 100
+# gradually make the output lighter, whereas values above 100 make the output
+# darker. The value divided by 100 is the actual gamma applied, so 80 represents
+# a gamma of 0.8, The value 220 represents a gamma of 2.2, and 100 does not
+# change the gamma.
+# Minimum value: 40, maximum value: 240, default value: 80.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+HTML_COLORSTYLE_GAMMA  = 80
+
+# If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML
+# page will contain the date and time when the page was generated. Setting this
+# to YES can help to show when doxygen was last run and thus if the
+# documentation is up to date.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+HTML_TIMESTAMP         = NO
+
+# If the HTML_DYNAMIC_MENUS tag is set to YES then the generated HTML
+# documentation will contain a main index with vertical navigation menus that
+# are dynamically created via JavaScript. If disabled, the navigation index will
+# consists of multiple levels of tabs that are statically embedded in every HTML
+# page. Disable this option to support browsers that do not have JavaScript,
+# like the Qt help browser.
+# The default value is: YES.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+HTML_DYNAMIC_MENUS     = YES
+
+# If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML
+# documentation will contain sections that can be hidden and shown after the
+# page has loaded.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+HTML_DYNAMIC_SECTIONS  = NO
+
+# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries
+# shown in the various tree structured indices initially; the user can expand
+# and collapse entries dynamically later on. Doxygen will expand the tree to
+# such a level that at most the specified number of entries are visible (unless
+# a fully collapsed tree already exceeds this amount). So setting the number of
+# entries 1 will produce a full collapsed tree by default. 0 is a special value
+# representing an infinite number of entries and will result in a full expanded
+# tree by default.
+# Minimum value: 0, maximum value: 9999, default value: 100.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+HTML_INDEX_NUM_ENTRIES = 100
+
+# If the GENERATE_DOCSET tag is set to YES, additional index files will be
+# generated that can be used as input for Apple's Xcode 3 integrated development
+# environment (see:
+# https://developer.apple.com/xcode/), introduced with OSX 10.5 (Leopard). To
+# create a documentation set, doxygen will generate a Makefile in the HTML
+# output directory. Running make will produce the docset in that directory and
+# running make install will install the docset in
+# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at
+# startup. See https://developer.apple.com/library/archive/featuredarticles/Doxy
+# genXcode/_index.html for more information.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+GENERATE_DOCSET        = NO
+
+# This tag determines the name of the docset feed. A documentation feed provides
+# an umbrella under which multiple documentation sets from a single provider
+# (such as a company or product suite) can be grouped.
+# The default value is: Doxygen generated docs.
+# This tag requires that the tag GENERATE_DOCSET is set to YES.
+
+DOCSET_FEEDNAME        = "Doxygen generated docs"
+
+# This tag specifies a string that should uniquely identify the documentation
+# set bundle. This should be a reverse domain-name style string, e.g.
+# com.mycompany.MyDocSet. Doxygen will append .docset to the name.
+# The default value is: org.doxygen.Project.
+# This tag requires that the tag GENERATE_DOCSET is set to YES.
+
+DOCSET_BUNDLE_ID       = org.doxygen.Project
+
+# The DOCSET_PUBLISHER_ID tag specifies a string that should uniquely identify
+# the documentation publisher. This should be a reverse domain-name style
+# string, e.g. com.mycompany.MyDocSet.documentation.
+# The default value is: org.doxygen.Publisher.
+# This tag requires that the tag GENERATE_DOCSET is set to YES.
+
+DOCSET_PUBLISHER_ID    = org.doxygen.Publisher
+
+# The DOCSET_PUBLISHER_NAME tag identifies the documentation publisher.
+# The default value is: Publisher.
+# This tag requires that the tag GENERATE_DOCSET is set to YES.
+
+DOCSET_PUBLISHER_NAME  = Publisher
+
+# If the GENERATE_HTMLHELP tag is set to YES then doxygen generates three
+# additional HTML index files: index.hhp, index.hhc, and index.hhk. The
+# index.hhp is a project file that can be read by Microsoft's HTML Help Workshop
+# (see:
+# https://www.microsoft.com/en-us/download/details.aspx?id=21138) on Windows.
+#
+# The HTML Help Workshop contains a compiler that can convert all HTML output
+# generated by doxygen into a single compiled HTML file (.chm). Compiled HTML
+# files are now used as the Windows 98 help format, and will replace the old
+# Windows help format (.hlp) on all Windows platforms in the future. Compressed
+# HTML files also contain an index, a table of contents, and you can search for
+# words in the documentation. The HTML workshop also contains a viewer for
+# compressed HTML files.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+GENERATE_HTMLHELP      = NO
+
+# The CHM_FILE tag can be used to specify the file name of the resulting .chm
+# file. You can add a path in front of the file if the result should not be
+# written to the html output directory.
+# This tag requires that the tag GENERATE_HTMLHELP is set to YES.
+
+CHM_FILE               =
+
+# The HHC_LOCATION tag can be used to specify the location (absolute path
+# including file name) of the HTML help compiler (hhc.exe). If non-empty,
+# doxygen will try to run the HTML help compiler on the generated index.hhp.
+# The file has to be specified with full path.
+# This tag requires that the tag GENERATE_HTMLHELP is set to YES.
+
+HHC_LOCATION           =
+
+# The GENERATE_CHI flag controls if a separate .chi index file is generated
+# (YES) or that it should be included in the main .chm file (NO).
+# The default value is: NO.
+# This tag requires that the tag GENERATE_HTMLHELP is set to YES.
+
+GENERATE_CHI           = NO
+
+# The CHM_INDEX_ENCODING is used to encode HtmlHelp index (hhk), content (hhc)
+# and project file content.
+# This tag requires that the tag GENERATE_HTMLHELP is set to YES.
+
+CHM_INDEX_ENCODING     =
+
+# The BINARY_TOC flag controls whether a binary table of contents is generated
+# (YES) or a normal table of contents (NO) in the .chm file. Furthermore it
+# enables the Previous and Next buttons.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_HTMLHELP is set to YES.
+
+BINARY_TOC             = NO
+
+# The TOC_EXPAND flag can be set to YES to add extra items for group members to
+# the table of contents of the HTML help documentation and to the tree view.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_HTMLHELP is set to YES.
+
+TOC_EXPAND             = NO
+
+# If the GENERATE_QHP tag is set to YES and both QHP_NAMESPACE and
+# QHP_VIRTUAL_FOLDER are set, an additional index file will be generated that
+# can be used as input for Qt's qhelpgenerator to generate a Qt Compressed Help
+# (.qch) of the generated HTML documentation.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+GENERATE_QHP           = NO
+
+# If the QHG_LOCATION tag is specified, the QCH_FILE tag can be used to specify
+# the file name of the resulting .qch file. The path specified is relative to
+# the HTML output folder.
+# This tag requires that the tag GENERATE_QHP is set to YES.
+
+QCH_FILE               =
+
+# The QHP_NAMESPACE tag specifies the namespace to use when generating Qt Help
+# Project output. For more information please see Qt Help Project / Namespace
+# (see:
+# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#namespace).
+# The default value is: org.doxygen.Project.
+# This tag requires that the tag GENERATE_QHP is set to YES.
+
+QHP_NAMESPACE          = org.doxygen.Project
+
+# The QHP_VIRTUAL_FOLDER tag specifies the namespace to use when generating Qt
+# Help Project output. For more information please see Qt Help Project / Virtual
+# Folders (see:
+# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#virtual-folders).
+# The default value is: doc.
+# This tag requires that the tag GENERATE_QHP is set to YES.
+
+QHP_VIRTUAL_FOLDER     = doc
+
+# If the QHP_CUST_FILTER_NAME tag is set, it specifies the name of a custom
+# filter to add. For more information please see Qt Help Project / Custom
+# Filters (see:
+# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#custom-filters).
+# This tag requires that the tag GENERATE_QHP is set to YES.
+
+QHP_CUST_FILTER_NAME   =
+
+# The QHP_CUST_FILTER_ATTRS tag specifies the list of the attributes of the
+# custom filter to add. For more information please see Qt Help Project / Custom
+# Filters (see:
+# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#custom-filters).
+# This tag requires that the tag GENERATE_QHP is set to YES.
+
+QHP_CUST_FILTER_ATTRS  =
+
+# The QHP_SECT_FILTER_ATTRS tag specifies the list of the attributes this
+# project's filter section matches. Qt Help Project / Filter Attributes (see:
+# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#filter-attributes).
+# This tag requires that the tag GENERATE_QHP is set to YES.
+
+QHP_SECT_FILTER_ATTRS  =
+
+# The QHG_LOCATION tag can be used to specify the location (absolute path
+# including file name) of Qt's qhelpgenerator. If non-empty doxygen will try to
+# run qhelpgenerator on the generated .qhp file.
+# This tag requires that the tag GENERATE_QHP is set to YES.
+
+QHG_LOCATION           =
+
+# If the GENERATE_ECLIPSEHELP tag is set to YES, additional index files will be
+# generated, together with the HTML files, they form an Eclipse help plugin. To
+# install this plugin and make it available under the help contents menu in
+# Eclipse, the contents of the directory containing the HTML and XML files needs
+# to be copied into the plugins directory of eclipse. The name of the directory
+# within the plugins directory should be the same as the ECLIPSE_DOC_ID value.
+# After copying Eclipse needs to be restarted before the help appears.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+GENERATE_ECLIPSEHELP   = NO
+
+# A unique identifier for the Eclipse help plugin. When installing the plugin
+# the directory name containing the HTML and XML files should also have this
+# name. Each documentation set should have its own identifier.
+# The default value is: org.doxygen.Project.
+# This tag requires that the tag GENERATE_ECLIPSEHELP is set to YES.
+
+ECLIPSE_DOC_ID         = org.doxygen.Project
+
+# If you want full control over the layout of the generated HTML pages it might
+# be necessary to disable the index and replace it with your own. The
+# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top
+# of each HTML page. A value of NO enables the index and the value YES disables
+# it. Since the tabs in the index contain the same information as the navigation
+# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+DISABLE_INDEX          = NO
+
+# The GENERATE_TREEVIEW tag is used to specify whether a tree-like index
+# structure should be generated to display hierarchical information. If the tag
+# value is set to YES, a side panel will be generated containing a tree-like
+# index structure (just like the one that is generated for HTML Help). For this
+# to work a browser that supports JavaScript, DHTML, CSS and frames is required
+# (i.e. any modern browser). Windows users are probably better off using the
+# HTML help feature. Via custom style sheets (see HTML_EXTRA_STYLESHEET) one can
+# further fine-tune the look of the index. As an example, the default style
+# sheet generated by doxygen has an example that shows how to put an image at
+# the root of the tree instead of the PROJECT_NAME. Since the tree basically has
+# the same information as the tab index, you could consider setting
+# DISABLE_INDEX to YES when enabling this option.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+GENERATE_TREEVIEW      = NO
+
+# The ENUM_VALUES_PER_LINE tag can be used to set the number of enum values that
+# doxygen will group on one line in the generated HTML documentation.
+#
+# Note that a value of 0 will completely suppress the enum values from appearing
+# in the overview section.
+# Minimum value: 0, maximum value: 20, default value: 4.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+ENUM_VALUES_PER_LINE   = 4
+
+# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be used
+# to set the initial width (in pixels) of the frame in which the tree is shown.
+# Minimum value: 0, maximum value: 1500, default value: 250.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+TREEVIEW_WIDTH         = 250
+
+# If the EXT_LINKS_IN_WINDOW option is set to YES, doxygen will open links to
+# external symbols imported via tag files in a separate window.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+EXT_LINKS_IN_WINDOW    = NO
+
+# If the HTML_FORMULA_FORMAT option is set to svg, doxygen will use the pdf2svg
+# tool (see https://github.com/dawbarton/pdf2svg) or inkscape (see
+# https://inkscape.org) to generate formulas as SVG images instead of PNGs for
+# the HTML output. These images will generally look nicer at scaled resolutions.
+# Possible values are: png (the default) and svg (looks nicer but requires the
+# pdf2svg or inkscape tool).
+# The default value is: png.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+HTML_FORMULA_FORMAT    = png
+
+# Use this tag to change the font size of LaTeX formulas included as images in
+# the HTML documentation. When you change the font size after a successful
+# doxygen run you need to manually remove any form_*.png images from the HTML
+# output directory to force them to be regenerated.
+# Minimum value: 8, maximum value: 50, default value: 10.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+FORMULA_FONTSIZE       = 10
+
+# Use the FORMULA_TRANSPARENT tag to determine whether or not the images
+# generated for formulas are transparent PNGs. Transparent PNGs are not
+# supported properly for IE 6.0, but are supported on all modern browsers.
+#
+# Note that when changing this option you need to delete any form_*.png files in
+# the HTML output directory before the changes have effect.
+# The default value is: YES.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+FORMULA_TRANSPARENT    = YES
+
+# The FORMULA_MACROFILE can contain LaTeX \newcommand and \renewcommand commands
+# to create new LaTeX commands to be used in formulas as building blocks. See
+# the section "Including formulas" for details.
+
+FORMULA_MACROFILE      =
+
+# Enable the USE_MATHJAX option to render LaTeX formulas using MathJax (see
+# https://www.mathjax.org) which uses client side JavaScript for the rendering
+# instead of using pre-rendered bitmaps. Use this if you do not have LaTeX
+# installed or if you want to formulas look prettier in the HTML output. When
+# enabled you may also need to install MathJax separately and configure the path
+# to it using the MATHJAX_RELPATH option.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+USE_MATHJAX            = NO
+
+# When MathJax is enabled you can set the default output format to be used for
+# the MathJax output. See the MathJax site (see:
+# http://docs.mathjax.org/en/v2.7-latest/output.html) for more details.
+# Possible values are: HTML-CSS (which is slower, but has the best
+# compatibility), NativeMML (i.e. MathML) and SVG.
+# The default value is: HTML-CSS.
+# This tag requires that the tag USE_MATHJAX is set to YES.
+
+MATHJAX_FORMAT         = HTML-CSS
+
+# When MathJax is enabled you need to specify the location relative to the HTML
+# output directory using the MATHJAX_RELPATH option. The destination directory
+# should contain the MathJax.js script. For instance, if the mathjax directory
+# is located at the same level as the HTML output directory, then
+# MATHJAX_RELPATH should be ../mathjax. The default value points to the MathJax
+# Content Delivery Network so you can quickly see the result without installing
+# MathJax. However, it is strongly recommended to install a local copy of
+# MathJax from https://www.mathjax.org before deployment.
+# The default value is: https://cdn.jsdelivr.net/npm/mathjax@2.
+# This tag requires that the tag USE_MATHJAX is set to YES.
+
+MATHJAX_RELPATH        = http://cdn.mathjax.org/mathjax/latest
+
+# The MATHJAX_EXTENSIONS tag can be used to specify one or more MathJax
+# extension names that should be enabled during MathJax rendering. For example
+# MATHJAX_EXTENSIONS = TeX/AMSmath TeX/AMSsymbols
+# This tag requires that the tag USE_MATHJAX is set to YES.
+
+MATHJAX_EXTENSIONS     =
+
+# The MATHJAX_CODEFILE tag can be used to specify a file with javascript pieces
+# of code that will be used on startup of the MathJax code. See the MathJax site
+# (see:
+# http://docs.mathjax.org/en/v2.7-latest/output.html) for more details. For an
+# example see the documentation.
+# This tag requires that the tag USE_MATHJAX is set to YES.
+
+MATHJAX_CODEFILE       =
+
+# When the SEARCHENGINE tag is enabled doxygen will generate a search box for
+# the HTML output. The underlying search engine uses javascript and DHTML and
+# should work on any modern browser. Note that when using HTML help
+# (GENERATE_HTMLHELP), Qt help (GENERATE_QHP), or docsets (GENERATE_DOCSET)
+# there is already a search function so this one should typically be disabled.
+# For large projects the javascript based search engine can be slow, then
+# enabling SERVER_BASED_SEARCH may provide a better solution. It is possible to
+# search using the keyboard; to jump to the search box use <access key> + S
+# (what the <access key> is depends on the OS and browser, but it is typically
+# <CTRL>, <ALT>/<option>, or both). Inside the search box use the <cursor down
+# key> to jump into the search results window, the results can be navigated
+# using the <cursor keys>. Press <Enter> to select an item or <escape> to cancel
+# the search. The filter options can be selected when the cursor is inside the
+# search box by pressing <Shift>+<cursor down>. Also here use the <cursor keys>
+# to select a filter and <Enter> or <escape> to activate or cancel the filter
+# option.
+# The default value is: YES.
+# This tag requires that the tag GENERATE_HTML is set to YES.
+
+SEARCHENGINE           = YES
+
+# When the SERVER_BASED_SEARCH tag is enabled the search engine will be
+# implemented using a web server instead of a web client using JavaScript. There
+# are two flavors of web server based searching depending on the EXTERNAL_SEARCH
+# setting. When disabled, doxygen will generate a PHP script for searching and
+# an index file used by the script. When EXTERNAL_SEARCH is enabled the indexing
+# and searching needs to be provided by external tools. See the section
+# "External Indexing and Searching" for details.
+# The default value is: NO.
+# This tag requires that the tag SEARCHENGINE is set to YES.
+
+SERVER_BASED_SEARCH    = NO
+
+# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP
+# script for searching. Instead the search results are written to an XML file
+# which needs to be processed by an external indexer. Doxygen will invoke an
+# external search engine pointed to by the SEARCHENGINE_URL option to obtain the
+# search results.
+#
+# Doxygen ships with an example indexer (doxyindexer) and search engine
+# (doxysearch.cgi) which are based on the open source search engine library
+# Xapian (see:
+# https://xapian.org/).
+#
+# See the section "External Indexing and Searching" for details.
+# The default value is: NO.
+# This tag requires that the tag SEARCHENGINE is set to YES.
+
+EXTERNAL_SEARCH        = NO
+
+# The SEARCHENGINE_URL should point to a search engine hosted by a web server
+# which will return the search results when EXTERNAL_SEARCH is enabled.
+#
+# Doxygen ships with an example indexer (doxyindexer) and search engine
+# (doxysearch.cgi) which are based on the open source search engine library
+# Xapian (see:
+# https://xapian.org/). See the section "External Indexing and Searching" for
+# details.
+# This tag requires that the tag SEARCHENGINE is set to YES.
+
+SEARCHENGINE_URL       =
+
+# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the unindexed
+# search data is written to a file for indexing by an external tool. With the
+# SEARCHDATA_FILE tag the name of this file can be specified.
+# The default file is: searchdata.xml.
+# This tag requires that the tag SEARCHENGINE is set to YES.
+
+SEARCHDATA_FILE        = searchdata.xml
+
+# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the
+# EXTERNAL_SEARCH_ID tag can be used as an identifier for the project. This is
+# useful in combination with EXTRA_SEARCH_MAPPINGS to search through multiple
+# projects and redirect the results back to the right project.
+# This tag requires that the tag SEARCHENGINE is set to YES.
+
+EXTERNAL_SEARCH_ID     =
+
+# The EXTRA_SEARCH_MAPPINGS tag can be used to enable searching through doxygen
+# projects other than the one defined by this configuration file, but that are
+# all added to the same external search index. Each project needs to have a
+# unique id set via EXTERNAL_SEARCH_ID. The search mapping then maps the id of
+# to a relative location where the documentation can be found. The format is:
+# EXTRA_SEARCH_MAPPINGS = tagname1=loc1 tagname2=loc2 ...
+# This tag requires that the tag SEARCHENGINE is set to YES.
+
+EXTRA_SEARCH_MAPPINGS  =
+
+#---------------------------------------------------------------------------
+# Configuration options related to the LaTeX output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_LATEX tag is set to YES, doxygen will generate LaTeX output.
+# The default value is: YES.
+
+GENERATE_LATEX         = NO
+
+# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put. If a
+# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of
+# it.
+# The default directory is: latex.
+# This tag requires that the tag GENERATE_LATEX is set to YES.
+
+LATEX_OUTPUT           = latex
+
+# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be
+# invoked.
+#
+# Note that when not enabling USE_PDFLATEX the default is latex when enabling
+# USE_PDFLATEX the default is pdflatex and when in the later case latex is
+# chosen this is overwritten by pdflatex. For specific output languages the
+# default can have been set differently, this depends on the implementation of
+# the output language.
+# This tag requires that the tag GENERATE_LATEX is set to YES.
+
+LATEX_CMD_NAME         = latex
+
+# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to generate
+# index for LaTeX.
+# Note: This tag is used in the Makefile / make.bat.
+# See also: LATEX_MAKEINDEX_CMD for the part in the generated output file
+# (.tex).
+# The default file is: makeindex.
+# This tag requires that the tag GENERATE_LATEX is set to YES.
+
+MAKEINDEX_CMD_NAME     = makeindex
+
+# The LATEX_MAKEINDEX_CMD tag can be used to specify the command name to
+# generate index for LaTeX. In case there is no backslash (\) as first character
+# it will be automatically added in the LaTeX code.
+# Note: This tag is used in the generated output file (.tex).
+# See also: MAKEINDEX_CMD_NAME for the part in the Makefile / make.bat.
+# The default value is: makeindex.
+# This tag requires that the tag GENERATE_LATEX is set to YES.
+
+LATEX_MAKEINDEX_CMD    = makeindex
+
+# If the COMPACT_LATEX tag is set to YES, doxygen generates more compact LaTeX
+# documents. This may be useful for small projects and may help to save some
+# trees in general.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_LATEX is set to YES.
+
+COMPACT_LATEX          = NO
+
+# The PAPER_TYPE tag can be used to set the paper type that is used by the
+# printer.
+# Possible values are: a4 (210 x 297 mm), letter (8.5 x 11 inches), legal (8.5 x
+# 14 inches) and executive (7.25 x 10.5 inches).
+# The default value is: a4.
+# This tag requires that the tag GENERATE_LATEX is set to YES.
+
+PAPER_TYPE             = a4
+
+# The EXTRA_PACKAGES tag can be used to specify one or more LaTeX package names
+# that should be included in the LaTeX output. The package can be specified just
+# by its name or with the correct syntax as to be used with the LaTeX
+# \usepackage command. To get the times font for instance you can specify :
+# EXTRA_PACKAGES=times or EXTRA_PACKAGES={times}
+# To use the option intlimits with the amsmath package you can specify:
+# EXTRA_PACKAGES=[intlimits]{amsmath}
+# If left blank no extra packages will be included.
+# This tag requires that the tag GENERATE_LATEX is set to YES.
+
+EXTRA_PACKAGES         =
+
+# The LATEX_HEADER tag can be used to specify a personal LaTeX header for the
+# generated LaTeX document. The header should contain everything until the first
+# chapter. If it is left blank doxygen will generate a standard header. See
+# section "Doxygen usage" for information on how to let doxygen write the
+# default header to a separate file.
+#
+# Note: Only use a user-defined header if you know what you are doing! The
+# following commands have a special meaning inside the header: $title,
+# $datetime, $date, $doxygenversion, $projectname, $projectnumber,
+# $projectbrief, $projectlogo. Doxygen will replace $title with the empty
+# string, for the replacement values of the other commands the user is referred
+# to HTML_HEADER.
+# This tag requires that the tag GENERATE_LATEX is set to YES.
+
+LATEX_HEADER           =
+
+# The LATEX_FOOTER tag can be used to specify a personal LaTeX footer for the
+# generated LaTeX document. The footer should contain everything after the last
+# chapter. If it is left blank doxygen will generate a standard footer. See
+# LATEX_HEADER for more information on how to generate a default footer and what
+# special commands can be used inside the footer.
+#
+# Note: Only use a user-defined footer if you know what you are doing!
+# This tag requires that the tag GENERATE_LATEX is set to YES.
+
+LATEX_FOOTER           =
+
+# The LATEX_EXTRA_STYLESHEET tag can be used to specify additional user-defined
+# LaTeX style sheets that are included after the standard style sheets created
+# by doxygen. Using this option one can overrule certain style aspects. Doxygen
+# will copy the style sheet files to the output directory.
+# Note: The order of the extra style sheet files is of importance (e.g. the last
+# style sheet in the list overrules the setting of the previous ones in the
+# list).
+# This tag requires that the tag GENERATE_LATEX is set to YES.
+
+LATEX_EXTRA_STYLESHEET =
+
+# The LATEX_EXTRA_FILES tag can be used to specify one or more extra images or
+# other source files which should be copied to the LATEX_OUTPUT output
+# directory. Note that the files will be copied as-is; there are no commands or
+# markers available.
+# This tag requires that the tag GENERATE_LATEX is set to YES.
+
+LATEX_EXTRA_FILES      =
+
+# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated is
+# prepared for conversion to PDF (using ps2pdf or pdflatex). The PDF file will
+# contain links (just like the HTML output) instead of page references. This
+# makes the output suitable for online browsing using a PDF viewer.
+# The default value is: YES.
+# This tag requires that the tag GENERATE_LATEX is set to YES.
+
+PDF_HYPERLINKS         = YES
+
+# If the USE_PDFLATEX tag is set to YES, doxygen will use the engine as
+# specified with LATEX_CMD_NAME to generate the PDF file directly from the LaTeX
+# files. Set this option to YES, to get a higher quality PDF documentation.
+#
+# See also section LATEX_CMD_NAME for selecting the engine.
+# The default value is: YES.
+# This tag requires that the tag GENERATE_LATEX is set to YES.
+
+USE_PDFLATEX           = YES
+
+# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \batchmode
+# command to the generated LaTeX files. This will instruct LaTeX to keep running
+# if errors occur, instead of asking the user for help. This option is also used
+# when generating formulas in HTML.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_LATEX is set to YES.
+
+LATEX_BATCHMODE        = NO
+
+# If the LATEX_HIDE_INDICES tag is set to YES then doxygen will not include the
+# index chapters (such as File Index, Compound Index, etc.) in the output.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_LATEX is set to YES.
+
+LATEX_HIDE_INDICES     = NO
+
+# If the LATEX_SOURCE_CODE tag is set to YES then doxygen will include source
+# code with syntax highlighting in the LaTeX output.
+#
+# Note that which sources are shown also depends on other settings such as
+# SOURCE_BROWSER.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_LATEX is set to YES.
+
+LATEX_SOURCE_CODE      = NO
+
+# The LATEX_BIB_STYLE tag can be used to specify the style to use for the
+# bibliography, e.g. plainnat, or ieeetr. See
+# https://en.wikipedia.org/wiki/BibTeX and \cite for more info.
+# The default value is: plain.
+# This tag requires that the tag GENERATE_LATEX is set to YES.
+
+LATEX_BIB_STYLE        = plain
+
+# If the LATEX_TIMESTAMP tag is set to YES then the footer of each generated
+# page will contain the date and time when the page was generated. Setting this
+# to NO can help when comparing the output of multiple runs.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_LATEX is set to YES.
+
+LATEX_TIMESTAMP        = NO
+
+# The LATEX_EMOJI_DIRECTORY tag is used to specify the (relative or absolute)
+# path from which the emoji images will be read. If a relative path is entered,
+# it will be relative to the LATEX_OUTPUT directory. If left blank the
+# LATEX_OUTPUT directory will be used.
+# This tag requires that the tag GENERATE_LATEX is set to YES.
+
+LATEX_EMOJI_DIRECTORY  =
+
+#---------------------------------------------------------------------------
+# Configuration options related to the RTF output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_RTF tag is set to YES, doxygen will generate RTF output. The
+# RTF output is optimized for Word 97 and may not look too pretty with other RTF
+# readers/editors.
+# The default value is: NO.
+
+GENERATE_RTF           = NO
+
+# The RTF_OUTPUT tag is used to specify where the RTF docs will be put. If a
+# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of
+# it.
+# The default directory is: rtf.
+# This tag requires that the tag GENERATE_RTF is set to YES.
+
+RTF_OUTPUT             = rtf
+
+# If the COMPACT_RTF tag is set to YES, doxygen generates more compact RTF
+# documents. This may be useful for small projects and may help to save some
+# trees in general.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_RTF is set to YES.
+
+COMPACT_RTF            = NO
+
+# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated will
+# contain hyperlink fields. The RTF file will contain links (just like the HTML
+# output) instead of page references. This makes the output suitable for online
+# browsing using Word or some other Word compatible readers that support those
+# fields.
+#
+# Note: WordPad (write) and others do not support links.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_RTF is set to YES.
+
+RTF_HYPERLINKS         = NO
+
+# Load stylesheet definitions from file. Syntax is similar to doxygen's
+# configuration file, i.e. a series of assignments. You only have to provide
+# replacements, missing definitions are set to their default value.
+#
+# See also section "Doxygen usage" for information on how to generate the
+# default style sheet that doxygen normally uses.
+# This tag requires that the tag GENERATE_RTF is set to YES.
+
+RTF_STYLESHEET_FILE    =
+
+# Set optional variables used in the generation of an RTF document. Syntax is
+# similar to doxygen's configuration file. A template extensions file can be
+# generated using doxygen -e rtf extensionFile.
+# This tag requires that the tag GENERATE_RTF is set to YES.
+
+RTF_EXTENSIONS_FILE    =
+
+# If the RTF_SOURCE_CODE tag is set to YES then doxygen will include source code
+# with syntax highlighting in the RTF output.
+#
+# Note that which sources are shown also depends on other settings such as
+# SOURCE_BROWSER.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_RTF is set to YES.
+
+RTF_SOURCE_CODE        = NO
+
+#---------------------------------------------------------------------------
+# Configuration options related to the man page output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_MAN tag is set to YES, doxygen will generate man pages for
+# classes and files.
+# The default value is: NO.
+
+GENERATE_MAN           = NO
+
+# The MAN_OUTPUT tag is used to specify where the man pages will be put. If a
+# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of
+# it. A directory man3 will be created inside the directory specified by
+# MAN_OUTPUT.
+# The default directory is: man.
+# This tag requires that the tag GENERATE_MAN is set to YES.
+
+MAN_OUTPUT             = man
+
+# The MAN_EXTENSION tag determines the extension that is added to the generated
+# man pages. In case the manual section does not start with a number, the number
+# 3 is prepended. The dot (.) at the beginning of the MAN_EXTENSION tag is
+# optional.
+# The default value is: .3.
+# This tag requires that the tag GENERATE_MAN is set to YES.
+
+MAN_EXTENSION          = .3
+
+# The MAN_SUBDIR tag determines the name of the directory created within
+# MAN_OUTPUT in which the man pages are placed. If defaults to man followed by
+# MAN_EXTENSION with the initial . removed.
+# This tag requires that the tag GENERATE_MAN is set to YES.
+
+MAN_SUBDIR             =
+
+# If the MAN_LINKS tag is set to YES and doxygen generates man output, then it
+# will generate one additional man file for each entity documented in the real
+# man page(s). These additional files only source the real man page, but without
+# them the man command would be unable to find the correct page.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_MAN is set to YES.
+
+MAN_LINKS              = NO
+
+#---------------------------------------------------------------------------
+# Configuration options related to the XML output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_XML tag is set to YES, doxygen will generate an XML file that
+# captures the structure of the code including all documentation.
+# The default value is: NO.
+
+GENERATE_XML           = YES
+
+# The XML_OUTPUT tag is used to specify where the XML pages will be put. If a
+# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of
+# it.
+# The default directory is: xml.
+# This tag requires that the tag GENERATE_XML is set to YES.
+
+XML_OUTPUT             = xml
+
+# If the XML_PROGRAMLISTING tag is set to YES, doxygen will dump the program
+# listings (including syntax highlighting and cross-referencing information) to
+# the XML output. Note that enabling this will significantly increase the size
+# of the XML output.
+# The default value is: YES.
+# This tag requires that the tag GENERATE_XML is set to YES.
+
+XML_PROGRAMLISTING     = YES
+
+# If the XML_NS_MEMB_FILE_SCOPE tag is set to YES, doxygen will include
+# namespace members in file scope as well, matching the HTML output.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_XML is set to YES.
+
+XML_NS_MEMB_FILE_SCOPE = NO
+
+#---------------------------------------------------------------------------
+# Configuration options related to the DOCBOOK output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_DOCBOOK tag is set to YES, doxygen will generate Docbook files
+# that can be used to generate PDF.
+# The default value is: NO.
+
+GENERATE_DOCBOOK       = NO
+
+# The DOCBOOK_OUTPUT tag is used to specify where the Docbook pages will be put.
+# If a relative path is entered the value of OUTPUT_DIRECTORY will be put in
+# front of it.
+# The default directory is: docbook.
+# This tag requires that the tag GENERATE_DOCBOOK is set to YES.
+
+DOCBOOK_OUTPUT         = docbook
+
+# If the DOCBOOK_PROGRAMLISTING tag is set to YES, doxygen will include the
+# program listings (including syntax highlighting and cross-referencing
+# information) to the DOCBOOK output. Note that enabling this will significantly
+# increase the size of the DOCBOOK output.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_DOCBOOK is set to YES.
+
+DOCBOOK_PROGRAMLISTING = NO
+
+#---------------------------------------------------------------------------
+# Configuration options for the AutoGen Definitions output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_AUTOGEN_DEF tag is set to YES, doxygen will generate an
+# AutoGen Definitions (see http://autogen.sourceforge.net/) file that captures
+# the structure of the code including all documentation. Note that this feature
+# is still experimental and incomplete at the moment.
+# The default value is: NO.
+
+GENERATE_AUTOGEN_DEF   = NO
+
+#---------------------------------------------------------------------------
+# Configuration options related to the Perl module output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_PERLMOD tag is set to YES, doxygen will generate a Perl module
+# file that captures the structure of the code including all documentation.
+#
+# Note that this feature is still experimental and incomplete at the moment.
+# The default value is: NO.
+
+GENERATE_PERLMOD       = NO
+
+# If the PERLMOD_LATEX tag is set to YES, doxygen will generate the necessary
+# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI
+# output from the Perl module output.
+# The default value is: NO.
+# This tag requires that the tag GENERATE_PERLMOD is set to YES.
+
+PERLMOD_LATEX          = NO
+
+# If the PERLMOD_PRETTY tag is set to YES, the Perl module output will be nicely
+# formatted so it can be parsed by a human reader. This is useful if you want to
+# understand what is going on. On the other hand, if this tag is set to NO, the
+# size of the Perl module output will be much smaller and Perl will parse it
+# just the same.
+# The default value is: YES.
+# This tag requires that the tag GENERATE_PERLMOD is set to YES.
+
+PERLMOD_PRETTY         = YES
+
+# The names of the make variables in the generated doxyrules.make file are
+# prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX. This is useful
+# so different doxyrules.make files included by the same Makefile don't
+# overwrite each other's variables.
+# This tag requires that the tag GENERATE_PERLMOD is set to YES.
+
+PERLMOD_MAKEVAR_PREFIX =
+
+#---------------------------------------------------------------------------
+# Configuration options related to the preprocessor
+#---------------------------------------------------------------------------
+
+# If the ENABLE_PREPROCESSING tag is set to YES, doxygen will evaluate all
+# C-preprocessor directives found in the sources and include files.
+# The default value is: YES.
+
+ENABLE_PREPROCESSING   = YES
+
+# If the MACRO_EXPANSION tag is set to YES, doxygen will expand all macro names
+# in the source code. If set to NO, only conditional compilation will be
+# performed. Macro expansion can be done in a controlled way by setting
+# EXPAND_ONLY_PREDEF to YES.
+# The default value is: NO.
+# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.
+
+MACRO_EXPANSION        = NO
+
+# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES then
+# the macro expansion is limited to the macros specified with the PREDEFINED and
+# EXPAND_AS_DEFINED tags.
+# The default value is: NO.
+# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.
+
+EXPAND_ONLY_PREDEF     = NO
+
+# If the SEARCH_INCLUDES tag is set to YES, the include files in the
+# INCLUDE_PATH will be searched if a #include is found.
+# The default value is: YES.
+# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.
+
+SEARCH_INCLUDES        = YES
+
+# The INCLUDE_PATH tag can be used to specify one or more directories that
+# contain include files that are not input files but should be processed by the
+# preprocessor.
+# This tag requires that the tag SEARCH_INCLUDES is set to YES.
+
+INCLUDE_PATH           =
+
+# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard
+# patterns (like *.h and *.hpp) to filter out the header-files in the
+# directories. If left blank, the patterns specified with FILE_PATTERNS will be
+# used.
+# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.
+
+INCLUDE_FILE_PATTERNS  =
+
+# The PREDEFINED tag can be used to specify one or more macro names that are
+# defined before the preprocessor is started (similar to the -D option of e.g.
+# gcc). The argument of the tag is a list of macros of the form: name or
+# name=definition (no spaces). If the definition and the "=" are omitted, "=1"
+# is assumed. To prevent a macro definition from being undefined via #undef or
+# recursively expanded use the := operator instead of the = operator.
+# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.
+
+PREDEFINED             =
+
+# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then this
+# tag can be used to specify a list of macro names that should be expanded. The
+# macro definition that is found in the sources will be used. Use the PREDEFINED
+# tag if you want to use a different macro definition that overrules the
+# definition found in the source code.
+# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.
+
+EXPAND_AS_DEFINED      =
+
+# If the SKIP_FUNCTION_MACROS tag is set to YES then doxygen's preprocessor will
+# remove all references to function-like macros that are alone on a line, have
+# an all uppercase name, and do not end with a semicolon. Such function macros
+# are typically used for boiler-plate code, and will confuse the parser if not
+# removed.
+# The default value is: YES.
+# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.
+
+SKIP_FUNCTION_MACROS   = YES
+
+#---------------------------------------------------------------------------
+# Configuration options related to external references
+#---------------------------------------------------------------------------
+
+# The TAGFILES tag can be used to specify one or more tag files. For each tag
+# file the location of the external documentation should be added. The format of
+# a tag file without this location is as follows:
+# TAGFILES = file1 file2 ...
+# Adding location for the tag files is done as follows:
+# TAGFILES = file1=loc1 "file2 = loc2" ...
+# where loc1 and loc2 can be relative or absolute paths or URLs. See the
+# section "Linking to external documentation" for more information about the use
+# of tag files.
+# Note: Each tag file must have a unique name (where the name does NOT include
+# the path). If a tag file is not located in the directory in which doxygen is
+# run, you must also specify the path to the tagfile here.
+
+TAGFILES               =
+
+# When a file name is specified after GENERATE_TAGFILE, doxygen will create a
+# tag file that is based on the input files it reads. See section "Linking to
+# external documentation" for more information about the usage of tag files.
+
+GENERATE_TAGFILE       =
+
+# If the ALLEXTERNALS tag is set to YES, all external class will be listed in
+# the class index. If set to NO, only the inherited external classes will be
+# listed.
+# The default value is: NO.
+
+ALLEXTERNALS           = NO
+
+# If the EXTERNAL_GROUPS tag is set to YES, all external groups will be listed
+# in the modules index. If set to NO, only the current project's groups will be
+# listed.
+# The default value is: YES.
+
+EXTERNAL_GROUPS        = YES
+
+# If the EXTERNAL_PAGES tag is set to YES, all external pages will be listed in
+# the related pages index. If set to NO, only the current project's pages will
+# be listed.
+# The default value is: YES.
+
+EXTERNAL_PAGES         = YES
+
+#---------------------------------------------------------------------------
+# Configuration options related to the dot tool
+#---------------------------------------------------------------------------
+
+# If the CLASS_DIAGRAMS tag is set to YES, doxygen will generate a class diagram
+# (in HTML and LaTeX) for classes with base or super classes. Setting the tag to
+# NO turns the diagrams off. Note that this option also works with HAVE_DOT
+# disabled, but it is recommended to install and use dot, since it yields more
+# powerful graphs.
+# The default value is: YES.
+
+CLASS_DIAGRAMS         = YES
+
+# You can include diagrams made with dia in doxygen documentation. Doxygen will
+# then run dia to produce the diagram and insert it in the documentation. The
+# DIA_PATH tag allows you to specify the directory where the dia binary resides.
+# If left empty dia is assumed to be found in the default search path.
+
+DIA_PATH               =
+
+# If set to YES the inheritance and collaboration graphs will hide inheritance
+# and usage relations if the target is undocumented or is not a class.
+# The default value is: YES.
+
+HIDE_UNDOC_RELATIONS   = YES
+
+# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is
+# available from the path. This tool is part of Graphviz (see:
+# http://www.graphviz.org/), a graph visualization toolkit from AT&T and Lucent
+# Bell Labs. The other options in this section have no effect if this option is
+# set to NO
+# The default value is: NO.
+
+HAVE_DOT               = YES
+
+# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is allowed
+# to run in parallel. When set to 0 doxygen will base this on the number of
+# processors available in the system. You can set it explicitly to a value
+# larger than 0 to get control over the balance between CPU load and processing
+# speed.
+# Minimum value: 0, maximum value: 32, default value: 0.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+DOT_NUM_THREADS        = 0
+
+# When you want a differently looking font in the dot files that doxygen
+# generates you can specify the font name using DOT_FONTNAME. You need to make
+# sure dot is able to find the font, which can be done by putting it in a
+# standard location or by setting the DOTFONTPATH environment variable or by
+# setting DOT_FONTPATH to the directory containing the font.
+# The default value is: Helvetica.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+DOT_FONTNAME           = Helvetica
+
+# The DOT_FONTSIZE tag can be used to set the size (in points) of the font of
+# dot graphs.
+# Minimum value: 4, maximum value: 24, default value: 10.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+DOT_FONTSIZE           = 10
+
+# By default doxygen will tell dot to use the default font as specified with
+# DOT_FONTNAME. If you specify a different font using DOT_FONTNAME you can set
+# the path where dot can find it using this tag.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+DOT_FONTPATH           =
+
+# If the CLASS_GRAPH tag is set to YES then doxygen will generate a graph for
+# each documented class showing the direct and indirect inheritance relations.
+# Setting this tag to YES will force the CLASS_DIAGRAMS tag to NO.
+# The default value is: YES.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+CLASS_GRAPH            = YES
+
+# If the COLLABORATION_GRAPH tag is set to YES then doxygen will generate a
+# graph for each documented class showing the direct and indirect implementation
+# dependencies (inheritance, containment, and class references variables) of the
+# class with other documented classes.
+# The default value is: YES.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+COLLABORATION_GRAPH    = YES
+
+# If the GROUP_GRAPHS tag is set to YES then doxygen will generate a graph for
+# groups, showing the direct groups dependencies.
+# The default value is: YES.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+GROUP_GRAPHS           = YES
+
+# If the UML_LOOK tag is set to YES, doxygen will generate inheritance and
+# collaboration diagrams in a style similar to the OMG's Unified Modeling
+# Language.
+# The default value is: NO.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+UML_LOOK               = NO
+
+# If the UML_LOOK tag is enabled, the fields and methods are shown inside the
+# class node. If there are many fields or methods and many nodes the graph may
+# become too big to be useful. The UML_LIMIT_NUM_FIELDS threshold limits the
+# number of items for each type to make the size more manageable. Set this to 0
+# for no limit. Note that the threshold may be exceeded by 50% before the limit
+# is enforced. So when you set the threshold to 10, up to 15 fields may appear,
+# but if the number exceeds 15, the total amount of fields shown is limited to
+# 10.
+# Minimum value: 0, maximum value: 100, default value: 10.
+# This tag requires that the tag UML_LOOK is set to YES.
+
+UML_LIMIT_NUM_FIELDS   = 10
+
+# If the DOT_UML_DETAILS tag is set to NO, doxygen will show attributes and
+# methods without types and arguments in the UML graphs. If the DOT_UML_DETAILS
+# tag is set to YES, doxygen will add type and arguments for attributes and
+# methods in the UML graphs. If the DOT_UML_DETAILS tag is set to NONE, doxygen
+# will not generate fields with class member information in the UML graphs. The
+# class diagrams will look similar to the default class diagrams but using UML
+# notation for the relationships.
+# Possible values are: NO, YES and NONE.
+# The default value is: NO.
+# This tag requires that the tag UML_LOOK is set to YES.
+
+DOT_UML_DETAILS        = NO
+
+# The DOT_WRAP_THRESHOLD tag can be used to set the maximum number of characters
+# to display on a single line. If the actual line length exceeds this threshold
+# significantly it will wrapped across multiple lines. Some heuristics are apply
+# to avoid ugly line breaks.
+# Minimum value: 0, maximum value: 1000, default value: 17.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+DOT_WRAP_THRESHOLD     = 17
+
+# If the TEMPLATE_RELATIONS tag is set to YES then the inheritance and
+# collaboration graphs will show the relations between templates and their
+# instances.
+# The default value is: NO.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+TEMPLATE_RELATIONS     = NO
+
+# If the INCLUDE_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are set to
+# YES then doxygen will generate a graph for each documented file showing the
+# direct and indirect include dependencies of the file with other documented
+# files.
+# The default value is: YES.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+INCLUDE_GRAPH          = YES
+
+# If the INCLUDED_BY_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are
+# set to YES then doxygen will generate a graph for each documented file showing
+# the direct and indirect include dependencies of the file with other documented
+# files.
+# The default value is: YES.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+INCLUDED_BY_GRAPH      = YES
+
+# If the CALL_GRAPH tag is set to YES then doxygen will generate a call
+# dependency graph for every global function or class method.
+#
+# Note that enabling this option will significantly increase the time of a run.
+# So in most cases it will be better to enable call graphs for selected
+# functions only using the \callgraph command. Disabling a call graph can be
+# accomplished by means of the command \hidecallgraph.
+# The default value is: NO.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+CALL_GRAPH             = NO
+
+# If the CALLER_GRAPH tag is set to YES then doxygen will generate a caller
+# dependency graph for every global function or class method.
+#
+# Note that enabling this option will significantly increase the time of a run.
+# So in most cases it will be better to enable caller graphs for selected
+# functions only using the \callergraph command. Disabling a caller graph can be
+# accomplished by means of the command \hidecallergraph.
+# The default value is: NO.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+CALLER_GRAPH           = NO
+
+# If the GRAPHICAL_HIERARCHY tag is set to YES then doxygen will graphical
+# hierarchy of all classes instead of a textual one.
+# The default value is: YES.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+GRAPHICAL_HIERARCHY    = YES
+
+# If the DIRECTORY_GRAPH tag is set to YES then doxygen will show the
+# dependencies a directory has on other directories in a graphical way. The
+# dependency relations are determined by the #include relations between the
+# files in the directories.
+# The default value is: YES.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+DIRECTORY_GRAPH        = YES
+
+# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images
+# generated by dot. For an explanation of the image formats see the section
+# output formats in the documentation of the dot tool (Graphviz (see:
+# http://www.graphviz.org/)).
+# Note: If you choose svg you need to set HTML_FILE_EXTENSION to xhtml in order
+# to make the SVG files visible in IE 9+ (other browsers do not have this
+# requirement).
+# Possible values are: png, jpg, gif, svg, png:gd, png:gd:gd, png:cairo,
+# png:cairo:gd, png:cairo:cairo, png:cairo:gdiplus, png:gdiplus and
+# png:gdiplus:gdiplus.
+# The default value is: png.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+DOT_IMAGE_FORMAT       = png
+
+# If DOT_IMAGE_FORMAT is set to svg, then this option can be set to YES to
+# enable generation of interactive SVG images that allow zooming and panning.
+#
+# Note that this requires a modern browser other than Internet Explorer. Tested
+# and working are Firefox, Chrome, Safari, and Opera.
+# Note: For IE 9+ you need to set HTML_FILE_EXTENSION to xhtml in order to make
+# the SVG files visible. Older versions of IE do not have SVG support.
+# The default value is: NO.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+INTERACTIVE_SVG        = NO
+
+# The DOT_PATH tag can be used to specify the path where the dot tool can be
+# found. If left blank, it is assumed the dot tool can be found in the path.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+DOT_PATH               =
+
+# The DOTFILE_DIRS tag can be used to specify one or more directories that
+# contain dot files that are included in the documentation (see the \dotfile
+# command).
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+DOTFILE_DIRS           =
+
+# The MSCFILE_DIRS tag can be used to specify one or more directories that
+# contain msc files that are included in the documentation (see the \mscfile
+# command).
+
+MSCFILE_DIRS           =
+
+# The DIAFILE_DIRS tag can be used to specify one or more directories that
+# contain dia files that are included in the documentation (see the \diafile
+# command).
+
+DIAFILE_DIRS           =
+
+# When using plantuml, the PLANTUML_JAR_PATH tag should be used to specify the
+# path where java can find the plantuml.jar file. If left blank, it is assumed
+# PlantUML is not used or called during a preprocessing step. Doxygen will
+# generate a warning when it encounters a \startuml command in this case and
+# will not generate output for the diagram.
+
+PLANTUML_JAR_PATH      =
+
+# When using plantuml, the PLANTUML_CFG_FILE tag can be used to specify a
+# configuration file for plantuml.
+
+PLANTUML_CFG_FILE      =
+
+# When using plantuml, the specified paths are searched for files specified by
+# the !include statement in a plantuml block.
+
+PLANTUML_INCLUDE_PATH  =
+
+# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes
+# that will be shown in the graph. If the number of nodes in a graph becomes
+# larger than this value, doxygen will truncate the graph, which is visualized
+# by representing a node as a red box. Note that doxygen if the number of direct
+# children of the root node in a graph is already larger than
+# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that
+# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.
+# Minimum value: 0, maximum value: 10000, default value: 50.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+DOT_GRAPH_MAX_NODES    = 50
+
+# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs
+# generated by dot. A depth value of 3 means that only nodes reachable from the
+# root by following a path via at most 3 edges will be shown. Nodes that lay
+# further from the root node will be omitted. Note that setting this option to 1
+# or 2 may greatly reduce the computation time needed for large code bases. Also
+# note that the size of a graph can be further restricted by
+# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.
+# Minimum value: 0, maximum value: 1000, default value: 0.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+MAX_DOT_GRAPH_DEPTH    = 0
+
+# Set the DOT_TRANSPARENT tag to YES to generate images with a transparent
+# background. This is disabled by default, because dot on Windows does not seem
+# to support this out of the box.
+#
+# Warning: Depending on the platform used, enabling this option may lead to
+# badly anti-aliased labels on the edges of a graph (i.e. they become hard to
+# read).
+# The default value is: NO.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+DOT_TRANSPARENT        = NO
+
+# Set the DOT_MULTI_TARGETS tag to YES to allow dot to generate multiple output
+# files in one run (i.e. multiple -o and -T options on the command line). This
+# makes dot run faster, but since only newer versions of dot (>1.8.10) support
+# this, this feature is disabled by default.
+# The default value is: NO.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+DOT_MULTI_TARGETS      = NO
+
+# If the GENERATE_LEGEND tag is set to YES doxygen will generate a legend page
+# explaining the meaning of the various boxes and arrows in the dot generated
+# graphs.
+# The default value is: YES.
+# This tag requires that the tag HAVE_DOT is set to YES.
+
+GENERATE_LEGEND        = YES
+
+# If the DOT_CLEANUP tag is set to YES, doxygen will remove the intermediate
+# files that are used to generate the various graphs.
+#
+# Note: This setting is not only used for dot files but also for msc and
+# plantuml temporary files.
+# The default value is: YES.
+
+DOT_CLEANUP            = YES
--- gtsam-4.1.0.orig/wrap/docs/parser/parse_doxygen_xml.py
+++ gtsam-4.1.0/wrap/docs/parser/parse_doxygen_xml.py
@@ -4,7 +4,7 @@ import xml.etree.ElementTree as ET
 
 from docs.docs import ClassDoc, Doc, Docs, FreeDoc
 
-DOXYGEN_CONF = 'conf_doxygen.py'
+DOXYGEN_CONF = 'doxygen.conf'
 
 
 class ParseDoxygenXML():
--- gtsam-4.1.0.orig/wrap/docs/parser/parse_xml.py
+++ gtsam-4.1.0/wrap/docs/parser/parse_xml.py
@@ -4,7 +4,7 @@ from docs.doc_template import ClassDoc,
 import os.path as path
 import xml.etree.ElementTree as ET
 
-DOXYGEN_CONF = 'conf_doxygen.py'
+DOXYGEN_CONF = 'doxygen.conf'
 
 
 def parse(input_path, output_path, quiet=False, generate_xml_flag=True):
--- /dev/null
+++ gtsam-4.1.0/wrap/gtwrap/interface_parser/__init__.py
@@ -0,0 +1,43 @@
+"""
+GTSAM Copyright 2010-2020, Georgia Tech Research Corporation,
+Atlanta, Georgia 30332-0415
+All Rights Reserved
+
+See LICENSE for the license information
+
+Parser to get the interface of a C++ source file
+
+Author: Duy Nguyen Ta, Fan Jiang, Matthew Sklar, Varun Agrawal, and Frank Dellaert
+"""
+
+import sys
+import pyparsing
+
+from .classes import *
+from .declaration import *
+from .function import *
+from .module import *
+from .namespace import *
+from .template import *
+from .tokens import *
+from .type import *
+
+# Fix deepcopy issue with pyparsing
+# Can remove once https://github.com/pyparsing/pyparsing/issues/208 is resolved.
+if sys.version_info >= (3, 8):
+
+    def fixed_get_attr(self, item):
+        """
+        Fix for monkey-patching issue with deepcopy in pyparsing.ParseResults
+        """
+        if item == '__deepcopy__':
+            raise AttributeError(item)
+        try:
+            return self[item]
+        except KeyError:
+            return ""
+
+    # apply the monkey-patch
+    pyparsing.ParseResults.__getattr__ = fixed_get_attr
+
+pyparsing.ParserElement.enablePackrat()
--- /dev/null
+++ gtsam-4.1.0/wrap/gtwrap/interface_parser/classes.py
@@ -0,0 +1,357 @@
+"""
+GTSAM Copyright 2010-2020, Georgia Tech Research Corporation,
+Atlanta, Georgia 30332-0415
+All Rights Reserved
+
+See LICENSE for the license information
+
+Parser classes and rules for parsing C++ classes.
+
+Author: Duy Nguyen Ta, Fan Jiang, Matthew Sklar, Varun Agrawal, and Frank Dellaert
+"""
+
+from typing import Iterable, List, Union
+
+from pyparsing import Optional, ZeroOrMore, Literal
+
+from .function import ArgumentList, ReturnType
+from .template import Template
+from .tokens import (CLASS, COLON, CONST, IDENT, LBRACE, LPAREN, RBRACE,
+                     RPAREN, SEMI_COLON, STATIC, VIRTUAL, OPERATOR)
+from .type import TemplatedType, Type, Typename
+
+
+class Method:
+    """
+    Rule to parse a method in a class.
+
+    E.g.
+    ```
+    class Hello {
+        void sayHello() const;
+    };
+    ```
+    """
+    rule = (
+        Optional(Template.rule("template"))  #
+        + ReturnType.rule("return_type")  #
+        + IDENT("name")  #
+        + LPAREN  #
+        + ArgumentList.rule("args_list")  #
+        + RPAREN  #
+        + Optional(CONST("is_const"))  #
+        + SEMI_COLON  # BR
+    ).setParseAction(lambda t: Method(t.template, t.name, t.return_type, t.
+                                      args_list, t.is_const))
+
+    def __init__(self,
+                 template: str,
+                 name: str,
+                 return_type: ReturnType,
+                 args: ArgumentList,
+                 is_const: str,
+                 parent: Union[str, "Class"] = ''):
+        self.template = template
+        self.name = name
+        self.return_type = return_type
+        self.args = args
+        self.is_const = is_const
+
+        self.parent = parent
+
+    def __repr__(self) -> str:
+        return "Method: {} {} {}({}){}".format(
+            self.template,
+            self.return_type,
+            self.name,
+            self.args,
+            self.is_const,
+        )
+
+
+class StaticMethod:
+    """
+    Rule to parse all the static methods in a class.
+
+    E.g.
+    ```
+    class Hello {
+        static void changeGreeting();
+    };
+    ```
+    """
+    rule = (
+        STATIC  #
+        + ReturnType.rule("return_type")  #
+        + IDENT("name")  #
+        + LPAREN  #
+        + ArgumentList.rule("args_list")  #
+        + RPAREN  #
+        + SEMI_COLON  # BR
+    ).setParseAction(
+        lambda t: StaticMethod(t.name, t.return_type, t.args_list))
+
+    def __init__(self,
+                 name: str,
+                 return_type: ReturnType,
+                 args: ArgumentList,
+                 parent: Union[str, "Class"] = ''):
+        self.name = name
+        self.return_type = return_type
+        self.args = args
+
+        self.parent = parent
+
+    def __repr__(self) -> str:
+        return "static {} {}{}".format(self.return_type, self.name, self.args)
+
+    def to_cpp(self) -> str:
+        """Generate the C++ code for wrapping."""
+        return self.name
+
+
+class Constructor:
+    """
+    Rule to parse the class constructor.
+    Can have 0 or more arguments.
+    """
+    rule = (
+        IDENT("name")  #
+        + LPAREN  #
+        + ArgumentList.rule("args_list")  #
+        + RPAREN  #
+        + SEMI_COLON  # BR
+    ).setParseAction(lambda t: Constructor(t.name, t.args_list))
+
+    def __init__(self,
+                 name: str,
+                 args: ArgumentList,
+                 parent: Union["Class", str] = ''):
+        self.name = name
+        self.args = args
+
+        self.parent = parent
+
+    def __repr__(self) -> str:
+        return "Constructor: {}".format(self.name)
+
+
+class Property:
+    """
+    Rule to parse the variable members of a class.
+
+    E.g.
+    ```
+    class Hello {
+        string name;  // This is a property.
+    };
+    ````
+    """
+    rule = (
+        (Type.rule ^ TemplatedType.rule)("ctype")  #
+        + IDENT("name")  #
+        + SEMI_COLON  #
+    ).setParseAction(lambda t: Property(t.ctype, t.name))
+
+    def __init__(self, ctype: Type, name: str, parent=''):
+        self.ctype = ctype[0]  # ParseResult is a list
+        self.name = name
+        self.parent = parent
+
+    def __repr__(self) -> str:
+        return '{} {}'.format(self.ctype.__repr__(), self.name)
+
+
+class Operator:
+    """
+    Rule for parsing operator overloads.
+
+    E.g.
+    ```
+    class Overload {
+        Vector2 operator+(const Vector2 &v) const;
+    };
+    """
+    rule = (
+        ReturnType.rule("return_type")  #
+        + Literal("operator")("name")  #
+        + OPERATOR("operator")  #
+        + LPAREN  #
+        + ArgumentList.rule("args_list")  #
+        + RPAREN  #
+        + CONST("is_const")  #
+        + SEMI_COLON  # BR
+    ).setParseAction(lambda t: Operator(t.name, t.operator, t.return_type, t.
+                                        args_list, t.is_const))
+
+    def __init__(self,
+                 name: str,
+                 operator: str,
+                 return_type: ReturnType,
+                 args: ArgumentList,
+                 is_const: str,
+                 parent: Union[str, "Class"] = ''):
+        self.name = name
+        self.operator = operator
+        self.return_type = return_type
+        self.args = args
+        self.is_const = is_const
+        self.is_unary = len(args) == 0
+
+        self.parent = parent
+
+        # Check for valid unary operators
+        if self.is_unary and self.operator not in ('+', '-'):
+            raise ValueError("Invalid unary operator {} used for {}".format(
+                self.operator, self))
+
+        # Check that number of arguments are either 0 or 1
+        assert 0 <= len(args) < 2, \
+            "Operator overload should be at most 1 argument, " \
+                "{} arguments provided".format(len(args))
+
+        # Check to ensure arg and return type are the same.
+        if len(args) == 1 and self.operator not in ("()", "[]"):
+            assert args.args_list[0].ctype.typename.name == return_type.type1.typename.name, \
+                "Mixed type overloading not supported. Both arg and return type must be the same."
+
+    def __repr__(self) -> str:
+        return "Operator: {}{}{}({}) {}".format(
+            self.return_type,
+            self.name,
+            self.operator,
+            self.args,
+            self.is_const,
+        )
+
+
+def collect_namespaces(obj):
+    """
+    Get the chain of namespaces from the lowest to highest for the given object.
+
+    Args:
+        obj: Object of type Namespace, Class or InstantiatedClass.
+    """
+    namespaces = []
+    ancestor = obj.parent
+    while ancestor and ancestor.name:
+        namespaces = [ancestor.name] + namespaces
+        ancestor = ancestor.parent
+    return [''] + namespaces
+
+
+class Class:
+    """
+    Rule to parse a class defined in the interface file.
+
+    E.g.
+    ```
+    class Hello {
+        ...
+    };
+    ```
+    """
+    class Members:
+        """
+        Rule for all the members within a class.
+        """
+        rule = ZeroOrMore(Constructor.rule ^ StaticMethod.rule ^ Method.rule
+                          ^ Property.rule ^ Operator.rule).setParseAction(
+                              lambda t: Class.Members(t.asList()))
+
+        def __init__(self,
+                     members: List[Union[Constructor, Method, StaticMethod,
+                                         Property, Operator]]):
+            self.ctors = []
+            self.methods = []
+            self.static_methods = []
+            self.properties = []
+            self.operators = []
+            for m in members:
+                if isinstance(m, Constructor):
+                    self.ctors.append(m)
+                elif isinstance(m, Method):
+                    self.methods.append(m)
+                elif isinstance(m, StaticMethod):
+                    self.static_methods.append(m)
+                elif isinstance(m, Property):
+                    self.properties.append(m)
+                elif isinstance(m, Operator):
+                    self.operators.append(m)
+
+    _parent = COLON + Typename.rule("parent_class")
+    rule = (
+        Optional(Template.rule("template"))  #
+        + Optional(VIRTUAL("is_virtual"))  #
+        + CLASS  #
+        + IDENT("name")  #
+        + Optional(_parent)  #
+        + LBRACE  #
+        + Members.rule("members")  #
+        + RBRACE  #
+        + SEMI_COLON  # BR
+    ).setParseAction(lambda t: Class(
+        t.template,
+        t.is_virtual,
+        t.name,
+        t.parent_class,
+        t.members.ctors,
+        t.members.methods,
+        t.members.static_methods,
+        t.members.properties,
+        t.members.operators,
+    ))
+
+    def __init__(
+        self,
+        template: Template,
+        is_virtual: str,
+        name: str,
+        parent_class: list,
+        ctors: List[Constructor],
+        methods: List[Method],
+        static_methods: List[StaticMethod],
+        properties: List[Property],
+        operators: List[Operator],
+        parent: str = '',
+    ):
+        self.template = template
+        self.is_virtual = is_virtual
+        self.name = name
+        if parent_class:
+            if isinstance(parent_class, Iterable):
+                self.parent_class = parent_class[0]
+            else:
+                self.parent_class = parent_class
+
+        else:
+            self.parent_class = ''
+
+        self.ctors = ctors
+        self.methods = methods
+        self.static_methods = static_methods
+        self.properties = properties
+        self.operators = operators
+        self.parent = parent
+
+        # Make sure ctors' names and class name are the same.
+        for ctor in self.ctors:
+            if ctor.name != self.name:
+                raise ValueError("Error in constructor name! {} != {}".format(
+                    ctor.name, self.name))
+
+        for ctor in self.ctors:
+            ctor.parent = self
+        for method in self.methods:
+            method.parent = self
+        for static_method in self.static_methods:
+            static_method.parent = self
+        for _property in self.properties:
+            _property.parent = self
+
+    def namespaces(self) -> list:
+        """Get the namespaces which this class is nested under as a list."""
+        return collect_namespaces(self)
+
+    def __repr__(self):
+        return "Class: {self.name}".format(self=self)
--- /dev/null
+++ gtsam-4.1.0/wrap/gtwrap/interface_parser/declaration.py
@@ -0,0 +1,60 @@
+"""
+GTSAM Copyright 2010-2020, Georgia Tech Research Corporation,
+Atlanta, Georgia 30332-0415
+All Rights Reserved
+
+See LICENSE for the license information
+
+Classes and rules for declarations such as includes and forward declarations.
+
+Author: Duy Nguyen Ta, Fan Jiang, Matthew Sklar, Varun Agrawal, and Frank Dellaert
+"""
+
+from pyparsing import CharsNotIn, Optional
+
+from .tokens import (CLASS, COLON, INCLUDE, LOPBRACK, ROPBRACK, SEMI_COLON,
+                     VIRTUAL)
+from .type import Typename
+
+
+class Include:
+    """
+    Rule to parse #include directives.
+    """
+    rule = (INCLUDE + LOPBRACK + CharsNotIn('>')("header") +
+            ROPBRACK).setParseAction(lambda t: Include(t.header))
+
+    def __init__(self, header: CharsNotIn, parent: str = ''):
+        self.header = header
+        self.parent = parent
+
+    def __repr__(self) -> str:
+        return "#include <{}>".format(self.header)
+
+
+class ForwardDeclaration:
+    """
+    Rule to parse forward declarations in the interface file.
+    """
+    rule = (Optional(VIRTUAL("is_virtual")) + CLASS + Typename.rule("name") +
+            Optional(COLON + Typename.rule("parent_type")) +
+            SEMI_COLON).setParseAction(lambda t: ForwardDeclaration(
+                t.name, t.parent_type, t.is_virtual))
+
+    def __init__(self,
+                 name: Typename,
+                 parent_type: str,
+                 is_virtual: str,
+                 parent: str = ''):
+        self.name = name
+        if parent_type:
+            self.parent_type = parent_type
+        else:
+            self.parent_type = ''
+
+        self.is_virtual = is_virtual
+        self.parent = parent
+
+    def __repr__(self) -> str:
+        return "ForwardDeclaration: {} {}({})".format(self.is_virtual,
+                                                      self.name, self.parent)
--- /dev/null
+++ gtsam-4.1.0/wrap/gtwrap/interface_parser/function.py
@@ -0,0 +1,175 @@
+"""
+GTSAM Copyright 2010-2020, Georgia Tech Research Corporation,
+Atlanta, Georgia 30332-0415
+All Rights Reserved
+
+See LICENSE for the license information
+
+Parser classes and rules for parsing C++ functions.
+
+Author: Duy Nguyen Ta, Fan Jiang, Matthew Sklar, Varun Agrawal, and Frank Dellaert
+"""
+
+from typing import Iterable, List, Union
+
+from pyparsing import Optional, ParseResults, delimitedList
+
+from .template import Template
+from .tokens import (COMMA, IDENT, LOPBRACK, LPAREN, PAIR, ROPBRACK, RPAREN,
+                     SEMI_COLON)
+from .type import TemplatedType, Type
+
+
+class Argument:
+    """
+    The type and name of a function/method argument.
+
+    E.g.
+    ```
+    void sayHello(/*`s` is the method argument with type `const string&`*/ const string& s);
+    ```
+    """
+    rule = ((Type.rule ^ TemplatedType.rule)("ctype") +
+            IDENT("name")).setParseAction(lambda t: Argument(t.ctype, t.name))
+
+    def __init__(self, ctype: Union[Type, TemplatedType], name: str):
+        if isinstance(ctype, Iterable):
+            self.ctype = ctype[0]
+        else:
+            self.ctype = ctype
+        self.name = name
+        self.parent: Union[ArgumentList, None] = None
+
+    def __repr__(self) -> str:
+        return self.to_cpp()
+
+    def to_cpp(self) -> str:
+        """Return full C++ representation of argument."""
+        return '{} {}'.format(repr(self.ctype), self.name)
+
+
+class ArgumentList:
+    """
+    List of Argument objects for all arguments in a function.
+    """
+    rule = Optional(delimitedList(Argument.rule)("args_list")).setParseAction(
+        lambda t: ArgumentList.from_parse_result(t.args_list))
+
+    def __init__(self, args_list: List[Argument]):
+        self.args_list = args_list
+        for arg in args_list:
+            arg.parent = self
+        # The parent object which contains the argument list
+        # E.g. Method, StaticMethod, Template, Constructor, GlobalFunction
+        self.parent = None
+
+    @staticmethod
+    def from_parse_result(parse_result: ParseResults):
+        """Return the result of parsing."""
+        if parse_result:
+            return ArgumentList(parse_result.asList())
+        else:
+            return ArgumentList([])
+
+    def __repr__(self) -> str:
+        return self.args_list.__repr__()
+
+    def __len__(self) -> int:
+        return len(self.args_list)
+
+    def args_names(self) -> List[str]:
+        """Return a list of the names of all the arguments."""
+        return [arg.name for arg in self.args_list]
+
+    def to_cpp(self, use_boost: bool) -> List[str]:
+        """Generate the C++ code for wrapping."""
+        return [arg.ctype.to_cpp(use_boost) for arg in self.args_list]
+
+
+class ReturnType:
+    """
+    Rule to parse the return type.
+
+    The return type can either be a single type or a pair such as <type1, type2>.
+    """
+    _pair = (
+        PAIR.suppress()  #
+        + LOPBRACK  #
+        + Type.rule("type1")  #
+        + COMMA  #
+        + Type.rule("type2")  #
+        + ROPBRACK  #
+    )
+    rule = (_pair ^
+            (Type.rule ^ TemplatedType.rule)("type1")).setParseAction(  # BR
+                lambda t: ReturnType(t.type1, t.type2))
+
+    def __init__(self, type1: Union[Type, TemplatedType], type2: Type):
+        # If a TemplatedType, the return is a ParseResults, so we extract out the type.
+        self.type1 = type1[0] if isinstance(type1, ParseResults) else type1
+        self.type2 = type2
+        # The parent object which contains the return type
+        # E.g. Method, StaticMethod, Template, Constructor, GlobalFunction
+        self.parent = None
+
+    def is_void(self) -> bool:
+        """
+        Check if the return type is void.
+        """
+        return self.type1.typename.name == "void" and not self.type2
+
+    def __repr__(self) -> str:
+        return "{}{}".format(
+            self.type1, (', ' + self.type2.__repr__()) if self.type2 else '')
+
+    def to_cpp(self, use_boost: bool) -> str:
+        """
+        Generate the C++ code for wrapping.
+
+        If there are two return types, we return a pair<>,
+        otherwise we return the regular return type.
+        """
+        if self.type2:
+            return "std::pair<{type1},{type2}>".format(
+                type1=self.type1.to_cpp(use_boost),
+                type2=self.type2.to_cpp(use_boost))
+        else:
+            return self.type1.to_cpp(use_boost)
+
+
+class GlobalFunction:
+    """
+    Rule to parse functions defined in the global scope.
+    """
+    rule = (
+        Optional(Template.rule("template")) + ReturnType.rule("return_type")  #
+        + IDENT("name")  #
+        + LPAREN  #
+        + ArgumentList.rule("args_list")  #
+        + RPAREN  #
+        + SEMI_COLON  #
+    ).setParseAction(lambda t: GlobalFunction(t.name, t.return_type, t.
+                                              args_list, t.template))
+
+    def __init__(self,
+                 name: str,
+                 return_type: ReturnType,
+                 args_list: ArgumentList,
+                 template: Template,
+                 parent: str = ''):
+        self.name = name
+        self.return_type = return_type
+        self.args = args_list
+        self.template = template
+
+        self.parent = parent
+        self.return_type.parent = self
+        self.args.parent = self
+
+    def __repr__(self) -> str:
+        return "GlobalFunction:  {}{}({})".format(self.return_type, self.name,
+                                                  self.args)
+
+    def to_cpp(self) -> str:
+        """Generate the C++ code for wrapping."""
+        return self.name
--- /dev/null
+++ gtsam-4.1.0/wrap/gtwrap/interface_parser/module.py
@@ -0,0 +1,55 @@
+"""
+GTSAM Copyright 2010-2020, Georgia Tech Research Corporation,
+Atlanta, Georgia 30332-0415
+All Rights Reserved
+
+See LICENSE for the license information
+
+Rules and classes for parsing a module.
+
+Author: Duy Nguyen Ta, Fan Jiang, Matthew Sklar, Varun Agrawal, and Frank Dellaert
+"""
+
+# pylint: disable=unnecessary-lambda, unused-import, expression-not-assigned, no-else-return, protected-access, too-few-public-methods, too-many-arguments
+
+import sys
+
+import pyparsing  # type: ignore
+from pyparsing import (ParserElement, ParseResults, ZeroOrMore,
+                       cppStyleComment, stringEnd)
+
+from .classes import Class
+from .declaration import ForwardDeclaration, Include
+from .function import GlobalFunction
+from .namespace import Namespace
+from .template import TypedefTemplateInstantiation
+
+
+class Module:
+    """
+    Module is just a global namespace.
+
+    E.g.
+    ```
+    namespace gtsam {
+        ...
+    }
+    ```
+    """
+
+    rule = (
+        ZeroOrMore(ForwardDeclaration.rule  #
+                   ^ Include.rule  #
+                   ^ Class.rule  #
+                   ^ TypedefTemplateInstantiation.rule  #
+                   ^ GlobalFunction.rule  #
+                   ^ Namespace.rule  #
+                   ).setParseAction(lambda t: Namespace('', t.asList())) +
+        stringEnd)
+
+    rule.ignore(cppStyleComment)
+
+    @staticmethod
+    def parseString(s: str) -> ParseResults:
+        """Parse the source string and apply the rules."""
+        return Module.rule.parseString(s)[0]
--- /dev/null
+++ gtsam-4.1.0/wrap/gtwrap/interface_parser/namespace.py
@@ -0,0 +1,128 @@
+"""
+GTSAM Copyright 2010-2020, Georgia Tech Research Corporation,
+Atlanta, Georgia 30332-0415
+All Rights Reserved
+
+See LICENSE for the license information
+
+Classes and rules to parse a namespace.
+
+Author: Duy Nguyen Ta, Fan Jiang, Matthew Sklar, Varun Agrawal, and Frank Dellaert
+"""
+
+# pylint: disable=unnecessary-lambda, expression-not-assigned
+
+from typing import List, Union
+
+from pyparsing import Forward, ParseResults, ZeroOrMore
+
+from .classes import Class, collect_namespaces
+from .declaration import ForwardDeclaration, Include
+from .function import GlobalFunction
+from .template import TypedefTemplateInstantiation
+from .tokens import IDENT, LBRACE, NAMESPACE, RBRACE
+from .type import Typename
+
+
+def find_sub_namespace(namespace: "Namespace",
+                       str_namespaces: List["Namespace"]) -> list:
+    """
+    Get the namespaces nested under `namespace`, filtered by a list of namespace strings.
+
+    Args:
+        namespace: The top-level namespace under which to find sub-namespaces.
+        str_namespaces: The list of namespace strings to filter against.
+    """
+    if not str_namespaces:
+        return [namespace]
+
+    sub_namespaces = (ns for ns in namespace.content
+                      if isinstance(ns, Namespace))
+
+    found_namespaces = [
+        ns for ns in sub_namespaces if ns.name == str_namespaces[0]
+    ]
+    if not found_namespaces:
+        return []
+
+    res = []
+    for found_namespace in found_namespaces:
+        ns = find_sub_namespace(found_namespace, str_namespaces[1:])
+        if ns:
+            res += ns
+    return res
+
+
+class Namespace:
+    """Rule for parsing a namespace in the interface file."""
+
+    rule = Forward()
+    rule << (
+        NAMESPACE  #
+        + IDENT("name")  #
+        + LBRACE  #
+        + ZeroOrMore(  # BR
+            ForwardDeclaration.rule  #
+            ^ Include.rule  #
+            ^ Class.rule  #
+            ^ TypedefTemplateInstantiation.rule  #
+            ^ GlobalFunction.rule  #
+            ^ rule  #
+        )("content")  # BR
+        + RBRACE  #
+    ).setParseAction(lambda t: Namespace.from_parse_result(t))
+
+    def __init__(self, name: str, content: ZeroOrMore, parent=''):
+        self.name = name
+        self.content = content
+        self.parent = parent
+        for child in self.content:
+            child.parent = self
+
+    @staticmethod
+    def from_parse_result(t: ParseResults):
+        """Return the result of parsing."""
+        if t.content:
+            content = t.content.asList()
+        else:
+            content = []
+        return Namespace(t.name, content)
+
+    def find_class_or_function(
+            self, typename: Typename) -> Union[Class, GlobalFunction]:
+        """
+        Find the Class or GlobalFunction object given its typename.
+        We have to traverse the tree of namespaces.
+        """
+        found_namespaces = find_sub_namespace(self, typename.namespaces)
+        res = []
+        for namespace in found_namespaces:
+            classes_and_funcs = (c for c in namespace.content
+                                 if isinstance(c, (Class, GlobalFunction)))
+            res += [c for c in classes_and_funcs if c.name == typename.name]
+        if not res:
+            raise ValueError("Cannot find class {} in module!".format(
+                typename.name))
+        elif len(res) > 1:
+            raise ValueError(
+                "Found more than one classes {} in module!".format(
+                    typename.name))
+        else:
+            return res[0]
+
+    def top_level(self) -> "Namespace":
+        """Return the top leve namespace."""
+        if self.name == '' or self.parent == '':
+            return self
+        else:
+            return self.parent.top_level()
+
+    def __repr__(self) -> str:
+        return "Namespace: {}\n\t{}".format(self.name, self.content)
+
+    def full_namespaces(self) -> List["Namespace"]:
+        """Get the full namespace list."""
+        ancestors = collect_namespaces(self)
+        if self.name:
+            ancestors.append(self.name)
+        return ancestors
--- /dev/null
+++ gtsam-4.1.0/wrap/gtwrap/interface_parser/template.py
@@ -0,0 +1,101 @@
+"""
+GTSAM Copyright 2010-2020, Georgia Tech Research Corporation,
+Atlanta, Georgia 30332-0415
+All Rights Reserved
+
+See LICENSE for the license information
+
+Classes and rules for parsing C++ templates and typedefs for template instantiations.
+
+Author: Duy Nguyen Ta, Fan Jiang, Matthew Sklar, Varun Agrawal, and Frank Dellaert
+"""
+
+from typing import List
+
+from pyparsing import Optional, ParseResults, delimitedList
+
+from .tokens import (EQUAL, IDENT, LBRACE, LOPBRACK, RBRACE, ROPBRACK,
+                     SEMI_COLON, TEMPLATE, TYPEDEF)
+from .type import Typename, TemplatedType
+
+
+class Template:
+    """
+    Rule to parse templated values in the interface file.
+
+    E.g.
+    template<POSE>  // this is the Template.
+    class Camera { ... };
+    """
+    class TypenameAndInstantiations:
+        """
+        Rule to parse the template parameters.
+
+        template<typename POSE>  // POSE is the Instantiation.
+        """
+        rule = (
+            IDENT("typename")  #
+            + Optional(  #
+                EQUAL  #
+                + LBRACE  #
+                + ((delimitedList(TemplatedType.rule ^ Typename.rule)
+                    ("instantiations")))  #
+                + RBRACE  #
+            )).setParseAction(lambda t: Template.TypenameAndInstantiations(
+                t.typename, t.instantiations))
+
+        def __init__(self, typename: str, instantiations: ParseResults):
+            self.typename = typename
+
+            self.instantiations = []
+            if instantiations:
+                for inst in instantiations:
+                    x = inst.typename if isinstance(inst,
+                                                    TemplatedType) else inst
+                    self.instantiations.append(x)
+
+    rule = (  # BR
+        TEMPLATE  #
+        + LOPBRACK  #
+        + delimitedList(TypenameAndInstantiations.rule)(
+            "typename_and_instantiations_list")  #
+        + ROPBRACK  # BR
+    ).setParseAction(
+        lambda t: Template(t.typename_and_instantiations_list.asList()))
+
+    def __init__(
+            self,
+            typename_and_instantiations_list: List[TypenameAndInstantiations]):
+        ti_list = typename_and_instantiations_list
+        self.typenames = [ti.typename for ti in ti_list]
+        self.instantiations = [ti.instantiations for ti in ti_list]
+
+    def __repr__(self) -> str:
+        return "<{0}>".format(", ".join(self.typenames))
+
+
+class TypedefTemplateInstantiation:
+    """
+    Rule for parsing typedefs (with templates) within the interface file.
+
+    E.g.
+    ```
+    typedef SuperComplexName<Arg1, Arg2, Arg3> EasierName;
+    ```
+    """
+    rule = (TYPEDEF + TemplatedType.rule("templated_type") +
+            IDENT("new_name") +
+            SEMI_COLON).setParseAction(lambda t: TypedefTemplateInstantiation(
+                t.templated_type[0], t.new_name))
+
+    def __init__(self,
+                 templated_type: TemplatedType,
+                 new_name: str,
+                 parent: str = ''):
+        self.typename = templated_type.typename
+        self.new_name = new_name
+        self.parent = parent
+
+    def __repr__(self):
+        return "Typedef: {new_name} = {typename}".format(
+            new_name=self.new_name, typename=self.typename)
--- /dev/null
+++ gtsam-4.1.0/wrap/gtwrap/interface_parser/tokens.py
@@ -0,0 +1,87 @@
+"""
+GTSAM Copyright 2010-2020, Georgia Tech Research Corporation,
+Atlanta, Georgia 30332-0415
+All Rights Reserved
+
+See LICENSE for the license information
+
+All the token definitions.
+
+Author: Duy Nguyen Ta, Fan Jiang, Matthew Sklar, Varun Agrawal, and Frank Dellaert
+"""
+
+from pyparsing import Keyword, Literal, Suppress, Word, alphanums, alphas, nums, Or
+
+# rule for identifiers (e.g. variable names)
+IDENT = Word(alphas + '_', alphanums + '_') ^ Word(nums)
+
+RAW_POINTER, SHARED_POINTER, REF = map(Literal, "@*&")
+
+LPAREN, RPAREN, LBRACE, RBRACE, COLON, SEMI_COLON = map(Suppress, "(){}:;")
+LOPBRACK, ROPBRACK, COMMA, EQUAL = map(Suppress, "<>,=")
+CONST, VIRTUAL, CLASS, STATIC, PAIR, TEMPLATE, TYPEDEF, INCLUDE = map(
+    Keyword,
+    [
+        "const",
+        "virtual",
+        "class",
+        "static",
+        "pair",
+        "template",
+        "typedef",
+        "#include",
+    ],
+)
+NAMESPACE = Keyword("namespace")
+BASIS_TYPES = map(
+    Keyword,
+    [
+        "void",
+        "bool",
+        "unsigned char",
+        "char",
+        "int",
+        "size_t",
+        "double",
+        "float",
+    ],
+)
+
+OPERATOR = Or(
+    map(
+        Literal,
+        [
+            '+',  # __add__, __pos__
+            '-',  # __sub__, __neg__
+            '*',  # __mul__
+            '/',  # __truediv__
+            '%',  # __mod__
+            '^',  # __xor__
+            '&',  # __and__
+            '|',  # __or__
+            # '~',  # __invert__
+            '+=',  # __iadd__
+            '-=',  # __isub__
+            '*=',  # __imul__
+            '/=',  # __itruediv__
+            '%=',  # __imod__
+            '^=',  # __ixor__
+            '&=',  # __iand__
+            '|=',  # __ior__
+            '<<',  # __lshift__
+            '<<=',  # __ilshift__
+            '>>',  # __rshift__
+            '>>=',  # __irshift__
+            '==',  # __eq__
+            '!=',  # __ne__
+            '<',  # __lt__
+            '>',  # __gt__
+            '<=',  # __le__
+            '>=',  # __ge__
+            # '!',  # Use `not` in python
+            # '&&',  # Use `and` in python
+            # '||',  # Use `or` in python
+            '()',  # __call__
+            '[]',  # __getitem__
+        ],
+    ))
--- /dev/null
+++ gtsam-4.1.0/wrap/gtwrap/interface_parser/type.py
@@ -0,0 +1,315 @@
+"""
+GTSAM Copyright 2010-2020, Georgia Tech Research Corporation,
+Atlanta, Georgia 30332-0415
+All Rights Reserved
+
+See LICENSE for the license information
+
+Define the parser rules and classes for various C++ types.
+
+Author: Duy Nguyen Ta, Fan Jiang, Matthew Sklar, Varun Agrawal, and Frank Dellaert
+"""
+
+# pylint: disable=unnecessary-lambda, expression-not-assigned
+
+from typing import Iterable, List, Union
+
+from pyparsing import Forward, Optional, Or, ParseResults, delimitedList
+
+from .tokens import (BASIS_TYPES, CONST, IDENT, LOPBRACK, RAW_POINTER, REF,
+                     ROPBRACK, SHARED_POINTER)
+
+
+class Typename:
+    """
+    Generic type which can be either a basic type or a class type,
+    similar to C++'s `typename` aka a qualified dependent type.
+    Contains type name with full namespace and template arguments.
+
+    E.g.
+    ```
+    gtsam::PinholeCamera<gtsam::Cal3S2>
+    ```
+
+    will give the name as `PinholeCamera`, namespace as `gtsam`,
+    and template instantiations as `[gtsam::Cal3S2]`.
+
+    Args:
+        namespaces_and_name: A list representing the namespaces of the type
+            with the type being the last element.
+        instantiations: Template parameters to the type.
+    """
+
+    namespaces_name_rule = delimitedList(IDENT, "::")
+    instantiation_name_rule = delimitedList(IDENT, "::")
+    rule = (
+        namespaces_name_rule("namespaces_and_name")  #
+    ).setParseAction(lambda t: Typename(t))
+
+    def __init__(self,
+                 t: ParseResults,
+                 instantiations: Union[tuple, list, str, ParseResults] = ()):
+        self.name = t[-1]  # the name is the last element in this list
+        self.namespaces = t[:-1]
+
+        if instantiations:
+            if isinstance(instantiations, Iterable):
+                self.instantiations = instantiations  # type: ignore
+            else:
+                self.instantiations = instantiations.asList()
+        else:
+            self.instantiations = []
+
+        if self.name in ["Matrix", "Vector"] and not self.namespaces:
+            self.namespaces = ["gtsam"]
+
+    @staticmethod
+    def from_parse_result(parse_result: Union[str, list]):
+        """Unpack the parsed result to get the Typename instance."""
+        return parse_result[0]
+
+    def __repr__(self) -> str:
+        return self.to_cpp()
+
+    def instantiated_name(self) -> str:
+        """Get the instantiated name of the type."""
+        res = self.name
+        for instantiation in self.instantiations:
+            res += instantiation.instantiated_name()
+        return res
+
+    def qualified_name(self):
+        """Return the fully qualified name, e.g. `gtsam::internal::PoseKey`."""
+        return "::".join(self.namespaces + [self.name])
+
+    def to_cpp(self) -> str:
+        """Generate the C++ code for wrapping."""
+        idx = 1 if self.namespaces and not self.namespaces[0] else 0
+        if self.instantiations:
+            cpp_name = self.name + "<{}>".format(", ".join(
+                [inst.to_cpp() for inst in self.instantiations]))
+        else:
+            cpp_name = self.name
+        return '{}{}{}'.format(
+            "::".join(self.namespaces[idx:]),
+            "::" if self.namespaces[idx:] else "",
+            cpp_name,
+        )
+
+    def __eq__(self, other) -> bool:
+        if isinstance(other, Typename):
+            return str(self) == str(other)
+        else:
+            return False
+
+    def __ne__(self, other) -> bool:
+        res = self.__eq__(other)
+        return not res
+
+
+class BasicType:
+    """
+    Basic types are the fundamental built-in types in C++ such as double, int, char, etc.
+
+    When using templates, the basis type will take on the same form as the template.
+
+    E.g.
+    ```
+    template<T = {double}>
+    void func(const T& x);
+    ```
+
+    will give
+
+    ```
+    m_.def("CoolFunctionDoubleDouble",[](const double& s) {
+        return wrap_example::CoolFunction<double,double>(s);
+    }, py::arg("s"));
+    ```
+    """
+
+    rule = (Or(BASIS_TYPES)("typename")).setParseAction(lambda t: BasicType(t))
+
+    def __init__(self, t: ParseResults):
+        self.typename = Typename(t.asList())
+
+
+class CustomType:
+    """
+    Custom defined types with the namespace.
+    Essentially any C++ data type that is not a BasicType.
+
+    E.g.
+    ```
+    gtsam::Matrix wTc;
+    ```
+
+    Here `gtsam::Matrix` is a custom type.
+    """
+
+    rule = (Typename.rule("typename")).setParseAction(lambda t: CustomType(t))
+
+    def __init__(self, t: ParseResults):
+        self.typename = Typename(t)
+
+
+class Type:
+    """
+    Parsed datatype, can be either a fundamental type or a custom datatype.
+    E.g. void, double, size_t, Matrix.
+
+    The type can optionally be a raw pointer, shared pointer or reference.
+    Can also be optionally qualified with a `const`, e.g. `const int`.
+    """
+    rule = (
+        Optional(CONST("is_const"))  #
+        + (BasicType.rule("basis") | CustomType.rule("qualified"))  # BR
+        + Optional(
+            SHARED_POINTER("is_shared_ptr") | RAW_POINTER("is_ptr")
+            | REF("is_ref"))  #
+    ).setParseAction(lambda t: Type.from_parse_result(t))
+
+    def __init__(self, typename: Typename, is_const: str, is_shared_ptr: str,
+                 is_ptr: str, is_ref: str, is_basic: bool):
+        self.typename = typename
+        self.is_const = is_const
+        self.is_shared_ptr = is_shared_ptr
+        self.is_ptr = is_ptr
+        self.is_ref = is_ref
+        self.is_basic = is_basic
+
+    @staticmethod
+    def from_parse_result(t: ParseResults):
+        """Return the resulting Type from parsing the source."""
+        if t.basis:
+            return Type(
+                typename=t.basis.typename,
+                is_const=t.is_const,
+                is_shared_ptr=t.is_shared_ptr,
+                is_ptr=t.is_ptr,
+                is_ref=t.is_ref,
+                is_basic=True,
+            )
+        elif t.qualified:
+            return Type(
+                typename=t.qualified.typename,
+                is_const=t.is_const,
+                is_shared_ptr=t.is_shared_ptr,
+                is_ptr=t.is_ptr,
+                is_ref=t.is_ref,
+                is_basic=False,
+            )
+        else:
+            raise ValueError("Parse result is not a Type")
+
+    def __repr__(self) -> str:
+        return "{self.is_const} {self.typename} " \
+            "{self.is_shared_ptr}{self.is_ptr}{self.is_ref}".format(
+            self=self)
+
+    def to_cpp(self, use_boost: bool) -> str:
+        """
+        Generate the C++ code for wrapping.
+
+        Treat all pointers as "const shared_ptr<T>&"
+        Treat Matrix and Vector as "const Matrix&" and "const Vector&" resp.
+
+        Args:
+            use_boost: Flag indicating whether to use boost::shared_ptr or std::shared_ptr.
+        """
+        shared_ptr_ns = "boost" if use_boost else "std"
+
+        if self.is_shared_ptr:
+            typename = "{ns}::shared_ptr<{typename}>".format(
+                ns=shared_ptr_ns, typename=self.typename.to_cpp())
+        elif self.is_ptr:
+            typename = "{typename}*".format(typename=self.typename.to_cpp())
+        elif self.is_ref or self.typename.name in ["Matrix", "Vector"]:
+            typename = typename = "{typename}&".format(
+                typename=self.typename.to_cpp())
+        else:
+            typename = self.typename.to_cpp()
+
+        return ("{const}{typename}".format(
+            const="const " if
+            (self.is_const
+             or self.typename.name in ["Matrix", "Vector"]) else "",
+            typename=typename))
+
+
+class TemplatedType:
+    """
+    Parser rule for data types which are templated.
+    This is done so that the template parameters can be pointers/references.
+
+    E.g. std::vector<double>, BearingRange<Pose3, Point3>
+    """
+
+    rule = Forward()
+    rule << (
+        Optional(CONST("is_const"))  #
+        + Typename.rule("typename")  #
+        + (
+            LOPBRACK  #
+            + delimitedList(Type.rule ^ rule, ",")("template_params")  #
+            + ROPBRACK)  #
+        + Optional(
+            SHARED_POINTER("is_shared_ptr") | RAW_POINTER("is_ptr")
+            | REF("is_ref"))  #
+    ).setParseAction(lambda t: TemplatedType.from_parse_result(t))
+
+    def __init__(self, typename: Typename, template_params: List[Type],
+                 is_const: str, is_shared_ptr: str, is_ptr: str, is_ref: str):
+        instantiations = [param.typename for param in template_params]
+        # Recreate the typename but with the template params as instantiations.
+        self.typename = Typename(typename.namespaces + [typename.name],
+                                 instantiations)
+
+        self.template_params = template_params
+
+        self.is_const = is_const
+        self.is_shared_ptr = is_shared_ptr
+        self.is_ptr = is_ptr
+        self.is_ref = is_ref
+
+    @staticmethod
+    def from_parse_result(t: ParseResults):
+        """Get the TemplatedType from the parser results."""
+        return TemplatedType(t.typename, t.template_params, t.is_const,
+                             t.is_shared_ptr, t.is_ptr, t.is_ref)
+
+    def __repr__(self):
+        return "TemplatedType({typename.namespaces}::{typename.name})".format(
+            typename=self.typename)
+
+    def to_cpp(self, use_boost: bool):
+        """
+        Generate the C++ code for wrapping.
+
+        Args:
+            use_boost: Flag indicating whether to use boost::shared_ptr or std::shared_ptr.
+        """
+        # Use Type.to_cpp to do the heavy lifting for the template parameters.
+        template_args = ", ".join(
+            [t.to_cpp(use_boost) for t in self.template_params])
+
+        typename = "{typename}<{template_args}>".format(
+            typename=self.typename.qualified_name(),
+            template_args=template_args)
+
+        shared_ptr_ns = "boost" if use_boost else "std"
+        if self.is_shared_ptr:
+            typename = "{ns}::shared_ptr<{typename}>".format(ns=shared_ptr_ns,
+                                                             typename=typename)
+        elif self.is_ptr:
+            typename = "{typename}*".format(typename=typename)
+        elif self.is_ref or self.typename.name in ["Matrix", "Vector"]:
+            typename = typename = "{typename}&".format(typename=typename)
+        else:
+            pass
+
+        return ("{const}{typename}".format(
+            const="const " if
+            (self.is_const
+             or self.typename.name in ["Matrix", "Vector"]) else "",
+            typename=typename))
--- /dev/null
+++ gtsam-4.1.0/wrap/gtwrap/matlab_wrapper.py
@@ -0,0 +1,1940 @@
+"""
+Code to use the parsed results and convert it to a format
+that Matlab's MEX compiler can use.
+"""
+
+# pylint: disable=too-many-lines, no-self-use, too-many-arguments, too-many-branches, too-many-statements
+
+import os
+import os.path as osp
+import sys
+import textwrap
+from functools import partial, reduce
+from typing import Dict, Iterable, List, Union
+
+import gtwrap.interface_parser as parser
+import gtwrap.template_instantiator as instantiator
+
+
+class MatlabWrapper(object):
+    """ Wrap the given C++ code into Matlab.
+
+    Attributes
+        module: the C++ module being wrapped
+        module_name: name of the C++ module being wrapped
+        top_module_namespace: C++ namespace for the top module (default '')
+        ignore_classes: A list of classes to ignore (default [])
+    """
+    # Map the data type to its Matlab class.
+    # Found in Argument.cpp in old wrapper
+    data_type = {
+        'string': 'char',
+        'char': 'char',
+        'unsigned char': 'unsigned char',
+        'Vector': 'double',
+        'Matrix': 'double',
+        'int': 'numeric',
+        'size_t': 'numeric',
+        'bool': 'logical'
+    }
+    # Map the data type into the type used in Matlab methods.
+    # Found in matlab.h in old wrapper
+    data_type_param = {
+        'string': 'char',
+        'char': 'char',
+        'unsigned char': 'unsigned char',
+        'size_t': 'int',
+        'int': 'int',
+        'double': 'double',
+        'Point2': 'double',
+        'Point3': 'double',
+        'Vector': 'double',
+        'Matrix': 'double',
+        'bool': 'bool'
+    }
+    # Methods that should not be wrapped directly
+    whitelist = ['serializable', 'serialize']
+    # Methods that should be ignored
+    ignore_methods = ['pickle']
+    # Datatypes that do not need to be checked in methods
+    not_check_type: list = []
+    # Data types that are primitive types
+    not_ptr_type = ['int', 'double', 'bool', 'char', 'unsigned char', 'size_t']
+    # Ignore the namespace for these datatypes
+    ignore_namespace = ['Matrix', 'Vector', 'Point2', 'Point3']
+    # The amount of times the wrapper has created a call to geometry_wrapper
+    wrapper_id = 0
+    # Map each wrapper id to what its collector function namespace, class, type, and string format
+    wrapper_map: dict = {}
+    # Set of all the includes in the namespace
+    includes: Dict[parser.Include, int] = {}
+    # Set of all classes in the namespace
+    classes: List[Union[parser.Class, instantiator.InstantiatedClass]] = []
+    classes_elems: Dict[Union[parser.Class, instantiator.InstantiatedClass], int] = {}
+    # Id for ordering global functions in the wrapper
+    global_function_id = 0
+    # Files and their content
+    content: List[str] = []
+
+    # Ensure the template file is always picked up from the correct directory.
+    dir_path = osp.dirname(osp.realpath(__file__))
+    with open(osp.join(dir_path, "matlab_wrapper.tpl")) as f:
+        wrapper_file_header = f.read()
+
+    def __init__(self,
+                 module,
+                 module_name,
+                 top_module_namespace='',
+                 ignore_classes=()):
+        self.module = module
+        self.module_name = module_name
+        self.top_module_namespace = top_module_namespace
+        self.ignore_classes = ignore_classes
+        self.verbose = False
+
+    def _debug(self, message):
+        if not self.verbose:
+            return
+        print(message, file=sys.stderr)
+
+    def _add_include(self, include):
+        self.includes[include] = 0
+
+    def _add_class(self, instantiated_class):
+        if self.classes_elems.get(instantiated_class) is None:
+            self.classes_elems[instantiated_class] = 0
+            self.classes.append(instantiated_class)
+
+    def _update_wrapper_id(self, collector_function=None, id_diff=0):
+        """Get and define wrapper ids.
+
+        Generates the map of id -> collector function.
+
+        Args:
+            collector_function: tuple storing info about the wrapper function
+                (namespace, class instance, function type, function name,
+                extra)
+            id_diff: constant to add to the id in the map
+
+        Returns:
+            the current wrapper id
+        """
+        if collector_function is not None:
+            is_instantiated_class = isinstance(collector_function[1],
+                                               instantiator.InstantiatedClass)
+
+            if is_instantiated_class:
+                function_name = collector_function[0] + \
+                                collector_function[1].name + '_' + collector_function[2]
+            else:
+                function_name = collector_function[1].name
+
+            self.wrapper_map[self.wrapper_id] = (
+                collector_function[0], collector_function[1],
+                collector_function[2], function_name + '_' +
+                str(self.wrapper_id + id_diff), collector_function[3])
+
+        self.wrapper_id += 1
+
+        return self.wrapper_id - 1
+
+    def _qualified_name(self, names):
+        return 'handle' if names == '' else names
+
+    def _insert_spaces(self, x, y):
+        """Insert spaces at the beginning of each line
+
+        Args:
+            x: the statement currently generated
+            y: the addition to add to the statement
+        """
+        return x + '\n' + ('' if y == '' else '  ') + y
+
+    def _is_shared_ptr(self, arg_type):
+        """
+        Determine if the `interface_parser.Type` should be treated as a
+        shared pointer in the wrapper.
+        """
+        return arg_type.is_shared_ptr or (
+            arg_type.typename.name not in self.not_ptr_type
+            and arg_type.typename.name not in self.ignore_namespace
+            and arg_type.typename.name != 'string')
+
+    def _is_ptr(self, arg_type):
+        """
+        Determine if the `interface_parser.Type` should be treated as a
+        raw pointer in the wrapper.
+        """
+        return arg_type.is_ptr or (
+            arg_type.typename.name not in self.not_ptr_type
+            and arg_type.typename.name not in self.ignore_namespace
+            and arg_type.typename.name != 'string')
+
+    def _is_ref(self, arg_type):
+        """Determine if the interface_parser.Type should be treated as a
+        reference in the wrapper.
+        """
+        return arg_type.typename.name not in self.ignore_namespace and \
+               arg_type.typename.name not in self.not_ptr_type and \
+               arg_type.is_ref
+
+    def _group_methods(self, methods):
+        """Group overloaded methods together"""
+        method_map = {}
+        method_out = []
+
+        for method in methods:
+            method_index = method_map.get(method.name)
+
+            if method_index is None:
+                method_map[method.name] = len(method_out)
+                method_out.append([method])
+            else:
+                self._debug("[_group_methods] Merging {} with {}".format(
+                    method_index, method.name))
+                method_out[method_index].append(method)
+
+        return method_out
+
+    def _clean_class_name(self, instantiated_class):
+        """Reformatted the C++ class name to fit Matlab defined naming
+        standards
+        """
+        if len(instantiated_class.ctors) != 0:
+            return instantiated_class.ctors[0].name
+
+        return instantiated_class.name
+
+    @classmethod
+    def _format_type_name(cls,
+                          type_name,
+                          separator='::',
+                          include_namespace=True,
+                          constructor=False,
+                          method=False):
+        """
+        Args:
+            type_name: an interface_parser.Typename to reformat
+            separator: the statement to add between namespaces and typename
+            include_namespace: whether to include namespaces when reformatting
+            constructor: if the typename will be in a constructor
+            method: if the typename will be in a method
+
+        Raises:
+            constructor and method cannot both be true
+        """
+        if constructor and method:
+            raise Exception(
+                'Constructor and method parameters cannot both be True')
+
+        formatted_type_name = ''
+        name = type_name.name
+
+        if include_namespace:
+            for namespace in type_name.namespaces:
+                if name not in cls.ignore_namespace and namespace != '':
+                    formatted_type_name += namespace + separator
+
+        #self._debug("formatted_ns: {}, ns: {}".format(formatted_type_name, type_name.namespaces))
+        if constructor:
+            formatted_type_name += cls.data_type.get(name) or name
+        elif method:
+            formatted_type_name += cls.data_type_param.get(name) or name
+        else:
+            formatted_type_name += name
+
+        if separator == "::":  # C++
+            templates = []
+            for idx in range(len(type_name.instantiations)):
+                template = '{}'.format(
+                    cls._format_type_name(type_name.instantiations[idx],
+                                          include_namespace=include_namespace,
+                                          constructor=constructor,
+                                          method=method))
+                templates.append(template)
+
+            if len(templates) > 0:  # If there are no templates
+                formatted_type_name += '<{}>'.format(','.join(templates))
+
+        else:
+            for idx in range(len(type_name.instantiations)):
+                formatted_type_name += '{}'.format(
+                    cls._format_type_name(type_name.instantiations[idx],
+                                          separator=separator,
+                                          include_namespace=False,
+                                          constructor=constructor,
+                                          method=method))
+
+        return formatted_type_name
+
+    @classmethod
+    def _format_return_type(cls,
+                            return_type,
+                            include_namespace=False,
+                            separator="::"):
+        """Format return_type.
+
+        Args:
+            return_type: an interface_parser.ReturnType to reformat
+            include_namespace: whether to include namespaces when reformatting
+        """
+        return_wrap = ''
+
+        if cls._return_count(return_type) == 1:
+            return_wrap = cls._format_type_name(
+                return_type.type1.typename,
+                separator=separator,
+                include_namespace=include_namespace)
+        else:
+            return_wrap = 'pair< {type1}, {type2} >'.format(
+                type1=cls._format_type_name(
+                    return_type.type1.typename,
+                    separator=separator,
+                    include_namespace=include_namespace),
+                type2=cls._format_type_name(
+                    return_type.type2.typename,
+                    separator=separator,
+                    include_namespace=include_namespace))
+
+        return return_wrap
+
+    def _format_class_name(self, instantiated_class, separator=''):
+        """Format a template_instantiator.InstantiatedClass name."""
+        if instantiated_class.parent == '':
+            parent_full_ns = ['']
+        else:
+            parent_full_ns = instantiated_class.parent.full_namespaces()
+        # class_name = instantiated_class.parent.name
+        #
+        # if class_name != '':
+        #     class_name += separator
+        #
+        # class_name += instantiated_class.name
+        parentname = "".join([separator + x
+                              for x in parent_full_ns]) + separator
+
+        class_name = parentname[2 * len(separator):]
+
+        class_name += instantiated_class.name
+
+        return class_name
+
+    def _format_static_method(self, static_method, separator=''):
+        """Example:
+
+                gtsamPoint3.staticFunction
+        """
+        method = ''
+
+        if isinstance(static_method, parser.StaticMethod):
+            method += "".join([separator + x for x in static_method.parent.namespaces()]) + \
+                      separator + static_method.parent.name + separator
+
+        return method[2 * len(separator):]
+
+    def _format_instance_method(self, instance_method, separator=''):
+        """Example:
+
+                gtsamPoint3.staticFunction
+        """
+        method = ''
+
+        if isinstance(instance_method, instantiator.InstantiatedMethod):
+            method_list = [
+                separator + x
+                for x in instance_method.parent.parent.full_namespaces()
+            ]
+            method += "".join(method_list) + separator
+
+            method += instance_method.parent.name + separator
+            method += instance_method.original.name
+            method += "<" + instance_method.instantiations.to_cpp() + ">"
+
+        return method[2 * len(separator):]
+
+    def _format_global_method(self, static_method, separator=''):
+        """Example:
+
+                gtsamPoint3.staticFunction
+        """
+        method = ''
+
+        if isinstance(static_method, parser.GlobalFunction):
+            method += "".join([separator + x for x in static_method.parent.full_namespaces()]) + \
+                      separator
+
+        return method[2 * len(separator):]
+
+    def _wrap_args(self, args):
+        """Wrap an interface_parser.ArgumentList into a list of arguments.
+
+        Returns:
+            A string representation of the arguments. For example:
+                'int x, double y'
+        """
+        arg_wrap = ''
+
+        for i, arg in enumerate(args.args_list, 1):
+            c_type = self._format_type_name(arg.ctype.typename,
+                                            include_namespace=False)
+
+            arg_wrap += '{c_type} {arg_name}{comma}'.format(
+                c_type=c_type,
+                arg_name=arg.name,
+                comma='' if i == len(args.args_list) else ', ')
+
+        return arg_wrap
+
+    def _wrap_variable_arguments(self, args, wrap_datatypes=True):
+        """ Wrap an interface_parser.ArgumentList into a statement of argument
+        checks.
+
+        Returns:
+            A string representation of a variable arguments for an if
+            statement. For example:
+                ' && isa(varargin{1},'double') && isa(varargin{2},'numeric')'
+        """
+        var_arg_wrap = ''
+
+        for i, arg in enumerate(args.args_list, 1):
+            name = arg.ctype.typename.name
+            if name in self.not_check_type:
+                continue
+
+            check_type = self.data_type_param.get(name)
+
+            if self.data_type.get(check_type):
+                check_type = self.data_type[check_type]
+
+            if check_type is None:
+                check_type = self._format_type_name(
+                    arg.ctype.typename,
+                    separator='.',
+                    constructor=not wrap_datatypes)
+
+            var_arg_wrap += " && isa(varargin{{{num}}},'{data_type}')".format(
+                num=i, data_type=check_type)
+            if name == 'Vector':
+                var_arg_wrap += ' && size(varargin{{{num}}},2)==1'.format(
+                    num=i)
+            if name == 'Point2':
+                var_arg_wrap += ' && size(varargin{{{num}}},1)==2'.format(
+                    num=i)
+                var_arg_wrap += ' && size(varargin{{{num}}},2)==1'.format(
+                    num=i)
+            if name == 'Point3':
+                var_arg_wrap += ' && size(varargin{{{num}}},1)==3'.format(
+                    num=i)
+                var_arg_wrap += ' && size(varargin{{{num}}},2)==1'.format(
+                    num=i)
+
+        return var_arg_wrap
+
+    def _wrap_list_variable_arguments(self, args):
+        """ Wrap an interface_parser.ArgumentList into a list of argument
+        variables.
+
+        Returns:
+            A string representation of a list of variable arguments.
+            For example:
+                'varargin{1}, varargin{2}, varargin{3}'
+        """
+        var_list_wrap = ''
+        first = True
+
+        for i in range(1, len(args.args_list) + 1):
+            if first:
+                var_list_wrap += 'varargin{{{}}}'.format(i)
+                first = False
+            else:
+                var_list_wrap += ', varargin{{{}}}'.format(i)
+
+        return var_list_wrap
+
+    def _wrap_method_check_statement(self, args):
+        """
+        Wrap the given arguments into either just a varargout call or a
+        call in an if statement that checks if the parameters are accurate.
+        """
+        check_statement = ''
+        arg_id = 1
+
+        if check_statement == '':
+            check_statement = \
+                'if length(varargin) == {param_count}'.format(
+                    param_count=len(args.args_list))
+
+        for _, arg in enumerate(args.args_list):
+            name = arg.ctype.typename.name
+
+            if name in self.not_check_type:
+                arg_id += 1
+                continue
+
+            check_type = self.data_type_param.get(name)
+
+            if self.data_type.get(check_type):
+                check_type = self.data_type[check_type]
+
+            if check_type is None:
+                check_type = self._format_type_name(arg.ctype.typename,
+                                                    separator='.')
+
+            check_statement += " && isa(varargin{{{id}}},'{ctype}')".format(
+                id=arg_id, ctype=check_type)
+
+            if name == 'Vector':
+                check_statement += ' && size(varargin{{{num}}},2)==1'.format(
+                    num=arg_id)
+            if name == 'Point2':
+                check_statement += ' && size(varargin{{{num}}},1)==2'.format(
+                    num=arg_id)
+                check_statement += ' && size(varargin{{{num}}},2)==1'.format(
+                    num=arg_id)
+            if name == 'Point3':
+                check_statement += ' && size(varargin{{{num}}},1)==3'.format(
+                    num=arg_id)
+                check_statement += ' && size(varargin{{{num}}},2)==1'.format(
+                    num=arg_id)
+
+            arg_id += 1
+
+        check_statement = check_statement \
+            if check_statement == '' \
+            else check_statement + '\n'
+
+        return check_statement
+
+    def _wrapper_unwrap_arguments(self, args, arg_id=0, constructor=False):
+        """Format the interface_parser.Arguments.
+
+        Examples:
+            ((a), unsigned char a = unwrap< unsigned char >(in[1]);),
+            ((a), Test& t = *unwrap_shared_ptr< Test >(in[1], "ptr_Test");),
+            ((a), std::shared_ptr<Test> p1 = unwrap_shared_ptr< Test >(in[1], "ptr_Test");)
+        """
+        params = ''
+        body_args = ''
+
+        for arg in args.args_list:
+            if params != '':
+                params += ','
+
+            if self._is_ref(arg.ctype):  # and not constructor:
+                ctype_camel = self._format_type_name(arg.ctype.typename,
+                                                     separator='')
+                body_args += textwrap.indent(textwrap.dedent('''\
+                   {ctype}& {name} = *unwrap_shared_ptr< {ctype} >(in[{id}], "ptr_{ctype_camel}");
+                '''.format(ctype=self._format_type_name(arg.ctype.typename),
+                           ctype_camel=ctype_camel,
+                           name=arg.name,
+                           id=arg_id)),
+                                             prefix='  ')
+
+            elif (self._is_shared_ptr(arg.ctype) or self._is_ptr(arg.ctype)) and \
+                    arg.ctype.typename.name not in self.ignore_namespace:
+                if arg.ctype.is_shared_ptr:
+                    call_type = arg.ctype.is_shared_ptr
+                else:
+                    call_type = arg.ctype.is_ptr
+
+                body_args += textwrap.indent(textwrap.dedent('''\
+                    {std_boost}::shared_ptr<{ctype_sep}> {name} = unwrap_shared_ptr< {ctype_sep} >(in[{id}], "ptr_{ctype}");
+                '''.format(std_boost='boost' if constructor else 'boost',
+                           ctype_sep=self._format_type_name(
+                               arg.ctype.typename),
+                           ctype=self._format_type_name(arg.ctype.typename,
+                                                        separator=''),
+                           name=arg.name,
+                           id=arg_id)),
+                                             prefix='  ')
+                if call_type == "":
+                    params += "*"
+
+            else:
+                body_args += textwrap.indent(textwrap.dedent('''\
+                    {ctype} {name} = unwrap< {ctype} >(in[{id}]);
+                '''.format(ctype=arg.ctype.typename.name,
+                           name=arg.name,
+                           id=arg_id)),
+                                             prefix='  ')
+
+            params += arg.name
+
+            arg_id += 1
+
+        return params, body_args
+
+    @staticmethod
+    def _return_count(return_type):
+        """The amount of objects returned by the given
+        interface_parser.ReturnType.
+        """
+        return 1 if return_type.type2 == '' else 2
+
+    def _wrapper_name(self):
+        """Determine the name of wrapper function."""
+        return self.module_name + '_wrapper'
+
+    def class_serialize_comment(self, class_name, static_methods):
+        """Generate comments for serialize methods."""
+        comment_wrap = ''
+        static_methods = sorted(static_methods, key=lambda name: name.name)
+
+        for static_method in static_methods:
+            if comment_wrap == '':
+                comment_wrap = '%-------Static Methods-------\n'
+
+            comment_wrap += '%{name}({args}) : returns {return_type}\n'.format(
+                name=static_method.name,
+                args=self._wrap_args(static_method.args),
+                return_type=self._format_return_type(static_method.return_type,
+                                                     include_namespace=True))
+
+        comment_wrap += textwrap.dedent('''\
+            %
+            %-------Serialization Interface-------
+            %string_serialize() : returns string
+            %string_deserialize(string serialized) : returns {class_name}
+            %
+        ''').format(class_name=class_name)
+
+        return comment_wrap
+
+    def class_comment(self, instantiated_class):
+        """Generate comments for the given class in Matlab.
+
+        Args
+            instantiated_class: the class being wrapped
+            ctors: a list of the constructors in the class
+            methods: a list of the methods in the class
+        """
+        class_name = instantiated_class.name
+        ctors = instantiated_class.ctors
+        methods = instantiated_class.methods
+        static_methods = instantiated_class.static_methods
+
+        comment = textwrap.dedent('''\
+            %class {class_name}, see Doxygen page for details
+            %at https://gtsam.org/doxygen/
+        ''').format(class_name=class_name)
+
+        if len(ctors) != 0:
+            comment += '%\n%-------Constructors-------\n'
+
+        # Write constructors
+        for ctor in ctors:
+            comment += '%{ctor_name}({args})\n'.format(ctor_name=ctor.name,
+                                                       args=self._wrap_args(
+                                                           ctor.args))
+
+        if len(methods) != 0:
+            comment += '%\n' \
+                       '%-------Methods-------\n'
+
+        methods = sorted(methods, key=lambda name: name.name)
+
+        # Write methods
+        for method in methods:
+            if method.name in self.whitelist:
+                continue
+            if method.name in self.ignore_methods:
+                continue
+
+            comment += '%{name}({args})'.format(name=method.name,
+                                                args=self._wrap_args(
+                                                    method.args))
+
+            if method.return_type.type2 == '':
+                return_type = self._format_type_name(
+                    method.return_type.type1.typename)
+            else:
+                return_type = 'pair< {type1}, {type2} >'.format(
+                    type1=self._format_type_name(
+                        method.return_type.type1.typename),
+                    type2=self._format_type_name(
+                        method.return_type.type2.typename))
+
+            comment += ' : returns {return_type}\n'.format(
+                return_type=return_type)
+
+        comment += '%\n'
+
+        if len(static_methods) != 0:
+            comment += self.class_serialize_comment(class_name, static_methods)
+
+        return comment
+
+    def generate_matlab_wrapper(self):
+        """Generate the C++ file for the wrapper."""
+        file_name = self._wrapper_name() + '.cpp'
+
+        wrapper_file = self.wrapper_file_header
+
+        return file_name, wrapper_file
+
+    def wrap_method(self, methods):
+        """Wrap methods in the body of a class."""
+        if not isinstance(methods, list):
+            methods = [methods]
+
+        # for method in methods:
+        #     output = ''
+
+        return ''
+
+    def wrap_methods(self, methods, global_funcs=False, global_ns=None):
+        """
+        Wrap a sequence of methods. Groups methods with the same names
+        together.
+        If global_funcs is True then output every method into its own file.
+        """
+        output = ''
+        methods = self._group_methods(methods)
+
+        for method in methods:
+            if method in self.ignore_methods:
+                continue
+
+            if global_funcs:
+                self._debug("[wrap_methods] wrapping: {}..{}={}".format(
+                    method[0].parent.name, method[0].name,
+                    type(method[0].parent.name)))
+
+                method_text = self.wrap_global_function(method)
+                self.content.append(("".join([
+                    '+' + x + '/' for x in global_ns.full_namespaces()[1:]
+                ])[:-1], [(method[0].name + '.m', method_text)]))
+            else:
+                method_text = self.wrap_method(method)
+                output += ''
+
+        return output
+
+    def wrap_global_function(self, function):
+        """Wrap the given global function."""
+        if not isinstance(function, list):
+            function = [function]
+
+        function_name = function[0].name
+
+        # Get all combinations of parameters
+        param_wrap = ''
+
+        for i, overload in enumerate(function):
+            param_wrap += '      if' if i == 0 else '      elseif'
+            param_wrap += ' length(varargin) == '
+
+            if len(overload.args.args_list) == 0:
+                param_wrap += '0\n'
+            else:
+                param_wrap += str(len(overload.args.args_list)) \
+                              + self._wrap_variable_arguments(overload.args, False) + '\n'
+
+            # Determine format of return and varargout statements
+            return_type_formatted = self._format_return_type(
+                overload.return_type, include_namespace=True, separator=".")
+            varargout = self._format_varargout(overload.return_type,
+                                               return_type_formatted)
+
+            param_wrap += textwrap.indent(textwrap.dedent('''\
+                {varargout}{module_name}_wrapper({num}, varargin{{:}});
+            ''').format(varargout=varargout,
+                        module_name=self.module_name,
+                        num=self._update_wrapper_id(
+                            collector_function=(function[0].parent.name,
+                                                function[i], 'global_function',
+                                                None))),
+                                          prefix='        ')
+
+        param_wrap += textwrap.indent(textwrap.dedent('''\
+            else
+              error('Arguments do not match any overload of function {func_name}');
+        ''').format(func_name=function_name),
+                                      prefix='      ')
+
+        global_function = textwrap.indent(textwrap.dedent('''\
+            function varargout = {m_method}(varargin)
+            {statements}      end
+        ''').format(m_method=function_name, statements=param_wrap),
+                                          prefix='')
+
+        return global_function
+
+    def wrap_class_constructors(self, namespace_name, inst_class, parent_name,
+                                ctors, is_virtual):
+        """Wrap class constructor.
+
+        Args:
+            namespace_name: the name of the namespace ('' if it does not exist)
+            inst_class: instance of the class
+            parent_name: the name of the parent class if it exists
+            ctors: the interface_parser.Constructor in the class
+            is_virtual: whether the class is part of a virtual inheritance
+                chain
+        """
+        has_parent = parent_name != ''
+        class_name = inst_class.name
+        if has_parent:
+            parent_name = self._format_type_name(parent_name, separator=".")
+        if not isinstance(ctors, Iterable):
+            ctors = [ctors]
+
+        methods_wrap = textwrap.indent(textwrap.dedent("""\
+            methods
+              function obj = {class_name}(varargin)
+        """).format(class_name=class_name),
+                                       prefix='')
+
+        if is_virtual:
+            methods_wrap += "    if (nargin == 2 || (nargin == 3 && strcmp(varargin{3}, 'void')))"
+        else:
+            methods_wrap += '    if nargin == 2'
+
+        methods_wrap += " && isa(varargin{1}, 'uint64')"
+        methods_wrap += " && varargin{1} == uint64(5139824614673773682)\n"
+
+        if is_virtual:
+            methods_wrap += textwrap.indent(textwrap.dedent('''\
+                if nargin == 2
+                  my_ptr = varargin{{2}};
+                else
+                  my_ptr = {wrapper_name}({id}, varargin{{2}});
+                end
+            ''').format(wrapper_name=self._wrapper_name(),
+                        id=self._update_wrapper_id() + 1),
+                                            prefix='      ')
+        else:
+            methods_wrap += '      my_ptr = varargin{2};\n'
+
+        collector_base_id = self._update_wrapper_id(
+            (namespace_name, inst_class, 'collectorInsertAndMakeBase', None),
+            id_diff=-1 if is_virtual else 0)
+
+        methods_wrap += '      {ptr}{wrapper_name}({id}, my_ptr);\n' \
+            .format(
+            ptr='base_ptr = ' if has_parent else '',
+            wrapper_name=self._wrapper_name(),
+            id=collector_base_id - (1 if is_virtual else 0))
+
+        for ctor in ctors:
+            wrapper_return = '[ my_ptr, base_ptr ] = ' \
+                if has_parent \
+                else 'my_ptr = '
+
+            methods_wrap += textwrap.indent(textwrap.dedent('''\
+                elseif nargin == {len}{varargin}
+                  {ptr}{wrapper}({num}{comma}{var_arg});
+            ''').format(len=len(ctor.args.args_list),
+                        varargin=self._wrap_variable_arguments(
+                            ctor.args, False),
+                        ptr=wrapper_return,
+                        wrapper=self._wrapper_name(),
+                        num=self._update_wrapper_id(
+                            (namespace_name, inst_class, 'constructor', ctor)),
+                        comma='' if len(ctor.args.args_list) == 0 else ', ',
+                        var_arg=self._wrap_list_variable_arguments(ctor.args)),
+                                            prefix='    ')
+
+        base_obj = ''
+
+        if has_parent:
+            self._debug("class: {} ns: {}".format(
+                parent_name,
+                self._format_class_name(inst_class.parent, separator=".")))
+
+        if has_parent:
+            base_obj = '  obj = obj@{parent_name}(uint64(5139824614673773682), base_ptr);'.format(
+                parent_name=parent_name)
+
+        if base_obj:
+            base_obj = '\n' + base_obj
+
+        self._debug("class: {}, name: {}".format(
+            inst_class.name, self._format_class_name(inst_class,
+                                                     separator=".")))
+        methods_wrap += textwrap.indent(textwrap.dedent('''\
+              else
+                error('Arguments do not match any overload of {class_name_doc} constructor');
+              end{base_obj}
+              obj.ptr_{class_name} = my_ptr;
+            end\n
+        ''').format(namespace=namespace_name,
+                    d='' if namespace_name == '' else '.',
+                    class_name_doc=self._format_class_name(inst_class,
+                                                           separator="."),
+                    class_name=self._format_class_name(inst_class,
+                                                       separator=""),
+                    base_obj=base_obj),
+                                        prefix='  ')
+
+        return methods_wrap
+
+    def wrap_class_properties(self, class_name):
+        """Generate properties of class."""
+        return textwrap.dedent('''\
+            properties
+              ptr_{} = 0
+            end
+        ''').format(class_name)
+
+    def wrap_class_deconstructor(self, namespace_name, inst_class):
+        """Generate the delete function for the Matlab class."""
+        class_name = inst_class.name
+
+        methods_text = textwrap.indent(textwrap.dedent("""\
+            function delete(obj)
+              {wrapper}({num}, obj.ptr_{class_name});
+            end\n
+        """).format(num=self._update_wrapper_id(
+            (namespace_name, inst_class, 'deconstructor', None)),
+                    wrapper=self._wrapper_name(),
+                    class_name="".join(inst_class.parent.full_namespaces()) +
+                    class_name),
+                                       prefix='  ')
+
+        return methods_text
+
+    def wrap_class_display(self):
+        """Generate the display function for the Matlab class."""
+        return textwrap.indent(textwrap.dedent("""\
+            function display(obj), obj.print(''); end
+            %DISPLAY Calls print on the object
+            function disp(obj), obj.display; end
+            %DISP Calls print on the object
+        """),
+                               prefix='  ')
+
+    def _group_class_methods(self, methods):
+        """Group overloaded methods together"""
+        method_map = {}
+        method_out = []
+
+        for method in methods:
+            method_index = method_map.get(method.name)
+
+            if method_index is None:
+                method_map[method.name] = len(method_out)
+                method_out.append([method])
+            else:
+                # print("[_group_methods] Merging {} with {}".format(method_index, method.name))
+                method_out[method_index].append(method)
+
+        return method_out
+
+    @classmethod
+    def _format_varargout(cls, return_type, return_type_formatted):
+        """Determine format of return and varargout statements"""
+        if cls._return_count(return_type) == 1:
+            varargout = '' \
+                if return_type_formatted == 'void' \
+                else 'varargout{1} = '
+        else:
+            varargout = '[ varargout{1} varargout{2} ] = '
+
+        return varargout
+
+    def wrap_class_methods(self,
+                           namespace_name,
+                           inst_class,
+                           methods,
+                           serialize=(False,)):
+        """Wrap the methods in the class.
+
+        Args:
+            namespace_name: the name of the class's namespace
+            inst_class: the instantiated class whose methods to wrap
+            methods: the methods to wrap in the order to wrap them
+            serialize: mutable param storing if one of the methods is serialize
+        """
+        method_text = ''
+
+        methods = self._group_class_methods(methods)
+
+        # Convert to list so that it is mutable
+        if isinstance(serialize, tuple):
+            serialize = list(serialize)
+
+        for method in methods:
+            method_name = method[0].name
+            if method_name in self.whitelist and method_name != 'serialize':
+                continue
+            if method_name in self.ignore_methods:
+                continue
+
+            if method_name == 'serialize':
+                serialize[0] = True
+                method_text += self.wrap_class_serialize_method(
+                    namespace_name, inst_class)
+            else:
+                # Generate method code
+                method_text += textwrap.indent(textwrap.dedent("""\
+                    function varargout = {method_name}(this, varargin)
+                    """).format(caps_name=method_name.upper(),
+                                method_name=method_name),
+                                               prefix='')
+
+                for overload in method:
+                    method_text += textwrap.indent(textwrap.dedent("""\
+                    % {caps_name} usage: {method_name}(""").format(
+                        caps_name=method_name.upper(),
+                        method_name=method_name),
+                                                   prefix='  ')
+
+                    # Determine format of return and varargout statements
+                    return_type_formatted = self._format_return_type(
+                        overload.return_type,
+                        include_namespace=True,
+                        separator=".")
+                    varargout = self._format_varargout(overload.return_type,
+                                                       return_type_formatted)
+
+                    check_statement = self._wrap_method_check_statement(
+                        overload.args)
+                    class_name = namespace_name + ('' if namespace_name == ''
+                                                   else '.') + inst_class.name
+
+                    end_statement = '' \
+                        if check_statement == '' \
+                        else textwrap.indent(textwrap.dedent("""\
+                              return
+                            end
+                        """).format(
+                        class_name=class_name,
+                        method_name=overload.original.name), prefix='  ')
+
+                    method_text += textwrap.dedent("""\
+                        {method_args}) : returns {return_type}
+                          % Doxygen can be found at https://gtsam.org/doxygen/
+                          {check_statement}{spacing}{varargout}{wrapper}({num}, this, varargin{{:}});
+                        {end_statement}""").format(
+                        method_args=self._wrap_args(overload.args),
+                        return_type=return_type_formatted,
+                        num=self._update_wrapper_id(
+                            (namespace_name, inst_class,
+                             overload.original.name, overload)),
+                        check_statement=check_statement,
+                        spacing='' if check_statement == '' else '    ',
+                        varargout=varargout,
+                        wrapper=self._wrapper_name(),
+                        end_statement=end_statement)
+
+                final_statement = textwrap.indent(textwrap.dedent("""\
+                    error('Arguments do not match any overload of function {class_name}.{method_name}');
+                """.format(class_name=class_name, method_name=method_name)),
+                                                  prefix='  ')
+                method_text += final_statement + 'end\n\n'
+
+        return method_text
+
+    def wrap_static_methods(self, namespace_name, instantiated_class,
+                            serialize):
+        """
+        Wrap the static methods in the class.
+        """
+        class_name = instantiated_class.name
+
+        method_text = 'methods(Static = true)\n'
+        static_methods = sorted(instantiated_class.static_methods,
+                                key=lambda name: name.name)
+
+        static_methods = self._group_class_methods(static_methods)
+
+        for static_method in static_methods:
+            format_name = list(static_method[0].name)
+            format_name[0] = format_name[0].upper()
+
+            if static_method[0].name in self.ignore_methods:
+                continue
+
+            method_text += textwrap.indent(textwrap.dedent('''\
+                    function varargout = {name}(varargin)
+                    '''.format(name=''.join(format_name))),
+                                           prefix="  ")
+
+            for static_overload in static_method:
+                check_statement = self._wrap_method_check_statement(
+                    static_overload.args)
+
+                end_statement = '' \
+                    if check_statement == '' \
+                    else textwrap.indent(textwrap.dedent("""
+                              return
+                            end
+                            """), prefix='')
+                method_text += textwrap.indent(textwrap.dedent('''\
+                      % {name_caps} usage: {name_upper_case}({args}) : returns {return_type}
+                      % Doxygen can be found at https://gtsam.org/doxygen/
+                      {check_statement}{spacing}varargout{{1}} = {wrapper}({id}, varargin{{:}});{end_statement}
+                      ''').format(
+                    name=''.join(format_name),
+                    name_caps=static_overload.name.upper(),
+                    name_upper_case=static_overload.name,
+                    args=self._wrap_args(static_overload.args),
+                    return_type=self._format_return_type(
+                        static_overload.return_type,
+                        include_namespace=True,
+                        separator="."),
+                    length=len(static_overload.args.args_list),
+                    var_args_list=self._wrap_variable_arguments(
+                        static_overload.args),
+                    check_statement=check_statement,
+                    spacing='' if check_statement == '' else '  ',
+                    wrapper=self._wrapper_name(),
+                    id=self._update_wrapper_id(
+                        (namespace_name, instantiated_class,
+                         static_overload.name, static_overload)),
+                    class_name=instantiated_class.name,
+                    end_statement=end_statement),
+                                               prefix='    ')
+
+            #TODO Figure out what is static_overload doing here.
+            method_text += textwrap.indent(textwrap.dedent("""\
+                    error('Arguments do not match any overload of function {class_name}.{method_name}');
+                """.format(class_name=class_name,
+                           method_name=static_overload.name)),
+                                           prefix='    ')
+
+            method_text += textwrap.indent(textwrap.dedent("""\
+                                    end\n
+                """), prefix="  ")
+
+        if serialize:
+            method_text += textwrap.indent(textwrap.dedent("""\
+                function varargout = string_deserialize(varargin)
+                  % STRING_DESERIALIZE usage: string_deserialize() : returns {class_name}
+                  % Doxygen can be found at https://gtsam.org/doxygen/
+                  if length(varargin) == 1
+                    varargout{{1}} = {wrapper}({id}, varargin{{:}});
+                  else
+                    error('Arguments do not match any overload of function {class_name}.string_deserialize');
+                  end
+                end\n
+                function obj = loadobj(sobj)
+                  % LOADOBJ Saves the object to a matlab-readable format
+                  obj = {class_name}.string_deserialize(sobj);
+                end
+            """).format(
+                class_name=namespace_name + '.' + instantiated_class.name,
+                wrapper=self._wrapper_name(),
+                id=self._update_wrapper_id(
+                    (namespace_name, instantiated_class, 'string_deserialize',
+                     'deserialize'))),
+                                           prefix='  ')
+
+        return method_text
+
+    def wrap_instantiated_class(self, instantiated_class, namespace_name=''):
+        """Generate comments and code for given class.
+
+        Args:
+            instantiated_class: template_instantiator.InstantiatedClass
+                instance storing the class to wrap
+            namespace_name: the name of the namespace if there is one
+        """
+        file_name = self._clean_class_name(instantiated_class)
+        namespace_file_name = namespace_name + file_name
+
+        uninstantiated_name = "::".join(instantiated_class.namespaces()
+                                        [1:]) + "::" + instantiated_class.name
+        if uninstantiated_name in self.ignore_classes:
+            return None
+
+        # Class comment
+        content_text = self.class_comment(instantiated_class)
+        content_text += self.wrap_methods(instantiated_class.methods)
+
+        # Class definition
+        # if namespace_name:
+        #     print("nsname: {}, file_name_: {}, filename: {}"
+        #           .format(namespace_name,
+        #                   self._clean_class_name(instantiated_class), file_name)
+        #           , file=sys.stderr)
+        content_text += 'classdef {class_name} < {parent}\n'.format(
+            class_name=file_name,
+            parent=str(self._qualified_name(
+                instantiated_class.parent_class)).replace("::", "."))
+
+        # Class properties
+        content_text += '  ' + reduce(
+            self._insert_spaces,
+            self.wrap_class_properties(
+                namespace_file_name).splitlines()) + '\n'
+
+        # Class constructor
+        content_text += '  ' + reduce(
+            self._insert_spaces,
+            self.wrap_class_constructors(
+                namespace_name,
+                instantiated_class,
+                instantiated_class.parent_class,
+                instantiated_class.ctors,
+                instantiated_class.is_virtual,
+            ).splitlines()) + '\n'
+
+        # Delete function
+        content_text += '  ' + reduce(
+            self._insert_spaces,
+            self.wrap_class_deconstructor(
+                namespace_name, instantiated_class).splitlines()) + '\n'
+
+        # Display function
+        content_text += '  ' + reduce(
+            self._insert_spaces,
+            self.wrap_class_display().splitlines()) + '\n'
+
+        # Class methods
+        serialize = [False]
+
+        if len(instantiated_class.methods) != 0:
+            methods = sorted(instantiated_class.methods,
+                             key=lambda name: name.name)
+            class_methods_wrapped = self.wrap_class_methods(
+                namespace_name,
+                instantiated_class,
+                methods,
+                serialize=serialize).splitlines()
+            if len(class_methods_wrapped) > 0:
+                content_text += '    ' + reduce(
+                    lambda x, y: x + '\n' + ('' if y == '' else '    ') + y,
+                    class_methods_wrapped) + '\n'
+
+        # Static class methods
+        content_text += '  end\n\n  ' + reduce(
+            self._insert_spaces,
+            self.wrap_static_methods(namespace_name, instantiated_class,
+                                     serialize[0]).splitlines()) + '\n'
+
+        content_text += textwrap.dedent('''\
+              end
+            end
+        ''')
+
+        return file_name + '.m', content_text
+
+    def wrap_namespace(self, namespace, parent=()):
+        """Wrap a namespace by wrapping all of its components.
+
+        Args:
+            namespace: the interface_parser.namespace instance of the namespace
+            parent: parent namespace
+        """
+        test_output = ''
+        namespaces = namespace.full_namespaces()
+        inner_namespace = namespace.name != ''
+        wrapped = []
+        self._debug("wrapping ns: {}, parent: {}".format(
+            namespace.full_namespaces(), parent))
+
+        matlab_wrapper = self.generate_matlab_wrapper()
+        self.content.append((matlab_wrapper[0], matlab_wrapper[1]))
+
+        current_scope = []
+        namespace_scope = []
+
+        for element in namespace.content:
+            if isinstance(element, parser.Include):
+                self._add_include(element)
+            elif isinstance(element, parser.Namespace):
+                self.wrap_namespace(element, namespaces)
+            elif isinstance(element, instantiator.InstantiatedClass):
+                self._add_class(element)
+
+                if inner_namespace:
+                    class_text = self.wrap_instantiated_class(
+                        element, "".join(namespace.full_namespaces()))
+
+                    if not class_text is None:
+                        namespace_scope.append(("".join([
+                            '+' + x + '/'
+                            for x in namespace.full_namespaces()[1:]
+                        ])[:-1], [(class_text[0], class_text[1])]))
+                else:
+                    class_text = self.wrap_instantiated_class(element)
+                    current_scope.append((class_text[0], class_text[1]))
+
+        self.content.extend(current_scope)
+
+        if inner_namespace:
+            self.content.append(namespace_scope)
+
+        # Global functions
+        all_funcs = [
+            func for func in namespace.content
+            if isinstance(func, parser.GlobalFunction)
+        ]
+
+        test_output += self.wrap_methods(all_funcs, True, global_ns=namespace)
+
+        return wrapped
+
+    def wrap_collector_function_shared_return(self,
+                                              return_type_name,
+                                              shared_obj,
+                                              func_id,
+                                              new_line=True):
+        """Wrap the collector function which returns a shared pointer."""
+        new_line = '\n' if new_line else ''
+
+        return textwrap.indent(textwrap.dedent('''\
+            {{
+            boost::shared_ptr<{name}> shared({shared_obj});
+            out[{id}] = wrap_shared_ptr(shared,"{name}");
+            }}{new_line}''').format(name=self._format_type_name(
+            return_type_name, include_namespace=False),
+                                    shared_obj=shared_obj,
+                                    id=func_id,
+                                    new_line=new_line),
+                               prefix='  ')
+
+    def wrap_collector_function_return_types(self, return_type, func_id):
+        """
+        Wrap the return type of the collector function.
+        """
+        return_type_text = '  out[' + str(func_id) + '] = '
+        pair_value = 'first' if func_id == 0 else 'second'
+        new_line = '\n' if func_id == 0 else ''
+
+        if self._is_shared_ptr(return_type) or self._is_ptr(return_type):
+            shared_obj = 'pairResult.' + pair_value
+
+            if not (return_type.is_shared_ptr or return_type.is_ptr):
+                shared_obj = 'boost::make_shared<{name}>({shared_obj})' \
+                    .format(name=self._format_type_name(return_type.typename),
+                            shared_obj='pairResult.' + pair_value)
+
+            if return_type.typename.name in self.ignore_namespace:
+                return_type_text = self.wrap_collector_function_shared_return(
+                    return_type.typename, shared_obj, func_id, func_id == 0)
+            else:
+                return_type_text += 'wrap_shared_ptr({0},"{1}", false);{new_line}' \
+                    .format(shared_obj,
+                            self._format_type_name(return_type.typename,
+                                                   separator='.'),
+                            new_line=new_line)
+        else:
+            return_type_text += 'wrap< {0} >(pairResult.{1});{2}'.format(
+                self._format_type_name(return_type.typename, separator='.'),
+                pair_value, new_line)
+
+        return return_type_text
+
+    def wrap_collector_function_return(self, method):
+        """
+        Wrap the complete return type of the function.
+        """
+        expanded = ''
+
+        params = self._wrapper_unwrap_arguments(method.args, arg_id=1)[0]
+
+        return_1 = method.return_type.type1
+        return_count = self._return_count(method.return_type)
+        return_1_name = method.return_type.type1.typename.name
+        obj_start = ''
+
+        if isinstance(method, instantiator.InstantiatedMethod):
+            # method_name = method.original.name
+            method_name = method.to_cpp()
+            obj_start = 'obj->'
+
+            if method.instantiations:
+                # method_name += '<{}>'.format(
+                #     self._format_type_name(method.instantiations))
+                # method_name = self._format_instance_method(method, '::')
+                method = method.to_cpp()
+
+        elif isinstance(method, parser.GlobalFunction):
+            method_name = self._format_global_method(method, '::')
+            method_name += method.name
+
+        else:
+            if isinstance(method.parent, instantiator.InstantiatedClass):
+                method_name = method.parent.cpp_class() + "::"
+            else:
+                method_name = self._format_static_method(method, '::')
+            method_name += method.name
+
+        if "MeasureRange" in method_name:
+            self._debug("method: {}, method: {}, inst: {}".format(
+                method_name, method.name, method.parent.cpp_class()))
+
+        obj = '  ' if return_1_name == 'void' else ''
+        obj += '{}{}({})'.format(obj_start, method_name, params)
+
+        if return_1_name != 'void':
+            if return_count == 1:
+                if self._is_shared_ptr(return_1) or self._is_ptr(return_1):
+                    sep_method_name = partial(self._format_type_name,
+                                              return_1.typename,
+                                              include_namespace=True)
+
+                    if return_1.typename.name in self.ignore_namespace:
+                        expanded += self.wrap_collector_function_shared_return(
+                            return_1.typename, obj, 0, new_line=False)
+
+                    if return_1.is_shared_ptr or return_1.is_ptr:
+                        shared_obj = '{obj},"{method_name_sep}"'.format(
+                            obj=obj, method_name_sep=sep_method_name('.'))
+                    else:
+                        self._debug("Non-PTR: {}, {}".format(
+                            return_1, type(return_1)))
+                        self._debug("Inner type is: {}, {}".format(
+                            return_1.typename.name, sep_method_name('.')))
+                        self._debug("Inner type instantiations: {}".format(
+                            return_1.typename.instantiations))
+                        method_name_sep_dot = sep_method_name('.')
+                        shared_obj_template = 'boost::make_shared<{method_name_sep_col}>({obj}),' \
+                                              '"{method_name_sep_dot}"'
+                        shared_obj = shared_obj_template \
+                            .format(method_name_sep_col=sep_method_name(),
+                                    method_name_sep_dot=method_name_sep_dot,
+                                    obj=obj)
+
+                    if return_1.typename.name not in self.ignore_namespace:
+                        expanded += textwrap.indent(
+                            'out[0] = wrap_shared_ptr({}, false);'.format(
+                                shared_obj),
+                            prefix='  ')
+                else:
+                    expanded += '  out[0] = wrap< {} >({});'.format(
+                        return_1.typename.name, obj)
+            elif return_count == 2:
+                return_2 = method.return_type.type2
+
+                expanded += '  auto pairResult = {};\n'.format(obj)
+                expanded += self.wrap_collector_function_return_types(
+                    return_1, 0)
+                expanded += self.wrap_collector_function_return_types(
+                    return_2, 1)
+        else:
+            expanded += obj + ';'
+
+        return expanded
+
+    def wrap_collector_function_upcast_from_void(self, class_name, func_id,
+                                                 cpp_name):
+        """
+        Add function to upcast type from void type.
+        """
+        return textwrap.dedent('''\
+            void {class_name}_upcastFromVoid_{id}(int nargout, mxArray *out[], int nargin, const mxArray *in[]) {{
+              mexAtExit(&_deleteAllObjects);
+              typedef boost::shared_ptr<{cpp_name}> Shared;
+              boost::shared_ptr<void> *asVoid = *reinterpret_cast<boost::shared_ptr<void>**> (mxGetData(in[0]));
+              out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+              Shared *self = new Shared(boost::static_pointer_cast<{cpp_name}>(*asVoid));
+              *reinterpret_cast<Shared**>(mxGetData(out[0])) = self;
+            }}\n
+        ''').format(class_name=class_name, cpp_name=cpp_name, id=func_id)
+
+    def generate_collector_function(self, func_id):
+        """
+        Generate the complete collector function.
+        """
+        collector_func = self.wrapper_map.get(func_id)
+
+        if collector_func is None:
+            return ''
+
+        method_name = collector_func[3]
+
+        collector_function = "void {}" \
+            "(int nargout, mxArray *out[], int nargin, const mxArray *in[])\n".format(method_name)
+
+        if isinstance(collector_func[1], instantiator.InstantiatedClass):
+            body = '{\n'
+
+            extra = collector_func[4]
+
+            class_name = collector_func[0] + collector_func[1].name
+            class_name_separated = collector_func[1].cpp_class()
+            is_method = isinstance(extra, parser.Method)
+            is_static_method = isinstance(extra, parser.StaticMethod)
+
+            if collector_func[2] == 'collectorInsertAndMakeBase':
+                body += textwrap.indent(textwrap.dedent('''\
+                    mexAtExit(&_deleteAllObjects);
+                    typedef boost::shared_ptr<{class_name_sep}> Shared;\n
+                    Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+                    collector_{class_name}.insert(self);
+                ''').format(class_name_sep=class_name_separated,
+                            class_name=class_name),
+                                        prefix='  ')
+
+                if collector_func[1].parent_class:
+                    body += textwrap.indent(textwrap.dedent('''
+                        typedef boost::shared_ptr<{}> SharedBase;
+                        out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+                        *reinterpret_cast<SharedBase**>(mxGetData(out[0])) = new SharedBase(*self);
+                    ''').format(collector_func[1].parent_class),
+                                            prefix='  ')
+            elif collector_func[2] == 'constructor':
+                base = ''
+                params, body_args = self._wrapper_unwrap_arguments(
+                    extra.args, constructor=True)
+
+                if collector_func[1].parent_class:
+                    base += textwrap.indent(textwrap.dedent('''
+                        typedef boost::shared_ptr<{}> SharedBase;
+                        out[1] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+                        *reinterpret_cast<SharedBase**>(mxGetData(out[1])) = new SharedBase(*self);
+                    ''').format(collector_func[1].parent_class),
+                                            prefix='  ')
+
+                body += textwrap.dedent('''\
+                      mexAtExit(&_deleteAllObjects);
+                      typedef boost::shared_ptr<{class_name_sep}> Shared;\n
+                    {body_args}  Shared *self = new Shared(new {class_name_sep}({params}));
+                      collector_{class_name}.insert(self);
+                      out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+                      *reinterpret_cast<Shared**> (mxGetData(out[0])) = self;
+                    {base}''').format(class_name_sep=class_name_separated,
+                                      body_args=body_args,
+                                      params=params,
+                                      class_name=class_name,
+                                      base=base)
+            elif collector_func[2] == 'deconstructor':
+                body += textwrap.indent(textwrap.dedent('''\
+                    typedef boost::shared_ptr<{class_name_sep}> Shared;
+                    checkArguments("delete_{class_name}",nargout,nargin,1);
+                    Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+                    Collector_{class_name}::iterator item;
+                    item = collector_{class_name}.find(self);
+                    if(item != collector_{class_name}.end()) {{
+                      delete self;
+                      collector_{class_name}.erase(item);
+                    }}
+                ''').format(class_name_sep=class_name_separated,
+                            class_name=class_name),
+                                        prefix='  ')
+            elif extra == 'serialize':
+                body += self.wrap_collector_function_serialize(
+                    collector_func[1].name,
+                    full_name=collector_func[1].cpp_class(),
+                    namespace=collector_func[0])
+            elif extra == 'deserialize':
+                body += self.wrap_collector_function_deserialize(
+                    collector_func[1].name,
+                    full_name=collector_func[1].cpp_class(),
+                    namespace=collector_func[0])
+            elif is_method or is_static_method:
+                method_name = ''
+
+                if is_static_method:
+                    method_name = self._format_static_method(extra) + '.'
+
+                method_name += extra.name
+
+                # return_type = extra.return_type
+                # return_count = self._return_count(return_type)
+
+                return_body = self.wrap_collector_function_return(extra)
+                params, body_args = self._wrapper_unwrap_arguments(
+                    extra.args, arg_id=1 if is_method else 0)
+
+                shared_obj = ''
+
+                if is_method:
+                    shared_obj = '  auto obj = unwrap_shared_ptr<{class_name_sep}>' \
+                            '(in[0], "ptr_{class_name}");\n'.format(
+                                class_name_sep=class_name_separated,
+                                class_name=class_name)
+
+                body += '  checkArguments("{method_name}",nargout,nargin{min1},' \
+                        '{num_args});\n' \
+                        '{shared_obj}' \
+                        '{body_args}' \
+                        '{return_body}\n'.format(
+                    min1='-1' if is_method else '',
+                    shared_obj=shared_obj,
+                    method_name=method_name,
+                    num_args=len(extra.args.args_list),
+                    body_args=body_args,
+                    return_body=return_body)
+
+            body += '}\n'
+
+            if extra not in ['serialize', 'deserialize']:
+                body += '\n'
+
+            collector_function += body
+
+        else:
+            body = textwrap.dedent('''\
+                {{
+                  checkArguments("{function_name}",nargout,nargin,{len});
+            ''').format(function_name=collector_func[1].name,
+                        id=self.global_function_id,
+                        len=len(collector_func[1].args.args_list))
+
+            body += self._wrapper_unwrap_arguments(collector_func[1].args)[1]
+            body += self.wrap_collector_function_return(collector_func[1]) + '\n}\n'
+
+            collector_function += body
+
+            self.global_function_id += 1
+
+        return collector_function
+
+    def mex_function(self):
+        """
+        Generate the wrapped MEX function.
+        """
+        cases = ''
+        next_case = None
+
+        for wrapper_id in range(self.wrapper_id):
+            id_val = self.wrapper_map.get(wrapper_id)
+            set_next_case = False
+
+            if id_val is None:
+                id_val = self.wrapper_map.get(wrapper_id + 1)
+
+                if id_val is None:
+                    continue
+
+                set_next_case = True
+
+            cases += textwrap.indent(textwrap.dedent('''\
+                case {}:
+                  {}(nargout, out, nargin-1, in+1);
+                  break;
+                ''').format(wrapper_id, next_case if next_case else id_val[3]),
+                                     prefix='    ')
+
+            if set_next_case:
+                next_case = '{}_upcastFromVoid_{}'.format(
+                    id_val[1].name, wrapper_id + 1)
+            else:
+                next_case = None
+
+        mex_function = textwrap.dedent('''
+            void mexFunction(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+            {{
+              mstream mout;
+              std::streambuf *outbuf = std::cout.rdbuf(&mout);\n
+              _{module_name}_RTTIRegister();\n
+              int id = unwrap<int>(in[0]);\n
+              try {{
+                switch(id) {{
+            {cases}    }}
+              }} catch(const std::exception& e) {{
+                mexErrMsgTxt(("Exception from gtsam:\\n" + std::string(e.what()) + "\\n").c_str());
+              }}\n
+              std::cout.rdbuf(outbuf);
+            }}
+        ''').format(module_name=self.module_name, cases=cases)
+
+        return mex_function
+
+    def generate_wrapper(self, namespace):
+        """Generate the c++ wrapper."""
+        # Includes
+        wrapper_file = self.wrapper_file_header + textwrap.dedent("""
+            #include <boost/archive/text_iarchive.hpp>
+            #include <boost/archive/text_oarchive.hpp>
+            #include <boost/serialization/export.hpp>\n
+        """)
+
+        assert namespace
+
+        includes_list = sorted(list(self.includes.keys()),
+                               key=lambda include: include.header)
+
+        # Check the number of includes.
+        # If no includes, do nothing, if 1 then just append newline.
+        # if more than one, concatenate them with newlines.
+        if len(includes_list) == 0:
+            pass
+        elif len(includes_list) == 1:
+            wrapper_file += (str(includes_list[0]) + '\n')
+        else:
+            wrapper_file += reduce(lambda x, y: str(x) + '\n' + str(y),
+                                   includes_list)
+        wrapper_file += '\n'
+
+        typedef_instances = '\n'
+        typedef_collectors = ''
+        boost_class_export_guid = ''
+        delete_objs = textwrap.dedent('''\
+            void _deleteAllObjects()
+            {
+              mstream mout;
+              std::streambuf *outbuf = std::cout.rdbuf(&mout);\n
+              bool anyDeleted = false;
+        ''')
+        rtti_reg_start = textwrap.dedent('''\
+            void _{module_name}_RTTIRegister() {{
+              const mxArray *alreadyCreated = mexGetVariablePtr("global", "gtsam_{module_name}_rttiRegistry_created");
+              if(!alreadyCreated) {{
+                std::map<std::string, std::string> types;
+        ''').format(module_name=self.module_name)
+        rtti_reg_mid = ''
+        rtti_reg_end = textwrap.indent(
+            textwrap.dedent('''
+                mxArray *registry = mexGetVariable("global", "gtsamwrap_rttiRegistry");
+                if(!registry)
+                  registry = mxCreateStructMatrix(1, 1, 0, NULL);
+                typedef std::pair<std::string, std::string> StringPair;
+                for(const StringPair& rtti_matlab: types) {
+                  int fieldId = mxAddField(registry, rtti_matlab.first.c_str());
+                  if(fieldId < 0)
+                    mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+                  mxArray *matlabName = mxCreateString(rtti_matlab.second.c_str());
+                  mxSetFieldByNumber(registry, 0, fieldId, matlabName);
+                }
+                if(mexPutVariable("global", "gtsamwrap_rttiRegistry", registry) != 0)
+                  mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+                mxDestroyArray(registry);
+        '''),
+            prefix='    ') + '    \n' + textwrap.dedent('''\
+                mxArray *newAlreadyCreated = mxCreateNumericMatrix(0, 0, mxINT8_CLASS, mxREAL);
+                if(mexPutVariable("global", "gtsam_geometry_rttiRegistry_created", newAlreadyCreated) != 0)
+                  mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+                mxDestroyArray(newAlreadyCreated);
+              }
+            }
+        ''')
+        ptr_ctor_frag = ''
+
+        for cls in self.classes:
+            uninstantiated_name = "::".join(
+                cls.namespaces()[1:]) + "::" + cls.name
+            self._debug("Cls: {} -> {}".format(cls.name, uninstantiated_name))
+
+            if uninstantiated_name in self.ignore_classes:
+                self._debug("Ignoring: {} -> {}".format(
+                    cls.name, uninstantiated_name))
+                continue
+
+            def _has_serialization(cls):
+                for m in cls.methods:
+                    if m.name in self.whitelist:
+                        return True
+                return False
+
+            if cls.instantiations:
+                cls_insts = ''
+
+                for i, inst in enumerate(cls.instantiations):
+                    if i != 0:
+                        cls_insts += ', '
+
+                    cls_insts += self._format_type_name(inst)
+
+                typedef_instances += 'typedef {original_class_name} {class_name_sep};\n' \
+                    .format(original_class_name=cls.cpp_class(),
+                            class_name_sep=cls.name)
+
+                class_name_sep = cls.name
+                class_name = self._format_class_name(cls)
+
+                if len(cls.original.namespaces()) > 1 and _has_serialization(
+                        cls):
+                    boost_class_export_guid += 'BOOST_CLASS_EXPORT_GUID({}, "{}");\n'.format(
+                        class_name_sep, class_name)
+            else:
+                class_name_sep = cls.cpp_class()
+                class_name = self._format_class_name(cls)
+
+                if len(cls.original.namespaces()) > 1 and _has_serialization(
+                        cls):
+                    boost_class_export_guid += 'BOOST_CLASS_EXPORT_GUID({}, "{}");\n'.format(
+                        class_name_sep, class_name)
+
+            typedef_collectors += textwrap.dedent('''\
+                typedef std::set<boost::shared_ptr<{class_name_sep}>*> Collector_{class_name};
+                static Collector_{class_name} collector_{class_name};
+            ''').format(class_name_sep=class_name_sep, class_name=class_name)
+            delete_objs += textwrap.indent(textwrap.dedent('''\
+                {{ for(Collector_{class_name}::iterator iter = collector_{class_name}.begin();
+                    iter != collector_{class_name}.end(); ) {{
+                  delete *iter;
+                  collector_{class_name}.erase(iter++);
+                  anyDeleted = true;
+                }} }}
+            ''').format(class_name=class_name),
+                                           prefix='  ')
+
+            if cls.is_virtual:
+                rtti_reg_mid += '    types.insert(std::make_pair(typeid({}).name(), "{}"));\n' \
+                    .format(class_name_sep, class_name)
+
+        set_next_case = False
+
+        for idx in range(self.wrapper_id):
+            id_val = self.wrapper_map.get(idx)
+            queue_set_next_case = set_next_case
+
+            set_next_case = False
+
+            if id_val is None:
+                id_val = self.wrapper_map.get(idx + 1)
+
+                if id_val is None:
+                    continue
+
+                set_next_case = True
+
+            ptr_ctor_frag += self.generate_collector_function(idx)
+
+            if queue_set_next_case:
+                ptr_ctor_frag += self.wrap_collector_function_upcast_from_void(
+                    id_val[1].name, idx, id_val[1].cpp_class())
+
+        wrapper_file += textwrap.dedent('''\
+            {typedef_instances}
+            {boost_class_export_guid}
+            {typedefs_collectors}
+            {delete_objs}  if(anyDeleted)
+                cout <<
+                  "WARNING:  Wrap modules with variables in the workspace have been reloaded due to\\n"
+                  "calling destructors, call \'clear all\' again if you plan to now recompile a wrap\\n"
+                  "module, so that your recompiled module is used instead of the old one." << endl;
+              std::cout.rdbuf(outbuf);
+            }}\n
+            {rtti_register}
+            {pointer_constructor_fragment}{mex_function}''') \
+            .format(typedef_instances=typedef_instances,
+                    boost_class_export_guid=boost_class_export_guid,
+                    typedefs_collectors=typedef_collectors,
+                    delete_objs=delete_objs,
+                    rtti_register=rtti_reg_start + rtti_reg_mid + rtti_reg_end,
+                    pointer_constructor_fragment=ptr_ctor_frag,
+                    mex_function=self.mex_function())
+
+        self.content.append((self._wrapper_name() + '.cpp', wrapper_file))
+
+    def wrap_class_serialize_method(self, namespace_name, inst_class):
+        """
+        Wrap the serizalize method of the class.
+        """
+        class_name = inst_class.name
+        wrapper_id = self._update_wrapper_id(
+            (namespace_name, inst_class, 'string_serialize', 'serialize'))
+
+        return textwrap.dedent('''\
+            function varargout = string_serialize(this, varargin)
+              % STRING_SERIALIZE usage: string_serialize() : returns string
+              % Doxygen can be found at https://gtsam.org/doxygen/
+              if length(varargin) == 0
+                varargout{{1}} = {wrapper}({wrapper_id}, this, varargin{{:}});
+              else
+                error('Arguments do not match any overload of function {class_name}.string_serialize');
+              end
+            end\n
+            function sobj = saveobj(obj)
+              % SAVEOBJ Saves the object to a matlab-readable format
+              sobj = obj.string_serialize();
+            end
+        ''').format(wrapper=self._wrapper_name(),
+                    wrapper_id=wrapper_id,
+                    class_name=namespace_name + '.' + class_name)
+
+    def wrap_collector_function_serialize(self,
+                                          class_name,
+                                          full_name='',
+                                          namespace=''):
+        """
+        Wrap the serizalize collector function.
+        """
+        return textwrap.indent(textwrap.dedent("""\
+            typedef boost::shared_ptr<{full_name}> Shared;
+            checkArguments("string_serialize",nargout,nargin-1,0);
+            Shared obj = unwrap_shared_ptr<{full_name}>(in[0], "ptr_{namespace}{class_name}");
+            ostringstream out_archive_stream;
+            boost::archive::text_oarchive out_archive(out_archive_stream);
+            out_archive << *obj;
+            out[0] = wrap< string >(out_archive_stream.str());
+        """).format(class_name=class_name,
+                    full_name=full_name,
+                    namespace=namespace),
+                               prefix='  ')
+
+    def wrap_collector_function_deserialize(self,
+                                            class_name,
+                                            full_name='',
+                                            namespace=''):
+        """
+        Wrap the deserizalize collector function.
+        """
+        return textwrap.indent(textwrap.dedent("""\
+            typedef boost::shared_ptr<{full_name}> Shared;
+            checkArguments("{namespace}{class_name}.string_deserialize",nargout,nargin,1);
+            string serialized = unwrap< string >(in[0]);
+            istringstream in_archive_stream(serialized);
+            boost::archive::text_iarchive in_archive(in_archive_stream);
+            Shared output(new {full_name}());
+            in_archive >> *output;
+            out[0] = wrap_shared_ptr(output,"{namespace}.{class_name}", false);
+        """).format(class_name=class_name,
+                    full_name=full_name,
+                    namespace=namespace),
+                               prefix='  ')
+
+    def wrap(self):
+        """High level function to wrap the project."""
+        self.wrap_namespace(self.module)
+        self.generate_wrapper(self.module)
+
+        return self.content
+
+
+def generate_content(cc_content, path, verbose=False):
+    """
+    Generate files and folders from matlab wrapper content.
+
+    Args:
+        cc_content: The content to generate formatted as
+            (file_name, file_content) or
+            (folder_name, [(file_name, file_content)])
+        path: The path to the files parent folder within the main folder
+    """
+    def _debug(message):
+        if not verbose:
+            return
+        print(message, file=sys.stderr)
+
+    for c in cc_content:
+        if isinstance(c, list):
+            if len(c) == 0:
+                continue
+            _debug("c object: {}".format(c[0][0]))
+            path_to_folder = osp.join(path, c[0][0])
+
+            if not os.path.isdir(path_to_folder):
+                try:
+                    os.makedirs(path_to_folder, exist_ok=True)
+                except OSError:
+                    pass
+
+            for sub_content in c:
+                _debug("sub object: {}".format(sub_content[1][0][0]))
+                generate_content(sub_content[1], path_to_folder)
+
+        elif isinstance(c[1], list):
+            path_to_folder = osp.join(path, c[0])
+
+            _debug("[generate_content_global]: {}".format(path_to_folder))
+            if not os.path.isdir(path_to_folder):
+                try:
+                    os.makedirs(path_to_folder, exist_ok=True)
+                except OSError:
+                    pass
+            for sub_content in c[1]:
+                path_to_file = osp.join(path_to_folder, sub_content[0])
+                _debug("[generate_global_method]: {}".format(path_to_file))
+                with open(path_to_file, 'w') as f:
+                    f.write(sub_content[1])
+        else:
+            path_to_file = osp.join(path, c[0])
+
+            _debug("[generate_content]: {}".format(path_to_file))
+            if not os.path.isdir(path_to_file):
+                try:
+                    os.mkdir(path)
+                except OSError:
+                    pass
+
+            with open(path_to_file, 'w') as f:
+                f.write(c[1])
--- /dev/null
+++ gtsam-4.1.0/wrap/gtwrap/pybind_wrapper.py
@@ -0,0 +1,382 @@
+#!/usr/bin/env python3
+"""
+GTSAM Copyright 2010-2020, Georgia Tech Research Corporation,
+Atlanta, Georgia 30332-0415
+All Rights Reserved
+
+See LICENSE for the license information
+
+Code generator for wrapping a C++ module with Pybind11
+Author: Duy Nguyen Ta, Fan Jiang, Matthew Sklar, Varun Agrawal, and Frank Dellaert
+"""
+
+# pylint: disable=too-many-arguments, too-many-instance-attributes, no-self-use, no-else-return, too-many-arguments, unused-format-string-argument, line-too-long
+
+import re
+
+import gtwrap.interface_parser as parser
+import gtwrap.template_instantiator as instantiator
+
+
+class PybindWrapper:
+    """
+    Class to generate binding code for Pybind11 specifically.
+    """
+    def __init__(self,
+                 module,
+                 module_name,
+                 top_module_namespaces='',
+                 use_boost=False,
+                 ignore_classes=(),
+                 module_template=""):
+        self.module = module
+        self.module_name = module_name
+        self.top_module_namespaces = top_module_namespaces
+        self.use_boost = use_boost
+        self.ignore_classes = ignore_classes
+        self._serializing_classes = list()
+        self.module_template = module_template
+        self.python_keywords = ['print', 'lambda']
+
+        # amount of indentation to add before each function/method declaration.
+        self.method_indent = '\n' + (' ' * 8)
+
+    def _py_args_names(self, args_list):
+        """Set the argument names in Pybind11 format."""
+        names = args_list.args_names()
+        if names:
+            py_args = ['py::arg("{}")'.format(name) for name in names]
+            return ", " + ", ".join(py_args)
+        else:
+            return ''
+
+    def _method_args_signature_with_names(self, args_list):
+        """Define the method signature types with the argument names."""
+        cpp_types = args_list.to_cpp(self.use_boost)
+        names = args_list.args_names()
+        types_names = ["{} {}".format(ctype, name) for ctype, name in zip(cpp_types, names)]
+
+        return ', '.join(types_names)
+
+    def wrap_ctors(self, my_class):
+        """Wrap the constructors."""
+        res = ""
+        for ctor in my_class.ctors:
+            res += (self.method_indent + '.def(py::init<{args_cpp_types}>()'
+                    '{py_args_names})'.format(
+                        args_cpp_types=", ".join(ctor.args.to_cpp(self.use_boost)),
+                        py_args_names=self._py_args_names(ctor.args),
+                    ))
+        return res
+
+    def _wrap_method(self, method, cpp_class, prefix, suffix, method_suffix=""):
+        py_method = method.name + method_suffix
+        cpp_method = method.to_cpp()
+
+        if cpp_method in ["serialize", "serializable"]:
+            if not cpp_class in self._serializing_classes:
+                self._serializing_classes.append(cpp_class)
+            serialize_method = self.method_indent + \
+                ".def(\"serialize\", []({class_inst} self){{ return gtsam::serialize(*self); }})".format(class_inst=cpp_class + '*')
+            deserialize_method = self.method_indent + \
+                     ".def(\"deserialize\", []({class_inst} self, string serialized){{ gtsam::deserialize(serialized, *self); }}, py::arg(\"serialized\"))" \
+                       .format(class_inst=cpp_class + '*')
+            return serialize_method + deserialize_method
+
+        if cpp_method == "pickle":
+            if not cpp_class in self._serializing_classes:
+                raise ValueError("Cannot pickle a class which is not serializable")
+            pickle_method = self.method_indent + \
+                ".def(py::pickle({indent}    [](const {cpp_class} &a){{ /* __getstate__: Returns a string that encodes the state of the object */ return py::make_tuple(gtsam::serialize(a)); }},{indent}    [](py::tuple t){{ /* __setstate__ */ {cpp_class} obj; gtsam::deserialize(t[0].cast<std::string>(), obj); return obj; }}))"
+            return pickle_method.format(cpp_class=cpp_class, indent=self.method_indent)
+
+        is_method = isinstance(method, instantiator.InstantiatedMethod)
+        is_static = isinstance(method, parser.StaticMethod)
+        return_void = method.return_type.is_void()
+        args_names = method.args.args_names()
+        py_args_names = self._py_args_names(method.args)
+        args_signature_with_names = self._method_args_signature_with_names(method.args)
+
+        caller = cpp_class + "::" if not is_method else "self->"
+        function_call = ('{opt_return} {caller}{function_name}'
+                         '({args_names});'.format(
+                             opt_return='return' if not return_void else '',
+                             caller=caller,
+                             function_name=cpp_method,
+                             args_names=', '.join(args_names),
+                         ))
+
+        ret = ('{prefix}.{cdef}("{py_method}",'
+               '[]({opt_self}{opt_comma}{args_signature_with_names}){{'
+               '{function_call}'
+               '}}'
+               '{py_args_names}){suffix}'.format(
+                   prefix=prefix,
+                   cdef="def_static" if is_static else "def",
+                   py_method=py_method if not py_method in self.python_keywords
+                   else py_method + "_",
+                   opt_self="{cpp_class}* self".format(
+                       cpp_class=cpp_class) if is_method else "",
+                   opt_comma=', ' if is_method and args_names else '',
+                   args_signature_with_names=args_signature_with_names,
+                   function_call=function_call,
+                   py_args_names=py_args_names,
+                   suffix=suffix,
+               ))
+
+        if method.name == 'print':
+            type_list = method.args.to_cpp(self.use_boost)
+            if len(type_list) > 0 and type_list[0].strip() == 'string':
+                ret += '''{prefix}.def("__repr__",
+                    [](const {cpp_class} &a) {{
+                        gtsam::RedirectCout redirect;
+                        a.print("");
+                        return redirect.str();
+                    }}){suffix}'''.format(
+                    prefix=prefix,
+                    cpp_class=cpp_class,
+                    suffix=suffix,
+                )
+            else:
+                ret += '''{prefix}.def("__repr__",
+                    [](const {cpp_class} &a) {{
+                        gtsam::RedirectCout redirect;
+                        a.print();
+                        return redirect.str();
+                    }}){suffix}'''.format(
+                    prefix=prefix,
+                    cpp_class=cpp_class,
+                    suffix=suffix,
+                )
+        return ret
+
+    def wrap_methods(self, methods, cpp_class, prefix='\n' + ' ' * 8, suffix=''):
+        """
+        Wrap all the methods in the `cpp_class`.
+
+        This function is also used to wrap global functions.
+        """
+        res = ""
+        for method in methods:
+
+            # To avoid type confusion for insert, currently unused
+            if method.name == 'insert' and cpp_class == 'gtsam::Values':
+                name_list = method.args.args_names()
+                type_list = method.args.to_cpp(self.use_boost)
+                if type_list[0].strip() == 'size_t':  # inserting non-wrapped value types
+                    method_suffix = '_' + name_list[1].strip()
+                    res += self._wrap_method(method=method,
+                                             cpp_class=cpp_class,
+                                             prefix=prefix,
+                                             suffix=suffix,
+                                             method_suffix=method_suffix)
+
+            res += self._wrap_method(
+                method=method,
+                cpp_class=cpp_class,
+                prefix=prefix,
+                suffix=suffix,
+            )
+
+        return res
+
+    def wrap_properties(self, properties, cpp_class, prefix='\n' + ' ' * 8):
+        """Wrap all the properties in the `cpp_class`."""
+        res = ""
+        for prop in properties:
+            res += ('{prefix}.def_{property}("{property_name}", '
+                    '&{cpp_class}::{property_name})'.format(
+                        prefix=prefix,
+                        property="readonly" if prop.ctype.is_const else "readwrite",
+                        cpp_class=cpp_class,
+                        property_name=prop.name,
+                    ))
+        return res
+
+    def wrap_operators(self, operators, cpp_class, prefix='\n' + ' ' * 8):
+        """Wrap all the overloaded operators in the `cpp_class`."""
+        res = ""
+        template = "{prefix}.def({{0}})".format(prefix=prefix)
+        for op in operators:
+            if op.operator == "[]":  # __getitem__
+                res += "{prefix}.def(\"__getitem__\", &{cpp_class}::operator[])".format(
+                    prefix=prefix, cpp_class=cpp_class)
+            elif op.operator == "()":  # __call__
+                res += "{prefix}.def(\"__call__\", &{cpp_class}::operator())".format(
+                    prefix=prefix, cpp_class=cpp_class)
+            elif op.is_unary:
+                res += template.format("{0}py::self".format(op.operator))
+            else:
+                res += template.format("py::self {0} py::self".format(
+                    op.operator))
+        return res
+
+    def wrap_instantiated_class(self, instantiated_class):
+        """Wrap the class."""
+        module_var = self._gen_module_var(instantiated_class.namespaces())
+        cpp_class = instantiated_class.cpp_class()
+        if cpp_class in self.ignore_classes:
+            return ""
+        return (
+            '\n    py::class_<{cpp_class}, {class_parent}'
+            '{shared_ptr_type}::shared_ptr<{cpp_class}>>({module_var}, "{class_name}")'
+            '{wrapped_ctors}'
+            '{wrapped_methods}'
+            '{wrapped_static_methods}'
+            '{wrapped_properties}'
+            '{wrapped_operators};\n'.format(
+                shared_ptr_type=('boost' if self.use_boost else 'std'),
+                cpp_class=cpp_class,
+                class_name=instantiated_class.name,
+                class_parent="{instantiated_class.parent_class}, ".format(
+                    instantiated_class=instantiated_class)
+                if instantiated_class.parent_class else '',
+                module_var=module_var,
+                wrapped_ctors=self.wrap_ctors(instantiated_class),
+                wrapped_methods=self.wrap_methods(instantiated_class.methods,
+                                                  cpp_class),
+                wrapped_static_methods=self.wrap_methods(
+                    instantiated_class.static_methods, cpp_class),
+                wrapped_properties=self.wrap_properties(
+                    instantiated_class.properties, cpp_class),
+                wrapped_operators=self.wrap_operators(
+                    instantiated_class.operators, cpp_class)))
+
+    def wrap_stl_class(self, stl_class):
+        """Wrap STL containers."""
+        module_var = self._gen_module_var(stl_class.namespaces())
+        cpp_class = stl_class.cpp_class()
+        if cpp_class in self.ignore_classes:
+            return ""
+
+        return (
+            '\n    py::class_<{cpp_class}, {class_parent}'
+            '{shared_ptr_type}::shared_ptr<{cpp_class}>>({module_var}, "{class_name}")'
+            '{wrapped_ctors}'
+            '{wrapped_methods}'
+            '{wrapped_static_methods}'
+            '{wrapped_properties};\n'.format(
+                shared_ptr_type=('boost' if self.use_boost else 'std'),
+                cpp_class=cpp_class,
+                class_name=stl_class.name,
+                class_parent=str(stl_class.parent_class) +
+                (', ' if stl_class.parent_class else ''),
+                module_var=module_var,
+                wrapped_ctors=self.wrap_ctors(stl_class),
+                wrapped_methods=self.wrap_methods(stl_class.methods,
+                                                  cpp_class),
+                wrapped_static_methods=self.wrap_methods(
+                    stl_class.static_methods, cpp_class),
+                wrapped_properties=self.wrap_properties(
+                    stl_class.properties, cpp_class),
+            ))
+
+    def _partial_match(self, namespaces1, namespaces2):
+        for i in range(min(len(namespaces1), len(namespaces2))):
+            if namespaces1[i] != namespaces2[i]:
+                return False
+        return True
+
+    def _gen_module_var(self, namespaces):
+        sub_module_namespaces = namespaces[len(self.top_module_namespaces):]
+        return "m_{}".format('_'.join(sub_module_namespaces))
+
+    def _add_namespaces(self, name, namespaces):
+        if namespaces:
+            # Ignore the first empty global namespace.
+            idx = 1 if not namespaces[0] else 0
+            return '::'.join(namespaces[idx:] + [name])
+        else:
+            return name
+
+    def wrap_namespace(self, namespace):
+        """Wrap the complete `namespace`."""
+        wrapped = ""
+        includes = ""
+
+        namespaces = namespace.full_namespaces()
+        if not self._partial_match(namespaces, self.top_module_namespaces):
+            return "", ""
+
+        if len(namespaces) < len(self.top_module_namespaces):
+            for element in namespace.content:
+                if isinstance(element, parser.Include):
+                    includes += ("{}\n".format(element).replace('<', '"').replace('>', '"'))
+                if isinstance(element, parser.Namespace):
+                    (
+                        wrapped_namespace,
+                        includes_namespace,
+                    ) = self.wrap_namespace(  # noqa
+                        element)
+                    wrapped += wrapped_namespace
+                    includes += includes_namespace
+        else:
+            module_var = self._gen_module_var(namespaces)
+
+            if len(namespaces) > len(self.top_module_namespaces):
+                wrapped += (' ' * 4 + 'pybind11::module {module_var} = '
+                            '{parent_module_var}.def_submodule("{namespace}", "'
+                            '{namespace} submodule");\n'.format(
+                                module_var=module_var,
+                                namespace=namespace.name,
+                                parent_module_var=self._gen_module_var(namespaces[:-1]),
+                            ))
+
+            for element in namespace.content:
+                if isinstance(element, parser.Include):
+                    includes += ("{}\n".format(element).replace('<', '"').replace('>', '"'))
+                elif isinstance(element, parser.Namespace):
+                    (
+                        wrapped_namespace,
+                        includes_namespace,
+                    ) = self.wrap_namespace(  # noqa
+                        element)
+                    wrapped += wrapped_namespace
+                    includes += includes_namespace
+                elif isinstance(element, instantiator.InstantiatedClass):
+                    wrapped += self.wrap_instantiated_class(element)
+
+            # Global functions.
+            all_funcs = [
+                func for func in namespace.content
+                if isinstance(func, (parser.GlobalFunction,
+                                     instantiator.InstantiatedGlobalFunction))
+            ]
+            wrapped += self.wrap_methods(
+                all_funcs,
+                self._add_namespaces('', namespaces)[:-2],
+                prefix='\n' + ' ' * 4 + module_var,
+                suffix=';',
+            )
+        return wrapped, includes
+
+    def wrap(self):
+        """Wrap the code in the interface file."""
+        wrapped_namespace, includes = self.wrap_namespace(self.module)
+
+        # Export classes for serialization.
+        boost_class_export = ""
+        for cpp_class in self._serializing_classes:
+            new_name = cpp_class
+            # The boost's macro doesn't like commas, so we have to typedef.
+            if ',' in cpp_class:
+                new_name = re.sub("[,:<> ]", "", cpp_class)
+                boost_class_export += "typedef {cpp_class} {new_name};\n".format(  # noqa
+                    cpp_class=cpp_class,
+                    new_name=new_name,
+                )
+            boost_class_export += "BOOST_CLASS_EXPORT({new_name})\n".format(new_name=new_name, )
+
+        holder_type = "PYBIND11_DECLARE_HOLDER_TYPE(TYPE_PLACEHOLDER_DONOTUSE, " \
+                      "{shared_ptr_type}::shared_ptr<TYPE_PLACEHOLDER_DONOTUSE>);"
+        include_boost = "#include <boost/shared_ptr.hpp>" if self.use_boost else ""
+
+        return self.module_template.format(
+            include_boost=include_boost,
+            module_name=self.module_name,
+            includes=includes,
+            holder_type=holder_type.format(shared_ptr_type=('boost' if self.use_boost else 'std'))
+            if self.use_boost else "",
+            wrapped_namespace=wrapped_namespace,
+            boost_class_export=boost_class_export,
+        )
--- /dev/null
+++ gtsam-4.1.0/wrap/gtwrap/template_instantiator.py
@@ -0,0 +1,583 @@
+"""Code to help instantiate templated classes, methods and functions."""
+
+# pylint: disable=too-many-arguments, too-many-instance-attributes, no-self-use, no-else-return, too-many-arguments, unused-format-string-argument, unused-variable
+
+import itertools
+from copy import deepcopy
+from typing import List
+
+import gtwrap.interface_parser as parser
+
+
+def instantiate_type(ctype: parser.Type,
+                     template_typenames: List[str],
+                     instantiations: List[parser.Typename],
+                     cpp_typename: parser.Typename,
+                     instantiated_class=None):
+    """
+    Instantiate template typename for @p ctype.
+
+    Args:
+        instiated_class (InstantiatedClass):
+
+    @return If ctype's name is in the @p template_typenames, return the
+        corresponding type to replace in @p instantiations.
+        If ctype name is `This`, return the new typename @p `cpp_typename`.
+        Otherwise, return the original ctype.
+    """
+    # make a deep copy so that there is no overwriting of original template params
+    ctype = deepcopy(ctype)
+
+    # Check if the return type has template parameters
+    if len(ctype.typename.instantiations) > 0:
+        for idx, instantiation in enumerate(ctype.typename.instantiations):
+            if instantiation.name in template_typenames:
+                template_idx = template_typenames.index(instantiation.name)
+                ctype.typename.instantiations[idx] = instantiations[
+                    template_idx]
+
+        return ctype
+
+    str_arg_typename = str(ctype.typename)
+
+    if str_arg_typename in template_typenames:
+        idx = template_typenames.index(str_arg_typename)
+        return parser.Type(
+            typename=instantiations[idx],
+            is_const=ctype.is_const,
+            is_shared_ptr=ctype.is_shared_ptr,
+            is_ptr=ctype.is_ptr,
+            is_ref=ctype.is_ref,
+            is_basic=ctype.is_basic,
+        )
+    elif str_arg_typename == 'This':
+        if instantiated_class:
+            name = instantiated_class.original.name
+            namespaces_name = instantiated_class.namespaces()
+            namespaces_name.append(name)
+            # print("INST: {}, {}, CPP: {}, CLS: {}".format(
+            #     ctype, instantiations, cpp_typename, instantiated_class.instantiations
+            # ), file=sys.stderr)
+            cpp_typename = parser.Typename(
+                namespaces_name,
+                instantiations=instantiated_class.instantiations)
+
+        return parser.Type(
+            typename=cpp_typename,
+            is_const=ctype.is_const,
+            is_shared_ptr=ctype.is_shared_ptr,
+            is_ptr=ctype.is_ptr,
+            is_ref=ctype.is_ref,
+            is_basic=ctype.is_basic,
+        )
+    else:
+        return ctype
+
+
+def instantiate_args_list(args_list, template_typenames, instantiations,
+                          cpp_typename):
+    """
+    Instantiate template typenames in an argument list.
+    Type with name `This` will be replaced by @p `cpp_typename`.
+
+    @param[in] args_list A list of `parser.Argument` to instantiate.
+    @param[in] template_typenames List of template typenames to instantiate,
+        e.g. ['T', 'U', 'V'].
+    @param[in] instantiations List of specific types to instantiate, each
+        associated with each template typename. Each type is a parser.Typename,
+        including its name and full namespaces.
+    @param[in] cpp_typename Full-namespace cpp class name of this instantiation
+        to replace for arguments of type named `This`.
+    @return A new list of parser.Argument which types are replaced with their
+        instantiations.
+    """
+    instantiated_args = []
+    for arg in args_list:
+        new_type = instantiate_type(arg.ctype, template_typenames,
+                                    instantiations, cpp_typename)
+        instantiated_args.append(parser.Argument(name=arg.name,
+                                                 ctype=new_type))
+    return instantiated_args
+
+
+def instantiate_return_type(return_type,
+                            template_typenames,
+                            instantiations,
+                            cpp_typename,
+                            instantiated_class=None):
+    """Instantiate the return type."""
+    new_type1 = instantiate_type(return_type.type1,
+                                 template_typenames,
+                                 instantiations,
+                                 cpp_typename,
+                                 instantiated_class=instantiated_class)
+    if return_type.type2:
+        new_type2 = instantiate_type(return_type.type2,
+                                     template_typenames,
+                                     instantiations,
+                                     cpp_typename,
+                                     instantiated_class=instantiated_class)
+    else:
+        new_type2 = ''
+    return parser.ReturnType(new_type1, new_type2)
+
+
+def instantiate_name(original_name, instantiations):
+    """
+    Concatenate instantiated types with an @p original name to form a new
+    instantiated name.
+    TODO(duy): To avoid conflicts, we should include the instantiation's
+    namespaces, but I find that too verbose.
+    """
+    inst_name = ''
+    instantiated_names = []
+    for inst in instantiations:
+        # Ensure the first character of the type is capitalized
+        name = inst.instantiated_name()
+        # Using `capitalize` on the complete name causes other caps to be lower case
+        instantiated_names.append(name.replace(name[0], name[0].capitalize()))
+
+    return "{}{}".format(original_name, "".join(instantiated_names))
+
+
+class InstantiatedGlobalFunction(parser.GlobalFunction):
+    """
+    Instantiate global functions.
+
+    E.g.
+        template<T = {double}>
+        T add(const T& x, const T& y);
+    """
+    def __init__(self, original, instantiations=(), new_name=''):
+        self.original = original
+        self.instantiations = instantiations
+        self.template = ''
+        self.parent = original.parent
+
+        if not original.template:
+            self.name = original.name
+            self.return_type = original.return_type
+            self.args = original.args
+        else:
+            self.name = instantiate_name(
+                original.name, instantiations) if not new_name else new_name
+            self.return_type = instantiate_return_type(
+                original.return_type,
+                self.original.template.typenames,
+                self.instantiations,
+                # Keyword type name `This` should already be replaced in the
+                # previous class template instantiation round.
+                cpp_typename='',
+            )
+            instantiated_args = instantiate_args_list(
+                original.args.args_list,
+                self.original.template.typenames,
+                self.instantiations,
+                # Keyword type name `This` should already be replaced in the
+                # previous class template instantiation round.
+                cpp_typename='',
+            )
+            self.args = parser.ArgumentList(instantiated_args)
+
+        super().__init__(self.name,
+                         self.return_type,
+                         self.args,
+                         self.template,
+                         parent=self.parent)
+
+    def to_cpp(self):
+        """Generate the C++ code for wrapping."""
+        if self.original.template:
+            instantiated_names = [
+                inst.instantiated_name() for inst in self.instantiations
+            ]
+            ret = "{}<{}>".format(self.original.name,
+                                  ",".join(instantiated_names))
+        else:
+            ret = self.original.name
+        return ret
+
+    def __repr__(self):
+        return "Instantiated {}".format(
+            super(InstantiatedGlobalFunction, self).__repr__())
+
+
+class InstantiatedMethod(parser.Method):
+    """
+    We can only instantiate template methods with a single template parameter.
+    """
+    def __init__(self, original, instantiations: List[parser.Typename] = ''):
+        self.original = original
+        self.instantiations = instantiations
+        self.template = ''
+        self.is_const = original.is_const
+        self.parent = original.parent
+
+        # Check for typenames if templated.
+        # This way, we can gracefully handle bot templated and non-templated methois.
+        typenames = self.original.template.typenames if self.original.template else []
+        self.name = instantiate_name(original.name, self.instantiations)
+        self.return_type = instantiate_return_type(
+            original.return_type,
+            typenames,
+            self.instantiations,
+            # Keyword type name `This` should already be replaced in the
+            # previous class template instantiation round.
+            cpp_typename='',
+        )
+
+        instantiated_args = instantiate_args_list(
+            original.args.args_list,
+            typenames,
+            self.instantiations,
+            # Keyword type name `This` should already be replaced in the
+            # previous class template instantiation round.
+            cpp_typename='',
+        )
+        self.args = parser.ArgumentList(instantiated_args)
+
+        super().__init__(self.template,
+                         self.name,
+                         self.return_type,
+                         self.args,
+                         self.is_const,
+                         parent=self.parent)
+
+    def to_cpp(self):
+        """Generate the C++ code for wrapping."""
+        if self.original.template:
+            # to_cpp will handle all the namespacing and templating
+            instantiation_list = [x.to_cpp() for x in self.instantiations]
+            # now can simply combine the instantiations, separated by commas
+            ret = "{}<{}>".format(self.original.name,
+                                  ",".join(instantiation_list))
+        else:
+            ret = self.original.name
+        return ret
+
+    def __repr__(self):
+        return "Instantiated {}".format(
+            super(InstantiatedMethod, self).__repr__())
+
+
+class InstantiatedClass(parser.Class):
+    """
+    Instantiate the class defined in the interface file.
+    """
+    def __init__(self, original, instantiations=(), new_name=''):
+        """
+        Template <T, U>
+        Instantiations: [T1, U1]
+        """
+        self.original = original
+        self.instantiations = instantiations
+
+        self.template = ''
+        self.is_virtual = original.is_virtual
+        self.parent_class = original.parent_class
+        self.parent = original.parent
+
+        # If the class is templated, check if the number of provided instantiations
+        # match the number of templates, else it's only a partial instantiation which is bad.
+        if original.template:
+            assert len(original.template.typenames) == len(
+                instantiations), "Typenames and instantiations mismatch!"
+
+        # Get the instantiated name of the class. E.g. FuncDouble
+        self.name = instantiate_name(
+            original.name, instantiations) if not new_name else new_name
+
+        # Check for typenames if templated.
+        # By passing in typenames, we can gracefully handle both templated and non-templated classes
+        # This will allow the `This` keyword to be used in both templated and non-templated classes.
+        typenames = self.original.template.typenames if self.original.template else []
+
+        # Instantiate the constructors, static methods, properties, respectively.
+        self.ctors = self.instantiate_ctors(typenames)
+        self.static_methods = self.instantiate_static_methods(typenames)
+        self.properties = self.instantiate_properties(typenames)
+
+        # Instantiate all operator overloads
+        self.operators = self.instantiate_operators(typenames)
+
+        # Instantiate all instance methods
+        instantiated_methods = \
+            self.instantiate_class_templates_in_methods(typenames)
+
+        # Second instantiation round to instantiate templated methods.
+        # This is done in case both the class and the method are templated.
+        self.methods = []
+        for method in instantiated_methods:
+            if not method.template:
+                self.methods.append(InstantiatedMethod(method, ''))
+            else:
+                instantiations = []
+                # Get all combinations of template parameters
+                for instantiations in itertools.product(
+                        *method.template.instantiations):
+                    self.methods.append(
+                        InstantiatedMethod(method, instantiations))
+
+        super().__init__(
+            self.template,
+            self.is_virtual,
+            self.name,
+            [self.parent_class],
+            self.ctors,
+            self.methods,
+            self.static_methods,
+            self.properties,
+            self.operators,
+            parent=self.parent,
+        )
+
+    def __repr__(self):
+        return "{virtual} class {name} [{cpp_class}]: {parent_class}\n"\
+            "{ctors}\n{static_methods}\n{methods}".format(
+               virtual="virtual" if self.is_virtual else '',
+               name=self.name,
+               cpp_class=self.cpp_class(),
+               parent_class=self.parent,
+               ctors="\n".join([repr(ctor) for ctor in self.ctors]),
+               methods="\n".join([repr(m) for m in self.methods]),
+               static_methods="\n".join([repr(m)
+                                         for m in self.static_methods]),
+               operators="\n".join([repr(op) for op in self.operators])
+            )
+
+    def instantiate_ctors(self, typenames):
+        """
+        Instantiate the class constructors.
+
+        Args:
+            typenames: List of template types to instantiate.
+
+        Return: List of constructors instantiated with provided template args.
+        """
+        instantiated_ctors = []
+
+        for ctor in self.original.ctors:
+            instantiated_args = instantiate_args_list(
+                ctor.args.args_list,
+                typenames,
+                self.instantiations,
+                self.cpp_typename(),
+            )
+            instantiated_ctors.append(
+                parser.Constructor(
+                    name=self.name,
+                    args=parser.ArgumentList(instantiated_args),
+                    parent=self,
+                ))
+        return instantiated_ctors
+
+    def instantiate_static_methods(self, typenames):
+        """
+        Instantiate static methods in the class.
+
+        Args:
+            typenames: List of template types to instantiate.
+
+        Return: List of static methods instantiated with provided template args.
+        """
+        instantiated_static_methods = []
+        for static_method in self.original.static_methods:
+            instantiated_args = instantiate_args_list(
+                static_method.args.args_list, typenames, self.instantiations,
+                self.cpp_typename())
+            instantiated_static_methods.append(
+                parser.StaticMethod(
+                    name=static_method.name,
+                    return_type=instantiate_return_type(
+                        static_method.return_type,
+                        typenames,
+                        self.instantiations,
+                        self.cpp_typename(),
+                        instantiated_class=self),
+                    args=parser.ArgumentList(instantiated_args),
+                    parent=self,
+                ))
+        return instantiated_static_methods
+
+    def instantiate_class_templates_in_methods(self, typenames):
+        """
+        This function only instantiates the class-level templates in the methods.
+        Template methods are instantiated in InstantiatedMethod in the second
+        round.
+
+        E.g.
+        ```
+        template<T={string}>
+        class Greeter{
+            void sayHello(T& name);
+        };
+
+        Args:
+            typenames: List of template types to instantiate.
+
+        Return: List of methods instantiated with provided template args on the class.
+        """
+        class_instantiated_methods = []
+        for method in self.original.methods:
+            instantiated_args = instantiate_args_list(
+                method.args.args_list,
+                typenames,
+                self.instantiations,
+                self.cpp_typename(),
+            )
+            class_instantiated_methods.append(
+                parser.Method(
+                    template=method.template,
+                    name=method.name,
+                    return_type=instantiate_return_type(
+                        method.return_type,
+                        typenames,
+                        self.instantiations,
+                        self.cpp_typename(),
+                    ),
+                    args=parser.ArgumentList(instantiated_args),
+                    is_const=method.is_const,
+                    parent=self,
+                ))
+        return class_instantiated_methods
+
+    def instantiate_operators(self, typenames):
+        """
+        Instantiate the class-level template in the operator overload.
+
+        Args:
+            typenames: List of template types to instantiate.
+
+        Return: List of methods instantiated with provided template args on the class.
+        """
+        instantiated_operators = []
+        for operator in self.original.operators:
+            instantiated_args = instantiate_args_list(
+                operator.args.args_list,
+                typenames,
+                self.instantiations,
+                self.cpp_typename(),
+            )
+            instantiated_operators.append(
+                parser.Operator(
+                    name=operator.name,
+                    operator=operator.operator,
+                    return_type=instantiate_return_type(
+                        operator.return_type,
+                        typenames,
+                        self.instantiations,
+                        self.cpp_typename(),
+                    ),
+                    args=parser.ArgumentList(instantiated_args),
+                    is_const=operator.is_const,
+                    parent=self,
+                ))
+        return instantiated_operators
+
+    def instantiate_properties(self, typenames):
+        """
+        Instantiate the class properties.
+
+        Args:
+            typenames: List of template types to instantiate.
+
+        Return: List of properties instantiated with provided template args.
+        """
+        instantiated_properties = instantiate_args_list(
+            self.original.properties,
+            typenames,
+            self.instantiations,
+            self.cpp_typename(),
+        )
+        return instantiated_properties
+
+    def cpp_class(self):
+        """Generate the C++ code for wrapping."""
+        return self.cpp_typename().to_cpp()
+
+    def cpp_typename(self):
+        """
+        Return a parser.Typename including namespaces and cpp name of this
+        class.
+        """
+        if self.original.template:
+            name = "{}<{}>".format(
+                self.original.name,
+                ", ".join([inst.to_cpp() for inst in self.instantiations]))
+        else:
+            name = self.original.name
+        namespaces_name = self.namespaces()
+        namespaces_name.append(name)
+        return parser.Typename(namespaces_name)
+
+
+def instantiate_namespace_inplace(namespace):
+    """
+    Instantiate the classes and other elements in the `namespace` content and
+    assign it back to the namespace content attribute.
+
+    @param[in/out] namespace The namespace whose content will be replaced with
+        the instantiated content.
+    """
+    instantiated_content = []
+    typedef_content = []
+
+    for element in namespace.content:
+        if isinstance(element, parser.Class):
+            original_class = element
+            if not original_class.template:
+                instantiated_content.append(
+                    InstantiatedClass(original_class, []))
+            else:
+                # This case is for when the templates have enumerated instantiations.
+
+                # Use itertools to get all possible combinations of instantiations
+                # Works even if one template does not have an instantiation list
+                for instantiations in itertools.product(
+                        *original_class.template.instantiations):
+                    instantiated_content.append(
+                        InstantiatedClass(original_class,
+                                          list(instantiations)))
+
+        elif isinstance(element, parser.GlobalFunction):
+            original_func = element
+            if not original_func.template:
+                instantiated_content.append(
+                    InstantiatedGlobalFunction(original_func, []))
+            else:
+                # Use itertools to get all possible combinations of instantiations
+                # Works even if one template does not have an instantiation list
+                for instantiations in itertools.product(
+                        *original_func.template.instantiations):
+                    instantiated_content.append(
+                        InstantiatedGlobalFunction(original_func,
+                                                   list(instantiations)))
+
+        elif isinstance(element, parser.TypedefTemplateInstantiation):
+            # This is for the case where `typedef` statements are used
+            # to specify the template parameters.
+            typedef_inst = element
+            top_level = namespace.top_level()
+            original_element = top_level.find_class_or_function(
+                typedef_inst.typename)
+
+            # Check if element is a typedef'd class or function.
+            if isinstance(original_element, parser.Class):
+                typedef_content.append(
+                    InstantiatedClass(original_element,
+                                      typedef_inst.typename.instantiations,
+                                      typedef_inst.new_name))
+            elif isinstance(original_element, parser.GlobalFunction):
+                typedef_content.append(
+                    InstantiatedGlobalFunction(
+                        original_element, typedef_inst.typename.instantiations,
+                        typedef_inst.new_name))
+
+        elif isinstance(element, parser.Namespace):
+            instantiate_namespace_inplace(element)
+            instantiated_content.append(element)
+        else:
+            instantiated_content.append(element)
+
+    instantiated_content.extend(typedef_content)
+    namespace.content = instantiated_content
--- gtsam-4.1.0.orig/wrap/pybind11/.appveyor.yml
+++ gtsam-4.1.0/wrap/pybind11/.appveyor.yml
@@ -1,64 +1,32 @@
 version: 1.0.{build}
 image:
-- Visual Studio 2017
 - Visual Studio 2015
 test: off
 skip_branch_with_pr: true
 build:
   parallel: true
 platform:
-- x64
 - x86
 environment:
   matrix:
   - PYTHON: 36
-    CPP: 14
     CONFIG: Debug
   - PYTHON: 27
-    CPP: 14
     CONFIG: Debug
-  - CONDA: 36
-    CPP: latest
-    CONFIG: Release
-matrix:
-  exclude:
-    - image: Visual Studio 2015
-      platform: x86
-    - image: Visual Studio 2015
-      CPP: latest
-    - image: Visual Studio 2017
-      CPP: latest
-      platform: x86
 install:
 - ps: |
-    if ($env:PLATFORM -eq "x64") { $env:CMAKE_ARCH = "x64" }
-    if ($env:APPVEYOR_JOB_NAME -like "*Visual Studio 2017*") {
-      $env:CMAKE_GENERATOR = "Visual Studio 15 2017"
-      $env:CMAKE_INCLUDE_PATH = "C:\Libraries\boost_1_64_0"
-      $env:CXXFLAGS = "-permissive-"
-    } else {
-      $env:CMAKE_GENERATOR = "Visual Studio 14 2015"
-    }
-    if ($env:PYTHON) {
-      if ($env:PLATFORM -eq "x64") { $env:PYTHON = "$env:PYTHON-x64" }
-      $env:PATH = "C:\Python$env:PYTHON\;C:\Python$env:PYTHON\Scripts\;$env:PATH"
-      python -W ignore -m pip install --upgrade pip wheel
-      python -W ignore -m pip install pytest numpy --no-warn-script-location
-    } elseif ($env:CONDA) {
-      if ($env:CONDA -eq "27") { $env:CONDA = "" }
-      if ($env:PLATFORM -eq "x64") { $env:CONDA = "$env:CONDA-x64" }
-      $env:PATH = "C:\Miniconda$env:CONDA\;C:\Miniconda$env:CONDA\Scripts\;$env:PATH"
-      $env:PYTHONHOME = "C:\Miniconda$env:CONDA"
-      conda --version
-      conda install -y -q pytest numpy scipy
-    }
+    $env:CMAKE_GENERATOR = "Visual Studio 14 2015"
+    if ($env:PLATFORM -eq "x64") { $env:PYTHON = "$env:PYTHON-x64" }
+    $env:PATH = "C:\Python$env:PYTHON\;C:\Python$env:PYTHON\Scripts\;$env:PATH"
+    python -W ignore -m pip install --upgrade pip wheel
+    python -W ignore -m pip install pytest numpy --no-warn-script-location
 - ps: |
-    Start-FileDownload 'http://bitbucket.org/eigen/eigen/get/3.3.3.zip'
-    7z x 3.3.3.zip -y > $null
-    $env:CMAKE_INCLUDE_PATH = "eigen-eigen-67e894c6cd8f;$env:CMAKE_INCLUDE_PATH"
+    Start-FileDownload 'https://gitlab.com/libeigen/eigen/-/archive/3.3.7/eigen-3.3.7.zip'
+    7z x eigen-3.3.7.zip -y > $null
+    $env:CMAKE_INCLUDE_PATH = "eigen-3.3.7;$env:CMAKE_INCLUDE_PATH"
 build_script:
 - cmake -G "%CMAKE_GENERATOR%" -A "%CMAKE_ARCH%"
-    -DPYBIND11_CPP_STANDARD=/std:c++%CPP%
+    -DCMAKE_CXX_STANDARD=14
     -DPYBIND11_WERROR=ON
     -DDOWNLOAD_CATCH=ON
     -DCMAKE_SUPPRESS_REGENERATION=1
@@ -66,5 +34,4 @@ build_script:
 - set MSBuildLogger="C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
 - cmake --build . --config %CONFIG% --target pytest -- /m /v:m /logger:%MSBuildLogger%
 - cmake --build . --config %CONFIG% --target cpptest -- /m /v:m /logger:%MSBuildLogger%
-- if "%CPP%"=="latest" (cmake --build . --config %CONFIG% --target test_cmake_build -- /m /v:m /logger:%MSBuildLogger%)
 on_failure: if exist "tests\test_cmake_build" type tests\test_cmake_build\*.log*
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/.clang-tidy
@@ -0,0 +1,13 @@
+FormatStyle: file
+
+Checks: '
+llvm-namespace-comment,
+modernize-use-override,
+readability-container-size-empty,
+modernize-use-using,
+modernize-use-equals-default,
+modernize-use-auto,
+modernize-use-emplace,
+'
+
+HeaderFilterRegex: 'pybind11/.*h'
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/.cmake-format.yaml
@@ -0,0 +1,73 @@
+parse:
+  additional_commands:
+    pybind11_add_module:
+      flags:
+        - THIN_LTO
+        - MODULE
+        - SHARED
+        - NO_EXTRAS
+        - EXCLUDE_FROM_ALL
+        - SYSTEM
+
+format:
+  line_width: 99
+  tab_size: 2
+
+  # If an argument group contains more than this many sub-groups
+  # (parg or kwarg groups) then force it to a vertical layout.
+  max_subgroups_hwrap: 2
+
+  # If a positional argument group contains more than this many
+  # arguments, then force it to a vertical layout.
+  max_pargs_hwrap: 6
+
+  # If a cmdline positional group consumes more than this many
+  # lines without nesting, then invalidate the layout (and nest)
+  max_rows_cmdline: 2
+  separate_ctrl_name_with_space: false
+  separate_fn_name_with_space: false
+  dangle_parens: false
+
+  # If the trailing parenthesis must be 'dangled' on its on
+  # 'line, then align it to this reference: `prefix`: the start'
+  # 'of the statement,  `prefix-indent`: the start of the'
+  # 'statement, plus one indentation  level, `child`: align to'
+  # the column of the arguments
+  dangle_align: prefix
+  # If the statement spelling length (including space and
+  # parenthesis) is smaller than this amount, then force reject
+  # nested layouts.
+  min_prefix_chars: 4
+
+  # If the statement spelling length (including space and
+  # parenthesis) is larger than the tab width by more than this
+  # amount, then force reject un-nested layouts.
+  max_prefix_chars: 10
+
+  # If a candidate layout is wrapped horizontally but it exceeds
+  # this many lines, then reject the layout.
+  max_lines_hwrap: 2
+
+  line_ending: unix
+
+  # Format command names consistently as 'lower' or 'upper' case
+  command_case: canonical
+
+  # Format keywords consistently as 'lower' or 'upper' case
+  # unchanged is valid too
+  keyword_case: 'upper'
+
+  # A list of command names which should always be wrapped
+  always_wrap: []
+
+  # If true, the argument lists which are known to be sortable
+  # will be sorted lexicographically
+  enable_sort: true
+
+  # If true, the parsers may infer whether or not an argument
+  # list is sortable (without annotation).
+  autosort: false
+
+# Causes a few issues - can be solved later, possibly.
+markup:
+  enable_markup: false
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/.github/CONTRIBUTING.md
@@ -0,0 +1,319 @@
+Thank you for your interest in this project! Please refer to the following
+sections on how to contribute code and bug reports.
+
+### Reporting bugs
+
+Before submitting a question or bug report, please take a moment of your time
+and ensure that your issue isn't already discussed in the project documentation
+provided at [pybind11.readthedocs.org][] or in the [issue tracker][]. You can
+also check [gitter][] to see if it came up before.
+
+Assuming that you have identified a previously unknown problem or an important
+question, it's essential that you submit a self-contained and minimal piece of
+code that reproduces the problem. In other words: no external dependencies,
+isolate the function(s) that cause breakage, submit matched and complete C++
+and Python snippets that can be easily compiled and run in isolation; or
+ideally make a small PR with a failing test case that can be used as a starting
+point.
+
+## Pull requests
+
+Contributions are submitted, reviewed, and accepted using GitHub pull requests.
+Please refer to [this article][using pull requests] for details and adhere to
+the following rules to make the process as smooth as possible:
+
+* Make a new branch for every feature you're working on.
+* Make small and clean pull requests that are easy to review but make sure they
+  do add value by themselves.
+* Add tests for any new functionality and run the test suite (`cmake --build
+  build --target pytest`) to ensure that no existing features break.
+* Please run [`pre-commit`][pre-commit] to check your code matches the
+  project style. (Note that `gawk` is required.) Use `pre-commit run
+  --all-files` before committing (or use installed-mode, check pre-commit docs)
+  to verify your code passes before pushing to save time.
+* This project has a strong focus on providing general solutions using a
+  minimal amount of code, thus small pull requests are greatly preferred.
+
+### Licensing of contributions
+
+pybind11 is provided under a BSD-style license that can be found in the
+``LICENSE`` file. By using, distributing, or contributing to this project, you
+agree to the terms and conditions of this license.
+
+You are under no obligation whatsoever to provide any bug fixes, patches, or
+upgrades to the features, functionality or performance of the source code
+("Enhancements") to anyone; however, if you choose to make your Enhancements
+available either publicly, or directly to the author of this software, without
+imposing a separate written license agreement for such Enhancements, then you
+hereby grant the following license: a non-exclusive, royalty-free perpetual
+license to install, use, modify, prepare derivative works, incorporate into
+other computer software, distribute, and sublicense such enhancements or
+derivative works thereof, in binary and source code form.
+
+
+## Development of pybind11
+
+To setup an ideal development environment, run the following commands on a
+system with CMake 3.14+:
+
+```bash
+python3 -m venv venv
+source venv/bin/activate
+pip install -r tests/requirements.txt
+cmake -S . -B build -DDOWNLOAD_CATCH=ON -DDOWNLOAD_EIGEN=ON
+cmake --build build -j4
+```
+
+Tips:
+
+* You can use `virtualenv` (from PyPI) instead of `venv` (which is Python 3
+  only).
+* You can select any name for your environment folder; if it contains "env" it
+  will be ignored by git.
+* If you don’t have CMake 3.14+, just add “cmake” to the pip install command.
+* You can use `-DPYBIND11_FINDPYTHON=ON` to use FindPython on CMake 3.12+
+* In classic mode, you may need to set `-DPYTHON_EXECUTABLE=/path/to/python`.
+  FindPython uses `-DPython_ROOT_DIR=/path/to` or
+  `-DPython_EXECUTABLE=/path/to/python`.
+
+### Configuration options
+
+In CMake, configuration options are given with “-D”. Options are stored in the
+build directory, in the `CMakeCache.txt` file, so they are remembered for each
+build directory. Two selections are special - the generator, given with `-G`,
+and the compiler, which is selected based on environment variables `CXX` and
+similar, or `-DCMAKE_CXX_COMPILER=`. Unlike the others, these cannot be changed
+after the initial run.
+
+The valid options are:
+
+* `-DCMAKE_BUILD_TYPE`: Release, Debug, MinSizeRel, RelWithDebInfo
+* `-DPYBIND11_FINDPYTHON=ON`: Use CMake 3.12+’s FindPython instead of the
+  classic, deprecated, custom FindPythonLibs
+* `-DPYBIND11_NOPYTHON=ON`: Disable all Python searching (disables tests)
+* `-DBUILD_TESTING=ON`: Enable the tests
+* `-DDOWNLOAD_CATCH=ON`: Download catch to build the C++ tests
+* `-DOWNLOAD_EIGEN=ON`: Download Eigen for the NumPy tests
+* `-DPYBIND11_INSTALL=ON/OFF`: Enable the install target (on by default for the
+  master project)
+* `-DUSE_PYTHON_INSTALL_DIR=ON`: Try to install into the python dir
+
+
+<details><summary>A few standard CMake tricks: (click to expand)</summary><p>
+
+* Use `cmake --build build -v` to see the commands used to build the files.
+* Use `cmake build -LH` to list the CMake options with help.
+* Use `ccmake` if available to see a curses (terminal) gui, or `cmake-gui` for
+  a completely graphical interface (not present in the PyPI package).
+* Use `cmake --build build -j12` to build with 12 cores (for example).
+* Use `-G` and the name of a generator to use something different. `cmake
+  --help` lists the generators available.
+      - On Unix, setting `CMAKE_GENERATER=Ninja` in your environment will give
+        you automatic mulithreading on all your CMake projects!
+* Open the `CMakeLists.txt` with QtCreator to generate for that IDE.
+* You can use `-DCMAKE_EXPORT_COMPILE_COMMANDS=ON` to generate the `.json` file
+  that some tools expect.
+
+</p></details>
+
+
+To run the tests, you can "build" the check target:
+
+```bash
+cmake --build build --target check
+```
+
+`--target` can be spelled `-t` in CMake 3.15+. You can also run individual
+tests with these targets:
+
+* `pytest`: Python tests only
+* `cpptest`: C++ tests only
+* `test_cmake_build`: Install / subdirectory tests
+
+If you want to build just a subset of tests, use
+`-DPYBIND11_TEST_OVERRIDE="test_callbacks.cpp;test_pickling.cpp"`. If this is
+empty, all tests will be built.
+
+### Formatting
+
+All formatting is handled by pre-commit.
+
+Install with brew (macOS) or pip (any OS):
+
+```bash
+# Any OS
+python3 -m pip install pre-commit
+
+# OR macOS with homebrew:
+brew install pre-commit
+```
+
+Then, you can run it on the items you've added to your staging area, or all
+files:
+
+```bash
+pre-commit run
+# OR
+pre-commit run --all-files
+```
+
+And, if you want to always use it, you can install it as a git hook (hence the
+name, pre-commit):
+
+```bash
+pre-commit install
+```
+
+### Clang-Tidy
+
+To run Clang tidy, the following recipe should work. Files will be modified in
+place, so you can use git to monitor the changes.
+
+```bash
+docker run --rm -v $PWD:/pybind11 -it silkeh/clang:10
+apt-get update && apt-get install python3-dev python3-pytest
+cmake -S pybind11/ -B build -DCMAKE_CXX_CLANG_TIDY="$(which clang-tidy);-fix"
+cmake --build build
+```
+
+### Include what you use
+
+To run include what you use, install (`brew install include-what-you-use` on
+macOS), then run:
+
+```bash
+cmake -S . -B build-iwyu -DCMAKE_CXX_INCLUDE_WHAT_YOU_USE=$(which include-what-you-use)
+cmake --build build
+```
+
+The report is sent to stderr; you can pip it into a file if you wish.
+
+### Build recipes
+
+This builds with the Intel compiler (assuming it is in your path, along with a
+recent CMake and Python 3):
+
+```bash
+python3 -m venv venv
+. venv/bin/activate
+pip install pytest
+cmake -S . -B build-intel -DCMAKE_CXX_COMPILER=$(which icpc) -DDOWNLOAD_CATCH=ON -DDOWNLOAD_EIGEN=ON -DPYBIND11_WERROR=ON
+```
+
+This will test the PGI compilers:
+
+```bash
+docker run --rm -it -v $PWD:/pybind11 nvcr.io/hpc/pgi-compilers:ce
+apt-get update && apt-get install -y python3-dev python3-pip python3-pytest
+wget -qO- "https://cmake.org/files/v3.18/cmake-3.18.2-Linux-x86_64.tar.gz" | tar --strip-components=1 -xz -C /usr/local
+cmake -S pybind11/ -B build
+cmake --build build
+```
+
+### Explanation of the SDist/wheel building design
+
+> These details below are _only_ for packaging the Python sources from git. The
+> SDists and wheels created do not have any extra requirements at all and are
+> completely normal.
+
+The main objective of the packaging system is to create SDists (Python's source
+distribution packages) and wheels (Python's binary distribution packages) that
+include everything that is needed to work with pybind11, and which can be
+installed without any additional dependencies. This is more complex than it
+appears: in order to support CMake as a first class language even when using
+the PyPI package, they must include the _generated_ CMake files (so as not to
+require CMake when installing the `pybind11` package itself). They should also
+provide the option to install to the "standard" location
+(`<ENVROOT>/include/pybind11` and `<ENVROOT>/share/cmake/pybind11`) so they are
+easy to find with CMake, but this can cause problems if you are not an
+environment or using ``pyproject.toml`` requirements. This was solved by having
+two packages; the "nice" pybind11 package that stores the includes and CMake
+files inside the package, that you get access to via functions in the package,
+and a `pybind11-global` package that can be included via `pybind11[global]` if
+you want the more invasive but discoverable file locations.
+
+If you want to install or package the GitHub source, it is best to have Pip 10
+or newer on Windows, macOS, or Linux (manylinux1 compatible, includes most
+distributions).  You can then build the SDists, or run any procedure that makes
+SDists internally, like making wheels or installing.
+
+
+```bash
+# Editable development install example
+python3 -m pip install -e .
+```
+
+Since Pip itself does not have an `sdist` command (it does have `wheel` and
+`install`), you may want to use the upcoming `build` package:
+
+```bash
+python3 -m pip install build
+
+# Normal package
+python3 -m build -s .
+
+# Global extra
+PYBIND11_GLOBAL_SDIST=1 python3 -m build -s .
+```
+
+If you want to use the classic "direct" usage of `python setup.py`, you will
+need CMake 3.15+ and either `make` or `ninja` preinstalled (possibly via `pip
+install cmake ninja`), since directly running Python on `setup.py` cannot pick
+up and install `pyproject.toml` requirements. As long as you have those two
+things, though, everything works the way you would expect:
+
+```bash
+# Normal package
+python3 setup.py sdist
+
+# Global extra
+PYBIND11_GLOBAL_SDIST=1 python3 setup.py sdist
+```
+
+A detailed explanation of the build procedure design for developers wanting to
+work on or maintain the packaging system is as follows:
+
+#### 1. Building from the source directory
+
+When you invoke any `setup.py` command from the source directory, including
+`pip wheel .` and `pip install .`, you will activate a full source build. This
+is made of the following steps:
+
+1. If the tool is PEP 518 compliant, like Pip 10+, it will create a temporary
+   virtual environment and install the build requirements (mostly CMake) into
+   it. (if you are not on Windows, macOS, or a manylinux compliant system, you
+   can disable this with `--no-build-isolation` as long as you have CMake 3.15+
+   installed)
+2. The environment variable `PYBIND11_GLOBAL_SDIST` is checked - if it is set
+   and truthy, this will be make the accessory `pybind11-global` package,
+   instead of the normal `pybind11` package. This package is used for
+   installing the files directly to your environment root directory, using
+   `pybind11[global]`.
+2. `setup.py` reads the version from `pybind11/_version.py` and verifies it
+   matches `includes/pybind11/detail/common.h`.
+3. CMake is run with `-DCMAKE_INSTALL_PREIFX=pybind11`. Since the CMake install
+   procedure uses only relative paths and is identical on all platforms, these
+   files are valid as long as they stay in the correct relative position to the
+   includes. `pybind11/share/cmake/pybind11` has the CMake files, and
+   `pybind11/include` has the includes. The build directory is discarded.
+4. Simpler files are placed in the SDist: `tools/setup_*.py.in`,
+   `tools/pyproject.toml` (`main` or `global`)
+5. The package is created by running the setup function in the
+   `tools/setup_*.py`.  `setup_main.py` fills in Python packages, and
+   `setup_global.py` fills in only the data/header slots.
+6. A context manager cleans up the temporary CMake install directory (even if
+   an error is thrown).
+
+### 2. Building from SDist
+
+Since the SDist has the rendered template files in `tools` along with the
+includes and CMake files in the correct locations, the builds are completely
+trivial and simple. No extra requirements are required. You can even use Pip 9
+if you really want to.
+
+
+[pre-commit]: https://pre-commit.com
+[pybind11.readthedocs.org]: http://pybind11.readthedocs.org/en/latest
+[issue tracker]: https://github.com/pybind/pybind11/issues
+[gitter]: https://gitter.im/pybind/Lobby
+[using pull requests]: https://help.github.com/articles/using-pull-requests
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/.github/ISSUE_TEMPLATE/bug-report.md
@@ -0,0 +1,28 @@
+---
+name: Bug Report
+about: File an issue about a bug
+title: "[BUG] "
+---
+
+
+Make sure you've completed the following steps before submitting your issue -- thank you!
+
+1. Make sure you've read the [documentation][]. Your issue may be addressed there.
+2. Search the [issue tracker][] to verify that this hasn't already been reported. +1 or comment there if it has.
+3. Consider asking first in the [Gitter chat room][].
+4. Include a self-contained and minimal piece of code that reproduces the problem. If that's not possible, try to make the description as clear as possible.
+    a. If possible, make a PR with a new, failing test to give us a starting point to work on!
+
+[documentation]: https://pybind11.readthedocs.io
+[issue tracker]: https://github.com/pybind/pybind11/issues
+[Gitter chat room]: https://gitter.im/pybind/Lobby
+
+*After reading, remove this checklist and the template text in parentheses below.*
+
+## Issue description
+
+(Provide a short description, state the expected behavior and what actually happens.)
+
+## Reproducible example code
+
+(The code should be minimal, have no external dependencies, isolate the function(s) that cause breakage. Submit matched and complete C++ and Python snippets that can be easily compiled and run to diagnose the issue.)
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/.github/ISSUE_TEMPLATE/config.yml
@@ -0,0 +1,5 @@
+blank_issues_enabled: false
+contact_links:
+  - name: Gitter room
+    url: https://gitter.im/pybind/Lobby
+    about: A room for discussing pybind11 with an active community
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/.github/ISSUE_TEMPLATE/feature-request.md
@@ -0,0 +1,16 @@
+---
+name: Feature Request
+about: File an issue about adding a feature
+title: "[FEAT] "
+---
+
+
+Make sure you've completed the following steps before submitting your issue -- thank you!
+
+1. Check if your feature has already been mentioned / rejected / planned in other issues.
+2. If those resources didn't help, consider asking in the [Gitter chat room][] to see if this is interesting / useful to a larger audience and possible to implement reasonably,
+4. If you have a useful feature that passes the previous items (or not suitable for chat), please fill in the details below.
+
+[Gitter chat room]: https://gitter.im/pybind/Lobby
+
+*After reading, remove this checklist.*
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/.github/ISSUE_TEMPLATE/question.md
@@ -0,0 +1,21 @@
+---
+name: Question
+about: File an issue about unexplained behavior
+title: "[QUESTION] "
+---
+
+If you have a question, please check the following first:
+
+1. Check if your question has already been answered in the [FAQ][] section.
+2. Make sure you've read the [documentation][]. Your issue may be addressed there.
+3. If those resources didn't help and you only have a short question (not a bug report), consider asking in the [Gitter chat room][]
+4. Search the [issue tracker][], including the closed issues, to see if your question has already been asked/answered. +1 or comment if it has been asked but has no answer.
+5. If you have a more complex question which is not answered in the previous items (or not suitable for chat), please fill in the details below.
+6. Include a self-contained and minimal piece of code that illustrates your question. If that's not possible, try to make the description as clear as possible.
+
+[FAQ]: http://pybind11.readthedocs.io/en/latest/faq.html
+[documentation]: https://pybind11.readthedocs.io
+[issue tracker]: https://github.com/pybind/pybind11/issues
+[Gitter chat room]: https://gitter.im/pybind/Lobby
+
+*After reading, remove this checklist.*
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/.github/workflows/ci.yml
@@ -0,0 +1,519 @@
+name: CI
+
+on:
+  workflow_dispatch:
+  pull_request:
+  push:
+    branches:
+      - master
+      - stable
+      - v*
+
+jobs:
+  # This is the "main" test suite, which tests a large number of different
+  # versions of default compilers and Python versions in GitHub Actions.
+  standard:
+    strategy:
+      fail-fast: false
+      matrix:
+        runs-on: [ubuntu-latest, windows-latest, macos-latest]
+        arch: [x64]
+        python:
+        - 2.7
+        - 3.5
+        - 3.8
+        - pypy2
+        - pypy3
+
+        # Items in here will either be added to the build matrix (if not
+        # present), or add new keys to an existing matrix element if all the
+        # existing keys match.
+        #
+        # We support three optional keys: args (both build), args1 (first
+        # build), and args2 (second build).
+        include:
+          - runs-on: ubuntu-latest
+            python: 3.6
+            arch: x64
+            args: >
+              -DPYBIND11_FINDPYTHON=ON
+          - runs-on: windows-2016
+            python: 3.7
+            arch: x86
+            args2: >
+              -DCMAKE_CXX_FLAGS="/permissive- /EHsc /GR"
+          - runs-on: windows-latest
+            python: 3.6
+            arch: x64
+            args: >
+              -DPYBIND11_FINDPYTHON=ON
+          - runs-on: windows-latest
+            python: 3.7
+            arch: x64
+
+          - runs-on: ubuntu-latest
+            python: 3.9-dev
+            arch: x64
+          - runs-on: macos-latest
+            python: 3.9-dev
+            arch: x64
+            args: >
+              -DPYBIND11_FINDPYTHON=ON
+
+        # These items will be removed from the build matrix, keys must match.
+        exclude:
+            # Currently 32bit only, and we build 64bit
+          - runs-on: windows-latest
+            python: pypy2
+            arch: x64
+          - runs-on: windows-latest
+            python: pypy3
+            arch: x64
+
+            # Currently broken on embed_test
+          - runs-on: windows-latest
+            python: 3.8
+            arch: x64
+          - runs-on: windows-latest
+            python: 3.9-dev
+            arch: x64
+
+    name: "🐍 ${{ matrix.python }} • ${{ matrix.runs-on }} • ${{ matrix.arch }} ${{ matrix.args }}"
+    runs-on: ${{ matrix.runs-on }}
+    continue-on-error: ${{ endsWith(matrix.python, 'dev') }}
+
+    steps:
+    - uses: actions/checkout@v2
+
+    - name: Setup Python ${{ matrix.python }}
+      uses: actions/setup-python@v2
+      with:
+        python-version: ${{ matrix.python }}
+        architecture: ${{ matrix.arch }}
+
+    - name: Setup Boost (Windows / Linux latest)
+      run: echo "::set-env name=BOOST_ROOT::$BOOST_ROOT_1_72_0"
+
+    - name: Update CMake
+      uses: jwlawson/actions-setup-cmake@v1.3
+
+    - name: Cache wheels
+      if: runner.os == 'macOS'
+      uses: actions/cache@v2
+      with:
+        # This path is specific to macOS - we really only need it for PyPy NumPy wheels
+        # See https://github.com/actions/cache/blob/master/examples.md#python---pip
+        # for ways to do this more generally
+        path: ~/Library/Caches/pip
+        # Look to see if there is a cache hit for the corresponding requirements file
+        key: ${{ runner.os }}-pip-${{ matrix.python }}-${{ matrix.arch }}-${{ hashFiles('tests/requirements.txt') }}
+
+    - name: Prepare env
+      run: python -m pip install -r tests/requirements.txt --prefer-binary
+
+    - name: Setup annotations on Linux
+      if: runner.os == 'Linux'
+      run: python -m pip install pytest-github-actions-annotate-failures
+
+    # First build - C++11 mode and inplace
+    - name: Configure C++11 ${{ matrix.args }}
+      run: >
+        cmake -S . -B .
+        -DPYBIND11_WERROR=ON
+        -DDOWNLOAD_CATCH=ON
+        -DDOWNLOAD_EIGEN=ON
+        -DCMAKE_CXX_STANDARD=11
+        ${{ matrix.args }}
+
+    - name: Build C++11
+      run: cmake --build . -j 2
+
+    - name: Python tests C++11
+      run: cmake --build . --target pytest -j 2
+
+    - name: C++11 tests
+      run: cmake --build .  --target cpptest -j 2
+
+    - name: Interface test C++11
+      run: cmake --build . --target test_cmake_build
+
+    - name: Clean directory
+      run: git clean -fdx
+
+    # Second build - C++17 mode and in a build directory
+    - name: Configure ${{ matrix.args2 }}
+      run: >
+        cmake -S . -B build2
+        -DPYBIND11_WERROR=ON
+        -DDOWNLOAD_CATCH=ON
+        -DDOWNLOAD_EIGEN=ON
+        -DCMAKE_CXX_STANDARD=17
+        ${{ matrix.args }}
+        ${{ matrix.args2 }}
+
+    - name: Build
+      run: cmake --build build2 -j 2
+
+    - name: Python tests
+      run: cmake --build build2 --target pytest
+
+    - name: C++ tests
+      run: cmake --build build2 --target cpptest
+
+    - name: Interface test
+      run: cmake --build build2 --target test_cmake_build
+
+    # Eventually Microsoft might have an action for setting up
+    # MSVC, but for now, this action works:
+    - name: Prepare compiler environment for Windows 🐍 2.7
+      if: matrix.python == 2.7 && runner.os == 'Windows'
+      uses: ilammy/msvc-dev-cmd@v1
+      with:
+        arch: x64
+
+    # This makes two environment variables available in the following step(s)
+    - name: Set Windows 🐍 2.7 environment variables
+      if: matrix.python == 2.7 && runner.os == 'Windows'
+      run: |
+        echo "::set-env name=DISTUTILS_USE_SDK::1"
+        echo "::set-env name=MSSdk::1"
+
+    # This makes sure the setup_helpers module can build packages using
+    # setuptools
+    - name: Setuptools helpers test
+      run: pytest tests/extra_setuptools
+
+
+  # Testing on clang using the excellent silkeh clang docker images
+  clang:
+    runs-on: ubuntu-latest
+    strategy:
+      fail-fast: false
+      matrix:
+        clang:
+          - 3.6
+          - 3.7
+          - 3.9
+          - 5
+          - 7
+          - 9
+          - dev
+
+    name: "🐍 3 • Clang ${{ matrix.clang }} • x64"
+    container: "silkeh/clang:${{ matrix.clang }}"
+
+    steps:
+    - uses: actions/checkout@v2
+
+    - name: Add wget and python3
+      run: apt-get update && apt-get install -y python3-dev python3-numpy python3-pytest libeigen3-dev
+
+    - name: Configure
+      shell: bash
+      run: >
+        cmake -S . -B build
+        -DPYBIND11_WERROR=ON
+        -DDOWNLOAD_CATCH=ON
+        -DPYTHON_EXECUTABLE=$(python3 -c "import sys; print(sys.executable)")
+
+    - name: Build
+      run: cmake --build build -j 2
+
+    - name: Python tests
+      run: cmake --build build --target pytest
+
+    - name: C++ tests
+      run: cmake --build build --target cpptest
+
+    - name: Interface test
+      run: cmake --build build --target test_cmake_build
+
+
+  # Testing NVCC; forces sources to behave like .cu files
+  cuda:
+    runs-on: ubuntu-latest
+    name: "🐍 3.8 • CUDA 11 • Ubuntu 20.04"
+    container: nvidia/cuda:11.0-devel-ubuntu20.04
+
+    steps:
+    - uses: actions/checkout@v2
+
+    # tzdata will try to ask for the timezone, so set the DEBIAN_FRONTEND
+    - name: Install 🐍 3
+      run: apt-get update && DEBIAN_FRONTEND="noninteractive" apt-get install -y cmake git python3-dev python3-pytest python3-numpy
+
+    - name: Configure
+      run: cmake -S . -B build -DPYBIND11_CUDA_TESTS=ON -DPYBIND11_WERROR=ON -DDOWNLOAD_CATCH=ON
+
+    - name: Build
+      run: cmake --build build -j2 --verbose
+
+    - name: Python tests
+      run: cmake --build build --target pytest
+
+
+  # Testing CentOS 8 + PGI compilers
+  centos-nvhpc8:
+    runs-on: ubuntu-latest
+    name: "🐍 3 • CentOS8 / PGI 20.7 • x64"
+    container: centos:8
+
+    steps:
+    - uses: actions/checkout@v2
+
+    - name: Add Python 3 and a few requirements
+      run: yum update -y && yum install -y git python3-devel python3-numpy python3-pytest make environment-modules
+
+    - name: Install CMake with pip
+      run: |
+        python3 -m pip install --upgrade pip
+        python3 -m pip install cmake --prefer-binary
+
+    - name: Install NVidia HPC SDK
+      run: yum -y install https://developer.download.nvidia.com/hpc-sdk/nvhpc-20-7-20.7-1.x86_64.rpm https://developer.download.nvidia.com/hpc-sdk/nvhpc-2020-20.7-1.x86_64.rpm
+
+    - name: Configure
+      shell: bash
+      run: |
+        source /etc/profile.d/modules.sh
+        module load /opt/nvidia/hpc_sdk/modulefiles/nvhpc/20.7
+        cmake -S . -B build -DDOWNLOAD_CATCH=ON -DCMAKE_CXX_STANDARD=14 -DPYTHON_EXECUTABLE=$(python3 -c "import sys; print(sys.executable)")
+
+    - name: Build
+      run: cmake --build build -j 2 --verbose
+
+    - name: Python tests
+      run: cmake --build build --target pytest
+
+    - name: C++ tests
+      run: cmake --build build --target cpptest
+
+    - name: Interface test
+      run: cmake --build build --target test_cmake_build
+
+
+  # Testing on CentOS 7 + PGI compilers, which seems to require more workarounds
+  centos-nvhpc7:
+    runs-on: ubuntu-latest
+    name: "🐍 3 • CentOS7 / PGI 20.7 • x64"
+    container: centos:7
+
+    steps:
+    - uses: actions/checkout@v2
+
+    - name: Add Python 3 and a few requirements
+      run: yum update -y && yum install -y epel-release && yum install -y git python3-devel make environment-modules cmake3
+
+    - name: Install NVidia HPC SDK
+      run:  yum -y install https://developer.download.nvidia.com/hpc-sdk/nvhpc-20-7-20.7-1.x86_64.rpm https://developer.download.nvidia.com/hpc-sdk/nvhpc-2020-20.7-1.x86_64.rpm
+
+    # On CentOS 7, we have to filter a few tests (compiler internal error)
+    # and allow deeper templete recursion (not needed on CentOS 8 with a newer
+    # standard library). On some systems, you many need further workarounds:
+    # https://github.com/pybind/pybind11/pull/2475
+    - name: Configure
+      shell: bash
+      run: |
+        source /etc/profile.d/modules.sh
+        module load /opt/nvidia/hpc_sdk/modulefiles/nvhpc/20.7
+        cmake3 -S . -B build -DDOWNLOAD_CATCH=ON \
+                            -DCMAKE_CXX_STANDARD=11 \
+                            -DPYTHON_EXECUTABLE=$(python3 -c "import sys; print(sys.executable)") \
+                            -DCMAKE_CXX_FLAGS="-Wc,--pending_instantiations=0" \
+                            -DPYBIND11_TEST_FILTER="test_smart_ptr.cpp;test_virtual_functions.cpp"
+
+    # Building before installing Pip should produce a warning but not an error
+    - name: Build
+      run: cmake3 --build build -j 2 --verbose
+
+    - name: Install CMake with pip
+      run: |
+        python3 -m pip install --upgrade pip
+        python3 -m pip install pytest
+
+    - name: Python tests
+      run: cmake3 --build build --target pytest
+
+    - name: C++ tests
+      run: cmake3 --build build --target cpptest
+
+    - name: Interface test
+      run: cmake3 --build build --target test_cmake_build
+
+  # Testing on GCC using the GCC docker images (only recent images supported)
+  gcc:
+    runs-on: ubuntu-latest
+    strategy:
+      fail-fast: false
+      matrix:
+        gcc:
+          - 7
+          - latest
+
+    name: "🐍 3 • GCC ${{ matrix.gcc }} • x64"
+    container: "gcc:${{ matrix.gcc }}"
+
+    steps:
+    - uses: actions/checkout@v1
+
+    - name: Add Python 3
+      run: apt-get update; apt-get install -y python3-dev python3-numpy python3-pytest python3-pip libeigen3-dev
+
+    - name: Update pip
+      run: python3 -m pip install --upgrade pip
+
+    - name: Setup CMake 3.18
+      uses: jwlawson/actions-setup-cmake@v1.3
+      with:
+        cmake-version: 3.18
+
+    - name: Configure
+      shell: bash
+      run: >
+        cmake -S . -B build
+        -DPYBIND11_WERROR=ON
+        -DDOWNLOAD_CATCH=ON
+        -DCMAKE_CXX_STANDARD=11
+        -DPYTHON_EXECUTABLE=$(python3 -c "import sys; print(sys.executable)")
+
+    - name: Build
+      run: cmake --build build -j 2
+
+    - name: Python tests
+      run: cmake --build build --target pytest
+
+    - name: C++ tests
+      run: cmake --build build --target cpptest
+
+    - name: Interface test
+      run: cmake --build build --target test_cmake_build
+
+
+  # Testing on CentOS (manylinux uses a centos base, and this is an easy way
+  # to get GCC 4.8, which is the manylinux1 compiler).
+  centos:
+    runs-on: ubuntu-latest
+    strategy:
+      fail-fast: false
+      matrix:
+        centos:
+          - 7  # GCC 4.8
+          - 8
+
+    name: "🐍 3 • CentOS ${{ matrix.centos }} • x64"
+    container: "centos:${{ matrix.centos }}"
+
+    steps:
+    - uses: actions/checkout@v2
+
+    - name: Add Python 3
+      run: yum update -y && yum install -y python3-devel gcc-c++ make git
+
+    - name: Update pip
+      run: python3 -m pip install --upgrade pip
+
+    - name: Install dependencies
+      run: python3 -m pip install cmake -r tests/requirements.txt --prefer-binary
+
+    - name: Configure
+      shell: bash
+      run: >
+        cmake -S . -B build
+        -DPYBIND11_WERROR=ON
+        -DDOWNLOAD_CATCH=ON
+        -DDOWNLOAD_EIGEN=ON
+        -DCMAKE_CXX_STANDARD=11
+        -DPYTHON_EXECUTABLE=$(python3 -c "import sys; print(sys.executable)")
+
+    - name: Build
+      run: cmake --build build -j 2
+
+    - name: Python tests
+      run: cmake --build build --target pytest
+
+    - name: C++ tests
+      run: cmake --build build --target cpptest
+
+    - name: Interface test
+      run: cmake --build build --target test_cmake_build
+
+
+  # This tests an "install" with the CMake tools
+  install-classic:
+    name: "🐍 3.5 • Debian • x86 •  Install"
+    runs-on: ubuntu-latest
+    container: i386/debian:stretch
+
+    steps:
+    - uses: actions/checkout@v1
+
+    - name: Install requirements
+      run: |
+        apt-get update
+        apt-get install -y git make cmake g++ libeigen3-dev python3-dev python3-pip
+        pip3 install "pytest==3.1.*"
+
+    - name: Configure for install
+      run: >
+        cmake .
+        -DPYBIND11_INSTALL=1 -DPYBIND11_TEST=0
+        -DPYTHON_EXECUTABLE=$(python3 -c "import sys; print(sys.executable)")
+
+    - name: Make and install
+      run: make install
+
+    - name: Copy tests to new directory
+      run: cp -a tests /pybind11-tests
+
+    - name: Make a new test directory
+      run: mkdir /build-tests
+
+    - name: Configure tests
+      run: >
+        cmake ../pybind11-tests
+        -DDOWNLOAD_CATCH=ON
+        -DPYBIND11_WERROR=ON
+        -DPYTHON_EXECUTABLE=$(python3 -c "import sys; print(sys.executable)")
+      working-directory: /build-tests
+
+    - name: Run tests
+      run: make pytest -j 2
+      working-directory: /build-tests
+
+
+  # This verifies that the documentation is not horribly broken, and does a
+  # basic sanity check on the SDist.
+  doxygen:
+    name: "Documentation build test"
+    runs-on: ubuntu-latest
+
+    steps:
+    - uses: actions/checkout@v2
+
+    - uses: actions/setup-python@v2
+
+    - name: Install Doxygen
+      run: sudo apt install -y doxygen
+
+    - name: Install docs & setup requirements
+      run: python3 -m pip install -r docs/requirements.txt
+
+    - name: Build docs
+      run: python3 -m sphinx -W -b html docs docs/.build
+
+    - name: Make SDist
+      run: python3 setup.py sdist
+
+    - run: git status --ignored
+
+    - name: Check local include dir
+      run: >
+        ls pybind11;
+        python3 -c "import pybind11, pathlib; assert (a := pybind11.get_include()) == (b := str(pathlib.Path('include').resolve())), f'{a} != {b}'"
+
+    - name: Compare Dists (headers only)
+      working-directory: include
+      run: |
+        python3 -m pip install --user -U ../dist/*
+        installed=$(python3 -c "import pybind11; print(pybind11.get_include() + '/pybind11')")
+        diff -rq $installed ./pybind11
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/.github/workflows/configure.yml
@@ -0,0 +1,138 @@
+name: Config
+
+on:
+  workflow_dispatch:
+  pull_request:
+  push:
+    branches:
+      - master
+      - stable
+      - v*
+
+jobs:
+  # This tests various versions of CMake in various combinations, to make sure
+  # the configure step passes.
+  cmake:
+    strategy:
+      fail-fast: false
+      matrix:
+        runs-on: [ubuntu-latest, macos-latest, windows-latest]
+        arch: [x64]
+        cmake: [3.18]
+
+        include:
+        - runs-on: ubuntu-latest
+          arch: x64
+          cmake: 3.4
+
+        - runs-on: macos-latest
+          arch: x64
+          cmake: 3.7
+
+        - runs-on: windows-2016
+          arch: x86
+          cmake: 3.8
+
+        - runs-on: windows-2016
+          arch: x86
+          cmake: 3.18
+
+    name: 🐍 3.7 • CMake ${{ matrix.cmake }} • ${{ matrix.runs-on }}
+    runs-on: ${{ matrix.runs-on }}
+
+    steps:
+    - uses: actions/checkout@v2
+
+    - name: Setup Python 3.7
+      uses: actions/setup-python@v2
+      with:
+        python-version: 3.7
+        architecture: ${{ matrix.arch }}
+
+    - name: Prepare env
+      run: python -m pip install -r tests/requirements.txt
+
+    # An action for adding a specific version of CMake:
+    #   https://github.com/jwlawson/actions-setup-cmake
+    - name: Setup CMake ${{ matrix.cmake }}
+      uses: jwlawson/actions-setup-cmake@v1.3
+      with:
+        cmake-version: ${{ matrix.cmake }}
+
+    # These steps use a directory with a space in it intentionally
+    - name: Make build directories
+      run: mkdir "build dir"
+
+    - name: Configure
+      working-directory: build dir
+      shell: bash
+      run: >
+        cmake ..
+        -DPYBIND11_WERROR=ON
+        -DDOWNLOAD_CATCH=ON
+        -DPYTHON_EXECUTABLE=$(python -c "import sys; print(sys.executable)")
+
+    # Only build and test if this was manually triggered in the GitHub UI
+    - name: Build
+      working-directory: build dir
+      if: github.event_name == 'workflow_dispatch'
+      run: cmake --build . --config Release
+
+    - name: Test
+      working-directory: build dir
+      if: github.event_name == 'workflow_dispatch'
+      run: cmake --build . --config Release --target check
+
+  # This builds the sdists and wheels and makes sure the files are exactly as
+  # expected. Using Windows and Python 2.7, since that is often the most
+  # challenging matrix element.
+  test-packaging:
+    name: 🐍 2.7 • 📦 tests • windows-latest
+    runs-on: windows-latest
+
+    steps:
+    - uses: actions/checkout@v2
+
+    - name: Setup 🐍 2.7
+      uses: actions/setup-python@v2
+      with:
+        python-version: 2.7
+
+    - name: Prepare env
+      run: python -m pip install -r tests/requirements.txt --prefer-binary
+
+    - name: Python Packaging tests
+      run: pytest tests/extra_python_package/
+
+
+  # This runs the packaging tests and also builds and saves the packages as
+  # artifacts.
+  packaging:
+    name: 🐍 3.8 • 📦 & 📦 tests • ubuntu-latest
+    runs-on: ubuntu-latest
+
+    steps:
+    - uses: actions/checkout@v2
+
+    - name: Setup 🐍 3.8
+      uses: actions/setup-python@v2
+      with:
+        python-version: 3.8
+
+    - name: Prepare env
+      run: python -m pip install -r tests/requirements.txt build twine --prefer-binary
+
+    - name: Python Packaging tests
+      run: pytest tests/extra_python_package/
+
+    - name: Build SDist and wheels
+      run: |
+        python -m build -s -w .
+        PYBIND11_GLOBAL_SDIST=1 python -m build -s -w .
+
+    - name: Check metadata
+      run: twine check dist/*
+
+    - uses: actions/upload-artifact@v2
+      with:
+        path: dist/*
--- gtsam-4.1.0.orig/wrap/pybind11/.github/workflows/format.yml
+++ gtsam-4.1.0/wrap/pybind11/.github/workflows/format.yml
@@ -1,3 +1,6 @@
+# This is a format job. Pre-commit has a first-party GitHub action, so we use
+# that: https://github.com/pre-commit/action
+
 name: Format
 
 on:
@@ -17,3 +20,22 @@ jobs:
     - uses: actions/checkout@v2
     - uses: actions/setup-python@v2
     - uses: pre-commit/action@v2.0.0
+      with:
+        # Slow hooks are marked with manual - slow is okay here, run them too
+        extra_args: --hook-stage manual
+
+  clang-tidy:
+    name: Clang-Tidy
+    runs-on: ubuntu-latest
+    container: silkeh/clang:10
+    steps:
+    - uses: actions/checkout@v2
+
+    - name: Install requirements
+      run: apt-get update && apt-get install -y python3-dev python3-pytest
+
+    - name: Configure
+      run: cmake -S . -B build -DCMAKE_CXX_CLANG_TIDY="$(which clang-tidy);--warnings-as-errors=*"
+
+    - name: Build
+      run: cmake --build build -j 2
--- gtsam-4.1.0.orig/wrap/pybind11/.pre-commit-config.yaml
+++ gtsam-4.1.0/wrap/pybind11/.pre-commit-config.yaml
@@ -1,6 +1,21 @@
+# To use:
+#
+#     pre-commit run -a
+#
+# Or:
+#
+#     pre-commit install  # (runs every time you commit in git)
+#
+# To update this file:
+#
+#     pre-commit autoupdate
+#
+# See https://github.com/pre-commit/pre-commit
+
 repos:
+# Standard hooks
 - repo: https://github.com/pre-commit/pre-commit-hooks
-  rev: v3.1.0
+  rev: v3.2.0
   hooks:
   - id: check-added-large-files
   - id: check-case-conflict
@@ -14,15 +29,60 @@ repos:
   - id: trailing-whitespace
   - id: fix-encoding-pragma
 
+# Black, the code formatter, natively supports pre-commit
+- repo: https://github.com/psf/black
+  rev: 20.8b1
+  hooks:
+  - id: black
+    # Not all Python files are Blacked, yet
+    files: ^(setup.py|pybind11|tests/extra)
+
+# Changes tabs to spaces
 - repo: https://github.com/Lucas-C/pre-commit-hooks
-  rev: v1.1.7
+  rev: v1.1.9
   hooks:
   - id: remove-tabs
-    exclude: (Makefile|debian/rules|.gitmodules)(\.in)?$
 
+# Flake8 also supports pre-commit natively (same author)
 - repo: https://gitlab.com/pycqa/flake8
-  rev: 3.8.2
+  rev: 3.8.3
   hooks:
   - id: flake8
-    additional_dependencies: [flake8-bugbear]
+    additional_dependencies: [flake8-bugbear, pep8-naming]
     exclude: ^(docs/.*|tools/.*)$
+
+# CMake formatting
+- repo: https://github.com/cheshirekow/cmake-format-precommit
+  rev: v0.6.11
+  hooks:
+  - id: cmake-format
+    additional_dependencies: [pyyaml]
+    types: [file]
+    files: (\.cmake|CMakeLists.txt)(.in)?$
+
+# Checks the manifest for missing files (native support)
+- repo: https://github.com/mgedmin/check-manifest
+  rev: "0.42"
+  hooks:
+  - id: check-manifest
+    # This is a slow hook, so only run this if --hook-stage manual is passed
+    stages: [manual]
+    additional_dependencies: [cmake, ninja]
+
+# The original pybind11 checks for a few C++ style items
+- repo: local
+  hooks:
+  - id: disallow-caps
+    name: Disallow improper capitalization
+    language: pygrep
+    entry: PyBind|Numpy|Cmake
+    exclude: .pre-commit-config.yaml
+
+- repo: local
+  hooks:
+  - id: check-style
+    name: Classic check-style
+    language: system
+    types:
+    - c++
+    entry: ./tools/check-style.sh
--- gtsam-4.1.0.orig/wrap/pybind11/CMakeLists.txt
+++ gtsam-4.1.0/wrap/pybind11/CMakeLists.txt
@@ -5,153 +5,263 @@
 # All rights reserved. Use of this source code is governed by a
 # BSD-style license that can be found in the LICENSE file.
 
-cmake_minimum_required(VERSION 2.8.12)
+cmake_minimum_required(VERSION 3.4)
 
-if (POLICY CMP0048)
-  # cmake warns if loaded from a min-3.0-required parent dir, so silence the warning:
-  cmake_policy(SET CMP0048 NEW)
+# The `cmake_minimum_required(VERSION 3.4...3.18)` syntax does not work with
+# some versions of VS that have a patched CMake 3.11. This forces us to emulate
+# the behavior using the following workaround:
+if(${CMAKE_VERSION} VERSION_LESS 3.18)
+  cmake_policy(VERSION ${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION})
+else()
+  cmake_policy(VERSION 3.18)
 endif()
 
-# CMake versions < 3.4.0 do not support try_compile/pthread checks without C as active language.
-if(CMAKE_VERSION VERSION_LESS 3.4.0)
-  project(pybind11)
-else()
-  project(pybind11 CXX)
+# Extract project version from source
+file(STRINGS "${CMAKE_CURRENT_SOURCE_DIR}/include/pybind11/detail/common.h"
+     pybind11_version_defines REGEX "#define PYBIND11_VERSION_(MAJOR|MINOR|PATCH) ")
+
+foreach(ver ${pybind11_version_defines})
+  if(ver MATCHES [[#define PYBIND11_VERSION_(MAJOR|MINOR|PATCH) +([^ ]+)$]])
+    set(PYBIND11_VERSION_${CMAKE_MATCH_1} "${CMAKE_MATCH_2}")
+  endif()
+endforeach()
+
+if(PYBIND11_VERSION_PATCH MATCHES [[\.([a-zA-Z0-9]+)$]])
+  set(pybind11_VERSION_TYPE "${CMAKE_MATCH_1}")
+endif()
+string(REGEX MATCH "^[0-9]+" PYBIND11_VERSION_PATCH "${PYBIND11_VERSION_PATCH}")
+
+project(
+  pybind11
+  LANGUAGES CXX
+  VERSION "${PYBIND11_VERSION_MAJOR}.${PYBIND11_VERSION_MINOR}.${PYBIND11_VERSION_PATCH}")
+
+# Standard includes
+include(GNUInstallDirs)
+include(CMakePackageConfigHelpers)
+include(CMakeDependentOption)
+
+if(NOT pybind11_FIND_QUIETLY)
+  message(STATUS "pybind11 v${pybind11_VERSION} ${pybind11_VERSION_TYPE}")
 endif()
 
 # Check if pybind11 is being used directly or via add_subdirectory
-set(PYBIND11_MASTER_PROJECT OFF)
-if (CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
+if(CMAKE_SOURCE_DIR STREQUAL PROJECT_SOURCE_DIR)
+  ### Warn if not an out-of-source builds
+  if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_CURRENT_BINARY_DIR)
+    set(lines
+        "You are building in-place. If that is not what you intended to "
+        "do, you can clean the source directory with:\n"
+        "rm -r CMakeCache.txt CMakeFiles/ cmake_uninstall.cmake pybind11Config.cmake "
+        "pybind11ConfigVersion.cmake tests/CMakeFiles/\n")
+    message(AUTHOR_WARNING ${lines})
+  endif()
+
   set(PYBIND11_MASTER_PROJECT ON)
+
+  if(OSX AND CMAKE_VERSION VERSION_LESS 3.7)
+    # Bug in macOS CMake < 3.7 is unable to download catch
+    message(WARNING "CMAKE 3.7+ needed on macOS to download catch, and newer HIGHLY recommended")
+  elseif(WINDOWS AND CMAKE_VERSION VERSION_LESS 3.8)
+    # Only tested with 3.8+ in CI.
+    message(WARNING "CMAKE 3.8+ tested on Windows, previous versions untested")
+  endif()
+
+  message(STATUS "CMake ${CMAKE_VERSION}")
+
+  if(CMAKE_CXX_STANDARD)
+    set(CMAKE_CXX_EXTENSIONS OFF)
+    set(CMAKE_CXX_STANDARD_REQUIRED ON)
+  endif()
+else()
+  set(PYBIND11_MASTER_PROJECT OFF)
+  set(pybind11_system SYSTEM)
 endif()
 
+# Options
 option(PYBIND11_INSTALL "Install pybind11 header files?" ${PYBIND11_MASTER_PROJECT})
-option(PYBIND11_TEST    "Build pybind11 test suite?"     ${PYBIND11_MASTER_PROJECT})
-
-list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/tools")
+option(PYBIND11_TEST "Build pybind11 test suite?" ${PYBIND11_MASTER_PROJECT})
+option(PYBIND11_NOPYTHON "Disable search for Python" OFF)
 
-include(pybind11Tools)
+cmake_dependent_option(
+  USE_PYTHON_INCLUDE_DIR
+  "Install pybind11 headers in Python include directory instead of default installation prefix"
+  OFF "PYBIND11_INSTALL" OFF)
 
-# Cache variables so pybind11_add_module can be used in parent projects
-set(PYBIND11_INCLUDE_DIR "${CMAKE_CURRENT_LIST_DIR}/include" CACHE INTERNAL "")
-set(PYTHON_INCLUDE_DIRS ${PYTHON_INCLUDE_DIRS} CACHE INTERNAL "")
-set(PYTHON_LIBRARIES ${PYTHON_LIBRARIES} CACHE INTERNAL "")
-set(PYTHON_MODULE_PREFIX ${PYTHON_MODULE_PREFIX} CACHE INTERNAL "")
-set(PYTHON_MODULE_EXTENSION ${PYTHON_MODULE_EXTENSION} CACHE INTERNAL "")
-set(PYTHON_VERSION_MAJOR ${PYTHON_VERSION_MAJOR} CACHE INTERNAL "")
-set(PYTHON_VERSION_MINOR ${PYTHON_VERSION_MINOR} CACHE INTERNAL "")
+cmake_dependent_option(PYBIND11_FINDPYTHON "Force new FindPython" OFF
+                       "NOT CMAKE_VERSION VERSION_LESS 3.12" OFF)
 
 # NB: when adding a header don't forget to also add it to setup.py
 set(PYBIND11_HEADERS
-  include/pybind11/detail/class.h
-  include/pybind11/detail/common.h
-  include/pybind11/detail/descr.h
-  include/pybind11/detail/init.h
-  include/pybind11/detail/internals.h
-  include/pybind11/detail/typeid.h
-  include/pybind11/attr.h
-  include/pybind11/buffer_info.h
-  include/pybind11/cast.h
-  include/pybind11/chrono.h
-  include/pybind11/common.h
-  include/pybind11/complex.h
-  include/pybind11/options.h
-  include/pybind11/eigen.h
-  include/pybind11/embed.h
-  include/pybind11/eval.h
-  include/pybind11/functional.h
-  include/pybind11/numpy.h
-  include/pybind11/operators.h
-  include/pybind11/pybind11.h
-  include/pybind11/pytypes.h
-  include/pybind11/stl.h
-  include/pybind11/stl_bind.h
-)
-string(REPLACE "include/" "${CMAKE_CURRENT_SOURCE_DIR}/include/"
-       PYBIND11_HEADERS "${PYBIND11_HEADERS}")
-
-if (PYBIND11_TEST)
-  add_subdirectory(tests)
+    include/pybind11/detail/class.h
+    include/pybind11/detail/common.h
+    include/pybind11/detail/descr.h
+    include/pybind11/detail/init.h
+    include/pybind11/detail/internals.h
+    include/pybind11/detail/typeid.h
+    include/pybind11/attr.h
+    include/pybind11/buffer_info.h
+    include/pybind11/cast.h
+    include/pybind11/chrono.h
+    include/pybind11/common.h
+    include/pybind11/complex.h
+    include/pybind11/options.h
+    include/pybind11/eigen.h
+    include/pybind11/embed.h
+    include/pybind11/eval.h
+    include/pybind11/iostream.h
+    include/pybind11/functional.h
+    include/pybind11/numpy.h
+    include/pybind11/operators.h
+    include/pybind11/pybind11.h
+    include/pybind11/pytypes.h
+    include/pybind11/stl.h
+    include/pybind11/stl_bind.h)
+
+# Compare with grep and warn if mismatched
+if(PYBIND11_MASTER_PROJECT AND NOT CMAKE_VERSION VERSION_LESS 3.12)
+  file(
+    GLOB_RECURSE _pybind11_header_check
+    LIST_DIRECTORIES false
+    RELATIVE "${CMAKE_CURRENT_SOURCE_DIR}"
+    CONFIGURE_DEPENDS "include/pybind11/*.h")
+  set(_pybind11_here_only ${PYBIND11_HEADERS})
+  set(_pybind11_disk_only ${_pybind11_header_check})
+  list(REMOVE_ITEM _pybind11_here_only ${_pybind11_header_check})
+  list(REMOVE_ITEM _pybind11_disk_only ${PYBIND11_HEADERS})
+  if(_pybind11_here_only)
+    message(AUTHOR_WARNING "PYBIND11_HEADERS has extra files:" ${_pybind11_here_only})
+  endif()
+  if(_pybind11_disk_only)
+    message(AUTHOR_WARNING "PYBIND11_HEADERS is missing files:" ${_pybind11_disk_only})
+  endif()
 endif()
 
-include(GNUInstallDirs)
-include(CMakePackageConfigHelpers)
-
-# extract project version from source
-file(STRINGS "${PYBIND11_INCLUDE_DIR}/pybind11/detail/common.h" pybind11_version_defines
-     REGEX "#define PYBIND11_VERSION_(MAJOR|MINOR|PATCH) ")
-foreach(ver ${pybind11_version_defines})
-  if (ver MATCHES "#define PYBIND11_VERSION_(MAJOR|MINOR|PATCH) +([^ ]+)$")
-    set(PYBIND11_VERSION_${CMAKE_MATCH_1} "${CMAKE_MATCH_2}" CACHE INTERNAL "")
-  endif()
-endforeach()
-set(${PROJECT_NAME}_VERSION ${PYBIND11_VERSION_MAJOR}.${PYBIND11_VERSION_MINOR}.${PYBIND11_VERSION_PATCH})
-message(STATUS "pybind11 v${${PROJECT_NAME}_VERSION}")
+# CMake 3.12 added list(TRANSFORM <list> PREPEND
+# But we can't use it yet
+string(REPLACE "include/" "${CMAKE_CURRENT_SOURCE_DIR}/include/" PYBIND11_HEADERS
+               "${PYBIND11_HEADERS}")
 
-option (USE_PYTHON_INCLUDE_DIR "Install pybind11 headers in Python include directory instead of default installation prefix" OFF)
-if (USE_PYTHON_INCLUDE_DIR)
-    file(RELATIVE_PATH CMAKE_INSTALL_INCLUDEDIR ${CMAKE_INSTALL_PREFIX} ${PYTHON_INCLUDE_DIRS})
+# Cache variables so pybind11_add_module can be used in parent projects
+set(PYBIND11_INCLUDE_DIR
+    "${CMAKE_CURRENT_LIST_DIR}/include"
+    CACHE INTERNAL "")
+
+# Note: when creating targets, you cannot use if statements at configure time -
+# you need generator expressions, because those will be placed in the target file.
+# You can also place ifs *in* the Config.in, but not here.
+
+# This section builds targets, but does *not* touch Python
+
+# Build the headers-only target (no Python included):
+# (long name used here to keep this from clashing in subdirectory mode)
+add_library(pybind11_headers INTERFACE)
+add_library(pybind11::pybind11_headers ALIAS pybind11_headers) # to match exported target
+add_library(pybind11::headers ALIAS pybind11_headers) # easier to use/remember
+
+include("${CMAKE_CURRENT_SOURCE_DIR}/tools/pybind11Common.cmake")
+
+# Relative directory setting
+if(USE_PYTHON_INCLUDE_DIR AND DEFINED Python_INCLUDE_DIRS)
+  file(RELATIVE_PATH CMAKE_INSTALL_INCLUDEDIR ${CMAKE_INSTALL_PREFIX} ${Python_INCLUDE_DIRS})
+elseif(USE_PYTHON_INCLUDE_DIR AND DEFINED PYTHON_INCLUDE_DIR)
+  file(RELATIVE_PATH CMAKE_INSTALL_INCLUDEDIR ${CMAKE_INSTALL_PREFIX} ${PYTHON_INCLUDE_DIRS})
 endif()
 
-if(NOT (CMAKE_VERSION VERSION_LESS 3.0))  # CMake >= 3.0
-  # Build an interface library target:
-  add_library(pybind11 INTERFACE)
-  add_library(pybind11::pybind11 ALIAS pybind11)  # to match exported target
-  target_include_directories(pybind11 INTERFACE $<BUILD_INTERFACE:${PYBIND11_INCLUDE_DIR}>
-                                                $<BUILD_INTERFACE:${PYTHON_INCLUDE_DIRS}>
+# Fill in headers target
+target_include_directories(
+  pybind11_headers ${pybind11_system} INTERFACE $<BUILD_INTERFACE:${PYBIND11_INCLUDE_DIR}>
                                                 $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
-  target_compile_options(pybind11 INTERFACE $<BUILD_INTERFACE:${PYBIND11_CPP_STANDARD}>)
 
-  add_library(module INTERFACE)
-  add_library(pybind11::module ALIAS module)
-  if(NOT MSVC)
-    target_compile_options(module INTERFACE -fvisibility=hidden)
+target_compile_features(pybind11_headers INTERFACE cxx_inheriting_constructors cxx_user_literals
+                                                   cxx_right_angle_brackets)
+
+if(PYBIND11_INSTALL)
+  install(DIRECTORY ${PYBIND11_INCLUDE_DIR}/pybind11 DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
+  # GNUInstallDirs "DATADIR" wrong here; CMake search path wants "share".
+  set(PYBIND11_CMAKECONFIG_INSTALL_DIR
+      "share/cmake/${PROJECT_NAME}"
+      CACHE STRING "install path for pybind11Config.cmake")
+
+  configure_package_config_file(
+    tools/${PROJECT_NAME}Config.cmake.in "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
+    INSTALL_DESTINATION ${PYBIND11_CMAKECONFIG_INSTALL_DIR})
+
+  if(CMAKE_VERSION VERSION_LESS 3.14)
+    # Remove CMAKE_SIZEOF_VOID_P from ConfigVersion.cmake since the library does
+    # not depend on architecture specific settings or libraries.
+    set(_PYBIND11_CMAKE_SIZEOF_VOID_P ${CMAKE_SIZEOF_VOID_P})
+    unset(CMAKE_SIZEOF_VOID_P)
+
+    write_basic_package_version_file(
+      ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake
+      VERSION ${PROJECT_VERSION}
+      COMPATIBILITY AnyNewerVersion)
+
+    set(CMAKE_SIZEOF_VOID_P ${_PYBIND11_CMAKE_SIZEOF_VOID_P})
+  else()
+    # CMake 3.14+ natively supports header-only libraries
+    write_basic_package_version_file(
+      ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake
+      VERSION ${PROJECT_VERSION}
+      COMPATIBILITY AnyNewerVersion ARCH_INDEPENDENT)
   endif()
-  target_link_libraries(module INTERFACE pybind11::pybind11)
-  if(WIN32 OR CYGWIN)
-    target_link_libraries(module INTERFACE $<BUILD_INTERFACE:${PYTHON_LIBRARIES}>)
-  elseif(APPLE)
-    target_link_libraries(module INTERFACE "-undefined dynamic_lookup")
+
+  install(
+    FILES ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake
+          ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake
+          tools/FindPythonLibsNew.cmake
+          tools/pybind11Common.cmake
+          tools/pybind11Tools.cmake
+          tools/pybind11NewTools.cmake
+    DESTINATION ${PYBIND11_CMAKECONFIG_INSTALL_DIR})
+
+  if(NOT PYBIND11_EXPORT_NAME)
+    set(PYBIND11_EXPORT_NAME "${PROJECT_NAME}Targets")
   endif()
 
-  add_library(embed INTERFACE)
-  add_library(pybind11::embed ALIAS embed)
-  target_link_libraries(embed INTERFACE pybind11::pybind11 $<BUILD_INTERFACE:${PYTHON_LIBRARIES}>)
-endif()
+  install(TARGETS pybind11_headers EXPORT "${PYBIND11_EXPORT_NAME}")
 
-if (PYBIND11_INSTALL)
-  install(DIRECTORY ${PYBIND11_INCLUDE_DIR}/pybind11 DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
-  # GNUInstallDirs "DATADIR" wrong here; CMake search path wants "share".
-  set(PYBIND11_CMAKECONFIG_INSTALL_DIR "share/cmake/${PROJECT_NAME}" CACHE STRING "install path for pybind11Config.cmake")
+  install(
+    EXPORT "${PYBIND11_EXPORT_NAME}"
+    NAMESPACE "pybind11::"
+    DESTINATION ${PYBIND11_CMAKECONFIG_INSTALL_DIR})
+
+  # Uninstall target
+  if(PYBIND11_MASTER_PROJECT)
+    configure_file("${CMAKE_CURRENT_SOURCE_DIR}/tools/cmake_uninstall.cmake.in"
+                   "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake" IMMEDIATE @ONLY)
 
-  configure_package_config_file(tools/${PROJECT_NAME}Config.cmake.in
-                                "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
-                                INSTALL_DESTINATION ${PYBIND11_CMAKECONFIG_INSTALL_DIR})
-  # Remove CMAKE_SIZEOF_VOID_P from ConfigVersion.cmake since the library does
-  # not depend on architecture specific settings or libraries.
-  set(_PYBIND11_CMAKE_SIZEOF_VOID_P ${CMAKE_SIZEOF_VOID_P})
-  unset(CMAKE_SIZEOF_VOID_P)
-  write_basic_package_version_file(${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake
-                                   VERSION ${${PROJECT_NAME}_VERSION}
-                                   COMPATIBILITY AnyNewerVersion)
-  set(CMAKE_SIZEOF_VOID_P ${_PYBIND11_CMAKE_SIZEOF_VOID_P})
-  install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake
-                ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake
-                tools/FindPythonLibsNew.cmake
-                tools/pybind11Tools.cmake
-          DESTINATION ${PYBIND11_CMAKECONFIG_INSTALL_DIR})
-
-  if(NOT (CMAKE_VERSION VERSION_LESS 3.0))
-    if(NOT PYBIND11_EXPORT_NAME)
-      set(PYBIND11_EXPORT_NAME "${PROJECT_NAME}Targets")
-    endif()
+    add_custom_target(uninstall COMMAND ${CMAKE_COMMAND} -P
+                                        ${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake)
+  endif()
+endif()
 
-    install(TARGETS pybind11 module embed
-            EXPORT "${PYBIND11_EXPORT_NAME}")
-    if(PYBIND11_MASTER_PROJECT)
-      install(EXPORT "${PYBIND11_EXPORT_NAME}"
-              NAMESPACE "${PROJECT_NAME}::"
-              DESTINATION ${PYBIND11_CMAKECONFIG_INSTALL_DIR})
+# BUILD_TESTING takes priority, but only if this is the master project
+if(PYBIND11_MASTER_PROJECT AND DEFINED BUILD_TESTING)
+  if(BUILD_TESTING)
+    if(_pybind11_nopython)
+      message(FATAL_ERROR "Cannot activate tests in NOPYTHON mode")
+    else()
+      add_subdirectory(tests)
+    endif()
+  endif()
+else()
+  if(PYBIND11_TEST)
+    if(_pybind11_nopython)
+      message(FATAL_ERROR "Cannot activate tests in NOPYTHON mode")
+    else()
+      add_subdirectory(tests)
     endif()
   endif()
 endif()
+
+# Better symmetry with find_package(pybind11 CONFIG) mode.
+if(NOT PYBIND11_MASTER_PROJECT)
+  set(pybind11_FOUND
+      TRUE
+      CACHE INTERNAL "true if pybind11 and all required components found on the system")
+  set(pybind11_INCLUDE_DIR
+      "${PYBIND11_INCLUDE_DIR}"
+      CACHE INTERNAL "Directory where pybind11 headers are located")
+endif()
--- gtsam-4.1.0.orig/wrap/pybind11/LICENSE
+++ gtsam-4.1.0/wrap/pybind11/LICENSE
@@ -25,5 +25,5 @@ CAUSED AND ON ANY THEORY OF LIABILITY, W
 OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-Please also refer to the file CONTRIBUTING.md, which clarifies licensing of
+Please also refer to the file .github/CONTRIBUTING.md, which clarifies licensing of
 external contributions to this project including patches, pull requests, etc.
--- gtsam-4.1.0.orig/wrap/pybind11/MANIFEST.in
+++ gtsam-4.1.0/wrap/pybind11/MANIFEST.in
@@ -1,2 +1,4 @@
-recursive-include include/pybind11 *.h
-include LICENSE README.md CONTRIBUTING.md
+recursive-include pybind11/include/pybind11 *.h
+recursive-include pybind11 *.py
+include pybind11/share/cmake/pybind11/*.cmake
+include LICENSE README.md pyproject.toml setup.py setup.cfg
--- gtsam-4.1.0.orig/wrap/pybind11/README.md
+++ gtsam-4.1.0/wrap/pybind11/README.md
@@ -5,15 +5,14 @@
 [![Documentation Status](https://readthedocs.org/projects/pybind11/badge/?version=master)](http://pybind11.readthedocs.org/en/master/?badge=master)
 [![Documentation Status](https://readthedocs.org/projects/pybind11/badge/?version=stable)](http://pybind11.readthedocs.org/en/stable/?badge=stable)
 [![Gitter chat](https://img.shields.io/gitter/room/gitterHQ/gitter.svg)](https://gitter.im/pybind/Lobby)
-[![Build Status](https://travis-ci.org/pybind/pybind11.svg?branch=master)](https://travis-ci.org/pybind/pybind11)
+[![CI](https://github.com/pybind/pybind11/workflows/CI/badge.svg)](https://github.com/pybind/pybind11/actions)
 [![Build status](https://ci.appveyor.com/api/projects/status/riaj54pn4h08xy40?svg=true)](https://ci.appveyor.com/project/wjakob/pybind11)
 
-**pybind11** is a lightweight header-only library that exposes C++ types in Python
-and vice versa, mainly to create Python bindings of existing C++ code. Its
-goals and syntax are similar to the excellent
-[Boost.Python](http://www.boost.org/doc/libs/1_58_0/libs/python/doc/) library
-by David Abrahams: to minimize boilerplate code in traditional extension
-modules by inferring type information using compile-time introspection.
+**pybind11** is a lightweight header-only library that exposes C++ types in
+Python and vice versa, mainly to create Python bindings of existing C++ code.
+Its goals and syntax are similar to the excellent [Boost.Python][] library by
+David Abrahams: to minimize boilerplate code in traditional extension modules
+by inferring type information using compile-time introspection.
 
 The main issue with Boost.Python—and the reason for creating such a similar
 project—is Boost. Boost is an enormously large and complex suite of utility
@@ -26,19 +25,18 @@ become an excessively large and unnecess
 Think of this library as a tiny self-contained version of Boost.Python with
 everything stripped away that isn't relevant for binding generation. Without
 comments, the core header files only require ~4K lines of code and depend on
-Python (2.7 or 3.x, or PyPy2.7 >= 5.7) and the C++ standard library. This
-compact implementation was possible thanks to some of the new C++11 language
-features (specifically: tuples, lambda functions and variadic templates). Since
-its creation, this library has grown beyond Boost.Python in many ways, leading
-to dramatically simpler binding code in many common situations.
+Python (2.7 or 3.5+, or PyPy) and the C++ standard library. This compact
+implementation was possible thanks to some of the new C++11 language features
+(specifically: tuples, lambda functions and variadic templates). Since its
+creation, this library has grown beyond Boost.Python in many ways, leading to
+dramatically simpler binding code in many common situations.
 
 Tutorial and reference documentation is provided at
-[http://pybind11.readthedocs.org/en/master](http://pybind11.readthedocs.org/en/master).
-A PDF version of the manual is available
-[here](https://media.readthedocs.org/pdf/pybind11/master/pybind11.pdf).
+[pybind11.readthedocs.org][].  A PDF version of the manual is available
+[here][docs-pdf].
 
 ## Core features
-pybind11 can map the following core C++ features to Python
+pybind11 can map the following core C++ features to Python:
 
 - Functions accepting and returning custom data structures per value, reference, or pointer
 - Instance methods and static methods
@@ -51,15 +49,15 @@ pybind11 can map the following core C++
 - Custom operators
 - Single and multiple inheritance
 - STL data structures
-- Smart pointers with reference counting like ``std::shared_ptr``
+- Smart pointers with reference counting like `std::shared_ptr`
 - Internal references with correct reference counting
 - C++ classes with virtual (and pure virtual) methods can be extended in Python
 
 ## Goodies
 In addition to the core functionality, pybind11 provides some extra goodies:
 
-- Python 2.7, 3.x, and PyPy (PyPy2.7 >= 5.7) are supported with an
-  implementation-agnostic interface.
+- Python 2.7, 3.5+, and PyPy (tested on 7.3) are supported with an implementation-agnostic
+  interface.
 
 - It is possible to bind C++11 lambda functions with captured variables. The
   lambda capture data is stored inside the resulting Python function object.
@@ -83,10 +81,10 @@ In addition to the core functionality, p
 - Binaries are generally smaller by a factor of at least 2 compared to
   equivalent bindings generated by Boost.Python. A recent pybind11 conversion
   of PyRosetta, an enormous Boost.Python binding project,
-  [reported](http://graylab.jhu.edu/RosettaCon2016/PyRosetta-4.pdf) a binary
-  size reduction of **5.4x** and compile time reduction by **5.8x**.
+  [reported][pyrosetta-report] a binary size reduction of **5.4x** and compile
+  time reduction by **5.8x**.
 
-- Function signatures are precomputed at compile time (using ``constexpr``),
+- Function signatures are precomputed at compile time (using `constexpr`),
   leading to smaller binaries.
 
 - With little extra effort, C++ types can be pickled and unpickled similar to
@@ -97,8 +95,11 @@ In addition to the core functionality, p
 1. Clang/LLVM 3.3 or newer (for Apple Xcode's clang, this is 5.0.0 or newer)
 2. GCC 4.8 or newer
 3. Microsoft Visual Studio 2015 Update 3 or newer
-4. Intel C++ compiler 17 or newer (16 with pybind11 v2.0 and 15 with pybind11 v2.0 and a [workaround](https://github.com/pybind/pybind11/issues/276))
+4. Intel C++ compiler 17 or newer (16 with pybind11 v2.0 and 15 with pybind11
+   v2.0 and a [workaround][intel-15-workaround])
 5. Cygwin/GCC (tested on 2.5.1)
+6. NVCC (CUDA 11 tested)
+7. NVIDIA PGI (20.7 tested)
 
 ## About
 
@@ -122,8 +123,23 @@ Henry Schreiner,
 Ivan Smirnov, and
 Patrick Stewart.
 
+### Contributing
+
+See the [contributing guide][] for information on building and contributing to
+pybind11.
+
+
 ### License
 
 pybind11 is provided under a BSD-style license that can be found in the
-``LICENSE`` file. By using, distributing, or contributing to this project,
+[`LICENSE`][] file. By using, distributing, or contributing to this project,
 you agree to the terms and conditions of this license.
+
+
+[pybind11.readthedocs.org]: http://pybind11.readthedocs.org/en/master
+[docs-pdf]: https://media.readthedocs.org/pdf/pybind11/master/pybind11.pdf
+[Boost.Python]: http://www.boost.org/doc/libs/1_58_0/libs/python/doc/
+[pyrosetta-report]: http://graylab.jhu.edu/RosettaCon2016/PyRosetta-4.pdf
+[contributing guide]:  https://github.com/pybind/pybind11/blob/master/.github/CONTRIBUTING.md
+[`LICENSE`]: https://github.com/pybind/pybind11/blob/master/LICENSE
+[intel-15-workaround]: https://github.com/pybind/pybind11/issues/276
--- gtsam-4.1.0.orig/wrap/pybind11/docs/advanced/cast/custom.rst
+++ gtsam-4.1.0/wrap/pybind11/docs/advanced/cast/custom.rst
@@ -29,9 +29,9 @@ The following Python snippet demonstrate
     from example import print
     print(A())
 
-To register the necessary conversion routines, it is necessary to add
-a partial overload to the ``pybind11::detail::type_caster<T>`` template.
-Although this is an implementation detail, adding partial overloads to this
+To register the necessary conversion routines, it is necessary to add an
+instantiation of the ``pybind11::detail::type_caster<T>`` template.
+Although this is an implementation detail, adding an instantiation of this
 type is explicitly allowed.
 
 .. code-block:: cpp
--- gtsam-4.1.0.orig/wrap/pybind11/docs/advanced/cast/eigen.rst
+++ gtsam-4.1.0/wrap/pybind11/docs/advanced/cast/eigen.rst
@@ -274,7 +274,7 @@ Vectors versus column/row matrices
 
 Eigen and numpy have fundamentally different notions of a vector.  In Eigen, a
 vector is simply a matrix with the number of columns or rows set to 1 at
-compile time (for a column vector or row vector, respectively).  Numpy, in
+compile time (for a column vector or row vector, respectively).  NumPy, in
 contrast, has comparable 2-dimensional 1xN and Nx1 arrays, but *also* has
 1-dimensional arrays of size N.
 
--- gtsam-4.1.0.orig/wrap/pybind11/docs/advanced/cast/index.rst
+++ gtsam-4.1.0/wrap/pybind11/docs/advanced/cast/index.rst
@@ -1,3 +1,5 @@
+.. _type-conversions:
+
 Type conversions
 ################
 
--- gtsam-4.1.0.orig/wrap/pybind11/docs/advanced/cast/stl.rst
+++ gtsam-4.1.0/wrap/pybind11/docs/advanced/cast/stl.rst
@@ -157,7 +157,7 @@ the declaration
 
 before any binding code (e.g. invocations to ``class_::def()``, etc.). This
 macro must be specified at the top level (and outside of any namespaces), since
-it instantiates a partial template overload. If your binding code consists of
+it adds a template instantiation of ``type_caster``. If your binding code consists of
 multiple compilation units, it must be present in every file (typically via a
 common header) preceding any usage of ``std::vector<int>``. Opaque types must
 also have a corresponding ``class_`` declaration to associate them with a name
--- gtsam-4.1.0.orig/wrap/pybind11/docs/advanced/classes.rst
+++ gtsam-4.1.0/wrap/pybind11/docs/advanced/classes.rst
@@ -71,7 +71,7 @@ helper class that is defined as follows:
 
         /* Trampoline (need one for each virtual function) */
         std::string go(int n_times) override {
-            PYBIND11_OVERLOAD_PURE(
+            PYBIND11_OVERRIDE_PURE(
                 std::string, /* Return type */
                 Animal,      /* Parent class */
                 go,          /* Name of function in C++ (must match Python name) */
@@ -80,10 +80,10 @@ helper class that is defined as follows:
         }
     };
 
-The macro :c:macro:`PYBIND11_OVERLOAD_PURE` should be used for pure virtual
-functions, and :c:macro:`PYBIND11_OVERLOAD` should be used for functions which have
+The macro :c:macro:`PYBIND11_OVERRIDE_PURE` should be used for pure virtual
+functions, and :c:macro:`PYBIND11_OVERRIDE` should be used for functions which have
 a default implementation.  There are also two alternate macros
-:c:macro:`PYBIND11_OVERLOAD_PURE_NAME` and :c:macro:`PYBIND11_OVERLOAD_NAME` which
+:c:macro:`PYBIND11_OVERRIDE_PURE_NAME` and :c:macro:`PYBIND11_OVERRIDE_NAME` which
 take a string-valued name argument between the *Parent class* and *Name of the
 function* slots, which defines the name of function in Python. This is required
 when the C++ and Python versions of the
@@ -122,7 +122,7 @@ Bindings should be made against the actu
 
 Note, however, that the above is sufficient for allowing python classes to
 extend ``Animal``, but not ``Dog``: see :ref:`virtual_and_inheritance` for the
-necessary steps required to providing proper overload support for inherited
+necessary steps required to providing proper overriding support for inherited
 classes.
 
 The Python session below shows how to override ``Animal::go`` and invoke it via
@@ -149,8 +149,7 @@ memory for the C++ portion of the instan
 will generally leave the C++ instance in an invalid state and cause undefined
 behavior if the C++ instance is subsequently used.
 
-.. versionadded:: 2.5.1
-
+.. versionchanged:: 2.6
    The default pybind11 metaclass will throw a ``TypeError`` when it detects
    that ``__init__`` was not called by a derived class.
 
@@ -160,7 +159,7 @@ Here is an example:
 
     class Dachshund(Dog):
         def __init__(self, name):
-            Dog.__init__(self) # Without this, undefined behavior may occur if the C++ portions are referenced.
+            Dog.__init__(self) # Without this, a TypeError is raised.
             self.name = name
         def bark(self):
             return "yap!"
@@ -182,15 +181,24 @@ Please take a look at the :ref:`macro_no
 
     - because in these cases there is no C++ variable to reference (the value
       is stored in the referenced Python variable), pybind11 provides one in
-      the PYBIND11_OVERLOAD macros (when needed) with static storage duration.
-      Note that this means that invoking the overloaded method on *any*
+      the PYBIND11_OVERRIDE macros (when needed) with static storage duration.
+      Note that this means that invoking the overridden method on *any*
       instance will change the referenced value stored in *all* instances of
       that type.
 
     - Attempts to modify a non-const reference will not have the desired
       effect: it will change only the static cache variable, but this change
       will not propagate to underlying Python instance, and the change will be
-      replaced the next time the overload is invoked.
+      replaced the next time the override is invoked.
+
+.. warning::
+
+    The :c:macro:`PYBIND11_OVERRIDE` and accompanying macros used to be called
+    ``PYBIND11_OVERLOAD`` up until pybind11 v2.5.0, and :func:`get_override`
+    used to be called ``get_overload``. This naming was corrected and the older
+    macro and function names may soon be deprecated, in order to reduce
+    confusion with overloaded functions and methods and ``py::overload_cast``
+    (see :ref:`classes`).
 
 .. seealso::
 
@@ -238,20 +246,20 @@ override the ``name()`` method):
     class PyAnimal : public Animal {
     public:
         using Animal::Animal; // Inherit constructors
-        std::string go(int n_times) override { PYBIND11_OVERLOAD_PURE(std::string, Animal, go, n_times); }
-        std::string name() override { PYBIND11_OVERLOAD(std::string, Animal, name, ); }
+        std::string go(int n_times) override { PYBIND11_OVERRIDE_PURE(std::string, Animal, go, n_times); }
+        std::string name() override { PYBIND11_OVERRIDE(std::string, Animal, name, ); }
     };
     class PyDog : public Dog {
     public:
         using Dog::Dog; // Inherit constructors
-        std::string go(int n_times) override { PYBIND11_OVERLOAD(std::string, Dog, go, n_times); }
-        std::string name() override { PYBIND11_OVERLOAD(std::string, Dog, name, ); }
-        std::string bark() override { PYBIND11_OVERLOAD(std::string, Dog, bark, ); }
+        std::string go(int n_times) override { PYBIND11_OVERRIDE(std::string, Dog, go, n_times); }
+        std::string name() override { PYBIND11_OVERRIDE(std::string, Dog, name, ); }
+        std::string bark() override { PYBIND11_OVERRIDE(std::string, Dog, bark, ); }
     };
 
 .. note::
 
-    Note the trailing commas in the ``PYBIND11_OVERLOAD`` calls to ``name()``
+    Note the trailing commas in the ``PYBIND11_OVERIDE`` calls to ``name()``
     and ``bark()``. These are needed to portably implement a trampoline for a
     function that does not take any arguments. For functions that take
     a nonzero number of arguments, the trailing comma must be omitted.
@@ -266,9 +274,9 @@ declare or override any virtual methods
     class PyHusky : public Husky {
     public:
         using Husky::Husky; // Inherit constructors
-        std::string go(int n_times) override { PYBIND11_OVERLOAD_PURE(std::string, Husky, go, n_times); }
-        std::string name() override { PYBIND11_OVERLOAD(std::string, Husky, name, ); }
-        std::string bark() override { PYBIND11_OVERLOAD(std::string, Husky, bark, ); }
+        std::string go(int n_times) override { PYBIND11_OVERRIDE_PURE(std::string, Husky, go, n_times); }
+        std::string name() override { PYBIND11_OVERRIDE(std::string, Husky, name, ); }
+        std::string bark() override { PYBIND11_OVERRIDE(std::string, Husky, bark, ); }
     };
 
 There is, however, a technique that can be used to avoid this duplication
@@ -281,15 +289,15 @@ follows:
     template <class AnimalBase = Animal> class PyAnimal : public AnimalBase {
     public:
         using AnimalBase::AnimalBase; // Inherit constructors
-        std::string go(int n_times) override { PYBIND11_OVERLOAD_PURE(std::string, AnimalBase, go, n_times); }
-        std::string name() override { PYBIND11_OVERLOAD(std::string, AnimalBase, name, ); }
+        std::string go(int n_times) override { PYBIND11_OVERRIDE_PURE(std::string, AnimalBase, go, n_times); }
+        std::string name() override { PYBIND11_OVERRIDE(std::string, AnimalBase, name, ); }
     };
     template <class DogBase = Dog> class PyDog : public PyAnimal<DogBase> {
     public:
         using PyAnimal<DogBase>::PyAnimal; // Inherit constructors
         // Override PyAnimal's pure virtual go() with a non-pure one:
-        std::string go(int n_times) override { PYBIND11_OVERLOAD(std::string, DogBase, go, n_times); }
-        std::string bark() override { PYBIND11_OVERLOAD(std::string, DogBase, bark, ); }
+        std::string go(int n_times) override { PYBIND11_OVERRIDE(std::string, DogBase, go, n_times); }
+        std::string bark() override { PYBIND11_OVERRIDE(std::string, DogBase, bark, ); }
     };
 
 This technique has the advantage of requiring just one trampoline method to be
@@ -342,7 +350,7 @@ valid for the trampoline class but not t
 for performance reasons: when the trampoline class is not needed for anything
 except virtual method dispatching, not initializing the trampoline class
 improves performance by avoiding needing to do a run-time check to see if the
-inheriting python instance has an overloaded method.
+inheriting python instance has an overridden method.
 
 Sometimes, however, it is useful to always initialize a trampoline class as an
 intermediate class that does more than just handle virtual method dispatching.
@@ -373,7 +381,7 @@ references (See also :ref:`faq_reference
 this is to use the method body of the trampoline class to do conversions to the
 input and return of the Python method.
 
-The main building block to do so is the :func:`get_overload`, this function
+The main building block to do so is the :func:`get_override`, this function
 allows retrieving a method implemented in Python from within the trampoline's
 methods. Consider for example a C++ method which has the signature
 ``bool myMethod(int32_t& value)``, where the return indicates whether
@@ -385,10 +393,10 @@ Python side by allowing the Python funct
     bool MyClass::myMethod(int32_t& value)
     {
         pybind11::gil_scoped_acquire gil;  // Acquire the GIL while in this scope.
-        // Try to look up the overloaded method on the Python side.
-        pybind11::function overload = pybind11::get_overload(this, "myMethod");
-        if (overload) {  // method is found
-            auto obj = overload(value);  // Call the Python function.
+        // Try to look up the overridden method on the Python side.
+        pybind11::function override = pybind11::get_override(this, "myMethod");
+        if (override) {  // method is found
+            auto obj = override(value);  // Call the Python function.
             if (py::isinstance<py::int_>(obj)) {  // check if it returned a Python integer type
                 value = obj.cast<int32_t>();  // Cast it and assign it to the value.
                 return true;  // Return true; value should be used.
@@ -559,6 +567,46 @@ crucial that instances are deallocated o
     py::class_<MyClass, std::unique_ptr<MyClass, py::nodelete>>(m, "MyClass")
         .def(py::init<>())
 
+.. _destructors_that_call_python:
+
+Destructors that call Python
+============================
+
+If a Python function is invoked from a C++ destructor, an exception may be thrown
+of type :class:`error_already_set`. If this error is thrown out of a class destructor,
+``std::terminate()`` will be called, terminating the process. Class destructors
+must catch all exceptions of type :class:`error_already_set` to discard the Python
+exception using :func:`error_already_set::discard_as_unraisable`.
+
+Every Python function should be treated as *possibly throwing*. When a Python generator
+stops yielding items, Python will throw a ``StopIteration`` exception, which can pass
+though C++ destructors if the generator's stack frame holds the last reference to C++
+objects.
+
+For more information, see :ref:`the documentation on exceptions <unraisable_exceptions>`.
+
+.. code-block:: cpp
+
+    class MyClass {
+    public:
+        ~MyClass() {
+            try {
+                py::print("Even printing is dangerous in a destructor");
+                py::exec("raise ValueError('This is an unraisable exception')");
+            } catch (py::error_already_set &e) {
+                // error_context should be information about where/why the occurred,
+                // e.g. use __func__ to get the name of the current function
+                e.discard_as_unraisable(__func__);
+            }
+        }
+    };
+
+.. note::
+
+    pybind11 does not support C++ destructors marked ``noexcept(false)``.
+
+.. versionadded:: 2.6
+
 .. _implicit_conversions:
 
 Implicit conversions
@@ -1065,7 +1113,7 @@ described trampoline:
 
     class Trampoline : public A {
     public:
-        int foo() const override { PYBIND11_OVERLOAD(int, A, foo, ); }
+        int foo() const override { PYBIND11_OVERRIDE(int, A, foo, ); }
     };
 
     class Publicist : public A {
@@ -1109,6 +1157,8 @@ error:
 
 .. note:: This attribute is currently ignored on PyPy
 
+.. versionadded:: 2.6
+
 Custom automatic downcasters
 ============================
 
@@ -1191,3 +1241,21 @@ appropriate derived-class pointer (e.g.
     more complete example, including a demonstration of how to provide
     automatic downcasting for an entire class hierarchy without
     writing one get() function for each class.
+
+Accessing the type object
+=========================
+
+You can get the type object from a C++ class that has already been registered using:
+
+.. code-block:: python
+
+    py::type T_py = py::type::of<T>();
+
+You can directly use ``py::type::of(ob)`` to get the type object from any python
+object, just like ``type(ob)`` in Python.
+
+.. note::
+
+    Other types, like ``py::type::of<int>()``, do not work, see :ref:`type-conversions`.
+
+.. versionadded:: 2.6
--- gtsam-4.1.0.orig/wrap/pybind11/docs/advanced/embedding.rst
+++ gtsam-4.1.0/wrap/pybind11/docs/advanced/embedding.rst
@@ -18,7 +18,7 @@ information, see :doc:`/compiling`.
 
 .. code-block:: cmake
 
-    cmake_minimum_required(VERSION 3.0)
+    cmake_minimum_required(VERSION 3.4)
     project(example)
 
     find_package(pybind11 REQUIRED)  # or `add_subdirectory(pybind11)`
--- gtsam-4.1.0.orig/wrap/pybind11/docs/advanced/exceptions.rst
+++ gtsam-4.1.0/wrap/pybind11/docs/advanced/exceptions.rst
@@ -1,18 +1,24 @@
 Exceptions
 ##########
 
-Built-in exception translation
-==============================
+Built-in C++ to Python exception translation
+============================================
 
-When C++ code invoked from Python throws an ``std::exception``, it is
-automatically converted into a Python ``Exception``. pybind11 defines multiple
-special exception classes that will map to different types of Python
-exceptions:
+When Python calls C++ code through pybind11, pybind11 provides a C++ exception handler
+that will trap C++ exceptions, translate them to the corresponding Python exception,
+and raise them so that Python code can handle them.
+
+pybind11 defines translations for ``std::exception`` and its standard
+subclasses, and several special exception classes that translate to specific
+Python exceptions. Note that these are not actually Python exceptions, so they
+cannot be examined using the Python C API. Instead, they are pure C++ objects
+that pybind11 will translate the corresponding Python exception when they arrive
+at its exception handler.
 
 .. tabularcolumns:: |p{0.5\textwidth}|p{0.45\textwidth}|
 
 +--------------------------------------+--------------------------------------+
-|  C++ exception type                  |  Python exception type               |
+|  Exception thrown by C++             |  Translated to Python exception type |
 +======================================+======================================+
 | :class:`std::exception`              | ``RuntimeError``                     |
 +--------------------------------------+--------------------------------------+
@@ -46,16 +52,11 @@ exceptions:
 |                                      | ``__setitem__`` in dict-like         |
 |                                      | objects, etc.)                       |
 +--------------------------------------+--------------------------------------+
-| :class:`pybind11::error_already_set` | Indicates that the Python exception  |
-|                                      | flag has already been set via Python |
-|                                      | API calls from C++ code; this C++    |
-|                                      | exception is used to propagate such  |
-|                                      | a Python exception back to Python.   |
-+--------------------------------------+--------------------------------------+
 
-When a Python function invoked from C++ throws an exception, it is converted
-into a C++ exception of type :class:`error_already_set` whose string payload
-contains a textual summary.
+Exception translation is not bidirectional. That is, *catching* the C++
+exceptions defined above above will not trap exceptions that originate from
+Python. For that, catch :class:`pybind11::error_already_set`. See :ref:`below
+<handling_python_exceptions_cpp>` for further details.
 
 There is also a special exception :class:`cast_error` that is thrown by
 :func:`handle::call` when the input arguments cannot be converted to Python
@@ -78,6 +79,19 @@ This call creates a Python exception cla
 module and automatically converts any encountered exceptions of type ``CppExp``
 into Python exceptions of type ``PyExp``.
 
+It is possible to specify base class for the exception using the third
+parameter, a `handle`:
+
+.. code-block:: cpp
+
+    py::register_exception<CppExp>(module, "PyExp", PyExc_RuntimeError);
+
+Then `PyExp` can be caught both as `PyExp` and `RuntimeError`.
+
+The class objects of the built-in Python exceptions are listed in the Python
+documentation on `Standard Exceptions <https://docs.python.org/3/c-api/exceptions.html#standard-exceptions>`_.
+The default base class is `PyExc_Exception`.
+
 When more advanced exception translation is needed, the function
 ``py::register_exception_translator(translator)`` can be used to register
 functions that can translate arbitrary exception types (and which may include
@@ -100,7 +114,6 @@ and use this in the associated exception
 to make this a static declaration when using it inside a lambda expression
 without requiring capturing).
 
-
 The following example demonstrates this for a hypothetical exception classes
 ``MyCustomException`` and ``OtherException``: the first is translated to a
 custom python exception ``MyCustomError``, while the second is translated to a
@@ -134,7 +147,7 @@ section.
 
 .. note::
 
-    You must call either ``PyErr_SetString`` or a custom exception's call
+    Call either ``PyErr_SetString`` or a custom exception's call
     operator (``exc(string)``) for every exception caught in a custom exception
     translator.  Failure to do so will cause Python to crash with ``SystemError:
     error return without exception set``.
@@ -142,3 +155,144 @@ section.
     Exceptions that you do not plan to handle should simply not be caught, or
     may be explicitly (re-)thrown to delegate it to the other,
     previously-declared existing exception translators.
+
+.. _handling_python_exceptions_cpp:
+
+Handling exceptions from Python in C++
+======================================
+
+When C++ calls Python functions, such as in a callback function or when
+manipulating Python objects, and Python raises an ``Exception``, pybind11
+converts the Python exception into a C++ exception of type
+:class:`pybind11::error_already_set` whose payload contains a C++ string textual
+summary and the actual Python exception. ``error_already_set`` is used to
+propagate Python exception back to Python (or possibly, handle them in C++).
+
+.. tabularcolumns:: |p{0.5\textwidth}|p{0.45\textwidth}|
+
++--------------------------------------+--------------------------------------+
+|  Exception raised in Python          |  Thrown as C++ exception type        |
++======================================+======================================+
+| Any Python ``Exception``             | :class:`pybind11::error_already_set` |
++--------------------------------------+--------------------------------------+
+
+For example:
+
+.. code-block:: cpp
+
+    try {
+        // open("missing.txt", "r")
+        auto file = py::module::import("io").attr("open")("missing.txt", "r");
+        auto text = file.attr("read")();
+        file.attr("close")();
+    } catch (py::error_already_set &e) {
+        if (e.matches(PyExc_FileNotFoundError)) {
+            py::print("missing.txt not found");
+        } else if (e.match(PyExc_PermissionError)) {
+            py::print("missing.txt found but not accessible");
+        } else {
+            throw;
+        }
+    }
+
+Note that C++ to Python exception translation does not apply here, since that is
+a method for translating C++ exceptions to Python, not vice versa. The error raised
+from Python is always ``error_already_set``.
+
+This example illustrates this behavior:
+
+.. code-block:: cpp
+
+    try {
+        py::eval("raise ValueError('The Ring')");
+    } catch (py::value_error &boromir) {
+        // Boromir never gets the ring
+        assert(false);
+    } catch (py::error_already_set &frodo) {
+        // Frodo gets the ring
+        py::print("I will take the ring");
+    }
+
+    try {
+        // py::value_error is a request for pybind11 to raise a Python exception
+        throw py::value_error("The ball");
+    } catch (py::error_already_set &cat) {
+        // cat won't catch the ball since
+        // py::value_error is not a Python exception
+        assert(false);
+    } catch (py::value_error &dog) {
+        // dog will catch the ball
+        py::print("Run Spot run");
+        throw;  // Throw it again (pybind11 will raise ValueError)
+    }
+
+Handling errors from the Python C API
+=====================================
+
+Where possible, use :ref:`pybind11 wrappers <wrappers>` instead of calling
+the Python C API directly. When calling the Python C API directly, in
+addition to manually managing reference counts, one must follow the pybind11
+error protocol, which is outlined here.
+
+After calling the Python C API, if Python returns an error,
+``throw py::error_already_set();``, which allows pybind11 to deal with the
+exception and pass it back to the Python interpreter. This includes calls to
+the error setting functions such as ``PyErr_SetString``.
+
+.. code-block:: cpp
+
+    PyErr_SetString(PyExc_TypeError, "C API type error demo");
+    throw py::error_already_set();
+
+    // But it would be easier to simply...
+    throw py::type_error("pybind11 wrapper type error");
+
+Alternately, to ignore the error, call `PyErr_Clear
+<https://docs.python.org/3/c-api/exceptions.html#c.PyErr_Clear>`_.
+
+Any Python error must be thrown or cleared, or Python/pybind11 will be left in
+an invalid state.
+
+.. _unraisable_exceptions:
+
+Handling unraisable exceptions
+==============================
+
+If a Python function invoked from a C++ destructor or any function marked
+``noexcept(true)`` (collectively, "noexcept functions") throws an exception, there
+is no way to propagate the exception, as such functions may not throw.
+Should they throw or fail to catch any exceptions in their call graph,
+the C++ runtime calls ``std::terminate()`` to abort immediately.
+
+Similarly, Python exceptions raised in a class's ``__del__`` method do not
+propagate, but are logged by Python as an unraisable error. In Python 3.8+, a
+`system hook is triggered
+<https://docs.python.org/3/library/sys.html#sys.unraisablehook>`_
+and an auditing event is logged.
+
+Any noexcept function should have a try-catch block that traps
+class:`error_already_set` (or any other exception that can occur). Note that
+pybind11 wrappers around Python exceptions such as
+:class:`pybind11::value_error` are *not* Python exceptions; they are C++
+exceptions that pybind11 catches and converts to Python exceptions. Noexcept
+functions cannot propagate these exceptions either. A useful approach is to
+convert them to Python exceptions and then ``discard_as_unraisable`` as shown
+below.
+
+.. code-block:: cpp
+
+    void nonthrowing_func() noexcept(true) {
+        try {
+            // ...
+        } catch (py::error_already_set &eas) {
+            // Discard the Python error using Python APIs, using the C++ magic
+            // variable __func__. Python already knows the type and value and of the
+            // exception object.
+            eas.discard_as_unraisable(__func__);
+        } catch (const std::exception &e) {
+            // Log and discard C++ exceptions.
+            third_party::log(e);
+        }
+    }
+
+.. versionadded:: 2.6
--- gtsam-4.1.0.orig/wrap/pybind11/docs/advanced/functions.rst
+++ gtsam-4.1.0/wrap/pybind11/docs/advanced/functions.rst
@@ -360,7 +360,7 @@ like so:
 .. code-block:: cpp
 
     py::class_<MyClass>("MyClass")
-        .def("myFunction", py::arg("arg") = (SomeType *) nullptr);
+        .def("myFunction", py::arg("arg") = static_cast<SomeType *>(nullptr));
 
 Keyword-only arguments
 ======================
@@ -378,17 +378,37 @@ argument in a function definition:
     f(1, b=2)    # good
     f(1, 2)      # TypeError: f() takes 1 positional argument but 2 were given
 
-Pybind11 provides a ``py::kwonly`` object that allows you to implement
+Pybind11 provides a ``py::kw_only`` object that allows you to implement
 the same behaviour by specifying the object between positional and keyword-only
 argument annotations when registering the function:
 
 .. code-block:: cpp
 
     m.def("f", [](int a, int b) { /* ... */ },
-          py::arg("a"), py::kwonly(), py::arg("b"));
+          py::arg("a"), py::kw_only(), py::arg("b"));
 
-Note that, as in Python, you cannot combine this with a ``py::args`` argument.
-This feature does *not* require Python 3 to work.
+Note that you currently cannot combine this with a ``py::args`` argument.  This
+feature does *not* require Python 3 to work.
+
+.. versionadded:: 2.6
+
+Positional-only arguments
+=========================
+
+Python 3.8 introduced a new positional-only argument syntax, using ``/`` in the
+function definition (note that this has been a convention for CPython
+positional arguments, such as in ``pow()``, since Python 2). You can
+do the same thing in any version of Python using ``py::pos_only()``:
+
+.. code-block:: cpp
+
+   m.def("f", [](int a, int b) { /* ... */ },
+          py::arg("a"), py::pos_only(), py::arg("b"));
+
+You now cannot give argument ``a`` by keyword. This can be combined with
+keyword-only arguments, as well.
+
+.. versionadded:: 2.6
 
 .. _nonconverting_arguments:
 
--- gtsam-4.1.0.orig/wrap/pybind11/docs/advanced/misc.rst
+++ gtsam-4.1.0/wrap/pybind11/docs/advanced/misc.rst
@@ -7,14 +7,14 @@ General notes regarding convenience macr
 ==========================================
 
 pybind11 provides a few convenience macros such as
-:func:`PYBIND11_DECLARE_HOLDER_TYPE` and ``PYBIND11_OVERLOAD_*``. Since these
+:func:`PYBIND11_DECLARE_HOLDER_TYPE` and ``PYBIND11_OVERRIDE_*``. Since these
 are "just" macros that are evaluated in the preprocessor (which has no concept
 of types), they *will* get confused by commas in a template argument; for
 example, consider:
 
 .. code-block:: cpp
 
-    PYBIND11_OVERLOAD(MyReturnType<T1, T2>, Class<T3, T4>, func)
+    PYBIND11_OVERRIDE(MyReturnType<T1, T2>, Class<T3, T4>, func)
 
 The limitation of the C preprocessor interprets this as five arguments (with new
 arguments beginning after each comma) rather than three.  To get around this,
@@ -26,10 +26,10 @@ using the ``PYBIND11_TYPE`` macro:
     // Version 1: using a type alias
     using ReturnType = MyReturnType<T1, T2>;
     using ClassType = Class<T3, T4>;
-    PYBIND11_OVERLOAD(ReturnType, ClassType, func);
+    PYBIND11_OVERRIDE(ReturnType, ClassType, func);
 
     // Version 2: using the PYBIND11_TYPE macro:
-    PYBIND11_OVERLOAD(PYBIND11_TYPE(MyReturnType<T1, T2>),
+    PYBIND11_OVERRIDE(PYBIND11_TYPE(MyReturnType<T1, T2>),
                       PYBIND11_TYPE(Class<T3, T4>), func)
 
 The ``PYBIND11_MAKE_OPAQUE`` macro does *not* require the above workarounds.
@@ -59,7 +59,7 @@ could be realized as follows (important
             /* Acquire GIL before calling Python code */
             py::gil_scoped_acquire acquire;
 
-            PYBIND11_OVERLOAD_PURE(
+            PYBIND11_OVERRIDE_PURE(
                 std::string, /* Return type */
                 Animal,      /* Parent class */
                 go,          /* Name of function */
@@ -176,9 +176,9 @@ pybind11 version. Consider the following
 
 .. code-block:: cpp
 
-    auto data = (MyData *) py::get_shared_data("mydata");
+    auto data = reinterpret_cast<MyData *>(py::get_shared_data("mydata"));
     if (!data)
-        data = (MyData *) py::set_shared_data("mydata", new MyData(42));
+        data = static_cast<MyData *>(py::set_shared_data("mydata", new MyData(42)));
 
 If the above snippet was used in several separately compiled extension modules,
 the first one to be imported would create a ``MyData`` instance and associate
@@ -304,3 +304,34 @@ the default settings are restored to pre
 
 .. [#f4] http://www.sphinx-doc.org
 .. [#f5] http://github.com/pybind/python_example
+
+.. _avoiding-cpp-types-in-docstrings:
+
+Avoiding C++ types in docstrings
+================================
+
+Docstrings are generated at the time of the declaration, e.g. when ``.def(...)`` is called.
+At this point parameter and return types should be known to pybind11.
+If a custom type is not exposed yet through a ``py::class_`` constructor or a custom type caster,
+its C++ type name will be used instead to generate the signature in the docstring:
+
+.. code-block:: text
+
+     |  __init__(...)
+     |      __init__(self: example.Foo, arg0: ns::Bar) -> None
+                                              ^^^^^^^
+
+
+This limitation can be circumvented by ensuring that C++ classes are registered with pybind11
+before they are used as a parameter or return type of a function:
+
+.. code-block:: cpp
+
+    PYBIND11_MODULE(example, m) {
+
+        auto pyFoo = py::class_<ns::Foo>(m, "Foo");
+        auto pyBar = py::class_<ns::Bar>(m, "Bar");
+
+        pyFoo.def(py::init<const ns::Bar&>());
+        pyBar.def(py::init<const ns::Foo&>());
+    }
--- gtsam-4.1.0.orig/wrap/pybind11/docs/advanced/pycpp/numpy.rst
+++ gtsam-4.1.0/wrap/pybind11/docs/advanced/pycpp/numpy.rst
@@ -81,7 +81,7 @@ buffer objects (e.g. a NumPy matrix).
     constexpr bool rowMajor = Matrix::Flags & Eigen::RowMajorBit;
 
     py::class_<Matrix>(m, "Matrix", py::buffer_protocol())
-        .def("__init__", [](py::buffer b) {
+        .def(py::init([](py::buffer b) {
             typedef Eigen::Stride<Eigen::Dynamic, Eigen::Dynamic> Strides;
 
             /* Request a buffer descriptor from Python */
@@ -101,8 +101,8 @@ buffer objects (e.g. a NumPy matrix).
             auto map = Eigen::Map<Matrix, 0, Strides>(
                 static_cast<Scalar *>(info.ptr), info.shape[0], info.shape[1], strides);
 
-            return Matrix(m);
-        });
+            return Matrix(map);
+        }));
 
 For reference, the ``def_buffer()`` call for this Eigen data type should look
 as follows:
@@ -274,9 +274,9 @@ simply using ``vectorize``).
 
         py::buffer_info buf3 = result.request();
 
-        double *ptr1 = (double *) buf1.ptr,
-               *ptr2 = (double *) buf2.ptr,
-               *ptr3 = (double *) buf3.ptr;
+        double *ptr1 = static_cast<double *>(buf1.ptr);
+        double *ptr2 = static_cast<double *>(buf2.ptr);
+        double *ptr3 = static_cast<double *>(buf3.ptr);
 
         for (size_t idx = 0; idx < buf1.shape[0]; idx++)
             ptr3[idx] = ptr1[idx] + ptr2[idx];
@@ -371,6 +371,8 @@ Ellipsis
 Python 3 provides a convenient ``...`` ellipsis notation that is often used to
 slice multidimensional arrays. For instance, the following snippet extracts the
 middle dimensions of a tensor with the first and last index set to zero.
+In Python 2, the syntactic sugar ``...`` is not available, but the singleton
+``Ellipsis`` (of type ``ellipsis``) can still be used directly.
 
 .. code-block:: python
 
@@ -385,6 +387,9 @@ operation on the C++ side:
    py::array a = /* A NumPy array */;
    py::array b = a[py::make_tuple(0, py::ellipsis(), 0)];
 
+.. versionchanged:: 2.6
+   ``py::ellipsis()`` is now also avaliable in Python 2.
+
 Memory view
 ===========
 
@@ -426,3 +431,6 @@ We can also use ``memoryview::from_memor
 .. note::
 
     ``memoryview::from_memory`` is not available in Python 2.
+
+.. versionchanged:: 2.6
+    ``memoryview::from_memory`` added.
--- gtsam-4.1.0.orig/wrap/pybind11/docs/advanced/pycpp/object.rst
+++ gtsam-4.1.0/wrap/pybind11/docs/advanced/pycpp/object.rst
@@ -1,6 +1,8 @@
 Python types
 ############
 
+.. _wrappers:
+
 Available wrappers
 ==================
 
@@ -13,6 +15,13 @@ Available types include :class:`handle`,
 :class:`iterable`, :class:`iterator`, :class:`function`, :class:`buffer`,
 :class:`array`, and :class:`array_t`.
 
+.. warning::
+
+    Be sure to review the :ref:`pytypes_gotchas` before using this heavily in
+    your C++ API.
+
+.. _casting_back_and_forth:
+
 Casting back and forth
 ======================
 
@@ -55,6 +64,7 @@ This example obtains a reference to the
     py::object scipy = py::module::import("scipy");
     return scipy.attr("__version__");
 
+
 .. _calling_python_functions:
 
 Calling Python functions
@@ -168,3 +178,74 @@ Generalized unpacking according to PEP44
     Python functions from C++, including keywords arguments and unpacking.
 
 .. _PEP448: https://www.python.org/dev/peps/pep-0448/
+
+.. _implicit_casting:
+
+Implicit casting
+================
+
+When using the C++ interface for Python types, or calling Python functions,
+objects of type :class:`object` are returned. It is possible to invoke implicit
+conversions to subclasses like :class:`dict`. The same holds for the proxy objects
+returned by ``operator[]`` or ``obj.attr()``.
+Casting to subtypes improves code readability and allows values to be passed to
+C++ functions that require a specific subtype rather than a generic :class:`object`.
+
+.. code-block:: cpp
+
+    #include <pybind11/numpy.h>
+    using namespace pybind11::literals;
+
+    py::module os = py::module::import("os");
+    py::module path = py::module::import("os.path");  // like 'import os.path as path'
+    py::module np = py::module::import("numpy");  // like 'import numpy as np'
+
+    py::str curdir_abs = path.attr("abspath")(path.attr("curdir"));
+    py::print(py::str("Current directory: ") + curdir_abs);
+    py::dict environ = os.attr("environ");
+    py::print(environ["HOME"]);
+    py::array_t<float> arr = np.attr("ones")(3, "dtype"_a="float32");
+    py::print(py::repr(arr + py::int_(1)));
+
+These implicit conversions are available for subclasses of :class:`object`; there
+is no need to call ``obj.cast()`` explicitly as for custom classes, see
+:ref:`casting_back_and_forth`.
+
+.. note::
+    If a trivial conversion via move constructor is not possible, both implicit and
+    explicit casting (calling ``obj.cast()``) will attempt a "rich" conversion.
+    For instance, ``py::list env = os.attr("environ");`` will succeed and is
+    equivalent to the Python code ``env = list(os.environ)`` that produces a
+    list of the dict keys.
+
+..  TODO: Adapt text once PR #2349 has landed
+
+Handling exceptions
+===================
+
+Python exceptions from wrapper classes will be thrown as a ``py::error_already_set``.
+See :ref:`Handling exceptions from Python in C++
+<handling_python_exceptions_cpp>` for more information on handling exceptions
+raised when calling C++ wrapper classes.
+
+.. _pytypes_gotchas:
+
+Gotchas
+=======
+
+Default-Constructed Wrappers
+----------------------------
+
+When a wrapper type is default-constructed, it is **not** a valid Python object (i.e. it is not ``py::none()``). It is simply the same as
+``PyObject*`` null pointer. To check for this, use
+``static_cast<bool>(my_wrapper)``.
+
+Assigning py::none() to wrappers
+--------------------------------
+
+You may be tempted to use types like ``py::str`` and ``py::dict`` in C++
+signatures (either pure C++, or in bound signatures), and assign them default
+values of ``py::none()``. However, in a best case scenario, it will fail fast
+because ``None`` is not convertible to that type (e.g. ``py::dict``), or in a
+worse case scenario, it will silently work but corrupt the types you want to
+work with (e.g. ``py::str(py::none())`` will yield ``"None"`` in Python).
--- gtsam-4.1.0.orig/wrap/pybind11/docs/basics.rst
+++ gtsam-4.1.0/wrap/pybind11/docs/basics.rst
@@ -11,11 +11,11 @@ included set of test cases.
 Compiling the test cases
 ========================
 
-Linux/MacOS
+Linux/macOS
 -----------
 
 On Linux  you'll need to install the **python-dev** or **python3-dev** packages as
-well as **cmake**. On Mac OS, the included python version works out of the box,
+well as **cmake**. On macOS, the included python version works out of the box,
 but **cmake** must still be installed.
 
 After installing the prerequisites, run
@@ -35,6 +35,14 @@ Windows
 On Windows, only **Visual Studio 2015** and newer are supported since pybind11 relies
 on various C++11 language features that break older versions of Visual Studio.
 
+.. Note::
+
+    To use the C++17 in Visual Studio 2017 (MSVC 14.1), pybind11 requires the flag
+    ``/permissive-`` to be passed to the compiler `to enforce standard conformance`_. When
+    building with Visual Studio 2019, this is not strictly necessary, but still adviced.
+
+..  _`to enforce standard conformance`: https://docs.microsoft.com/en-us/cpp/build/reference/permissive-standards-conformance?view=vs-2017
+
 To compile and run the tests:
 
 .. code-block:: batch
@@ -130,7 +138,7 @@ On Linux, the above example can be compi
 
     $ c++ -O3 -Wall -shared -std=c++11 -fPIC `python3 -m pybind11 --includes` example.cpp -o example`python3-config --extension-suffix`
 
-For more details on the required compiler flags on Linux and MacOS, see
+For more details on the required compiler flags on Linux and macOS, see
 :ref:`building_manually`. For complete cross-platform compilation instructions,
 refer to the :ref:`compiling` page.
 
--- gtsam-4.1.0.orig/wrap/pybind11/docs/changelog.rst
+++ gtsam-4.1.0/wrap/pybind11/docs/changelog.rst
@@ -6,6 +6,165 @@ Changelog
 Starting with version 1.8.0, pybind11 releases use a `semantic versioning
 <http://semver.org>`_ policy.
 
+v2.6.0 (IN PROGRESS)
+--------------------
+
+See :ref:`upgrade-guide-2.6` for help upgrading to the new version.
+
+* Provide an additional spelling of ``py::module`` - ``py::module_`` (with a
+  trailing underscore), for C++20 compatibility. Only relevant when used
+  unqualified.
+  `#2489 <https://github.com/pybind/pybind11/pull/2489>`_
+
+* ``pybind11_add_module()`` now accepts an optional ``OPT_SIZE`` flag that
+  switches the binding target to size-based optimization regardless global
+  CMake build type (except in debug mode, where optimizations remain disabled).
+  This reduces binary size quite substantially (~25%).
+  `#2463 <https://github.com/pybind/pybind11/pull/2463>`_
+
+* Keyword-only arguments supported in Python 2 or 3 with ``py::kw_only()``.
+  `#2100 <https://github.com/pybind/pybind11/pull/2100>`_
+
+* Positional-only arguments supported in Python 2 or 3 with ``py::pos_only()``.
+  `#2459 <https://github.com/pybind/pybind11/pull/2459>`_
+
+* Access to the type object now provided with ``py::type::of<T>()`` and
+  ``py::type::of(h)``.
+  `#2364 <https://github.com/pybind/pybind11/pull/2364>`_
+
+
+* Perfect forwarding support for methods.
+  `#2048 <https://github.com/pybind/pybind11/pull/2048>`_
+
+* Added ``py::error_already_set::discard_as_unraisable()``.
+  `#2372 <https://github.com/pybind/pybind11/pull/2372>`_
+
+* ``py::hash`` is now public.
+  `#2217 <https://github.com/pybind/pybind11/pull/2217>`_
+
+* ``py::is_final()`` class modifier to block subclassing (CPython only).
+  `#2151 <https://github.com/pybind/pybind11/pull/2151>`_
+
+* ``py::memoryview``  update and documentation.
+  `#2223 <https://github.com/pybind/pybind11/pull/2223>`_
+
+* The Python package was reworked to be more powerful and useful.
+  `#2433 <https://github.com/pybind/pybind11/pull/2433>`_
+
+  * :ref:`build-setuptools` is easier thanks to a new
+    ``pybind11.setup_helpers`` module, which provides utilities to use
+    setuptools with pybind11. It can be used via PEP 518, ``setup_requires``,
+    or by directly copying ``setup_helpers.py`` into your project.
+
+  * CMake configuration files are now included in the Python package. Use
+    ``pybind11.get_cmake_dir()`` or ``python -m pybind11 --cmakedir`` to get
+    the directory with the CMake configuration files, or include the
+    site-packages location in your ``CMAKE_MODULE_PATH``. Or you can use the
+    new ``pybind11[global]`` extra when you install ``pybind11``, which
+    installs the CMake files and headers into your base environment in the
+    standard location
+
+  * ``pybind11-config`` is another way to write ``python -m pybind11`` if you
+    have your PATH set up.
+
+* Minimum CMake required increased to 3.4.
+  `#2338 <https://github.com/pybind/pybind11/pull/2338>`_ and
+  `#2370 <https://github.com/pybind/pybind11/pull/2370>`_
+
+  * Full integration with CMake’s C++ standard system replaces
+    ``PYBIND11_CPP_STANDARD``.
+
+  * Generated config file is now portable to different Python/compiler/CMake
+    versions.
+
+  * Virtual environments prioritized if ``PYTHON_EXECUTABLE`` is not set
+    (``venv``, ``virtualenv``, and ``conda``) (similar to the new FindPython
+    mode).
+
+  * Other CMake features now natively supported, like
+    ``CMAKE_INTERPROCEDURAL_OPTIMIZATION``, ``set(CMAKE_CXX_VISIBILITY_PRESET
+    hidden)``.
+
+* Optional :ref:`find-python-mode` and :ref:`nopython-mode` with CMake.
+  `#2370 <https://github.com/pybind/pybind11/pull/2370>`_
+
+* Uninstall target added.
+  `#2265 <https://github.com/pybind/pybind11/pull/2265>`_ and
+  `#2346 <https://github.com/pybind/pybind11/pull/2346>`_
+
+* ``PYBIND11_OVERLOAD*`` macros and ``get_overload`` function replaced by
+  correctly-named ``PYBIND11_OVERRIDE*`` and ``get_override``, fixing
+  inconsistencies in the presene of a closing ``;`` in these macros.
+  ``get_type_overload`` is deprecated.
+  `#2325 <https://github.com/pybind/pybind11/pull/2325>`_
+
+Smaller or developer focused features:
+
+* Moved ``mkdoc.py`` to a new repo, `pybind11-mkdoc`_.
+
+.. _pybind11-mkdoc: https://github.com/pybind/pybind11-mkdoc
+
+* Error now thrown when ``__init__`` is forgotten on subclasses.
+  `#2152 <https://github.com/pybind/pybind11/pull/2152>`_
+
+* If ``__eq__`` defined but not ``__hash__``, ``__hash__`` is now set to
+  ``None``.
+  `#2291 <https://github.com/pybind/pybind11/pull/2291>`_
+
+* ``py::ellipsis`` now also works on Python 2.
+  `#2360 <https://github.com/pybind/pybind11/pull/2360>`_
+
+* Throw if conversion to ``str`` fails.
+  `#2477 <https://github.com/pybind/pybind11/pull/2477>`_
+
+* Added missing signature for ``py::array``.
+  `#2363 <https://github.com/pybind/pybind11/pull/2363>`_
+
+* Pointer to ``std::tuple`` & ``std::pair`` supported in cast.
+  `#2334 <https://github.com/pybind/pybind11/pull/2334>`_
+
+* Small fixes in NumPy support. ``py::array`` now uses ``py::ssize_t`` as first
+  argument type.
+  `#2293 <https://github.com/pybind/pybind11/pull/2293>`_
+
+* Bugfixes related to more extensive testing
+  `#2321 <https://github.com/pybind/pybind11/pull/2321>`_
+
+* Bug in timezone issue in Eastern hemisphere midnight fixed.
+  `#2438 <https://github.com/pybind/pybind11/pull/2438>`_
+
+* ``std::chrono::time_point`` now works when the resolution is not the same as
+  the system.
+  `#2481 <https://github.com/pybind/pybind11/pull/2481>`_
+
+* Bug fixed where ``py::array_t`` could accept arrays that did not match the
+  requested ordering.
+  `#2484 <https://github.com/pybind/pybind11/pull/2484>`_
+
+* PyPy fixes, including support for PyPy3 and PyPy 7.
+  `#2146 <https://github.com/pybind/pybind11/pull/2146>`_
+
+* CPython 3.9 fixes.
+  `#2253 <https://github.com/pybind/pybind11/pull/2253>`_
+
+* More C++20 support.
+  `#2489 <https://github.com/pybind/pybind11/pull/2489>`_
+
+* Debug Python interpreter support.
+  `#2025 <https://github.com/pybind/pybind11/pull/2025>`_
+
+* NVCC (CUDA 11) now supported and tested in CI.
+  `#2461 <https://github.com/pybind/pybind11/pull/2461>`_
+
+* NVIDIA PGI compilers now supported and tested in CI.
+  `#2475 <https://github.com/pybind/pybind11/pull/2475>`_
+
+* Extensive style checking in CI, with `pre-commit`_ support.
+
+.. _pre-commit: https://pre-commit.com
+
+
+
 v2.5.0 (Mar 31, 2020)
 -----------------------------------------------------
 
@@ -536,7 +695,7 @@ v2.2.0 (August 31, 2017)
   in reference cycles.
   `#856 <https://github.com/pybind/pybind11/pull/856>`_.
 
-* Numpy and buffer protocol related improvements:
+* NumPy and buffer protocol related improvements:
 
   1. Support for negative strides in Python buffer objects/numpy arrays. This
      required changing integers from unsigned to signed for the related C++ APIs.
@@ -1267,7 +1426,7 @@ Happy Christmas!
 * Improved support for ``std::shared_ptr<>`` conversions
 * Initial support for ``std::set<>`` conversions
 * Fixed type resolution issue for types defined in a separate plugin module
-* Cmake build system improvements
+* CMake build system improvements
 * Factored out generic functionality to non-templated code (smaller code size)
 * Added a code size / compile time benchmark vs Boost.Python
 * Added an appveyor CI script
--- gtsam-4.1.0.orig/wrap/pybind11/docs/classes.rst
+++ gtsam-4.1.0/wrap/pybind11/docs/classes.rst
@@ -74,7 +74,7 @@ Note how ``print(p)`` produced a rather
     >>> print(p)
     <example.Pet object at 0x10cd98060>
 
-To address this, we could bind an utility function that returns a human-readable
+To address this, we could bind a utility function that returns a human-readable
 summary to the special method slot named ``__repr__``. Unfortunately, there is no
 suitable functionality in the ``Pet`` data structure, and it would be nice if
 we did not have to change it. This can easily be accomplished by binding a
@@ -373,8 +373,8 @@ sequence.
 
     py::class_<Pet>(m, "Pet")
        .def(py::init<const std::string &, int>())
-       .def("set", (void (Pet::*)(int)) &Pet::set, "Set the pet's age")
-       .def("set", (void (Pet::*)(const std::string &)) &Pet::set, "Set the pet's name");
+       .def("set", static_cast<void (Pet::*)(int)>(&Pet::set), "Set the pet's age")
+       .def("set", static_cast<void (Pet::*)(const std::string &)>(&Pet::set), "Set the pet's name");
 
 The overload signatures are also visible in the method's docstring:
 
--- gtsam-4.1.0.orig/wrap/pybind11/docs/compiling.rst
+++ gtsam-4.1.0/wrap/pybind11/docs/compiling.rst
@@ -3,6 +3,8 @@
 Build systems
 #############
 
+.. _build-setuptools:
+
 Building with setuptools
 ========================
 
@@ -13,6 +15,135 @@ the [python_example]_ repository.
 
 .. [python_example] https://github.com/pybind/python_example
 
+A helper file is provided with pybind11 that can simplify usage with setuptools.
+
+To use pybind11 inside your ``setup.py``, you have to have some system to
+ensure that ``pybind11`` is installed when you build your package. There are
+four possible ways to do this, and pybind11 supports all four: You can ask all
+users to install pybind11 beforehand (bad), you can use
+:ref:`setup_helpers-pep518` (good, but very new and requires Pip 10),
+:ref:`setup_helpers-setup_requires` (discouraged by Python packagers now that
+PEP 518 is available, but it still works everywhere), or you can
+:ref:`setup_helpers-copy-manually` (always works but you have to manually sync
+your copy to get updates).
+
+An example of a ``setup.py`` using pybind11's helpers:
+
+.. code-block:: python
+
+    from setuptools import setup
+    from pybind11.setup_helpers import Pybind11Extension
+
+    ext_modules = [
+        Pybind11Extension(
+            "python_example",
+            ["src/main.cpp"],
+        ),
+    ]
+
+    setup(
+        ...,
+        ext_modules=ext_modules
+    )
+
+If you want to do an automatic search for the highest supported C++ standard,
+that is supported via a ``build_ext`` command override; it will only affect
+``Pybind11Extensions``:
+
+.. code-block:: python
+
+    from setuptools import setup
+    from pybind11.setup_helpers import Pybind11Extension, build_ext
+
+    ext_modules = [
+        Pybind11Extension(
+            "python_example",
+            ["src/main.cpp"],
+        ),
+    ]
+
+    setup(
+        ...,
+        cmdclass={"build_ext": build_ext},
+        ext_modules=ext_modules
+    )
+
+.. _setup_helpers-pep518:
+
+PEP 518 requirements (Pip 10+ required)
+---------------------------------------
+
+If you use `PEP 518's <https://www.python.org/dev/peps/pep-0518/>`_
+``pyproject.toml`` file, you can ensure that ``pybind11`` is available during
+the compilation of your project.  When this file exists, Pip will make a new
+virtual environment, download just the packages listed here in ``requires=``,
+and build a wheel (binary Python package). It will then throw away the
+environment, and install your wheel.
+
+Your ``pyproject.toml`` file will likely look something like this:
+
+.. code-block:: toml
+
+    [build-system]
+    requires = ["setuptools", "wheel", "pybind11==2.6.0"]
+    build-backend = "setuptools.build_meta"
+
+.. note::
+
+    The main drawback to this method is that a `PEP 517`_ compliant build tool,
+    such as Pip 10+, is required for this approach to work; older versions of
+    Pip completely ignore this file. If you distribute binaries (called wheels
+    in Python) using something like `cibuildwheel`_, remember that ``setup.py``
+    and ``pyproject.toml`` are not even contained in the wheel, so this high
+    Pip requirement is only for source builds, and will not affect users of
+    your binary wheels.
+
+.. _PEP 517: https://www.python.org/dev/peps/pep-0517/
+.. _cibuildwheel: https://cibuildwheel.readthedocs.io
+
+.. _setup_helpers-setup_requires:
+
+Classic ``setup_requires``
+--------------------------
+
+If you want to support old versions of Pip with the classic
+``setup_requires=["pybind11"]`` keyword argument to setup, which triggers a
+two-phase ``setup.py`` run, then you will need to use something like this to
+ensure the first pass works (which has not yet installed the ``setup_requires``
+packages, since it can't install something it does not know about):
+
+.. code-block:: python
+
+    try:
+        from pybind11.setup_helpers import Pybind11Extension
+    except ImportError:
+        from setuptools import Extension as Pybind11Extension
+
+
+It doesn't matter that the Extension class is not the enhanced subclass for the
+first pass run; and the second pass will have the ``setup_requires``
+requirements.
+
+This is obviously more of a hack than the PEP 518 method, but it supports
+ancient versions of Pip.
+
+.. _setup_helpers-copy-manually:
+
+Copy manually
+-------------
+
+You can also copy ``setup_helpers.py`` directly to your project; it was
+designed to be usable standalone, like the old example ``setup.py``. You can
+set ``include_pybind11=False`` to skip including the pybind11 package headers,
+so you can use it with git submodules and a specific git version. If you use
+this, you will need to import from a local file in ``setup.py`` and ensure the
+helper file is part of your MANIFEST.
+
+
+.. versionchanged:: 2.6
+
+    Added ``setup_helpers`` file.
+
 Building with cppimport
 ========================
 
@@ -33,8 +164,8 @@ extension module can be created with jus
 
 .. code-block:: cmake
 
-    cmake_minimum_required(VERSION 2.8.12)
-    project(example)
+    cmake_minimum_required(VERSION 3.4...3.18)
+    project(example LANGUAGES CXX)
 
     add_subdirectory(pybind11)
     pybind11_add_module(example example.cpp)
@@ -50,6 +181,9 @@ PyPI integration, can be found in the [c
 
 .. [cmake_example] https://github.com/pybind/cmake_example
 
+.. versionchanged:: 2.6
+   CMake 3.4+ is required.
+
 pybind11_add_module
 -------------------
 
@@ -59,7 +193,7 @@ function with the following signature:
 .. code-block:: cmake
 
     pybind11_add_module(<name> [MODULE | SHARED] [EXCLUDE_FROM_ALL]
-                        [NO_EXTRAS] [SYSTEM] [THIN_LTO] source1 [source2 ...])
+                        [NO_EXTRAS] [THIN_LTO] [OPT_SIZE] source1 [source2 ...])
 
 This function behaves very much like CMake's builtin ``add_library`` (in fact,
 it's a wrapper function around that command). It will add a library target
@@ -86,49 +220,62 @@ latter optimizations are never applied i
 given, they will always be disabled, even in ``Release`` mode. However, this
 will result in code bloat and is generally not recommended.
 
-By default, pybind11 and Python headers will be included with ``-I``. In order
-to include pybind11 as system library, e.g. to avoid warnings in downstream
-code with warn-levels outside of pybind11's scope, set the option ``SYSTEM``.
-
 As stated above, LTO is enabled by default. Some newer compilers also support
 different flavors of LTO such as `ThinLTO`_. Setting ``THIN_LTO`` will cause
 the function to prefer this flavor if available. The function falls back to
-regular LTO if ``-flto=thin`` is not available.
+regular LTO if ``-flto=thin`` is not available. If
+``CMAKE_INTERPROCEDURAL_OPTIMIZATION`` is set (either ON or OFF), then that
+will be respected instead of the built-in flag search.
+
+The ``OPT_SIZE`` flag enables size-based optimization equivalent to the
+standard ``/Os`` or ``-Os`` compiler flags and the ``MinSizeRel`` build type,
+which avoid optimizations that that can substantially increase the size of the
+resulting binary. This flag is particularly useful in projects that are split
+into performance-critical parts and associated bindings. In this case, we can
+compile the project in release mode (and hence, optimize performance globally),
+and specify ``OPT_SIZE`` for the binding target, where size might be the main
+concern as performance is often less critical here. A ~25% size reduction has
+been observed in practice. This flag only changes the optimization behavior at
+a per-target level and takes precedence over the global CMake build type
+(``Release``, ``RelWithDebInfo``) except for ``Debug`` builds, where
+optimizations remain disabled.
 
 .. _ThinLTO: http://clang.llvm.org/docs/ThinLTO.html
 
 Configuration variables
 -----------------------
 
-By default, pybind11 will compile modules with the C++14 standard, if available
-on the target compiler, falling back to C++11 if C++14 support is not
-available.  Note, however, that this default is subject to change: future
-pybind11 releases are expected to migrate to newer C++ standards as they become
-available.  To override this, the standard flag can be given explicitly in
-`CMAKE_CXX_STANDARD <https://cmake.org/cmake/help/v3.17/variable/CMAKE_CXX_STANDARD.html>`_:
+By default, pybind11 will compile modules with the compiler default or the
+minimum standard required by pybind11, whichever is higher.  You can set the
+standard explicitly with
+`CMAKE_CXX_STANDARD <https://cmake.org/cmake/help/latest/variable/CMAKE_CXX_STANDARD.html>`_:
 
 .. code-block:: cmake
 
-    # Use just one of these:
-    set(CMAKE_CXX_STANDARD 11)
-    set(CMAKE_CXX_STANDARD 14)
-    set(CMAKE_CXX_STANDARD 17) # Experimental C++17 support
-
-    add_subdirectory(pybind11)  # or find_package(pybind11)
-
-Note that this and all other configuration variables must be set **before** the
-call to ``add_subdirectory`` or ``find_package``. The variables can also be set
-when calling CMake from the command line using the ``-D<variable>=<value>`` flag.
-
-The target Python version can be selected by setting ``PYBIND11_PYTHON_VERSION``
-or an exact Python installation can be specified with ``PYTHON_EXECUTABLE``.
-For example:
+    set(CMAKE_CXX_STANDARD 14)  # or 11, 14, 17, 20
+    set(CMAKE_CXX_STANDARD_REQUIRED ON)  # optional, ensure standard is supported
+    set(CMAKE_CXX_EXTENSIONS OFF)  # optional, keep compiler extensionsn off
+
+
+The variables can also be set when calling CMake from the command line using
+the ``-D<variable>=<value>`` flag. You can also manually set ``CXX_STANDARD``
+on a target or use ``target_compile_features`` on your targets - anything that
+CMake supports.
+
+Classic Python support: The target Python version can be selected by setting
+``PYBIND11_PYTHON_VERSION`` or an exact Python installation can be specified
+with ``PYTHON_EXECUTABLE``.  For example:
 
 .. code-block:: bash
 
     cmake -DPYBIND11_PYTHON_VERSION=3.6 ..
-    # or
-    cmake -DPYTHON_EXECUTABLE=path/to/python ..
+
+    # Another method:
+    cmake -DPYTHON_EXECUTABLE=/path/to/python ..
+
+    # This often is a good way to get the current Python, works in environments:
+    cmake -DPYTHON_EXECUTABLE=$(python3 -c "import sys; print(sys.executable)") ..
+
 
 find_package vs. add_subdirectory
 ---------------------------------
@@ -139,8 +286,8 @@ See the `Config file`_ docstring for det
 
 .. code-block:: cmake
 
-    cmake_minimum_required(VERSION 2.8.12)
-    project(example)
+    cmake_minimum_required(VERSION 3.4...3.18)
+    project(example LANGUAGES CXX)
 
     find_package(pybind11 REQUIRED)
     pybind11_add_module(example example.cpp)
@@ -151,12 +298,19 @@ the pybind11 repository  :
 
 .. code-block:: bash
 
+    # Classic CMake
     cd pybind11
     mkdir build
     cd build
     cmake ..
     make install
 
+    # CMake 3.15+
+    cd pybind11
+    cmake -S . -B build
+    cmake --build build -j 2  # Build on 2 cores
+    cmake --install build
+
 Once detected, the aforementioned ``pybind11_add_module`` can be employed as
 before. The function usage and configuration variables are identical no matter
 if pybind11 is added as a subdirectory or found as an installed package. You
@@ -165,41 +319,134 @@ can refer to the same [cmake_example]_ r
 
 .. _Config file: https://github.com/pybind/pybind11/blob/master/tools/pybind11Config.cmake.in
 
-Advanced: interface library target
-----------------------------------
 
-When using a version of CMake greater than 3.0, pybind11 can additionally
-be used as a special *interface library* . The target ``pybind11::module``
-is available with pybind11 headers, Python headers and libraries as needed,
-and C++ compile definitions attached. This target is suitable for linking
-to an independently constructed (through ``add_library``, not
-``pybind11_add_module``) target in the consuming project.
+.. _find-python-mode:
+
+FindPython mode
+---------------
+
+CMake 3.12+ (3.15+ recommended) added a new module called FindPython that had a
+highly improved search algorithm and modern targets and tools. If you use
+FindPython, pybind11 will detect this and use the existing targets instead:
 
 .. code-block:: cmake
 
-    cmake_minimum_required(VERSION 3.0)
-    project(example)
+    cmake_minumum_required(VERSION 3.15...3.18)
+    project(example LANGUAGES CXX)
+
+    find_package(Python COMPONENTS Interpreter Development REQUIRED)
+    find_package(pybind11 CONFIG REQUIRED)
+    # or add_subdirectory(pybind11)
+
+    pybind11_add_module(example example.cpp)
+
+You can also use the targets (as listed below) with FindPython. If you define
+``PYBIND11_FINDPYTHON``, pybind11 will perform the FindPython step for you
+(mostly useful when building pybind11's own tests, or as a way to change search
+algorithms from the CMake invocation, with ``-DPYBIND11_FINDPYTHON=ON``.
+
+.. warning::
+
+    If you use FindPython2 and FindPython3 to dual-target Python, use the
+    individual targets listed below, and avoid targets that directly include
+    Python parts.
+
+There are `many ways to hint or force a discovery of a specific Python
+installation <https://cmake.org/cmake/help/latest/module/FindPython.html>`_),
+setting ``Python_ROOT_DIR`` may be the most common one (though with
+virtualenv/venv support, and Conda support, this tends to find the correct
+Python version more often than the old system did).
+
+.. versionadded:: 2.6
+
+Advanced: interface library targets
+-----------------------------------
+
+Pybind11 supports modern CMake usage patterns with a set of interface targets,
+available in all modes. The targets provided are:
+
+   ``pybind11::headers``
+     Just the pybind11 headers and minimum compile requirements
+
+   ``pybind11::python2_no_register``
+     Quiets the warning/error when mixing C++14 or higher and Python 2
+
+   ``pybind11::pybind11``
+     Python headers + ``pybind11::headers`` + ``pybind11::python2_no_register`` (Python 2 only)
+
+   ``pybind11::python_link_helper``
+     Just the "linking" part of pybind11:module
+
+   ``pybind11::module``
+     Everything for extension modules - ``pybind11::pybind11`` + ``Python::Module`` (FindPython CMake 3.15+) or ``pybind11::python_link_helper``
+
+   ``pybind11::embed``
+     Everything for embedding the Python interpreter - ``pybind11::pybind11`` + ``Python::Embed`` (FindPython) or Python libs
+
+   ``pybind11::lto`` / ``pybind11::thin_lto``
+     An alternative to `INTERPROCEDURAL_OPTIMIZATION` for adding link-time optimization.
+
+   ``pybind11::windows_extras``
+     ``/bigobj`` and ``/mp`` for MSVC.
+
+   ``pybind11::opt_size``
+     ``/Os`` for MSVC, ``-Os`` for other compilers. Does nothing for debug builds.
+
+Two helper functions are also provided:
+
+    ``pybind11_strip(target)``
+      Strips a target (uses ``CMAKE_STRIP`` after the target is built)
+
+    ``pybind11_extension(target)``
+      Sets the correct extension (with SOABI) for a target.
+
+You can use these targets to build complex applications. For example, the
+``add_python_module`` function is identical to:
+
+.. code-block:: cmake
+
+    cmake_minimum_required(VERSION 3.4)
+    project(example LANGUAGES CXX)
 
     find_package(pybind11 REQUIRED)  # or add_subdirectory(pybind11)
 
     add_library(example MODULE main.cpp)
-    target_link_libraries(example PRIVATE pybind11::module)
-    set_target_properties(example PROPERTIES PREFIX "${PYTHON_MODULE_PREFIX}"
-                                             SUFFIX "${PYTHON_MODULE_EXTENSION}")
+
+    target_link_libraries(example PRIVATE pybind11::module pybind11::lto pybind11::windows_extras)
+
+    pybind11_extension(example)
+    pybind11_strip(example)
+
+    set_target_properties(example PROPERTIES CXX_VISIBILITY_PRESET "hidden"
+                                             CUDA_VISIBILITY_PRESET "hidden")
+
+Instead of setting properties, you can set ``CMAKE_*`` variables to initialize these correctly.
 
 .. warning::
 
     Since pybind11 is a metatemplate library, it is crucial that certain
     compiler flags are provided to ensure high quality code generation. In
     contrast to the ``pybind11_add_module()`` command, the CMake interface
-    library only provides the *minimal* set of parameters to ensure that the
-    code using pybind11 compiles, but it does **not** pass these extra compiler
-    flags (i.e. this is up to you).
-
-    These include Link Time Optimization (``-flto`` on GCC/Clang/ICPC, ``/GL``
-    and ``/LTCG`` on Visual Studio) and .OBJ files with many sections on Visual
-    Studio (``/bigobj``).  The :ref:`FAQ <faq:symhidden>` contains an
-    explanation on why these are needed.
+    provides a *composable* set of targets to ensure that you retain flexibility.
+    It can be expecially important to provide or set these properties; the
+    :ref:`FAQ <faq:symhidden>` contains an explanation on why these are needed.
+
+.. versionadded:: 2.6
+
+.. _nopython-mode:
+
+Advanced: NOPYTHON mode
+-----------------------
+
+If you want complete control, you can set ``PYBIND11_NOPYTHON`` to completely
+disable Python integration (this also happens if you run ``FindPython2`` and
+``FindPython3`` without running ``FindPython``). This gives you complete
+freedom to integrate into an existing system (like `Scikit-Build's
+<https://scikit-build.readthedocs.io>`_ ``PythonExtensions``).
+``pybind11_add_module`` and ``pybind11_extension`` will be unavailable, and the
+targets will be missing any Python specific behavior.
+
+.. versionadded:: 2.6
 
 Embedding the Python interpreter
 --------------------------------
@@ -213,8 +460,8 @@ information about usage in C++, see :doc
 
 .. code-block:: cmake
 
-    cmake_minimum_required(VERSION 3.0)
-    project(example)
+    cmake_minimum_required(VERSION 3.4...3.18)
+    project(example LANGUAGES CXX)
 
     find_package(pybind11 REQUIRED)  # or add_subdirectory(pybind11)
 
@@ -251,7 +498,7 @@ Besides, the ``--extension-suffix`` opti
 on the distribution; in the latter case, the module extension can be manually
 set to ``.so``.
 
-On Mac OS: the build command is almost the same but it also requires passing
+On macOS: the build command is almost the same but it also requires passing
 the ``-undefined dynamic_lookup`` flag so as to ignore missing symbols when
 building the module:
 
@@ -275,6 +522,25 @@ build system that works on all platforms
     of possibly importing a second Python library into a process that already
     contains one (which will lead to a segfault).
 
+
+Building with vcpkg
+===================
+You can download and install pybind11 using the Microsoft `vcpkg
+<https://github.com/Microsoft/vcpkg/>`_ dependency manager:
+
+.. code-block:: bash
+
+    git clone https://github.com/Microsoft/vcpkg.git
+    cd vcpkg
+    ./bootstrap-vcpkg.sh
+    ./vcpkg integrate install
+    vcpkg install pybind11
+
+The pybind11 port in vcpkg is kept up to date by Microsoft team members and
+community contributors. If the version is out of date, please `create an issue
+or pull request <https://github.com/Microsoft/vcpkg/>`_ on the vcpkg
+repository.
+
 Generating binding code automatically
 =====================================
 
@@ -291,3 +557,10 @@ extensible, and applies to very complex
 classes or incorporating modern meta-programming constructs.
 
 .. [AutoWIG] https://github.com/StatisKit/AutoWIG
+
+[robotpy-build]_ is a is a pure python, cross platform build tool that aims to
+simplify creation of python wheels for pybind11 projects, and provide
+cross-project dependency management. Additionally, it is able to autogenerate
+customizable pybind11-based wrappers by parsing C++ header files.
+
+.. [robotpy-build] https://robotpy-build.readthedocs.io
--- gtsam-4.1.0.orig/wrap/pybind11/docs/faq.rst
+++ gtsam-4.1.0/wrap/pybind11/docs/faq.rst
@@ -285,7 +285,7 @@ CMake code. Conflicts can arise, however
 Python detection in a system with several Python versions installed.
 
 This difference may cause inconsistencies and errors if *both* mechanisms are used in the same project. Consider the following
-Cmake code executed in a system with Python 2.7 and 3.x installed:
+CMake code executed in a system with Python 2.7 and 3.x installed:
 
 .. code-block:: cmake
 
--- gtsam-4.1.0.orig/wrap/pybind11/docs/reference.rst
+++ gtsam-4.1.0/wrap/pybind11/docs/reference.rst
@@ -46,7 +46,7 @@ With reference counting
 Convenience classes for specific Python types
 =============================================
 
-.. doxygenclass:: module
+.. doxygenclass:: module_
     :members:
 
 .. doxygengroup:: pytypes
@@ -91,15 +91,15 @@ Inheritance
 
 See :doc:`/classes` and :doc:`/advanced/classes` for more detail.
 
-.. doxygendefine:: PYBIND11_OVERLOAD
+.. doxygendefine:: PYBIND11_OVERRIDE
 
-.. doxygendefine:: PYBIND11_OVERLOAD_PURE
+.. doxygendefine:: PYBIND11_OVERRIDE_PURE
 
-.. doxygendefine:: PYBIND11_OVERLOAD_NAME
+.. doxygendefine:: PYBIND11_OVERRIDE_NAME
 
-.. doxygendefine:: PYBIND11_OVERLOAD_PURE_NAME
+.. doxygendefine:: PYBIND11_OVERRIDE_PURE_NAME
 
-.. doxygenfunction:: get_overload
+.. doxygenfunction:: get_override
 
 Exceptions
 ==========
--- gtsam-4.1.0.orig/wrap/pybind11/docs/requirements.txt
+++ gtsam-4.1.0/wrap/pybind11/docs/requirements.txt
@@ -1 +1,5 @@
-breathe == 4.5.0
+breathe==4.20.0
+commonmark==0.9.1
+recommonmark==0.6.0
+sphinx==3.2.1
+sphinx_rtd_theme==0.5.0
--- gtsam-4.1.0.orig/wrap/pybind11/docs/upgrade.rst
+++ gtsam-4.1.0/wrap/pybind11/docs/upgrade.rst
@@ -8,6 +8,92 @@ to a new version. But it goes into more
 deprecated APIs and their replacements, build system changes, general code
 modernization and other useful information.
 
+.. _upgrade-guide-2.6:
+
+v2.6
+====
+
+The ``tools/clang`` submodule and ``tools/mkdoc.py`` have been moved to a
+standalone package, `pybind11-mkdoc`_. If you were using those tools, please
+use them via a pip install from the new location.
+
+.. _pybind11-mkdoc: https://github.com/pybind/pybind11-mkdoc
+
+An error is now thrown when ``__init__`` is forgotten on subclasses. This was
+incorrect before, but was not checked. Add a call to ``__init__`` if it is
+missing.
+
+The undocumented ``h.get_type()`` method has been deprecated and replaced by
+``py::type::of(h)``.
+
+If ``__eq__`` defined but not ``__hash__``, ``__hash__`` is now set to
+``None``, as in normal CPython. You should add ``__hash__`` if you intended the
+class to be hashable, possibly using the new ``py::hash`` shortcut.
+
+Usage of the ``PYBIND11_OVERLOAD*`` macros and ``get_overload`` function should
+be replaced by ``PYBIND11_OVERRIDE*`` and ``get_override``. In the future, the
+old macros may be deprecated and removed.
+
+The ``pybind11`` package on PyPI no longer fills the wheel "headers" slot - if
+you were using the headers from this slot, they are available by requesting the
+``global`` extra, that is, ``pip install "pybind11[global]"``. (Most users will
+be unaffected, as the ``pybind11/include`` location is reported by ``python -m
+pybind11 --includes`` and ``pybind11.get_include()`` is still correct and has
+not changed since 2.5).
+
+CMake support:
+--------------
+
+The minimum required version of CMake is now 3.4.  Several details of the CMake
+support have been deprecated; warnings will be shown if you need to change
+something. The changes are:
+
+* ``PYBIND11_CPP_STANDARD=<platform-flag>`` is deprecated, please use
+  ``CMAKE_CXX_STANDARD=<number>`` instead, or any other valid CMake CXX or CUDA
+  standard selection method, like ``target_compile_features``.
+
+* If you do not request a standard, pybind11 targets will compile with the
+  compiler default, but not less than C++11, instead of forcing C++14 always.
+  If you depend on the old behavior, please use ``set(CMAKE_CXX_STANDARD 14)``
+  instead.
+
+* Direct ``pybind11::module`` usage should always be accompanied by at least
+  ``set(CMAKE_CXX_VISIBILITY_PRESET hidden)`` or similar - it used to try to
+  manually force this compiler flag (but not correctly on all compilers or with
+  CUDA).
+
+* ``pybind11_add_module``'s ``SYSTEM`` argument is deprecated and does nothing;
+  linking now behaves like other imported libraries consistently in both
+  config and submodule mode, and behaves like a ``SYSTEM`` library by
+  default.
+
+* If ``PYTHON_EXECUTABLE`` is not set, virtual environments (``venv``,
+  ``virtualenv``, and ``conda``) are prioritized over the standard search
+  (similar to the new FindPython mode).
+
+In addition, the following changes may be of interest:
+
+* ``CMAKE_INTERPROCEDURAL_OPTIMIZATION`` will be respected by
+  ``pybind11_add_module`` if set instead of linking to ``pybind11::lto`` or
+  ``pybind11::thin_lto``.
+
+* Using ``find_package(Python COMPONENTS Interpreter Development)`` before
+  pybind11 will cause pybind11 to use the new Python mechanisms instead of its
+  own custom search, based on a patched version of classic ``FindPythonInterp``
+  / ``FindPythonLibs``. In the future, this may become the default.
+
+
+
+v2.5
+====
+
+The Python package now includes the headers as data in the package itself, as
+well as in the "headers" wheel slot. ``pybind11 --includes`` and
+``pybind11.get_include()`` report the new location, which is always correct
+regardless of how pybind11 was installed, making the old ``user=`` argument
+meaningless. If you are not using the function to get the location already, you
+are encouraged to switch to the package location.
+
 
 v2.2
 ====
--- gtsam-4.1.0.orig/wrap/pybind11/include/pybind11/attr.h
+++ gtsam-4.1.0/wrap/pybind11/include/pybind11/attr.h
@@ -40,8 +40,9 @@ struct sibling { handle value; sibling(c
 
 /// Annotation indicating that a class derives from another given type
 template <typename T> struct base {
+
     PYBIND11_DEPRECATED("base<T>() was deprecated in favor of specifying 'T' as a template argument to class_")
-    base() { }
+    base() { } // NOLINT(modernize-use-equals-default): breaks MSVC 2015 when adding an attribute
 };
 
 /// Keep patient alive while nurse lives
@@ -61,7 +62,7 @@ struct metaclass {
     handle value;
 
     PYBIND11_DEPRECATED("py::metaclass() is no longer required. It's turned on by default now.")
-    metaclass() {}
+    metaclass() { } // NOLINT(modernize-use-equals-default): breaks MSVC 2015 when adding an attribute
 
     /// Override pybind11's default metaclass
     explicit metaclass(handle value) : value(value) { }
@@ -138,7 +139,7 @@ struct function_record {
     function_record()
         : is_constructor(false), is_new_style_constructor(false), is_stateless(false),
           is_operator(false), is_method(false),
-          has_args(false), has_kwargs(false), has_kwonly_args(false) { }
+          has_args(false), has_kwargs(false), has_kw_only_args(false) { }
 
     /// Function name
     char *name = nullptr; /* why no C++ strings? They generate heavier code.. */
@@ -185,14 +186,17 @@ struct function_record {
     /// True if the function has a '**kwargs' argument
     bool has_kwargs : 1;
 
-    /// True once a 'py::kwonly' is encountered (any following args are keyword-only)
-    bool has_kwonly_args : 1;
+    /// True once a 'py::kw_only' is encountered (any following args are keyword-only)
+    bool has_kw_only_args : 1;
 
     /// Number of arguments (including py::args and/or py::kwargs, if present)
     std::uint16_t nargs;
 
     /// Number of trailing arguments (counted in `nargs`) that are keyword-only
-    std::uint16_t nargs_kwonly = 0;
+    std::uint16_t nargs_kw_only = 0;
+
+    /// Number of leading arguments (counted in `nargs`) that are positional-only
+    std::uint16_t nargs_pos_only = 0;
 
     /// Python method object
     PyMethodDef *def = nullptr;
@@ -366,10 +370,10 @@ template <> struct process_attribute<is_
     static void init(const is_new_style_constructor &, function_record *r) { r->is_new_style_constructor = true; }
 };
 
-inline void process_kwonly_arg(const arg &a, function_record *r) {
+inline void process_kw_only_arg(const arg &a, function_record *r) {
     if (!a.name || strlen(a.name) == 0)
-        pybind11_fail("arg(): cannot specify an unnamed argument after an kwonly() annotation");
-    ++r->nargs_kwonly;
+        pybind11_fail("arg(): cannot specify an unnamed argument after an kw_only() annotation");
+    ++r->nargs_kw_only;
 }
 
 /// Process a keyword argument attribute (*without* a default value)
@@ -379,7 +383,7 @@ template <> struct process_attribute<arg
             r->args.emplace_back("self", nullptr, handle(), true /*convert*/, false /*none not allowed*/);
         r->args.emplace_back(a.name, nullptr, handle(), !a.flag_noconvert, a.flag_none);
 
-        if (r->has_kwonly_args) process_kwonly_arg(a, r);
+        if (r->has_kw_only_args) process_kw_only_arg(a, r);
     }
 };
 
@@ -412,14 +416,21 @@ template <> struct process_attribute<arg
         }
         r->args.emplace_back(a.name, a.descr, a.value.inc_ref(), !a.flag_noconvert, a.flag_none);
 
-        if (r->has_kwonly_args) process_kwonly_arg(a, r);
+        if (r->has_kw_only_args) process_kw_only_arg(a, r);
     }
 };
 
 /// Process a keyword-only-arguments-follow pseudo argument
-template <> struct process_attribute<kwonly> : process_attribute_default<kwonly> {
-    static void init(const kwonly &, function_record *r) {
-        r->has_kwonly_args = true;
+template <> struct process_attribute<kw_only> : process_attribute_default<kw_only> {
+    static void init(const kw_only &, function_record *r) {
+        r->has_kw_only_args = true;
+    }
+};
+
+/// Process a positional-only-argument maker
+template <> struct process_attribute<pos_only> : process_attribute_default<pos_only> {
+    static void init(const pos_only &, function_record *r) {
+        r->nargs_pos_only = static_cast<std::uint16_t>(r->args.size());
     }
 };
 
--- gtsam-4.1.0.orig/wrap/pybind11/include/pybind11/buffer_info.h
+++ gtsam-4.1.0/wrap/pybind11/include/pybind11/buffer_info.h
@@ -24,7 +24,7 @@ struct buffer_info {
     std::vector<ssize_t> strides; // Number of bytes between adjacent entries (for each per dimension)
     bool readonly = false;        // flag to indicate if the underlying storage may be written to
 
-    buffer_info() { }
+    buffer_info() = default;
 
     buffer_info(void *ptr, ssize_t itemsize, const std::string &format, ssize_t ndim,
                 detail::any_container<ssize_t> shape_in, detail::any_container<ssize_t> strides_in, bool readonly=false)
--- gtsam-4.1.0.orig/wrap/pybind11/include/pybind11/cast.h
+++ gtsam-4.1.0/wrap/pybind11/include/pybind11/cast.h
@@ -59,7 +59,7 @@ public:
         Py_CLEAR(ptr);
 
         // A heuristic to reduce the stack's capacity (e.g. after long recursive calls)
-        if (stack.capacity() > 16 && stack.size() != 0 && stack.capacity() / stack.size() > 2)
+        if (stack.capacity() > 16 && !stack.empty() && stack.capacity() / stack.size() > 2)
             stack.shrink_to_fit();
     }
 
@@ -163,7 +163,7 @@ inline const std::vector<detail::type_in
  */
 PYBIND11_NOINLINE inline detail::type_info* get_type_info(PyTypeObject *type) {
     auto &bases = all_type_info(type);
-    if (bases.size() == 0)
+    if (bases.empty())
         return nullptr;
     if (bases.size() > 1)
         pybind11_fail("pybind11::detail::get_type_info: type has multiple pybind11-registered bases");
@@ -220,7 +220,7 @@ struct value_and_holder {
     {}
 
     // Default constructor (used to signal a value-and-holder not found by get_value_and_holder())
-    value_and_holder() {}
+    value_and_holder() = default;
 
     // Used for past-the-end iterator
     value_and_holder(size_t index) : index{index} {}
@@ -432,7 +432,7 @@ PYBIND11_NOINLINE inline std::string err
 
 #if !defined(PYPY_VERSION)
     if (scope.trace) {
-        PyTracebackObject *trace = (PyTracebackObject *) scope.trace;
+        auto *trace = (PyTracebackObject *) scope.trace;
 
         /* Get the deepest trace possible */
         while (trace->tb_next)
@@ -458,7 +458,7 @@ PYBIND11_NOINLINE inline handle get_obje
     auto &instances = get_internals().registered_instances;
     auto range = instances.equal_range(ptr);
     for (auto it = range.first; it != range.second; ++it) {
-        for (auto vh : values_and_holders(it->second)) {
+        for (const auto &vh : values_and_holders(it->second)) {
             if (vh.type == type)
                 return handle((PyObject *) it->second);
         }
@@ -636,7 +636,7 @@ public:
     /// native typeinfo, or when the native one wasn't able to produce a value.
     PYBIND11_NOINLINE bool try_load_foreign_module_local(handle src) {
         constexpr auto *local_key = PYBIND11_MODULE_LOCAL_ID;
-        const auto pytype = src.get_type();
+        const auto pytype = type::handle_of(src);
         if (!hasattr(pytype, local_key))
             return false;
 
@@ -1006,6 +1006,7 @@ template <typename CharT> using is_std_c
     std::is_same<CharT, wchar_t> /* std::wstring */
 >;
 
+
 template <typename T>
 struct type_caster<T, enable_if_t<std::is_arithmetic<T>::value && !is_std_char_type<T>::value>> {
     using _py_type_0 = conditional_t<sizeof(T) <= sizeof(long), long, long long>;
@@ -1034,12 +1035,12 @@ public:
                 : (py_type) PYBIND11_LONG_AS_LONGLONG(src.ptr());
         }
 
+        // Python API reported an error
         bool py_err = py_value == (py_type) -1 && PyErr_Occurred();
 
-        // Protect std::numeric_limits::min/max with parentheses
-        if (py_err || (std::is_integral<T>::value && sizeof(py_type) != sizeof(T) &&
-                       (py_value < (py_type) (std::numeric_limits<T>::min)() ||
-                        py_value > (py_type) (std::numeric_limits<T>::max)()))) {
+        // Check to see if the conversion is valid (integers should match exactly)
+        // Signed/unsigned checks happen elsewhere
+        if (py_err || (std::is_integral<T>::value && sizeof(py_type) != sizeof(T) && py_value != (py_type) (T) py_value)) {
             bool type_error = py_err && PyErr_ExceptionMatches(
 #if PY_VERSION_HEX < 0x03000000 && !defined(PYPY_VERSION)
                 PyExc_SystemError
@@ -1129,7 +1130,7 @@ public:
         }
 
         /* Check if this is a C++ type */
-        auto &bases = all_type_info((PyTypeObject *) h.get_type().ptr());
+        auto &bases = all_type_info((PyTypeObject *) type::handle_of(h).ptr());
         if (bases.size() == 1) { // Only allowing loading from a single-value type
             value = values_and_holders(reinterpret_cast<instance *>(h.ptr())).begin()->value_ptr();
             return true;
@@ -1243,7 +1244,7 @@ template <typename StringType, bool IsVi
             load_src.ptr(), UTF_N == 8 ? "utf-8" : UTF_N == 16 ? "utf-16" : "utf-32", nullptr));
         if (!utfNbytes) { PyErr_Clear(); return false; }
 
-        const CharT *buffer = reinterpret_cast<const CharT *>(PYBIND11_BYTES_AS_STRING(utfNbytes.ptr()));
+        const auto *buffer = reinterpret_cast<const CharT *>(PYBIND11_BYTES_AS_STRING(utfNbytes.ptr()));
         size_t length = (size_t) PYBIND11_BYTES_SIZE(utfNbytes.ptr()) / sizeof(CharT);
         if (UTF_N > 8) { buffer++; length--; } // Skip BOM for UTF-16/32
         value = StringType(buffer, length);
@@ -1257,7 +1258,7 @@ template <typename StringType, bool IsVi
 
     static handle cast(const StringType &src, return_value_policy /* policy */, handle /* parent */) {
         const char *buffer = reinterpret_cast<const char *>(src.data());
-        ssize_t nbytes = ssize_t(src.size() * sizeof(CharT));
+        auto nbytes = ssize_t(src.size() * sizeof(CharT));
         handle s = decode_utfN(buffer, nbytes);
         if (!s) throw error_already_set();
         return s;
@@ -1363,7 +1364,7 @@ public:
         // errors.  We also allow want to allow unicode characters U+0080 through U+00FF, as those
         // can fit into a single char value.
         if (StringCaster::UTF_N == 8 && str_len > 1 && str_len <= 4) {
-            unsigned char v0 = static_cast<unsigned char>(value[0]);
+            auto v0 = static_cast<unsigned char>(value[0]);
             size_t char0_bytes = !(v0 & 0x80) ? 1 : // low bits only: 0-127
                 (v0 & 0xE0) == 0xC0 ? 2 : // 0b110xxxxx - start of 2-byte sequence
                 (v0 & 0xF0) == 0xE0 ? 3 : // 0b1110xxxx - start of 3-byte sequence
@@ -1421,6 +1422,17 @@ public:
         return cast_impl(std::forward<T>(src), policy, parent, indices{});
     }
 
+    // copied from the PYBIND11_TYPE_CASTER macro
+    template <typename T>
+    static handle cast(T *src, return_value_policy policy, handle parent) {
+        if (!src) return none().release();
+        if (policy == return_value_policy::take_ownership) {
+            auto h = cast(std::move(*src), policy, parent); delete src; return h;
+        } else {
+            return cast(*src, policy, parent);
+        }
+    }
+
     static constexpr auto name = _("Tuple[") + concat(make_caster<Ts>::name...) + _("]");
 
     template <typename T> using cast_op_type = type;
@@ -1696,7 +1708,7 @@ template <typename T, typename SFINAE> t
         throw cast_error("Unable to cast Python instance to C++ type (compile in debug mode for details)");
 #else
         throw cast_error("Unable to cast Python instance of type " +
-            (std::string) str(handle.get_type()) + " to C++ type '" + type_id<T>() + "'");
+            (std::string) str(type::handle_of(handle)) + " to C++ type '" + type_id<T>() + "'");
 #endif
     }
     return conv;
@@ -1747,7 +1759,7 @@ detail::enable_if_t<!detail::move_never<
         throw cast_error("Unable to cast Python instance to C++ rvalue: instance has multiple references"
             " (compile in debug mode for details)");
 #else
-        throw cast_error("Unable to move from Python " + (std::string) str(obj.get_type()) +
+        throw cast_error("Unable to move from Python " + (std::string) str(type::handle_of(obj)) +
                 " instance to C++ " + type_id<T>() + " instance: instance has multiple references");
 #endif
 
@@ -1756,7 +1768,7 @@ detail::enable_if_t<!detail::move_never<
     return ret;
 }
 
-// Calling cast() on an rvalue calls pybind::cast with the object rvalue, which does:
+// Calling cast() on an rvalue calls pybind11::cast with the object rvalue, which does:
 // - If we have to move (because T has no copy constructor), do it.  This will fail if the moved
 //   object has multiple references, but trying to copy will fail to compile.
 // - If both movable and copyable, check ref count: if 1, move; otherwise copy
@@ -1785,16 +1797,16 @@ PYBIND11_NAMESPACE_BEGIN(detail)
 template <typename T, enable_if_t<!is_pyobject<T>::value, int>>
 object object_or_cast(T &&o) { return pybind11::cast(std::forward<T>(o)); }
 
-struct overload_unused {}; // Placeholder type for the unneeded (and dead code) static variable in the OVERLOAD_INT macro
-template <typename ret_type> using overload_caster_t = conditional_t<
-    cast_is_temporary_value_reference<ret_type>::value, make_caster<ret_type>, overload_unused>;
+struct override_unused {}; // Placeholder type for the unneeded (and dead code) static variable in the PYBIND11_OVERRIDE_OVERRIDE macro
+template <typename ret_type> using override_caster_t = conditional_t<
+    cast_is_temporary_value_reference<ret_type>::value, make_caster<ret_type>, override_unused>;
 
 // Trampoline use: for reference/pointer types to value-converted values, we do a value cast, then
 // store the result in the given variable.  For other types, this is a no-op.
 template <typename T> enable_if_t<cast_is_temporary_value_reference<T>::value, T> cast_ref(object &&o, make_caster<T> &caster) {
     return cast_op<T>(load_type(caster, o));
 }
-template <typename T> enable_if_t<!cast_is_temporary_value_reference<T>::value, T> cast_ref(object &&, overload_unused &) {
+template <typename T> enable_if_t<!cast_is_temporary_value_reference<T>::value, T> cast_ref(object &&, override_unused &) {
     pybind11_fail("Internal error: cast_ref fallback invoked"); }
 
 // Trampoline use: Having a pybind11::cast with an invalid reference type is going to static_assert, even
@@ -1899,7 +1911,12 @@ public:
 /// \ingroup annotations
 /// Annotation indicating that all following arguments are keyword-only; the is the equivalent of an
 /// unnamed '*' argument (in Python 3)
-struct kwonly {};
+struct kw_only {};
+
+/// \ingroup annotations
+/// Annotation indicating that all previous arguments are positional-only; the is the equivalent of an
+/// unnamed '/' argument (in Python 3.8)
+struct pos_only {};
 
 template <typename T>
 arg_v arg::operator=(T &&value) const { return {std::move(*this), std::forward<T>(value)}; }
@@ -1912,7 +1929,7 @@ inline namespace literals {
     String literal version of `arg`
  \endrst */
 constexpr arg operator"" _a(const char *name, size_t) { return arg(name); }
-}
+} // namespace literals
 
 PYBIND11_NAMESPACE_BEGIN(detail)
 
@@ -2187,13 +2204,25 @@ object object_api<Derived>::call(Args &&
 
 PYBIND11_NAMESPACE_END(detail)
 
+
+template<typename T>
+handle type::handle_of() {
+   static_assert(
+      std::is_base_of<detail::type_caster_generic, detail::make_caster<T>>::value,
+      "py::type::of<T> only supports the case where T is a registered C++ types."
+    );
+
+    return detail::get_type_handle(typeid(T), true);
+}
+
+
 #define PYBIND11_MAKE_OPAQUE(...) \
     namespace pybind11 { namespace detail { \
         template<> class type_caster<__VA_ARGS__> : public type_caster_base<__VA_ARGS__> { }; \
     }}
 
 /// Lets you pass a type containing a `,` through a macro parameter without needing a separate
-/// typedef, e.g.: `PYBIND11_OVERLOAD(PYBIND11_TYPE(ReturnType<A, B>), PYBIND11_TYPE(Parent<C, D>), f, arg)`
+/// typedef, e.g.: `PYBIND11_OVERRIDE(PYBIND11_TYPE(ReturnType<A, B>), PYBIND11_TYPE(Parent<C, D>), f, arg)`
 #define PYBIND11_TYPE(...) __VA_ARGS__
 
 PYBIND11_NAMESPACE_END(PYBIND11_NAMESPACE)
--- gtsam-4.1.0.orig/wrap/pybind11/include/pybind11/chrono.h
+++ gtsam-4.1.0/wrap/pybind11/include/pybind11/chrono.h
@@ -33,9 +33,9 @@ PYBIND11_NAMESPACE_BEGIN(detail)
 template <typename type> class duration_caster {
 public:
     typedef typename type::rep rep;
-    typedef typename type::period period;
+    using period = typename type::period;
 
-    typedef std::chrono::duration<uint_fast32_t, std::ratio<86400>> days;
+    using days = std::chrono::duration<uint_fast32_t, std::ratio<86400>>;
 
     bool load(handle src, bool) {
         using namespace std::chrono;
@@ -98,7 +98,7 @@ public:
 // This is for casting times on the system clock into datetime.datetime instances
 template <typename Duration> class type_caster<std::chrono::time_point<std::chrono::system_clock, Duration>> {
 public:
-    typedef std::chrono::time_point<std::chrono::system_clock, Duration> type;
+    using type = std::chrono::time_point<std::chrono::system_clock, Duration>;
     bool load(handle src, bool) {
         using namespace std::chrono;
 
@@ -140,7 +140,7 @@ public:
         }
         else return false;
 
-        value = system_clock::from_time_t(std::mktime(&cal)) + msecs;
+        value = time_point_cast<Duration>(system_clock::from_time_t(std::mktime(&cal)) + msecs);
         return true;
     }
 
@@ -150,21 +150,28 @@ public:
         // Lazy initialise the PyDateTime import
         if (!PyDateTimeAPI) { PyDateTime_IMPORT; }
 
-        std::time_t tt = system_clock::to_time_t(time_point_cast<system_clock::duration>(src));
+        // Get out microseconds, and make sure they are positive, to avoid bug in eastern hemisphere time zones
+        // (cfr. https://github.com/pybind/pybind11/issues/2417)
+        using us_t = duration<int, std::micro>;
+        auto us = duration_cast<us_t>(src.time_since_epoch() % seconds(1));
+        if (us.count() < 0)
+            us += seconds(1);
+
+        // Subtract microseconds BEFORE `system_clock::to_time_t`, because:
+        // > If std::time_t has lower precision, it is implementation-defined whether the value is rounded or truncated.
+        // (https://en.cppreference.com/w/cpp/chrono/system_clock/to_time_t)
+        std::time_t tt = system_clock::to_time_t(time_point_cast<system_clock::duration>(src - us));
         // this function uses static memory so it's best to copy it out asap just in case
         // otherwise other code that is using localtime may break this (not just python code)
         std::tm localtime = *std::localtime(&tt);
 
-        // Declare these special duration types so the conversions happen with the correct primitive types (int)
-        using us_t = duration<int, std::micro>;
-
         return PyDateTime_FromDateAndTime(localtime.tm_year + 1900,
                                           localtime.tm_mon + 1,
                                           localtime.tm_mday,
                                           localtime.tm_hour,
                                           localtime.tm_min,
                                           localtime.tm_sec,
-                                          (duration_cast<us_t>(src.time_since_epoch() % seconds(1))).count());
+                                          us.count());
     }
     PYBIND11_TYPE_CASTER(type, _("datetime.datetime"));
 };
--- gtsam-4.1.0.orig/wrap/pybind11/include/pybind11/detail/class.h
+++ gtsam-4.1.0/wrap/pybind11/include/pybind11/detail/class.h
@@ -169,7 +169,7 @@ extern "C" inline PyObject *pybind11_met
     auto instance = reinterpret_cast<detail::instance *>(self);
 
     // Ensure that the base __init__ function(s) were called
-    for (auto vh : values_and_holders(instance)) {
+    for (const auto &vh : values_and_holders(instance)) {
         if (!vh.holder_constructed()) {
             PyErr_Format(PyExc_TypeError, "%.200s.__init__() must be called when overriding __init__",
                          vh.type->type->tp_name);
@@ -592,7 +592,7 @@ inline PyObject* make_new_python_type(co
 
     auto &internals = get_internals();
     auto bases = tuple(rec.bases);
-    auto base = (bases.size() == 0) ? internals.instance_base
+    auto base = (bases.empty()) ? internals.instance_base
                                     : bases[0].ptr();
 
     /* Danger zone: from now (and until PyType_Ready), make sure to
@@ -616,7 +616,7 @@ inline PyObject* make_new_python_type(co
     type->tp_doc = tp_doc;
     type->tp_base = type_incref((PyTypeObject *)base);
     type->tp_basicsize = static_cast<ssize_t>(sizeof(instance));
-    if (bases.size() > 0)
+    if (!bases.empty())
         type->tp_bases = bases.release().ptr();
 
     /* Don't inherit base __init__ */
--- gtsam-4.1.0.orig/wrap/pybind11/include/pybind11/detail/common.h
+++ gtsam-4.1.0/wrap/pybind11/include/pybind11/detail/common.h
@@ -9,6 +9,10 @@
 
 #pragma once
 
+#define PYBIND11_VERSION_MAJOR 2
+#define PYBIND11_VERSION_MINOR 6
+#define PYBIND11_VERSION_PATCH 0.dev1
+
 #define PYBIND11_NAMESPACE_BEGIN(name) namespace name {
 #define PYBIND11_NAMESPACE_END(name) }
 
@@ -96,10 +100,6 @@
 #  define PYBIND11_MAYBE_UNUSED __attribute__ ((__unused__))
 #endif
 
-#define PYBIND11_VERSION_MAJOR 2
-#define PYBIND11_VERSION_MINOR 5
-#define PYBIND11_VERSION_PATCH dev1
-
 /* Don't let Python.h #define (v)snprintf as macro because they are implemented
    properly in Visual Studio since 2015. */
 #if defined(_MSC_VER) && _MSC_VER >= 1900
@@ -154,6 +154,7 @@
 #include <vector>
 #include <string>
 #include <stdexcept>
+#include <exception>
 #include <unordered_set>
 #include <unordered_map>
 #include <memory>
@@ -501,8 +502,16 @@ template <bool... Bs> using select_indic
 template <bool B> using bool_constant = std::integral_constant<bool, B>;
 template <typename T> struct negation : bool_constant<!T::value> { };
 
+// PGI cannot detect operator delete with the "compatible" void_t impl, so
+// using the new one (C++14 defect, so generally works on newer compilers, even
+// if not in C++17 mode)
+#if defined(__PGIC__)
+template<typename... > using void_t = void;
+#else
 template <typename...> struct void_t_impl { using type = void; };
 template <typename... Ts> using void_t = typename void_t_impl<Ts...>::type;
+#endif
+
 
 /// Compile-time all/any/none of that check the boolean value of all template types
 #if defined(__cpp_fold_expressions) && !(defined(_MSC_VER) && (_MSC_VER < 1916))
@@ -528,17 +537,17 @@ template <class T, template<class> class
 
 /// Strip the class from a method type
 template <typename T> struct remove_class { };
-template <typename C, typename R, typename... A> struct remove_class<R (C::*)(A...)> { typedef R type(A...); };
-template <typename C, typename R, typename... A> struct remove_class<R (C::*)(A...) const> { typedef R type(A...); };
+template <typename C, typename R, typename... A> struct remove_class<R (C::*)(A...)> { using type = R (A...); };
+template <typename C, typename R, typename... A> struct remove_class<R (C::*)(A...) const> { using type = R (A...); };
 
 /// Helper template to strip away type modifiers
-template <typename T> struct intrinsic_type                       { typedef T type; };
-template <typename T> struct intrinsic_type<const T>              { typedef typename intrinsic_type<T>::type type; };
-template <typename T> struct intrinsic_type<T*>                   { typedef typename intrinsic_type<T>::type type; };
-template <typename T> struct intrinsic_type<T&>                   { typedef typename intrinsic_type<T>::type type; };
-template <typename T> struct intrinsic_type<T&&>                  { typedef typename intrinsic_type<T>::type type; };
-template <typename T, size_t N> struct intrinsic_type<const T[N]> { typedef typename intrinsic_type<T>::type type; };
-template <typename T, size_t N> struct intrinsic_type<T[N]>       { typedef typename intrinsic_type<T>::type type; };
+template <typename T> struct intrinsic_type                       { using type = T; };
+template <typename T> struct intrinsic_type<const T>              { using type = typename intrinsic_type<T>::type; };
+template <typename T> struct intrinsic_type<T*>                   { using type = typename intrinsic_type<T>::type; };
+template <typename T> struct intrinsic_type<T&>                   { using type = typename intrinsic_type<T>::type; };
+template <typename T> struct intrinsic_type<T&&>                  { using type = typename intrinsic_type<T>::type; };
+template <typename T, size_t N> struct intrinsic_type<const T[N]> { using type = typename intrinsic_type<T>::type; };
+template <typename T, size_t N> struct intrinsic_type<T[N]>       { using type = typename intrinsic_type<T>::type; };
 template <typename T> using intrinsic_t = typename intrinsic_type<T>::type;
 
 /// Helper type to replace 'void' in some expressions
@@ -752,7 +761,7 @@ struct nodelete { template <typename T>
 PYBIND11_NAMESPACE_BEGIN(detail)
 template <typename... Args>
 struct overload_cast_impl {
-    constexpr overload_cast_impl() {} // MSVC 2015 needs this
+    constexpr overload_cast_impl() {}; // NOLINT(modernize-use-equals-default):  MSVC 2015 needs this
 
     template <typename Return>
     constexpr auto operator()(Return (*pf)(Args...)) const noexcept
--- gtsam-4.1.0.orig/wrap/pybind11/include/pybind11/detail/init.h
+++ gtsam-4.1.0/wrap/pybind11/include/pybind11/detail/init.h
@@ -132,6 +132,7 @@ void construct(value_and_holder &v_h, Al
 template <typename Class>
 void construct(value_and_holder &v_h, Holder<Class> holder, bool need_alias) {
     auto *ptr = holder_helper<Holder<Class>>::get(holder);
+    no_nullptr(ptr);
     // If we need an alias, check that the held pointer is actually an alias instance
     if (Class::has_alias && need_alias && !is_alias<Class>(ptr))
         throw type_error("pybind11::init(): construction failed: returned holder-wrapped instance "
--- gtsam-4.1.0.orig/wrap/pybind11/include/pybind11/detail/internals.h
+++ gtsam-4.1.0/wrap/pybind11/include/pybind11/detail/internals.h
@@ -82,10 +82,10 @@ struct type_equal_to {
 template <typename value_type>
 using type_map = std::unordered_map<std::type_index, value_type, type_hash, type_equal_to>;
 
-struct overload_hash {
+struct override_hash {
     inline size_t operator()(const std::pair<const PyObject *, const char *>& v) const {
         size_t value = std::hash<const void *>()(v.first);
-        value ^= std::hash<const void *>()(v.second)  + 0x9e3779b9 + (value<<6) + (value>>2);
+        value ^= std::hash<const void *>()(v.second) + 0x9e3779b9 + (value<<6) + (value>>2);
         return value;
     }
 };
@@ -97,7 +97,7 @@ struct internals {
     type_map<type_info *> registered_types_cpp; // std::type_index -> pybind11's type information
     std::unordered_map<PyTypeObject *, std::vector<type_info *>> registered_types_py; // PyTypeObject* -> base type_info(s)
     std::unordered_multimap<const void *, instance*> registered_instances; // void * -> instance*
-    std::unordered_set<std::pair<const PyObject *, const char *>, overload_hash> inactive_overload_cache;
+    std::unordered_set<std::pair<const PyObject *, const char *>, override_hash> inactive_override_cache;
     type_map<std::vector<bool (*)(PyObject *, void *&)>> direct_conversions;
     std::unordered_map<const PyObject *, std::vector<PyObject *>> patients;
     std::forward_list<void (*) (std::exception_ptr)> registered_exception_translators;
--- gtsam-4.1.0.orig/wrap/pybind11/include/pybind11/eigen.h
+++ gtsam-4.1.0/wrap/pybind11/include/pybind11/eigen.h
@@ -553,7 +553,7 @@ struct type_caster<Type, enable_if_t<is_
         object matrix_type = sparse_module.attr(
             rowMajor ? "csr_matrix" : "csc_matrix");
 
-        if (!obj.get_type().is(matrix_type)) {
+        if (!type::handle_of(obj).is(matrix_type)) {
             try {
                 obj = matrix_type(obj);
             } catch (const error_already_set &) {
--- gtsam-4.1.0.orig/wrap/pybind11/include/pybind11/iostream.h
+++ gtsam-4.1.0/wrap/pybind11/include/pybind11/iostream.h
@@ -30,7 +30,7 @@ private:
     object pywrite;
     object pyflush;
 
-    int overflow(int c) {
+    int overflow(int c) override {
         if (!traits_type::eq_int_type(c, traits_type::eof())) {
             *pptr() = traits_type::to_char_type(c);
             pbump(1);
@@ -38,7 +38,10 @@ private:
         return sync() == 0 ? traits_type::not_eof(c) : traits_type::eof();
     }
 
-    int sync() {
+    // This function must be non-virtual to be called in a destructor. If the
+    // rare MSVC test failure shows up with this version, then this should be
+    // simplified to a fully qualified call.
+    int _sync() {
         if (pbase() != pptr()) {
             // This subtraction cannot be negative, so dropping the sign
             str line(pbase(), static_cast<size_t>(pptr() - pbase()));
@@ -54,6 +57,10 @@ private:
         return 0;
     }
 
+    int sync() override {
+        return _sync();
+    }
+
 public:
 
     pythonbuf(object pyostream, size_t buffer_size = 1024)
@@ -67,8 +74,8 @@ public:
     pythonbuf(pythonbuf&&) = default;
 
     /// Sync before destroy
-    ~pythonbuf() {
-        sync();
+    ~pythonbuf() override {
+        _sync();
     }
 };
 
--- gtsam-4.1.0.orig/wrap/pybind11/include/pybind11/numpy.h
+++ gtsam-4.1.0/wrap/pybind11/include/pybind11/numpy.h
@@ -222,7 +222,7 @@ private:
     };
 
     static npy_api lookup() {
-        module m = module::import("numpy.core.multiarray");
+        module_ m = module::import("numpy.core.multiarray");
         auto c = m.attr("_ARRAY_API");
 #if PY_MAJOR_VERSION >= 3
         void **api_ptr = (void **) PyCapsule_GetPointer(c.ptr(), NULL);
@@ -281,7 +281,7 @@ template <typename T> struct is_complex
 template <typename T> struct is_complex<std::complex<T>> : std::true_type { };
 
 template <typename T> struct array_info_scalar {
-    typedef T type;
+    using type = T;
     static constexpr bool is_array = false;
     static constexpr bool is_empty = false;
     static constexpr auto extents = _("");
@@ -550,7 +550,7 @@ public:
         forcecast = detail::npy_api::NPY_ARRAY_FORCECAST_
     };
 
-    array() : array({{0}}, static_cast<const double *>(nullptr)) {}
+    array() : array(0, static_cast<const double *>(nullptr)) {}
 
     using ShapeContainer = detail::any_container<ssize_t>;
     using StridesContainer = detail::any_container<ssize_t>;
@@ -611,8 +611,8 @@ public:
     template <typename T>
     explicit array(ssize_t count, const T *ptr, handle base = handle()) : array({count}, {}, ptr, base) { }
 
-    explicit array(const buffer_info &info)
-    : array(pybind11::dtype(info), info.shape, info.strides, info.ptr) { }
+    explicit array(const buffer_info &info, handle base = handle())
+    : array(pybind11::dtype(info), info.shape, info.strides, info.ptr, base) { }
 
     /// Array descriptor (dtype)
     pybind11::dtype dtype() const {
@@ -858,7 +858,7 @@ public:
         if (!m_ptr) throw error_already_set();
     }
 
-    explicit array_t(const buffer_info& info) : array(info) { }
+    explicit array_t(const buffer_info& info, handle base = handle()) : array(info, base) { }
 
     array_t(ShapeContainer shape, StridesContainer strides, const T *ptr = nullptr, handle base = handle())
         : array(std::move(shape), std::move(strides), ptr, base) { }
@@ -934,7 +934,8 @@ public:
     static bool check_(handle h) {
         const auto &api = detail::npy_api::get();
         return api.PyArray_Check_(h.ptr())
-               && api.PyArray_EquivTypes_(detail::array_proxy(h.ptr())->descr, dtype::of<T>().ptr());
+               && api.PyArray_EquivTypes_(detail::array_proxy(h.ptr())->descr, dtype::of<T>().ptr())
+               && detail::check_flags(h.ptr(), ExtraFlags & (array::c_style | array::f_style));
     }
 
 protected:
@@ -1295,7 +1296,7 @@ public:
         m_strides.back() = static_cast<value_type>(strides.back());
         for (size_type i = m_strides.size() - 1; i != 0; --i) {
             size_type j = i - 1;
-            value_type s = static_cast<value_type>(shape[i]);
+            auto s = static_cast<value_type>(shape[i]);
             m_strides[j] = strides[j] + m_strides[i] - strides[i] * s;
         }
     }
@@ -1483,7 +1484,14 @@ struct vectorize_arg {
 
 template <typename Func, typename Return, typename... Args>
 struct vectorize_helper {
+
+// NVCC for some reason breaks if NVectorized is private
+#ifdef __CUDACC__
+public:
+#else
 private:
+#endif
+
     static constexpr size_t N = sizeof...(Args);
     static constexpr size_t NVectorized = constexpr_sum(vectorize_arg<Args>::vectorize...);
     static_assert(NVectorized >= 1,
@@ -1531,7 +1539,7 @@ private:
         ssize_t nd = 0;
         std::vector<ssize_t> shape(0);
         auto trivial = broadcast(buffers, nd, shape);
-        size_t ndim = (size_t) nd;
+        auto ndim = (size_t) nd;
 
         size_t size = std::accumulate(shape.begin(), shape.end(), (size_t) 1, std::multiplies<size_t>());
 
--- gtsam-4.1.0.orig/wrap/pybind11/include/pybind11/pybind11.h
+++ gtsam-4.1.0/wrap/pybind11/include/pybind11/pybind11.h
@@ -55,7 +55,7 @@ PYBIND11_NAMESPACE_BEGIN(PYBIND11_NAMESP
 /// Wraps an arbitrary C++ function/method/lambda function/.. into a callable Python object
 class cpp_function : public function {
 public:
-    cpp_function() { }
+    cpp_function() = default;
     cpp_function(std::nullptr_t) { }
 
     /// Construct a cpp_function from a vanilla function pointer
@@ -165,7 +165,7 @@ protected:
             /* Get a pointer to the capture object */
             auto data = (sizeof(capture) <= sizeof(call.func.data)
                          ? &call.func.data : call.func.data[0]);
-            capture *cap = const_cast<capture *>(reinterpret_cast<const capture *>(data));
+            auto *cap = const_cast<capture *>(reinterpret_cast<const capture *>(data));
 
             /* Override policy for rvalues -- usually to enforce rvp::move on an rvalue */
             return_value_policy policy = return_value_policy_override<Return>::policy(call.func.policy);
@@ -187,11 +187,13 @@ protected:
         process_attributes<Extra...>::init(extra..., rec);
 
         {
-            constexpr bool has_kwonly_args = any_of<std::is_same<kwonly, Extra>...>::value,
+            constexpr bool has_kw_only_args = any_of<std::is_same<kw_only, Extra>...>::value,
+                           has_pos_only_args = any_of<std::is_same<pos_only, Extra>...>::value,
                            has_args = any_of<std::is_same<args, Args>...>::value,
                            has_arg_annotations = any_of<is_keyword<Extra>...>::value;
-            static_assert(has_arg_annotations || !has_kwonly_args, "py::kwonly requires the use of argument annotations");
-            static_assert(!(has_args && has_kwonly_args), "py::kwonly cannot be combined with a py::args argument");
+            static_assert(has_arg_annotations || !has_kw_only_args, "py::kw_only requires the use of argument annotations");
+            static_assert(has_arg_annotations || !has_pos_only_args, "py::pos_only requires the use of argument annotations (for docstrings and aligning the annotations to the argument)");
+            static_assert(!(has_args && has_kw_only_args), "py::kw_only cannot be combined with a py::args argument");
         }
 
         /* Generate a readable signature describing the function's arguments and return value types */
@@ -228,7 +230,7 @@ protected:
             if (a.descr)
                 a.descr = strdup(a.descr);
             else if (a.value)
-                a.descr = strdup(a.value.attr("__repr__")().cast<std::string>().c_str());
+                a.descr = strdup(repr(a.value).cast<std::string>().c_str());
         }
 
         rec->is_constructor = !strcmp(rec->name, "__init__") || !strcmp(rec->name, "__setstate__");
@@ -257,7 +259,10 @@ protected:
                 // Write arg name for everything except *args and **kwargs.
                 if (*(pc + 1) == '*')
                     continue;
-
+                // Separator for keyword-only arguments, placed before the kw
+                // arguments start
+                if (rec->nargs_kw_only > 0 && arg_index + rec->nargs_kw_only == args)
+                    signature += "*, ";
                 if (arg_index < rec->args.size() && rec->args[arg_index].name) {
                     signature += rec->args[arg_index].name;
                 } else if (arg_index == 0 && rec->is_method) {
@@ -272,6 +277,10 @@ protected:
                     signature += " = ";
                     signature += rec->args[arg_index].descr;
                 }
+                // Separator for positional-only arguments (placed after the
+                // argument, rather than before like *
+                if (rec->nargs_pos_only > 0 && (arg_index + 1) == rec->nargs_pos_only)
+                    signature += ", /";
                 arg_index++;
             } else if (c == '%') {
                 const std::type_info *t = types[type_index++];
@@ -297,6 +306,7 @@ protected:
                 signature += c;
             }
         }
+
         if (arg_index != args || types[type_index] != nullptr)
             pybind11_fail("Internal error while parsing type signature (2)");
 
@@ -410,7 +420,7 @@ protected:
         }
 
         /* Install docstring */
-        PyCFunctionObject *func = (PyCFunctionObject *) m_ptr;
+        auto *func = (PyCFunctionObject *) m_ptr;
         if (func->m_ml->ml_doc)
             std::free(const_cast<char *>(func->m_ml->ml_doc));
         func->m_ml->ml_doc = strdup(signatures.c_str());
@@ -455,7 +465,7 @@ protected:
                               *it = overloads;
 
         /* Need to know how many arguments + keyword arguments there are to pick the right overload */
-        const size_t n_args_in = (size_t) PyTuple_GET_SIZE(args_in);
+        const auto n_args_in = (size_t) PyTuple_GET_SIZE(args_in);
 
         handle parent = n_args_in > 0 ? PyTuple_GET_ITEM(args_in, 0) : nullptr,
                result = PYBIND11_TRY_NEXT_OVERLOAD;
@@ -512,7 +522,7 @@ protected:
                 size_t num_args = func.nargs;    // Number of positional arguments that we need
                 if (func.has_args) --num_args;   // (but don't count py::args
                 if (func.has_kwargs) --num_args; //  or py::kwargs)
-                size_t pos_args = num_args - func.nargs_kwonly;
+                size_t pos_args = num_args - func.nargs_kw_only;
 
                 if (!func.has_args && n_args_in > pos_args)
                     continue; // Too many positional arguments for this overload
@@ -533,7 +543,7 @@ protected:
                         self_value_and_holder.type->dealloc(self_value_and_holder);
 
                     call.init_self = PyTuple_GET_ITEM(args_in, 0);
-                    call.args.push_back(reinterpret_cast<PyObject *>(&self_value_and_holder));
+                    call.args.emplace_back(reinterpret_cast<PyObject *>(&self_value_and_holder));
                     call.args_convert.push_back(false);
                     ++args_copied;
                 }
@@ -561,6 +571,26 @@ protected:
                 // We'll need to copy this if we steal some kwargs for defaults
                 dict kwargs = reinterpret_borrow<dict>(kwargs_in);
 
+                // 1.5. Fill in any missing pos_only args from defaults if they exist
+                if (args_copied < func.nargs_pos_only) {
+                    for (; args_copied < func.nargs_pos_only; ++args_copied) {
+                        const auto &arg = func.args[args_copied];
+                        handle value;
+
+                        if (arg.value) {
+                            value = arg.value;
+                        }
+                        if (value) {
+                            call.args.push_back(value);
+                            call.args_convert.push_back(arg.convert);
+                        } else
+                            break;
+                    }
+
+                    if (args_copied < func.nargs_pos_only)
+                        continue; // Not enough defaults to fill the positional arguments
+                }
+
                 // 2. Check kwargs and, failing that, defaults that may help complete the list
                 if (args_copied < num_args) {
                     bool copied_kwargs = false;
@@ -596,7 +626,7 @@ protected:
                 }
 
                 // 3. Check everything was consumed (unless we have a kwargs arg)
-                if (kwargs && kwargs.size() > 0 && !func.has_kwargs)
+                if (kwargs && !kwargs.empty() && !func.has_kwargs)
                     continue; // Unconsumed kwargs, but no py::kwargs argument to accept them
 
                 // 4a. If we have a py::args argument, create a new tuple with leftovers
@@ -776,18 +806,27 @@ protected:
             for (size_t ti = overloads->is_constructor ? 1 : 0; ti < args_.size(); ++ti) {
                 if (!some_args) some_args = true;
                 else msg += ", ";
-                msg += pybind11::repr(args_[ti]);
+                try {
+                    msg += pybind11::repr(args_[ti]);
+                } catch (const error_already_set&) {
+                    msg += "<repr raised Error>";
+                }
             }
             if (kwargs_in) {
                 auto kwargs = reinterpret_borrow<dict>(kwargs_in);
-                if (kwargs.size() > 0) {
+                if (!kwargs.empty()) {
                     if (some_args) msg += "; ";
                     msg += "kwargs: ";
                     bool first = true;
                     for (auto kwarg : kwargs) {
                         if (first) first = false;
                         else msg += ", ";
-                        msg += pybind11::str("{}={!r}").format(kwarg.first, kwarg.second);
+                        msg += pybind11::str("{}=").format(kwarg.first);
+                        try {
+                            msg += pybind11::repr(kwarg.second);
+                        } catch (const error_already_set&) {
+                            msg += "<repr raised Error>";
+                        }
                     }
                 }
             }
@@ -813,15 +852,15 @@ protected:
 };
 
 /// Wrapper for Python extension modules
-class module : public object {
+class module_ : public object {
 public:
-    PYBIND11_OBJECT_DEFAULT(module, object, PyModule_Check)
+    PYBIND11_OBJECT_DEFAULT(module_, object, PyModule_Check)
 
     /// Create a new top-level Python module with the given name and docstring
-    explicit module(const char *name, const char *doc = nullptr) {
+    explicit module_(const char *name, const char *doc = nullptr) {
         if (!options::show_user_defined_docstrings()) doc = nullptr;
 #if PY_MAJOR_VERSION >= 3
-        PyModuleDef *def = new PyModuleDef();
+        auto *def = new PyModuleDef();
         std::memset(def, 0, sizeof(PyModuleDef));
         def->m_name = name;
         def->m_doc = doc;
@@ -832,7 +871,7 @@ public:
         m_ptr = Py_InitModule3(name, nullptr, doc);
 #endif
         if (m_ptr == nullptr)
-            pybind11_fail("Internal error in module::module()");
+            pybind11_fail("Internal error in module_::module_()");
         inc_ref();
     }
 
@@ -842,7 +881,7 @@ public:
         details on the ``Extra&& ... extra`` argument, see section :ref:`extras`.
     \endrst */
     template <typename Func, typename... Extra>
-    module &def(const char *name_, Func &&f, const Extra& ... extra) {
+    module_ &def(const char *name_, Func &&f, const Extra& ... extra) {
         cpp_function func(std::forward<Func>(f), name(name_), scope(*this),
                           sibling(getattr(*this, name_, none())), extra...);
         // NB: allow overwriting here because cpp_function sets up a chain with the intention of
@@ -861,10 +900,10 @@ public:
             py::module m2 = m.def_submodule("sub", "A submodule of 'example'");
             py::module m3 = m2.def_submodule("subsub", "A submodule of 'example.sub'");
     \endrst */
-    module def_submodule(const char *name, const char *doc = nullptr) {
+    module_ def_submodule(const char *name, const char *doc = nullptr) {
         std::string full_name = std::string(PyModule_GetName(m_ptr))
             + std::string(".") + std::string(name);
-        auto result = reinterpret_borrow<module>(PyImport_AddModule(full_name.c_str()));
+        auto result = reinterpret_borrow<module_>(PyImport_AddModule(full_name.c_str()));
         if (doc && options::show_user_defined_docstrings())
             result.attr("__doc__") = pybind11::str(doc);
         attr(name) = result;
@@ -872,11 +911,11 @@ public:
     }
 
     /// Import and return a module or throws `error_already_set`.
-    static module import(const char *name) {
+    static module_ import(const char *name) {
         PyObject *obj = PyImport_ImportModule(name);
         if (!obj)
             throw error_already_set();
-        return reinterpret_steal<module>(obj);
+        return reinterpret_steal<module_>(obj);
     }
 
     /// Reload the module or throws `error_already_set`.
@@ -884,7 +923,7 @@ public:
         PyObject *obj = PyImport_ReloadModule(ptr());
         if (!obj)
             throw error_already_set();
-        *this = reinterpret_steal<module>(obj);
+        *this = reinterpret_steal<module_>(obj);
     }
 
     // Adds an object to the module using the given name.  Throws if an object with the given name
@@ -901,6 +940,8 @@ public:
     }
 };
 
+using module = module_;
+
 /// \ingroup python_builtins
 /// Return a dictionary representing the global variables in the current execution frame,
 /// or ``__main__.__dict__`` if there is no frame (usually when the interpreter is embedded).
@@ -981,7 +1022,7 @@ protected:
     void install_buffer_funcs(
             buffer_info *(*get_buffer)(PyObject *, void *),
             void *get_buffer_data) {
-        PyHeapTypeObject *type = (PyHeapTypeObject*) m_ptr;
+        auto *type = (PyHeapTypeObject*) m_ptr;
         auto tinfo = detail::get_type_info(&type->ht_type);
 
         if (!type->ht_type.tp_as_buffer)
@@ -1047,6 +1088,13 @@ inline void call_operator_delete(void *p
     #endif
 }
 
+inline void add_class_method(object& cls, const char *name_, const cpp_function &cf) {
+    cls.attr(cf.name()) = cf;
+    if (strcmp(name_, "__eq__") == 0 && !cls.attr("__dict__").contains("__hash__")) {
+      cls.attr("__hash__") = none();
+    }
+}
+
 PYBIND11_NAMESPACE_END(detail)
 
 /// Given a pointer to a member function, cast it to its `Derived` version.
@@ -1144,7 +1192,7 @@ public:
     class_ &def(const char *name_, Func&& f, const Extra&... extra) {
         cpp_function cf(method_adaptor<type>(std::forward<Func>(f)), name(name_), is_method(*this),
                         sibling(getattr(*this, name_, none())), extra...);
-        attr(cf.name()) = cf;
+        add_class_method(*this, name_, cf);
         return *this;
     }
 
@@ -1196,7 +1244,7 @@ public:
 
     template <typename Func> class_& def_buffer(Func &&func) {
         struct capture { Func func; };
-        capture *ptr = new capture { std::forward<Func>(func) };
+        auto *ptr = new capture { std::forward<Func>(func) };
         install_buffer_funcs([](PyObject *obj, void *ptr) -> buffer_info* {
             detail::make_caster<type> caster;
             if (!caster.load(obj, false))
@@ -1381,6 +1429,13 @@ private:
 
     /// Deallocates an instance; via holder, if constructed; otherwise via operator delete.
     static void dealloc(detail::value_and_holder &v_h) {
+        // We could be deallocating because we are cleaning up after a Python exception.
+        // If so, the Python error indicator will be set. We need to clear that before
+        // running the destructor, in case the destructor code calls more Python.
+        // If we don't, the Python API will exit with an exception, and pybind11 will
+        // throw error_already_set from the C++ destructor which is forbidden and triggers
+        // std::terminate().
+        error_scope scope;
         if (v_h.holder_constructed()) {
             v_h.holder<holder_type>().~holder_type();
             v_h.set_holder_constructed(false);
@@ -1436,7 +1491,7 @@ struct enum_base {
 
         m_base.attr("__repr__") = cpp_function(
             [](handle arg) -> str {
-                handle type = arg.get_type();
+                handle type = type::handle_of(arg);
                 object type_name = type.attr("__name__");
                 dict entries = type.attr("__entries");
                 for (const auto &kv : entries) {
@@ -1450,7 +1505,7 @@ struct enum_base {
 
         m_base.attr("name") = property(cpp_function(
             [](handle arg) -> str {
-                dict entries = arg.get_type().attr("__entries");
+                dict entries = type::handle_of(arg).attr("__entries");
                 for (const auto &kv : entries) {
                     if (handle(kv.second[int_(0)]).equal(arg))
                         return pybind11::str(kv.first);
@@ -1489,7 +1544,7 @@ struct enum_base {
         #define PYBIND11_ENUM_OP_STRICT(op, expr, strict_behavior)                     \
             m_base.attr(op) = cpp_function(                                            \
                 [](object a, object b) {                                               \
-                    if (!a.get_type().is(b.get_type()))                                \
+                    if (!type::handle_of(a).is(type::handle_of(b)))                    \
                         strict_behavior;                                               \
                     return expr;                                                       \
                 },                                                                     \
@@ -1736,7 +1791,7 @@ template <return_value_policy Policy = r
           typename KeyType = decltype((*std::declval<Iterator>()).first),
           typename... Extra>
 iterator make_key_iterator(Iterator first, Sentinel last, Extra &&... extra) {
-    typedef detail::iterator_state<Iterator, Sentinel, true, Policy> state;
+    using state = detail::iterator_state<Iterator, Sentinel, true, Policy>;
 
     if (!detail::get_type_info(typeid(state), false)) {
         class_<state>(handle(), "iterator", pybind11::module_local())
@@ -1815,10 +1870,10 @@ template <typename type>
 class exception : public object {
 public:
     exception() = default;
-    exception(handle scope, const char *name, PyObject *base = PyExc_Exception) {
+    exception(handle scope, const char *name, handle base = PyExc_Exception) {
         std::string full_name = scope.attr("__name__").cast<std::string>() +
                                 std::string(".") + name;
-        m_ptr = PyErr_NewException(const_cast<char *>(full_name.c_str()), base, NULL);
+        m_ptr = PyErr_NewException(const_cast<char *>(full_name.c_str()), base.ptr(), NULL);
         if (hasattr(scope, name))
             pybind11_fail("Error during initialization: multiple incompatible "
                           "definitions with name \"" + std::string(name) + "\"");
@@ -1848,7 +1903,7 @@ PYBIND11_NAMESPACE_END(detail)
 template <typename CppException>
 exception<CppException> &register_exception(handle scope,
                                             const char *name,
-                                            PyObject *base = PyExc_Exception) {
+                                            handle base = PyExc_Exception) {
     auto &ex = detail::get_exception_object<CppException>();
     if (!ex) ex = exception<CppException>(scope, name, base);
 
@@ -2057,21 +2112,22 @@ error_already_set::~error_already_set()
     }
 }
 
-inline function get_type_overload(const void *this_ptr, const detail::type_info *this_type, const char *name)  {
-    handle self = detail::get_object_handle(this_ptr, this_type);
+PYBIND11_NAMESPACE_BEGIN(detail)
+inline function get_type_override(const void *this_ptr, const type_info *this_type, const char *name)  {
+    handle self = get_object_handle(this_ptr, this_type);
     if (!self)
         return function();
-    handle type = self.get_type();
+    handle type = type::handle_of(self);
     auto key = std::make_pair(type.ptr(), name);
 
-    /* Cache functions that aren't overloaded in Python to avoid
+    /* Cache functions that aren't overridden in Python to avoid
        many costly Python dictionary lookups below */
-    auto &cache = detail::get_internals().inactive_overload_cache;
+    auto &cache = get_internals().inactive_override_cache;
     if (cache.find(key) != cache.end())
         return function();
 
-    function overload = getattr(self, name, function());
-    if (overload.is_cpp_function()) {
+    function override = getattr(self, name, function());
+    if (override.is_cpp_function()) {
         cache.insert(key);
         return function();
     }
@@ -2111,34 +2167,36 @@ inline function get_type_overload(const
     Py_DECREF(result);
 #endif
 
-    return overload;
+    return override;
 }
+PYBIND11_NAMESPACE_END(detail)
 
 /** \rst
   Try to retrieve a python method by the provided name from the instance pointed to by the this_ptr.
 
-  :this_ptr: The pointer to the object the overload should be retrieved for. This should be the first
-                   non-trampoline class encountered in the inheritance chain.
-  :name: The name of the overloaded Python method to retrieve.
+  :this_ptr: The pointer to the object the overriden method should be retrieved for. This should be
+             the first non-trampoline class encountered in the inheritance chain.
+  :name: The name of the overridden Python method to retrieve.
   :return: The Python method by this name from the object or an empty function wrapper.
  \endrst */
-template <class T> function get_overload(const T *this_ptr, const char *name) {
+template <class T> function get_override(const T *this_ptr, const char *name) {
     auto tinfo = detail::get_type_info(typeid(T));
-    return tinfo ? get_type_overload(this_ptr, tinfo, name) : function();
+    return tinfo ? detail::get_type_override(this_ptr, tinfo, name) : function();
 }
 
-#define PYBIND11_OVERLOAD_INT(ret_type, cname, name, ...) { \
+#define PYBIND11_OVERRIDE_IMPL(ret_type, cname, name, ...) \
+    do { \
         pybind11::gil_scoped_acquire gil; \
-        pybind11::function overload = pybind11::get_overload(static_cast<const cname *>(this), name); \
-        if (overload) { \
-            auto o = overload(__VA_ARGS__); \
+        pybind11::function override = pybind11::get_override(static_cast<const cname *>(this), name); \
+        if (override) { \
+            auto o = override(__VA_ARGS__); \
             if (pybind11::detail::cast_is_temporary_value_reference<ret_type>::value) { \
-                static pybind11::detail::overload_caster_t<ret_type> caster; \
+                static pybind11::detail::override_caster_t<ret_type> caster; \
                 return pybind11::detail::cast_ref<ret_type>(std::move(o), caster); \
             } \
             else return pybind11::detail::cast_safe<ret_type>(std::move(o)); \
         } \
-    }
+    } while (false)
 
 /** \rst
     Macro to populate the virtual method in the trampoline class. This macro tries to look up a method named 'fn'
@@ -2149,7 +2207,7 @@ template <class T> function get_overload
     .. code-block:: cpp
 
       std::string toString() override {
-        PYBIND11_OVERLOAD_NAME(
+        PYBIND11_OVERRIDE_NAME(
             std::string, // Return type (ret_type)
             Animal,      // Parent class (cname)
             "__str__",   // Name of method in Python (name)
@@ -2157,17 +2215,21 @@ template <class T> function get_overload
         );
       }
 \endrst */
-#define PYBIND11_OVERLOAD_NAME(ret_type, cname, name, fn, ...) \
-    PYBIND11_OVERLOAD_INT(PYBIND11_TYPE(ret_type), PYBIND11_TYPE(cname), name, __VA_ARGS__) \
-    return cname::fn(__VA_ARGS__)
+#define PYBIND11_OVERRIDE_NAME(ret_type, cname, name, fn, ...) \
+    do { \
+        PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(ret_type), PYBIND11_TYPE(cname), name, __VA_ARGS__); \
+        return cname::fn(__VA_ARGS__); \
+    } while (false)
 
 /** \rst
-    Macro for pure virtual functions, this function is identical to :c:macro:`PYBIND11_OVERLOAD_NAME`, except that it
-    throws if no overload can be found.
+    Macro for pure virtual functions, this function is identical to :c:macro:`PYBIND11_OVERRIDE_NAME`, except that it
+    throws if no override can be found.
 \endrst */
-#define PYBIND11_OVERLOAD_PURE_NAME(ret_type, cname, name, fn, ...) \
-    PYBIND11_OVERLOAD_INT(PYBIND11_TYPE(ret_type), PYBIND11_TYPE(cname), name, __VA_ARGS__) \
-    pybind11::pybind11_fail("Tried to call pure virtual function \"" PYBIND11_STRINGIFY(cname) "::" name "\"");
+#define PYBIND11_OVERRIDE_PURE_NAME(ret_type, cname, name, fn, ...) \
+    do { \
+        PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(ret_type), PYBIND11_TYPE(cname), name, __VA_ARGS__); \
+        pybind11::pybind11_fail("Tried to call pure virtual function \"" PYBIND11_STRINGIFY(cname) "::" name "\""); \
+    } while (false)
 
 /** \rst
     Macro to populate the virtual method in the trampoline class. This macro tries to look up the method
@@ -2184,7 +2246,7 @@ template <class T> function get_overload
 
           // Trampoline (need one for each virtual function)
           std::string go(int n_times) override {
-              PYBIND11_OVERLOAD_PURE(
+              PYBIND11_OVERRIDE_PURE(
                   std::string, // Return type (ret_type)
                   Animal,      // Parent class (cname)
                   go,          // Name of function in C++ (must match Python name) (fn)
@@ -2193,15 +2255,39 @@ template <class T> function get_overload
           }
       };
 \endrst */
-#define PYBIND11_OVERLOAD(ret_type, cname, fn, ...) \
-    PYBIND11_OVERLOAD_NAME(PYBIND11_TYPE(ret_type), PYBIND11_TYPE(cname), #fn, fn, __VA_ARGS__)
+#define PYBIND11_OVERRIDE(ret_type, cname, fn, ...) \
+    PYBIND11_OVERRIDE_NAME(PYBIND11_TYPE(ret_type), PYBIND11_TYPE(cname), #fn, fn, __VA_ARGS__)
 
 /** \rst
-    Macro for pure virtual functions, this function is identical to :c:macro:`PYBIND11_OVERLOAD`, except that it throws
-    if no overload can be found.
+    Macro for pure virtual functions, this function is identical to :c:macro:`PYBIND11_OVERRIDE`, except that it throws
+    if no override can be found.
 \endrst */
+#define PYBIND11_OVERRIDE_PURE(ret_type, cname, fn, ...) \
+    PYBIND11_OVERRIDE_PURE_NAME(PYBIND11_TYPE(ret_type), PYBIND11_TYPE(cname), #fn, fn, __VA_ARGS__)
+
+
+// Deprecated versions
+
+PYBIND11_DEPRECATED("get_type_overload has been deprecated")
+inline function get_type_overload(const void *this_ptr, const detail::type_info *this_type, const char *name) {
+    return detail::get_type_override(this_ptr, this_type, name);
+}
+
+template <class T>
+inline function get_overload(const T *this_ptr, const char *name) {
+    return get_override(this_ptr, name);
+}
+
+#define PYBIND11_OVERLOAD_INT(ret_type, cname, name, ...) \
+    PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(ret_type), PYBIND11_TYPE(cname), name, __VA_ARGS__)
+#define PYBIND11_OVERLOAD_NAME(ret_type, cname, name, fn, ...) \
+    PYBIND11_OVERRIDE_NAME(PYBIND11_TYPE(ret_type), PYBIND11_TYPE(cname), name, fn, __VA_ARGS__)
+#define PYBIND11_OVERLOAD_PURE_NAME(ret_type, cname, name, fn, ...) \
+    PYBIND11_OVERRIDE_PURE_NAME(PYBIND11_TYPE(ret_type), PYBIND11_TYPE(cname), name, fn, __VA_ARGS__);
+#define PYBIND11_OVERLOAD(ret_type, cname, fn, ...) \
+    PYBIND11_OVERRIDE(PYBIND11_TYPE(ret_type), PYBIND11_TYPE(cname), fn, __VA_ARGS__)
 #define PYBIND11_OVERLOAD_PURE(ret_type, cname, fn, ...) \
-    PYBIND11_OVERLOAD_PURE_NAME(PYBIND11_TYPE(ret_type), PYBIND11_TYPE(cname), #fn, fn, __VA_ARGS__)
+    PYBIND11_OVERRIDE_PURE(PYBIND11_TYPE(ret_type), PYBIND11_TYPE(cname), fn, __VA_ARGS__);
 
 PYBIND11_NAMESPACE_END(PYBIND11_NAMESPACE)
 
--- gtsam-4.1.0.orig/wrap/pybind11/include/pybind11/pytypes.h
+++ gtsam-4.1.0/wrap/pybind11/include/pybind11/pytypes.h
@@ -19,6 +19,7 @@ PYBIND11_NAMESPACE_BEGIN(PYBIND11_NAMESP
 /* A few forward declarations */
 class handle; class object;
 class str; class iterator;
+class type;
 struct arg; struct arg_v;
 
 PYBIND11_NAMESPACE_BEGIN(detail)
@@ -34,7 +35,7 @@ namespace accessor_policies {
     struct sequence_item;
     struct list_item;
     struct tuple_item;
-}
+} // namespace accessor_policies
 using obj_attr_accessor = accessor<accessor_policies::obj_attr>;
 using str_attr_accessor = accessor<accessor_policies::str_attr>;
 using item_accessor = accessor<accessor_policies::generic_item>;
@@ -151,7 +152,8 @@ public:
 
     /// Return the object's current reference count
     int ref_count() const { return static_cast<int>(Py_REFCNT(derived().ptr())); }
-    /// Return a handle to the Python type object underlying the instance
+
+    PYBIND11_DEPRECATED("Call py::type::handle_of(h) or py::type::of(h) instead of h.get_type()")
     handle get_type() const;
 
 private:
@@ -240,7 +242,7 @@ public:
     ~object() { dec_ref(); }
 
     /** \rst
-        Resets the internal pointer to ``nullptr`` without without decreasing the
+        Resets the internal pointer to ``nullptr`` without decreasing the
         object's reference count. The function returns a raw handle to the original
         Python object.
     \endrst */
@@ -330,13 +332,27 @@ public:
     error_already_set(const error_already_set &) = default;
     error_already_set(error_already_set &&) = default;
 
-    inline ~error_already_set();
+    inline ~error_already_set() override;
 
     /// Give the currently-held error back to Python, if any.  If there is currently a Python error
     /// already set it is cleared first.  After this call, the current object no longer stores the
     /// error variables (but the `.what()` string is still available).
     void restore() { PyErr_Restore(m_type.release().ptr(), m_value.release().ptr(), m_trace.release().ptr()); }
 
+    /// If it is impossible to raise the currently-held error, such as in destructor, we can write
+    /// it out using Python's unraisable hook (sys.unraisablehook). The error context should be
+    /// some object whose repr() helps identify the location of the error. Python already knows the
+    /// type and value of the error, so there is no need to repeat that. For example, __func__ could
+    /// be helpful. After this call, the current object no longer stores the error variables,
+    /// and neither does Python.
+    void discard_as_unraisable(object err_context) {
+        restore();
+        PyErr_WriteUnraisable(err_context.ptr());
+    }
+    void discard_as_unraisable(const char *err_context) {
+        discard_as_unraisable(reinterpret_steal<object>(PYBIND11_FROM_STRING(err_context)));
+    }
+
     // Does nothing; provided for backwards compatibility.
     PYBIND11_DEPRECATED("Use of error_already_set.clear() is deprecated")
     void clear() {}
@@ -370,7 +386,7 @@ bool isinstance(handle obj) { return T::
 template <typename T, detail::enable_if_t<!std::is_base_of<object, T>::value, int> = 0>
 bool isinstance(handle obj) { return detail::isinstance_generic(obj, typeid(T)); }
 
-template <> inline bool isinstance<handle>(handle obj) = delete;
+template <> inline bool isinstance<handle>(handle) = delete;
 template <> inline bool isinstance<object>(handle obj) { return obj.ptr() != nullptr; }
 
 /// \ingroup python_builtins
@@ -736,9 +752,7 @@ inline bool PyIterable_Check(PyObject *o
 }
 
 inline bool PyNone_Check(PyObject *o) { return o == Py_None; }
-#if PY_MAJOR_VERSION >= 3
 inline bool PyEllipsis_Check(PyObject *o) { return o == Py_Ellipsis; }
-#endif
 
 inline bool PyUnicode_Check_Permissive(PyObject *o) { return PyUnicode_Check(o) || PYBIND11_BYTES_CHECK(o); }
 
@@ -784,7 +798,9 @@ PYBIND11_NAMESPACE_END(detail)
         Name(handle h, stolen_t) : Parent(h, stolen_t{}) { } \
         PYBIND11_DEPRECATED("Use py::isinstance<py::python_type>(obj) instead") \
         bool check() const { return m_ptr != nullptr && (bool) CheckFun(m_ptr); } \
-        static bool check_(handle h) { return h.ptr() != nullptr && CheckFun(h.ptr()); }
+        static bool check_(handle h) { return h.ptr() != nullptr && CheckFun(h.ptr()); } \
+        template <typename Policy_> \
+        Name(const ::pybind11::detail::accessor<Policy_> &a) : Name(object(a)) { }
 
 #define PYBIND11_OBJECT_CVT(Name, Parent, CheckFun, ConvertFun) \
     PYBIND11_OBJECT_COMMON(Name, Parent, CheckFun) \
@@ -794,9 +810,7 @@ PYBIND11_NAMESPACE_END(detail)
     { if (!m_ptr) throw error_already_set(); } \
     Name(object &&o) \
     : Parent(check_(o) ? o.release().ptr() : ConvertFun(o.ptr()), stolen_t{}) \
-    { if (!m_ptr) throw error_already_set(); } \
-    template <typename Policy_> \
-    Name(const ::pybind11::detail::accessor<Policy_> &a) : Name(object(a)) { }
+    { if (!m_ptr) throw error_already_set(); }
 
 #define PYBIND11_OBJECT(Name, Parent, CheckFun) \
     PYBIND11_OBJECT_COMMON(Name, Parent, CheckFun) \
@@ -878,6 +892,32 @@ private:
     object value = {};
 };
 
+
+
+class type : public object {
+public:
+    PYBIND11_OBJECT(type, object, PyType_Check)
+
+    /// Return a type handle from a handle or an object
+    static handle handle_of(handle h) { return handle((PyObject*) Py_TYPE(h.ptr())); }
+
+    /// Return a type object from a handle or an object
+    static type of(handle h) { return type(type::handle_of(h), borrowed_t{}); }
+
+    // Defined in pybind11/cast.h
+    /// Convert C++ type to handle if previously registered. Does not convert
+    /// standard types, like int, float. etc. yet.
+    /// See https://github.com/pybind/pybind11/issues/2486
+    template<typename T>
+    static handle handle_of();
+
+    /// Convert C++ type to type if previously registered. Does not convert
+    /// standard types, like int, float. etc. yet.
+    /// See https://github.com/pybind/pybind11/issues/2486
+    template<typename T>
+    static type of() {return type(type::handle_of<T>(), borrowed_t{}); }
+};
+
 class iterable : public object {
 public:
     PYBIND11_OBJECT_DEFAULT(iterable, object, detail::PyIterable_Check)
@@ -908,7 +948,7 @@ public:
         Return a string representation of the object. This is analogous to
         the ``str()`` function in Python.
     \endrst */
-    explicit str(handle h) : object(raw_str(h.ptr()), stolen_t{}) { }
+    explicit str(handle h) : object(raw_str(h.ptr()), stolen_t{}) { if (!m_ptr) throw error_already_set(); }
 
     operator std::string() const {
         object temp = *this;
@@ -933,8 +973,8 @@ private:
     /// Return string representation -- always returns a new reference, even if already a str
     static PyObject *raw_str(PyObject *op) {
         PyObject *str_value = PyObject_Str(op);
-        if (!str_value) throw error_already_set();
 #if PY_MAJOR_VERSION < 3
+        if (!str_value) throw error_already_set();
         PyObject *unicode = PyUnicode_FromEncodedObject(str_value, "utf-8", nullptr);
         Py_XDECREF(str_value); str_value = unicode;
 #endif
@@ -948,7 +988,7 @@ inline namespace literals {
     String literal version of `str`
  \endrst */
 inline str operator"" _s(const char *s, size_t size) { return {s, size}; }
-}
+} // namespace literals
 
 /// \addtogroup pytypes
 /// @{
@@ -1020,13 +1060,11 @@ public:
     none() : object(Py_None, borrowed_t{}) { }
 };
 
-#if PY_MAJOR_VERSION >= 3
 class ellipsis : public object {
 public:
     PYBIND11_OBJECT(ellipsis, object, detail::PyEllipsis_Check)
     ellipsis() : object(Py_Ellipsis, borrowed_t{}) { }
 };
-#endif
 
 class bool_ : public object {
 public:
@@ -1325,7 +1363,7 @@ public:
     buffer_info request(bool writable = false) const {
         int flags = PyBUF_STRIDES | PyBUF_FORMAT;
         if (writable) flags |= PyBUF_WRITABLE;
-        Py_buffer *view = new Py_buffer();
+        auto *view = new Py_buffer();
         if (PyObject_GetBuffer(m_ptr, view, flags) != 0) {
             delete view;
             throw error_already_set();
@@ -1542,7 +1580,8 @@ template <typename D>
 str_attr_accessor object_api<D>::doc() const { return attr("__doc__"); }
 
 template <typename D>
-handle object_api<D>::get_type() const { return (PyObject *) Py_TYPE(derived().ptr()); }
+PYBIND11_DEPRECATED("Use py::type::of(h) instead of h.get_type()")
+handle object_api<D>::get_type() const { return type::handle_of(*this); }
 
 template <typename D>
 bool object_api<D>::rich_compare(object_api const &other, int value) const {
--- gtsam-4.1.0.orig/wrap/pybind11/include/pybind11/stl.h
+++ gtsam-4.1.0/wrap/pybind11/include/pybind11/stl.h
@@ -289,7 +289,7 @@ template<typename T> struct optional_cas
     PYBIND11_TYPE_CASTER(T, _("Optional[") + value_conv::name + _("]"));
 };
 
-#if PYBIND11_HAS_OPTIONAL
+#if defined(PYBIND11_HAS_OPTIONAL)
 template<typename T> struct type_caster<std::optional<T>>
     : public optional_caster<std::optional<T>> {};
 
@@ -297,7 +297,7 @@ template<> struct type_caster<std::nullo
     : public void_caster<std::nullopt_t> {};
 #endif
 
-#if PYBIND11_HAS_EXP_OPTIONAL
+#if defined(PYBIND11_HAS_EXP_OPTIONAL)
 template<typename T> struct type_caster<std::experimental::optional<T>>
     : public optional_caster<std::experimental::optional<T>> {};
 
@@ -369,7 +369,7 @@ struct variant_caster<V<Ts...>> {
     PYBIND11_TYPE_CASTER(Type, _("Union[") + detail::concat(make_caster<Ts>::name...) + _("]"));
 };
 
-#if PYBIND11_HAS_VARIANT
+#if defined(PYBIND11_HAS_VARIANT)
 template <typename... Ts>
 struct type_caster<std::variant<Ts...>> : variant_caster<std::variant<Ts...>> { };
 #endif
--- gtsam-4.1.0.orig/wrap/pybind11/include/pybind11/stl_bind.h
+++ gtsam-4.1.0/wrap/pybind11/include/pybind11/stl_bind.h
@@ -223,7 +223,7 @@ void vector_modifiers(enable_if_t<is_cop
             if (!slice.compute(v.size(), &start, &stop, &step, &slicelength))
                 throw error_already_set();
 
-            Vector *seq = new Vector();
+            auto *seq = new Vector();
             seq->reserve((size_t) slicelength);
 
             for (size_t i=0; i<slicelength; ++i) {
@@ -397,14 +397,19 @@ vector_buffer(Class_& cl) {
         if (!detail::compare_buffer_info<T>::compare(info) || (ssize_t) sizeof(T) != info.itemsize)
             throw type_error("Format mismatch (Python: " + info.format + " C++: " + format_descriptor<T>::format() + ")");
 
-        auto vec = std::unique_ptr<Vector>(new Vector());
-        vec->reserve((size_t) info.shape[0]);
         T *p = static_cast<T*>(info.ptr);
         ssize_t step = info.strides[0] / static_cast<ssize_t>(sizeof(T));
         T *end = p + info.shape[0] * step;
-        for (; p != end; p += step)
-            vec->push_back(*p);
-        return vec.release();
+        if (step == 1) {
+            return Vector(p, end);
+        }
+        else {
+            Vector vec;
+            vec.reserve((size_t) info.shape[0]);
+            for (; p != end; p += step)
+                vec.push_back(*p);
+            return vec;
+        }
     }));
 
     return;
--- gtsam-4.1.0.orig/wrap/pybind11/pybind11/__init__.py
+++ gtsam-4.1.0/wrap/pybind11/pybind11/__init__.py
@@ -1,13 +1,12 @@
 # -*- coding: utf-8 -*-
-from ._version import version_info, __version__  # noqa: F401 imported but unused
 
+from ._version import version_info, __version__
+from .commands import get_include, get_cmake_dir
 
-def get_include(user=False):
-    import os
-    d = os.path.dirname(__file__)
-    if os.path.exists(os.path.join(d, "include")):
-        # Package is installed
-        return os.path.join(d, "include")
-    else:
-        # Package is from a source directory
-        return os.path.join(os.path.dirname(d), "include")
+
+__all__ = (
+    "version_info",
+    "__version__",
+    "get_include",
+    "get_cmake_dir",
+)
--- gtsam-4.1.0.orig/wrap/pybind11/pybind11/__main__.py
+++ gtsam-4.1.0/wrap/pybind11/pybind11/__main__.py
@@ -5,13 +5,15 @@ import argparse
 import sys
 import sysconfig
 
-from . import get_include
+from .commands import get_include, get_cmake_dir
 
 
 def print_includes():
-    dirs = [sysconfig.get_path('include'),
-            sysconfig.get_path('platinclude'),
-            get_include()]
+    dirs = [
+        sysconfig.get_path("include"),
+        sysconfig.get_path("platinclude"),
+        get_include(),
+    ]
 
     # Make unique but preserve order
     unique_dirs = []
@@ -19,19 +21,29 @@ def print_includes():
         if d not in unique_dirs:
             unique_dirs.append(d)
 
-    print(' '.join('-I' + d for d in unique_dirs))
+    print(" ".join("-I" + d for d in unique_dirs))
 
 
 def main():
-    parser = argparse.ArgumentParser(prog='python -m pybind11')
-    parser.add_argument('--includes', action='store_true',
-                        help='Include flags for both pybind11 and Python headers.')
+    parser = argparse.ArgumentParser()
+    parser.add_argument(
+        "--includes",
+        action="store_true",
+        help="Include flags for both pybind11 and Python headers.",
+    )
+    parser.add_argument(
+        "--cmakedir",
+        action="store_true",
+        help="Print the CMake module directory, ideal for setting -Dpybind11_ROOT in CMake.",
+    )
     args = parser.parse_args()
     if not sys.argv[1:]:
         parser.print_help()
     if args.includes:
         print_includes()
+    if args.cmakedir:
+        print(get_cmake_dir())
 
 
-if __name__ == '__main__':
+if __name__ == "__main__":
     main()
--- gtsam-4.1.0.orig/wrap/pybind11/pybind11/_version.py
+++ gtsam-4.1.0/wrap/pybind11/pybind11/_version.py
@@ -1,3 +1,12 @@
 # -*- coding: utf-8 -*-
-version_info = (2, 5, 'dev1')
-__version__ = '.'.join(map(str, version_info))
+
+
+def _to_int(s):
+    try:
+        return int(s)
+    except ValueError:
+        return s
+
+
+__version__ = "2.6.0.dev1"
+version_info = tuple(_to_int(s) for s in __version__.split("."))
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/pybind11/commands.py
@@ -0,0 +1,20 @@
+# -*- coding: utf-8 -*-
+import os
+
+
+DIR = os.path.abspath(os.path.dirname(__file__))
+
+
+def get_include(user=False):
+    installed_path = os.path.join(DIR, "include")
+    source_path = os.path.join(os.path.dirname(DIR), "include")
+    return installed_path if os.path.exists(installed_path) else source_path
+
+
+def get_cmake_dir():
+    cmake_installed_path = os.path.join(DIR, "share", "cmake", "pybind11")
+    if os.path.exists(cmake_installed_path):
+        return cmake_installed_path
+    else:
+        msg = "pybind11 not installed, installation required to access the CMake files"
+        raise ImportError(msg)
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/pybind11/setup_helpers.py
@@ -0,0 +1,270 @@
+# -*- coding: utf-8 -*-
+
+"""
+This module provides helpers for C++11+ projects using pybind11.
+
+LICENSE:
+
+Copyright (c) 2016 Wenzel Jakob <wenzel.jakob@epfl.ch>, All rights reserved.
+
+Redistribution and use in source and binary forms, with or without
+modification, are permitted provided that the following conditions are met:
+
+1. Redistributions of source code must retain the above copyright notice, this
+   list of conditions and the following disclaimer.
+
+2. Redistributions in binary form must reproduce the above copyright notice,
+   this list of conditions and the following disclaimer in the documentation
+   and/or other materials provided with the distribution.
+
+3. Neither the name of the copyright holder nor the names of its contributors
+   may be used to endorse or promote products derived from this software
+   without specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
+FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
+SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
+CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
+OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+"""
+
+import contextlib
+import os
+import shutil
+import sys
+import tempfile
+import threading
+import warnings
+
+try:
+    from setuptools.command.build_ext import build_ext as _build_ext
+    from setuptools import Extension as _Extension
+except ImportError:
+    from distutils.command.build_ext import build_ext as _build_ext
+    from distutils.extension import Extension as _Extension
+
+import distutils.errors
+
+
+WIN = sys.platform.startswith("win32")
+PY2 = sys.version_info[0] < 3
+MACOS = sys.platform.startswith("darwin")
+STD_TMPL = "/std:c++{}" if WIN else "-std=c++{}"
+
+
+# It is recommended to use PEP 518 builds if using this module. However, this
+# file explicitly supports being copied into a user's project directory
+# standalone, and pulling pybind11 with the deprecated setup_requires feature.
+# If you copy the file, remember to add it to your MANIFEST.in, and add the current
+# directory into your path if it sits beside your setup.py.
+
+
+class Pybind11Extension(_Extension):
+    """
+    Build a C++11+ Extension module with pybind11. This automatically adds the
+    recommended flags when you init the extension and assumes C++ sources - you
+    can further modify the options yourself.
+
+    The customizations are:
+
+    * ``/EHsc`` and ``/bigobj`` on Windows
+    * ``stdlib=libc++`` on macOS
+    * ``visibility=hidden`` and ``-g0`` on Unix
+
+    Finally, you can set ``cxx_std`` via constructor or afterwords to enable
+    flags for C++ std, and a few extra helper flags related to the C++ standard
+    level. It is _highly_ recommended you either set this, or use the provided
+    ``build_ext``, which will search for the highest supported extension for
+    you if the ``cxx_std`` property is not set. Do not set the ``cxx_std``
+    property more than once, as flags are added when you set it. Set the
+    property to None to disable the addition of C++ standard flags.
+
+    If you want to add pybind11 headers manually, for example for an exact
+    git checkout, then set ``include_pybind11=False``.
+
+    Warning: do not use property-based access to the instance on Python 2 -
+    this is an ugly old-style class due to Distutils.
+    """
+
+    def _add_cflags(self, *flags):
+        for flag in flags:
+            if flag not in self.extra_compile_args:
+                self.extra_compile_args.append(flag)
+
+    def _add_lflags(self, *flags):
+        for flag in flags:
+            if flag not in self.extra_compile_args:
+                self.extra_link_args.append(flag)
+
+    def __init__(self, *args, **kwargs):
+
+        self._cxx_level = 0
+        cxx_std = kwargs.pop("cxx_std", 0)
+
+        if "language" not in kwargs:
+            kwargs["language"] = "c++"
+
+        include_pybind11 = kwargs.pop("include_pybind11", True)
+
+        # Can't use super here because distutils has old-style classes in
+        # Python 2!
+        _Extension.__init__(self, *args, **kwargs)
+
+        # Include the installed package pybind11 headers
+        if include_pybind11:
+            # If using setup_requires, this fails the first time - that's okay
+            try:
+                import pybind11
+
+                pyinc = pybind11.get_include()
+
+                if pyinc not in self.include_dirs:
+                    self.include_dirs.append(pyinc)
+            except ImportError:
+                pass
+
+        # Have to use the accessor manually to support Python 2 distutils
+        Pybind11Extension.cxx_std.__set__(self, cxx_std)
+
+        if WIN:
+            self._add_cflags("/EHsc", "/bigobj")
+        else:
+            self._add_cflags("-fvisibility=hidden", "-g0")
+            if MACOS:
+                self._add_cflags("-stdlib=libc++")
+                self._add_lflags("-stdlib=libc++")
+
+    @property
+    def cxx_std(self):
+        """
+        The CXX standard level. If set, will add the required flags. If left
+        at 0, it will trigger an automatic search when pybind11's build_ext
+        is used. If None, will have no effect.  Besides just the flags, this
+        may add a register warning/error fix for Python 2 or macos-min 10.9
+        or 10.14.
+        """
+        return self._cxx_level
+
+    @cxx_std.setter
+    def cxx_std(self, level):
+
+        if self._cxx_level:
+            warnings.warn("You cannot safely change the cxx_level after setting it!")
+
+        # MSVC 2015 Update 3 and later only have 14 (and later 17) modes
+        if WIN and level == 11:
+            level = 14
+
+        self._cxx_level = level
+
+        if not level:
+            return
+
+        self.extra_compile_args.append(STD_TMPL.format(level))
+
+        if MACOS and "MACOSX_DEPLOYMENT_TARGET" not in os.environ:
+            # C++17 requires a higher min version of macOS
+            macosx_min = "-mmacosx-version-min=" + ("10.9" if level < 17 else "10.14")
+            self.extra_compile_args.append(macosx_min)
+            self.extra_link_args.append(macosx_min)
+
+        if PY2:
+            if level >= 17:
+                self.extra_compile_args.append("/wd503" if WIN else "-Wno-register")
+            elif not WIN and level >= 14:
+                self.extra_compile_args.append("-Wno-deprecated-register")
+
+
+# Just in case someone clever tries to multithread
+tmp_chdir_lock = threading.Lock()
+cpp_cache_lock = threading.Lock()
+
+
+@contextlib.contextmanager
+def tmp_chdir():
+    "Prepare and enter a temporary directory, cleanup when done"
+
+    # Threadsafe
+    with tmp_chdir_lock:
+        olddir = os.getcwd()
+        try:
+            tmpdir = tempfile.mkdtemp()
+            os.chdir(tmpdir)
+            yield tmpdir
+        finally:
+            os.chdir(olddir)
+            shutil.rmtree(tmpdir)
+
+
+# cf http://bugs.python.org/issue26689
+def has_flag(compiler, flag):
+    """
+    Return the flag if a flag name is supported on the
+    specified compiler, otherwise None (can be used as a boolean).
+    If multiple flags are passed, return the first that matches.
+    """
+
+    with tmp_chdir():
+        fname = "flagcheck.cpp"
+        with open(fname, "w") as f:
+            f.write("int main (int argc, char **argv) { return 0; }")
+
+        try:
+            compiler.compile([fname], extra_postargs=[flag])
+        except distutils.errors.CompileError:
+            return False
+        return True
+
+
+# Every call will cache the result
+cpp_flag_cache = None
+
+
+def auto_cpp_level(compiler):
+    """
+    Return the max supported C++ std level (17, 14, or 11).
+    """
+
+    global cpp_flag_cache
+
+    # If this has been previously calculated with the same args, return that
+    with cpp_cache_lock:
+        if cpp_flag_cache:
+            return cpp_flag_cache
+
+    levels = [17, 14] + ([] if WIN else [11])
+
+    for level in levels:
+        if has_flag(compiler, STD_TMPL.format(level)):
+            with cpp_cache_lock:
+                cpp_flag_cache = level
+            return level
+
+    msg = "Unsupported compiler -- at least C++11 support is needed!"
+    raise RuntimeError(msg)
+
+
+class build_ext(_build_ext):  # noqa: N801
+    """
+    Customized build_ext that allows an auto-search for the highest supported
+    C++ level for Pybind11Extension.
+    """
+
+    def build_extensions(self):
+        """
+        Build extensions, injecting C++ std for Pybind11Extension if needed.
+        """
+
+        for ext in self.extensions:
+            if hasattr(ext, "_cxx_level") and ext._cxx_level == 0:
+                # Python 2 syntax - old-style distutils class
+                ext.__class__.cxx_std.__set__(ext, auto_cpp_level(self.compiler))
+
+        # Python 2 doesn't allow super here, since distutils uses old-style
+        # classes!
+        _build_ext.build_extensions(self)
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/pyproject.toml
@@ -0,0 +1,3 @@
+[build-system]
+requires = ["setuptools", "wheel", "cmake==3.18.0", "ninja"]
+build-backend = "setuptools.build_meta"
--- gtsam-4.1.0.orig/wrap/pybind11/setup.cfg
+++ gtsam-4.1.0/wrap/pybind11/setup.cfg
@@ -1,6 +1,58 @@
+[metadata]
+long_description = file: README.md
+long_description_content_type = text/markdown
+description = Seamless operability between C++11 and Python
+author = Wenzel Jakob
+author_email = "wenzel.jakob@epfl.ch"
+url = "https://github.com/pybind/pybind11"
+license = BSD
+
+classifiers =
+    Development Status :: 5 - Production/Stable
+    Intended Audience :: Developers
+    Topic :: Software Development :: Libraries :: Python Modules
+    Topic :: Utilities
+    Programming Language :: C++
+    Programming Language :: Python :: 2.7
+    Programming Language :: Python :: 3
+    Programming Language :: Python :: 3.5
+    Programming Language :: Python :: 3.6
+    Programming Language :: Python :: 3.7
+    Programming Language :: Python :: 3.8
+    License :: OSI Approved :: BSD License
+    Programming Language :: Python :: Implementation :: PyPy
+    Programming Language :: Python :: Implementation :: CPython
+    Programming Language :: C++
+    Topic :: Software Development :: Libraries :: Python Modules
+
+keywords =
+    C++11
+    Python bindings
+
+[options]
+python_requires = >=2.7, !=3.0, !=3.1, !=3.2, !=3.3, !=3.4
+zip_safe = False
+
 [bdist_wheel]
 universal=1
 
+[check-manifest]
+ignore =
+    tests/**
+    docs/**
+    tools/**
+    include/**
+    .appveyor.yml
+    .cmake-format.yaml
+    .gitmodules
+    .pre-commit-config.yaml
+    .readthedocs.yml
+    .clang-tidy
+    pybind11/include/**
+    pybind11/share/**
+    CMakeLists.txt
+
+
 [flake8]
 max-line-length = 99
 show_source = True
@@ -10,3 +62,5 @@ ignore =
     E201, E241, W504,
     # camelcase 'cPickle' imported as lowercase 'pickle'
     N813
+    # Black conflict
+    W503, E203
--- gtsam-4.1.0.orig/wrap/pybind11/setup.py
+++ gtsam-4.1.0/wrap/pybind11/setup.py
@@ -3,128 +3,113 @@
 
 # Setup script for PyPI; use CMakeFile.txt to build extension modules
 
-from setuptools import setup
-from distutils.command.install_headers import install_headers
-from distutils.command.build_py import build_py
-from pybind11 import __version__
+import contextlib
 import os
-
-package_data = [
-    'include/pybind11/detail/class.h',
-    'include/pybind11/detail/common.h',
-    'include/pybind11/detail/descr.h',
-    'include/pybind11/detail/init.h',
-    'include/pybind11/detail/internals.h',
-    'include/pybind11/detail/typeid.h',
-    'include/pybind11/attr.h',
-    'include/pybind11/buffer_info.h',
-    'include/pybind11/cast.h',
-    'include/pybind11/chrono.h',
-    'include/pybind11/common.h',
-    'include/pybind11/complex.h',
-    'include/pybind11/eigen.h',
-    'include/pybind11/embed.h',
-    'include/pybind11/eval.h',
-    'include/pybind11/functional.h',
-    'include/pybind11/iostream.h',
-    'include/pybind11/numpy.h',
-    'include/pybind11/operators.h',
-    'include/pybind11/options.h',
-    'include/pybind11/pybind11.h',
-    'include/pybind11/pytypes.h',
-    'include/pybind11/stl.h',
-    'include/pybind11/stl_bind.h',
-]
-
-# Prevent installation of pybind11 headers by setting
-# PYBIND11_USE_CMAKE.
-if os.environ.get('PYBIND11_USE_CMAKE'):
-    headers = []
-else:
-    headers = package_data
-
-
-class InstallHeaders(install_headers):
-    """Use custom header installer because the default one flattens subdirectories"""
-    def run(self):
-        if not self.distribution.headers:
-            return
-
-        for header in self.distribution.headers:
-            subdir = os.path.dirname(os.path.relpath(header, 'include/pybind11'))
-            install_dir = os.path.join(self.install_dir, subdir)
-            self.mkpath(install_dir)
-
-            (out, _) = self.copy_file(header, install_dir)
-            self.outfiles.append(out)
-
-
-# Install the headers inside the package as well
-class BuildPy(build_py):
-    def build_package_data(self):
-        build_py.build_package_data(self)
-        for header in package_data:
-            target = os.path.join(self.build_lib, 'pybind11', header)
-            self.mkpath(os.path.dirname(target))
-            self.copy_file(header, target, preserve_mode=False)
-
-    def get_outputs(self, include_bytecode=1):
-        outputs = build_py.get_outputs(self, include_bytecode=include_bytecode)
-        for header in package_data:
-            target = os.path.join(self.build_lib, 'pybind11', header)
-            outputs.append(target)
-        return outputs
-
-
-setup(
-    name='pybind11',
-    version=__version__,
-    description='Seamless operability between C++11 and Python',
-    author='Wenzel Jakob',
-    author_email='wenzel.jakob@epfl.ch',
-    url='https://github.com/pybind/pybind11',
-    download_url='https://github.com/pybind/pybind11/tarball/v' + __version__,
-    packages=['pybind11'],
-    license='BSD',
-    headers=headers,
-    zip_safe=False,
-    cmdclass=dict(install_headers=InstallHeaders, build_py=BuildPy),
-    classifiers=[
-        'Development Status :: 5 - Production/Stable',
-        'Intended Audience :: Developers',
-        'Topic :: Software Development :: Libraries :: Python Modules',
-        'Topic :: Utilities',
-        'Programming Language :: C++',
-        'Programming Language :: Python :: 2.7',
-        'Programming Language :: Python :: 3',
-        'Programming Language :: Python :: 3.2',
-        'Programming Language :: Python :: 3.3',
-        'Programming Language :: Python :: 3.4',
-        'Programming Language :: Python :: 3.5',
-        'Programming Language :: Python :: 3.6',
-        'License :: OSI Approved :: BSD License'
-    ],
-    keywords='C++11, Python bindings',
-    long_description="""pybind11 is a lightweight header-only library that
-exposes C++ types in Python and vice versa, mainly to create Python bindings of
-existing C++ code. Its goals and syntax are similar to the excellent
-Boost.Python by David Abrahams: to minimize boilerplate code in traditional
-extension modules by inferring type information using compile-time
-introspection.
-
-The main issue with Boost.Python-and the reason for creating such a similar
-project-is Boost. Boost is an enormously large and complex suite of utility
-libraries that works with almost every C++ compiler in existence. This
-compatibility has its cost: arcane template tricks and workarounds are
-necessary to support the oldest and buggiest of compiler specimens. Now that
-C++11-compatible compilers are widely available, this heavy machinery has
-become an excessively large and unnecessary dependency.
-
-Think of this library as a tiny self-contained version of Boost.Python with
-everything stripped away that isn't relevant for binding generation. Without
-comments, the core header files only require ~4K lines of code and depend on
-Python (2.7 or 3.x, or PyPy2.7 >= 5.7) and the C++ standard library. This
-compact implementation was possible thanks to some of the new C++11 language
-features (specifically: tuples, lambda functions and variadic templates). Since
-its creation, this library has grown beyond Boost.Python in many ways, leading
-to dramatically simpler binding code in many common situations.""")
+import re
+import shutil
+import string
+import subprocess
+import sys
+import tempfile
+
+import setuptools.command.sdist
+
+DIR = os.path.abspath(os.path.dirname(__file__))
+VERSION_REGEX = re.compile(
+    r"^\s*#\s*define\s+PYBIND11_VERSION_([A-Z]+)\s+(.*)$", re.MULTILINE
+)
+
+# PYBIND11_GLOBAL_SDIST will build a different sdist, with the python-headers
+# files, and the sys.prefix files (CMake and headers).
+
+global_sdist = os.environ.get("PYBIND11_GLOBAL_SDIST", False)
+
+setup_py = "tools/setup_global.py.in" if global_sdist else "tools/setup_main.py.in"
+extra_cmd = 'cmdclass["sdist"] = SDist\n'
+
+to_src = (
+    ("pyproject.toml", "tools/pyproject.toml"),
+    ("setup.py", setup_py),
+)
+
+# Read the listed version
+with open("pybind11/_version.py") as f:
+    code = compile(f.read(), "pybind11/_version.py", "exec")
+    loc = {}
+    exec(code, loc)
+    version = loc["__version__"]
+
+# Verify that the version matches the one in C++
+with open("include/pybind11/detail/common.h") as f:
+    matches = dict(VERSION_REGEX.findall(f.read()))
+cpp_version = "{MAJOR}.{MINOR}.{PATCH}".format(**matches)
+if version != cpp_version:
+    msg = "Python version {} does not match C++ version {}!".format(
+        version, cpp_version
+    )
+    raise RuntimeError(msg)
+
+
+def get_and_replace(filename, binary=False, **opts):
+    with open(filename, "rb" if binary else "r") as f:
+        contents = f.read()
+    # Replacement has to be done on text in Python 3 (both work in Python 2)
+    if binary:
+        return string.Template(contents.decode()).substitute(opts).encode()
+    else:
+        return string.Template(contents).substitute(opts)
+
+
+# Use our input files instead when making the SDist (and anything that depends
+# on it, like a wheel)
+class SDist(setuptools.command.sdist.sdist):
+    def make_release_tree(self, base_dir, files):
+        setuptools.command.sdist.sdist.make_release_tree(self, base_dir, files)
+
+        for to, src in to_src:
+            txt = get_and_replace(src, binary=True, version=version, extra_cmd="")
+
+            dest = os.path.join(base_dir, to)
+
+            # This is normally linked, so unlink before writing!
+            os.unlink(dest)
+            with open(dest, "wb") as f:
+                f.write(txt)
+
+
+# Backport from Python 3
+@contextlib.contextmanager
+def TemporaryDirectory():  # noqa: N802
+    "Prepare a temporary directory, cleanup when done"
+    try:
+        tmpdir = tempfile.mkdtemp()
+        yield tmpdir
+    finally:
+        shutil.rmtree(tmpdir)
+
+
+# Remove the CMake install directory when done
+@contextlib.contextmanager
+def remove_output(*sources):
+    try:
+        yield
+    finally:
+        for src in sources:
+            shutil.rmtree(src)
+
+
+with remove_output("pybind11/include", "pybind11/share"):
+    # Generate the files if they are not present.
+    with TemporaryDirectory() as tmpdir:
+        cmd = ["cmake", "-S", ".", "-B", tmpdir] + [
+            "-DCMAKE_INSTALL_PREFIX=pybind11",
+            "-DBUILD_TESTING=OFF",
+            "-DPYBIND11_NOPYTHON=ON",
+        ]
+        cmake_opts = dict(cwd=DIR, stdout=sys.stdout, stderr=sys.stderr)
+        subprocess.check_call(cmd, **cmake_opts)
+        subprocess.check_call(["cmake", "--install", tmpdir], **cmake_opts)
+
+    txt = get_and_replace(setup_py, version=version, extra_cmd=extra_cmd)
+    code = compile(txt, setup_py, "exec")
+    exec(code, {"SDist": SDist})
--- gtsam-4.1.0.orig/wrap/pybind11/tests/CMakeLists.txt
+++ gtsam-4.1.0/wrap/pybind11/tests/CMakeLists.txt
@@ -5,80 +5,150 @@
 # All rights reserved. Use of this source code is governed by a
 # BSD-style license that can be found in the LICENSE file.
 
-cmake_minimum_required(VERSION 2.8.12)
+cmake_minimum_required(VERSION 3.4)
 
-option(PYBIND11_WERROR  "Report all warnings as errors"  OFF)
-set(PYBIND11_TEST_OVERRIDE "" CACHE STRING "Tests from ;-separated list of *.cpp files will be built instead of all tests")
+# The `cmake_minimum_required(VERSION 3.4...3.18)` syntax does not work with
+# some versions of VS that have a patched CMake 3.11. This forces us to emulate
+# the behavior using the following workaround:
+if(${CMAKE_VERSION} VERSION_LESS 3.18)
+  cmake_policy(VERSION ${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION})
+else()
+  cmake_policy(VERSION 3.18)
+endif()
+
+# Only needed for CMake < 3.5 support
+include(CMakeParseArguments)
+
+# Filter out items; print an optional message if any items filtered
+#
+# Usage:
+#   pybind11_filter_tests(LISTNAME file1.cpp file2.cpp ... MESSAGE "")
+#
+macro(PYBIND11_FILTER_TESTS LISTNAME)
+  cmake_parse_arguments(ARG "" "MESSAGE" "" ${ARGN})
+  set(PYBIND11_FILTER_TESTS_FOUND OFF)
+  foreach(filename IN LISTS ARG_UNPARSED_ARGUMENTS)
+    list(FIND ${LISTNAME} ${filename} _FILE_FOUND)
+    if(_FILE_FOUND GREATER -1)
+      list(REMOVE_AT ${LISTNAME} ${_FILE_FOUND})
+      set(PYBIND11_FILTER_TESTS_FOUND ON)
+    endif()
+  endforeach()
+  if(PYBIND11_FILTER_TESTS_FOUND AND ARG_MESSAGE)
+    message(STATUS "${ARG_MESSAGE}")
+  endif()
+endmacro()
+
+# New Python support
+if(DEFINED Python_EXECUTABLE)
+  set(PYTHON_EXECUTABLE "${Python_EXECUTABLE}")
+  set(PYTHON_VERSION "${Python_VERSION}")
+endif()
+
+# There's no harm in including a project in a project
+project(pybind11_tests CXX)
 
-if (CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
-    # We're being loaded directly, i.e. not via add_subdirectory, so make this
-    # work as its own project and load the pybind11Config to get the tools we need
-    project(pybind11_tests CXX)
+# Access FindCatch and more
+list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/../tools")
 
-    find_package(pybind11 REQUIRED CONFIG)
+option(PYBIND11_WERROR "Report all warnings as errors" OFF)
+option(DOWNLOAD_EIGEN "Download EIGEN (requires CMake 3.11+)" OFF)
+option(PYBIND11_CUDA_TESTS "Enable building CUDA tests (requires CMake 3.12+)" OFF)
+set(PYBIND11_TEST_OVERRIDE
+    ""
+    CACHE STRING "Tests from ;-separated list of *.cpp files will be built instead of all tests")
+set(PYBIND11_TEST_FILTER
+    ""
+    CACHE STRING "Tests from ;-separated list of *.cpp files will be removed from all tests")
+
+if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
+  # We're being loaded directly, i.e. not via add_subdirectory, so make this
+  # work as its own project and load the pybind11Config to get the tools we need
+  find_package(pybind11 REQUIRED CONFIG)
 endif()
 
 if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
   message(STATUS "Setting tests build type to MinSizeRel as none was specified")
-  set(CMAKE_BUILD_TYPE MinSizeRel CACHE STRING "Choose the type of build." FORCE)
-  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "Debug" "Release"
-    "MinSizeRel" "RelWithDebInfo")
+  set(CMAKE_BUILD_TYPE
+      MinSizeRel
+      CACHE STRING "Choose the type of build." FORCE)
+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "Debug" "Release" "MinSizeRel"
+                                               "RelWithDebInfo")
+endif()
+
+if(PYBIND11_CUDA_TESTS)
+  enable_language(CUDA)
+  if(DEFINED CMAKE_CXX_STANDARD)
+    set(CMAKE_CUDA_STANDARD ${CMAKE_CXX_STANDARD})
+  endif()
+  set(CMAKE_CUDA_STANDARD_REQUIRED ON)
 endif()
 
 # Full set of test files (you can override these; see below)
 set(PYBIND11_TEST_FILES
-  test_async.cpp
-  test_buffers.cpp
-  test_builtin_casters.cpp
-  test_call_policies.cpp
-  test_callbacks.cpp
-  test_chrono.cpp
-  test_class.cpp
-  test_constants_and_functions.cpp
-  test_copy_move.cpp
-  test_custom_type_casters.cpp
-  test_docstring_options.cpp
-  test_eigen.cpp
-  test_enum.cpp
-  test_eval.cpp
-  test_exceptions.cpp
-  test_factory_constructors.cpp
-  test_gil_scoped.cpp
-  test_iostream.cpp
-  test_kwargs_and_defaults.cpp
-  test_local_bindings.cpp
-  test_methods_and_attributes.cpp
-  test_modules.cpp
-  test_multiple_inheritance.cpp
-  test_numpy_array.cpp
-  test_numpy_dtypes.cpp
-  test_numpy_vectorize.cpp
-  test_opaque_types.cpp
-  test_operator_overloading.cpp
-  test_pickling.cpp
-  test_pytypes.cpp
-  test_sequences_and_iterators.cpp
-  test_smart_ptr.cpp
-  test_stl.cpp
-  test_stl_binders.cpp
-  test_tagbased_polymorphic.cpp
-  test_union.cpp
-  test_virtual_functions.cpp
-)
+    test_async.cpp
+    test_buffers.cpp
+    test_builtin_casters.cpp
+    test_call_policies.cpp
+    test_callbacks.cpp
+    test_chrono.cpp
+    test_class.cpp
+    test_constants_and_functions.cpp
+    test_copy_move.cpp
+    test_custom_type_casters.cpp
+    test_docstring_options.cpp
+    test_eigen.cpp
+    test_enum.cpp
+    test_eval.cpp
+    test_exceptions.cpp
+    test_factory_constructors.cpp
+    test_gil_scoped.cpp
+    test_iostream.cpp
+    test_kwargs_and_defaults.cpp
+    test_local_bindings.cpp
+    test_methods_and_attributes.cpp
+    test_modules.cpp
+    test_multiple_inheritance.cpp
+    test_numpy_array.cpp
+    test_numpy_dtypes.cpp
+    test_numpy_vectorize.cpp
+    test_opaque_types.cpp
+    test_operator_overloading.cpp
+    test_pickling.cpp
+    test_pytypes.cpp
+    test_sequences_and_iterators.cpp
+    test_smart_ptr.cpp
+    test_stl.cpp
+    test_stl_binders.cpp
+    test_tagbased_polymorphic.cpp
+    test_union.cpp
+    test_virtual_functions.cpp)
 
 # Invoking cmake with something like:
-#     cmake -DPYBIND11_TEST_OVERRIDE="test_callbacks.cpp;test_picking.cpp" ..
+#     cmake -DPYBIND11_TEST_OVERRIDE="test_callbacks.cpp;test_pickling.cpp" ..
 # lets you override the tests that get compiled and run.  You can restore to all tests with:
 #     cmake -DPYBIND11_TEST_OVERRIDE= ..
-if (PYBIND11_TEST_OVERRIDE)
+if(PYBIND11_TEST_OVERRIDE)
   set(PYBIND11_TEST_FILES ${PYBIND11_TEST_OVERRIDE})
 endif()
 
-# Skip test_async for Python < 3.5
-list(FIND PYBIND11_TEST_FILES test_async.cpp PYBIND11_TEST_FILES_ASYNC_I)
-if((PYBIND11_TEST_FILES_ASYNC_I GREATER -1) AND ("${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}" VERSION_LESS 3.5))
-  message(STATUS "Skipping test_async because Python version ${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR} < 3.5")
-  list(REMOVE_AT PYBIND11_TEST_FILES ${PYBIND11_TEST_FILES_ASYNC_I})
+# You can also filter tests:
+if(PYBIND11_TEST_FILTER)
+  pybind11_filter_tests(PYBIND11_TEST_FILES ${PYBIND11_TEST_FILTER})
+endif()
+
+if(PYTHON_VERSION VERSION_LESS 3.5)
+  pybind11_filter_tests(PYBIND11_TEST_FILES test_async.cpp MESSAGE
+                        "Skipping test_async on Python 2")
+endif()
+
+# Skip tests for CUDA check:
+# /pybind11/tests/test_constants_and_functions.cpp(125):
+#   error: incompatible exception specifications
+if(PYBIND11_CUDA_TESTS)
+  pybind11_filter_tests(
+    PYBIND11_TEST_FILES test_constants_and_functions.cpp MESSAGE
+    "Skipping test_constants_and_functions due to incompatible exception specifications")
 endif()
 
 string(REPLACE ".cpp" ".py" PYBIND11_PYTEST_FILES "${PYBIND11_TEST_FILES}")
@@ -86,16 +156,10 @@ string(REPLACE ".cpp" ".py" PYBIND11_PYT
 # Contains the set of test files that require pybind11_cross_module_tests to be
 # built; if none of these are built (i.e. because TEST_OVERRIDE is used and
 # doesn't include them) the second module doesn't get built.
-set(PYBIND11_CROSS_MODULE_TESTS
-  test_exceptions.py
-  test_local_bindings.py
-  test_stl.py
-  test_stl_binders.py
-)
-
-set(PYBIND11_CROSS_MODULE_GIL_TESTS
-  test_gil_scoped.py
-)
+set(PYBIND11_CROSS_MODULE_TESTS test_exceptions.py test_local_bindings.py test_stl.py
+                                test_stl_binders.py)
+
+set(PYBIND11_CROSS_MODULE_GIL_TESTS test_gil_scoped.py)
 
 # Check if Eigen is available; if not, remove from PYBIND11_TEST_FILES (but
 # keep it in PYBIND11_PYTEST_FILES, so that we get the "eigen is not installed"
@@ -105,21 +169,45 @@ if(PYBIND11_TEST_FILES_EIGEN_I GREATER -
   # Try loading via newer Eigen's Eigen3Config first (bypassing tools/FindEigen3.cmake).
   # Eigen 3.3.1+ exports a cmake 3.0+ target for handling dependency requirements, but also
   # produces a fatal error if loaded from a pre-3.0 cmake.
-  if (NOT CMAKE_VERSION VERSION_LESS 3.0)
+  if(DOWNLOAD_EIGEN)
+    if(CMAKE_VERSION VERSION_LESS 3.11)
+      message(FATAL_ERROR "CMake 3.11+ required when using DOWNLOAD_EIGEN")
+    endif()
+
+    set(EIGEN3_VERSION_STRING "3.3.7")
+
+    include(FetchContent)
+    FetchContent_Declare(
+      eigen
+      GIT_REPOSITORY https://gitlab.com/libeigen/eigen.git
+      GIT_TAG ${EIGEN3_VERSION_STRING})
+
+    FetchContent_GetProperties(eigen)
+    if(NOT eigen_POPULATED)
+      message(STATUS "Downloading Eigen")
+      FetchContent_Populate(eigen)
+    endif()
+
+    set(EIGEN3_INCLUDE_DIR ${eigen_SOURCE_DIR})
+    set(EIGEN3_FOUND TRUE)
+
+  else()
     find_package(Eigen3 3.2.7 QUIET CONFIG)
-    if (EIGEN3_FOUND)
-      if (EIGEN3_VERSION_STRING AND NOT EIGEN3_VERSION_STRING VERSION_LESS 3.3.1)
-        set(PYBIND11_EIGEN_VIA_TARGET 1)
-      endif()
+
+    if(NOT EIGEN3_FOUND)
+      # Couldn't load via target, so fall back to allowing module mode finding, which will pick up
+      # tools/FindEigen3.cmake
+      find_package(Eigen3 3.2.7 QUIET)
     endif()
   endif()
-  if (NOT EIGEN3_FOUND)
-    # Couldn't load via target, so fall back to allowing module mode finding, which will pick up
-    # tools/FindEigen3.cmake
-    find_package(Eigen3 3.2.7 QUIET)
-  endif()
 
   if(EIGEN3_FOUND)
+    if(NOT TARGET Eigen3::Eigen)
+      add_library(Eigen3::Eigen IMPORTED INTERFACE)
+      set_property(TARGET Eigen3::Eigen PROPERTY INTERFACE_INCLUDE_DIRECTORIES
+                                                 "${EIGEN3_INCLUDE_DIR}")
+    endif()
+
     # Eigen 3.3.1+ cmake sets EIGEN3_VERSION_STRING (and hard codes the version when installed
     # rather than looking it up in the cmake script); older versions, and the
     # tools/FindEigen3.cmake, set EIGEN3_VERSION instead.
@@ -129,28 +217,56 @@ if(PYBIND11_TEST_FILES_EIGEN_I GREATER -
     message(STATUS "Building tests with Eigen v${EIGEN3_VERSION}")
   else()
     list(REMOVE_AT PYBIND11_TEST_FILES ${PYBIND11_TEST_FILES_EIGEN_I})
-    message(STATUS "Building tests WITHOUT Eigen")
+    message(STATUS "Building tests WITHOUT Eigen, use -DDOWNLOAD_EIGEN on CMake 3.11+ to download")
   endif()
 endif()
 
 # Optional dependency for some tests (boost::variant is only supported with version >= 1.56)
 find_package(Boost 1.56)
 
+if(Boost_FOUND)
+  if(NOT TARGET Boost::headers)
+    if(TARGET Boost::boost)
+      # Classic FindBoost
+      add_library(Boost::headers ALIAS Boost::boost)
+    else()
+      # Very old FindBoost, or newer Boost than CMake in older CMakes
+      add_library(Boost::headers IMPORTED INTERFACE)
+      set_property(TARGET Boost::headers PROPERTY INTERFACE_INCLUDE_DIRECTORIES
+                                                  ${Boost_INCLUDE_DIRS})
+    endif()
+  endif()
+endif()
+
 # Compile with compiler warnings turned on
 function(pybind11_enable_warnings target_name)
   if(MSVC)
     target_compile_options(${target_name} PRIVATE /W4)
-  elseif(CMAKE_CXX_COMPILER_ID MATCHES "(GNU|Intel|Clang)")
-      target_compile_options(${target_name} PRIVATE -Wall -Wextra -Wconversion -Wcast-qual -Wdeprecated)
+  elseif(CMAKE_CXX_COMPILER_ID MATCHES "(GNU|Intel|Clang)" AND NOT PYBIND11_CUDA_TESTS)
+    target_compile_options(${target_name} PRIVATE -Wall -Wextra -Wconversion -Wcast-qual
+                                                  -Wdeprecated -Wundef)
   endif()
 
   if(PYBIND11_WERROR)
     if(MSVC)
       target_compile_options(${target_name} PRIVATE /WX)
+    elseif(PYBIND11_CUDA_TESTS)
+      target_compile_options(${target_name} PRIVATE "SHELL:-Werror all-warnings")
     elseif(CMAKE_CXX_COMPILER_ID MATCHES "(GNU|Intel|Clang)")
       target_compile_options(${target_name} PRIVATE -Werror)
     endif()
   endif()
+
+  # Needs to be readded since the ordering requires these to be after the ones above
+  if(CMAKE_CXX_STANDARD
+     AND CMAKE_CXX_COMPILER_ID MATCHES "Clang"
+     AND PYTHON_VERSION VERSION_LESS 3.0)
+    if(CMAKE_CXX_STANDARD LESS 17)
+      target_compile_options(${target_name} PUBLIC -Wno-deprecated-register)
+    else()
+      target_compile_options(${target_name} PUBLIC -Wno-register)
+    endif()
+  endif()
 endfunction()
 
 set(test_targets pybind11_tests)
@@ -158,7 +274,7 @@ set(test_targets pybind11_tests)
 # Build pybind11_cross_module_tests if any test_whatever.py are being built that require it
 foreach(t ${PYBIND11_CROSS_MODULE_TESTS})
   list(FIND PYBIND11_PYTEST_FILES ${t} i)
-  if (i GREATER -1)
+  if(i GREATER -1)
     list(APPEND test_targets pybind11_cross_module_tests)
     break()
   endif()
@@ -166,78 +282,118 @@ endforeach()
 
 foreach(t ${PYBIND11_CROSS_MODULE_GIL_TESTS})
   list(FIND PYBIND11_PYTEST_FILES ${t} i)
-  if (i GREATER -1)
+  if(i GREATER -1)
     list(APPEND test_targets cross_module_gil_utils)
     break()
   endif()
 endforeach()
 
-set(testdir ${CMAKE_CURRENT_SOURCE_DIR})
+# Support CUDA testing by forcing the target file to compile with NVCC
+if(PYBIND11_CUDA_TESTS)
+  set_property(SOURCE ${PYBIND11_TEST_FILES} PROPERTY LANGUAGE CUDA)
+endif()
+
 foreach(target ${test_targets})
   set(test_files ${PYBIND11_TEST_FILES})
-  if(NOT target STREQUAL "pybind11_tests")
+  if(NOT "${target}" STREQUAL "pybind11_tests")
     set(test_files "")
   endif()
 
+  # Support CUDA testing by forcing the target file to compile with NVCC
+  if(PYBIND11_CUDA_TESTS)
+    set_property(SOURCE ${target}.cpp PROPERTY LANGUAGE CUDA)
+  endif()
+
   # Create the binding library
   pybind11_add_module(${target} THIN_LTO ${target}.cpp ${test_files} ${PYBIND11_HEADERS})
   pybind11_enable_warnings(${target})
 
+  if(NOT CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_CURRENT_BINARY_DIR)
+    get_property(
+      suffix
+      TARGET ${target}
+      PROPERTY SUFFIX)
+    set(source_output "${CMAKE_CURRENT_SOURCE_DIR}/${target}${suffix}")
+    if(suffix AND EXISTS "${source_output}")
+      message(WARNING "Output file also in source directory; "
+                      "please remove to avoid confusion: ${source_output}")
+    endif()
+  endif()
+
   if(MSVC)
     target_compile_options(${target} PRIVATE /utf-8)
   endif()
 
   if(EIGEN3_FOUND)
-    if (PYBIND11_EIGEN_VIA_TARGET)
-      target_link_libraries(${target} PRIVATE Eigen3::Eigen)
-    else()
-      target_include_directories(${target} PRIVATE ${EIGEN3_INCLUDE_DIR})
-    endif()
+    target_link_libraries(${target} PRIVATE Eigen3::Eigen)
     target_compile_definitions(${target} PRIVATE -DPYBIND11_TEST_EIGEN)
   endif()
 
   if(Boost_FOUND)
-    target_include_directories(${target} PRIVATE ${Boost_INCLUDE_DIRS})
+    target_link_libraries(${target} PRIVATE Boost::headers)
     target_compile_definitions(${target} PRIVATE -DPYBIND11_TEST_BOOST)
   endif()
 
   # Always write the output file directly into the 'tests' directory (even on MSVC)
   if(NOT CMAKE_LIBRARY_OUTPUT_DIRECTORY)
-    set_target_properties(${target} PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${testdir})
+    set_target_properties(${target} PROPERTIES LIBRARY_OUTPUT_DIRECTORY
+                                               "${CMAKE_CURRENT_BINARY_DIR}")
     foreach(config ${CMAKE_CONFIGURATION_TYPES})
       string(TOUPPER ${config} config)
-      set_target_properties(${target} PROPERTIES LIBRARY_OUTPUT_DIRECTORY_${config} ${testdir})
+      set_target_properties(${target} PROPERTIES LIBRARY_OUTPUT_DIRECTORY_${config}
+                                                 "${CMAKE_CURRENT_BINARY_DIR}")
     endforeach()
   endif()
 endforeach()
 
-# Make sure pytest is found or produce a fatal error
+# Make sure pytest is found or produce a warning
 if(NOT PYBIND11_PYTEST_FOUND)
-  execute_process(COMMAND ${PYTHON_EXECUTABLE} -c "import pytest; print(pytest.__version__)"
-                  RESULT_VARIABLE pytest_not_found OUTPUT_VARIABLE pytest_version ERROR_QUIET)
+  execute_process(
+    COMMAND ${PYTHON_EXECUTABLE} -c "import pytest; print(pytest.__version__)"
+    RESULT_VARIABLE pytest_not_found
+    OUTPUT_VARIABLE pytest_version
+    ERROR_QUIET)
   if(pytest_not_found)
-    message(FATAL_ERROR "Running the tests requires pytest. Please install it manually"
-                        " (try: ${PYTHON_EXECUTABLE} -m pip install pytest)")
-  elseif(pytest_version VERSION_LESS 3.0)
-    message(FATAL_ERROR "Running the tests requires pytest >= 3.0. Found: ${pytest_version}"
-                        "Please update it (try: ${PYTHON_EXECUTABLE} -m pip install -U pytest)")
+    message(WARNING "Running the tests requires pytest. Please install it manually"
+                    " (try: ${PYTHON_EXECUTABLE} -m pip install pytest)")
+  elseif(pytest_version VERSION_LESS 3.1)
+    message(WARNING "Running the tests requires pytest >= 3.1. Found: ${pytest_version}"
+                    "Please update it (try: ${PYTHON_EXECUTABLE} -m pip install -U pytest)")
+  else()
+    set(PYBIND11_PYTEST_FOUND
+        TRUE
+        CACHE INTERNAL "")
   endif()
-  set(PYBIND11_PYTEST_FOUND TRUE CACHE INTERNAL "")
 endif()
 
-if(CMAKE_VERSION VERSION_LESS 3.2)
-  set(PYBIND11_USES_TERMINAL "")
-else()
-  set(PYBIND11_USES_TERMINAL "USES_TERMINAL")
+if(NOT CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_CURRENT_BINARY_DIR)
+  # This is not used later in the build, so it's okay to regenerate each time.
+  configure_file("${CMAKE_CURRENT_SOURCE_DIR}/pytest.ini" "${CMAKE_CURRENT_BINARY_DIR}/pytest.ini"
+                 COPYONLY)
+  file(APPEND "${CMAKE_CURRENT_BINARY_DIR}/pytest.ini"
+       "\ntestpaths = \"${CMAKE_CURRENT_SOURCE_DIR}\"")
+
 endif()
 
+# cmake 3.12 added list(transform <list> prepend
+# but we can't use it yet
+string(REPLACE "test_" "${CMAKE_CURRENT_BINARY_DIR}/test_" PYBIND11_BINARY_TEST_FILES
+               "${PYBIND11_PYTEST_FILES}")
+
 # A single command to compile and run the tests
-add_custom_target(pytest COMMAND ${PYTHON_EXECUTABLE} -m pytest ${PYBIND11_PYTEST_FILES}
-                  DEPENDS ${test_targets} WORKING_DIRECTORY ${testdir} ${PYBIND11_USES_TERMINAL})
+add_custom_target(
+  pytest
+  COMMAND ${PYTHON_EXECUTABLE} -m pytest ${PYBIND11_BINARY_PYTEST_FILES}
+  DEPENDS ${test_targets}
+  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
+  USES_TERMINAL)
 
 if(PYBIND11_TEST_OVERRIDE)
-  add_custom_command(TARGET pytest POST_BUILD
-    COMMAND ${CMAKE_COMMAND} -E echo "Note: not all tests run: -DPYBIND11_TEST_OVERRIDE is in effect")
+  add_custom_command(
+    TARGET pytest
+    POST_BUILD
+    COMMAND ${CMAKE_COMMAND} -E echo
+            "Note: not all tests run: -DPYBIND11_TEST_OVERRIDE is in effect")
 endif()
 
 # Add a check target to run all the tests, starting with pytest (we add dependencies to this below)
@@ -245,17 +401,23 @@ add_custom_target(check DEPENDS pytest)
 
 # The remaining tests only apply when being built as part of the pybind11 project, but not if the
 # tests are being built independently.
-if (NOT PROJECT_NAME STREQUAL "pybind11")
+if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
   return()
 endif()
 
 # Add a post-build comment to show the primary test suite .so size and, if a previous size, compare it:
-add_custom_command(TARGET pybind11_tests POST_BUILD
-  COMMAND ${PYTHON_EXECUTABLE} ${PROJECT_SOURCE_DIR}/tools/libsize.py
-  $<TARGET_FILE:pybind11_tests> ${CMAKE_CURRENT_BINARY_DIR}/sosize-$<TARGET_FILE_NAME:pybind11_tests>.txt)
-
-# Test embedding the interpreter. Provides the `cpptest` target.
-add_subdirectory(test_embed)
+add_custom_command(
+  TARGET pybind11_tests
+  POST_BUILD
+  COMMAND
+    ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/../tools/libsize.py
+    $<TARGET_FILE:pybind11_tests>
+    ${CMAKE_CURRENT_BINARY_DIR}/sosize-$<TARGET_FILE_NAME:pybind11_tests>.txt)
+
+if(NOT PYBIND11_CUDA_TESTS)
+  # Test embedding the interpreter. Provides the `cpptest` target.
+  add_subdirectory(test_embed)
 
-# Test CMake build using functions and targets from subdirectory or installed location
-add_subdirectory(test_cmake_build)
+  # Test CMake build using functions and targets from subdirectory or installed location
+  add_subdirectory(test_cmake_build)
+endif()
--- gtsam-4.1.0.orig/wrap/pybind11/tests/conftest.py
+++ gtsam-4.1.0/wrap/pybind11/tests/conftest.py
@@ -5,22 +5,26 @@ Extends output capture as needed by pybi
 Adds docstring and exceptions message sanitizers: ignore Python 2 vs 3 differences.
 """
 
-import pytest
-import textwrap
-import difflib
-import re
-import sys
 import contextlib
-import platform
+import difflib
 import gc
+import re
+import textwrap
+
+import pytest
+
+import env
+
+# Early diagnostic for failed imports
+import pybind11_tests  # noqa: F401
 
 _unicode_marker = re.compile(r'u(\'[^\']*\')')
 _long_marker = re.compile(r'([0-9])L')
 _hexadecimal = re.compile(r'0x[0-9a-fA-F]+')
 
-# test_async.py requires support for async and await
+# Avoid collecting Python3 only files
 collect_ignore = []
-if sys.version_info[:2] < (3, 5):
+if env.PY2:
     collect_ignore.append("test_async.py")
 
 
@@ -192,59 +196,5 @@ def gc_collect():
 
 
 def pytest_configure():
-    """Add import suppression and test requirements to `pytest` namespace"""
-    try:
-        import numpy as np
-    except ImportError:
-        np = None
-    try:
-        import scipy
-    except ImportError:
-        scipy = None
-    try:
-        from pybind11_tests.eigen import have_eigen
-    except ImportError:
-        have_eigen = False
-    pypy = platform.python_implementation() == "PyPy"
-
-    skipif = pytest.mark.skipif
     pytest.suppress = suppress
-    pytest.requires_numpy = skipif(not np, reason="numpy is not installed")
-    pytest.requires_scipy = skipif(not np, reason="scipy is not installed")
-    pytest.requires_eigen_and_numpy = skipif(not have_eigen or not np,
-                                             reason="eigen and/or numpy are not installed")
-    pytest.requires_eigen_and_scipy = skipif(
-        not have_eigen or not scipy, reason="eigen and/or scipy are not installed")
-    pytest.unsupported_on_pypy = skipif(pypy, reason="unsupported on PyPy")
-    pytest.bug_in_pypy = pytest.mark.xfail(pypy, reason="bug in PyPy")
-    pytest.unsupported_on_pypy3 = skipif(pypy and sys.version_info.major >= 3,
-                                         reason="unsupported on PyPy3")
-    pytest.unsupported_on_pypy_lt_6 = skipif(pypy and sys.pypy_version_info[0] < 6,
-                                             reason="unsupported on PyPy<6")
-    pytest.unsupported_on_py2 = skipif(sys.version_info.major < 3,
-                                       reason="unsupported on Python 2.x")
     pytest.gc_collect = gc_collect
-
-
-def _test_import_pybind11():
-    """Early diagnostic for test module initialization errors
-
-    When there is an error during initialization, the first import will report the
-    real error while all subsequent imports will report nonsense. This import test
-    is done early (in the pytest configuration file, before any tests) in order to
-    avoid the noise of having all tests fail with identical error messages.
-
-    Any possible exception is caught here and reported manually *without* the stack
-    trace. This further reduces noise since the trace would only show pytest internals
-    which are not useful for debugging pybind11 module issues.
-    """
-    # noinspection PyBroadException
-    try:
-        import pybind11_tests  # noqa: F401 imported but unused
-    except Exception as e:
-        print("Failed to import pybind11_tests from pytest:")
-        print("  {}: {}".format(type(e).__name__, e))
-        sys.exit(1)
-
-
-_test_import_pybind11()
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/tests/env.py
@@ -0,0 +1,14 @@
+# -*- coding: utf-8 -*-
+import platform
+import sys
+
+LINUX = sys.platform.startswith("linux")
+MACOS = sys.platform.startswith("darwin")
+WIN = sys.platform.startswith("win32") or sys.platform.startswith("cygwin")
+
+CPYTHON = platform.python_implementation() == "CPython"
+PYPY = platform.python_implementation() == "PyPy"
+
+PY2 = sys.version_info.major == 2
+
+PY = sys.version_info
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/tests/extra_python_package/test_files.py
@@ -0,0 +1,259 @@
+# -*- coding: utf-8 -*-
+import contextlib
+import os
+import string
+import subprocess
+import sys
+import tarfile
+import zipfile
+
+# These tests must be run explicitly
+# They require CMake 3.15+ (--install)
+
+DIR = os.path.abspath(os.path.dirname(__file__))
+MAIN_DIR = os.path.dirname(os.path.dirname(DIR))
+
+
+main_headers = {
+    "include/pybind11/attr.h",
+    "include/pybind11/buffer_info.h",
+    "include/pybind11/cast.h",
+    "include/pybind11/chrono.h",
+    "include/pybind11/common.h",
+    "include/pybind11/complex.h",
+    "include/pybind11/eigen.h",
+    "include/pybind11/embed.h",
+    "include/pybind11/eval.h",
+    "include/pybind11/functional.h",
+    "include/pybind11/iostream.h",
+    "include/pybind11/numpy.h",
+    "include/pybind11/operators.h",
+    "include/pybind11/options.h",
+    "include/pybind11/pybind11.h",
+    "include/pybind11/pytypes.h",
+    "include/pybind11/stl.h",
+    "include/pybind11/stl_bind.h",
+}
+
+detail_headers = {
+    "include/pybind11/detail/class.h",
+    "include/pybind11/detail/common.h",
+    "include/pybind11/detail/descr.h",
+    "include/pybind11/detail/init.h",
+    "include/pybind11/detail/internals.h",
+    "include/pybind11/detail/typeid.h",
+}
+
+cmake_files = {
+    "share/cmake/pybind11/FindPythonLibsNew.cmake",
+    "share/cmake/pybind11/pybind11Common.cmake",
+    "share/cmake/pybind11/pybind11Config.cmake",
+    "share/cmake/pybind11/pybind11ConfigVersion.cmake",
+    "share/cmake/pybind11/pybind11NewTools.cmake",
+    "share/cmake/pybind11/pybind11Targets.cmake",
+    "share/cmake/pybind11/pybind11Tools.cmake",
+}
+
+py_files = {
+    "__init__.py",
+    "__main__.py",
+    "_version.py",
+    "commands.py",
+    "setup_helpers.py",
+}
+
+headers = main_headers | detail_headers
+src_files = headers | cmake_files
+all_files = src_files | py_files
+
+
+sdist_files = {
+    "pybind11",
+    "pybind11/include",
+    "pybind11/include/pybind11",
+    "pybind11/include/pybind11/detail",
+    "pybind11/share",
+    "pybind11/share/cmake",
+    "pybind11/share/cmake/pybind11",
+    "pyproject.toml",
+    "setup.cfg",
+    "setup.py",
+    "LICENSE",
+    "MANIFEST.in",
+    "README.md",
+    "PKG-INFO",
+}
+
+local_sdist_files = {
+    ".egg-info",
+    ".egg-info/PKG-INFO",
+    ".egg-info/SOURCES.txt",
+    ".egg-info/dependency_links.txt",
+    ".egg-info/not-zip-safe",
+    ".egg-info/top_level.txt",
+}
+
+
+def test_build_sdist(monkeypatch, tmpdir):
+
+    monkeypatch.chdir(MAIN_DIR)
+
+    out = subprocess.check_output(
+        [
+            sys.executable,
+            "setup.py",
+            "sdist",
+            "--formats=tar",
+            "--dist-dir",
+            str(tmpdir),
+        ]
+    )
+    if hasattr(out, "decode"):
+        out = out.decode()
+
+    (sdist,) = tmpdir.visit("*.tar")
+
+    with tarfile.open(str(sdist)) as tar:
+        start = tar.getnames()[0] + "/"
+        version = start[9:-1]
+        simpler = set(n.split("/", 1)[-1] for n in tar.getnames()[1:])
+
+        with contextlib.closing(
+            tar.extractfile(tar.getmember(start + "setup.py"))
+        ) as f:
+            setup_py = f.read()
+
+        with contextlib.closing(
+            tar.extractfile(tar.getmember(start + "pyproject.toml"))
+        ) as f:
+            pyproject_toml = f.read()
+
+    files = set("pybind11/{}".format(n) for n in all_files)
+    files |= sdist_files
+    files |= set("pybind11{}".format(n) for n in local_sdist_files)
+    files.add("pybind11.egg-info/entry_points.txt")
+    files.add("pybind11.egg-info/requires.txt")
+    assert simpler == files
+
+    with open(os.path.join(MAIN_DIR, "tools", "setup_main.py.in"), "rb") as f:
+        contents = (
+            string.Template(f.read().decode())
+            .substitute(version=version, extra_cmd="")
+            .encode()
+        )
+        assert setup_py == contents
+
+    with open(os.path.join(MAIN_DIR, "tools", "pyproject.toml"), "rb") as f:
+        contents = f.read()
+        assert pyproject_toml == contents
+
+
+def test_build_global_dist(monkeypatch, tmpdir):
+
+    monkeypatch.chdir(MAIN_DIR)
+    monkeypatch.setenv("PYBIND11_GLOBAL_SDIST", "1")
+
+    out = subprocess.check_output(
+        [
+            sys.executable,
+            "setup.py",
+            "sdist",
+            "--formats=tar",
+            "--dist-dir",
+            str(tmpdir),
+        ]
+    )
+    if hasattr(out, "decode"):
+        out = out.decode()
+
+    (sdist,) = tmpdir.visit("*.tar")
+
+    with tarfile.open(str(sdist)) as tar:
+        start = tar.getnames()[0] + "/"
+        version = start[16:-1]
+        simpler = set(n.split("/", 1)[-1] for n in tar.getnames()[1:])
+
+        with contextlib.closing(
+            tar.extractfile(tar.getmember(start + "setup.py"))
+        ) as f:
+            setup_py = f.read()
+
+        with contextlib.closing(
+            tar.extractfile(tar.getmember(start + "pyproject.toml"))
+        ) as f:
+            pyproject_toml = f.read()
+
+    files = set("pybind11/{}".format(n) for n in all_files)
+    files |= sdist_files
+    files |= set("pybind11_global{}".format(n) for n in local_sdist_files)
+    assert simpler == files
+
+    with open(os.path.join(MAIN_DIR, "tools", "setup_global.py.in"), "rb") as f:
+        contents = (
+            string.Template(f.read().decode())
+            .substitute(version=version, extra_cmd="")
+            .encode()
+        )
+        assert setup_py == contents
+
+    with open(os.path.join(MAIN_DIR, "tools", "pyproject.toml"), "rb") as f:
+        contents = f.read()
+        assert pyproject_toml == contents
+
+
+def tests_build_wheel(monkeypatch, tmpdir):
+    monkeypatch.chdir(MAIN_DIR)
+
+    subprocess.check_output(
+        [sys.executable, "-m", "pip", "wheel", ".", "-w", str(tmpdir)]
+    )
+
+    (wheel,) = tmpdir.visit("*.whl")
+
+    files = set("pybind11/{}".format(n) for n in all_files)
+    files |= {
+        "dist-info/LICENSE",
+        "dist-info/METADATA",
+        "dist-info/RECORD",
+        "dist-info/WHEEL",
+        "dist-info/entry_points.txt",
+        "dist-info/top_level.txt",
+    }
+
+    with zipfile.ZipFile(str(wheel)) as z:
+        names = z.namelist()
+
+    trimmed = set(n for n in names if "dist-info" not in n)
+    trimmed |= set(
+        "dist-info/{}".format(n.split("/", 1)[-1]) for n in names if "dist-info" in n
+    )
+    assert files == trimmed
+
+
+def tests_build_global_wheel(monkeypatch, tmpdir):
+    monkeypatch.chdir(MAIN_DIR)
+    monkeypatch.setenv("PYBIND11_GLOBAL_SDIST", "1")
+
+    subprocess.check_output(
+        [sys.executable, "-m", "pip", "wheel", ".", "-w", str(tmpdir)]
+    )
+
+    (wheel,) = tmpdir.visit("*.whl")
+
+    files = set("data/data/{}".format(n) for n in src_files)
+    files |= set("data/headers/{}".format(n[8:]) for n in headers)
+    files |= {
+        "dist-info/LICENSE",
+        "dist-info/METADATA",
+        "dist-info/WHEEL",
+        "dist-info/top_level.txt",
+        "dist-info/RECORD",
+    }
+
+    with zipfile.ZipFile(str(wheel)) as z:
+        names = z.namelist()
+
+    beginning = names[0].split("/", 1)[0].rsplit(".", 1)[0]
+    trimmed = set(n[len(beginning) + 1 :] for n in names)
+
+    assert files == trimmed
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/tests/extra_setuptools/test_setuphelper.py
@@ -0,0 +1,95 @@
+# -*- coding: utf-8 -*-
+import os
+import sys
+import subprocess
+from textwrap import dedent
+
+import pytest
+
+DIR = os.path.abspath(os.path.dirname(__file__))
+MAIN_DIR = os.path.dirname(os.path.dirname(DIR))
+
+
+@pytest.mark.parametrize("std", [11, 0])
+def test_simple_setup_py(monkeypatch, tmpdir, std):
+    monkeypatch.chdir(tmpdir)
+    monkeypatch.syspath_prepend(MAIN_DIR)
+
+    (tmpdir / "setup.py").write_text(
+        dedent(
+            u"""\
+            import sys
+            sys.path.append({MAIN_DIR!r})
+
+            from setuptools import setup, Extension
+            from pybind11.setup_helpers import build_ext, Pybind11Extension
+
+            std = {std}
+
+            ext_modules = [
+                Pybind11Extension(
+                    "simple_setup",
+                    sorted(["main.cpp"]),
+                    cxx_std=std,
+                ),
+            ]
+
+            cmdclass = dict()
+            if std == 0:
+                cmdclass["build_ext"] = build_ext
+
+
+            setup(
+                name="simple_setup_package",
+                cmdclass=cmdclass,
+                ext_modules=ext_modules,
+            )
+            """
+        ).format(MAIN_DIR=MAIN_DIR, std=std),
+        encoding="ascii",
+    )
+
+    (tmpdir / "main.cpp").write_text(
+        dedent(
+            u"""\
+            #include <pybind11/pybind11.h>
+
+            int f(int x) {
+                return x * 3;
+            }
+            PYBIND11_MODULE(simple_setup, m) {
+                m.def("f", &f);
+            }
+            """
+        ),
+        encoding="ascii",
+    )
+
+    subprocess.check_call(
+        [sys.executable, "setup.py", "build_ext", "--inplace"],
+        stdout=sys.stdout,
+        stderr=sys.stderr,
+    )
+
+    # Debug helper printout, normally hidden
+    for item in tmpdir.listdir():
+        print(item.basename)
+
+    assert (
+        len([f for f in tmpdir.listdir() if f.basename.startswith("simple_setup")]) == 1
+    )
+    assert len(list(tmpdir.listdir())) == 4  # two files + output + build_dir
+
+    (tmpdir / "test.py").write_text(
+        dedent(
+            u"""\
+            import simple_setup
+            assert simple_setup.f(3) == 9
+            """
+        ),
+        encoding="ascii",
+    )
+
+    subprocess.check_call(
+        [sys.executable, "test.py"], stdout=sys.stdout, stderr=sys.stderr
+    )
--- gtsam-4.1.0.orig/wrap/pybind11/tests/local_bindings.h
+++ gtsam-4.1.0/wrap/pybind11/tests/local_bindings.h
@@ -58,7 +58,7 @@ public:
     std::string name_;
     const std::string &name() { return name_; }
 };
-}
+} // namespace pets
 
 struct MixGL { int i; MixGL(int i) : i{i} {} };
 struct MixGL2 { int i; MixGL2(int i) : i{i} {} };
--- gtsam-4.1.0.orig/wrap/pybind11/tests/pybind11_tests.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/pybind11_tests.cpp
@@ -32,11 +32,11 @@ std::list<std::function<void(py::module
 }
 
 test_initializer::test_initializer(Initializer init) {
-    initializers().push_back(init);
+    initializers().emplace_back(init);
 }
 
 test_initializer::test_initializer(const char *submodule_name, Initializer init) {
-    initializers().push_back([=](py::module &parent) {
+    initializers().emplace_back([=](py::module &parent) {
         auto m = parent.def_submodule(submodule_name);
         init(m);
     });
@@ -88,6 +88,4 @@ PYBIND11_MODULE(pybind11_tests, m) {
 
     for (const auto &initializer : initializers())
         initializer(m);
-
-    if (!py::hasattr(m, "have_eigen")) m.attr("have_eigen") = false;
 }
--- gtsam-4.1.0.orig/wrap/pybind11/tests/pytest.ini
+++ gtsam-4.1.0/wrap/pybind11/tests/pytest.ini
@@ -1,11 +1,14 @@
 [pytest]
-minversion = 3.0
-norecursedirs = test_cmake_build test_embed
+minversion = 3.1
+norecursedirs = test_* extra_*
+xfail_strict = True
 addopts =
     # show summary of skipped tests
     -rs
     # capture only Python print and C++ py::print, but not C output (low-level Python errors)
     --capture=sys
+    # enable all warnings
+    -Wa
 filterwarnings =
     # make warnings into errors but ignore certain third-party extension issues
     error
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/tests/requirements.txt
@@ -0,0 +1,8 @@
+--extra-index-url https://antocuni.github.io/pypy-wheels/manylinux2010/
+numpy==1.16.6; python_version<"3.6"
+numpy==1.18.0; platform_python_implementation=="PyPy" and sys_platform=="darwin" and python_version>="3.6"
+numpy==1.19.1; (platform_python_implementation!="PyPy" or sys_platform!="darwin") and python_version>="3.6" and python_version<"3.9"
+pytest==4.6.9; python_version<"3.5"
+pytest==5.4.3; python_version>="3.5"
+scipy==1.2.3; (platform_python_implementation!="PyPy" or sys_platform!="darwin") and python_version<"3.6"
+scipy==1.5.2; (platform_python_implementation!="PyPy" or sys_platform!="darwin") and python_version>="3.6" and python_version<"3.9"
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_async.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_async.py
@@ -1,7 +1,8 @@
 # -*- coding: utf-8 -*-
-import asyncio
 import pytest
-from pybind11_tests import async_module as m
+
+asyncio = pytest.importorskip("asyncio")
+m = pytest.importorskip("pybind11_tests.async_module")
 
 
 @pytest.fixture
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_buffers.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_buffers.py
@@ -1,19 +1,15 @@
 # -*- coding: utf-8 -*-
 import io
 import struct
-import sys
 
 import pytest
 
+import env  # noqa: F401
+
 from pybind11_tests import buffers as m
 from pybind11_tests import ConstructorStats
 
-PY3 = sys.version_info[0] >= 3
-
-pytestmark = pytest.requires_numpy
-
-with pytest.suppress(ImportError):
-    import numpy as np
+np = pytest.importorskip("numpy")
 
 
 def test_from_python():
@@ -39,9 +35,7 @@ def test_from_python():
     assert cstats.move_assignments == 0
 
 
-# PyPy: Memory leak in the "np.array(m, copy=False)" call
-# https://bitbucket.org/pypy/pypy/issues/2444
-@pytest.unsupported_on_pypy
+# https://foss.heptapod.net/pypy/pypy/-/issues/2444
 def test_to_python():
     mat = m.Matrix(5, 4)
     assert memoryview(mat).shape == (5, 4)
@@ -76,7 +70,6 @@ def test_to_python():
     assert cstats.move_assignments == 0
 
 
-@pytest.unsupported_on_pypy
 def test_inherited_protocol():
     """SquareMatrix is derived from Matrix and inherits the buffer protocol"""
 
@@ -85,7 +78,6 @@ def test_inherited_protocol():
     assert np.asarray(matrix).shape == (5, 5)
 
 
-@pytest.unsupported_on_pypy
 def test_pointer_to_member_fn():
     for cls in [m.Buffer, m.ConstBuffer, m.DerivedBuffer]:
         buf = cls()
@@ -94,19 +86,17 @@ def test_pointer_to_member_fn():
         assert value == 0x12345678
 
 
-@pytest.unsupported_on_pypy
 def test_readonly_buffer():
     buf = m.BufferReadOnly(0x64)
     view = memoryview(buf)
-    assert view[0] == 0x64 if PY3 else b'd'
+    assert view[0] == b'd' if env.PY2 else 0x64
     assert view.readonly
 
 
-@pytest.unsupported_on_pypy
 def test_selective_readonly_buffer():
     buf = m.BufferReadOnlySelect()
 
-    memoryview(buf)[0] = 0x64 if PY3 else b'd'
+    memoryview(buf)[0] = b'd' if env.PY2 else 0x64
     assert buf.value == 0x64
 
     io.BytesIO(b'A').readinto(buf)
@@ -114,6 +104,6 @@ def test_selective_readonly_buffer():
 
     buf.readonly = True
     with pytest.raises(TypeError):
-        memoryview(buf)[0] = 0 if PY3 else b'\0'
+        memoryview(buf)[0] = b'\0' if env.PY2 else 0
     with pytest.raises(TypeError):
         io.BytesIO(b'1').readinto(buf)
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_builtin_casters.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_builtin_casters.cpp
@@ -117,12 +117,16 @@ TEST_SUBMODULE(builtin_casters, m) {
         return std::make_pair(RValueCaster{}, std::make_tuple(RValueCaster{}, std::make_pair(RValueCaster{}, RValueCaster{}))); });
     m.def("lvalue_nested", []() -> const decltype(lvnested) & { return lvnested; });
 
+    static std::pair<int, std::string> int_string_pair{2, "items"};
+    m.def("int_string_pair", []() { return &int_string_pair; });
+
     // test_builtins_cast_return_none
     m.def("return_none_string", []() -> std::string * { return nullptr; });
     m.def("return_none_char",   []() -> const char *  { return nullptr; });
     m.def("return_none_bool",   []() -> bool *        { return nullptr; });
     m.def("return_none_int",    []() -> int *         { return nullptr; });
     m.def("return_none_float",  []() -> float *       { return nullptr; });
+    m.def("return_none_pair",   []() -> std::pair<int,int> * { return nullptr; });
 
     // test_none_deferred
     m.def("defer_none_cstring", [](char *) { return false; });
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_builtin_casters.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_builtin_casters.py
@@ -1,6 +1,8 @@
 # -*- coding: utf-8 -*-
 import pytest
 
+import env  # noqa: F401
+
 from pybind11_tests import builtin_casters as m
 from pybind11_tests import UserType, IncType
 
@@ -115,13 +117,16 @@ def test_bytes_to_string():
     """Tests the ability to pass bytes to C++ string-accepting functions.  Note that this is
     one-way: the only way to return bytes to Python is via the pybind11::bytes class."""
     # Issue #816
-    import sys
-    byte = bytes if sys.version_info[0] < 3 else str
 
-    assert m.strlen(byte("hi")) == 2
-    assert m.string_length(byte("world")) == 5
-    assert m.string_length(byte("a\x00b")) == 3
-    assert m.strlen(byte("a\x00b")) == 1  # C-string limitation
+    def to_bytes(s):
+        b = s if env.PY2 else s.encode("utf8")
+        assert isinstance(b, bytes)
+        return b
+
+    assert m.strlen(to_bytes("hi")) == 2
+    assert m.string_length(to_bytes("world")) == 5
+    assert m.string_length(to_bytes("a\x00b")) == 3
+    assert m.strlen(to_bytes("a\x00b")) == 1  # C-string limitation
 
     # passing in a utf8 encoded string should work
     assert m.string_length(u'💩'.encode("utf8")) == 4
@@ -187,12 +192,11 @@ def test_string_view(capture):
 
 def test_integer_casting():
     """Issue #929 - out-of-range integer values shouldn't be accepted"""
-    import sys
     assert m.i32_str(-1) == "-1"
     assert m.i64_str(-1) == "-1"
     assert m.i32_str(2000000000) == "2000000000"
     assert m.u32_str(2000000000) == "2000000000"
-    if sys.version_info < (3,):
+    if env.PY2:
         assert m.i32_str(long(-1)) == "-1"  # noqa: F821 undefined name 'long'
         assert m.i64_str(long(-1)) == "-1"  # noqa: F821 undefined name 'long'
         assert m.i64_str(long(-999999999999)) == "-999999999999"  # noqa: F821 undefined name
@@ -214,7 +218,7 @@ def test_integer_casting():
         m.i32_str(3000000000)
     assert "incompatible function arguments" in str(excinfo.value)
 
-    if sys.version_info < (3,):
+    if env.PY2:
         with pytest.raises(TypeError) as excinfo:
             m.u32_str(long(-1))  # noqa: F821 undefined name 'long'
         assert "incompatible function arguments" in str(excinfo.value)
@@ -250,6 +254,8 @@ def test_tuple(doc):
     assert m.rvalue_nested() == ("rvalue", ("rvalue", ("rvalue", "rvalue")))
     assert m.lvalue_nested() == ("lvalue", ("lvalue", ("lvalue", "lvalue")))
 
+    assert m.int_string_pair() == (2, "items")
+
 
 def test_builtins_cast_return_none():
     """Casters produced with PYBIND11_TYPE_CASTER() should convert nullptr to None"""
@@ -258,6 +264,7 @@ def test_builtins_cast_return_none():
     assert m.return_none_bool() is None
     assert m.return_none_int() is None
     assert m.return_none_float() is None
+    assert m.return_none_pair() is None
 
 
 def test_none_deferred():
@@ -352,9 +359,9 @@ def test_bool_caster():
     assert convert(A(False)) is False
 
 
-@pytest.requires_numpy
 def test_numpy_bool():
-    import numpy as np
+    np = pytest.importorskip("numpy")
+
     convert, noconvert = m.bool_passthrough, m.bool_passthrough_noconvert
 
     def cant_convert(v):
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_call_policies.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_call_policies.cpp
@@ -46,6 +46,7 @@ TEST_SUBMODULE(call_policies, m) {
     class Parent {
     public:
         Parent() { py::print("Allocating parent."); }
+        Parent(const Parent& parent) = default;
         ~Parent() { py::print("Releasing parent."); }
         void addChild(Child *) { }
         Child *returnChild() { return new Child(); }
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_call_policies.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_call_policies.py
@@ -1,9 +1,13 @@
 # -*- coding: utf-8 -*-
 import pytest
+
+import env  # noqa: F401
+
 from pybind11_tests import call_policies as m
 from pybind11_tests import ConstructorStats
 
 
+@pytest.mark.xfail("env.PYPY", reason="sometimes comes out 1 off on PyPy", strict=False)
 def test_keep_alive_argument(capture):
     n_inst = ConstructorStats.detail_reg_inst()
     with capture:
@@ -70,8 +74,8 @@ def test_keep_alive_return_value(capture
     """
 
 
-# https://bitbucket.org/pypy/pypy/issues/2447
-@pytest.unsupported_on_pypy
+# https://foss.heptapod.net/pypy/pypy/-/issues/2447
+@pytest.mark.xfail("env.PYPY", reason="_PyObject_GetDictPtr is unimplemented")
 def test_alive_gc(capture):
     n_inst = ConstructorStats.detail_reg_inst()
     p = m.ParentGC()
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_chrono.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_chrono.cpp
@@ -10,6 +10,25 @@
 
 #include "pybind11_tests.h"
 #include <pybind11/chrono.h>
+#include <chrono>
+
+struct different_resolutions {
+    using time_point_h = std::chrono::time_point<
+        std::chrono::system_clock, std::chrono::hours>;
+    using time_point_m = std::chrono::time_point<
+        std::chrono::system_clock, std::chrono::minutes>;
+    using time_point_s = std::chrono::time_point<
+        std::chrono::system_clock, std::chrono::seconds>;
+    using time_point_ms = std::chrono::time_point<
+        std::chrono::system_clock, std::chrono::milliseconds>;
+    using time_point_us = std::chrono::time_point<
+        std::chrono::system_clock, std::chrono::microseconds>;
+    time_point_h timestamp_h;
+    time_point_m timestamp_m;
+    time_point_s timestamp_s;
+    time_point_ms timestamp_ms;
+    time_point_us timestamp_us;
+};
 
 TEST_SUBMODULE(chrono, m) {
     using system_time = std::chrono::system_clock::time_point;
@@ -52,4 +71,14 @@ TEST_SUBMODULE(chrono, m) {
     m.def("test_nano_timepoint", [](timestamp start, timespan delta) -> timestamp {
         return start + delta;
     });
+
+    // Test different resolutions
+    py::class_<different_resolutions>(m, "different_resolutions")
+        .def(py::init<>())
+        .def_readwrite("timestamp_h", &different_resolutions::timestamp_h)
+        .def_readwrite("timestamp_m", &different_resolutions::timestamp_m)
+        .def_readwrite("timestamp_s", &different_resolutions::timestamp_s)
+        .def_readwrite("timestamp_ms", &different_resolutions::timestamp_ms)
+        .def_readwrite("timestamp_us", &different_resolutions::timestamp_us)
+        ;
 }
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_chrono.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_chrono.py
@@ -1,11 +1,15 @@
 # -*- coding: utf-8 -*-
 from pybind11_tests import chrono as m
 import datetime
+import pytest
+
+import env  # noqa: F401
 
 
 def test_chrono_system_clock():
 
     # Get the time from both c++ and datetime
+    date0 = datetime.datetime.today()
     date1 = m.test_chrono1()
     date2 = datetime.datetime.today()
 
@@ -13,16 +17,15 @@ def test_chrono_system_clock():
     assert isinstance(date1, datetime.datetime)
 
     # The numbers should vary by a very small amount (time it took to execute)
+    diff_python = abs(date2 - date0)
     diff = abs(date1 - date2)
 
-    # There should never be a days/seconds difference
+    # There should never be a days difference
     assert diff.days == 0
-    assert diff.seconds == 0
 
-    # We test that no more than about 0.5 seconds passes here
-    # This makes sure that the dates created are very close to the same
-    # but if the testing system is incredibly overloaded this should still pass
-    assert diff.microseconds < 500000
+    # Since datetime.datetime.today() calls time.time(), and on some platforms
+    # that has 1 second accuracy, we compare this way
+    assert diff.seconds <= diff_python.seconds
 
 
 def test_chrono_system_clock_roundtrip():
@@ -72,8 +75,30 @@ def test_chrono_system_clock_roundtrip_d
     assert time2.microsecond == 0
 
 
-def test_chrono_system_clock_roundtrip_time():
-    time1 = datetime.datetime.today().time()
+SKIP_TZ_ENV_ON_WIN = pytest.mark.skipif(
+    "env.WIN", reason="TZ environment variable only supported on POSIX"
+)
+
+
+@pytest.mark.parametrize("time1", [
+    datetime.datetime.today().time(),
+    datetime.time(0, 0, 0),
+    datetime.time(0, 0, 0, 1),
+    datetime.time(0, 28, 45, 109827),
+    datetime.time(0, 59, 59, 999999),
+    datetime.time(1, 0, 0),
+    datetime.time(5, 59, 59, 0),
+    datetime.time(5, 59, 59, 1),
+])
+@pytest.mark.parametrize("tz", [
+    None,
+    pytest.param("Europe/Brussels", marks=SKIP_TZ_ENV_ON_WIN),
+    pytest.param("Asia/Pyongyang", marks=SKIP_TZ_ENV_ON_WIN),
+    pytest.param("America/New_York", marks=SKIP_TZ_ENV_ON_WIN),
+])
+def test_chrono_system_clock_roundtrip_time(time1, tz, monkeypatch):
+    if tz is not None:
+        monkeypatch.setenv("TZ", "/usr/share/zoneinfo/{}".format(tz))
 
     # Roundtrip the time
     datetime2 = m.test_chrono2(time1)
@@ -175,3 +200,13 @@ def test_nano_timepoint():
     time = datetime.datetime.now()
     time1 = m.test_nano_timepoint(time, datetime.timedelta(seconds=60))
     assert(time1 == time + datetime.timedelta(seconds=60))
+
+
+def test_chrono_different_resolutions():
+    resolutions = m.different_resolutions()
+    time = datetime.datetime.now()
+    resolutions.timestamp_h = time
+    resolutions.timestamp_m = time
+    resolutions.timestamp_s = time
+    resolutions.timestamp_ms = time
+    resolutions.timestamp_us = time
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_class.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_class.cpp
@@ -103,7 +103,7 @@ TEST_SUBMODULE(class_, m) {
         BaseClass() = default;
         BaseClass(const BaseClass &) = default;
         BaseClass(BaseClass &&) = default;
-        virtual ~BaseClass() {}
+        virtual ~BaseClass() = default;
     };
     struct DerivedClass1 : BaseClass { };
     struct DerivedClass2 : BaseClass { };
@@ -134,6 +134,32 @@ TEST_SUBMODULE(class_, m) {
         );
     });
 
+    struct Invalid {};
+
+    // test_type
+    m.def("check_type", [](int category) {
+        // Currently not supported (via a fail at compile time)
+        // See https://github.com/pybind/pybind11/issues/2486
+        // if (category == 2)
+        //     return py::type::of<int>();
+        if (category == 1)
+            return py::type::of<DerivedClass1>();
+        else
+            return py::type::of<Invalid>();
+    });
+
+    m.def("get_type_of", [](py::object ob) {
+        return py::type::of(ob);
+    });
+
+    m.def("as_type", [](py::object ob) {
+        auto tp = py::type(ob);
+        if (py::isinstance<py::type>(ob))
+            return tp;
+        else
+            throw std::runtime_error("Invalid type");
+    });
+
     // test_mismatched_holder
     struct MismatchBase1 { };
     struct MismatchDerived1 : MismatchBase1 { };
@@ -227,6 +253,8 @@ TEST_SUBMODULE(class_, m) {
         static void *operator new(size_t s, void *ptr) { py::print("C placement-new", s); return ptr; }
         static void operator delete(void *p, size_t s) { py::print("C delete", s); return ::operator delete(p); }
         virtual ~AliasedHasOpNewDelSize() = default;
+        AliasedHasOpNewDelSize() = default;
+        AliasedHasOpNewDelSize(const AliasedHasOpNewDelSize&) = delete;
     };
     struct PyAliasedHasOpNewDelSize : AliasedHasOpNewDelSize {
         PyAliasedHasOpNewDelSize() = default;
@@ -277,6 +305,8 @@ TEST_SUBMODULE(class_, m) {
     class ProtectedB {
     public:
         virtual ~ProtectedB() = default;
+        ProtectedB() = default;
+        ProtectedB(const ProtectedB &) = delete;
 
     protected:
         virtual int foo() const { return value; }
@@ -287,7 +317,7 @@ TEST_SUBMODULE(class_, m) {
 
     class TrampolineB : public ProtectedB {
     public:
-        int foo() const override { PYBIND11_OVERLOAD(int, ProtectedB, foo, ); }
+        int foo() const override { PYBIND11_OVERRIDE(int, ProtectedB, foo, ); }
     };
 
     class PublicistB : public ProtectedB {
@@ -323,7 +353,7 @@ TEST_SUBMODULE(class_, m) {
     // test_reentrant_implicit_conversion_failure
     // #1035: issue with runaway reentrant implicit conversion
     struct BogusImplicitConversion {
-        BogusImplicitConversion(const BogusImplicitConversion &) { }
+        BogusImplicitConversion(const BogusImplicitConversion &) = default;
     };
 
     py::class_<BogusImplicitConversion>(m, "BogusImplicitConversion")
@@ -375,19 +405,34 @@ TEST_SUBMODULE(class_, m) {
     // test_non_final_final
     struct IsNonFinalFinal {};
     py::class_<IsNonFinalFinal>(m, "IsNonFinalFinal", py::is_final());
+
+    struct PyPrintDestructor {
+        PyPrintDestructor() = default;
+        ~PyPrintDestructor() {
+            py::print("Print from destructor");
+        }
+        void throw_something() { throw std::runtime_error("error"); }
+    };
+    py::class_<PyPrintDestructor>(m, "PyPrintDestructor")
+        .def(py::init<>())
+        .def("throw_something", &PyPrintDestructor::throw_something);
 }
 
-template <int N> class BreaksBase { public: virtual ~BreaksBase() = default; };
+template <int N> class BreaksBase { public:
+    virtual ~BreaksBase() = default;
+    BreaksBase() = default;
+    BreaksBase(const BreaksBase&) = delete;
+};
 template <int N> class BreaksTramp : public BreaksBase<N> {};
 // These should all compile just fine:
-typedef py::class_<BreaksBase<1>, std::unique_ptr<BreaksBase<1>>, BreaksTramp<1>> DoesntBreak1;
-typedef py::class_<BreaksBase<2>, BreaksTramp<2>, std::unique_ptr<BreaksBase<2>>> DoesntBreak2;
-typedef py::class_<BreaksBase<3>, std::unique_ptr<BreaksBase<3>>> DoesntBreak3;
-typedef py::class_<BreaksBase<4>, BreaksTramp<4>> DoesntBreak4;
-typedef py::class_<BreaksBase<5>> DoesntBreak5;
-typedef py::class_<BreaksBase<6>, std::shared_ptr<BreaksBase<6>>, BreaksTramp<6>> DoesntBreak6;
-typedef py::class_<BreaksBase<7>, BreaksTramp<7>, std::shared_ptr<BreaksBase<7>>> DoesntBreak7;
-typedef py::class_<BreaksBase<8>, std::shared_ptr<BreaksBase<8>>> DoesntBreak8;
+using DoesntBreak1 = py::class_<BreaksBase<1>, std::unique_ptr<BreaksBase<1>>, BreaksTramp<1>>;
+using DoesntBreak2 = py::class_<BreaksBase<2>, BreaksTramp<2>, std::unique_ptr<BreaksBase<2>>>;
+using DoesntBreak3 = py::class_<BreaksBase<3>, std::unique_ptr<BreaksBase<3>>>;
+using DoesntBreak4 = py::class_<BreaksBase<4>, BreaksTramp<4>>;
+using DoesntBreak5 = py::class_<BreaksBase<5>>;
+using DoesntBreak6 = py::class_<BreaksBase<6>, std::shared_ptr<BreaksBase<6>>, BreaksTramp<6>>;
+using DoesntBreak7 = py::class_<BreaksBase<7>, BreaksTramp<7>, std::shared_ptr<BreaksBase<7>>>;
+using DoesntBreak8 = py::class_<BreaksBase<8>, std::shared_ptr<BreaksBase<8>>>;
 #define CHECK_BASE(N) static_assert(std::is_same<typename DoesntBreak##N::type, BreaksBase<N>>::value, \
         "DoesntBreak" #N " has wrong type!")
 CHECK_BASE(1); CHECK_BASE(2); CHECK_BASE(3); CHECK_BASE(4); CHECK_BASE(5); CHECK_BASE(6); CHECK_BASE(7); CHECK_BASE(8);
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_class.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_class.py
@@ -1,6 +1,8 @@
 # -*- coding: utf-8 -*-
 import pytest
 
+import env  # noqa: F401
+
 from pybind11_tests import class_ as m
 from pybind11_tests import UserType, ConstructorStats
 
@@ -24,6 +26,40 @@ def test_instance(msg):
     assert cstats.alive() == 0
 
 
+def test_type():
+    assert m.check_type(1) == m.DerivedClass1
+    with pytest.raises(RuntimeError) as execinfo:
+        m.check_type(0)
+
+    assert 'pybind11::detail::get_type_info: unable to find type info' in str(execinfo.value)
+    assert 'Invalid' in str(execinfo.value)
+
+    # Currently not supported
+    # See https://github.com/pybind/pybind11/issues/2486
+    # assert m.check_type(2) == int
+
+
+def test_type_of_py():
+    assert m.get_type_of(1) == int
+    assert m.get_type_of(m.DerivedClass1()) == m.DerivedClass1
+    assert m.get_type_of(int) == type
+
+
+def test_type_of_py_nodelete():
+    # If the above test deleted the class, this will segfault
+    assert m.get_type_of(m.DerivedClass1()) == m.DerivedClass1
+
+
+def test_as_type_py():
+    assert m.as_type(int) == int
+
+    with pytest.raises(RuntimeError):
+        assert m.as_type(1) == int
+
+    with pytest.raises(RuntimeError):
+        assert m.as_type(m.DerivedClass1()) == m.DerivedClass1
+
+
 def test_docstrings(doc):
     assert doc(UserType) == "A `py::class_` type for testing"
     assert UserType.__name__ == "UserType"
@@ -261,7 +297,7 @@ def test_brace_initialization():
     assert b.vec == [123, 456]
 
 
-@pytest.unsupported_on_pypy
+@pytest.mark.xfail("env.PYPY")
 def test_class_refcount():
     """Instances must correctly increase/decrease the reference count of their types (#1029)"""
     from sys import getrefcount
@@ -307,8 +343,8 @@ def test_aligned():
         assert p % 1024 == 0
 
 
-# https://bitbucket.org/pypy/pypy/issues/2742
-@pytest.unsupported_on_pypy
+# https://foss.heptapod.net/pypy/pypy/-/issues/2742
+@pytest.mark.xfail("env.PYPY")
 def test_final():
     with pytest.raises(TypeError) as exc_info:
         class PyFinalChild(m.IsFinal):
@@ -316,10 +352,16 @@ def test_final():
     assert str(exc_info.value).endswith("is not an acceptable base type")
 
 
-# https://bitbucket.org/pypy/pypy/issues/2742
-@pytest.unsupported_on_pypy
+# https://foss.heptapod.net/pypy/pypy/-/issues/2742
+@pytest.mark.xfail("env.PYPY")
 def test_non_final_final():
     with pytest.raises(TypeError) as exc_info:
         class PyNonFinalFinalChild(m.IsNonFinalFinal):
             pass
     assert str(exc_info.value).endswith("is not an acceptable base type")
+
+
+# https://github.com/pybind/pybind11/issues/1878
+def test_exception_rvalue_abort():
+    with pytest.raises(RuntimeError):
+        m.PyPrintDestructor().throw_something()
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_cmake_build/CMakeLists.txt
+++ gtsam-4.1.0/wrap/pybind11/tests/test_cmake_build/CMakeLists.txt
@@ -1,56 +1,77 @@
-add_custom_target(test_cmake_build)
+# Built-in in CMake 3.5+
+include(CMakeParseArguments)
 
-if(CMAKE_VERSION VERSION_LESS 3.1)
-  # 3.0 needed for interface library for subdirectory_target/installed_target
-  # 3.1 needed for cmake -E env for testing
-  return()
-endif()
+add_custom_target(test_cmake_build)
 
-include(CMakeParseArguments)
 function(pybind11_add_build_test name)
   cmake_parse_arguments(ARG "INSTALL" "" "" ${ARGN})
 
-  set(build_options "-DCMAKE_PREFIX_PATH=${PROJECT_BINARY_DIR}/mock_install"
-                    "-DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}"
-                    "-DPYTHON_EXECUTABLE:FILEPATH=${PYTHON_EXECUTABLE}"
-                    "-DPYBIND11_CPP_STANDARD=${PYBIND11_CPP_STANDARD}")
+  set(build_options "-DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}")
+
+  if(PYBIND11_FINDPYTHON)
+    list(APPEND build_options "-DPYBIND11_FINDPYTHON=${PYBIND11_FINDPYTHON}")
+
+    if(DEFINED Python_ROOT_DIR)
+      list(APPEND build_options "-DPython_ROOT_DIR=${Python_ROOT_DIR}")
+    endif()
+
+    list(APPEND build_options "-DPython_EXECUTABLE=${Python_EXECUTABLE}")
+  else()
+    list(APPEND build_options "-DPYTHON_EXECUTABLE=${PYTHON_EXECUTABLE}")
+  endif()
+
+  if(DEFINED CMAKE_CXX_STANDARD)
+    list(APPEND build_options "-DCMAKE_CXX_STANDARD=${CMAKE_CXX_STANDARD}")
+  endif()
+
   if(NOT ARG_INSTALL)
-    list(APPEND build_options "-DPYBIND11_PROJECT_DIR=${PROJECT_SOURCE_DIR}")
+    list(APPEND build_options "-DPYBIND11_PROJECT_DIR=${pybind11_SOURCE_DIR}")
+  else()
+    list(APPEND build_options "-DCMAKE_PREFIX_PATH=${pybind11_BINARY_DIR}/mock_install")
   endif()
 
-  add_custom_target(test_${name} ${CMAKE_CTEST_COMMAND}
-    --quiet --output-log ${name}.log
-    --build-and-test "${CMAKE_CURRENT_SOURCE_DIR}/${name}"
-                     "${CMAKE_CURRENT_BINARY_DIR}/${name}"
-    --build-config Release
+  add_custom_target(
+    test_build_${name}
+    ${CMAKE_CTEST_COMMAND}
+    --build-and-test
+    "${CMAKE_CURRENT_SOURCE_DIR}/${name}"
+    "${CMAKE_CURRENT_BINARY_DIR}/${name}"
+    --build-config
+    Release
     --build-noclean
-    --build-generator ${CMAKE_GENERATOR}
-    $<$<BOOL:${CMAKE_GENERATOR_PLATFORM}>:--build-generator-platform> ${CMAKE_GENERATOR_PLATFORM}
-    --build-makeprogram ${CMAKE_MAKE_PROGRAM}
-    --build-target check
-    --build-options ${build_options}
-  )
+    --build-generator
+    ${CMAKE_GENERATOR}
+    $<$<BOOL:${CMAKE_GENERATOR_PLATFORM}>:--build-generator-platform>
+    ${CMAKE_GENERATOR_PLATFORM}
+    --build-makeprogram
+    ${CMAKE_MAKE_PROGRAM}
+    --build-target
+    check_${name}
+    --build-options
+    ${build_options})
   if(ARG_INSTALL)
-    add_dependencies(test_${name} mock_install)
+    add_dependencies(test_build_${name} mock_install)
   endif()
-  add_dependencies(test_cmake_build test_${name})
+  add_dependencies(test_cmake_build test_build_${name})
 endfunction()
 
 pybind11_add_build_test(subdirectory_function)
 pybind11_add_build_test(subdirectory_target)
-if(NOT ${PYTHON_MODULE_EXTENSION} MATCHES "pypy")
+if("${PYTHON_MODULE_EXTENSION}" MATCHES "pypy" OR "${Python_INTERPRETER_ID}" STREQUAL "PyPy")
+  message(STATUS "Skipping embed test on PyPy")
+else()
   pybind11_add_build_test(subdirectory_embed)
 endif()
 
 if(PYBIND11_INSTALL)
-  add_custom_target(mock_install ${CMAKE_COMMAND}
-    "-DCMAKE_INSTALL_PREFIX=${PROJECT_BINARY_DIR}/mock_install"
-    -P "${PROJECT_BINARY_DIR}/cmake_install.cmake"
-  )
+  add_custom_target(
+    mock_install ${CMAKE_COMMAND} "-DCMAKE_INSTALL_PREFIX=${pybind11_BINARY_DIR}/mock_install" -P
+                 "${pybind11_BINARY_DIR}/cmake_install.cmake")
 
   pybind11_add_build_test(installed_function INSTALL)
   pybind11_add_build_test(installed_target INSTALL)
-  if(NOT ${PYTHON_MODULE_EXTENSION} MATCHES "pypy")
+  if(NOT ("${PYTHON_MODULE_EXTENSION}" MATCHES "pypy" OR "${Python_INTERPRETER_ID}" STREQUAL "PyPy"
+         ))
     pybind11_add_build_test(installed_embed INSTALL)
   endif()
 endif()
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_cmake_build/installed_embed/CMakeLists.txt
+++ gtsam-4.1.0/wrap/pybind11/tests/test_cmake_build/installed_embed/CMakeLists.txt
@@ -1,15 +1,26 @@
-cmake_minimum_required(VERSION 3.0)
+cmake_minimum_required(VERSION 3.4)
+
+# The `cmake_minimum_required(VERSION 3.4...3.18)` syntax does not work with
+# some versions of VS that have a patched CMake 3.11. This forces us to emulate
+# the behavior using the following workaround:
+if(${CMAKE_VERSION} VERSION_LESS 3.18)
+  cmake_policy(VERSION ${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION})
+else()
+  cmake_policy(VERSION 3.18)
+endif()
+
 project(test_installed_embed CXX)
 
-set(CMAKE_MODULE_PATH "")
 find_package(pybind11 CONFIG REQUIRED)
 message(STATUS "Found pybind11 v${pybind11_VERSION}: ${pybind11_INCLUDE_DIRS}")
 
-add_executable(test_cmake_build ../embed.cpp)
-target_link_libraries(test_cmake_build PRIVATE pybind11::embed)
+add_executable(test_installed_embed ../embed.cpp)
+target_link_libraries(test_installed_embed PRIVATE pybind11::embed)
+set_target_properties(test_installed_embed PROPERTIES OUTPUT_NAME test_cmake_build)
 
 # Do not treat includes from IMPORTED target as SYSTEM (Python headers in pybind11::embed).
 # This may be needed to resolve header conflicts, e.g. between Python release and debug headers.
-set_target_properties(test_cmake_build PROPERTIES NO_SYSTEM_FROM_IMPORTED ON)
+set_target_properties(test_installed_embed PROPERTIES NO_SYSTEM_FROM_IMPORTED ON)
 
-add_custom_target(check $<TARGET_FILE:test_cmake_build> ${PROJECT_SOURCE_DIR}/../test.py)
+add_custom_target(check_installed_embed $<TARGET_FILE:test_installed_embed>
+                                        ${PROJECT_SOURCE_DIR}/../test.py)
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_cmake_build/installed_function/CMakeLists.txt
+++ gtsam-4.1.0/wrap/pybind11/tests/test_cmake_build/installed_function/CMakeLists.txt
@@ -1,12 +1,38 @@
-cmake_minimum_required(VERSION 2.8.12)
+cmake_minimum_required(VERSION 3.4)
 project(test_installed_module CXX)
 
-set(CMAKE_MODULE_PATH "")
+# The `cmake_minimum_required(VERSION 3.4...3.18)` syntax does not work with
+# some versions of VS that have a patched CMake 3.11. This forces us to emulate
+# the behavior using the following workaround:
+if(${CMAKE_VERSION} VERSION_LESS 3.18)
+  cmake_policy(VERSION ${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION})
+else()
+  cmake_policy(VERSION 3.18)
+endif()
+
+project(test_installed_function CXX)
 
 find_package(pybind11 CONFIG REQUIRED)
-message(STATUS "Found pybind11 v${pybind11_VERSION}: ${pybind11_INCLUDE_DIRS}")
+message(
+  STATUS "Found pybind11 v${pybind11_VERSION} ${pybind11_VERSION_TYPE}: ${pybind11_INCLUDE_DIRS}")
+
+pybind11_add_module(test_installed_function SHARED NO_EXTRAS ../main.cpp)
+set_target_properties(test_installed_function PROPERTIES OUTPUT_NAME test_cmake_build)
 
-pybind11_add_module(test_cmake_build SHARED NO_EXTRAS ../main.cpp)
+if(DEFINED Python_EXECUTABLE)
+  set(_Python_EXECUTABLE "${Python_EXECUTABLE}")
+elseif(DEFINED PYTHON_EXECUTABLE)
+  set(_Python_EXECUTABLE "${PYTHON_EXECUTABLE}")
+else()
+  message(FATAL_ERROR "No Python executable defined (should not be possible at this stage)")
+endif()
 
-add_custom_target(check ${CMAKE_COMMAND} -E env PYTHONPATH=$<TARGET_FILE_DIR:test_cmake_build>
-                  ${PYTHON_EXECUTABLE} ${PROJECT_SOURCE_DIR}/../test.py ${PROJECT_NAME})
+add_custom_target(
+  check_installed_function
+  ${CMAKE_COMMAND}
+  -E
+  env
+  PYTHONPATH=$<TARGET_FILE_DIR:test_installed_function>
+  ${_Python_EXECUTABLE}
+  ${PROJECT_SOURCE_DIR}/../test.py
+  ${PROJECT_NAME})
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_cmake_build/installed_target/CMakeLists.txt
+++ gtsam-4.1.0/wrap/pybind11/tests/test_cmake_build/installed_target/CMakeLists.txt
@@ -1,22 +1,45 @@
-cmake_minimum_required(VERSION 3.0)
-project(test_installed_target CXX)
+cmake_minimum_required(VERSION 3.4)
+
+# The `cmake_minimum_required(VERSION 3.4...3.18)` syntax does not work with
+# some versions of VS that have a patched CMake 3.11. This forces us to emulate
+# the behavior using the following workaround:
+if(${CMAKE_VERSION} VERSION_LESS 3.18)
+  cmake_policy(VERSION ${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION})
+else()
+  cmake_policy(VERSION 3.18)
+endif()
 
-set(CMAKE_MODULE_PATH "")
+project(test_installed_target CXX)
 
 find_package(pybind11 CONFIG REQUIRED)
 message(STATUS "Found pybind11 v${pybind11_VERSION}: ${pybind11_INCLUDE_DIRS}")
 
-add_library(test_cmake_build MODULE ../main.cpp)
+add_library(test_installed_target MODULE ../main.cpp)
 
-target_link_libraries(test_cmake_build PRIVATE pybind11::module)
+target_link_libraries(test_installed_target PRIVATE pybind11::module)
+set_target_properties(test_installed_target PROPERTIES OUTPUT_NAME test_cmake_build)
 
-# make sure result is, for example, test_installed_target.so, not libtest_installed_target.dylib
-set_target_properties(test_cmake_build PROPERTIES PREFIX "${PYTHON_MODULE_PREFIX}"
-                                                  SUFFIX "${PYTHON_MODULE_EXTENSION}")
+# Make sure result is, for example, test_installed_target.so, not libtest_installed_target.dylib
+pybind11_extension(test_installed_target)
 
 # Do not treat includes from IMPORTED target as SYSTEM (Python headers in pybind11::module).
 # This may be needed to resolve header conflicts, e.g. between Python release and debug headers.
-set_target_properties(test_cmake_build PROPERTIES NO_SYSTEM_FROM_IMPORTED ON)
+set_target_properties(test_installed_target PROPERTIES NO_SYSTEM_FROM_IMPORTED ON)
 
-add_custom_target(check ${CMAKE_COMMAND} -E env PYTHONPATH=$<TARGET_FILE_DIR:test_cmake_build>
-                  ${PYTHON_EXECUTABLE} ${PROJECT_SOURCE_DIR}/../test.py ${PROJECT_NAME})
+if(DEFINED Python_EXECUTABLE)
+  set(_Python_EXECUTABLE "${Python_EXECUTABLE}")
+elseif(DEFINED PYTHON_EXECUTABLE)
+  set(_Python_EXECUTABLE "${PYTHON_EXECUTABLE}")
+else()
+  message(FATAL_ERROR "No Python executable defined (should not be possible at this stage)")
+endif()
+
+add_custom_target(
+  check_installed_target
+  ${CMAKE_COMMAND}
+  -E
+  env
+  PYTHONPATH=$<TARGET_FILE_DIR:test_installed_target>
+  ${_Python_EXECUTABLE}
+  ${PROJECT_SOURCE_DIR}/../test.py
+  ${PROJECT_NAME})
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_cmake_build/subdirectory_embed/CMakeLists.txt
+++ gtsam-4.1.0/wrap/pybind11/tests/test_cmake_build/subdirectory_embed/CMakeLists.txt
@@ -1,25 +1,39 @@
-cmake_minimum_required(VERSION 3.0)
+cmake_minimum_required(VERSION 3.4)
+
+# The `cmake_minimum_required(VERSION 3.4...3.18)` syntax does not work with
+# some versions of VS that have a patched CMake 3.11. This forces us to emulate
+# the behavior using the following workaround:
+if(${CMAKE_VERSION} VERSION_LESS 3.18)
+  cmake_policy(VERSION ${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION})
+else()
+  cmake_policy(VERSION 3.18)
+endif()
+
 project(test_subdirectory_embed CXX)
 
-set(PYBIND11_INSTALL ON CACHE BOOL "")
+set(PYBIND11_INSTALL
+    ON
+    CACHE BOOL "")
 set(PYBIND11_EXPORT_NAME test_export)
 
 add_subdirectory(${PYBIND11_PROJECT_DIR} pybind11)
 
 # Test basic target functionality
-add_executable(test_cmake_build ../embed.cpp)
-target_link_libraries(test_cmake_build PRIVATE pybind11::embed)
+add_executable(test_subdirectory_embed ../embed.cpp)
+target_link_libraries(test_subdirectory_embed PRIVATE pybind11::embed)
+set_target_properties(test_subdirectory_embed PROPERTIES OUTPUT_NAME test_cmake_build)
 
-add_custom_target(check $<TARGET_FILE:test_cmake_build> ${PROJECT_SOURCE_DIR}/../test.py)
+add_custom_target(check_subdirectory_embed $<TARGET_FILE:test_subdirectory_embed>
+                                           ${PROJECT_SOURCE_DIR}/../test.py)
 
 # Test custom export group -- PYBIND11_EXPORT_NAME
 add_library(test_embed_lib ../embed.cpp)
 target_link_libraries(test_embed_lib PRIVATE pybind11::embed)
 
-install(TARGETS test_embed_lib
-        EXPORT  test_export
-        ARCHIVE DESTINATION bin
-        LIBRARY DESTINATION lib
-        RUNTIME DESTINATION lib)
-install(EXPORT      test_export
-        DESTINATION lib/cmake/test_export/test_export-Targets.cmake)
+install(
+  TARGETS test_embed_lib
+  EXPORT test_export
+  ARCHIVE DESTINATION bin
+  LIBRARY DESTINATION lib
+  RUNTIME DESTINATION lib)
+install(EXPORT test_export DESTINATION lib/cmake/test_export/test_export-Targets.cmake)
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_cmake_build/subdirectory_function/CMakeLists.txt
+++ gtsam-4.1.0/wrap/pybind11/tests/test_cmake_build/subdirectory_function/CMakeLists.txt
@@ -1,8 +1,34 @@
-cmake_minimum_required(VERSION 2.8.12)
-project(test_subdirectory_module CXX)
+cmake_minimum_required(VERSION 3.4)
 
-add_subdirectory(${PYBIND11_PROJECT_DIR} pybind11)
-pybind11_add_module(test_cmake_build THIN_LTO ../main.cpp)
+# The `cmake_minimum_required(VERSION 3.4...3.18)` syntax does not work with
+# some versions of VS that have a patched CMake 3.11. This forces us to emulate
+# the behavior using the following workaround:
+if(${CMAKE_VERSION} VERSION_LESS 3.18)
+  cmake_policy(VERSION ${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION})
+else()
+  cmake_policy(VERSION 3.18)
+endif()
 
-add_custom_target(check ${CMAKE_COMMAND} -E env PYTHONPATH=$<TARGET_FILE_DIR:test_cmake_build>
-                  ${PYTHON_EXECUTABLE} ${PROJECT_SOURCE_DIR}/../test.py ${PROJECT_NAME})
+project(test_subdirectory_function CXX)
+
+add_subdirectory("${PYBIND11_PROJECT_DIR}" pybind11)
+pybind11_add_module(test_subdirectory_function ../main.cpp)
+set_target_properties(test_subdirectory_function PROPERTIES OUTPUT_NAME test_cmake_build)
+
+if(DEFINED Python_EXECUTABLE)
+  set(_Python_EXECUTABLE "${Python_EXECUTABLE}")
+elseif(DEFINED PYTHON_EXECUTABLE)
+  set(_Python_EXECUTABLE "${PYTHON_EXECUTABLE}")
+else()
+  message(FATAL_ERROR "No Python executable defined (should not be possible at this stage)")
+endif()
+
+add_custom_target(
+  check_subdirectory_function
+  ${CMAKE_COMMAND}
+  -E
+  env
+  PYTHONPATH=$<TARGET_FILE_DIR:test_subdirectory_function>
+  ${_Python_EXECUTABLE}
+  ${PROJECT_SOURCE_DIR}/../test.py
+  ${PROJECT_NAME})
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_cmake_build/subdirectory_target/CMakeLists.txt
+++ gtsam-4.1.0/wrap/pybind11/tests/test_cmake_build/subdirectory_target/CMakeLists.txt
@@ -1,15 +1,40 @@
-cmake_minimum_required(VERSION 3.0)
+cmake_minimum_required(VERSION 3.4)
+
+# The `cmake_minimum_required(VERSION 3.4...3.18)` syntax does not work with
+# some versions of VS that have a patched CMake 3.11. This forces us to emulate
+# the behavior using the following workaround:
+if(${CMAKE_VERSION} VERSION_LESS 3.18)
+  cmake_policy(VERSION ${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION})
+else()
+  cmake_policy(VERSION 3.18)
+endif()
+
 project(test_subdirectory_target CXX)
 
 add_subdirectory(${PYBIND11_PROJECT_DIR} pybind11)
 
-add_library(test_cmake_build MODULE ../main.cpp)
+add_library(test_subdirectory_target MODULE ../main.cpp)
+set_target_properties(test_subdirectory_target PROPERTIES OUTPUT_NAME test_cmake_build)
+
+target_link_libraries(test_subdirectory_target PRIVATE pybind11::module)
 
-target_link_libraries(test_cmake_build PRIVATE pybind11::module)
+# Make sure result is, for example, test_installed_target.so, not libtest_installed_target.dylib
+pybind11_extension(test_subdirectory_target)
 
-# make sure result is, for example, test_installed_target.so, not libtest_installed_target.dylib
-set_target_properties(test_cmake_build PROPERTIES PREFIX "${PYTHON_MODULE_PREFIX}"
-                                                  SUFFIX "${PYTHON_MODULE_EXTENSION}")
+if(DEFINED Python_EXECUTABLE)
+  set(_Python_EXECUTABLE "${Python_EXECUTABLE}")
+elseif(DEFINED PYTHON_EXECUTABLE)
+  set(_Python_EXECUTABLE "${PYTHON_EXECUTABLE}")
+else()
+  message(FATAL_ERROR "No Python executable defined (should not be possible at this stage)")
+endif()
 
-add_custom_target(check ${CMAKE_COMMAND} -E env PYTHONPATH=$<TARGET_FILE_DIR:test_cmake_build>
-                  ${PYTHON_EXECUTABLE} ${PROJECT_SOURCE_DIR}/../test.py ${PROJECT_NAME})
+add_custom_target(
+  check_subdirectory_target
+  ${CMAKE_COMMAND}
+  -E
+  env
+  PYTHONPATH=$<TARGET_FILE_DIR:test_subdirectory_target>
+  ${_Python_EXECUTABLE}
+  ${PROJECT_SOURCE_DIR}/../test.py
+  ${PROJECT_NAME})
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_constants_and_functions.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_constants_and_functions.cpp
@@ -74,7 +74,7 @@ struct C {
 #  pragma GCC diagnostic pop
 #endif
 };
-}
+} // namespace test_exc_sp
 
 
 TEST_SUBMODULE(constants_and_functions, m) {
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_constants_and_functions.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_constants_and_functions.py
@@ -1,5 +1,7 @@
 # -*- coding: utf-8 -*-
-from pybind11_tests import constants_and_functions as m
+import pytest
+
+m = pytest.importorskip("pybind11_tests.constants_and_functions")
 
 
 def test_constants():
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_copy_move.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_copy_move.cpp
@@ -19,14 +19,14 @@ struct empty {
 };
 
 struct lacking_copy_ctor : public empty<lacking_copy_ctor> {
-    lacking_copy_ctor() {}
+    lacking_copy_ctor() = default;
     lacking_copy_ctor(const lacking_copy_ctor& other) = delete;
 };
 
 template <> lacking_copy_ctor empty<lacking_copy_ctor>::instance_ = {};
 
 struct lacking_move_ctor : public empty<lacking_move_ctor> {
-    lacking_move_ctor() {}
+    lacking_move_ctor() = default;
     lacking_move_ctor(const lacking_move_ctor& other) = delete;
     lacking_move_ctor(lacking_move_ctor&& other) = delete;
 };
@@ -175,14 +175,20 @@ TEST_SUBMODULE(copy_move_policies, m) {
     m.attr("has_optional") = false;
 #endif
 
-    // #70 compilation issue if operator new is not public
+    // #70 compilation issue if operator new is not public - simple body added
+    // but not needed on most compilers; MSVC and nvcc don't like a local
+    // struct not having a method defined when declared, since it can not be
+    // added later.
     struct PrivateOpNew {
         int value = 1;
     private:
-#if defined(_MSC_VER)
-#  pragma warning(disable: 4822) // warning C4822: local class member function does not have a body
-#endif
-        void *operator new(size_t bytes);
+        void *operator new(size_t bytes) {
+            void *ptr = std::malloc(bytes);
+            if (ptr)
+                return ptr;
+            else
+                throw std::bad_alloc{};
+        }
     };
     py::class_<PrivateOpNew>(m, "PrivateOpNew").def_readonly("value", &PrivateOpNew::value);
     m.def("private_op_new_value", []() { return PrivateOpNew(); });
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_custom_type_casters.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_custom_type_casters.cpp
@@ -58,7 +58,8 @@ public:
         return py::none().release();
     }
 };
-}}
+} // namespace detail
+} // namespace pybind11
 
 // test_custom_caster_destruction
 class DestructionTester {
@@ -79,7 +80,8 @@ template <> struct type_caster<Destructi
         return py::bool_(true).release();
     }
 };
-}}
+} // namespace detail
+} // namespace pybind11
 
 TEST_SUBMODULE(custom_type_casters, m) {
     // test_custom_type_casters
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_eigen.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_eigen.cpp
@@ -87,8 +87,6 @@ TEST_SUBMODULE(eigen, m) {
     using SparseMatrixR = Eigen::SparseMatrix<float, Eigen::RowMajor>;
     using SparseMatrixC = Eigen::SparseMatrix<float>;
 
-    m.attr("have_eigen") = true;
-
     // various tests
     m.def("double_col", [](const Eigen::VectorXf &x) -> Eigen::VectorXf { return 2.0f * x; });
     m.def("double_row", [](const Eigen::RowVectorXf &x) -> Eigen::RowVectorXf { return 2.0f * x; });
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_eigen.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_eigen.py
@@ -2,17 +2,15 @@
 import pytest
 from pybind11_tests import ConstructorStats
 
-pytestmark = pytest.requires_eigen_and_numpy
+np = pytest.importorskip("numpy")
+m = pytest.importorskip("pybind11_tests.eigen")
 
-with pytest.suppress(ImportError):
-    from pybind11_tests import eigen as m
-    import numpy as np
-
-    ref = np.array([[ 0.,  3,  0,  0,  0, 11],
-                    [22,  0,  0,  0, 17, 11],
-                    [ 7,  5,  0,  1,  0, 11],
-                    [ 0,  0,  0,  0,  0, 11],
-                    [ 0,  0, 14,  0,  8, 11]])
+
+ref = np.array([[ 0.,  3,  0,  0,  0, 11],
+                [22,  0,  0,  0, 17, 11],
+                [ 7,  5,  0,  1,  0, 11],
+                [ 0,  0,  0,  0,  0, 11],
+                [ 0,  0, 14,  0,  8, 11]])
 
 
 def assert_equal_ref(mat):
@@ -646,8 +644,8 @@ def test_named_arguments():
     assert str(excinfo.value) == 'Nonconformable matrices!'
 
 
-@pytest.requires_eigen_and_scipy
 def test_sparse():
+    pytest.importorskip("scipy")
     assert_sparse_equal_ref(m.sparse_r())
     assert_sparse_equal_ref(m.sparse_c())
     assert_sparse_equal_ref(m.sparse_copy_r(m.sparse_r()))
@@ -656,8 +654,8 @@ def test_sparse():
     assert_sparse_equal_ref(m.sparse_copy_c(m.sparse_r()))
 
 
-@pytest.requires_eigen_and_scipy
 def test_sparse_signature(doc):
+    pytest.importorskip("scipy")
     assert doc(m.sparse_copy_r) == """
         sparse_copy_r(arg0: scipy.sparse.csr_matrix[numpy.float32]) -> scipy.sparse.csr_matrix[numpy.float32]
     """  # noqa: E501 line too long
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_embed/CMakeLists.txt
+++ gtsam-4.1.0/wrap/pybind11/tests/test_embed/CMakeLists.txt
@@ -1,41 +1,43 @@
-if(${PYTHON_MODULE_EXTENSION} MATCHES "pypy")
-  add_custom_target(cpptest)  # Dummy target on PyPy. Embedding is not supported.
+if("${PYTHON_MODULE_EXTENSION}" MATCHES "pypy" OR "${Python_INTERPRETER_ID}" STREQUAL "PyPy")
+  add_custom_target(cpptest) # Dummy target on PyPy. Embedding is not supported.
   set(_suppress_unused_variable_warning "${DOWNLOAD_CATCH}")
   return()
 endif()
 
-find_package(Catch 1.9.3)
+find_package(Catch 2.13.0)
+
 if(CATCH_FOUND)
   message(STATUS "Building interpreter tests using Catch v${CATCH_VERSION}")
 else()
   message(STATUS "Catch not detected. Interpreter tests will be skipped. Install Catch headers"
-                 " manually or use `cmake -DDOWNLOAD_CATCH=1` to fetch them automatically.")
+                 " manually or use `cmake -DDOWNLOAD_CATCH=ON` to fetch them automatically.")
   return()
 endif()
 
-add_executable(test_embed
-  catch.cpp
-  test_interpreter.cpp
-)
-target_include_directories(test_embed PRIVATE ${CATCH_INCLUDE_DIR})
+find_package(Threads REQUIRED)
+
+add_executable(test_embed catch.cpp test_interpreter.cpp)
 pybind11_enable_warnings(test_embed)
 
-if(NOT CMAKE_VERSION VERSION_LESS 3.0)
-  target_link_libraries(test_embed PRIVATE pybind11::embed)
-else()
-  target_include_directories(test_embed PRIVATE ${PYBIND11_INCLUDE_DIR} ${PYTHON_INCLUDE_DIRS})
-  target_compile_options(test_embed PRIVATE ${PYBIND11_CPP_STANDARD})
-  target_link_libraries(test_embed PRIVATE ${PYTHON_LIBRARIES})
-endif()
+target_link_libraries(test_embed PRIVATE pybind11::embed Catch2::Catch2 Threads::Threads)
 
-find_package(Threads REQUIRED)
-target_link_libraries(test_embed PUBLIC ${CMAKE_THREAD_LIBS_INIT})
+if(NOT CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_CURRENT_BINARY_DIR)
+  file(COPY test_interpreter.py DESTINATION "${CMAKE_CURRENT_BINARY_DIR}")
+endif()
 
-add_custom_target(cpptest COMMAND $<TARGET_FILE:test_embed>
-                  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
+add_custom_target(
+  cpptest
+  COMMAND "$<TARGET_FILE:test_embed>"
+  WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}")
 
 pybind11_add_module(external_module THIN_LTO external_module.cpp)
-set_target_properties(external_module PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
+set_target_properties(external_module PROPERTIES LIBRARY_OUTPUT_DIRECTORY
+                                                 "${CMAKE_CURRENT_BINARY_DIR}")
+foreach(config ${CMAKE_CONFIGURATION_TYPES})
+  string(TOUPPER ${config} config)
+  set_target_properties(external_module PROPERTIES LIBRARY_OUTPUT_DIRECTORY_${config}
+                                                   "${CMAKE_CURRENT_BINARY_DIR}")
+endforeach()
 add_dependencies(cpptest external_module)
 
 add_dependencies(check cpptest)
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_embed/test_interpreter.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_embed/test_interpreter.cpp
@@ -30,7 +30,7 @@ private:
 class PyWidget final : public Widget {
     using Widget::Widget;
 
-    int the_answer() const override { PYBIND11_OVERLOAD_PURE(int, Widget, the_answer); }
+    int the_answer() const override { PYBIND11_OVERRIDE_PURE(int, Widget, the_answer); }
 };
 
 PYBIND11_EMBEDDED_MODULE(widget_module, m) {
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_eval.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_eval.py
@@ -1,6 +1,10 @@
 # -*- coding: utf-8 -*-
 import os
+
 import pytest
+
+import env  # noqa: F401
+
 from pybind11_tests import eval_ as m
 
 
@@ -15,7 +19,7 @@ def test_evals(capture):
     assert m.test_eval_failure()
 
 
-@pytest.unsupported_on_pypy3
+@pytest.mark.xfail("env.PYPY and not env.PY2", raises=RuntimeError)
 def test_eval_file():
     filename = os.path.join(os.path.dirname(__file__), "test_eval_call.py")
     assert m.test_eval_file(filename)
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_exceptions.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_exceptions.cpp
@@ -13,7 +13,7 @@
 class MyException : public std::exception {
 public:
     explicit MyException(const char * m) : message{m} {}
-    virtual const char * what() const noexcept override {return message.c_str();}
+    const char * what() const noexcept override {return message.c_str();}
 private:
     std::string message = "";
 };
@@ -22,7 +22,7 @@ private:
 class MyException2 : public std::exception {
 public:
     explicit MyException2(const char * m) : message{m} {}
-    virtual const char * what() const noexcept override {return message.c_str();}
+    const char * what() const noexcept override {return message.c_str();}
 private:
     std::string message = "";
 };
@@ -41,7 +41,7 @@ private:
 class MyException4 : public std::exception {
 public:
     explicit MyException4(const char * m) : message{m} {}
-    virtual const char * what() const noexcept override {return message.c_str();}
+    const char * what() const noexcept override {return message.c_str();}
 private:
     std::string message = "";
 };
@@ -65,6 +65,25 @@ struct PythonCallInDestructor {
     py::dict d;
 };
 
+
+
+struct PythonAlreadySetInDestructor {
+    PythonAlreadySetInDestructor(const py::str &s) : s(s) {}
+    ~PythonAlreadySetInDestructor() {
+        py::dict foo;
+        try {
+            // Assign to a py::object to force read access of nonexistent dict entry
+            py::object o = foo["bar"];
+        }
+        catch (py::error_already_set& ex) {
+            ex.discard_as_unraisable(s);
+        }
+    }
+
+    py::str s;
+};
+
+
 TEST_SUBMODULE(exceptions, m) {
     m.def("throw_std_exception", []() {
         throw std::runtime_error("This exception was intentionally thrown.");
@@ -183,6 +202,11 @@ TEST_SUBMODULE(exceptions, m) {
         return false;
     });
 
+    m.def("python_alreadyset_in_destructor", [](py::str s) {
+        PythonAlreadySetInDestructor alreadyset_in_destructor(s);
+        return true;
+    });
+
     // test_nested_throws
     m.def("try_catch", [m](py::object exc_type, py::function f, py::args args) {
         try { f(*args); }
@@ -194,4 +218,7 @@ TEST_SUBMODULE(exceptions, m) {
         }
     });
 
+    // Test repr that cannot be displayed
+    m.def("simple_bool_passthrough", [](bool x) {return x;});
+
 }
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_exceptions.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_exceptions.py
@@ -1,4 +1,6 @@
 # -*- coding: utf-8 -*-
+import sys
+
 import pytest
 
 from pybind11_tests import exceptions as m
@@ -48,6 +50,33 @@ def test_python_call_in_catch():
     assert d["good"] is True
 
 
+def test_python_alreadyset_in_destructor(monkeypatch, capsys):
+    hooked = False
+    triggered = [False]  # mutable, so Python 2.7 closure can modify it
+
+    if hasattr(sys, 'unraisablehook'):  # Python 3.8+
+        hooked = True
+        default_hook = sys.unraisablehook
+
+        def hook(unraisable_hook_args):
+            exc_type, exc_value, exc_tb, err_msg, obj = unraisable_hook_args
+            if obj == 'already_set demo':
+                triggered[0] = True
+            default_hook(unraisable_hook_args)
+            return
+
+        # Use monkeypatch so pytest can apply and remove the patch as appropriate
+        monkeypatch.setattr(sys, 'unraisablehook', hook)
+
+    assert m.python_alreadyset_in_destructor('already_set demo') is True
+    if hooked:
+        assert triggered[0] is True
+
+    _, captured_stderr = capsys.readouterr()
+    # Error message is different in Python 2 and 3, check for words that appear in both
+    assert 'ignored' in captured_stderr and 'already_set demo' in captured_stderr
+
+
 def test_exception_matches():
     assert m.exception_matches()
     assert m.exception_matches_base()
@@ -149,3 +178,14 @@ def test_nested_throws(capture):
     with pytest.raises(m.MyException5) as excinfo:
         m.try_catch(m.MyException, pycatch, m.MyException, m.throws5)
     assert str(excinfo.value) == "this is a helper-defined translated exception"
+
+
+# This can often happen if you wrap a pybind11 class in a Python wrapper
+def test_invalid_repr():
+
+    class MyRepr(object):
+        def __repr__(self):
+            raise AttributeError("Example error")
+
+    with pytest.raises(TypeError):
+        m.simple_bool_passthrough(MyRepr())
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_factory_constructors.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_factory_constructors.cpp
@@ -11,6 +11,7 @@
 #include "pybind11_tests.h"
 #include "constructor_stats.h"
 #include <cmath>
+#include <new>
 
 // Classes for testing python construction via C++ factory function:
 // Not publicly constructible, copyable, or movable:
@@ -57,13 +58,13 @@ class TestFactory4 : public TestFactory3
 public:
     TestFactory4() : TestFactory3() { print_default_created(this); }
     TestFactory4(int v) : TestFactory3(v) { print_created(this, v); }
-    virtual ~TestFactory4() { print_destroyed(this); }
+    ~TestFactory4() override { print_destroyed(this); }
 };
 // Another class for an invalid downcast test
 class TestFactory5 : public TestFactory3 {
 public:
     TestFactory5(int i) : TestFactory3(i) { print_created(this, i); }
-    virtual ~TestFactory5() { print_destroyed(this); }
+    ~TestFactory5() override { print_destroyed(this); }
 };
 
 class TestFactory6 {
@@ -87,8 +88,8 @@ public:
     PyTF6(PyTF6 &&f) : TestFactory6(std::move(f)) { print_move_created(this); }
     PyTF6(const PyTF6 &f) : TestFactory6(f) { print_copy_created(this); }
     PyTF6(std::string s) : TestFactory6((int) s.size()) { alias = true; print_created(this, s); }
-    virtual ~PyTF6() { print_destroyed(this); }
-    int get() override { PYBIND11_OVERLOAD(int, TestFactory6, get, /*no args*/); }
+    ~PyTF6() override { print_destroyed(this); }
+    int get() override { PYBIND11_OVERRIDE(int, TestFactory6, get, /*no args*/); }
 };
 
 class TestFactory7 {
@@ -108,8 +109,8 @@ public:
     PyTF7(int i) : TestFactory7(i) { alias = true; print_created(this, i); }
     PyTF7(PyTF7 &&f) : TestFactory7(std::move(f)) { print_move_created(this); }
     PyTF7(const PyTF7 &f) : TestFactory7(f) { print_copy_created(this); }
-    virtual ~PyTF7() { print_destroyed(this); }
-    int get() override { PYBIND11_OVERLOAD(int, TestFactory7, get, /*no args*/); }
+    ~PyTF7() override { print_destroyed(this); }
+    int get() override { PYBIND11_OVERRIDE(int, TestFactory7, get, /*no args*/); }
 };
 
 
@@ -154,6 +155,8 @@ TEST_SUBMODULE(factory_constructors, m)
     MAKE_TAG_TYPE(TF4);
     MAKE_TAG_TYPE(TF5);
     MAKE_TAG_TYPE(null_ptr);
+    MAKE_TAG_TYPE(null_unique_ptr);
+    MAKE_TAG_TYPE(null_shared_ptr);
     MAKE_TAG_TYPE(base);
     MAKE_TAG_TYPE(invalid_base);
     MAKE_TAG_TYPE(alias);
@@ -194,6 +197,8 @@ TEST_SUBMODULE(factory_constructors, m)
 
         // Returns nullptr:
         .def(py::init([](null_ptr_tag) { return (TestFactory3 *) nullptr; }))
+        .def(py::init([](null_unique_ptr_tag) { return std::unique_ptr<TestFactory3>(); }))
+        .def(py::init([](null_shared_ptr_tag) { return std::shared_ptr<TestFactory3>(); }))
 
         .def_readwrite("value", &TestFactory3::value)
         ;
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_factory_constructors.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_factory_constructors.py
@@ -2,6 +2,8 @@
 import pytest
 import re
 
+import env  # noqa: F401
+
 from pybind11_tests import factory_constructors as m
 from pybind11_tests.factory_constructors import tag
 from pybind11_tests import ConstructorStats
@@ -39,9 +41,12 @@ def test_init_factory_basic():
     z3 = m.TestFactory3("bye")
     assert z3.value == "bye"
 
-    with pytest.raises(TypeError) as excinfo:
-        m.TestFactory3(tag.null_ptr)
-    assert str(excinfo.value) == "pybind11::init(): factory function returned nullptr"
+    for null_ptr_kind in [tag.null_ptr,
+                          tag.null_unique_ptr,
+                          tag.null_shared_ptr]:
+        with pytest.raises(TypeError) as excinfo:
+            m.TestFactory3(null_ptr_kind)
+        assert str(excinfo.value) == "pybind11::init(): factory function returned nullptr"
 
     assert [i.alive() for i in cstats] == [3, 3, 3]
     assert ConstructorStats.detail_reg_inst() == n_inst + 9
@@ -331,10 +336,10 @@ def strip_comments(s):
     return re.sub(r'\s+#.*', '', s)
 
 
-def test_reallocations(capture, msg):
+def test_reallocation_a(capture, msg):
     """When the constructor is overloaded, previous overloads can require a preallocated value.
     This test makes sure that such preallocated values only happen when they might be necessary,
-    and that they are deallocated properly"""
+    and that they are deallocated properly."""
 
     pytest.gc_collect()
 
@@ -348,6 +353,9 @@ def test_reallocations(capture, msg):
         ~NoisyAlloc()
         noisy delete
     """
+
+
+def test_reallocation_b(capture, msg):
     with capture:
         create_and_destroy(1.5)
     assert msg(capture) == strip_comments("""
@@ -360,6 +368,8 @@ def test_reallocations(capture, msg):
         noisy delete   # operator delete
     """)
 
+
+def test_reallocation_c(capture, msg):
     with capture:
         create_and_destroy(2, 3)
     assert msg(capture) == strip_comments("""
@@ -370,6 +380,8 @@ def test_reallocations(capture, msg):
         noisy delete   # operator delete
     """)
 
+
+def test_reallocation_d(capture, msg):
     with capture:
         create_and_destroy(2.5, 3)
     assert msg(capture) == strip_comments("""
@@ -381,6 +393,8 @@ def test_reallocations(capture, msg):
         noisy delete   # operator delete
     """)
 
+
+def test_reallocation_e(capture, msg):
     with capture:
         create_and_destroy(3.5, 4.5)
     assert msg(capture) == strip_comments("""
@@ -392,6 +406,8 @@ def test_reallocations(capture, msg):
         noisy delete   # operator delete
     """)
 
+
+def test_reallocation_f(capture, msg):
     with capture:
         create_and_destroy(4, 0.5)
     assert msg(capture) == strip_comments("""
@@ -404,6 +420,8 @@ def test_reallocations(capture, msg):
         noisy delete   # operator delete
     """)
 
+
+def test_reallocation_g(capture, msg):
     with capture:
         create_and_destroy(5, "hi")
     assert msg(capture) == strip_comments("""
@@ -418,7 +436,7 @@ def test_reallocations(capture, msg):
     """)
 
 
-@pytest.unsupported_on_py2
+@pytest.mark.skipif("env.PY2")
 def test_invalid_self():
     """Tests invocation of the pybind-registered base class with an invalid `self` argument.  You
     can only actually do this on Python 3: Python 2 raises an exception itself if you try."""
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_gil_scoped.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_gil_scoped.cpp
@@ -13,17 +13,19 @@
 
 class VirtClass  {
 public:
-    virtual ~VirtClass() {}
+    virtual ~VirtClass() = default;
+    VirtClass() = default;
+    VirtClass(const VirtClass&) = delete;
     virtual void virtual_func() {}
     virtual void pure_virtual_func() = 0;
 };
 
 class PyVirtClass : public VirtClass {
     void virtual_func() override {
-        PYBIND11_OVERLOAD(void, VirtClass, virtual_func,);
+        PYBIND11_OVERRIDE(void, VirtClass, virtual_func,);
     }
     void pure_virtual_func() override {
-        PYBIND11_OVERLOAD_PURE(void, VirtClass, pure_virtual_func,);
+        PYBIND11_OVERRIDE_PURE(void, VirtClass, pure_virtual_func,);
     }
 };
 
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_gil_scoped.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_gil_scoped.py
@@ -1,6 +1,11 @@
 # -*- coding: utf-8 -*-
 import multiprocessing
 import threading
+
+import pytest
+
+import env  # noqa: F401
+
 from pybind11_tests import gil_scoped as m
 
 
@@ -49,6 +54,8 @@ def _python_to_cpp_to_python_from_thread
         thread.join()
 
 
+# TODO: FIXME, sometimes returns -11 instead of 0
+@pytest.mark.xfail("env.PY > (3,8) and env.MACOS", strict=False)
 def test_python_to_cpp_to_python_from_thread():
     """Makes sure there is no GIL deadlock when running in a thread.
 
@@ -57,6 +64,8 @@ def test_python_to_cpp_to_python_from_th
     assert _run_in_process(_python_to_cpp_to_python_from_threads, 1) == 0
 
 
+# TODO: FIXME
+@pytest.mark.xfail("env.PY > (3,8) and env.MACOS", strict=False)
 def test_python_to_cpp_to_python_from_thread_multiple_parallel():
     """Makes sure there is no GIL deadlock when running in a thread multiple times in parallel.
 
@@ -65,6 +74,8 @@ def test_python_to_cpp_to_python_from_th
     assert _run_in_process(_python_to_cpp_to_python_from_threads, 8, parallel=True) == 0
 
 
+# TODO: FIXME
+@pytest.mark.xfail("env.PY > (3,8) and env.MACOS", strict=False)
 def test_python_to_cpp_to_python_from_thread_multiple_sequential():
     """Makes sure there is no GIL deadlock when running in a thread multiple times sequentially.
 
@@ -73,6 +84,8 @@ def test_python_to_cpp_to_python_from_th
     assert _run_in_process(_python_to_cpp_to_python_from_threads, 8, parallel=False) == 0
 
 
+# TODO: FIXME
+@pytest.mark.xfail("env.PY > (3,8) and env.MACOS", strict=False)
 def test_python_to_cpp_to_python_from_process():
     """Makes sure there is no GIL deadlock when using processes.
 
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_kwargs_and_defaults.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_kwargs_and_defaults.cpp
@@ -95,32 +95,48 @@ TEST_SUBMODULE(kwargs_and_defaults, m) {
 //    m.def("bad_args7", [](py::kwargs, py::kwargs) {});
 
     // test_keyword_only_args
-    m.def("kwonly_all", [](int i, int j) { return py::make_tuple(i, j); },
-            py::kwonly(), py::arg("i"), py::arg("j"));
-    m.def("kwonly_some", [](int i, int j, int k) { return py::make_tuple(i, j, k); },
-            py::arg(), py::kwonly(), py::arg("j"), py::arg("k"));
-    m.def("kwonly_with_defaults", [](int i, int j, int k, int z) { return py::make_tuple(i, j, k, z); },
-            py::arg() = 3, "j"_a = 4, py::kwonly(), "k"_a = 5, "z"_a);
-    m.def("kwonly_mixed", [](int i, int j) { return py::make_tuple(i, j); },
-            "i"_a, py::kwonly(), "j"_a);
-    m.def("kwonly_plus_more", [](int i, int j, int k, py::kwargs kwargs) {
+    m.def("kw_only_all", [](int i, int j) { return py::make_tuple(i, j); },
+            py::kw_only(), py::arg("i"), py::arg("j"));
+    m.def("kw_only_some", [](int i, int j, int k) { return py::make_tuple(i, j, k); },
+            py::arg(), py::kw_only(), py::arg("j"), py::arg("k"));
+    m.def("kw_only_with_defaults", [](int i, int j, int k, int z) { return py::make_tuple(i, j, k, z); },
+            py::arg() = 3, "j"_a = 4, py::kw_only(), "k"_a = 5, "z"_a);
+    m.def("kw_only_mixed", [](int i, int j) { return py::make_tuple(i, j); },
+            "i"_a, py::kw_only(), "j"_a);
+    m.def("kw_only_plus_more", [](int i, int j, int k, py::kwargs kwargs) {
             return py::make_tuple(i, j, k, kwargs); },
-            py::arg() /* positional */, py::arg("j") = -1 /* both */, py::kwonly(), py::arg("k") /* kw-only */);
+            py::arg() /* positional */, py::arg("j") = -1 /* both */, py::kw_only(), py::arg("k") /* kw-only */);
 
-    m.def("register_invalid_kwonly", [](py::module m) {
-        m.def("bad_kwonly", [](int i, int j) { return py::make_tuple(i, j); },
-                py::kwonly(), py::arg() /* invalid unnamed argument */, "j"_a);
+    m.def("register_invalid_kw_only", [](py::module m) {
+        m.def("bad_kw_only", [](int i, int j) { return py::make_tuple(i, j); },
+                py::kw_only(), py::arg() /* invalid unnamed argument */, "j"_a);
     });
 
+    // test_positional_only_args
+    m.def("pos_only_all", [](int i, int j) { return py::make_tuple(i, j); },
+            py::arg("i"), py::arg("j"), py::pos_only());
+    m.def("pos_only_mix", [](int i, int j) { return py::make_tuple(i, j); },
+            py::arg("i"), py::pos_only(), py::arg("j"));
+    m.def("pos_kw_only_mix", [](int i, int j, int k) { return py::make_tuple(i, j, k); },
+            py::arg("i"), py::pos_only(), py::arg("j"), py::kw_only(), py::arg("k"));
+    m.def("pos_only_def_mix", [](int i, int j, int k) { return py::make_tuple(i, j, k); },
+            py::arg("i"), py::arg("j") = 2, py::pos_only(), py::arg("k") = 3);
+
+
     // These should fail to compile:
-    // argument annotations are required when using kwonly
-//    m.def("bad_kwonly1", [](int) {}, py::kwonly());
-    // can't specify both `py::kwonly` and a `py::args` argument
-//    m.def("bad_kwonly2", [](int i, py::args) {}, py::kwonly(), "i"_a);
+    // argument annotations are required when using kw_only
+//    m.def("bad_kw_only1", [](int) {}, py::kw_only());
+    // can't specify both `py::kw_only` and a `py::args` argument
+//    m.def("bad_kw_only2", [](int i, py::args) {}, py::kw_only(), "i"_a);
 
     // test_function_signatures (along with most of the above)
     struct KWClass { void foo(int, float) {} };
     py::class_<KWClass>(m, "KWClass")
         .def("foo0", &KWClass::foo)
         .def("foo1", &KWClass::foo, "x"_a, "y"_a);
+
+    // Make sure a class (not an instance) can be used as a default argument.
+    // The return value doesn't matter, only that the module is importable.
+    m.def("class_default_argument", [](py::object a) { return py::repr(a); },
+        "a"_a = py::module::import("decimal").attr("Decimal"));
 }
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_kwargs_and_defaults.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_kwargs_and_defaults.py
@@ -1,5 +1,8 @@
 # -*- coding: utf-8 -*-
 import pytest
+
+import env  # noqa: F401
+
 from pybind11_tests import kwargs_and_defaults as m
 
 
@@ -109,43 +112,92 @@ def test_mixed_args_and_kwargs(msg):
 
 
 def test_keyword_only_args(msg):
-    assert m.kwonly_all(i=1, j=2) == (1, 2)
-    assert m.kwonly_all(j=1, i=2) == (2, 1)
+    assert m.kw_only_all(i=1, j=2) == (1, 2)
+    assert m.kw_only_all(j=1, i=2) == (2, 1)
 
     with pytest.raises(TypeError) as excinfo:
-        assert m.kwonly_all(i=1) == (1,)
+        assert m.kw_only_all(i=1) == (1,)
     assert "incompatible function arguments" in str(excinfo.value)
 
     with pytest.raises(TypeError) as excinfo:
-        assert m.kwonly_all(1, 2) == (1, 2)
+        assert m.kw_only_all(1, 2) == (1, 2)
     assert "incompatible function arguments" in str(excinfo.value)
 
-    assert m.kwonly_some(1, k=3, j=2) == (1, 2, 3)
+    assert m.kw_only_some(1, k=3, j=2) == (1, 2, 3)
 
-    assert m.kwonly_with_defaults(z=8) == (3, 4, 5, 8)
-    assert m.kwonly_with_defaults(2, z=8) == (2, 4, 5, 8)
-    assert m.kwonly_with_defaults(2, j=7, k=8, z=9) == (2, 7, 8, 9)
-    assert m.kwonly_with_defaults(2, 7, z=9, k=8) == (2, 7, 8, 9)
+    assert m.kw_only_with_defaults(z=8) == (3, 4, 5, 8)
+    assert m.kw_only_with_defaults(2, z=8) == (2, 4, 5, 8)
+    assert m.kw_only_with_defaults(2, j=7, k=8, z=9) == (2, 7, 8, 9)
+    assert m.kw_only_with_defaults(2, 7, z=9, k=8) == (2, 7, 8, 9)
 
-    assert m.kwonly_mixed(1, j=2) == (1, 2)
-    assert m.kwonly_mixed(j=2, i=3) == (3, 2)
-    assert m.kwonly_mixed(i=2, j=3) == (2, 3)
+    assert m.kw_only_mixed(1, j=2) == (1, 2)
+    assert m.kw_only_mixed(j=2, i=3) == (3, 2)
+    assert m.kw_only_mixed(i=2, j=3) == (2, 3)
 
-    assert m.kwonly_plus_more(4, 5, k=6, extra=7) == (4, 5, 6, {'extra': 7})
-    assert m.kwonly_plus_more(3, k=5, j=4, extra=6) == (3, 4, 5, {'extra': 6})
-    assert m.kwonly_plus_more(2, k=3, extra=4) == (2, -1, 3, {'extra': 4})
+    assert m.kw_only_plus_more(4, 5, k=6, extra=7) == (4, 5, 6, {'extra': 7})
+    assert m.kw_only_plus_more(3, k=5, j=4, extra=6) == (3, 4, 5, {'extra': 6})
+    assert m.kw_only_plus_more(2, k=3, extra=4) == (2, -1, 3, {'extra': 4})
 
     with pytest.raises(TypeError) as excinfo:
-        assert m.kwonly_mixed(i=1) == (1,)
+        assert m.kw_only_mixed(i=1) == (1,)
     assert "incompatible function arguments" in str(excinfo.value)
 
     with pytest.raises(RuntimeError) as excinfo:
-        m.register_invalid_kwonly(m)
+        m.register_invalid_kw_only(m)
     assert msg(excinfo.value) == """
-        arg(): cannot specify an unnamed argument after an kwonly() annotation
+        arg(): cannot specify an unnamed argument after an kw_only() annotation
     """
 
 
+def test_positional_only_args(msg):
+    assert m.pos_only_all(1, 2) == (1, 2)
+    assert m.pos_only_all(2, 1) == (2, 1)
+
+    with pytest.raises(TypeError) as excinfo:
+        m.pos_only_all(i=1, j=2)
+    assert "incompatible function arguments" in str(excinfo.value)
+
+    assert m.pos_only_mix(1, 2) == (1, 2)
+    assert m.pos_only_mix(2, j=1) == (2, 1)
+
+    with pytest.raises(TypeError) as excinfo:
+        m.pos_only_mix(i=1, j=2)
+    assert "incompatible function arguments" in str(excinfo.value)
+
+    assert m.pos_kw_only_mix(1, 2, k=3) == (1, 2, 3)
+    assert m.pos_kw_only_mix(1, j=2, k=3) == (1, 2, 3)
+
+    with pytest.raises(TypeError) as excinfo:
+        m.pos_kw_only_mix(i=1, j=2, k=3)
+    assert "incompatible function arguments" in str(excinfo.value)
+
+    with pytest.raises(TypeError) as excinfo:
+        m.pos_kw_only_mix(1, 2, 3)
+    assert "incompatible function arguments" in str(excinfo.value)
+
+    with pytest.raises(TypeError) as excinfo:
+        m.pos_only_def_mix()
+    assert "incompatible function arguments" in str(excinfo.value)
+
+    assert m.pos_only_def_mix(1) == (1, 2, 3)
+    assert m.pos_only_def_mix(1, 4) == (1, 4, 3)
+    assert m.pos_only_def_mix(1, 4, 7) == (1, 4, 7)
+    assert m.pos_only_def_mix(1, 4, k=7) == (1, 4, 7)
+
+    with pytest.raises(TypeError) as excinfo:
+        m.pos_only_def_mix(1, j=4)
+    assert "incompatible function arguments" in str(excinfo.value)
+
+
+def test_signatures():
+    assert "kw_only_all(*, i: int, j: int) -> tuple\n" == m.kw_only_all.__doc__
+    assert "kw_only_mixed(i: int, *, j: int) -> tuple\n" == m.kw_only_mixed.__doc__
+    assert "pos_only_all(i: int, j: int, /) -> tuple\n" == m.pos_only_all.__doc__
+    assert "pos_only_mix(i: int, /, j: int) -> tuple\n" == m.pos_only_mix.__doc__
+    assert "pos_kw_only_mix(i: int, /, j: int, *, k: int) -> tuple\n" == m.pos_kw_only_mix.__doc__
+
+
+@pytest.mark.xfail("env.PYPY and env.PY2", reason="PyPy2 doesn't double count")
 def test_args_refcount():
     """Issue/PR #1216 - py::args elements get double-inc_ref()ed when combined with regular
     arguments"""
@@ -184,3 +236,5 @@ def test_args_refcount():
     # tuple without having to inc_ref the individual elements, but here we can't, hence the extra
     # refs.
     assert m.mixed_args_refcount(myval, myval, myval) == (exp3 + 3, exp3 + 3, exp3 + 3)
+
+    assert m.class_default_argument() == "<class 'decimal.Decimal'>"
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_local_bindings.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_local_bindings.py
@@ -1,6 +1,8 @@
 # -*- coding: utf-8 -*-
 import pytest
 
+import env  # noqa: F401
+
 from pybind11_tests import local_bindings as m
 
 
@@ -153,7 +155,7 @@ def test_internal_locals_differ():
     assert m.local_cpp_types_addr() != cm.local_cpp_types_addr()
 
 
-@pytest.bug_in_pypy
+@pytest.mark.xfail("env.PYPY")
 def test_stl_caster_vs_stl_bind(msg):
     """One module uses a generic vector caster from `<pybind11/stl.h>` while the other
     exports `std::vector<int>` via `py:bind_vector` and `py::module_local`"""
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_methods_and_attributes.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_methods_and_attributes.cpp
@@ -289,6 +289,7 @@ TEST_SUBMODULE(methods_and_attributes, m
     class DynamicClass {
     public:
         DynamicClass() { print_default_created(this); }
+        DynamicClass(const DynamicClass&) = delete;
         ~DynamicClass() { print_destroyed(this); }
     };
     py::class_<DynamicClass>(m, "DynamicClass", py::dynamic_attr())
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_methods_and_attributes.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_methods_and_attributes.py
@@ -1,5 +1,8 @@
 # -*- coding: utf-8 -*-
 import pytest
+
+import env  # noqa: F401
+
 from pybind11_tests import methods_and_attributes as m
 from pybind11_tests import ConstructorStats
 
@@ -257,8 +260,8 @@ def test_property_rvalue_policy():
     assert os.value == 1
 
 
-# https://bitbucket.org/pypy/pypy/issues/2447
-@pytest.unsupported_on_pypy
+# https://foss.heptapod.net/pypy/pypy/-/issues/2447
+@pytest.mark.xfail("env.PYPY")
 def test_dynamic_attributes():
     instance = m.DynamicClass()
     assert not hasattr(instance, "foo")
@@ -299,8 +302,8 @@ def test_dynamic_attributes():
         assert cstats.alive() == 0
 
 
-# https://bitbucket.org/pypy/pypy/issues/2447
-@pytest.unsupported_on_pypy
+# https://foss.heptapod.net/pypy/pypy/-/issues/2447
+@pytest.mark.xfail("env.PYPY")
 def test_cyclic_gc():
     # One object references itself
     instance = m.DynamicClass()
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_multiple_inheritance.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_multiple_inheritance.py
@@ -1,5 +1,8 @@
 # -*- coding: utf-8 -*-
 import pytest
+
+import env  # noqa: F401
+
 from pybind11_tests import ConstructorStats
 from pybind11_tests import multiple_inheritance as m
 
@@ -11,7 +14,8 @@ def test_multiple_inheritance_cpp():
     assert mt.bar() == 4
 
 
-@pytest.bug_in_pypy
+@pytest.mark.skipif("env.PYPY and env.PY2")
+@pytest.mark.xfail("env.PYPY and not env.PY2")
 def test_multiple_inheritance_mix1():
     class Base1:
         def __init__(self, i):
@@ -32,7 +36,6 @@ def test_multiple_inheritance_mix1():
 
 
 def test_multiple_inheritance_mix2():
-
     class Base2:
         def __init__(self, i):
             self.i = i
@@ -51,7 +54,8 @@ def test_multiple_inheritance_mix2():
     assert mt.bar() == 4
 
 
-@pytest.bug_in_pypy
+@pytest.mark.skipif("env.PYPY and env.PY2")
+@pytest.mark.xfail("env.PYPY and not env.PY2")
 def test_multiple_inheritance_python():
 
     class MI1(m.Base1, m.Base2):
@@ -256,7 +260,7 @@ def test_mi_static_properties():
         assert d.static_value == 0
 
 
-@pytest.unsupported_on_pypy_lt_6
+# Requires PyPy 6+
 def test_mi_dynamic_attributes():
     """Mixing bases with and without dynamic attribute support"""
 
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_numpy_array.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_numpy_array.cpp
@@ -212,7 +212,7 @@ TEST_SUBMODULE(numpy_array, sm) {
         .def(py::init<>())
         .def("numpy_view", [](py::object &obj) {
             py::print("ArrayClass::numpy_view()");
-            ArrayClass &a = obj.cast<ArrayClass&>();
+            auto &a = obj.cast<ArrayClass&>();
             return py::array_t<int>({2}, {4}, a.data, obj);
         }
     );
@@ -362,7 +362,7 @@ TEST_SUBMODULE(numpy_array, sm) {
     // test_array_resize
     // reshape array to 2D without changing size
     sm.def("array_reshape2", [](py::array_t<double> a) {
-        const ssize_t dim_sz = (ssize_t)std::sqrt(a.size());
+        const auto dim_sz = (ssize_t)std::sqrt(a.size());
         if (dim_sz * dim_sz != a.size())
             throw std::domain_error("array_reshape2: input array total size is not a squared integer");
         a.resize({dim_sz, dim_sz});
@@ -382,9 +382,45 @@ TEST_SUBMODULE(numpy_array, sm) {
         return a;
     });
 
-#if PY_MAJOR_VERSION >= 3
-        sm.def("index_using_ellipsis", [](py::array a) {
-            return a[py::make_tuple(0, py::ellipsis(), 0)];
-        });
-#endif
+    sm.def("index_using_ellipsis", [](py::array a) {
+        return a[py::make_tuple(0, py::ellipsis(), 0)];
+    });
+
+    // test_argument_conversions
+    sm.def("accept_double",
+           [](py::array_t<double, 0>) {},
+           py::arg("a"));
+    sm.def("accept_double_forcecast",
+           [](py::array_t<double, py::array::forcecast>) {},
+           py::arg("a"));
+    sm.def("accept_double_c_style",
+           [](py::array_t<double, py::array::c_style>) {},
+           py::arg("a"));
+    sm.def("accept_double_c_style_forcecast",
+           [](py::array_t<double, py::array::forcecast | py::array::c_style>) {},
+           py::arg("a"));
+    sm.def("accept_double_f_style",
+           [](py::array_t<double, py::array::f_style>) {},
+           py::arg("a"));
+    sm.def("accept_double_f_style_forcecast",
+           [](py::array_t<double, py::array::forcecast | py::array::f_style>) {},
+           py::arg("a"));
+    sm.def("accept_double_noconvert",
+           [](py::array_t<double, 0>) {},
+           py::arg("a").noconvert());
+    sm.def("accept_double_forcecast_noconvert",
+           [](py::array_t<double, py::array::forcecast>) {},
+           py::arg("a").noconvert());
+    sm.def("accept_double_c_style_noconvert",
+           [](py::array_t<double, py::array::c_style>) {},
+           py::arg("a").noconvert());
+    sm.def("accept_double_c_style_forcecast_noconvert",
+           [](py::array_t<double, py::array::forcecast | py::array::c_style>) {},
+           py::arg("a").noconvert());
+    sm.def("accept_double_f_style_noconvert",
+           [](py::array_t<double, py::array::f_style>) {},
+           py::arg("a").noconvert());
+    sm.def("accept_double_f_style_forcecast_noconvert",
+           [](py::array_t<double, py::array::forcecast | py::array::f_style>) {},
+           py::arg("a").noconvert());
 }
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_numpy_array.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_numpy_array.py
@@ -1,11 +1,11 @@
 # -*- coding: utf-8 -*-
 import pytest
-from pybind11_tests import numpy_array as m
 
-pytestmark = pytest.requires_numpy
+import env  # noqa: F401
+
+from pybind11_tests import numpy_array as m
 
-with pytest.suppress(ImportError):
-    import numpy as np
+np = pytest.importorskip("numpy")
 
 
 def test_dtypes():
@@ -243,7 +243,6 @@ def test_numpy_view(capture):
     """
 
 
-@pytest.unsupported_on_pypy
 def test_cast_numpy_int64_to_uint64():
     m.function_taking_uint64(123)
     m.function_taking_uint64(np.uint64(123))
@@ -424,20 +423,65 @@ def test_array_resize(msg):
     assert(b.shape == (8, 8))
 
 
-@pytest.unsupported_on_pypy
+@pytest.mark.xfail("env.PYPY")
 def test_array_create_and_resize(msg):
     a = m.create_and_resize(2)
     assert(a.size == 4)
     assert(np.all(a == 42.))
 
 
-@pytest.unsupported_on_py2
 def test_index_using_ellipsis():
     a = m.index_using_ellipsis(np.zeros((5, 6, 7)))
     assert a.shape == (6,)
 
 
-@pytest.unsupported_on_pypy
+@pytest.mark.parametrize("forcecast", [False, True])
+@pytest.mark.parametrize("contiguity", [None, 'C', 'F'])
+@pytest.mark.parametrize("noconvert", [False, True])
+@pytest.mark.filterwarnings(
+    "ignore:Casting complex values to real discards the imaginary part:numpy.ComplexWarning"
+)
+def test_argument_conversions(forcecast, contiguity, noconvert):
+    function_name = "accept_double"
+    if contiguity == 'C':
+        function_name += "_c_style"
+    elif contiguity == 'F':
+        function_name += "_f_style"
+    if forcecast:
+        function_name += "_forcecast"
+    if noconvert:
+        function_name += "_noconvert"
+    function = getattr(m, function_name)
+
+    for dtype in [np.dtype('float32'), np.dtype('float64'), np.dtype('complex128')]:
+        for order in ['C', 'F']:
+            for shape in [(2, 2), (1, 3, 1, 1), (1, 1, 1), (0,)]:
+                if not noconvert:
+                    # If noconvert is not passed, only complex128 needs to be truncated and
+                    # "cannot be safely obtained". So without `forcecast`, the argument shouldn't
+                    # be accepted.
+                    should_raise = dtype.name == 'complex128' and not forcecast
+                else:
+                    # If noconvert is passed, only float64 and the matching order is accepted.
+                    # If at most one dimension has a size greater than 1, the array is also
+                    # trivially contiguous.
+                    trivially_contiguous = sum(1 for d in shape if d > 1) <= 1
+                    should_raise = (
+                        dtype.name != 'float64' or
+                        (contiguity is not None and
+                         contiguity != order and
+                         not trivially_contiguous)
+                    )
+
+                array = np.zeros(shape, dtype=dtype, order=order)
+                if not should_raise:
+                    function(array)
+                else:
+                    with pytest.raises(TypeError, match="incompatible function arguments"):
+                        function(array)
+
+
+@pytest.mark.xfail("env.PYPY")
 def test_dtype_refcount_leak():
     from sys import getrefcount
     dtype = np.dtype(np.float_)
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_numpy_dtypes.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_numpy_dtypes.py
@@ -1,12 +1,13 @@
 # -*- coding: utf-8 -*-
 import re
+
 import pytest
-from pybind11_tests import numpy_dtypes as m
 
-pytestmark = pytest.requires_numpy
+import env  # noqa: F401
+
+from pybind11_tests import numpy_dtypes as m
 
-with pytest.suppress(ImportError):
-    import numpy as np
+np = pytest.importorskip("numpy")
 
 
 @pytest.fixture(scope='module')
@@ -294,7 +295,7 @@ def test_register_dtype():
     assert 'dtype is already registered' in str(excinfo.value)
 
 
-@pytest.unsupported_on_pypy
+@pytest.mark.xfail("env.PYPY")
 def test_str_leak():
     from sys import getrefcount
     fmt = "f4"
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_numpy_vectorize.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_numpy_vectorize.cpp
@@ -37,7 +37,7 @@ TEST_SUBMODULE(numpy_vectorize, m) {
     ));
 
     // test_type_selection
-    // Numpy function which only accepts specific data types
+    // NumPy function which only accepts specific data types
     m.def("selective_func", [](py::array_t<int, py::array::c_style>) { return "Int branch taken."; });
     m.def("selective_func", [](py::array_t<float, py::array::c_style>) { return "Float branch taken."; });
     m.def("selective_func", [](py::array_t<std::complex<float>, py::array::c_style>) { return "Complex float branch taken."; });
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_numpy_vectorize.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_numpy_vectorize.py
@@ -2,10 +2,7 @@
 import pytest
 from pybind11_tests import numpy_vectorize as m
 
-pytestmark = pytest.requires_numpy
-
-with pytest.suppress(ImportError):
-    import numpy as np
+np = pytest.importorskip("numpy")
 
 
 def test_vectorize(capture):
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_opaque_types.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_opaque_types.cpp
@@ -60,7 +60,7 @@ TEST_SUBMODULE(opaque_types, m) {
     m.def("get_null_str_value", [](char *ptr) { return reinterpret_cast<std::intptr_t>(ptr); });
 
     m.def("return_unique_ptr", []() -> std::unique_ptr<StringList> {
-        StringList *result = new StringList();
+        auto *result = new StringList();
         result->push_back("some value");
         return std::unique_ptr<StringList>(result);
     });
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_operator_overloading.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_operator_overloading.cpp
@@ -73,7 +73,7 @@ namespace std {
         // Not a good hash function, but easy to test
         size_t operator()(const Vector2 &) { return 4; }
     };
-}
+} // namespace std
 
 // Not a good abs function, but easy to test.
 std::string abs(const Vector2&) {
@@ -88,11 +88,11 @@ std::string abs(const Vector2&) {
   // Here, we suppress the warning using `#pragma diagnostic`.
   // Taken from: https://github.com/RobotLocomotion/drake/commit/aaf84b46
   // TODO(eric): This could be resolved using a function / functor (e.g. `py::self()`).
-  #if (__APPLE__) && (__clang__)
+  #if defined(__APPLE__) && defined(__clang__)
     #if (__clang_major__ >= 10) && (__clang_minor__ >= 0) && (__clang_patchlevel__ >= 1)
       #pragma GCC diagnostic ignored "-Wself-assign-overloaded"
     #endif
-  #elif (__clang__)
+  #elif defined(__clang__)
     #if (__clang_major__ >= 7)
       #pragma GCC diagnostic ignored "-Wself-assign-overloaded"
     #endif
@@ -187,6 +187,38 @@ TEST_SUBMODULE(operators, m) {
         .def(py::self *= int())
         .def_readwrite("b", &NestC::b);
     m.def("get_NestC", [](const NestC &c) { return c.value; });
+
+
+    // test_overriding_eq_reset_hash
+    // #2191 Overriding __eq__ should set __hash__ to None
+    struct Comparable {
+        int value;
+        bool operator==(const Comparable& rhs) const {return value == rhs.value;}
+    };
+
+    struct Hashable : Comparable {
+        explicit Hashable(int value): Comparable{value}{};
+        size_t hash() const { return static_cast<size_t>(value); }
+    };
+
+    struct Hashable2 : Hashable {
+        using Hashable::Hashable;
+    };
+
+    py::class_<Comparable>(m, "Comparable")
+        .def(py::init<int>())
+        .def(py::self == py::self);
+
+    py::class_<Hashable>(m, "Hashable")
+        .def(py::init<int>())
+        .def(py::self == py::self)
+        .def("__hash__", &Hashable::hash);
+
+    // define __hash__ before __eq__
+    py::class_<Hashable2>(m, "Hashable2")
+        .def("__hash__", &Hashable::hash)
+        .def(py::init<int>())
+        .def(py::self == py::self);
 }
 
 #ifndef _MSC_VER
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_operator_overloading.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_operator_overloading.py
@@ -127,3 +127,19 @@ def test_nested():
     assert abase.value == 42
     del abase, b
     pytest.gc_collect()
+
+
+def test_overriding_eq_reset_hash():
+
+    assert m.Comparable(15) is not m.Comparable(15)
+    assert m.Comparable(15) == m.Comparable(15)
+
+    with pytest.raises(TypeError):
+        hash(m.Comparable(15))  # TypeError: unhashable type: 'm.Comparable'
+
+    for hashable in (m.Hashable, m.Hashable2):
+        assert hashable(15) is not hashable(15)
+        assert hashable(15) == hashable(15)
+
+        assert hash(hashable(15)) == 15
+        assert hash(hashable(15)) == hash(hashable(15))
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_pickling.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_pickling.py
@@ -1,5 +1,8 @@
 # -*- coding: utf-8 -*-
 import pytest
+
+import env  # noqa: F401
+
 from pybind11_tests import pickling as m
 
 try:
@@ -22,7 +25,7 @@ def test_roundtrip(cls_name):
     assert p2.extra2() == p.extra2()
 
 
-@pytest.unsupported_on_pypy
+@pytest.mark.xfail("env.PYPY")
 @pytest.mark.parametrize("cls_name", ["PickleableWithDict", "PickleableWithDictNew"])
 def test_roundtrip_with_dict(cls_name):
     cls = getattr(m, cls_name)
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_pytypes.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_pytypes.cpp
@@ -80,6 +80,7 @@ TEST_SUBMODULE(pytypes, m) {
     m.def("str_from_bytes", []() { return py::str(py::bytes("boo", 3)); });
     m.def("str_from_object", [](const py::object& obj) { return py::str(obj); });
     m.def("repr_from_object", [](const py::object& obj) { return py::repr(obj); });
+    m.def("str_from_handle", [](py::handle h) { return py::str(h); });
 
     m.def("str_format", []() {
         auto s1 = "{} + {} = {}"_s.format(1, 2, 3);
@@ -197,6 +198,7 @@ TEST_SUBMODULE(pytypes, m) {
     // test_constructors
     m.def("default_constructors", []() {
         return py::dict(
+            "bytes"_a=py::bytes(),
             "str"_a=py::str(),
             "bool"_a=py::bool_(),
             "int"_a=py::int_(),
@@ -210,6 +212,7 @@ TEST_SUBMODULE(pytypes, m) {
 
     m.def("converting_constructors", [](py::dict d) {
         return py::dict(
+            "bytes"_a=py::bytes(d["bytes"]),
             "str"_a=py::str(d["str"]),
             "bool"_a=py::bool_(d["bool"]),
             "int"_a=py::int_(d["int"]),
@@ -225,6 +228,7 @@ TEST_SUBMODULE(pytypes, m) {
     m.def("cast_functions", [](py::dict d) {
         // When converting between Python types, obj.cast<T>() should be the same as T(obj)
         return py::dict(
+            "bytes"_a=d["bytes"].cast<py::bytes>(),
             "str"_a=d["str"].cast<py::str>(),
             "bool"_a=d["bool"].cast<py::bool_>(),
             "int"_a=d["int"].cast<py::int_>(),
@@ -237,6 +241,8 @@ TEST_SUBMODULE(pytypes, m) {
         );
     });
 
+    m.def("convert_to_pybind11_str", [](py::object o) { return py::str(o); });
+
     m.def("get_implicit_casting", []() {
         py::dict d;
         d["char*_i1"] = "abc";
@@ -319,6 +325,16 @@ TEST_SUBMODULE(pytypes, m) {
         return a[py::slice(0, -1, 2)];
     });
 
+    // See #2361
+    m.def("issue2361_str_implicit_copy_none", []() {
+        py::str is_this_none = py::none();
+        return is_this_none;
+    });
+    m.def("issue2361_dict_implicit_copy_none", []() {
+        py::dict is_this_none = py::none();
+        return is_this_none;
+    });
+
     m.def("test_memoryview_object", [](py::buffer b) {
         return py::memoryview(b);
     });
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_pytypes.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_pytypes.py
@@ -3,6 +3,8 @@ from __future__ import division
 import pytest
 import sys
 
+import env  # noqa: F401
+
 from pybind11_tests import pytypes as m
 from pybind11_tests import debug_enabled
 
@@ -102,18 +104,30 @@ def test_str(doc):
 
     assert m.str_from_object(A()) == "this is a str"
     assert m.repr_from_object(A()) == "this is a repr"
+    assert m.str_from_handle(A()) == "this is a str"
 
     s1, s2 = m.str_format()
     assert s1 == "1 + 2 = 3"
     assert s1 == s2
 
+    malformed_utf8 = b"\x80"
+    assert m.str_from_object(malformed_utf8) is malformed_utf8  # To be fixed; see #2380
+    if env.PY2:
+        # with pytest.raises(UnicodeDecodeError):
+        #     m.str_from_object(malformed_utf8)
+        with pytest.raises(UnicodeDecodeError):
+            m.str_from_handle(malformed_utf8)
+    else:
+        # assert m.str_from_object(malformed_utf8) == "b'\\x80'"
+        assert m.str_from_handle(malformed_utf8) == "b'\\x80'"
+
 
 def test_bytes(doc):
     assert m.bytes_from_string().decode() == "foo"
     assert m.bytes_from_str().decode() == "bar"
 
     assert doc(m.bytes_from_str) == "bytes_from_str() -> {}".format(
-        "bytes" if sys.version_info[0] == 3 else "str"
+        "str" if env.PY2 else "bytes"
     )
 
 
@@ -188,11 +202,17 @@ def test_accessors():
 
 def test_constructors():
     """C++ default and converting constructors are equivalent to type calls in Python"""
-    types = [str, bool, int, float, tuple, list, dict, set]
+    types = [bytes, str, bool, int, float, tuple, list, dict, set]
     expected = {t.__name__: t() for t in types}
+    if env.PY2:
+        # Note that bytes.__name__ == 'str' in Python 2.
+        # pybind11::str is unicode even under Python 2.
+        expected["bytes"] = bytes()
+        expected["str"] = unicode()  # noqa: F821
     assert m.default_constructors() == expected
 
     data = {
+        bytes: b'41',  # Currently no supported or working conversions.
         str: 42,
         bool: "Not empty",
         int: "42",
@@ -205,6 +225,11 @@ def test_constructors():
     }
     inputs = {k.__name__: v for k, v in data.items()}
     expected = {k.__name__: k(v) for k, v in data.items()}
+    if env.PY2:  # Similar to the above. See comments above.
+        inputs["bytes"] = b'41'
+        inputs["str"] = 42
+        expected["bytes"] = b'41'
+        expected["str"] = u"42"
 
     assert m.converting_constructors(inputs) == expected
     assert m.cast_functions(inputs) == expected
@@ -220,6 +245,38 @@ def test_constructors():
         assert noconv2[k] is expected[k]
 
 
+def test_pybind11_str_raw_str():
+    # specifically to exercise pybind11::str::raw_str
+    cvt = m.convert_to_pybind11_str
+    assert cvt(u"Str") == u"Str"
+    assert cvt(b'Bytes') == u"Bytes" if env.PY2 else "b'Bytes'"
+    assert cvt(None) == u"None"
+    assert cvt(False) == u"False"
+    assert cvt(True) == u"True"
+    assert cvt(42) == u"42"
+    assert cvt(2**65) == u"36893488147419103232"
+    assert cvt(-1.50) == u"-1.5"
+    assert cvt(()) == u"()"
+    assert cvt((18,)) == u"(18,)"
+    assert cvt([]) == u"[]"
+    assert cvt([28]) == u"[28]"
+    assert cvt({}) == u"{}"
+    assert cvt({3: 4}) == u"{3: 4}"
+    assert cvt(set()) == u"set([])" if env.PY2 else "set()"
+    assert cvt({3, 3}) == u"set([3])" if env.PY2 else "{3}"
+
+    valid_orig = u"Ǳ"
+    valid_utf8 = valid_orig.encode("utf-8")
+    valid_cvt = cvt(valid_utf8)
+    assert type(valid_cvt) == bytes  # Probably surprising.
+    assert valid_cvt == b'\xc7\xb1'
+
+    malformed_utf8 = b'\x80'
+    malformed_cvt = cvt(malformed_utf8)
+    assert type(malformed_cvt) == bytes  # Probably surprising.
+    assert malformed_cvt == b'\x80'
+
+
 def test_implicit_casting():
     """Tests implicit casting when assigning or appending to dicts and lists."""
     z = m.get_implicit_casting()
@@ -281,6 +338,14 @@ def test_list_slicing():
     assert li[::2] == m.test_list_slicing(li)
 
 
+def test_issue2361():
+    # See issue #2361
+    assert m.issue2361_str_implicit_copy_none() == "None"
+    with pytest.raises(TypeError) as excinfo:
+        assert m.issue2361_dict_implicit_copy_none()
+    assert "'NoneType' object is not iterable" in str(excinfo.value)
+
+
 @pytest.mark.parametrize('method, args, fmt, expected_view', [
     (m.test_memoryview_object, (b'red',), 'B', b'red'),
     (m.test_memoryview_buffer_info, (b'green',), 'B', b'green'),
@@ -292,7 +357,7 @@ def test_memoryview(method, args, fmt, e
     view = method(*args)
     assert isinstance(view, memoryview)
     assert view.format == fmt
-    if isinstance(expected_view, bytes) or sys.version_info[0] >= 3:
+    if isinstance(expected_view, bytes) or not env.PY2:
         view_as_list = list(view)
     else:
         # Using max to pick non-zero byte (big-endian vs little-endian).
@@ -300,9 +365,7 @@ def test_memoryview(method, args, fmt, e
     assert view_as_list == list(expected_view)
 
 
-@pytest.mark.skipif(
-    not hasattr(sys, 'getrefcount'),
-    reason='getrefcount is not available')
+@pytest.mark.xfail("env.PYPY", reason="getrefcount is not available")
 @pytest.mark.parametrize('method', [
     m.test_memoryview_object,
     m.test_memoryview_buffer_info,
@@ -320,9 +383,10 @@ def test_memoryview_from_buffer_empty_sh
     view = m.test_memoryview_from_buffer_empty_shape()
     assert isinstance(view, memoryview)
     assert view.format == 'B'
-    if sys.version_info.major < 3:
+    if env.PY2:
         # Python 2 behavior is weird, but Python 3 (the future) is fine.
-        assert bytes(view).startswith(b'<memory at ')
+        # PyPy3 has <memoryview, while CPython 2 has <memory
+        assert bytes(view).startswith(b'<memory')
     else:
         assert bytes(view) == b''
 
@@ -333,14 +397,14 @@ def test_test_memoryview_from_buffer_inv
 
 
 def test_test_memoryview_from_buffer_nullptr():
-    if sys.version_info.major < 3:
+    if env.PY2:
         m.test_memoryview_from_buffer_nullptr()
     else:
         with pytest.raises(ValueError):
             m.test_memoryview_from_buffer_nullptr()
 
 
-@pytest.mark.skipif(sys.version_info.major < 3, reason='API not available')
+@pytest.mark.skipif("env.PY2")
 def test_memoryview_from_memory():
     view = m.test_memoryview_from_memory()
     assert isinstance(view, memoryview)
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_sequences_and_iterators.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_sequences_and_iterators.cpp
@@ -13,6 +13,8 @@
 #include <pybind11/operators.h>
 #include <pybind11/stl.h>
 
+#include <algorithm>
+
 template<typename T>
 class NonZeroIterator {
     const T* ptr_;
@@ -198,7 +200,7 @@ TEST_SUBMODULE(sequences_and_iterators,
             size_t start, stop, step, slicelength;
             if (!slice.compute(s.size(), &start, &stop, &step, &slicelength))
                 throw py::error_already_set();
-            Sequence *seq = new Sequence(slicelength);
+            auto *seq = new Sequence(slicelength);
             for (size_t i = 0; i < slicelength; ++i) {
                 (*seq)[i] = s[start]; start += step;
             }
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_smart_ptr.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_smart_ptr.cpp
@@ -27,7 +27,8 @@ namespace pybind11 { namespace detail {
     struct holder_helper<ref<T>> {
         static const T *get(const ref<T> &p) { return p.get_ptr(); }
     };
-}}
+} // namespace detail
+} // namespace pybind11
 
 // The following is not required anymore for std::shared_ptr, but it should compile without error:
 PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>);
@@ -97,9 +98,9 @@ TEST_SUBMODULE(smart_ptr, m) {
     class MyObject1 : public Object {
     public:
         MyObject1(int value) : value(value) { print_created(this, toString()); }
-        std::string toString() const { return "MyObject1[" + std::to_string(value) + "]"; }
+        std::string toString() const override { return "MyObject1[" + std::to_string(value) + "]"; }
     protected:
-        virtual ~MyObject1() { print_destroyed(this); }
+        ~MyObject1() override { print_destroyed(this); }
     private:
         int value;
     };
@@ -207,7 +208,7 @@ TEST_SUBMODULE(smart_ptr, m) {
     class MyObject4b : public MyObject4a {
     public:
         MyObject4b(int i) : MyObject4a(i) { print_created(this); }
-        ~MyObject4b() { print_destroyed(this); }
+        ~MyObject4b() override { print_destroyed(this); }
     };
     py::class_<MyObject4b, MyObject4a>(m, "MyObject4b")
         .def(py::init<int>());
@@ -338,7 +339,9 @@ TEST_SUBMODULE(smart_ptr, m) {
     // test_shared_ptr_gc
     // #187: issue involving std::shared_ptr<> return value policy & garbage collection
     struct ElementBase {
-        virtual ~ElementBase() { } /* Force creation of virtual table */
+        virtual ~ElementBase() = default; /* Force creation of virtual table */
+        ElementBase() = default;
+        ElementBase(const ElementBase&) = delete;
     };
     py::class_<ElementBase, std::shared_ptr<ElementBase>>(m, "ElementBase");
 
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_smart_ptr.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_smart_ptr.py
@@ -1,7 +1,8 @@
 # -*- coding: utf-8 -*-
 import pytest
-from pybind11_tests import smart_ptr as m
-from pybind11_tests import ConstructorStats
+
+m = pytest.importorskip("pybind11_tests.smart_ptr")
+from pybind11_tests import ConstructorStats  # noqa: E402
 
 
 def test_smart_ptr(capture):
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_stl.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_stl.cpp
@@ -15,7 +15,7 @@
 #include <string>
 
 // Test with `std::variant` in C++17 mode, or with `boost::variant` in C++11/14
-#if PYBIND11_HAS_VARIANT
+#if defined(PYBIND11_HAS_VARIANT)
 using std::variant;
 #elif defined(PYBIND11_TEST_BOOST) && (!defined(_MSC_VER) || _MSC_VER >= 1910)
 #  include <boost/variant.hpp>
@@ -47,7 +47,7 @@ struct TplCtorClass {
 namespace std {
     template <>
     struct hash<TplCtorClass> { size_t operator()(const TplCtorClass &) const { return 0; } };
-}
+} // namespace std
 
 
 template <template <typename> class OptionalImpl, typename T>
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_stl_binders.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_stl_binders.py
@@ -1,10 +1,9 @@
 # -*- coding: utf-8 -*-
 import pytest
-import sys
-from pybind11_tests import stl_binders as m
 
-with pytest.suppress(ImportError):
-    import numpy as np
+import env  # noqa: F401
+
+from pybind11_tests import stl_binders as m
 
 
 def test_vector_int():
@@ -69,15 +68,14 @@ def test_vector_int():
     assert len(v_int2) == 0
 
 
-# related to the PyPy's buffer protocol.
-@pytest.unsupported_on_pypy
+# Older PyPy's failed here, related to the PyPy's buffer protocol.
 def test_vector_buffer():
     b = bytearray([1, 2, 3, 4])
     v = m.VectorUChar(b)
     assert v[1] == 2
     v[2] = 5
     mv = memoryview(v)  # We expose the buffer interface
-    if sys.version_info.major > 2:
+    if not env.PY2:
         assert mv[2] == 5
         mv[2] = 6
     else:
@@ -85,14 +83,18 @@ def test_vector_buffer():
         mv[2] = '\x06'
     assert v[2] == 6
 
+    if not env.PY2:
+        mv = memoryview(b)
+        v = m.VectorUChar(mv[::2])
+        assert v[1] == 3
+
     with pytest.raises(RuntimeError) as excinfo:
         m.create_undeclstruct()  # Undeclared struct contents, no buffer interface
     assert "NumPy type info missing for " in str(excinfo.value)
 
 
-@pytest.unsupported_on_pypy
-@pytest.requires_numpy
 def test_vector_buffer_numpy():
+    np = pytest.importorskip("numpy")
     a = np.array([1, 2, 3, 4], dtype=np.int32)
     with pytest.raises(TypeError):
         m.VectorInt(a)
@@ -119,6 +121,10 @@ def test_vector_buffer_numpy():
                                                    ('y', 'float64'), ('z', 'bool')], align=True)))
     assert len(v) == 3
 
+    b = np.array([1, 2, 3, 4], dtype=np.uint8)
+    v = m.VectorUChar(b[::2])
+    assert v[1] == 3
+
 
 def test_vector_bool():
     import pybind11_cross_module_tests as cm
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_tagbased_polymorphic.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_tagbased_polymorphic.cpp
@@ -117,7 +117,7 @@ namespace pybind11 {
         static const void *get(const itype *src, const std::type_info*& type)
         { type = src ? Animal::type_of_kind(src->kind) : nullptr; return src; }
     };
-}
+} // namespace pybind11
 
 TEST_SUBMODULE(tagbased_polymorphic, m) {
     py::class_<Animal>(m, "Animal")
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_virtual_functions.cpp
+++ gtsam-4.1.0/wrap/pybind11/tests/test_virtual_functions.cpp
@@ -47,7 +47,7 @@ public:
 
     int run(int value) override {
         /* Generate wrapping code that enables native function overloading */
-        PYBIND11_OVERLOAD(
+        PYBIND11_OVERRIDE(
             int,         /* Return type */
             ExampleVirt, /* Parent class */
             run,         /* Name of function */
@@ -56,7 +56,7 @@ public:
     }
 
     bool run_bool() override {
-        PYBIND11_OVERLOAD_PURE(
+        PYBIND11_OVERRIDE_PURE(
             bool,         /* Return type */
             ExampleVirt,  /* Parent class */
             run_bool,     /* Name of function */
@@ -66,7 +66,7 @@ public:
     }
 
     void pure_virtual() override {
-        PYBIND11_OVERLOAD_PURE(
+        PYBIND11_OVERRIDE_PURE(
             void,         /* Return type */
             ExampleVirt,  /* Parent class */
             pure_virtual, /* Name of function */
@@ -78,7 +78,7 @@ public:
     // We can return reference types for compatibility with C++ virtual interfaces that do so, but
     // note they have some significant limitations (see the documentation).
     const std::string &get_string1() override {
-        PYBIND11_OVERLOAD(
+        PYBIND11_OVERRIDE(
             const std::string &, /* Return type */
             ExampleVirt,         /* Parent class */
             get_string1,         /* Name of function */
@@ -87,7 +87,7 @@ public:
     }
 
     const std::string *get_string2() override {
-        PYBIND11_OVERLOAD(
+        PYBIND11_OVERRIDE(
             const std::string *, /* Return type */
             ExampleVirt,         /* Parent class */
             get_string2,         /* Name of function */
@@ -129,7 +129,9 @@ private:
 
 class NCVirt {
 public:
-    virtual ~NCVirt() { }
+    virtual ~NCVirt() = default;
+    NCVirt() = default;
+    NCVirt(const NCVirt&) = delete;
     virtual NonCopyable get_noncopyable(int a, int b) { return NonCopyable(a, b); }
     virtual Movable get_movable(int a, int b) = 0;
 
@@ -137,13 +139,13 @@ public:
     std::string print_movable(int a, int b) { return get_movable(a, b).get_value(); }
 };
 class NCVirtTrampoline : public NCVirt {
-#if !defined(__INTEL_COMPILER)
+#if !defined(__INTEL_COMPILER) && !defined(__CUDACC__) && !defined(__PGIC__)
     NonCopyable get_noncopyable(int a, int b) override {
-        PYBIND11_OVERLOAD(NonCopyable, NCVirt, get_noncopyable, a, b);
+        PYBIND11_OVERRIDE(NonCopyable, NCVirt, get_noncopyable, a, b);
     }
 #endif
     Movable get_movable(int a, int b) override {
-        PYBIND11_OVERLOAD_PURE(Movable, NCVirt, get_movable, a, b);
+        PYBIND11_OVERRIDE_PURE(Movable, NCVirt, get_movable, a, b);
     }
 };
 
@@ -151,11 +153,13 @@ struct Base {
     /* for some reason MSVC2015 can't compile this if the function is pure virtual */
     virtual std::string dispatch() const { return {}; };
     virtual ~Base() = default;
+    Base() = default;
+    Base(const Base&) = delete;
 };
 
 struct DispatchIssue : Base {
-    virtual std::string dispatch() const {
-        PYBIND11_OVERLOAD_PURE(std::string, Base, dispatch, /* no arguments */);
+    std::string dispatch() const override {
+        PYBIND11_OVERRIDE_PURE(std::string, Base, dispatch, /* no arguments */);
     }
 };
 
@@ -201,7 +205,7 @@ TEST_SUBMODULE(virtual_functions, m) {
         .def(py::init<int, int>());
 
     // test_move_support
-#if !defined(__INTEL_COMPILER)
+#if !defined(__INTEL_COMPILER) && !defined(__CUDACC__) && !defined(__PGIC__)
     py::class_<NCVirt, NCVirtTrampoline>(m, "NCVirt")
         .def(py::init<>())
         .def("get_noncopyable", &NCVirt::get_noncopyable)
@@ -221,19 +225,22 @@ TEST_SUBMODULE(virtual_functions, m) {
     // don't invoke Python dispatch classes by default when instantiating C++ classes
     // that were not extended on the Python side
     struct A {
-        virtual ~A() {}
+        A() = default;
+        A(const A&) = delete;
+        virtual ~A() = default;
         virtual void f() { py::print("A.f()"); }
     };
 
     struct PyA : A {
         PyA() { py::print("PyA.PyA()"); }
-        ~PyA() { py::print("PyA.~PyA()"); }
+        PyA(const PyA&) = delete;
+        ~PyA() override { py::print("PyA.~PyA()"); }
 
         void f() override {
             py::print("PyA.f()");
             // This convolution just gives a `void`, but tests that PYBIND11_TYPE() works to protect
             // a type containing a ,
-            PYBIND11_OVERLOAD(PYBIND11_TYPE(typename std::enable_if<true, void>::type), A, f);
+            PYBIND11_OVERRIDE(PYBIND11_TYPE(typename std::enable_if<true, void>::type), A, f);
         }
     };
 
@@ -246,16 +253,19 @@ TEST_SUBMODULE(virtual_functions, m) {
     // test_alias_delay_initialization2
     // ... unless we explicitly request it, as in this example:
     struct A2 {
-        virtual ~A2() {}
+        A2() = default;
+        A2(const A2&) = delete;
+        virtual ~A2() = default;
         virtual void f() { py::print("A2.f()"); }
     };
 
     struct PyA2 : A2 {
         PyA2() { py::print("PyA2.PyA2()"); }
-        ~PyA2() { py::print("PyA2.~PyA2()"); }
+        PyA2(const PyA2&) = delete;
+        ~PyA2() override { py::print("PyA2.~PyA2()"); }
         void f() override {
             py::print("PyA2.f()");
-            PYBIND11_OVERLOAD(void, A2, f);
+            PYBIND11_OVERRIDE(void, A2, f);
         }
     };
 
@@ -282,6 +292,8 @@ TEST_SUBMODULE(virtual_functions, m) {
         std::string v;
         A a;
         explicit OverrideTest(const std::string &v) : v{v} {}
+        OverrideTest() = default;
+        OverrideTest(const OverrideTest&) = delete;
         virtual std::string str_value() { return v; }
         virtual std::string &str_ref() { return v; }
         virtual A A_value() { return a; }
@@ -292,19 +304,19 @@ TEST_SUBMODULE(virtual_functions, m) {
     class PyOverrideTest : public OverrideTest {
     public:
         using OverrideTest::OverrideTest;
-        std::string str_value() override { PYBIND11_OVERLOAD(std::string, OverrideTest, str_value); }
+        std::string str_value() override { PYBIND11_OVERRIDE(std::string, OverrideTest, str_value); }
         // Not allowed (uncommenting should hit a static_assert failure): we can't get a reference
         // to a python numeric value, since we only copy values in the numeric type caster:
-//      std::string &str_ref() override { PYBIND11_OVERLOAD(std::string &, OverrideTest, str_ref); }
+//      std::string &str_ref() override { PYBIND11_OVERRIDE(std::string &, OverrideTest, str_ref); }
         // But we can work around it like this:
     private:
         std::string _tmp;
-        std::string str_ref_helper() { PYBIND11_OVERLOAD(std::string, OverrideTest, str_ref); }
+        std::string str_ref_helper() { PYBIND11_OVERRIDE(std::string, OverrideTest, str_ref); }
     public:
         std::string &str_ref() override { return _tmp = str_ref_helper(); }
 
-        A A_value() override { PYBIND11_OVERLOAD(A, OverrideTest, A_value); }
-        A &A_ref() override { PYBIND11_OVERLOAD(A &, OverrideTest, A_ref); }
+        A A_value() override { PYBIND11_OVERRIDE(A, OverrideTest, A_value); }
+        A &A_ref() override { PYBIND11_OVERRIDE(A &, OverrideTest, A_ref); }
     };
 
     py::class_<OverrideTest::A>(m, "OverrideTest_A")
@@ -339,6 +351,8 @@ public: \
         return say_something(1) + " " + std::to_string(unlucky_number()); \
     }
 A_METHODS
+    A_Repeat() = default;
+    A_Repeat(const A_Repeat&) = delete;
     virtual ~A_Repeat() = default;
 };
 class B_Repeat : public A_Repeat {
@@ -364,7 +378,12 @@ D_METHODS
 };
 
 // Base classes for templated inheritance trampolines.  Identical to the repeat-everything version:
-class A_Tpl { A_METHODS; virtual ~A_Tpl() = default; };
+class A_Tpl {
+    A_METHODS;
+    A_Tpl() = default;
+    A_Tpl(const A_Tpl&) = delete;
+    virtual ~A_Tpl() = default;
+};
 class B_Tpl : public A_Tpl { B_METHODS };
 class C_Tpl : public B_Tpl { C_METHODS };
 class D_Tpl : public C_Tpl { D_METHODS };
@@ -374,29 +393,29 @@ class D_Tpl : public C_Tpl { D_METHODS }
 class PyA_Repeat : public A_Repeat {
 public:
     using A_Repeat::A_Repeat;
-    int unlucky_number() override { PYBIND11_OVERLOAD_PURE(int, A_Repeat, unlucky_number, ); }
-    std::string say_something(unsigned times) override { PYBIND11_OVERLOAD(std::string, A_Repeat, say_something, times); }
+    int unlucky_number() override { PYBIND11_OVERRIDE_PURE(int, A_Repeat, unlucky_number, ); }
+    std::string say_something(unsigned times) override { PYBIND11_OVERRIDE(std::string, A_Repeat, say_something, times); }
 };
 class PyB_Repeat : public B_Repeat {
 public:
     using B_Repeat::B_Repeat;
-    int unlucky_number() override { PYBIND11_OVERLOAD(int, B_Repeat, unlucky_number, ); }
-    std::string say_something(unsigned times) override { PYBIND11_OVERLOAD(std::string, B_Repeat, say_something, times); }
-    double lucky_number() override { PYBIND11_OVERLOAD(double, B_Repeat, lucky_number, ); }
+    int unlucky_number() override { PYBIND11_OVERRIDE(int, B_Repeat, unlucky_number, ); }
+    std::string say_something(unsigned times) override { PYBIND11_OVERRIDE(std::string, B_Repeat, say_something, times); }
+    double lucky_number() override { PYBIND11_OVERRIDE(double, B_Repeat, lucky_number, ); }
 };
 class PyC_Repeat : public C_Repeat {
 public:
     using C_Repeat::C_Repeat;
-    int unlucky_number() override { PYBIND11_OVERLOAD(int, C_Repeat, unlucky_number, ); }
-    std::string say_something(unsigned times) override { PYBIND11_OVERLOAD(std::string, C_Repeat, say_something, times); }
-    double lucky_number() override { PYBIND11_OVERLOAD(double, C_Repeat, lucky_number, ); }
+    int unlucky_number() override { PYBIND11_OVERRIDE(int, C_Repeat, unlucky_number, ); }
+    std::string say_something(unsigned times) override { PYBIND11_OVERRIDE(std::string, C_Repeat, say_something, times); }
+    double lucky_number() override { PYBIND11_OVERRIDE(double, C_Repeat, lucky_number, ); }
 };
 class PyD_Repeat : public D_Repeat {
 public:
     using D_Repeat::D_Repeat;
-    int unlucky_number() override { PYBIND11_OVERLOAD(int, D_Repeat, unlucky_number, ); }
-    std::string say_something(unsigned times) override { PYBIND11_OVERLOAD(std::string, D_Repeat, say_something, times); }
-    double lucky_number() override { PYBIND11_OVERLOAD(double, D_Repeat, lucky_number, ); }
+    int unlucky_number() override { PYBIND11_OVERRIDE(int, D_Repeat, unlucky_number, ); }
+    std::string say_something(unsigned times) override { PYBIND11_OVERRIDE(std::string, D_Repeat, say_something, times); }
+    double lucky_number() override { PYBIND11_OVERRIDE(double, D_Repeat, lucky_number, ); }
 };
 
 // Inheritance approach 2: templated trampoline classes.
@@ -417,15 +436,15 @@ template <class Base = A_Tpl>
 class PyA_Tpl : public Base {
 public:
     using Base::Base; // Inherit constructors
-    int unlucky_number() override { PYBIND11_OVERLOAD_PURE(int, Base, unlucky_number, ); }
-    std::string say_something(unsigned times) override { PYBIND11_OVERLOAD(std::string, Base, say_something, times); }
+    int unlucky_number() override { PYBIND11_OVERRIDE_PURE(int, Base, unlucky_number, ); }
+    std::string say_something(unsigned times) override { PYBIND11_OVERRIDE(std::string, Base, say_something, times); }
 };
 template <class Base = B_Tpl>
 class PyB_Tpl : public PyA_Tpl<Base> {
 public:
     using PyA_Tpl<Base>::PyA_Tpl; // Inherit constructors (via PyA_Tpl's inherited constructors)
-    int unlucky_number() override { PYBIND11_OVERLOAD(int, Base, unlucky_number, ); }
-    double lucky_number() override { PYBIND11_OVERLOAD(double, Base, lucky_number, ); }
+    int unlucky_number() override { PYBIND11_OVERRIDE(int, Base, unlucky_number, ); }
+    double lucky_number() override { PYBIND11_OVERRIDE(double, Base, lucky_number, ); }
 };
 // Since C_Tpl and D_Tpl don't declare any new virtual methods, we don't actually need these (we can
 // use PyB_Tpl<C_Tpl> and PyB_Tpl<D_Tpl> for the trampoline classes instead):
--- gtsam-4.1.0.orig/wrap/pybind11/tests/test_virtual_functions.py
+++ gtsam-4.1.0/wrap/pybind11/tests/test_virtual_functions.py
@@ -1,8 +1,10 @@
 # -*- coding: utf-8 -*-
 import pytest
 
-from pybind11_tests import virtual_functions as m
-from pybind11_tests import ConstructorStats
+import env  # noqa: F401
+
+m = pytest.importorskip("pybind11_tests.virtual_functions")
+from pybind11_tests import ConstructorStats  # noqa: E402
 
 
 def test_override(capture, msg):
@@ -160,7 +162,7 @@ def test_alias_delay_initialization2(cap
 
 # PyPy: Reference count > 1 causes call with noncopyable instance
 # to fail in ncv1.print_nc()
-@pytest.unsupported_on_pypy
+@pytest.mark.xfail("env.PYPY")
 @pytest.mark.skipif(not hasattr(m, "NCVirt"), reason="NCVirt test broken on ICPC")
 def test_move_support():
     class NCVirtExt(m.NCVirt):
--- gtsam-4.1.0.orig/wrap/pybind11/tools/FindCatch.cmake
+++ gtsam-4.1.0/wrap/pybind11/tools/FindCatch.cmake
@@ -19,9 +19,14 @@ endif()
 
 # Extract the version number from catch.hpp
 function(_get_catch_version)
-  file(STRINGS "${CATCH_INCLUDE_DIR}/catch.hpp" version_line REGEX "Catch v.*" LIMIT_COUNT 1)
+  file(
+    STRINGS "${CATCH_INCLUDE_DIR}/catch.hpp" version_line
+    REGEX "Catch v.*"
+    LIMIT_COUNT 1)
   if(version_line MATCHES "Catch v([0-9]+)\\.([0-9]+)\\.([0-9]+)")
-    set(CATCH_VERSION "${CMAKE_MATCH_1}.${CMAKE_MATCH_2}.${CMAKE_MATCH_3}" PARENT_SCOPE)
+    set(CATCH_VERSION
+        "${CMAKE_MATCH_1}.${CMAKE_MATCH_2}.${CMAKE_MATCH_3}"
+        PARENT_SCOPE)
   endif()
 endfunction()
 
@@ -34,11 +39,16 @@ function(_download_catch version destina
   if(error)
     message(FATAL_ERROR "Could not download ${url}")
   endif()
-  set(CATCH_INCLUDE_DIR "${destination_dir}" CACHE INTERNAL "")
+  set(CATCH_INCLUDE_DIR
+      "${destination_dir}"
+      CACHE INTERNAL "")
 endfunction()
 
 # Look for catch locally
-find_path(CATCH_INCLUDE_DIR NAMES catch.hpp PATH_SUFFIXES catch)
+find_path(
+  CATCH_INCLUDE_DIR
+  NAMES catch.hpp
+  PATH_SUFFIXES catch2)
 if(CATCH_INCLUDE_DIR)
   _get_catch_version()
 endif()
@@ -54,4 +64,7 @@ if(NOT CATCH_VERSION OR CATCH_VERSION VE
   endif()
 endif()
 
+add_library(Catch2::Catch2 IMPORTED INTERFACE)
+set_property(TARGET Catch2::Catch2 PROPERTY INTERFACE_INCLUDE_DIRECTORIES "${CATCH_INCLUDE_DIR}")
+
 set(CATCH_FOUND TRUE)
--- gtsam-4.1.0.orig/wrap/pybind11/tools/FindEigen3.cmake
+++ gtsam-4.1.0/wrap/pybind11/tools/FindEigen3.cmake
@@ -26,17 +26,21 @@ if(NOT Eigen3_FIND_VERSION)
     set(Eigen3_FIND_VERSION_PATCH 0)
   endif(NOT Eigen3_FIND_VERSION_PATCH)
 
-  set(Eigen3_FIND_VERSION "${Eigen3_FIND_VERSION_MAJOR}.${Eigen3_FIND_VERSION_MINOR}.${Eigen3_FIND_VERSION_PATCH}")
+  set(Eigen3_FIND_VERSION
+      "${Eigen3_FIND_VERSION_MAJOR}.${Eigen3_FIND_VERSION_MINOR}.${Eigen3_FIND_VERSION_PATCH}")
 endif(NOT Eigen3_FIND_VERSION)
 
 macro(_eigen3_check_version)
   file(READ "${EIGEN3_INCLUDE_DIR}/Eigen/src/Core/util/Macros.h" _eigen3_version_header)
 
-  string(REGEX MATCH "define[ \t]+EIGEN_WORLD_VERSION[ \t]+([0-9]+)" _eigen3_world_version_match "${_eigen3_version_header}")
+  string(REGEX MATCH "define[ \t]+EIGEN_WORLD_VERSION[ \t]+([0-9]+)" _eigen3_world_version_match
+               "${_eigen3_version_header}")
   set(EIGEN3_WORLD_VERSION "${CMAKE_MATCH_1}")
-  string(REGEX MATCH "define[ \t]+EIGEN_MAJOR_VERSION[ \t]+([0-9]+)" _eigen3_major_version_match "${_eigen3_version_header}")
+  string(REGEX MATCH "define[ \t]+EIGEN_MAJOR_VERSION[ \t]+([0-9]+)" _eigen3_major_version_match
+               "${_eigen3_version_header}")
   set(EIGEN3_MAJOR_VERSION "${CMAKE_MATCH_1}")
-  string(REGEX MATCH "define[ \t]+EIGEN_MINOR_VERSION[ \t]+([0-9]+)" _eigen3_minor_version_match "${_eigen3_version_header}")
+  string(REGEX MATCH "define[ \t]+EIGEN_MINOR_VERSION[ \t]+([0-9]+)" _eigen3_minor_version_match
+               "${_eigen3_version_header}")
   set(EIGEN3_MINOR_VERSION "${CMAKE_MATCH_1}")
 
   set(EIGEN3_VERSION ${EIGEN3_WORLD_VERSION}.${EIGEN3_MAJOR_VERSION}.${EIGEN3_MINOR_VERSION})
@@ -53,20 +57,19 @@ macro(_eigen3_check_version)
   endif(NOT EIGEN3_VERSION_OK)
 endmacro(_eigen3_check_version)
 
-if (EIGEN3_INCLUDE_DIR)
+if(EIGEN3_INCLUDE_DIR)
 
   # in cache already
   _eigen3_check_version()
   set(EIGEN3_FOUND ${EIGEN3_VERSION_OK})
 
-else (EIGEN3_INCLUDE_DIR)
+else(EIGEN3_INCLUDE_DIR)
 
-  find_path(EIGEN3_INCLUDE_DIR NAMES signature_of_eigen3_matrix_library
-      PATHS
-      ${CMAKE_INSTALL_PREFIX}/include
-      ${KDE4_INCLUDE_DIR}
-      PATH_SUFFIXES eigen3 eigen
-    )
+  find_path(
+    EIGEN3_INCLUDE_DIR
+    NAMES signature_of_eigen3_matrix_library
+    PATHS ${CMAKE_INSTALL_PREFIX}/include ${KDE4_INCLUDE_DIR}
+    PATH_SUFFIXES eigen3 eigen)
 
   if(EIGEN3_INCLUDE_DIR)
     _eigen3_check_version()
--- gtsam-4.1.0.orig/wrap/pybind11/tools/FindPythonLibsNew.cmake
+++ gtsam-4.1.0/wrap/pybind11/tools/FindPythonLibsNew.cmake
@@ -52,33 +52,65 @@
 
 # Checking for the extension makes sure that `LibsNew` was found and not just `Libs`.
 if(PYTHONLIBS_FOUND AND PYTHON_MODULE_EXTENSION)
-    return()
+  return()
 endif()
 
-# Use the Python interpreter to find the libs.
-if(NOT PythonLibsNew_FIND_VERSION)
-    set(PythonLibsNew_FIND_VERSION "")
+if(PythonLibsNew_FIND_QUIETLY)
+  set(_pythonlibs_quiet QUIET)
 endif()
+
 if(PythonLibsNew_FIND_REQUIRED)
-    find_package(PythonInterp ${PythonLibsNew_FIND_VERSION} REQUIRED)
-else()
-    find_package(PythonInterp ${PythonLibsNew_FIND_VERSION})
+  set(_pythonlibs_required REQUIRED)
+endif()
+
+# Check to see if the `python` command is present and from a virtual
+# environment, conda, or GHA activation - if it is, try to use that.
+
+if(NOT DEFINED PYTHON_EXECUTABLE)
+  if(DEFINED ENV{VIRTUAL_ENV})
+    find_program(
+      PYTHON_EXECUTABLE python
+      PATHS "$ENV{VIRTUAL_ENV}" "$ENV{VIRTUAL_ENV}/bin"
+      NO_DEFAULT_PATH)
+  elseif(DEFINED ENV{CONDA_PREFIX})
+    find_program(
+      PYTHON_EXECUTABLE python
+      PATHS "$ENV{CONDA_PREFIX}" "$ENV{CONDA_PREFIX}/bin"
+      NO_DEFAULT_PATH)
+  elseif(DEFINED ENV{pythonLocation})
+    find_program(
+      PYTHON_EXECUTABLE python
+      PATHS "$ENV{pythonLocation}" "$ENV{pythonLocation}/bin"
+      NO_DEFAULT_PATH)
+  endif()
+  if(NOT PYTHON_EXECUTABLE)
+    unset(PYTHON_EXECUTABLE)
+  endif()
+endif()
+
+# Use the Python interpreter to find the libs.
+if(NOT PythonLibsNew_FIND_VERSION)
+  set(PythonLibsNew_FIND_VERSION "")
 endif()
 
+find_package(PythonInterp ${PythonLibsNew_FIND_VERSION} ${_pythonlibs_required}
+             ${_pythonlibs_quiet})
+
 if(NOT PYTHONINTERP_FOUND)
-    set(PYTHONLIBS_FOUND FALSE)
-    set(PythonLibsNew_FOUND FALSE)
-    return()
+  set(PYTHONLIBS_FOUND FALSE)
+  set(PythonLibsNew_FOUND FALSE)
+  return()
 endif()
 
-# According to http://stackoverflow.com/questions/646518/python-how-to-detect-debug-interpreter
+# According to https://stackoverflow.com/questions/646518/python-how-to-detect-debug-interpreter
 # testing whether sys has the gettotalrefcount function is a reliable, cross-platform
 # way to detect a CPython debug interpreter.
 #
 # The library suffix is from the config var LDVERSION sometimes, otherwise
 # VERSION. VERSION will typically be like "2.7" on unix, and "27" on windows.
-execute_process(COMMAND "${PYTHON_EXECUTABLE}" "-c"
-    "from distutils import sysconfig as s;import sys;import struct;
+execute_process(
+  COMMAND
+    "${PYTHON_EXECUTABLE}" "-c" "from distutils import sysconfig as s;import sys;import struct;
 print('.'.join(str(v) for v in sys.version_info));
 print(sys.prefix);
 print(s.get_python_inc(plat_specific=True));
@@ -90,23 +122,22 @@ print(s.get_config_var('LDVERSION') or s
 print(s.get_config_var('LIBDIR') or '');
 print(s.get_config_var('MULTIARCH') or '');
 "
-    RESULT_VARIABLE _PYTHON_SUCCESS
-    OUTPUT_VARIABLE _PYTHON_VALUES
-    ERROR_VARIABLE _PYTHON_ERROR_VALUE)
+  RESULT_VARIABLE _PYTHON_SUCCESS
+  OUTPUT_VARIABLE _PYTHON_VALUES
+  ERROR_VARIABLE _PYTHON_ERROR_VALUE)
 
 if(NOT _PYTHON_SUCCESS MATCHES 0)
-    if(PythonLibsNew_FIND_REQUIRED)
-        message(FATAL_ERROR
-            "Python config failure:\n${_PYTHON_ERROR_VALUE}")
-    endif()
-    set(PYTHONLIBS_FOUND FALSE)
-    set(PythonLibsNew_FOUND FALSE)
-    return()
+  if(PythonLibsNew_FIND_REQUIRED)
+    message(FATAL_ERROR "Python config failure:\n${_PYTHON_ERROR_VALUE}")
+  endif()
+  set(PYTHONLIBS_FOUND FALSE)
+  set(PythonLibsNew_FOUND FALSE)
+  return()
 endif()
 
 # Convert the process output into a list
 if(WIN32)
-    string(REGEX REPLACE "\\\\" "/" _PYTHON_VALUES ${_PYTHON_VALUES})
+  string(REGEX REPLACE "\\\\" "/" _PYTHON_VALUES ${_PYTHON_VALUES})
 endif()
 string(REGEX REPLACE ";" "\\\\;" _PYTHON_VALUES ${_PYTHON_VALUES})
 string(REGEX REPLACE "\n" ";" _PYTHON_VALUES ${_PYTHON_VALUES})
@@ -124,16 +155,15 @@ list(GET _PYTHON_VALUES 9 PYTHON_MULTIAR
 # Make sure the Python has the same pointer-size as the chosen compiler
 # Skip if CMAKE_SIZEOF_VOID_P is not defined
 if(CMAKE_SIZEOF_VOID_P AND (NOT "${PYTHON_SIZEOF_VOID_P}" STREQUAL "${CMAKE_SIZEOF_VOID_P}"))
-    if(PythonLibsNew_FIND_REQUIRED)
-        math(EXPR _PYTHON_BITS "${PYTHON_SIZEOF_VOID_P} * 8")
-        math(EXPR _CMAKE_BITS "${CMAKE_SIZEOF_VOID_P} * 8")
-        message(FATAL_ERROR
-            "Python config failure: Python is ${_PYTHON_BITS}-bit, "
-            "chosen compiler is  ${_CMAKE_BITS}-bit")
-    endif()
-    set(PYTHONLIBS_FOUND FALSE)
-    set(PythonLibsNew_FOUND FALSE)
-    return()
+  if(PythonLibsNew_FIND_REQUIRED)
+    math(EXPR _PYTHON_BITS "${PYTHON_SIZEOF_VOID_P} * 8")
+    math(EXPR _CMAKE_BITS "${CMAKE_SIZEOF_VOID_P} * 8")
+    message(FATAL_ERROR "Python config failure: Python is ${_PYTHON_BITS}-bit, "
+                        "chosen compiler is  ${_CMAKE_BITS}-bit")
+  endif()
+  set(PYTHONLIBS_FOUND FALSE)
+  set(PythonLibsNew_FOUND FALSE)
+  return()
 endif()
 
 # The built-in FindPython didn't always give the version numbers
@@ -141,6 +171,7 @@ string(REGEX REPLACE "\\." ";" _PYTHON_V
 list(GET _PYTHON_VERSION_LIST 0 PYTHON_VERSION_MAJOR)
 list(GET _PYTHON_VERSION_LIST 1 PYTHON_VERSION_MINOR)
 list(GET _PYTHON_VERSION_LIST 2 PYTHON_VERSION_PATCH)
+set(PYTHON_VERSION "${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}.${PYTHON_VERSION_PATCH}")
 
 # Make sure all directory separators are '/'
 string(REGEX REPLACE "\\\\" "/" PYTHON_PREFIX "${PYTHON_PREFIX}")
@@ -148,79 +179,77 @@ string(REGEX REPLACE "\\\\" "/" PYTHON_I
 string(REGEX REPLACE "\\\\" "/" PYTHON_SITE_PACKAGES "${PYTHON_SITE_PACKAGES}")
 
 if(CMAKE_HOST_WIN32)
-    set(PYTHON_LIBRARY
-        "${PYTHON_PREFIX}/libs/python${PYTHON_LIBRARY_SUFFIX}.lib")
-
-    # when run in a venv, PYTHON_PREFIX points to it. But the libraries remain in the
-    # original python installation. They may be found relative to PYTHON_INCLUDE_DIR.
-    if(NOT EXISTS "${PYTHON_LIBRARY}")
-        get_filename_component(_PYTHON_ROOT ${PYTHON_INCLUDE_DIR} DIRECTORY)
-        set(PYTHON_LIBRARY
-            "${_PYTHON_ROOT}/libs/python${PYTHON_LIBRARY_SUFFIX}.lib")
-    endif()
-
-    # if we are in MSYS & MINGW, and we didn't find windows python lib, look for system python lib
-    if(DEFINED ENV{MSYSTEM} AND MINGW AND NOT EXISTS "${PYTHON_LIBRARY}")
-        if(PYTHON_MULTIARCH)
-            set(_PYTHON_LIBS_SEARCH "${PYTHON_LIBDIR}/${PYTHON_MULTIARCH}" "${PYTHON_LIBDIR}")
-        else()
-            set(_PYTHON_LIBS_SEARCH "${PYTHON_LIBDIR}")
-        endif()
-        unset(PYTHON_LIBRARY)
-        find_library(PYTHON_LIBRARY
-            NAMES "python${PYTHON_LIBRARY_SUFFIX}"
-            PATHS ${_PYTHON_LIBS_SEARCH}
-            NO_DEFAULT_PATH)
-    endif()
+  set(PYTHON_LIBRARY "${PYTHON_PREFIX}/libs/python${PYTHON_LIBRARY_SUFFIX}.lib")
 
-    # raise an error if the python libs are still not found.
-    if(NOT EXISTS "${PYTHON_LIBRARY}")
-        message(FATAL_ERROR "Python libraries not found")
-    endif()
-
-else()
+  # when run in a venv, PYTHON_PREFIX points to it. But the libraries remain in the
+  # original python installation. They may be found relative to PYTHON_INCLUDE_DIR.
+  if(NOT EXISTS "${PYTHON_LIBRARY}")
+    get_filename_component(_PYTHON_ROOT ${PYTHON_INCLUDE_DIR} DIRECTORY)
+    set(PYTHON_LIBRARY "${_PYTHON_ROOT}/libs/python${PYTHON_LIBRARY_SUFFIX}.lib")
+  endif()
+
+  # if we are in MSYS & MINGW, and we didn't find windows python lib, look for system python lib
+  if(DEFINED ENV{MSYSTEM}
+     AND MINGW
+     AND NOT EXISTS "${PYTHON_LIBRARY}")
     if(PYTHON_MULTIARCH)
-        set(_PYTHON_LIBS_SEARCH "${PYTHON_LIBDIR}/${PYTHON_MULTIARCH}" "${PYTHON_LIBDIR}")
+      set(_PYTHON_LIBS_SEARCH "${PYTHON_LIBDIR}/${PYTHON_MULTIARCH}" "${PYTHON_LIBDIR}")
     else()
-        set(_PYTHON_LIBS_SEARCH "${PYTHON_LIBDIR}")
-    endif()
-    #message(STATUS "Searching for Python libs in ${_PYTHON_LIBS_SEARCH}")
-    # Probably this needs to be more involved. It would be nice if the config
-    # information the python interpreter itself gave us were more complete.
-    find_library(PYTHON_LIBRARY
-        NAMES "python${PYTHON_LIBRARY_SUFFIX}"
-        PATHS ${_PYTHON_LIBS_SEARCH}
-        NO_DEFAULT_PATH)
-
-    # If all else fails, just set the name/version and let the linker figure out the path.
-    if(NOT PYTHON_LIBRARY)
-        set(PYTHON_LIBRARY python${PYTHON_LIBRARY_SUFFIX})
+      set(_PYTHON_LIBS_SEARCH "${PYTHON_LIBDIR}")
     endif()
+    unset(PYTHON_LIBRARY)
+    find_library(
+      PYTHON_LIBRARY
+      NAMES "python${PYTHON_LIBRARY_SUFFIX}"
+      PATHS ${_PYTHON_LIBS_SEARCH}
+      NO_DEFAULT_PATH)
+  endif()
+
+  # raise an error if the python libs are still not found.
+  if(NOT EXISTS "${PYTHON_LIBRARY}")
+    message(FATAL_ERROR "Python libraries not found")
+  endif()
+
+else()
+  if(PYTHON_MULTIARCH)
+    set(_PYTHON_LIBS_SEARCH "${PYTHON_LIBDIR}/${PYTHON_MULTIARCH}" "${PYTHON_LIBDIR}")
+  else()
+    set(_PYTHON_LIBS_SEARCH "${PYTHON_LIBDIR}")
+  endif()
+  #message(STATUS "Searching for Python libs in ${_PYTHON_LIBS_SEARCH}")
+  # Probably this needs to be more involved. It would be nice if the config
+  # information the python interpreter itself gave us were more complete.
+  find_library(
+    PYTHON_LIBRARY
+    NAMES "python${PYTHON_LIBRARY_SUFFIX}"
+    PATHS ${_PYTHON_LIBS_SEARCH}
+    NO_DEFAULT_PATH)
+
+  # If all else fails, just set the name/version and let the linker figure out the path.
+  if(NOT PYTHON_LIBRARY)
+    set(PYTHON_LIBRARY python${PYTHON_LIBRARY_SUFFIX})
+  endif()
 endif()
 
-MARK_AS_ADVANCED(
-  PYTHON_LIBRARY
-  PYTHON_INCLUDE_DIR
-)
+mark_as_advanced(PYTHON_LIBRARY PYTHON_INCLUDE_DIR)
 
 # We use PYTHON_INCLUDE_DIR, PYTHON_LIBRARY and PYTHON_DEBUG_LIBRARY for the
 # cache entries because they are meant to specify the location of a single
 # library. We now set the variables listed by the documentation for this
 # module.
-SET(PYTHON_INCLUDE_DIRS "${PYTHON_INCLUDE_DIR}")
-SET(PYTHON_LIBRARIES "${PYTHON_LIBRARY}")
+set(PYTHON_INCLUDE_DIRS "${PYTHON_INCLUDE_DIR}")
+set(PYTHON_LIBRARIES "${PYTHON_LIBRARY}")
 if(NOT PYTHON_DEBUG_LIBRARY)
-    SET(PYTHON_DEBUG_LIBRARY "")
+  set(PYTHON_DEBUG_LIBRARY "")
 endif()
-SET(PYTHON_DEBUG_LIBRARIES "${PYTHON_DEBUG_LIBRARY}")
+set(PYTHON_DEBUG_LIBRARIES "${PYTHON_DEBUG_LIBRARY}")
 
-find_package_message(PYTHON
-    "Found PythonLibs: ${PYTHON_LIBRARY}"
-    "${PYTHON_EXECUTABLE}${PYTHON_VERSION_STRING}")
+find_package_message(PYTHON "Found PythonLibs: ${PYTHON_LIBRARY}"
+                     "${PYTHON_EXECUTABLE}${PYTHON_VERSION_STRING}")
 
 set(PYTHONLIBS_FOUND TRUE)
 set(PythonLibsNew_FOUND TRUE)
 
 if(NOT PYTHON_MODULE_PREFIX)
-    SET(PYTHON_MODULE_PREFIX "")
+  set(PYTHON_MODULE_PREFIX "")
 endif()
--- gtsam-4.1.0.orig/wrap/pybind11/tools/check-style.sh
+++ gtsam-4.1.0/wrap/pybind11/tools/check-style.sh
@@ -4,45 +4,19 @@
 #
 # This script currently checks for
 #
-# 1. use of tabs instead of spaces
-# 2. MSDOS-style CRLF endings
-# 3. trailing spaces
-# 4. missing space between keyword and parenthesis, e.g.: for(, if(, while(
-# 5. Missing space between right parenthesis and brace, e.g. 'for (...){'
-# 6. opening brace on its own line. It should always be on the same line as the
+# 1. missing space between keyword and parenthesis, e.g.: for(, if(, while(
+# 2. Missing space between right parenthesis and brace, e.g. 'for (...){'
+# 3. opening brace on its own line. It should always be on the same line as the
 #    if/while/for/do statement.
 #
-# Invoke as: tools/check-style.sh
+# Invoke as: tools/check-style.sh <filenames>
 #
 
 check_style_errors=0
 IFS=$'\n'
 
-found="$( GREP_COLORS='mt=41' GREP_COLOR='41' grep $'\t' include tests/*.{cpp,py,h} docs/*.rst -rn --color=always )"
-if [ -n "$found" ]; then
-    # The mt=41 sets a red background for matched tabs:
-    echo -e '\033[31;01mError: found tab characters in the following files:\033[0m'
-    check_style_errors=1
-    echo "$found" | sed -e 's/^/    /'
-fi
-
-
-found="$( grep -IUlr $'\r' include tests/*.{cpp,py,h} docs/*.rst --color=always )"
-if [ -n "$found" ]; then
-    echo -e '\033[31;01mError: found CRLF characters in the following files:\033[0m'
-    check_style_errors=1
-    echo "$found" | sed -e 's/^/    /'
-fi
-
-found="$(GREP_COLORS='mt=41' GREP_COLOR='41' grep '[[:blank:]]\+$' include tests/*.{cpp,py,h} docs/*.rst -rn --color=always )"
-if [ -n "$found" ]; then
-    # The mt=41 sets a red background for matched trailing spaces
-    echo -e '\033[31;01mError: found trailing spaces in the following files:\033[0m'
-    check_style_errors=1
-    echo "$found" | sed -e 's/^/    /'
-fi
 
-found="$(grep '\<\(if\|for\|while\|catch\)(\|){' include tests/*.{cpp,h} -rn --color=always)"
+found="$(grep '\<\(if\|for\|while\|catch\)(\|){' $@ -rn --color=always)"
 if [ -n "$found" ]; then
     echo -e '\033[31;01mError: found the following coding style problems:\033[0m'
     check_style_errors=1
@@ -60,7 +34,7 @@ last && /^\s*{/ {
     last=""
 }
 { last = /(if|for|while|catch|switch)\s*\(.*\)\s*$/ ? $0 : "" }
-' $(find include -type f) tests/*.{cpp,h} docs/*.rst)"
+' $(find include -type f) $@)"
 if [ -n "$found" ]; then
     check_style_errors=1
     echo -e '\033[31;01mError: braces should occur on the same line as the if/while/.. statement. Found issues in the following files:\033[0m'
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/tools/cmake_uninstall.cmake.in
@@ -0,0 +1,23 @@
+# Source: https://gitlab.kitware.com/cmake/community/-/wikis/FAQ#can-i-do-make-uninstall-with-cmake
+
+if(NOT EXISTS "@CMAKE_BINARY_DIR@/install_manifest.txt")
+  message(FATAL_ERROR "Cannot find install manifest: @CMAKE_BINARY_DIR@/install_manifest.txt")
+endif()
+
+file(READ "@CMAKE_BINARY_DIR@/install_manifest.txt" files)
+string(REGEX REPLACE "\n" ";" files "${files}")
+foreach(file ${files})
+  message(STATUS "Uninstalling $ENV{DESTDIR}${file}")
+  if(IS_SYMLINK "$ENV{DESTDIR}${file}" OR EXISTS "$ENV{DESTDIR}${file}")
+    exec_program(
+      "@CMAKE_COMMAND@" ARGS
+      "-E remove \"$ENV{DESTDIR}${file}\""
+      OUTPUT_VARIABLE rm_out
+      RETURN_VALUE rm_retval)
+    if(NOT "${rm_retval}" STREQUAL 0)
+      message(FATAL_ERROR "Problem when removing $ENV{DESTDIR}${file}")
+    endif()
+  else(IS_SYMLINK "$ENV{DESTDIR}${file}" OR EXISTS "$ENV{DESTDIR}${file}")
+    message(STATUS "File $ENV{DESTDIR}${file} does not exist.")
+  endif()
+endforeach()
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/tools/pybind11Common.cmake
@@ -0,0 +1,314 @@
+#[======================================================[.rst
+
+Adds the following targets::
+
+    pybind11::pybind11 - link to headers and pybind11
+    pybind11::module - Adds module links
+    pybind11::embed - Adds embed links
+    pybind11::lto - Link time optimizations (manual selection)
+    pybind11::thin_lto - Link time optimizations (manual selection)
+    pybind11::python_link_helper - Adds link to Python libraries
+    pybind11::python2_no_register - Avoid warning/error with Python 2 + C++14/7
+    pybind11::windows_extras - MSVC bigobj and mp for building multithreaded
+    pybind11::opt_size - avoid optimizations that increase code size
+
+Adds the following functions::
+
+    pybind11_strip(target) - strip target after building on linux/macOS
+
+
+#]======================================================]
+
+# CMake 3.10 has an include_guard command, but we can't use that yet
+if(TARGET pybind11::lto)
+  return()
+endif()
+
+# If we are in subdirectory mode, all IMPORTED targets must be GLOBAL. If we
+# are in CONFIG mode, they should be "normal" targets instead.
+# In CMake 3.11+ you can promote a target to global after you create it,
+# which might be simpler than this check.
+get_property(
+  is_config
+  TARGET pybind11::headers
+  PROPERTY IMPORTED)
+if(NOT is_config)
+  set(optional_global GLOBAL)
+endif()
+
+# --------------------- Shared targets ----------------------------
+
+# Build an interface library target:
+add_library(pybind11::pybind11 IMPORTED INTERFACE ${optional_global})
+set_property(
+  TARGET pybind11::pybind11
+  APPEND
+  PROPERTY INTERFACE_LINK_LIBRARIES pybind11::headers)
+
+# Build a module target:
+add_library(pybind11::module IMPORTED INTERFACE ${optional_global})
+set_property(
+  TARGET pybind11::module
+  APPEND
+  PROPERTY INTERFACE_LINK_LIBRARIES pybind11::pybind11)
+
+# Build an embed library target:
+add_library(pybind11::embed IMPORTED INTERFACE ${optional_global})
+set_property(
+  TARGET pybind11::embed
+  APPEND
+  PROPERTY INTERFACE_LINK_LIBRARIES pybind11::pybind11)
+
+# ----------------------- no register ----------------------
+
+# Workaround for Python 2.7 and C++17 (C++14 as a warning) incompatibility
+# This adds the flags -Wno-register and -Wno-deprecated-register if the compiler
+# is Clang 3.9+ or AppleClang and the compile language is CXX, or /wd5033 for MSVC (all languages,
+# since MSVC didn't recognize COMPILE_LANGUAGE until CMake 3.11+).
+
+add_library(pybind11::python2_no_register INTERFACE IMPORTED ${optional_global})
+set(clang_4plus
+    "$<AND:$<CXX_COMPILER_ID:Clang>,$<NOT:$<VERSION_LESS:$<CXX_COMPILER_VERSION>,3.9>>>")
+set(no_register "$<OR:${clang_4plus},$<CXX_COMPILER_ID:AppleClang>>")
+
+if(MSVC AND CMAKE_VERSION VERSION_LESS 3.11)
+  set(cxx_no_register "${no_register}")
+else()
+  set(cxx_no_register "$<AND:$<COMPILE_LANGUAGE:CXX>,${no_register}>")
+endif()
+
+set(msvc "$<CXX_COMPILER_ID:MSVC>")
+
+set_property(
+  TARGET pybind11::python2_no_register
+  PROPERTY INTERFACE_COMPILE_OPTIONS
+           "$<${cxx_no_register}:-Wno-register;-Wno-deprecated-register>" "$<${msvc}:/wd5033>")
+
+# --------------------------- link helper ---------------------------
+
+add_library(pybind11::python_link_helper IMPORTED INTERFACE ${optional_global})
+
+if(CMAKE_VERSION VERSION_LESS 3.13)
+  # In CMake 3.11+, you can set INTERFACE properties via the normal methods, and
+  # this would be simpler.
+  set_property(
+    TARGET pybind11::python_link_helper
+    APPEND
+    PROPERTY INTERFACE_LINK_LIBRARIES "$<$<PLATFORM_ID:Darwin>:-undefined dynamic_lookup>")
+else()
+  # link_options was added in 3.13+
+  # This is safer, because you are ensured the deduplication pass in CMake will not consider
+  # these separate and remove one but not the other.
+  set_property(
+    TARGET pybind11::python_link_helper
+    APPEND
+    PROPERTY INTERFACE_LINK_OPTIONS "$<$<PLATFORM_ID:Darwin>:LINKER:-undefined,dynamic_lookup>")
+endif()
+
+# ------------------------ Windows extras -------------------------
+
+add_library(pybind11::windows_extras IMPORTED INTERFACE ${optional_global})
+
+if(MSVC)
+  # /MP enables multithreaded builds (relevant when there are many files), /bigobj is
+  # needed for bigger binding projects due to the limit to 64k addressable sections
+  set_property(
+    TARGET pybind11::windows_extras
+    APPEND
+    PROPERTY INTERFACE_COMPILE_OPTIONS /bigobj)
+
+  if(CMAKE_VERSION VERSION_LESS 3.11)
+    set_property(
+      TARGET pybind11::windows_extras
+      APPEND
+      PROPERTY INTERFACE_COMPILE_OPTIONS $<$<NOT:$<CONFIG:Debug>>:/MP>)
+  else()
+    # Only set these options for C++ files.  This is important so that, for
+    # instance, projects that include other types of source files like CUDA
+    # .cu files don't get these options propagated to nvcc since that would
+    # cause the build to fail.
+    set_property(
+      TARGET pybind11::windows_extras
+      APPEND
+      PROPERTY INTERFACE_COMPILE_OPTIONS $<$<NOT:$<CONFIG:Debug>>:$<$<COMPILE_LANGUAGE:CXX>:/MP>>)
+  endif()
+endif()
+
+# ----------------------- Optimize binary size --------------------------
+
+add_library(pybind11::opt_size IMPORTED INTERFACE ${optional_global})
+
+if(MSVC)
+  set(PYBIND11_OPT_SIZE /Os)
+else()
+  set(PYBIND11_OPT_SIZE -Os)
+endif()
+
+set_property(
+  TARGET pybind11::opt_size
+  APPEND
+  PROPERTY INTERFACE_COMPILE_OPTIONS $<$<CONFIG:Release>:${PYBIND11_OPT_SIZE}>
+           $<$<CONFIG:MinSizeRel>:${PYBIND11_OPT_SIZE}>
+           $<$<CONFIG:RelWithDebInfo>:${PYBIND11_OPT_SIZE}>)
+
+# ----------------------- Legacy option --------------------------
+
+# Warn or error if old variable name used
+if(PYBIND11_CPP_STANDARD)
+  string(REGEX MATCH [[..$]] VAL "${PYBIND11_CPP_STANDARD}")
+  if(CMAKE_CXX_STANDARD)
+    if(NOT CMAKE_CXX_STANDARD STREQUAL VAL)
+      message(WARNING "CMAKE_CXX_STANDARD=${CMAKE_CXX_STANDARD} does not match "
+                      "PYBIND11_CPP_STANDARD=${PYBIND11_CPP_STANDARD}, "
+                      "please remove PYBIND11_CPP_STANDARD from your cache")
+    endif()
+  else()
+    set(supported_standards 11 14 17 20)
+    if("${VAL}" IN_LIST supported_standards)
+      message(WARNING "USE -DCMAKE_CXX_STANDARD=${VAL} instead of PYBIND11_CPP_STANDARD")
+      set(CMAKE_CXX_STANDARD
+          ${VAL}
+          CACHE STRING "From PYBIND11_CPP_STANDARD")
+    else()
+      message(FATAL_ERROR "PYBIND11_CPP_STANDARD should be replaced with CMAKE_CXX_STANDARD "
+                          "(last two chars: ${VAL} not understood as a valid CXX std)")
+    endif()
+  endif()
+endif()
+
+# --------------------- Python specifics -------------------------
+
+# Check to see which Python mode we are in, new, old, or no python
+if(PYBIND11_NOPYTHON)
+  set(_pybind11_nopython ON)
+elseif(
+  PYBIND11_FINDPYTHON
+  OR Python_FOUND
+  OR Python2_FOUND
+  OR Python3_FOUND)
+  # New mode
+  include("${CMAKE_CURRENT_LIST_DIR}/pybind11NewTools.cmake")
+
+else()
+
+  # Classic mode
+  include("${CMAKE_CURRENT_LIST_DIR}/pybind11Tools.cmake")
+
+endif()
+
+# --------------------- LTO -------------------------------
+
+include(CheckCXXCompilerFlag)
+
+# Checks whether the given CXX/linker flags can compile and link a cxx file.
+# cxxflags and linkerflags are lists of flags to use.  The result variable is a
+# unique variable name for each set of flags: the compilation result will be
+# cached base on the result variable.  If the flags work, sets them in
+# cxxflags_out/linkerflags_out internal cache variables (in addition to
+# ${result}).
+function(_pybind11_return_if_cxx_and_linker_flags_work result cxxflags linkerflags cxxflags_out
+         linkerflags_out)
+  set(CMAKE_REQUIRED_LIBRARIES ${linkerflags})
+  check_cxx_compiler_flag("${cxxflags}" ${result})
+  if(${result})
+    set(${cxxflags_out}
+        "${cxxflags}"
+        PARENT_SCOPE)
+    set(${linkerflags_out}
+        "${linkerflags}"
+        PARENT_SCOPE)
+  endif()
+endfunction()
+
+function(_pybind11_generate_lto target prefer_thin_lto)
+  if(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
+    set(cxx_append "")
+    set(linker_append "")
+    if(CMAKE_CXX_COMPILER_ID MATCHES "Clang" AND NOT APPLE)
+      # Clang Gold plugin does not support -Os; append -O3 to MinSizeRel builds to override it
+      set(linker_append ";$<$<CONFIG:MinSizeRel>:-O3>")
+    elseif(CMAKE_CXX_COMPILER_ID MATCHES "GNU")
+      set(cxx_append ";-fno-fat-lto-objects")
+    endif()
+
+    if(CMAKE_CXX_COMPILER_ID MATCHES "Clang" AND prefer_thin_lto)
+      _pybind11_return_if_cxx_and_linker_flags_work(
+        HAS_FLTO_THIN "-flto=thin${cxx_append}" "-flto=thin${linker_append}"
+        PYBIND11_LTO_CXX_FLAGS PYBIND11_LTO_LINKER_FLAGS)
+    endif()
+
+    if(NOT HAS_FLTO_THIN)
+      _pybind11_return_if_cxx_and_linker_flags_work(
+        HAS_FLTO "-flto${cxx_append}" "-flto${linker_append}" PYBIND11_LTO_CXX_FLAGS
+        PYBIND11_LTO_LINKER_FLAGS)
+    endif()
+  elseif(CMAKE_CXX_COMPILER_ID MATCHES "Intel")
+    # Intel equivalent to LTO is called IPO
+    _pybind11_return_if_cxx_and_linker_flags_work(HAS_INTEL_IPO "-ipo" "-ipo"
+                                                  PYBIND11_LTO_CXX_FLAGS PYBIND11_LTO_LINKER_FLAGS)
+  elseif(MSVC)
+    # cmake only interprets libraries as linker flags when they start with a - (otherwise it
+    # converts /LTCG to \LTCG as if it was a Windows path).  Luckily MSVC supports passing flags
+    # with - instead of /, even if it is a bit non-standard:
+    _pybind11_return_if_cxx_and_linker_flags_work(HAS_MSVC_GL_LTCG "/GL" "-LTCG"
+                                                  PYBIND11_LTO_CXX_FLAGS PYBIND11_LTO_LINKER_FLAGS)
+  endif()
+
+  # Enable LTO flags if found, except for Debug builds
+  if(PYBIND11_LTO_CXX_FLAGS)
+    set(not_debug "$<NOT:$<CONFIG:Debug>>")
+    set(cxx_lang "$<COMPILE_LANGUAGE:CXX>")
+    if(MSVC AND CMAKE_VERSION VERSION_LESS 3.11)
+      set(genex "${not_debug}")
+    else()
+      set(genex "$<AND:${not_debug},${cxx_lang}>")
+    endif()
+    set_property(
+      TARGET ${target}
+      APPEND
+      PROPERTY INTERFACE_COMPILE_OPTIONS "$<${genex}:${PYBIND11_LTO_CXX_FLAGS}>")
+    if(CMAKE_PROJECT_NAME STREQUAL "pybind11")
+      message(STATUS "${target} enabled")
+    endif()
+  else()
+    if(CMAKE_PROJECT_NAME STREQUAL "pybind11")
+      message(STATUS "${target} disabled (not supported by the compiler and/or linker)")
+    endif()
+  endif()
+
+  if(PYBIND11_LTO_LINKER_FLAGS)
+    if(CMAKE_VERSION VERSION_LESS 3.11)
+      set_property(
+        TARGET ${target}
+        APPEND
+        PROPERTY INTERFACE_LINK_LIBRARIES "$<${not_debug}:${PYBIND11_LTO_LINKER_FLAGS}>")
+    else()
+      set_property(
+        TARGET ${target}
+        APPEND
+        PROPERTY INTERFACE_LINK_OPTIONS "$<${not_debug}:${PYBIND11_LTO_LINKER_FLAGS}>")
+    endif()
+  endif()
+endfunction()
+
+add_library(pybind11::lto IMPORTED INTERFACE ${optional_global})
+_pybind11_generate_lto(pybind11::lto FALSE)
+
+add_library(pybind11::thin_lto IMPORTED INTERFACE ${optional_global})
+_pybind11_generate_lto(pybind11::thin_lto TRUE)
+
+# ---------------------- pybind11_strip -----------------------------
+
+function(pybind11_strip target_name)
+  # Strip unnecessary sections of the binary on Linux/macOS
+  if(CMAKE_STRIP)
+    if(APPLE)
+      set(x_opt -x)
+    endif()
+
+    add_custom_command(
+      TARGET ${target_name}
+      POST_BUILD
+      COMMAND ${CMAKE_STRIP} ${x_opt} $<TARGET_FILE:${target_name}>)
+  endif()
+endfunction()
--- gtsam-4.1.0.orig/wrap/pybind11/tools/pybind11Config.cmake.in
+++ gtsam-4.1.0/wrap/pybind11/tools/pybind11Config.cmake.in
@@ -1,104 +1,145 @@
-# pybind11Config.cmake
-# --------------------
-#
-# PYBIND11 cmake module.
-# This module sets the following variables in your project::
-#
-#   pybind11_FOUND - true if pybind11 and all required components found on the system
-#   pybind11_VERSION - pybind11 version in format Major.Minor.Release
-#   pybind11_INCLUDE_DIRS - Directories where pybind11 and python headers are located.
-#   pybind11_INCLUDE_DIR - Directory where pybind11 headers are located.
-#   pybind11_DEFINITIONS - Definitions necessary to use pybind11, namely USING_pybind11.
-#   pybind11_LIBRARIES - compile flags and python libraries (as needed) to link against.
-#   pybind11_LIBRARY - empty.
-#   CMAKE_MODULE_PATH - appends location of accompanying FindPythonLibsNew.cmake and
-#                       pybind11Tools.cmake modules.
-#
-#
-# Available components: None
-#
-#
-# Exported targets::
-#
-# If pybind11 is found, this module defines the following :prop_tgt:`IMPORTED`
-# interface library targets::
-#
-#   pybind11::module - for extension modules
-#   pybind11::embed - for embedding the Python interpreter
-#
-# Python headers, libraries (as needed by platform), and the C++ standard
-# are attached to the target. Set PythonLibsNew variables to influence
-# python detection and CMAKE_CXX_STANDARD (11 or 14) to influence standard
-# setting. ::
-#
-#   find_package(pybind11 CONFIG REQUIRED)
-#   message(STATUS "Found pybind11 v${pybind11_VERSION}: ${pybind11_INCLUDE_DIRS}")
-#
-#   # Create an extension module
-#   add_library(mylib MODULE main.cpp)
-#   target_link_libraries(mylib pybind11::module)
-#
-#   # Or embed the Python interpreter into an executable
-#   add_executable(myexe main.cpp)
-#   target_link_libraries(myexe pybind11::embed)
-#
-# Suggested usage::
-#
-# find_package with version info is not recommended except for release versions. ::
-#
-#   find_package(pybind11 CONFIG)
-#   find_package(pybind11 2.0 EXACT CONFIG REQUIRED)
-#
-#
-# The following variables can be set to guide the search for this package::
-#
-#   pybind11_DIR - CMake variable, set to directory containing this Config file
-#   CMAKE_PREFIX_PATH - CMake variable, set to root directory of this package
-#   PATH - environment variable, set to bin directory of this package
-#   CMAKE_DISABLE_FIND_PACKAGE_pybind11 - CMake variable, disables
-#     find_package(pybind11) when not REQUIRED, perhaps to force internal build
+#[=============================================================================[.rst
 
-@PACKAGE_INIT@
+pybind11Config.cmake
+--------------------
+
+PYBIND11 cmake module.
+This module sets the following variables in your project::
+
+  pybind11_FOUND - true if pybind11 and all required components found on the system
+  pybind11_VERSION - pybind11 version in format Major.Minor.Release
+  pybind11_VERSION_TYPE - pybind11 version type (dev, release)
+  pybind11_INCLUDE_DIRS - Directories where pybind11 and python headers are located.
+  pybind11_INCLUDE_DIR - Directory where pybind11 headers are located.
+  pybind11_DEFINITIONS - Definitions necessary to use pybind11, namely USING_pybind11.
+  pybind11_LIBRARIES - compile flags and python libraries (as needed) to link against.
+  pybind11_LIBRARY - empty.
+
+
+Available components: None
+
+
+Exported targets::
+
+If pybind11 is found, this module defines the following :prop_tgt:`IMPORTED`
+interface library targets::
+
+  pybind11::module - for extension modules
+  pybind11::embed - for embedding the Python interpreter
+
+Python headers, libraries (as needed by platform), and the C++ standard
+are attached to the target.
+
+Advanced targets are also supplied - these are primary for users building
+complex applications, and they are available in all modes::
+
+  pybind11::headers - Just the pybind11 headers and minimum compile requirements
+  pybind11::pybind11 - Python headers too
+  pybind11::python_link_helper - Just the "linking" part of pybind11:module, for CMake < 3.15
+  pybind11::python2_no_register - Quiets the warning/error when mixing C++14+ and Python 2, also included in pybind11::module
+  pybind11::thin_lto - An alternative to INTERPROCEDURAL_OPTIMIZATION
+  pybind11::lto - An alternative to INTERPROCEDURAL_OPTIMIZATION (also avoids thin LTO on clang)
+  pybind11::windows_extras - Adds bigobj and mp for MSVC
+
+Modes::
+
+There are two modes provided; classic, which is built on the old Python
+discovery packages in CMake, or the new FindPython mode, which uses FindPython
+from 3.12+ forward (3.15+ _highly_ recommended).
+
+New FindPython mode::
+
+To activate this mode, either call ``find_package(Python COMPONENTS Interpreter Development)``
+before finding this package, or set the ``PYBIND11_FINDPYTHON`` variable to ON. In this mode,
+you can either use the basic targets, or use the FindPython tools::
+
+  find_package(Python COMPONENTS Interpreter Development)
+  find_package(pybind11 CONFIG)
+
+  # pybind11 method:
+  pybind11_add_module(MyModule1 src1.cpp)
 
-set(PN pybind11)
+  # Python method:
+  Python_add_library(MyModule2 src2.cpp)
+  target_link_libraries(MyModule2 pybind11::headers)
+  set_target_properties(MyModule2 PROPERTIES
+                                  INTERPROCEDURAL_OPTIMIZATION ON
+                                  CXX__VISIBILITY_PRESET ON
+                                  VISIBLITY_INLINES_HIDDEN ON)
 
-# location of pybind11/pybind11.h
-set(${PN}_INCLUDE_DIR "${PACKAGE_PREFIX_DIR}/@CMAKE_INSTALL_INCLUDEDIR@")
+If you build targets yourself, you may be interested in stripping the output
+for reduced size; this is the one other feature that the helper function gives you.
 
-set(${PN}_LIBRARY "")
-set(${PN}_DEFINITIONS USING_${PN})
+Classic mode::
 
-check_required_components(${PN})
-
-# make detectable the FindPythonLibsNew.cmake module
-list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})
-
-include(pybind11Tools)
-
-if(NOT (CMAKE_VERSION VERSION_LESS 3.0))
-#-----------------------------------------------------------------------------
-# Don't include targets if this file is being picked up by another
-# project which has already built this as a subproject
-#-----------------------------------------------------------------------------
-if(NOT TARGET ${PN}::pybind11)
-    include("${CMAKE_CURRENT_LIST_DIR}/${PN}Targets.cmake")
-
-    find_package(PythonLibsNew ${PYBIND11_PYTHON_VERSION} MODULE REQUIRED)
-    set_property(TARGET ${PN}::pybind11 APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${PYTHON_INCLUDE_DIRS})
-    set_property(TARGET ${PN}::embed APPEND PROPERTY INTERFACE_LINK_LIBRARIES ${PYTHON_LIBRARIES})
-    if(WIN32 OR CYGWIN)
-      set_property(TARGET ${PN}::module APPEND PROPERTY INTERFACE_LINK_LIBRARIES ${PYTHON_LIBRARIES})
-    endif()
-
-    if(CMAKE_VERSION VERSION_LESS 3.3)
-      set_property(TARGET ${PN}::pybind11 APPEND PROPERTY INTERFACE_COMPILE_OPTIONS "${PYBIND11_CPP_STANDARD}")
-    else()
-      set_property(TARGET ${PN}::pybind11 APPEND PROPERTY INTERFACE_COMPILE_OPTIONS $<$<COMPILE_LANGUAGE:CXX>:${PYBIND11_CPP_STANDARD}>)
-    endif()
-
-    get_property(_iid TARGET ${PN}::pybind11 PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
-    get_property(_ill TARGET ${PN}::module PROPERTY INTERFACE_LINK_LIBRARIES)
-    set(${PN}_INCLUDE_DIRS ${_iid})
-    set(${PN}_LIBRARIES ${_ico} ${_ill})
+Set PythonLibsNew variables to influence python detection and
+CMAKE_CXX_STANDARD to influence standard setting. ::
+
+  find_package(pybind11 CONFIG REQUIRED)
+
+  # Create an extension module
+  add_library(mylib MODULE main.cpp)
+  target_link_libraries(mylib PUBLIC pybind11::module)
+
+  # Or embed the Python interpreter into an executable
+  add_executable(myexe main.cpp)
+  target_link_libraries(myexe PUBLIC pybind11::embed)
+
+Suggested usage::
+
+find_package with version info is not recommended except for release versions. ::
+
+  find_package(pybind11 CONFIG)
+  find_package(pybind11 2.0 EXACT CONFIG REQUIRED)
+
+
+The following variables can be set to guide the search for this package::
+
+  pybind11_DIR - CMake variable, set to directory containing this Config file
+  CMAKE_PREFIX_PATH - CMake variable, set to root directory of this package
+  PATH - environment variable, set to bin directory of this package
+  CMAKE_DISABLE_FIND_PACKAGE_pybind11 - CMake variable, disables
+    find_package(pybind11) when not REQUIRED, perhaps to force internal build
+
+Helper functions::
+
+  pybind11_add_module(...) - Add a library and setup all helpers
+  pybind11_strip(target) - Strip a target after building it (linux/macOS)
+  pybind11_extension(target) - Injects the Python extension name
+
+See ``pybind11Tools.cmake`` or ``pybind11NewTools.cmake`` for details on
+``pybind11_add_module``.
+
+#]=============================================================================]
+@PACKAGE_INIT@
+
+# Location of pybind11/pybind11.h
+set(pybind11_INCLUDE_DIR "${PACKAGE_PREFIX_DIR}/@CMAKE_INSTALL_INCLUDEDIR@")
+
+set(pybind11_LIBRARY "")
+set(pybind11_DEFINITIONS USING_pybind11)
+set(pybind11_VERSION_TYPE "@pybind11_VERSION_TYPE@")
+
+check_required_components(pybind11)
+
+if(TARGET pybind11::python_link_helper)
+  # This has already been setup elsewhere, such as with a previous call or
+  # add_subdirectory
+  return()
 endif()
+
+include("${CMAKE_CURRENT_LIST_DIR}/pybind11Targets.cmake")
+
+# Easier to use / remember
+add_library(pybind11::headers IMPORTED INTERFACE)
+set_target_properties(pybind11::headers PROPERTIES INTERFACE_LINK_LIBRARIES
+                                                   pybind11::pybind11_headers)
+
+include("${CMAKE_CURRENT_LIST_DIR}/pybind11Common.cmake")
+
+if(NOT pybind11_FIND_QUIETLY)
+  message(
+    STATUS
+      "Found pybind11: ${pybind11_INCLUDE_DIR} (found version \"${pybind11_VERSION}\" ${pybind11_VERSION_TYPE})"
+  )
 endif()
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/tools/pybind11NewTools.cmake
@@ -0,0 +1,217 @@
+# tools/pybind11NewTools.cmake -- Build system for the pybind11 modules
+#
+# Copyright (c) 2020 Wenzel Jakob <wenzel@inf.ethz.ch> and Henry Schreiner
+#
+# All rights reserved. Use of this source code is governed by a
+# BSD-style license that can be found in the LICENSE file.
+
+get_property(
+  is_config
+  TARGET pybind11::headers
+  PROPERTY IMPORTED)
+
+if(pybind11_FIND_QUIETLY)
+  set(_pybind11_quiet QUIET)
+endif()
+
+if(CMAKE_VERSION VERSION_LESS 3.12)
+  message(FATAL_ERROR "You cannot use the new FindPython module with CMake < 3.12")
+endif()
+
+if(NOT Python_FOUND
+   AND NOT Python3_FOUND
+   AND NOT Python2_FOUND)
+  if(NOT DEFINED Python_FIND_IMPLEMENTATIONS)
+    set(Python_FIND_IMPLEMENTATIONS CPython PyPy)
+  endif()
+
+  # GitHub Actions like activation
+  if(NOT DEFINED Python_ROOT_DIR AND DEFINED ENV{pythonLocation})
+    set(Python_ROOT_DIR "$ENV{pythonLocation}")
+  endif()
+
+  find_package(Python REQUIRED COMPONENTS Interpreter Development ${_pybind11_quiet})
+
+  # If we are in submodule mode, export the Python targets to global targets.
+  # If this behavior is not desired, FindPython _before_ pybind11.
+  if(NOT is_config)
+    set_property(TARGET Python::Python PROPERTY IMPORTED_GLOBAL TRUE)
+    set_property(TARGET Python::Interpreter PROPERTY IMPORTED_GLOBAL TRUE)
+    if(TARGET Python::Module)
+      set_property(TARGET Python::Module PROPERTY IMPORTED_GLOBAL TRUE)
+    endif()
+  endif()
+endif()
+
+if(Python_FOUND)
+  set(_Python
+      Python
+      CACHE INTERNAL "" FORCE)
+elseif(Python3_FOUND AND NOT Python2_FOUND)
+  set(_Python
+      Python3
+      CACHE INTERNAL "" FORCE)
+elseif(Python2_FOUND AND NOT Python3_FOUND)
+  set(_Python
+      Python2
+      CACHE INTERNAL "" FORCE)
+else()
+  message(AUTHOR_WARNING "Python2 and Python3 both present, pybind11 in "
+                         "PYBIND11_NOPYTHON mode (manually activate to silence warning)")
+  set(_pybind11_nopython ON)
+  return()
+endif()
+
+if(PYBIND11_MASTER_PROJECT)
+  if(${_Python}_INTERPRETER_ID MATCHES "PyPy")
+    message(STATUS "PyPy ${${_Python}_PyPy_VERSION} (Py ${${_Python}_VERSION})")
+  else()
+    message(STATUS "${_Python} ${${_Python}_VERSION}")
+  endif()
+endif()
+
+# Debug check - see https://stackoverflow.com/questions/646518/python-how-to-detect-debug-Interpreter
+execute_process(
+  COMMAND "${${_Python}_EXECUTABLE}" "-c" "import sys; sys.exit(hasattr(sys, 'gettotalrefcount'))"
+  RESULT_VARIABLE PYTHON_IS_DEBUG)
+
+# Get the suffix - SO is deprecated, should use EXT_SUFFIX, but this is
+# required for PyPy3 (as of 7.3.1)
+execute_process(
+  COMMAND "${${_Python}_EXECUTABLE}" "-c"
+          "from distutils import sysconfig; print(sysconfig.get_config_var('SO'))"
+  OUTPUT_VARIABLE _PYTHON_MODULE_EXTENSION
+  ERROR_QUIET OUTPUT_STRIP_TRAILING_WHITESPACE)
+
+# This needs to be available for the pybind11_extension function
+set(PYTHON_MODULE_EXTENSION
+    "${_PYTHON_MODULE_EXTENSION}"
+    CACHE INTERNAL "")
+
+# Python debug libraries expose slightly different objects before 3.8
+# https://docs.python.org/3.6/c-api/intro.html#debugging-builds
+# https://stackoverflow.com/questions/39161202/how-to-work-around-missing-pymodule-create2-in-amd64-win-python35-d-lib
+if(PYTHON_IS_DEBUG)
+  set_property(
+    TARGET pybind11::pybind11
+    APPEND
+    PROPERTY INTERFACE_COMPILE_DEFINITIONS Py_DEBUG)
+endif()
+
+# Check on every access - since Python2 and Python3 could have been used - do nothing in that case.
+
+if(DEFINED ${_Python}_INCLUDE_DIRS)
+  set_property(
+    TARGET pybind11::pybind11
+    APPEND
+    PROPERTY INTERFACE_INCLUDE_DIRECTORIES $<BUILD_INTERFACE:${${_Python}_INCLUDE_DIRS}>)
+endif()
+
+if(DEFINED ${_Python}_VERSION AND ${_Python}_VERSION VERSION_LESS 3)
+  set_property(
+    TARGET pybind11::pybind11
+    APPEND
+    PROPERTY INTERFACE_LINK_LIBRARIES pybind11::python2_no_register)
+endif()
+
+# In CMake 3.18+, you can find these separately, so include an if
+if(TARGET ${_Python}::${_Python})
+  set_property(
+    TARGET pybind11::embed
+    APPEND
+    PROPERTY INTERFACE_LINK_LIBRARIES ${_Python}::${_Python})
+endif()
+
+# CMake 3.15+ has this
+if(TARGET ${_Python}::Module)
+  set_property(
+    TARGET pybind11::module
+    APPEND
+    PROPERTY INTERFACE_LINK_LIBRARIES ${_Python}::Module)
+else()
+  set_property(
+    TARGET pybind11::module
+    APPEND
+    PROPERTY INTERFACE_LINK_LIBRARIES pybind11::python_link_helper)
+endif()
+
+# WITHOUT_SOABI and WITH_SOABI will disable the custom extension handling used by pybind11.
+# WITH_SOABI is passed on to python_add_library.
+function(pybind11_add_module target_name)
+  cmake_parse_arguments(PARSE_ARGV 1 ARG
+                        "STATIC;SHARED;MODULE;THIN_LTO;OPT_SIZE;NO_EXTRAS;WITHOUT_SOABI" "" "")
+
+  if(ARG_ADD_LIBRARY_STATIC)
+    set(type STATIC)
+  elseif(ARG_ADD_LIBRARY_SHARED)
+    set(type SHARED)
+  else()
+    set(type MODULE)
+  endif()
+
+  if("${_Python}" STREQUAL "Python")
+    python_add_library(${target_name} ${type} ${ARG_UNPARSED_ARGUMENTS})
+  elseif("${_Python}" STREQUAL "Python3")
+    python3_add_library(${target_name} ${type} ${ARG_UNPARSED_ARGUMENTS})
+  elseif("${_Python}" STREQUAL "Python2")
+    python2_add_library(${target_name} ${type} ${ARG_UNPARSED_ARGUMENTS})
+  else()
+    message(FATAL_ERROR "Cannot detect FindPython version: ${_Python}")
+  endif()
+
+  target_link_libraries(${target_name} PRIVATE pybind11::headers)
+
+  if(type STREQUAL "MODULE")
+    target_link_libraries(${target_name} PRIVATE pybind11::module)
+  else()
+    target_link_libraries(${target_name} PRIVATE pybind11::embed)
+  endif()
+
+  if(MSVC)
+    target_link_libraries(${target_name} PRIVATE pybind11::windows_extras)
+  endif()
+
+  if(DEFINED ${_Python}_VERSION AND ${_Python}_VERSION VERSION_LESS 3)
+    target_link_libraries(${target_name} PRIVATE pybind11::python2_no_register)
+  endif()
+
+  set_target_properties(${target_name} PROPERTIES CXX_VISIBILITY_PRESET "hidden"
+                                                  CUDA_VISIBILITY_PRESET "hidden")
+
+  # If we don't pass a WITH_SOABI or WITHOUT_SOABI, use our own default handling of extensions
+  if("${type}" STREQUAL "MODULE" AND (NOT ARG_WITHOUT_SOABI OR NOT "WITH_SOABI" IN_LIST
+                                                               ARG_UNPARSED_ARGUMENTS))
+    pybind11_extension(${target_name})
+  endif()
+
+  if(ARG_NO_EXTRAS)
+    return()
+  endif()
+
+  if(NOT DEFINED CMAKE_INTERPROCEDURAL_OPTIMIZATION)
+    if(ARG_THIN_LTO)
+      target_link_libraries(${target_name} PRIVATE pybind11::thin_lto)
+    else()
+      target_link_libraries(${target_name} PRIVATE pybind11::lto)
+    endif()
+  endif()
+
+  if(NOT MSVC AND NOT ${CMAKE_BUILD_TYPE} MATCHES Debug|RelWithDebInfo)
+    # Strip unnecessary sections of the binary on Linux/macOS
+    pybind11_strip(${target_name})
+  endif()
+
+  if(MSVC)
+    target_link_libraries(${target_name} PRIVATE pybind11::windows_extras)
+  endif()
+
+  if(ARG_OPT_SIZE)
+    target_link_libraries(${target_name} PRIVATE pybind11::opt_size)
+  endif()
+endfunction()
+
+function(pybind11_extension name)
+  # The extension is precomputed
+  set_target_properties(${name} PROPERTIES PREFIX "" SUFFIX "${PYTHON_MODULE_EXTENSION}")
+
+endfunction()
--- gtsam-4.1.0.orig/wrap/pybind11/tools/pybind11Tools.cmake
+++ gtsam-4.1.0/wrap/pybind11/tools/pybind11Tools.cmake
@@ -1,135 +1,133 @@
 # tools/pybind11Tools.cmake -- Build system for the pybind11 modules
 #
-# Copyright (c) 2015 Wenzel Jakob <wenzel@inf.ethz.ch>
+# Copyright (c) 2020 Wenzel Jakob <wenzel.jakob@epfl.ch>
 #
 # All rights reserved. Use of this source code is governed by a
 # BSD-style license that can be found in the LICENSE file.
 
-cmake_minimum_required(VERSION 2.8.12)
+# Built-in in CMake 3.5+
+include(CMakeParseArguments)
 
-# Add a CMake parameter for choosing a desired Python version
-if(NOT PYBIND11_PYTHON_VERSION)
-  set(PYBIND11_PYTHON_VERSION "" CACHE STRING "Python version to use for compiling modules")
+if(pybind11_FIND_QUIETLY)
+  set(_pybind11_quiet QUIET)
 endif()
 
-set(Python_ADDITIONAL_VERSIONS 3.9 3.8 3.7 3.6 3.5 3.4)
-find_package(PythonLibsNew ${PYBIND11_PYTHON_VERSION} REQUIRED)
-
-include(CheckCXXCompilerFlag)
-include(CMakeParseArguments)
-
-# Use the language standards abstraction if CMake supports it with the current compiler
-if(NOT CMAKE_VERSION VERSION_LESS 3.1)
-  if(NOT CMAKE_CXX_STANDARD)
-    if(CMAKE_CXX14_STANDARD_COMPILE_OPTION)
-      set(CMAKE_CXX_STANDARD 14)
-    elseif(CMAKE_CXX11_STANDARD_COMPILE_OPTION)
-      set(CMAKE_CXX_STANDARD 11)
-    endif()
-  endif()
-  if(CMAKE_CXX_STANDARD)
-    set(CMAKE_CXX_EXTENSIONS OFF)
-    set(CMAKE_CXX_STANDARD_REQUIRED ON)
-  endif()
+# If this is the first run, PYTHON_VERSION can stand in for PYBIND11_PYTHON_VERSION
+if(NOT DEFINED PYBIND11_PYTHON_VERSION AND DEFINED PYTHON_VERSION)
+  message(WARNING "Set PYBIND11_PYTHON_VERSION to search for a specific version, not "
+                  "PYTHON_VERSION (which is an output). Assuming that is what you "
+                  "meant to do and continuing anyway.")
+  set(PYBIND11_PYTHON_VERSION
+      "${PYTHON_VERSION}"
+      CACHE STRING "Python version to use for compiling modules")
+  unset(PYTHON_VERSION)
+  unset(PYTHON_VERSION CACHE)
+else()
+  # If this is set as a normal variable, promote it, otherwise, make an empty cache variable.
+  set(PYBIND11_PYTHON_VERSION
+      "${PYBIND11_PYTHON_VERSION}"
+      CACHE STRING "Python version to use for compiling modules")
 endif()
 
-# Fall back to heuristics
-if(NOT PYBIND11_CPP_STANDARD AND NOT CMAKE_CXX_STANDARD)
-  if(MSVC)
-    set(PYBIND11_CPP_STANDARD /std:c++14)
-  else()
-    check_cxx_compiler_flag("-std=c++14" HAS_CPP14_FLAG)
-    if(HAS_CPP14_FLAG)
-      set(PYBIND11_CPP_STANDARD -std=c++14)
-    else()
-      check_cxx_compiler_flag("-std=c++11" HAS_CPP11_FLAG)
-      if(HAS_CPP11_FLAG)
-        set(PYBIND11_CPP_STANDARD -std=c++11)
-      endif()
+# A user can set versions manually too
+set(Python_ADDITIONAL_VERSIONS
+    "3.9;3.8;3.7;3.6;3.5;3.4"
+    CACHE INTERNAL "")
+
+list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}")
+find_package(PythonLibsNew ${PYBIND11_PYTHON_VERSION} MODULE REQUIRED ${_pybind11_quiet})
+list(REMOVE_AT CMAKE_MODULE_PATH -1)
+
+# Cache variables so pybind11_add_module can be used in parent projects
+set(PYTHON_INCLUDE_DIRS
+    ${PYTHON_INCLUDE_DIRS}
+    CACHE INTERNAL "")
+set(PYTHON_LIBRARIES
+    ${PYTHON_LIBRARIES}
+    CACHE INTERNAL "")
+set(PYTHON_MODULE_PREFIX
+    ${PYTHON_MODULE_PREFIX}
+    CACHE INTERNAL "")
+set(PYTHON_MODULE_EXTENSION
+    ${PYTHON_MODULE_EXTENSION}
+    CACHE INTERNAL "")
+set(PYTHON_VERSION_MAJOR
+    ${PYTHON_VERSION_MAJOR}
+    CACHE INTERNAL "")
+set(PYTHON_VERSION_MINOR
+    ${PYTHON_VERSION_MINOR}
+    CACHE INTERNAL "")
+set(PYTHON_VERSION
+    ${PYTHON_VERSION}
+    CACHE INTERNAL "")
+set(PYTHON_IS_DEBUG
+    "${PYTHON_IS_DEBUG}"
+    CACHE INTERNAL "")
+
+if(PYBIND11_MASTER_PROJECT)
+  if(PYTHON_MODULE_EXTENSION MATCHES "pypy")
+    if(NOT DEFINED PYPY_VERSION)
+      execute_process(
+        COMMAND ${PYTHON_EXECUTABLE} -c
+                [=[import sys; print(".".join(map(str, sys.pypy_version_info[:3])))]=]
+        OUTPUT_VARIABLE pypy_version)
+      set(PYPY_VERSION
+          ${pypy_version}
+          CACHE INTERNAL "")
     endif()
+    message(STATUS "PYPY ${PYPY_VERSION} (Py ${PYTHON_VERSION})")
+  else()
+    message(STATUS "PYTHON ${PYTHON_VERSION}")
   endif()
-
-  if(NOT PYBIND11_CPP_STANDARD)
-    message(FATAL_ERROR "Unsupported compiler -- pybind11 requires C++11 support!")
-  endif()
-  set(PYBIND11_CPP_STANDARD ${PYBIND11_CPP_STANDARD} CACHE STRING
-      "C++ standard flag, e.g. -std=c++11, -std=c++14, /std:c++14.  Defaults to C++14 mode." FORCE)
 endif()
 
-# Checks whether the given CXX/linker flags can compile and link a cxx file.  cxxflags and
-# linkerflags are lists of flags to use.  The result variable is a unique variable name for each set
-# of flags: the compilation result will be cached base on the result variable.  If the flags work,
-# sets them in cxxflags_out/linkerflags_out internal cache variables (in addition to ${result}).
-function(_pybind11_return_if_cxx_and_linker_flags_work result cxxflags linkerflags cxxflags_out linkerflags_out)
-  set(CMAKE_REQUIRED_LIBRARIES ${linkerflags})
-  check_cxx_compiler_flag("${cxxflags}" ${result})
-  if (${result})
-    set(${cxxflags_out} "${cxxflags}" CACHE INTERNAL "" FORCE)
-    set(${linkerflags_out} "${linkerflags}" CACHE INTERNAL "" FORCE)
-  endif()
-endfunction()
+# Only add Python for build - must be added during the import for config since it has to be re-discovered.
+set_property(
+  TARGET pybind11::pybind11
+  APPEND
+  PROPERTY INTERFACE_INCLUDE_DIRECTORIES $<BUILD_INTERFACE:${PYTHON_INCLUDE_DIRS}>)
+
+# Python debug libraries expose slightly different objects before 3.8
+# https://docs.python.org/3.6/c-api/intro.html#debugging-builds
+# https://stackoverflow.com/questions/39161202/how-to-work-around-missing-pymodule-create2-in-amd64-win-python35-d-lib
+if(PYTHON_IS_DEBUG)
+  set_property(
+    TARGET pybind11::pybind11
+    APPEND
+    PROPERTY INTERFACE_COMPILE_DEFINITIONS Py_DEBUG)
+endif()
 
-# Internal: find the appropriate link time optimization flags for this compiler
-function(_pybind11_add_lto_flags target_name prefer_thin_lto)
-  if (NOT DEFINED PYBIND11_LTO_CXX_FLAGS)
-    set(PYBIND11_LTO_CXX_FLAGS "" CACHE INTERNAL "")
-    set(PYBIND11_LTO_LINKER_FLAGS "" CACHE INTERNAL "")
-
-    if(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
-      set(cxx_append "")
-      set(linker_append "")
-      if (CMAKE_CXX_COMPILER_ID MATCHES "Clang" AND NOT APPLE)
-        # Clang Gold plugin does not support -Os; append -O3 to MinSizeRel builds to override it
-        set(linker_append ";$<$<CONFIG:MinSizeRel>:-O3>")
-      elseif(CMAKE_CXX_COMPILER_ID MATCHES "GNU")
-        set(cxx_append ";-fno-fat-lto-objects")
-      endif()
-
-      if (CMAKE_CXX_COMPILER_ID MATCHES "Clang" AND prefer_thin_lto)
-        _pybind11_return_if_cxx_and_linker_flags_work(HAS_FLTO_THIN
-          "-flto=thin${cxx_append}" "-flto=thin${linker_append}"
-          PYBIND11_LTO_CXX_FLAGS PYBIND11_LTO_LINKER_FLAGS)
-      endif()
-
-      if (NOT HAS_FLTO_THIN)
-        _pybind11_return_if_cxx_and_linker_flags_work(HAS_FLTO
-          "-flto${cxx_append}" "-flto${linker_append}"
-          PYBIND11_LTO_CXX_FLAGS PYBIND11_LTO_LINKER_FLAGS)
-      endif()
-    elseif (CMAKE_CXX_COMPILER_ID MATCHES "Intel")
-      # Intel equivalent to LTO is called IPO
-      _pybind11_return_if_cxx_and_linker_flags_work(HAS_INTEL_IPO
-      "-ipo" "-ipo" PYBIND11_LTO_CXX_FLAGS PYBIND11_LTO_LINKER_FLAGS)
-    elseif(MSVC)
-      # cmake only interprets libraries as linker flags when they start with a - (otherwise it
-      # converts /LTCG to \LTCG as if it was a Windows path).  Luckily MSVC supports passing flags
-      # with - instead of /, even if it is a bit non-standard:
-      _pybind11_return_if_cxx_and_linker_flags_work(HAS_MSVC_GL_LTCG
-        "/GL" "-LTCG" PYBIND11_LTO_CXX_FLAGS PYBIND11_LTO_LINKER_FLAGS)
-    endif()
+set_property(
+  TARGET pybind11::module
+  APPEND
+  PROPERTY
+    INTERFACE_LINK_LIBRARIES pybind11::python_link_helper
+    "$<$<OR:$<PLATFORM_ID:Windows>,$<PLATFORM_ID:Cygwin>>:$<BUILD_INTERFACE:${PYTHON_LIBRARIES}>>")
+
+if(PYTHON_VERSION VERSION_LESS 3)
+  set_property(
+    TARGET pybind11::pybind11
+    APPEND
+    PROPERTY INTERFACE_LINK_LIBRARIES pybind11::python2_no_register)
+endif()
 
-    if (PYBIND11_LTO_CXX_FLAGS)
-      message(STATUS "LTO enabled")
-    else()
-      message(STATUS "LTO disabled (not supported by the compiler and/or linker)")
-    endif()
-  endif()
+set_property(
+  TARGET pybind11::embed
+  APPEND
+  PROPERTY INTERFACE_LINK_LIBRARIES pybind11::pybind11 $<BUILD_INTERFACE:${PYTHON_LIBRARIES}>)
 
-  # Enable LTO flags if found, except for Debug builds
-  if (PYBIND11_LTO_CXX_FLAGS)
-    target_compile_options(${target_name} PRIVATE "$<$<NOT:$<CONFIG:Debug>>:${PYBIND11_LTO_CXX_FLAGS}>")
-  endif()
-  if (PYBIND11_LTO_LINKER_FLAGS)
-    target_link_libraries(${target_name} PRIVATE "$<$<NOT:$<CONFIG:Debug>>:${PYBIND11_LTO_LINKER_FLAGS}>")
-  endif()
+function(pybind11_extension name)
+  # The prefix and extension are provided by FindPythonLibsNew.cmake
+  set_target_properties(${name} PROPERTIES PREFIX "${PYTHON_MODULE_PREFIX}"
+                                           SUFFIX "${PYTHON_MODULE_EXTENSION}")
 endfunction()
 
 # Build a Python extension module:
 # pybind11_add_module(<name> [MODULE | SHARED] [EXCLUDE_FROM_ALL]
-#                     [NO_EXTRAS] [SYSTEM] [THIN_LTO] source1 [source2 ...])
+#                     [NO_EXTRAS] [THIN_LTO] [OPT_SIZE] source1 [source2 ...])
 #
 function(pybind11_add_module target_name)
-  set(options MODULE SHARED EXCLUDE_FROM_ALL NO_EXTRAS SYSTEM THIN_LTO)
+  set(options "MODULE;SHARED;EXCLUDE_FROM_ALL;NO_EXTRAS;SYSTEM;THIN_LTO;OPT_SIZE")
   cmake_parse_arguments(ARG "${options}" "" "" ${ARGN})
 
   if(ARG_MODULE AND ARG_SHARED)
@@ -148,113 +146,46 @@ function(pybind11_add_module target_name
 
   add_library(${target_name} ${lib_type} ${exclude_from_all} ${ARG_UNPARSED_ARGUMENTS})
 
-  if(ARG_SYSTEM)
-    set(inc_isystem SYSTEM)
-  else()
-    set(inc_isystem "")
-  endif()
+  target_link_libraries(${target_name} PRIVATE pybind11::module)
 
-  set(PYBIND11_INCLUDE_DIR_SELECTED "")
-  if(PYBIND11_INCLUDE_DIR)
-    # from project CMakeLists.txt
-    set(PYBIND11_INCLUDE_DIR_SELECTED ${PYBIND11_INCLUDE_DIR})
-  elseif(pybind11_INCLUDE_DIR)
-    # from pybind11Config
-    set(PYBIND11_INCLUDE_DIR_SELECTED ${pybind11_INCLUDE_DIR})
-  else()
-    message(FATAL "No pybind11_INCLUDE_DIR available. Use "
-      "find_package(pybind11) before calling pybind11_add_module.")
+  if(ARG_SYSTEM)
+    message(
+      STATUS
+        "Warning: this does not have an effect - use NO_SYSTEM_FROM_IMPORTED if using imported targets"
+    )
   endif()
 
-  target_include_directories(${target_name} ${inc_isystem}
-    PRIVATE ${PYBIND11_INCLUDE_DIR_SELECTED}
-    PRIVATE ${PYTHON_INCLUDE_DIRS})
-
-  # Python debug libraries expose slightly different objects
-  # https://docs.python.org/3.6/c-api/intro.html#debugging-builds
-  # https://stackoverflow.com/questions/39161202/how-to-work-around-missing-pymodule-create2-in-amd64-win-python35-d-lib
-  if(PYTHON_IS_DEBUG)
-    target_compile_definitions(${target_name} PRIVATE Py_DEBUG)
-  endif()
-
-  # The prefix and extension are provided by FindPythonLibsNew.cmake
-  set_target_properties(${target_name} PROPERTIES PREFIX "${PYTHON_MODULE_PREFIX}")
-  set_target_properties(${target_name} PROPERTIES SUFFIX "${PYTHON_MODULE_EXTENSION}")
+  pybind11_extension(${target_name})
 
   # -fvisibility=hidden is required to allow multiple modules compiled against
   # different pybind versions to work properly, and for some features (e.g.
   # py::module_local).  We force it on everything inside the `pybind11`
   # namespace; also turning it on for a pybind module compilation here avoids
   # potential warnings or issues from having mixed hidden/non-hidden types.
-  set_target_properties(${target_name} PROPERTIES CXX_VISIBILITY_PRESET "hidden")
-  set_target_properties(${target_name} PROPERTIES CUDA_VISIBILITY_PRESET "hidden")
+  set_target_properties(${target_name} PROPERTIES CXX_VISIBILITY_PRESET "hidden"
+                                                  CUDA_VISIBILITY_PRESET "hidden")
 
-  if(WIN32 OR CYGWIN)
-    # Link against the Python shared library on Windows
-    target_link_libraries(${target_name} PRIVATE ${PYTHON_LIBRARIES})
-  elseif(APPLE)
-    # It's quite common to have multiple copies of the same Python version
-    # installed on one's system. E.g.: one copy from the OS and another copy
-    # that's statically linked into an application like Blender or Maya.
-    # If we link our plugin library against the OS Python here and import it
-    # into Blender or Maya later on, this will cause segfaults when multiple
-    # conflicting Python instances are active at the same time (even when they
-    # are of the same version).
-
-    # Windows is not affected by this issue since it handles DLL imports
-    # differently. The solution for Linux and Mac OS is simple: we just don't
-    # link against the Python library. The resulting shared library will have
-    # missing symbols, but that's perfectly fine -- they will be resolved at
-    # import time.
-
-    target_link_libraries(${target_name} PRIVATE "-undefined dynamic_lookup")
-
-    if(ARG_SHARED)
-      # Suppress CMake >= 3.0 warning for shared libraries
-      set_target_properties(${target_name} PROPERTIES MACOSX_RPATH ON)
-    endif()
+  if(ARG_NO_EXTRAS)
+    return()
   endif()
 
-  # Make sure C++11/14 are enabled
-  if(PYBIND11_CPP_STANDARD)
-    if(CMAKE_VERSION VERSION_LESS 3.3)
-      target_compile_options(${target_name} PUBLIC ${PYBIND11_CPP_STANDARD})
+  if(NOT DEFINED CMAKE_INTERPROCEDURAL_OPTIMIZATION)
+    if(ARG_THIN_LTO)
+      target_link_libraries(${target_name} PRIVATE pybind11::thin_lto)
     else()
-      target_compile_options(${target_name} PUBLIC $<$<COMPILE_LANGUAGE:CXX>:${PYBIND11_CPP_STANDARD}>)
+      target_link_libraries(${target_name} PRIVATE pybind11::lto)
     endif()
   endif()
 
-  if(ARG_NO_EXTRAS)
-    return()
+  if(NOT MSVC AND NOT ${CMAKE_BUILD_TYPE} MATCHES Debug|RelWithDebInfo)
+    pybind11_strip(${target_name})
   endif()
 
-  _pybind11_add_lto_flags(${target_name} ${ARG_THIN_LTO})
-
-  if (NOT MSVC AND NOT ${CMAKE_BUILD_TYPE} MATCHES Debug|RelWithDebInfo)
-    # Strip unnecessary sections of the binary on Linux/Mac OS
-    if(CMAKE_STRIP)
-      if(APPLE)
-        add_custom_command(TARGET ${target_name} POST_BUILD
-                           COMMAND ${CMAKE_STRIP} -x $<TARGET_FILE:${target_name}>)
-      else()
-        add_custom_command(TARGET ${target_name} POST_BUILD
-                           COMMAND ${CMAKE_STRIP} $<TARGET_FILE:${target_name}>)
-      endif()
-    endif()
+  if(MSVC)
+    target_link_libraries(${target_name} PRIVATE pybind11::windows_extras)
   endif()
 
-  if(MSVC)
-    # /MP enables multithreaded builds (relevant when there are many files), /bigobj is
-    # needed for bigger binding projects due to the limit to 64k addressable sections
-    target_compile_options(${target_name} PRIVATE /bigobj)
-    if(CMAKE_VERSION VERSION_LESS 3.11)
-      target_compile_options(${target_name} PRIVATE $<$<NOT:$<CONFIG:Debug>>:/MP>)
-    else()
-      # Only set these options for C++ files.  This is important so that, for
-      # instance, projects that include other types of source files like CUDA
-      # .cu files don't get these options propagated to nvcc since that would
-      # cause the build to fail.
-      target_compile_options(${target_name} PRIVATE $<$<NOT:$<CONFIG:Debug>>:$<$<COMPILE_LANGUAGE:CXX>:/MP>>)
-    endif()
+  if(ARG_OPT_SIZE)
+    target_link_libraries(${target_name} PRIVATE pybind11::opt_size)
   endif()
 endfunction()
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/tools/pyproject.toml
@@ -0,0 +1,3 @@
+[build-system]
+requires = ["setuptools", "wheel"]
+build-backend = "setuptools.build_meta"
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/tools/setup_global.py.in
@@ -0,0 +1,53 @@
+#!/usr/bin/env python
+# -*- coding: utf-8 -*-
+
+# Setup script for pybind11-global (in the sdist or in tools/setup_global.py in the repository)
+# This package is targeted for easy use from CMake.
+
+import contextlib
+import glob
+import os
+import re
+import shutil
+import subprocess
+import sys
+import tempfile
+
+# Setuptools has to be before distutils
+from setuptools import setup
+
+from distutils.command.install_headers import install_headers
+
+class InstallHeadersNested(install_headers):
+    def run(self):
+        headers = self.distribution.headers or []
+        for header in headers:
+            # Remove pybind11/include/
+            short_header = header.split("/", 2)[-1]
+
+            dst = os.path.join(self.install_dir, os.path.dirname(short_header))
+            self.mkpath(dst)
+            (out, _) = self.copy_file(header, dst)
+            self.outfiles.append(out)
+
+
+main_headers = glob.glob("pybind11/include/pybind11/*.h")
+detail_headers = glob.glob("pybind11/include/pybind11/detail/*.h")
+cmake_files = glob.glob("pybind11/share/cmake/pybind11/*.cmake")
+headers = main_headers + detail_headers
+
+cmdclass = {"install_headers": InstallHeadersNested}
+$extra_cmd
+
+setup(
+    name="pybind11_global",
+    version="$version",
+    packages=[],
+    headers=headers,
+    data_files=[
+        ("share/cmake/pybind11", cmake_files),
+        ("include/pybind11", main_headers),
+        ("include/pybind11/detail", detail_headers),
+    ],
+    cmdclass=cmdclass,
+)
--- /dev/null
+++ gtsam-4.1.0/wrap/pybind11/tools/setup_main.py.in
@@ -0,0 +1,35 @@
+#!/usr/bin/env python
+# -*- coding: utf-8 -*-
+
+# Setup script (in the sdist or in tools/setup_main.py in the repository)
+
+from setuptools import setup
+
+cmdclass = {}
+$extra_cmd
+
+setup(
+    name="pybind11",
+    version="$version",
+    download_url='https://github.com/pybind/pybind11/tarball/v$version',
+    packages=[
+        "pybind11",
+        "pybind11.include.pybind11",
+        "pybind11.include.pybind11.detail",
+        "pybind11.share.cmake.pybind11",
+    ],
+    package_data={
+        "pybind11.include.pybind11": ["*.h"],
+        "pybind11.include.pybind11.detail": ["*.h"],
+        "pybind11.share.cmake.pybind11": ["*.cmake"],
+    },
+    extras_require={
+        "global": ["pybind11_global==$version"]
+        },
+    entry_points={
+        "console_scripts": [
+             "pybind11-config = pybind11.__main__:main",
+        ]
+    },
+    cmdclass=cmdclass
+)
--- gtsam-4.1.0.orig/wrap/requirements.txt
+++ gtsam-4.1.0/wrap/requirements.txt
@@ -1 +1,3 @@
 pyparsing
+pytest
+loguru
\ No newline at end of file
--- /dev/null
+++ gtsam-4.1.0/wrap/scripts/matlab_wrap.py
@@ -0,0 +1,68 @@
+#!/usr/bin/env python3
+
+"""
+Helper script to wrap C++ to Matlab.
+This script is installed via CMake to the user's binary directory
+and invoked during the wrapping by CMake.
+"""
+
+import argparse
+import os
+
+import gtwrap.interface_parser as parser
+import gtwrap.template_instantiator as instantiator
+from gtwrap.matlab_wrapper import MatlabWrapper, generate_content
+
+if __name__ == "__main__":
+    arg_parser = argparse.ArgumentParser(
+        formatter_class=argparse.ArgumentDefaultsHelpFormatter)
+    arg_parser.add_argument("--src", type=str, required=True,
+                            help="Input interface .h file.")
+    arg_parser.add_argument("--module_name", type=str, required=True,
+                            help="Name of the C++ class being wrapped.")
+    arg_parser.add_argument("--out", type=str, required=True,
+                            help="Name of the output folder.")
+    arg_parser.add_argument(
+        "--top_module_namespaces",
+        type=str,
+        default="",
+        help="C++ namespace for the top module, e.g. `ns1::ns2::ns3`. "
+        "Only the content within this namespace and its sub-namespaces "
+        "will be wrapped. The content of this namespace will be available at "
+        "the top module level, and its sub-namespaces' in the submodules.\n"
+        "For example, `import <module_name>` gives you access to a Python "
+        "`<module_name>.Class` of the corresponding C++ `ns1::ns2::ns3::Class`"
+        ", and `from <module_name> import ns4` gives you access to a Python "
+        "`ns4.Class` of the C++ `ns1::ns2::ns3::ns4::Class`. ")
+    arg_parser.add_argument("--ignore",
+                            nargs='*',
+                            type=str,
+                            help="A space-separated list of classes to ignore. "
+                                 "Class names must include their full namespaces.")
+    args = arg_parser.parse_args()
+
+    top_module_namespaces = args.top_module_namespaces.split("::")
+    if top_module_namespaces[0]:
+        top_module_namespaces = [''] + top_module_namespaces
+
+    with open(args.src, 'r') as f:
+        content = f.read()
+
+    if not os.path.exists(args.src):
+        os.mkdir(args.src)
+
+    module = parser.Module.parseString(content)
+
+    instantiator.instantiate_namespace_inplace(module)
+
+    import sys
+
+    print("Ignoring classes: {}".format(args.ignore), file=sys.stderr)
+    wrapper = MatlabWrapper(module=module,
+                            module_name=args.module_name,
+                            top_module_namespace=top_module_namespaces,
+                            ignore_classes=args.ignore)
+
+    cc_content = wrapper.wrap()
+
+    generate_content(cc_content, args.out)
--- /dev/null
+++ gtsam-4.1.0/wrap/scripts/pybind_wrap.py
@@ -0,0 +1,101 @@
+#!/usr/bin/env python3
+
+"""
+Helper script to wrap C++ to Python with Pybind.
+This script is installed via CMake to the user's binary directory
+and invoked during the wrapping by CMake.
+"""
+
+# pylint: disable=import-error
+
+import argparse
+
+import gtwrap.interface_parser as parser
+import gtwrap.template_instantiator as instantiator
+from gtwrap.pybind_wrapper import PybindWrapper
+
+
+def main():
+    """Main runner."""
+    arg_parser = argparse.ArgumentParser(
+        formatter_class=argparse.ArgumentDefaultsHelpFormatter)
+    arg_parser.add_argument(
+        "--src",
+        type=str,
+        required=True,
+        help="Input interface .i/.h file")
+    arg_parser.add_argument(
+        "--module_name",
+        type=str,
+        required=True,
+        help="Name of the Python module to be generated and "
+        "used in the Python `import` statement.",
+    )
+    arg_parser.add_argument(
+        "--out",
+        type=str,
+        required=True,
+        help="Name of the output pybind .cc file",
+    )
+    arg_parser.add_argument(
+        "--use-boost",
+        action="store_true",
+        help="using boost's shared_ptr instead of std's",
+    )
+    arg_parser.add_argument(
+        "--top_module_namespaces",
+        type=str,
+        default="",
+        help="C++ namespace for the top module, e.g. `ns1::ns2::ns3`. "
+        "Only the content within this namespace and its sub-namespaces "
+        "will be wrapped. The content of this namespace will be available at "
+        "the top module level, and its sub-namespaces' in the submodules.\n"
+        "For example, `import <module_name>` gives you access to a Python "
+        "`<module_name>.Class` of the corresponding C++ `ns1::ns2::ns3::Class`"
+        "and `from <module_name> import ns4` gives you access to a Python "
+        "`ns4.Class` of the C++ `ns1::ns2::ns3::ns4::Class`. ",
+    )
+    arg_parser.add_argument(
+        "--ignore",
+        nargs='*',
+        type=str,
+        help="A space-separated list of classes to ignore. "
+        "Class names must include their full namespaces.",
+    )
+    arg_parser.add_argument("--template", type=str,
+                            help="The module template file")
+    args = arg_parser.parse_args()
+
+    top_module_namespaces = args.top_module_namespaces.split("::")
+    if top_module_namespaces[0]:
+        top_module_namespaces = [''] + top_module_namespaces
+
+    # Read in the complete interface (.i) file
+    with open(args.src, "r") as f:
+        content = f.read()
+
+    module = parser.Module.parseString(content)
+    instantiator.instantiate_namespace_inplace(module)
+
+    with open(args.template, "r") as f:
+        template_content = f.read()
+
+    wrapper = PybindWrapper(
+        module=module,
+        module_name=args.module_name,
+        use_boost=args.use_boost,
+        top_module_namespaces=top_module_namespaces,
+        ignore_classes=args.ignore,
+        module_template=template_content,
+    )
+
+    # Wrap the code and get back the cpp/cc code.
+    cc_content = wrapper.wrap()
+
+    # Generate the C++ code which Pybind11 will use.
+    with open(args.out, "w") as f:
+        f.write(cc_content)
+
+
+if __name__ == "__main__":
+    main()
--- /dev/null
+++ gtsam-4.1.0/wrap/setup.py
@@ -0,0 +1,36 @@
+"""Setup file for the GTwrap package"""
+
+try:
+    from setuptools import find_packages, setup
+except ImportError:
+    from distutils.core import find_packages, setup
+
+packages = find_packages()
+
+setup(
+    name='gtwrap',
+    description='Library to wrap C++ with Python and Matlab',
+    version='1.1.0',
+    author="Frank Dellaert et. al.",
+    author_email="dellaert@gatech.edu",
+    license='BSD',
+    keywords="wrap, bindings, cpp, python",
+    long_description=open("README.md").read(),
+    long_description_content_type="text/markdown",
+    python_requires=">=3.5",
+    # https://pypi.org/classifiers
+    classifiers=[
+        'Development Status :: 4 - Beta',
+        'Intended Audience :: Education',
+        'Intended Audience :: Developers',
+        'Intended Audience :: Science/Research',
+        'Operating System :: MacOS',
+        'Operating System :: Microsoft :: Windows',
+        'Operating System :: POSIX',
+        'Programming Language :: Python :: 3',
+        'Topic :: Software Development :: Libraries'
+    ],
+    packages=packages,
+    platforms="any",
+    install_requires=open("requirements.txt").readlines(),
+)
--- /dev/null
+++ gtsam-4.1.0/wrap/templates/matlab_wrapper.tpl.in
@@ -0,0 +1,2 @@
+#include <${GTWRAP_INCLUDE_NAME}/matlab.h>
+#include <map>
--- /dev/null
+++ gtsam-4.1.0/wrap/templates/pybind_wrapper.tpl.example
@@ -0,0 +1,31 @@
+{include_boost}
+
+#include <pybind11/eigen.h>
+#include <pybind11/stl_bind.h>
+#include <pybind11/pybind11.h>
+#include <pybind11/operators.h>
+#include "gtsam/base/serialization.h"
+#include "gtsam/nonlinear/utilities.h"  // for RedirectCout.
+
+{includes}
+#include <boost/serialization/export.hpp>
+
+{boost_class_export}
+
+{holder_type}
+
+#include "python/preamble.h"
+
+using namespace std;
+
+namespace py = pybind11;
+
+PYBIND11_MODULE({module_name}, m_) {{
+    m_.doc() = "pybind11 wrapper of {module_name}";
+
+{wrapped_namespace}
+
+#include "python/specializations.h"
+
+}}
+
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/+gtsam/NonlinearFactorGraph.m
@@ -0,0 +1,44 @@
+%class NonlinearFactorGraph, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+%-------Methods-------
+%addPriorPinholeCameraCal3Bundler(size_t key, PinholeCamera<Cal3Bundler> prior, Base noiseModel) : returns void
+%
+classdef NonlinearFactorGraph < handle
+  properties
+    ptr_gtsamNonlinearFactorGraph = 0
+  end
+  methods
+    function obj = NonlinearFactorGraph(varargin)
+      if nargin == 2 && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        my_ptr = varargin{2};
+        special_cases_wrapper(0, my_ptr);
+      else
+        error('Arguments do not match any overload of gtsam.NonlinearFactorGraph constructor');
+      end
+      obj.ptr_gtsamNonlinearFactorGraph = my_ptr;
+    end
+
+    function delete(obj)
+      special_cases_wrapper(1, obj.ptr_gtsamNonlinearFactorGraph);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+    function varargout = addPriorPinholeCameraCal3Bundler(this, varargin)
+      % ADDPRIORPINHOLECAMERACAL3BUNDLER usage: addPriorPinholeCameraCal3Bundler(size_t key, PinholeCamera<Cal3Bundler> prior, Base noiseModel) : returns void
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 3 && isa(varargin{1},'numeric') && isa(varargin{2},'gtsam.PinholeCameraCal3Bundler') && isa(varargin{3},'gtsam.noiseModel.Base')
+        special_cases_wrapper(2, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function gtsam.NonlinearFactorGraph.addPriorPinholeCameraCal3Bundler');
+    end
+
+  end
+
+  methods(Static = true)
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/+gtsam/PinholeCameraCal3Bundler.m
@@ -0,0 +1,31 @@
+%class PinholeCameraCal3Bundler, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+classdef PinholeCameraCal3Bundler < handle
+  properties
+    ptr_gtsamPinholeCameraCal3Bundler = 0
+  end
+  methods
+    function obj = PinholeCameraCal3Bundler(varargin)
+      if nargin == 2 && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        my_ptr = varargin{2};
+        special_cases_wrapper(5, my_ptr);
+      else
+        error('Arguments do not match any overload of gtsam.PinholeCameraCal3Bundler constructor');
+      end
+      obj.ptr_gtsamPinholeCameraCal3Bundler = my_ptr;
+    end
+
+    function delete(obj)
+      special_cases_wrapper(6, obj.ptr_gtsamPinholeCameraCal3Bundler);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+  end
+
+  methods(Static = true)
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/+gtsam/Point2.m
@@ -0,0 +1,171 @@
+%class Point2, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+%-------Constructors-------
+%Point2()
+%Point2(double x, double y)
+%
+%-------Methods-------
+%argChar(char a) : returns void
+%argChar(char a) : returns void
+%argChar(char a) : returns void
+%argChar(char a) : returns void
+%argChar(char a) : returns void
+%argChar(char a) : returns void
+%argChar(char a) : returns void
+%argUChar(unsigned char a) : returns void
+%dim() : returns int
+%eigenArguments(Vector v, Matrix m) : returns void
+%returnChar() : returns char
+%vectorConfusion() : returns VectorNotEigen
+%x() : returns double
+%y() : returns double
+%
+classdef Point2 < handle
+  properties
+    ptr_gtsamPoint2 = 0
+  end
+  methods
+    function obj = Point2(varargin)
+      if nargin == 2 && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        my_ptr = varargin{2};
+        geometry_wrapper(0, my_ptr);
+      elseif nargin == 0
+        my_ptr = geometry_wrapper(1);
+      elseif nargin == 2 && isa(varargin{1},'double') && isa(varargin{2},'double')
+        my_ptr = geometry_wrapper(2, varargin{1}, varargin{2});
+      else
+        error('Arguments do not match any overload of gtsam.Point2 constructor');
+      end
+      obj.ptr_gtsamPoint2 = my_ptr;
+    end
+
+    function delete(obj)
+      geometry_wrapper(3, obj.ptr_gtsamPoint2);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+    function varargout = argChar(this, varargin)
+      % ARGCHAR usage: argChar(char a) : returns void
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'char')
+        geometry_wrapper(4, this, varargin{:});
+        return
+      end
+      % ARGCHAR usage: argChar(char a) : returns void
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'char')
+        geometry_wrapper(5, this, varargin{:});
+        return
+      end
+      % ARGCHAR usage: argChar(char a) : returns void
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'char')
+        geometry_wrapper(6, this, varargin{:});
+        return
+      end
+      % ARGCHAR usage: argChar(char a) : returns void
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'char')
+        geometry_wrapper(7, this, varargin{:});
+        return
+      end
+      % ARGCHAR usage: argChar(char a) : returns void
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'char')
+        geometry_wrapper(8, this, varargin{:});
+        return
+      end
+      % ARGCHAR usage: argChar(char a) : returns void
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'char')
+        geometry_wrapper(9, this, varargin{:});
+        return
+      end
+      % ARGCHAR usage: argChar(char a) : returns void
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'char')
+        geometry_wrapper(10, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function gtsam.Point2.argChar');
+    end
+
+    function varargout = argUChar(this, varargin)
+      % ARGUCHAR usage: argUChar(unsigned char a) : returns void
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'unsigned char')
+        geometry_wrapper(11, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function gtsam.Point2.argUChar');
+    end
+
+    function varargout = dim(this, varargin)
+      % DIM usage: dim() : returns int
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 0
+        varargout{1} = geometry_wrapper(12, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function gtsam.Point2.dim');
+    end
+
+    function varargout = eigenArguments(this, varargin)
+      % EIGENARGUMENTS usage: eigenArguments(Vector v, Matrix m) : returns void
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 2 && isa(varargin{1},'double') && size(varargin{1},2)==1 && isa(varargin{2},'double')
+        geometry_wrapper(13, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function gtsam.Point2.eigenArguments');
+    end
+
+    function varargout = returnChar(this, varargin)
+      % RETURNCHAR usage: returnChar() : returns char
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 0
+        varargout{1} = geometry_wrapper(14, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function gtsam.Point2.returnChar');
+    end
+
+    function varargout = vectorConfusion(this, varargin)
+      % VECTORCONFUSION usage: vectorConfusion() : returns VectorNotEigen
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 0
+        varargout{1} = geometry_wrapper(15, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function gtsam.Point2.vectorConfusion');
+    end
+
+    function varargout = x(this, varargin)
+      % X usage: x() : returns double
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 0
+        varargout{1} = geometry_wrapper(16, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function gtsam.Point2.x');
+    end
+
+    function varargout = y(this, varargin)
+      % Y usage: y() : returns double
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 0
+        varargout{1} = geometry_wrapper(17, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function gtsam.Point2.y');
+    end
+
+  end
+
+  methods(Static = true)
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/+gtsam/Point3.m
@@ -0,0 +1,107 @@
+%class Point3, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+%-------Constructors-------
+%Point3(double x, double y, double z)
+%
+%-------Methods-------
+%norm() : returns double
+%
+%-------Static Methods-------
+%StaticFunctionRet(double z) : returns Point3
+%staticFunction() : returns double
+%
+%-------Serialization Interface-------
+%string_serialize() : returns string
+%string_deserialize(string serialized) : returns Point3
+%
+classdef Point3 < handle
+  properties
+    ptr_gtsamPoint3 = 0
+  end
+  methods
+    function obj = Point3(varargin)
+      if nargin == 2 && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        my_ptr = varargin{2};
+        geometry_wrapper(18, my_ptr);
+      elseif nargin == 3 && isa(varargin{1},'double') && isa(varargin{2},'double') && isa(varargin{3},'double')
+        my_ptr = geometry_wrapper(19, varargin{1}, varargin{2}, varargin{3});
+      else
+        error('Arguments do not match any overload of gtsam.Point3 constructor');
+      end
+      obj.ptr_gtsamPoint3 = my_ptr;
+    end
+
+    function delete(obj)
+      geometry_wrapper(20, obj.ptr_gtsamPoint3);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+    function varargout = norm(this, varargin)
+      % NORM usage: norm() : returns double
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 0
+        varargout{1} = geometry_wrapper(21, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function gtsam.Point3.norm');
+    end
+
+    function varargout = string_serialize(this, varargin)
+      % STRING_SERIALIZE usage: string_serialize() : returns string
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 0
+        varargout{1} = geometry_wrapper(22, this, varargin{:});
+      else
+        error('Arguments do not match any overload of function gtsam.Point3.string_serialize');
+      end
+    end
+
+    function sobj = saveobj(obj)
+      % SAVEOBJ Saves the object to a matlab-readable format
+      sobj = obj.string_serialize();
+    end
+  end
+
+  methods(Static = true)
+    function varargout = StaticFunctionRet(varargin)
+      % STATICFUNCTIONRET usage: StaticFunctionRet(double z) : returns Point3
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double')
+        varargout{1} = geometry_wrapper(23, varargin{:});
+        return
+      end
+
+      error('Arguments do not match any overload of function Point3.StaticFunctionRet');
+    end
+
+    function varargout = StaticFunction(varargin)
+      % STATICFUNCTION usage: staticFunction() : returns double
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 0
+        varargout{1} = geometry_wrapper(24, varargin{:});
+        return
+      end
+
+      error('Arguments do not match any overload of function Point3.staticFunction');
+    end
+
+    function varargout = string_deserialize(varargin)
+      % STRING_DESERIALIZE usage: string_deserialize() : returns gtsam.Point3
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1
+        varargout{1} = geometry_wrapper(25, varargin{:});
+      else
+        error('Arguments do not match any overload of function gtsam.Point3.string_deserialize');
+      end
+    end
+
+    function obj = loadobj(sobj)
+      % LOADOBJ Saves the object to a matlab-readable format
+      obj = gtsam.Point3.string_deserialize(sobj);
+    end
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/+ns1/ClassA.m
@@ -0,0 +1,36 @@
+%class ClassA, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+%-------Constructors-------
+%ClassA()
+%
+classdef ClassA < handle
+  properties
+    ptr_ns1ClassA = 0
+  end
+  methods
+    function obj = ClassA(varargin)
+      if nargin == 2 && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        my_ptr = varargin{2};
+        namespaces_wrapper(0, my_ptr);
+      elseif nargin == 0
+        my_ptr = namespaces_wrapper(1);
+      else
+        error('Arguments do not match any overload of ns1.ClassA constructor');
+      end
+      obj.ptr_ns1ClassA = my_ptr;
+    end
+
+    function delete(obj)
+      namespaces_wrapper(2, obj.ptr_ns1ClassA);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+  end
+
+  methods(Static = true)
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/+ns1/ClassB.m
@@ -0,0 +1,36 @@
+%class ClassB, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+%-------Constructors-------
+%ClassB()
+%
+classdef ClassB < handle
+  properties
+    ptr_ns1ClassB = 0
+  end
+  methods
+    function obj = ClassB(varargin)
+      if nargin == 2 && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        my_ptr = varargin{2};
+        namespaces_wrapper(3, my_ptr);
+      elseif nargin == 0
+        my_ptr = namespaces_wrapper(4);
+      else
+        error('Arguments do not match any overload of ns1.ClassB constructor');
+      end
+      obj.ptr_ns1ClassB = my_ptr;
+    end
+
+    function delete(obj)
+      namespaces_wrapper(5, obj.ptr_ns1ClassB);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+  end
+
+  methods(Static = true)
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/+ns1/aGlobalFunction.m
@@ -0,0 +1,6 @@
+function varargout = aGlobalFunction(varargin)
+      if length(varargin) == 0
+        varargout{1} = namespaces_wrapper(6, varargin{:});
+      else
+        error('Arguments do not match any overload of function aGlobalFunction');
+      end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/+ns2/+ns3/ClassB.m
@@ -0,0 +1,36 @@
+%class ClassB, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+%-------Constructors-------
+%ClassB()
+%
+classdef ClassB < handle
+  properties
+    ptr_ns2ns3ClassB = 0
+  end
+  methods
+    function obj = ClassB(varargin)
+      if nargin == 2 && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        my_ptr = varargin{2};
+        namespaces_wrapper(14, my_ptr);
+      elseif nargin == 0
+        my_ptr = namespaces_wrapper(15);
+      else
+        error('Arguments do not match any overload of ns2.ns3.ClassB constructor');
+      end
+      obj.ptr_ns2ns3ClassB = my_ptr;
+    end
+
+    function delete(obj)
+      namespaces_wrapper(16, obj.ptr_ns2ns3ClassB);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+  end
+
+  methods(Static = true)
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/+ns2/ClassA.m
@@ -0,0 +1,89 @@
+%class ClassA, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+%-------Constructors-------
+%ClassA()
+%
+%-------Methods-------
+%memberFunction() : returns double
+%nsArg(ClassB arg) : returns int
+%nsReturn(double q) : returns ns2::ns3::ClassB
+%
+%-------Static Methods-------
+%afunction() : returns double
+%
+%-------Serialization Interface-------
+%string_serialize() : returns string
+%string_deserialize(string serialized) : returns ClassA
+%
+classdef ClassA < handle
+  properties
+    ptr_ns2ClassA = 0
+  end
+  methods
+    function obj = ClassA(varargin)
+      if nargin == 2 && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        my_ptr = varargin{2};
+        namespaces_wrapper(7, my_ptr);
+      elseif nargin == 0
+        my_ptr = namespaces_wrapper(8);
+      else
+        error('Arguments do not match any overload of ns2.ClassA constructor');
+      end
+      obj.ptr_ns2ClassA = my_ptr;
+    end
+
+    function delete(obj)
+      namespaces_wrapper(9, obj.ptr_ns2ClassA);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+    function varargout = memberFunction(this, varargin)
+      % MEMBERFUNCTION usage: memberFunction() : returns double
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 0
+        varargout{1} = namespaces_wrapper(10, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function ns2.ClassA.memberFunction');
+    end
+
+    function varargout = nsArg(this, varargin)
+      % NSARG usage: nsArg(ClassB arg) : returns int
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'ns1.ClassB')
+        varargout{1} = namespaces_wrapper(11, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function ns2.ClassA.nsArg');
+    end
+
+    function varargout = nsReturn(this, varargin)
+      % NSRETURN usage: nsReturn(double q) : returns ns2.ns3.ClassB
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double')
+        varargout{1} = namespaces_wrapper(12, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function ns2.ClassA.nsReturn');
+    end
+
+  end
+
+  methods(Static = true)
+    function varargout = Afunction(varargin)
+      % AFUNCTION usage: afunction() : returns double
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 0
+        varargout{1} = namespaces_wrapper(13, varargin{:});
+        return
+      end
+
+      error('Arguments do not match any overload of function ClassA.afunction');
+    end
+
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/+ns2/ClassC.m
@@ -0,0 +1,36 @@
+%class ClassC, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+%-------Constructors-------
+%ClassC()
+%
+classdef ClassC < handle
+  properties
+    ptr_ns2ClassC = 0
+  end
+  methods
+    function obj = ClassC(varargin)
+      if nargin == 2 && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        my_ptr = varargin{2};
+        namespaces_wrapper(17, my_ptr);
+      elseif nargin == 0
+        my_ptr = namespaces_wrapper(18);
+      else
+        error('Arguments do not match any overload of ns2.ClassC constructor');
+      end
+      obj.ptr_ns2ClassC = my_ptr;
+    end
+
+    function delete(obj)
+      namespaces_wrapper(19, obj.ptr_ns2ClassC);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+  end
+
+  methods(Static = true)
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/+ns2/aGlobalFunction.m
@@ -0,0 +1,6 @@
+function varargout = aGlobalFunction(varargin)
+      if length(varargin) == 0
+        varargout{1} = namespaces_wrapper(20, varargin{:});
+      else
+        error('Arguments do not match any overload of function aGlobalFunction');
+      end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/+ns2/overloadedGlobalFunction.m
@@ -0,0 +1,8 @@
+function varargout = overloadedGlobalFunction(varargin)
+      if length(varargin) == 1 && isa(varargin{1},'ns1.ClassA')
+        varargout{1} = namespaces_wrapper(21, varargin{:});
+      elseif length(varargin) == 2 && isa(varargin{1},'ns1.ClassA') && isa(varargin{2},'double')
+        varargout{1} = namespaces_wrapper(22, varargin{:});
+      else
+        error('Arguments do not match any overload of function overloadedGlobalFunction');
+      end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/ClassD.m
@@ -0,0 +1,36 @@
+%class ClassD, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+%-------Constructors-------
+%ClassD()
+%
+classdef ClassD < handle
+  properties
+    ptr_ClassD = 0
+  end
+  methods
+    function obj = ClassD(varargin)
+      if nargin == 2 && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        my_ptr = varargin{2};
+        namespaces_wrapper(23, my_ptr);
+      elseif nargin == 0
+        my_ptr = namespaces_wrapper(24);
+      else
+        error('Arguments do not match any overload of ClassD constructor');
+      end
+      obj.ptr_ClassD = my_ptr;
+    end
+
+    function delete(obj)
+      namespaces_wrapper(25, obj.ptr_ClassD);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+  end
+
+  methods(Static = true)
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/FunDouble.m
@@ -0,0 +1,73 @@
+%class FunDouble, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+%-------Methods-------
+%multiTemplatedMethodStringSize_t(double d, string t, size_t u) : returns Fun<double>
+%templatedMethodString(double d, string t) : returns Fun<double>
+%
+%-------Static Methods-------
+%staticMethodWithThis() : returns Fun<double>
+%
+%-------Serialization Interface-------
+%string_serialize() : returns string
+%string_deserialize(string serialized) : returns FunDouble
+%
+classdef FunDouble < handle
+  properties
+    ptr_FunDouble = 0
+  end
+  methods
+    function obj = FunDouble(varargin)
+      if nargin == 2 && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        my_ptr = varargin{2};
+        class_wrapper(5, my_ptr);
+      else
+        error('Arguments do not match any overload of FunDouble constructor');
+      end
+      obj.ptr_FunDouble = my_ptr;
+    end
+
+    function delete(obj)
+      class_wrapper(6, obj.ptr_FunDouble);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+    function varargout = multiTemplatedMethodStringSize_t(this, varargin)
+      % MULTITEMPLATEDMETHODSTRINGSIZE_T usage: multiTemplatedMethodStringSize_t(double d, string t, size_t u) : returns Fun<double>
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 3 && isa(varargin{1},'double') && isa(varargin{2},'char') && isa(varargin{3},'numeric')
+        varargout{1} = class_wrapper(7, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function FunDouble.multiTemplatedMethodStringSize_t');
+    end
+
+    function varargout = templatedMethodString(this, varargin)
+      % TEMPLATEDMETHODSTRING usage: templatedMethodString(double d, string t) : returns Fun<double>
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 2 && isa(varargin{1},'double') && isa(varargin{2},'char')
+        varargout{1} = class_wrapper(8, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function FunDouble.templatedMethodString');
+    end
+
+  end
+
+  methods(Static = true)
+    function varargout = StaticMethodWithThis(varargin)
+      % STATICMETHODWITHTHIS usage: staticMethodWithThis() : returns Fundouble
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 0
+        varargout{1} = class_wrapper(9, varargin{:});
+        return
+      end
+
+      error('Arguments do not match any overload of function FunDouble.staticMethodWithThis');
+    end
+
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/FunRange.m
@@ -0,0 +1,67 @@
+%class FunRange, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+%-------Constructors-------
+%FunRange()
+%
+%-------Methods-------
+%range(double d) : returns FunRange
+%
+%-------Static Methods-------
+%create() : returns FunRange
+%
+%-------Serialization Interface-------
+%string_serialize() : returns string
+%string_deserialize(string serialized) : returns FunRange
+%
+classdef FunRange < handle
+  properties
+    ptr_FunRange = 0
+  end
+  methods
+    function obj = FunRange(varargin)
+      if nargin == 2 && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        my_ptr = varargin{2};
+        class_wrapper(0, my_ptr);
+      elseif nargin == 0
+        my_ptr = class_wrapper(1);
+      else
+        error('Arguments do not match any overload of FunRange constructor');
+      end
+      obj.ptr_FunRange = my_ptr;
+    end
+
+    function delete(obj)
+      class_wrapper(2, obj.ptr_FunRange);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+    function varargout = range(this, varargin)
+      % RANGE usage: range(double d) : returns FunRange
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double')
+        varargout{1} = class_wrapper(3, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function FunRange.range');
+    end
+
+  end
+
+  methods(Static = true)
+    function varargout = Create(varargin)
+      % CREATE usage: create() : returns FunRange
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 0
+        varargout{1} = class_wrapper(4, varargin{:});
+        return
+      end
+
+      error('Arguments do not match any overload of function FunRange.create');
+    end
+
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/MultiTemplatedFunctionDoubleSize_tDouble.m
@@ -0,0 +1,6 @@
+function varargout = MultiTemplatedFunctionDoubleSize_tDouble(varargin)
+      if length(varargin) == 2 && isa(varargin{1},'T') && isa(varargin{2},'numeric')
+        varargout{1} = functions_wrapper(7, varargin{:});
+      else
+        error('Arguments do not match any overload of function MultiTemplatedFunctionDoubleSize_tDouble');
+      end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/MultiTemplatedFunctionStringSize_tDouble.m
@@ -0,0 +1,6 @@
+function varargout = MultiTemplatedFunctionStringSize_tDouble(varargin)
+      if length(varargin) == 2 && isa(varargin{1},'T') && isa(varargin{2},'numeric')
+        varargout{1} = functions_wrapper(6, varargin{:});
+      else
+        error('Arguments do not match any overload of function MultiTemplatedFunctionStringSize_tDouble');
+      end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/MultipleTemplatesIntDouble.m
@@ -0,0 +1,31 @@
+%class MultipleTemplatesIntDouble, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+classdef MultipleTemplatesIntDouble < handle
+  properties
+    ptr_MultipleTemplatesIntDouble = 0
+  end
+  methods
+    function obj = MultipleTemplatesIntDouble(varargin)
+      if nargin == 2 && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        my_ptr = varargin{2};
+        class_wrapper(48, my_ptr);
+      else
+        error('Arguments do not match any overload of MultipleTemplatesIntDouble constructor');
+      end
+      obj.ptr_MultipleTemplatesIntDouble = my_ptr;
+    end
+
+    function delete(obj)
+      class_wrapper(49, obj.ptr_MultipleTemplatesIntDouble);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+  end
+
+  methods(Static = true)
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/MultipleTemplatesIntFloat.m
@@ -0,0 +1,31 @@
+%class MultipleTemplatesIntFloat, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+classdef MultipleTemplatesIntFloat < handle
+  properties
+    ptr_MultipleTemplatesIntFloat = 0
+  end
+  methods
+    function obj = MultipleTemplatesIntFloat(varargin)
+      if nargin == 2 && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        my_ptr = varargin{2};
+        class_wrapper(50, my_ptr);
+      else
+        error('Arguments do not match any overload of MultipleTemplatesIntFloat constructor');
+      end
+      obj.ptr_MultipleTemplatesIntFloat = my_ptr;
+    end
+
+    function delete(obj)
+      class_wrapper(51, obj.ptr_MultipleTemplatesIntFloat);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+  end
+
+  methods(Static = true)
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/MyBase.m
@@ -0,0 +1,35 @@
+%class MyBase, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+classdef MyBase < handle
+  properties
+    ptr_MyBase = 0
+  end
+  methods
+    function obj = MyBase(varargin)
+      if (nargin == 2 || (nargin == 3 && strcmp(varargin{3}, 'void'))) && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        if nargin == 2
+          my_ptr = varargin{2};
+        else
+          my_ptr = inheritance_wrapper(1, varargin{2});
+        end
+        inheritance_wrapper(0, my_ptr);
+      else
+        error('Arguments do not match any overload of MyBase constructor');
+      end
+      obj.ptr_MyBase = my_ptr;
+    end
+
+    function delete(obj)
+      inheritance_wrapper(2, obj.ptr_MyBase);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+  end
+
+  methods(Static = true)
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/MyFactorPosePoint2.m
@@ -0,0 +1,36 @@
+%class MyFactorPosePoint2, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+%-------Constructors-------
+%MyFactorPosePoint2(size_t key1, size_t key2, double measured, Base noiseModel)
+%
+classdef MyFactorPosePoint2 < handle
+  properties
+    ptr_MyFactorPosePoint2 = 0
+  end
+  methods
+    function obj = MyFactorPosePoint2(varargin)
+      if nargin == 2 && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        my_ptr = varargin{2};
+        class_wrapper(52, my_ptr);
+      elseif nargin == 4 && isa(varargin{1},'numeric') && isa(varargin{2},'numeric') && isa(varargin{3},'double') && isa(varargin{4},'gtsam.noiseModel.Base')
+        my_ptr = class_wrapper(53, varargin{1}, varargin{2}, varargin{3}, varargin{4});
+      else
+        error('Arguments do not match any overload of MyFactorPosePoint2 constructor');
+      end
+      obj.ptr_MyFactorPosePoint2 = my_ptr;
+    end
+
+    function delete(obj)
+      class_wrapper(54, obj.ptr_MyFactorPosePoint2);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+  end
+
+  methods(Static = true)
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/MyTemplateMatrix.m
@@ -0,0 +1,182 @@
+%class MyTemplateMatrix, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+%-------Constructors-------
+%MyTemplateMatrix()
+%
+%-------Methods-------
+%accept_T(Matrix value) : returns void
+%accept_Tptr(Matrix value) : returns void
+%create_MixedPtrs() : returns pair< Matrix, Matrix >
+%create_ptrs() : returns pair< Matrix, Matrix >
+%return_T(Matrix value) : returns Matrix
+%return_Tptr(Matrix value) : returns Matrix
+%return_ptrs(Matrix p1, Matrix p2) : returns pair< Matrix, Matrix >
+%templatedMethodMatrix(Matrix t) : returns Matrix
+%templatedMethodPoint2(Point2 t) : returns Point2
+%templatedMethodPoint3(Point3 t) : returns Point3
+%templatedMethodVector(Vector t) : returns Vector
+%
+%-------Static Methods-------
+%Level(Matrix K) : returns MyTemplate<Matrix>
+%
+%-------Serialization Interface-------
+%string_serialize() : returns string
+%string_deserialize(string serialized) : returns MyTemplateMatrix
+%
+classdef MyTemplateMatrix < MyBase
+  properties
+    ptr_MyTemplateMatrix = 0
+  end
+  methods
+    function obj = MyTemplateMatrix(varargin)
+      if (nargin == 2 || (nargin == 3 && strcmp(varargin{3}, 'void'))) && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        if nargin == 2
+          my_ptr = varargin{2};
+        else
+          my_ptr = inheritance_wrapper(20, varargin{2});
+        end
+        base_ptr = inheritance_wrapper(19, my_ptr);
+      elseif nargin == 0
+        [ my_ptr, base_ptr ] = inheritance_wrapper(21);
+      else
+        error('Arguments do not match any overload of MyTemplateMatrix constructor');
+      end
+      obj = obj@MyBase(uint64(5139824614673773682), base_ptr);
+      obj.ptr_MyTemplateMatrix = my_ptr;
+    end
+
+    function delete(obj)
+      inheritance_wrapper(22, obj.ptr_MyTemplateMatrix);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+    function varargout = accept_T(this, varargin)
+      % ACCEPT_T usage: accept_T(Matrix value) : returns void
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double')
+        inheritance_wrapper(23, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplateMatrix.accept_T');
+    end
+
+    function varargout = accept_Tptr(this, varargin)
+      % ACCEPT_TPTR usage: accept_Tptr(Matrix value) : returns void
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double')
+        inheritance_wrapper(24, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplateMatrix.accept_Tptr');
+    end
+
+    function varargout = create_MixedPtrs(this, varargin)
+      % CREATE_MIXEDPTRS usage: create_MixedPtrs() : returns pair< Matrix, Matrix >
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 0
+        [ varargout{1} varargout{2} ] = inheritance_wrapper(25, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplateMatrix.create_MixedPtrs');
+    end
+
+    function varargout = create_ptrs(this, varargin)
+      % CREATE_PTRS usage: create_ptrs() : returns pair< Matrix, Matrix >
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 0
+        [ varargout{1} varargout{2} ] = inheritance_wrapper(26, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplateMatrix.create_ptrs');
+    end
+
+    function varargout = return_T(this, varargin)
+      % RETURN_T usage: return_T(Matrix value) : returns Matrix
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double')
+        varargout{1} = inheritance_wrapper(27, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplateMatrix.return_T');
+    end
+
+    function varargout = return_Tptr(this, varargin)
+      % RETURN_TPTR usage: return_Tptr(Matrix value) : returns Matrix
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double')
+        varargout{1} = inheritance_wrapper(28, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplateMatrix.return_Tptr');
+    end
+
+    function varargout = return_ptrs(this, varargin)
+      % RETURN_PTRS usage: return_ptrs(Matrix p1, Matrix p2) : returns pair< Matrix, Matrix >
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 2 && isa(varargin{1},'double') && isa(varargin{2},'double')
+        [ varargout{1} varargout{2} ] = inheritance_wrapper(29, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplateMatrix.return_ptrs');
+    end
+
+    function varargout = templatedMethodMatrix(this, varargin)
+      % TEMPLATEDMETHODMATRIX usage: templatedMethodMatrix(Matrix t) : returns Matrix
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double')
+        varargout{1} = inheritance_wrapper(30, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplateMatrix.templatedMethodMatrix');
+    end
+
+    function varargout = templatedMethodPoint2(this, varargin)
+      % TEMPLATEDMETHODPOINT2 usage: templatedMethodPoint2(Point2 t) : returns Point2
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double') && size(varargin{1},1)==2 && size(varargin{1},2)==1
+        varargout{1} = inheritance_wrapper(31, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplateMatrix.templatedMethodPoint2');
+    end
+
+    function varargout = templatedMethodPoint3(this, varargin)
+      % TEMPLATEDMETHODPOINT3 usage: templatedMethodPoint3(Point3 t) : returns Point3
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double') && size(varargin{1},1)==3 && size(varargin{1},2)==1
+        varargout{1} = inheritance_wrapper(32, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplateMatrix.templatedMethodPoint3');
+    end
+
+    function varargout = templatedMethodVector(this, varargin)
+      % TEMPLATEDMETHODVECTOR usage: templatedMethodVector(Vector t) : returns Vector
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double') && size(varargin{1},2)==1
+        varargout{1} = inheritance_wrapper(33, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplateMatrix.templatedMethodVector');
+    end
+
+  end
+
+  methods(Static = true)
+    function varargout = Level(varargin)
+      % LEVEL usage: Level(Matrix K) : returns MyTemplateMatrix
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double')
+        varargout{1} = inheritance_wrapper(34, varargin{:});
+        return
+      end
+
+      error('Arguments do not match any overload of function MyTemplateMatrix.Level');
+    end
+
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/MyTemplatePoint2.m
@@ -0,0 +1,182 @@
+%class MyTemplatePoint2, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+%-------Constructors-------
+%MyTemplatePoint2()
+%
+%-------Methods-------
+%accept_T(Point2 value) : returns void
+%accept_Tptr(Point2 value) : returns void
+%create_MixedPtrs() : returns pair< Point2, Point2 >
+%create_ptrs() : returns pair< Point2, Point2 >
+%return_T(Point2 value) : returns Point2
+%return_Tptr(Point2 value) : returns Point2
+%return_ptrs(Point2 p1, Point2 p2) : returns pair< Point2, Point2 >
+%templatedMethodMatrix(Matrix t) : returns Matrix
+%templatedMethodPoint2(Point2 t) : returns Point2
+%templatedMethodPoint3(Point3 t) : returns Point3
+%templatedMethodVector(Vector t) : returns Vector
+%
+%-------Static Methods-------
+%Level(Point2 K) : returns MyTemplate<Point2>
+%
+%-------Serialization Interface-------
+%string_serialize() : returns string
+%string_deserialize(string serialized) : returns MyTemplatePoint2
+%
+classdef MyTemplatePoint2 < MyBase
+  properties
+    ptr_MyTemplatePoint2 = 0
+  end
+  methods
+    function obj = MyTemplatePoint2(varargin)
+      if (nargin == 2 || (nargin == 3 && strcmp(varargin{3}, 'void'))) && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        if nargin == 2
+          my_ptr = varargin{2};
+        else
+          my_ptr = inheritance_wrapper(4, varargin{2});
+        end
+        base_ptr = inheritance_wrapper(3, my_ptr);
+      elseif nargin == 0
+        [ my_ptr, base_ptr ] = inheritance_wrapper(5);
+      else
+        error('Arguments do not match any overload of MyTemplatePoint2 constructor');
+      end
+      obj = obj@MyBase(uint64(5139824614673773682), base_ptr);
+      obj.ptr_MyTemplatePoint2 = my_ptr;
+    end
+
+    function delete(obj)
+      inheritance_wrapper(6, obj.ptr_MyTemplatePoint2);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+    function varargout = accept_T(this, varargin)
+      % ACCEPT_T usage: accept_T(Point2 value) : returns void
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double') && size(varargin{1},1)==2 && size(varargin{1},2)==1
+        inheritance_wrapper(7, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplatePoint2.accept_T');
+    end
+
+    function varargout = accept_Tptr(this, varargin)
+      % ACCEPT_TPTR usage: accept_Tptr(Point2 value) : returns void
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double') && size(varargin{1},1)==2 && size(varargin{1},2)==1
+        inheritance_wrapper(8, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplatePoint2.accept_Tptr');
+    end
+
+    function varargout = create_MixedPtrs(this, varargin)
+      % CREATE_MIXEDPTRS usage: create_MixedPtrs() : returns pair< Point2, Point2 >
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 0
+        [ varargout{1} varargout{2} ] = inheritance_wrapper(9, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplatePoint2.create_MixedPtrs');
+    end
+
+    function varargout = create_ptrs(this, varargin)
+      % CREATE_PTRS usage: create_ptrs() : returns pair< Point2, Point2 >
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 0
+        [ varargout{1} varargout{2} ] = inheritance_wrapper(10, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplatePoint2.create_ptrs');
+    end
+
+    function varargout = return_T(this, varargin)
+      % RETURN_T usage: return_T(Point2 value) : returns Point2
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double') && size(varargin{1},1)==2 && size(varargin{1},2)==1
+        varargout{1} = inheritance_wrapper(11, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplatePoint2.return_T');
+    end
+
+    function varargout = return_Tptr(this, varargin)
+      % RETURN_TPTR usage: return_Tptr(Point2 value) : returns Point2
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double') && size(varargin{1},1)==2 && size(varargin{1},2)==1
+        varargout{1} = inheritance_wrapper(12, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplatePoint2.return_Tptr');
+    end
+
+    function varargout = return_ptrs(this, varargin)
+      % RETURN_PTRS usage: return_ptrs(Point2 p1, Point2 p2) : returns pair< Point2, Point2 >
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 2 && isa(varargin{1},'double') && size(varargin{1},1)==2 && size(varargin{1},2)==1 && isa(varargin{2},'double') && size(varargin{2},1)==2 && size(varargin{2},2)==1
+        [ varargout{1} varargout{2} ] = inheritance_wrapper(13, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplatePoint2.return_ptrs');
+    end
+
+    function varargout = templatedMethodMatrix(this, varargin)
+      % TEMPLATEDMETHODMATRIX usage: templatedMethodMatrix(Matrix t) : returns Matrix
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double')
+        varargout{1} = inheritance_wrapper(14, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplatePoint2.templatedMethodMatrix');
+    end
+
+    function varargout = templatedMethodPoint2(this, varargin)
+      % TEMPLATEDMETHODPOINT2 usage: templatedMethodPoint2(Point2 t) : returns Point2
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double') && size(varargin{1},1)==2 && size(varargin{1},2)==1
+        varargout{1} = inheritance_wrapper(15, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplatePoint2.templatedMethodPoint2');
+    end
+
+    function varargout = templatedMethodPoint3(this, varargin)
+      % TEMPLATEDMETHODPOINT3 usage: templatedMethodPoint3(Point3 t) : returns Point3
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double') && size(varargin{1},1)==3 && size(varargin{1},2)==1
+        varargout{1} = inheritance_wrapper(16, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplatePoint2.templatedMethodPoint3');
+    end
+
+    function varargout = templatedMethodVector(this, varargin)
+      % TEMPLATEDMETHODVECTOR usage: templatedMethodVector(Vector t) : returns Vector
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double') && size(varargin{1},2)==1
+        varargout{1} = inheritance_wrapper(17, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function MyTemplatePoint2.templatedMethodVector');
+    end
+
+  end
+
+  methods(Static = true)
+    function varargout = Level(varargin)
+      % LEVEL usage: Level(Point2 K) : returns MyTemplatePoint2
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double') && size(varargin{1},1)==2 && size(varargin{1},2)==1
+        varargout{1} = inheritance_wrapper(18, varargin{:});
+        return
+      end
+
+      error('Arguments do not match any overload of function MyTemplatePoint2.Level');
+    end
+
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/MyVector12.m
@@ -0,0 +1,36 @@
+%class MyVector12, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+%-------Constructors-------
+%MyVector12()
+%
+classdef MyVector12 < handle
+  properties
+    ptr_MyVector12 = 0
+  end
+  methods
+    function obj = MyVector12(varargin)
+      if nargin == 2 && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        my_ptr = varargin{2};
+        class_wrapper(45, my_ptr);
+      elseif nargin == 0
+        my_ptr = class_wrapper(46);
+      else
+        error('Arguments do not match any overload of MyVector12 constructor');
+      end
+      obj.ptr_MyVector12 = my_ptr;
+    end
+
+    function delete(obj)
+      class_wrapper(47, obj.ptr_MyVector12);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+  end
+
+  methods(Static = true)
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/MyVector3.m
@@ -0,0 +1,36 @@
+%class MyVector3, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+%-------Constructors-------
+%MyVector3()
+%
+classdef MyVector3 < handle
+  properties
+    ptr_MyVector3 = 0
+  end
+  methods
+    function obj = MyVector3(varargin)
+      if nargin == 2 && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        my_ptr = varargin{2};
+        class_wrapper(42, my_ptr);
+      elseif nargin == 0
+        my_ptr = class_wrapper(43);
+      else
+        error('Arguments do not match any overload of MyVector3 constructor');
+      end
+      obj.ptr_MyVector3 = my_ptr;
+    end
+
+    function delete(obj)
+      class_wrapper(44, obj.ptr_MyVector3);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+  end
+
+  methods(Static = true)
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/PrimitiveRefDouble.m
@@ -0,0 +1,54 @@
+%class PrimitiveRefDouble, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+%-------Constructors-------
+%PrimitiveRefDouble()
+%
+%-------Static Methods-------
+%Brutal(double t) : returns PrimitiveRef<double>
+%
+%-------Serialization Interface-------
+%string_serialize() : returns string
+%string_deserialize(string serialized) : returns PrimitiveRefDouble
+%
+classdef PrimitiveRefDouble < handle
+  properties
+    ptr_PrimitiveRefDouble = 0
+  end
+  methods
+    function obj = PrimitiveRefDouble(varargin)
+      if nargin == 2 && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        my_ptr = varargin{2};
+        class_wrapper(38, my_ptr);
+      elseif nargin == 0
+        my_ptr = class_wrapper(39);
+      else
+        error('Arguments do not match any overload of PrimitiveRefDouble constructor');
+      end
+      obj.ptr_PrimitiveRefDouble = my_ptr;
+    end
+
+    function delete(obj)
+      class_wrapper(40, obj.ptr_PrimitiveRefDouble);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+  end
+
+  methods(Static = true)
+    function varargout = Brutal(varargin)
+      % BRUTAL usage: Brutal(double t) : returns PrimitiveRefdouble
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double')
+        varargout{1} = class_wrapper(41, varargin{:});
+        return
+      end
+
+      error('Arguments do not match any overload of function PrimitiveRefDouble.Brutal');
+    end
+
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/TemplatedFunctionRot3.m
@@ -0,0 +1,6 @@
+function varargout = TemplatedFunctionRot3(varargin)
+      if length(varargin) == 1 && isa(varargin{1},'gtsam.Rot3')
+        functions_wrapper(8, varargin{:});
+      else
+        error('Arguments do not match any overload of function TemplatedFunctionRot3');
+      end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/Test.m
@@ -0,0 +1,293 @@
+%class Test, see Doxygen page for details
+%at https://gtsam.org/doxygen/
+%
+%-------Constructors-------
+%Test()
+%Test(double a, Matrix b)
+%
+%-------Methods-------
+%arg_EigenConstRef(Matrix value) : returns void
+%create_MixedPtrs() : returns pair< Test, Test >
+%create_ptrs() : returns pair< Test, Test >
+%get_container() : returns std::vector<testing::Test>
+%print() : returns void
+%return_Point2Ptr(bool value) : returns Point2
+%return_Test(Test value) : returns Test
+%return_TestPtr(Test value) : returns Test
+%return_bool(bool value) : returns bool
+%return_double(double value) : returns double
+%return_field(Test t) : returns bool
+%return_int(int value) : returns int
+%return_matrix1(Matrix value) : returns Matrix
+%return_matrix2(Matrix value) : returns Matrix
+%return_pair(Vector v, Matrix A) : returns pair< Vector, Matrix >
+%return_pair(Vector v) : returns pair< Vector, Matrix >
+%return_ptrs(Test p1, Test p2) : returns pair< Test, Test >
+%return_size_t(size_t value) : returns size_t
+%return_string(string value) : returns string
+%return_vector1(Vector value) : returns Vector
+%return_vector2(Vector value) : returns Vector
+%set_container(vector<Test> container) : returns void
+%set_container(vector<Test> container) : returns void
+%set_container(vector<Test> container) : returns void
+%
+classdef Test < handle
+  properties
+    ptr_Test = 0
+  end
+  methods
+    function obj = Test(varargin)
+      if nargin == 2 && isa(varargin{1}, 'uint64') && varargin{1} == uint64(5139824614673773682)
+        my_ptr = varargin{2};
+        class_wrapper(10, my_ptr);
+      elseif nargin == 0
+        my_ptr = class_wrapper(11);
+      elseif nargin == 2 && isa(varargin{1},'double') && isa(varargin{2},'double')
+        my_ptr = class_wrapper(12, varargin{1}, varargin{2});
+      else
+        error('Arguments do not match any overload of Test constructor');
+      end
+      obj.ptr_Test = my_ptr;
+    end
+
+    function delete(obj)
+      class_wrapper(13, obj.ptr_Test);
+    end
+
+    function display(obj), obj.print(''); end
+    %DISPLAY Calls print on the object
+    function disp(obj), obj.display; end
+    %DISP Calls print on the object
+    function varargout = arg_EigenConstRef(this, varargin)
+      % ARG_EIGENCONSTREF usage: arg_EigenConstRef(Matrix value) : returns void
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double')
+        class_wrapper(14, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.arg_EigenConstRef');
+    end
+
+    function varargout = create_MixedPtrs(this, varargin)
+      % CREATE_MIXEDPTRS usage: create_MixedPtrs() : returns pair< Test, Test >
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 0
+        [ varargout{1} varargout{2} ] = class_wrapper(15, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.create_MixedPtrs');
+    end
+
+    function varargout = create_ptrs(this, varargin)
+      % CREATE_PTRS usage: create_ptrs() : returns pair< Test, Test >
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 0
+        [ varargout{1} varargout{2} ] = class_wrapper(16, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.create_ptrs');
+    end
+
+    function varargout = get_container(this, varargin)
+      % GET_CONTAINER usage: get_container() : returns std.vectorTest
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 0
+        varargout{1} = class_wrapper(17, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.get_container');
+    end
+
+    function varargout = print(this, varargin)
+      % PRINT usage: print() : returns void
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 0
+        class_wrapper(18, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.print');
+    end
+
+    function varargout = return_Point2Ptr(this, varargin)
+      % RETURN_POINT2PTR usage: return_Point2Ptr(bool value) : returns Point2
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'logical')
+        varargout{1} = class_wrapper(19, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.return_Point2Ptr');
+    end
+
+    function varargout = return_Test(this, varargin)
+      % RETURN_TEST usage: return_Test(Test value) : returns Test
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'Test')
+        varargout{1} = class_wrapper(20, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.return_Test');
+    end
+
+    function varargout = return_TestPtr(this, varargin)
+      % RETURN_TESTPTR usage: return_TestPtr(Test value) : returns Test
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'Test')
+        varargout{1} = class_wrapper(21, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.return_TestPtr');
+    end
+
+    function varargout = return_bool(this, varargin)
+      % RETURN_BOOL usage: return_bool(bool value) : returns bool
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'logical')
+        varargout{1} = class_wrapper(22, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.return_bool');
+    end
+
+    function varargout = return_double(this, varargin)
+      % RETURN_DOUBLE usage: return_double(double value) : returns double
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double')
+        varargout{1} = class_wrapper(23, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.return_double');
+    end
+
+    function varargout = return_field(this, varargin)
+      % RETURN_FIELD usage: return_field(Test t) : returns bool
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'Test')
+        varargout{1} = class_wrapper(24, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.return_field');
+    end
+
+    function varargout = return_int(this, varargin)
+      % RETURN_INT usage: return_int(int value) : returns int
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'numeric')
+        varargout{1} = class_wrapper(25, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.return_int');
+    end
+
+    function varargout = return_matrix1(this, varargin)
+      % RETURN_MATRIX1 usage: return_matrix1(Matrix value) : returns Matrix
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double')
+        varargout{1} = class_wrapper(26, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.return_matrix1');
+    end
+
+    function varargout = return_matrix2(this, varargin)
+      % RETURN_MATRIX2 usage: return_matrix2(Matrix value) : returns Matrix
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double')
+        varargout{1} = class_wrapper(27, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.return_matrix2');
+    end
+
+    function varargout = return_pair(this, varargin)
+      % RETURN_PAIR usage: return_pair(Vector v, Matrix A) : returns pair< Vector, Matrix >
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 2 && isa(varargin{1},'double') && size(varargin{1},2)==1 && isa(varargin{2},'double')
+        [ varargout{1} varargout{2} ] = class_wrapper(28, this, varargin{:});
+        return
+      end
+      % RETURN_PAIR usage: return_pair(Vector v) : returns pair< Vector, Matrix >
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double') && size(varargin{1},2)==1
+        [ varargout{1} varargout{2} ] = class_wrapper(29, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.return_pair');
+    end
+
+    function varargout = return_ptrs(this, varargin)
+      % RETURN_PTRS usage: return_ptrs(Test p1, Test p2) : returns pair< Test, Test >
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 2 && isa(varargin{1},'Test') && isa(varargin{2},'Test')
+        [ varargout{1} varargout{2} ] = class_wrapper(30, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.return_ptrs');
+    end
+
+    function varargout = return_size_t(this, varargin)
+      % RETURN_SIZE_T usage: return_size_t(size_t value) : returns size_t
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'numeric')
+        varargout{1} = class_wrapper(31, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.return_size_t');
+    end
+
+    function varargout = return_string(this, varargin)
+      % RETURN_STRING usage: return_string(string value) : returns string
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'char')
+        varargout{1} = class_wrapper(32, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.return_string');
+    end
+
+    function varargout = return_vector1(this, varargin)
+      % RETURN_VECTOR1 usage: return_vector1(Vector value) : returns Vector
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double') && size(varargin{1},2)==1
+        varargout{1} = class_wrapper(33, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.return_vector1');
+    end
+
+    function varargout = return_vector2(this, varargin)
+      % RETURN_VECTOR2 usage: return_vector2(Vector value) : returns Vector
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'double') && size(varargin{1},2)==1
+        varargout{1} = class_wrapper(34, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.return_vector2');
+    end
+
+    function varargout = set_container(this, varargin)
+      % SET_CONTAINER usage: set_container(vector<Test> container) : returns void
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'std.vectorTest')
+        class_wrapper(35, this, varargin{:});
+        return
+      end
+      % SET_CONTAINER usage: set_container(vector<Test> container) : returns void
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'std.vectorTest')
+        class_wrapper(36, this, varargin{:});
+        return
+      end
+      % SET_CONTAINER usage: set_container(vector<Test> container) : returns void
+      % Doxygen can be found at https://gtsam.org/doxygen/
+      if length(varargin) == 1 && isa(varargin{1},'std.vectorTest')
+        class_wrapper(37, this, varargin{:});
+        return
+      end
+      error('Arguments do not match any overload of function Test.set_container');
+    end
+
+  end
+
+  methods(Static = true)
+  end
+end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/aGlobalFunction.m
@@ -0,0 +1,6 @@
+function varargout = aGlobalFunction(varargin)
+      if length(varargin) == 0
+        varargout{1} = functions_wrapper(3, varargin{:});
+      else
+        error('Arguments do not match any overload of function aGlobalFunction');
+      end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/class_wrapper.cpp
@@ -0,0 +1,847 @@
+#include <gtwrap/matlab.h>
+#include <map>
+
+#include <boost/archive/text_iarchive.hpp>
+#include <boost/archive/text_oarchive.hpp>
+#include <boost/serialization/export.hpp>
+
+#include <folder/path/to/Test.h>
+
+
+typedef Fun<double> FunDouble;
+typedef PrimitiveRef<double> PrimitiveRefDouble;
+typedef MyVector<3> MyVector3;
+typedef MyVector<12> MyVector12;
+typedef MultipleTemplates<int, double> MultipleTemplatesIntDouble;
+typedef MultipleTemplates<int, float> MultipleTemplatesIntFloat;
+typedef MyFactor<gtsam::Pose2, gtsam::Matrix> MyFactorPosePoint2;
+
+
+typedef std::set<boost::shared_ptr<FunRange>*> Collector_FunRange;
+static Collector_FunRange collector_FunRange;
+typedef std::set<boost::shared_ptr<FunDouble>*> Collector_FunDouble;
+static Collector_FunDouble collector_FunDouble;
+typedef std::set<boost::shared_ptr<Test>*> Collector_Test;
+static Collector_Test collector_Test;
+typedef std::set<boost::shared_ptr<PrimitiveRefDouble>*> Collector_PrimitiveRefDouble;
+static Collector_PrimitiveRefDouble collector_PrimitiveRefDouble;
+typedef std::set<boost::shared_ptr<MyVector3>*> Collector_MyVector3;
+static Collector_MyVector3 collector_MyVector3;
+typedef std::set<boost::shared_ptr<MyVector12>*> Collector_MyVector12;
+static Collector_MyVector12 collector_MyVector12;
+typedef std::set<boost::shared_ptr<MultipleTemplatesIntDouble>*> Collector_MultipleTemplatesIntDouble;
+static Collector_MultipleTemplatesIntDouble collector_MultipleTemplatesIntDouble;
+typedef std::set<boost::shared_ptr<MultipleTemplatesIntFloat>*> Collector_MultipleTemplatesIntFloat;
+static Collector_MultipleTemplatesIntFloat collector_MultipleTemplatesIntFloat;
+typedef std::set<boost::shared_ptr<MyFactorPosePoint2>*> Collector_MyFactorPosePoint2;
+static Collector_MyFactorPosePoint2 collector_MyFactorPosePoint2;
+
+void _deleteAllObjects()
+{
+  mstream mout;
+  std::streambuf *outbuf = std::cout.rdbuf(&mout);
+
+  bool anyDeleted = false;
+  { for(Collector_FunRange::iterator iter = collector_FunRange.begin();
+      iter != collector_FunRange.end(); ) {
+    delete *iter;
+    collector_FunRange.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_FunDouble::iterator iter = collector_FunDouble.begin();
+      iter != collector_FunDouble.end(); ) {
+    delete *iter;
+    collector_FunDouble.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_Test::iterator iter = collector_Test.begin();
+      iter != collector_Test.end(); ) {
+    delete *iter;
+    collector_Test.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_PrimitiveRefDouble::iterator iter = collector_PrimitiveRefDouble.begin();
+      iter != collector_PrimitiveRefDouble.end(); ) {
+    delete *iter;
+    collector_PrimitiveRefDouble.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyVector3::iterator iter = collector_MyVector3.begin();
+      iter != collector_MyVector3.end(); ) {
+    delete *iter;
+    collector_MyVector3.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyVector12::iterator iter = collector_MyVector12.begin();
+      iter != collector_MyVector12.end(); ) {
+    delete *iter;
+    collector_MyVector12.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MultipleTemplatesIntDouble::iterator iter = collector_MultipleTemplatesIntDouble.begin();
+      iter != collector_MultipleTemplatesIntDouble.end(); ) {
+    delete *iter;
+    collector_MultipleTemplatesIntDouble.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MultipleTemplatesIntFloat::iterator iter = collector_MultipleTemplatesIntFloat.begin();
+      iter != collector_MultipleTemplatesIntFloat.end(); ) {
+    delete *iter;
+    collector_MultipleTemplatesIntFloat.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyFactorPosePoint2::iterator iter = collector_MyFactorPosePoint2.begin();
+      iter != collector_MyFactorPosePoint2.end(); ) {
+    delete *iter;
+    collector_MyFactorPosePoint2.erase(iter++);
+    anyDeleted = true;
+  } }
+  if(anyDeleted)
+    cout <<
+      "WARNING:  Wrap modules with variables in the workspace have been reloaded due to\n"
+      "calling destructors, call 'clear all' again if you plan to now recompile a wrap\n"
+      "module, so that your recompiled module is used instead of the old one." << endl;
+  std::cout.rdbuf(outbuf);
+}
+
+void _class_RTTIRegister() {
+  const mxArray *alreadyCreated = mexGetVariablePtr("global", "gtsam_class_rttiRegistry_created");
+  if(!alreadyCreated) {
+    std::map<std::string, std::string> types;
+
+    mxArray *registry = mexGetVariable("global", "gtsamwrap_rttiRegistry");
+    if(!registry)
+      registry = mxCreateStructMatrix(1, 1, 0, NULL);
+    typedef std::pair<std::string, std::string> StringPair;
+    for(const StringPair& rtti_matlab: types) {
+      int fieldId = mxAddField(registry, rtti_matlab.first.c_str());
+      if(fieldId < 0)
+        mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+      mxArray *matlabName = mxCreateString(rtti_matlab.second.c_str());
+      mxSetFieldByNumber(registry, 0, fieldId, matlabName);
+    }
+    if(mexPutVariable("global", "gtsamwrap_rttiRegistry", registry) != 0)
+      mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+    mxDestroyArray(registry);
+    
+    mxArray *newAlreadyCreated = mxCreateNumericMatrix(0, 0, mxINT8_CLASS, mxREAL);
+    if(mexPutVariable("global", "gtsam_geometry_rttiRegistry_created", newAlreadyCreated) != 0)
+      mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+    mxDestroyArray(newAlreadyCreated);
+  }
+}
+
+void FunRange_collectorInsertAndMakeBase_0(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<FunRange> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_FunRange.insert(self);
+}
+
+void FunRange_constructor_1(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<FunRange> Shared;
+
+  Shared *self = new Shared(new FunRange());
+  collector_FunRange.insert(self);
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<Shared**> (mxGetData(out[0])) = self;
+}
+
+void FunRange_deconstructor_2(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<FunRange> Shared;
+  checkArguments("delete_FunRange",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_FunRange::iterator item;
+  item = collector_FunRange.find(self);
+  if(item != collector_FunRange.end()) {
+    delete self;
+    collector_FunRange.erase(item);
+  }
+}
+
+void FunRange_range_3(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("range",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<FunRange>(in[0], "ptr_FunRange");
+  double d = unwrap< double >(in[1]);
+  out[0] = wrap_shared_ptr(boost::make_shared<FunRange>(obj->range(d)),"FunRange", false);
+}
+
+void FunRange_create_4(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("FunRange.create",nargout,nargin,0);
+  out[0] = wrap_shared_ptr(boost::make_shared<FunRange>(FunRange::create()),"FunRange", false);
+}
+
+void FunDouble_collectorInsertAndMakeBase_5(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<Fun<double>> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_FunDouble.insert(self);
+}
+
+void FunDouble_deconstructor_6(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<Fun<double>> Shared;
+  checkArguments("delete_FunDouble",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_FunDouble::iterator item;
+  item = collector_FunDouble.find(self);
+  if(item != collector_FunDouble.end()) {
+    delete self;
+    collector_FunDouble.erase(item);
+  }
+}
+
+void FunDouble_multiTemplatedMethod_7(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("multiTemplatedMethodStringSize_t",nargout,nargin-1,3);
+  auto obj = unwrap_shared_ptr<Fun<double>>(in[0], "ptr_FunDouble");
+  double d = unwrap< double >(in[1]);
+  string t = unwrap< string >(in[2]);
+  size_t u = unwrap< size_t >(in[3]);
+  out[0] = wrap_shared_ptr(boost::make_shared<Fun<double>>(obj->multiTemplatedMethod<string,size_t>(d,t,u)),"Fun<double>", false);
+}
+
+void FunDouble_templatedMethod_8(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("templatedMethodString",nargout,nargin-1,2);
+  auto obj = unwrap_shared_ptr<Fun<double>>(in[0], "ptr_FunDouble");
+  double d = unwrap< double >(in[1]);
+  string t = unwrap< string >(in[2]);
+  out[0] = wrap_shared_ptr(boost::make_shared<Fun<double>>(obj->templatedMethod<string>(d,t)),"Fun<double>", false);
+}
+
+void FunDouble_staticMethodWithThis_9(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("FunDouble.staticMethodWithThis",nargout,nargin,0);
+  out[0] = wrap_shared_ptr(boost::make_shared<Fun<double>>(Fun<double>::staticMethodWithThis()),"Fundouble", false);
+}
+
+void Test_collectorInsertAndMakeBase_10(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<Test> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_Test.insert(self);
+}
+
+void Test_constructor_11(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<Test> Shared;
+
+  Shared *self = new Shared(new Test());
+  collector_Test.insert(self);
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<Shared**> (mxGetData(out[0])) = self;
+}
+
+void Test_constructor_12(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<Test> Shared;
+
+  double a = unwrap< double >(in[0]);
+  Matrix b = unwrap< Matrix >(in[1]);
+  Shared *self = new Shared(new Test(a,b));
+  collector_Test.insert(self);
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<Shared**> (mxGetData(out[0])) = self;
+}
+
+void Test_deconstructor_13(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<Test> Shared;
+  checkArguments("delete_Test",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_Test::iterator item;
+  item = collector_Test.find(self);
+  if(item != collector_Test.end()) {
+    delete self;
+    collector_Test.erase(item);
+  }
+}
+
+void Test_arg_EigenConstRef_14(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("arg_EigenConstRef",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  Matrix value = unwrap< Matrix >(in[1]);
+  obj->arg_EigenConstRef(value);
+}
+
+void Test_create_MixedPtrs_15(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("create_MixedPtrs",nargout,nargin-1,0);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  auto pairResult = obj->create_MixedPtrs();
+  out[0] = wrap_shared_ptr(boost::make_shared<Test>(pairResult.first),"Test", false);
+  out[1] = wrap_shared_ptr(pairResult.second,"Test", false);
+}
+
+void Test_create_ptrs_16(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("create_ptrs",nargout,nargin-1,0);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  auto pairResult = obj->create_ptrs();
+  out[0] = wrap_shared_ptr(pairResult.first,"Test", false);
+  out[1] = wrap_shared_ptr(pairResult.second,"Test", false);
+}
+
+void Test_get_container_17(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("get_container",nargout,nargin-1,0);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  out[0] = wrap_shared_ptr(boost::make_shared<std::vector<testing::Test>>(obj->get_container()),"std.vectorTest", false);
+}
+
+void Test_print_18(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("print",nargout,nargin-1,0);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  obj->print();
+}
+
+void Test_return_Point2Ptr_19(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_Point2Ptr",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  bool value = unwrap< bool >(in[1]);
+  {
+  boost::shared_ptr<Point2> shared(obj->return_Point2Ptr(value));
+  out[0] = wrap_shared_ptr(shared,"Point2");
+  }
+}
+
+void Test_return_Test_20(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_Test",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  boost::shared_ptr<Test> value = unwrap_shared_ptr< Test >(in[1], "ptr_Test");
+  out[0] = wrap_shared_ptr(boost::make_shared<Test>(obj->return_Test(value)),"Test", false);
+}
+
+void Test_return_TestPtr_21(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_TestPtr",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  boost::shared_ptr<Test> value = unwrap_shared_ptr< Test >(in[1], "ptr_Test");
+  out[0] = wrap_shared_ptr(obj->return_TestPtr(value),"Test", false);
+}
+
+void Test_return_bool_22(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_bool",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  bool value = unwrap< bool >(in[1]);
+  out[0] = wrap< bool >(obj->return_bool(value));
+}
+
+void Test_return_double_23(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_double",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  double value = unwrap< double >(in[1]);
+  out[0] = wrap< double >(obj->return_double(value));
+}
+
+void Test_return_field_24(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_field",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  Test& t = *unwrap_shared_ptr< Test >(in[1], "ptr_Test");
+  out[0] = wrap< bool >(obj->return_field(t));
+}
+
+void Test_return_int_25(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_int",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  int value = unwrap< int >(in[1]);
+  out[0] = wrap< int >(obj->return_int(value));
+}
+
+void Test_return_matrix1_26(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_matrix1",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  Matrix value = unwrap< Matrix >(in[1]);
+  out[0] = wrap< Matrix >(obj->return_matrix1(value));
+}
+
+void Test_return_matrix2_27(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_matrix2",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  Matrix value = unwrap< Matrix >(in[1]);
+  out[0] = wrap< Matrix >(obj->return_matrix2(value));
+}
+
+void Test_return_pair_28(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_pair",nargout,nargin-1,2);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  Vector v = unwrap< Vector >(in[1]);
+  Matrix A = unwrap< Matrix >(in[2]);
+  auto pairResult = obj->return_pair(v,A);
+  out[0] = wrap< Vector >(pairResult.first);
+  out[1] = wrap< Matrix >(pairResult.second);
+}
+
+void Test_return_pair_29(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_pair",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  Vector v = unwrap< Vector >(in[1]);
+  auto pairResult = obj->return_pair(v);
+  out[0] = wrap< Vector >(pairResult.first);
+  out[1] = wrap< Matrix >(pairResult.second);
+}
+
+void Test_return_ptrs_30(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_ptrs",nargout,nargin-1,2);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  boost::shared_ptr<Test> p1 = unwrap_shared_ptr< Test >(in[1], "ptr_Test");
+  boost::shared_ptr<Test> p2 = unwrap_shared_ptr< Test >(in[2], "ptr_Test");
+  auto pairResult = obj->return_ptrs(p1,p2);
+  out[0] = wrap_shared_ptr(pairResult.first,"Test", false);
+  out[1] = wrap_shared_ptr(pairResult.second,"Test", false);
+}
+
+void Test_return_size_t_31(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_size_t",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  size_t value = unwrap< size_t >(in[1]);
+  out[0] = wrap< size_t >(obj->return_size_t(value));
+}
+
+void Test_return_string_32(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_string",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  string value = unwrap< string >(in[1]);
+  out[0] = wrap< string >(obj->return_string(value));
+}
+
+void Test_return_vector1_33(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_vector1",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  Vector value = unwrap< Vector >(in[1]);
+  out[0] = wrap< Vector >(obj->return_vector1(value));
+}
+
+void Test_return_vector2_34(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_vector2",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  Vector value = unwrap< Vector >(in[1]);
+  out[0] = wrap< Vector >(obj->return_vector2(value));
+}
+
+void Test_set_container_35(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("set_container",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  boost::shared_ptr<std::vector<testing::Test>> container = unwrap_shared_ptr< std::vector<testing::Test> >(in[1], "ptr_stdvectorTest");
+  obj->set_container(*container);
+}
+
+void Test_set_container_36(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("set_container",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  boost::shared_ptr<std::vector<testing::Test>> container = unwrap_shared_ptr< std::vector<testing::Test> >(in[1], "ptr_stdvectorTest");
+  obj->set_container(*container);
+}
+
+void Test_set_container_37(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("set_container",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<Test>(in[0], "ptr_Test");
+  boost::shared_ptr<std::vector<testing::Test>> container = unwrap_shared_ptr< std::vector<testing::Test> >(in[1], "ptr_stdvectorTest");
+  obj->set_container(*container);
+}
+
+void PrimitiveRefDouble_collectorInsertAndMakeBase_38(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<PrimitiveRef<double>> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_PrimitiveRefDouble.insert(self);
+}
+
+void PrimitiveRefDouble_constructor_39(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<PrimitiveRef<double>> Shared;
+
+  Shared *self = new Shared(new PrimitiveRef<double>());
+  collector_PrimitiveRefDouble.insert(self);
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<Shared**> (mxGetData(out[0])) = self;
+}
+
+void PrimitiveRefDouble_deconstructor_40(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<PrimitiveRef<double>> Shared;
+  checkArguments("delete_PrimitiveRefDouble",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_PrimitiveRefDouble::iterator item;
+  item = collector_PrimitiveRefDouble.find(self);
+  if(item != collector_PrimitiveRefDouble.end()) {
+    delete self;
+    collector_PrimitiveRefDouble.erase(item);
+  }
+}
+
+void PrimitiveRefDouble_Brutal_41(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("PrimitiveRefDouble.Brutal",nargout,nargin,1);
+  double t = unwrap< double >(in[0]);
+  out[0] = wrap_shared_ptr(boost::make_shared<PrimitiveRef<double>>(PrimitiveRef<double>::Brutal(t)),"PrimitiveRefdouble", false);
+}
+
+void MyVector3_collectorInsertAndMakeBase_42(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<MyVector<3>> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_MyVector3.insert(self);
+}
+
+void MyVector3_constructor_43(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<MyVector<3>> Shared;
+
+  Shared *self = new Shared(new MyVector<3>());
+  collector_MyVector3.insert(self);
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<Shared**> (mxGetData(out[0])) = self;
+}
+
+void MyVector3_deconstructor_44(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<MyVector<3>> Shared;
+  checkArguments("delete_MyVector3",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_MyVector3::iterator item;
+  item = collector_MyVector3.find(self);
+  if(item != collector_MyVector3.end()) {
+    delete self;
+    collector_MyVector3.erase(item);
+  }
+}
+
+void MyVector12_collectorInsertAndMakeBase_45(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<MyVector<12>> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_MyVector12.insert(self);
+}
+
+void MyVector12_constructor_46(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<MyVector<12>> Shared;
+
+  Shared *self = new Shared(new MyVector<12>());
+  collector_MyVector12.insert(self);
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<Shared**> (mxGetData(out[0])) = self;
+}
+
+void MyVector12_deconstructor_47(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<MyVector<12>> Shared;
+  checkArguments("delete_MyVector12",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_MyVector12::iterator item;
+  item = collector_MyVector12.find(self);
+  if(item != collector_MyVector12.end()) {
+    delete self;
+    collector_MyVector12.erase(item);
+  }
+}
+
+void MultipleTemplatesIntDouble_collectorInsertAndMakeBase_48(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<MultipleTemplates<int, double>> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_MultipleTemplatesIntDouble.insert(self);
+}
+
+void MultipleTemplatesIntDouble_deconstructor_49(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<MultipleTemplates<int, double>> Shared;
+  checkArguments("delete_MultipleTemplatesIntDouble",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_MultipleTemplatesIntDouble::iterator item;
+  item = collector_MultipleTemplatesIntDouble.find(self);
+  if(item != collector_MultipleTemplatesIntDouble.end()) {
+    delete self;
+    collector_MultipleTemplatesIntDouble.erase(item);
+  }
+}
+
+void MultipleTemplatesIntFloat_collectorInsertAndMakeBase_50(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<MultipleTemplates<int, float>> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_MultipleTemplatesIntFloat.insert(self);
+}
+
+void MultipleTemplatesIntFloat_deconstructor_51(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<MultipleTemplates<int, float>> Shared;
+  checkArguments("delete_MultipleTemplatesIntFloat",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_MultipleTemplatesIntFloat::iterator item;
+  item = collector_MultipleTemplatesIntFloat.find(self);
+  if(item != collector_MultipleTemplatesIntFloat.end()) {
+    delete self;
+    collector_MultipleTemplatesIntFloat.erase(item);
+  }
+}
+
+void MyFactorPosePoint2_collectorInsertAndMakeBase_52(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<MyFactor<gtsam::Pose2, gtsam::Matrix>> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_MyFactorPosePoint2.insert(self);
+}
+
+void MyFactorPosePoint2_constructor_53(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<MyFactor<gtsam::Pose2, gtsam::Matrix>> Shared;
+
+  size_t key1 = unwrap< size_t >(in[0]);
+  size_t key2 = unwrap< size_t >(in[1]);
+  double measured = unwrap< double >(in[2]);
+  boost::shared_ptr<gtsam::noiseModel::Base> noiseModel = unwrap_shared_ptr< gtsam::noiseModel::Base >(in[3], "ptr_gtsamnoiseModelBase");
+  Shared *self = new Shared(new MyFactor<gtsam::Pose2, gtsam::Matrix>(key1,key2,measured,noiseModel));
+  collector_MyFactorPosePoint2.insert(self);
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<Shared**> (mxGetData(out[0])) = self;
+}
+
+void MyFactorPosePoint2_deconstructor_54(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<MyFactor<gtsam::Pose2, gtsam::Matrix>> Shared;
+  checkArguments("delete_MyFactorPosePoint2",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_MyFactorPosePoint2::iterator item;
+  item = collector_MyFactorPosePoint2.find(self);
+  if(item != collector_MyFactorPosePoint2.end()) {
+    delete self;
+    collector_MyFactorPosePoint2.erase(item);
+  }
+}
+
+
+void mexFunction(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mstream mout;
+  std::streambuf *outbuf = std::cout.rdbuf(&mout);
+
+  _class_RTTIRegister();
+
+  int id = unwrap<int>(in[0]);
+
+  try {
+    switch(id) {
+    case 0:
+      FunRange_collectorInsertAndMakeBase_0(nargout, out, nargin-1, in+1);
+      break;
+    case 1:
+      FunRange_constructor_1(nargout, out, nargin-1, in+1);
+      break;
+    case 2:
+      FunRange_deconstructor_2(nargout, out, nargin-1, in+1);
+      break;
+    case 3:
+      FunRange_range_3(nargout, out, nargin-1, in+1);
+      break;
+    case 4:
+      FunRange_create_4(nargout, out, nargin-1, in+1);
+      break;
+    case 5:
+      FunDouble_collectorInsertAndMakeBase_5(nargout, out, nargin-1, in+1);
+      break;
+    case 6:
+      FunDouble_deconstructor_6(nargout, out, nargin-1, in+1);
+      break;
+    case 7:
+      FunDouble_multiTemplatedMethod_7(nargout, out, nargin-1, in+1);
+      break;
+    case 8:
+      FunDouble_templatedMethod_8(nargout, out, nargin-1, in+1);
+      break;
+    case 9:
+      FunDouble_staticMethodWithThis_9(nargout, out, nargin-1, in+1);
+      break;
+    case 10:
+      Test_collectorInsertAndMakeBase_10(nargout, out, nargin-1, in+1);
+      break;
+    case 11:
+      Test_constructor_11(nargout, out, nargin-1, in+1);
+      break;
+    case 12:
+      Test_constructor_12(nargout, out, nargin-1, in+1);
+      break;
+    case 13:
+      Test_deconstructor_13(nargout, out, nargin-1, in+1);
+      break;
+    case 14:
+      Test_arg_EigenConstRef_14(nargout, out, nargin-1, in+1);
+      break;
+    case 15:
+      Test_create_MixedPtrs_15(nargout, out, nargin-1, in+1);
+      break;
+    case 16:
+      Test_create_ptrs_16(nargout, out, nargin-1, in+1);
+      break;
+    case 17:
+      Test_get_container_17(nargout, out, nargin-1, in+1);
+      break;
+    case 18:
+      Test_print_18(nargout, out, nargin-1, in+1);
+      break;
+    case 19:
+      Test_return_Point2Ptr_19(nargout, out, nargin-1, in+1);
+      break;
+    case 20:
+      Test_return_Test_20(nargout, out, nargin-1, in+1);
+      break;
+    case 21:
+      Test_return_TestPtr_21(nargout, out, nargin-1, in+1);
+      break;
+    case 22:
+      Test_return_bool_22(nargout, out, nargin-1, in+1);
+      break;
+    case 23:
+      Test_return_double_23(nargout, out, nargin-1, in+1);
+      break;
+    case 24:
+      Test_return_field_24(nargout, out, nargin-1, in+1);
+      break;
+    case 25:
+      Test_return_int_25(nargout, out, nargin-1, in+1);
+      break;
+    case 26:
+      Test_return_matrix1_26(nargout, out, nargin-1, in+1);
+      break;
+    case 27:
+      Test_return_matrix2_27(nargout, out, nargin-1, in+1);
+      break;
+    case 28:
+      Test_return_pair_28(nargout, out, nargin-1, in+1);
+      break;
+    case 29:
+      Test_return_pair_29(nargout, out, nargin-1, in+1);
+      break;
+    case 30:
+      Test_return_ptrs_30(nargout, out, nargin-1, in+1);
+      break;
+    case 31:
+      Test_return_size_t_31(nargout, out, nargin-1, in+1);
+      break;
+    case 32:
+      Test_return_string_32(nargout, out, nargin-1, in+1);
+      break;
+    case 33:
+      Test_return_vector1_33(nargout, out, nargin-1, in+1);
+      break;
+    case 34:
+      Test_return_vector2_34(nargout, out, nargin-1, in+1);
+      break;
+    case 35:
+      Test_set_container_35(nargout, out, nargin-1, in+1);
+      break;
+    case 36:
+      Test_set_container_36(nargout, out, nargin-1, in+1);
+      break;
+    case 37:
+      Test_set_container_37(nargout, out, nargin-1, in+1);
+      break;
+    case 38:
+      PrimitiveRefDouble_collectorInsertAndMakeBase_38(nargout, out, nargin-1, in+1);
+      break;
+    case 39:
+      PrimitiveRefDouble_constructor_39(nargout, out, nargin-1, in+1);
+      break;
+    case 40:
+      PrimitiveRefDouble_deconstructor_40(nargout, out, nargin-1, in+1);
+      break;
+    case 41:
+      PrimitiveRefDouble_Brutal_41(nargout, out, nargin-1, in+1);
+      break;
+    case 42:
+      MyVector3_collectorInsertAndMakeBase_42(nargout, out, nargin-1, in+1);
+      break;
+    case 43:
+      MyVector3_constructor_43(nargout, out, nargin-1, in+1);
+      break;
+    case 44:
+      MyVector3_deconstructor_44(nargout, out, nargin-1, in+1);
+      break;
+    case 45:
+      MyVector12_collectorInsertAndMakeBase_45(nargout, out, nargin-1, in+1);
+      break;
+    case 46:
+      MyVector12_constructor_46(nargout, out, nargin-1, in+1);
+      break;
+    case 47:
+      MyVector12_deconstructor_47(nargout, out, nargin-1, in+1);
+      break;
+    case 48:
+      MultipleTemplatesIntDouble_collectorInsertAndMakeBase_48(nargout, out, nargin-1, in+1);
+      break;
+    case 49:
+      MultipleTemplatesIntDouble_deconstructor_49(nargout, out, nargin-1, in+1);
+      break;
+    case 50:
+      MultipleTemplatesIntFloat_collectorInsertAndMakeBase_50(nargout, out, nargin-1, in+1);
+      break;
+    case 51:
+      MultipleTemplatesIntFloat_deconstructor_51(nargout, out, nargin-1, in+1);
+      break;
+    case 52:
+      MyFactorPosePoint2_collectorInsertAndMakeBase_52(nargout, out, nargin-1, in+1);
+      break;
+    case 53:
+      MyFactorPosePoint2_constructor_53(nargout, out, nargin-1, in+1);
+      break;
+    case 54:
+      MyFactorPosePoint2_deconstructor_54(nargout, out, nargin-1, in+1);
+      break;
+    }
+  } catch(const std::exception& e) {
+    mexErrMsgTxt(("Exception from gtsam:\n" + std::string(e.what()) + "\n").c_str());
+  }
+
+  std::cout.rdbuf(outbuf);
+}
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/functions_wrapper.cpp
@@ -0,0 +1,250 @@
+#include <gtwrap/matlab.h>
+#include <map>
+
+#include <boost/archive/text_iarchive.hpp>
+#include <boost/archive/text_oarchive.hpp>
+#include <boost/serialization/export.hpp>
+
+#include <folder/path/to/Test.h>
+
+
+typedef Fun<double> FunDouble;
+typedef PrimitiveRef<double> PrimitiveRefDouble;
+typedef MyVector<3> MyVector3;
+typedef MyVector<12> MyVector12;
+typedef MultipleTemplates<int, double> MultipleTemplatesIntDouble;
+typedef MultipleTemplates<int, float> MultipleTemplatesIntFloat;
+typedef MyFactor<gtsam::Pose2, gtsam::Matrix> MyFactorPosePoint2;
+
+
+typedef std::set<boost::shared_ptr<FunRange>*> Collector_FunRange;
+static Collector_FunRange collector_FunRange;
+typedef std::set<boost::shared_ptr<FunDouble>*> Collector_FunDouble;
+static Collector_FunDouble collector_FunDouble;
+typedef std::set<boost::shared_ptr<Test>*> Collector_Test;
+static Collector_Test collector_Test;
+typedef std::set<boost::shared_ptr<PrimitiveRefDouble>*> Collector_PrimitiveRefDouble;
+static Collector_PrimitiveRefDouble collector_PrimitiveRefDouble;
+typedef std::set<boost::shared_ptr<MyVector3>*> Collector_MyVector3;
+static Collector_MyVector3 collector_MyVector3;
+typedef std::set<boost::shared_ptr<MyVector12>*> Collector_MyVector12;
+static Collector_MyVector12 collector_MyVector12;
+typedef std::set<boost::shared_ptr<MultipleTemplatesIntDouble>*> Collector_MultipleTemplatesIntDouble;
+static Collector_MultipleTemplatesIntDouble collector_MultipleTemplatesIntDouble;
+typedef std::set<boost::shared_ptr<MultipleTemplatesIntFloat>*> Collector_MultipleTemplatesIntFloat;
+static Collector_MultipleTemplatesIntFloat collector_MultipleTemplatesIntFloat;
+typedef std::set<boost::shared_ptr<MyFactorPosePoint2>*> Collector_MyFactorPosePoint2;
+static Collector_MyFactorPosePoint2 collector_MyFactorPosePoint2;
+
+void _deleteAllObjects()
+{
+  mstream mout;
+  std::streambuf *outbuf = std::cout.rdbuf(&mout);
+
+  bool anyDeleted = false;
+  { for(Collector_FunRange::iterator iter = collector_FunRange.begin();
+      iter != collector_FunRange.end(); ) {
+    delete *iter;
+    collector_FunRange.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_FunDouble::iterator iter = collector_FunDouble.begin();
+      iter != collector_FunDouble.end(); ) {
+    delete *iter;
+    collector_FunDouble.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_Test::iterator iter = collector_Test.begin();
+      iter != collector_Test.end(); ) {
+    delete *iter;
+    collector_Test.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_PrimitiveRefDouble::iterator iter = collector_PrimitiveRefDouble.begin();
+      iter != collector_PrimitiveRefDouble.end(); ) {
+    delete *iter;
+    collector_PrimitiveRefDouble.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyVector3::iterator iter = collector_MyVector3.begin();
+      iter != collector_MyVector3.end(); ) {
+    delete *iter;
+    collector_MyVector3.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyVector12::iterator iter = collector_MyVector12.begin();
+      iter != collector_MyVector12.end(); ) {
+    delete *iter;
+    collector_MyVector12.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MultipleTemplatesIntDouble::iterator iter = collector_MultipleTemplatesIntDouble.begin();
+      iter != collector_MultipleTemplatesIntDouble.end(); ) {
+    delete *iter;
+    collector_MultipleTemplatesIntDouble.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MultipleTemplatesIntFloat::iterator iter = collector_MultipleTemplatesIntFloat.begin();
+      iter != collector_MultipleTemplatesIntFloat.end(); ) {
+    delete *iter;
+    collector_MultipleTemplatesIntFloat.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyFactorPosePoint2::iterator iter = collector_MyFactorPosePoint2.begin();
+      iter != collector_MyFactorPosePoint2.end(); ) {
+    delete *iter;
+    collector_MyFactorPosePoint2.erase(iter++);
+    anyDeleted = true;
+  } }
+  if(anyDeleted)
+    cout <<
+      "WARNING:  Wrap modules with variables in the workspace have been reloaded due to\n"
+      "calling destructors, call 'clear all' again if you plan to now recompile a wrap\n"
+      "module, so that your recompiled module is used instead of the old one." << endl;
+  std::cout.rdbuf(outbuf);
+}
+
+void _functions_RTTIRegister() {
+  const mxArray *alreadyCreated = mexGetVariablePtr("global", "gtsam_functions_rttiRegistry_created");
+  if(!alreadyCreated) {
+    std::map<std::string, std::string> types;
+
+    mxArray *registry = mexGetVariable("global", "gtsamwrap_rttiRegistry");
+    if(!registry)
+      registry = mxCreateStructMatrix(1, 1, 0, NULL);
+    typedef std::pair<std::string, std::string> StringPair;
+    for(const StringPair& rtti_matlab: types) {
+      int fieldId = mxAddField(registry, rtti_matlab.first.c_str());
+      if(fieldId < 0)
+        mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+      mxArray *matlabName = mxCreateString(rtti_matlab.second.c_str());
+      mxSetFieldByNumber(registry, 0, fieldId, matlabName);
+    }
+    if(mexPutVariable("global", "gtsamwrap_rttiRegistry", registry) != 0)
+      mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+    mxDestroyArray(registry);
+    
+    mxArray *newAlreadyCreated = mxCreateNumericMatrix(0, 0, mxINT8_CLASS, mxREAL);
+    if(mexPutVariable("global", "gtsam_geometry_rttiRegistry_created", newAlreadyCreated) != 0)
+      mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+    mxDestroyArray(newAlreadyCreated);
+  }
+}
+
+void load2D_0(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("load2D",nargout,nargin,5);
+  string filename = unwrap< string >(in[0]);
+  boost::shared_ptr<Test> model = unwrap_shared_ptr< Test >(in[1], "ptr_Test");
+  int maxID = unwrap< int >(in[2]);
+  bool addNoise = unwrap< bool >(in[3]);
+  bool smart = unwrap< bool >(in[4]);
+  auto pairResult = load2D(filename,model,maxID,addNoise,smart);
+  out[0] = wrap_shared_ptr(pairResult.first,"gtsam.NonlinearFactorGraph", false);
+  out[1] = wrap_shared_ptr(pairResult.second,"gtsam.Values", false);
+}
+void load2D_1(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("load2D",nargout,nargin,5);
+  string filename = unwrap< string >(in[0]);
+  boost::shared_ptr<gtsam::noiseModel::Diagonal> model = unwrap_shared_ptr< gtsam::noiseModel::Diagonal >(in[1], "ptr_gtsamnoiseModelDiagonal");
+  int maxID = unwrap< int >(in[2]);
+  bool addNoise = unwrap< bool >(in[3]);
+  bool smart = unwrap< bool >(in[4]);
+  auto pairResult = load2D(filename,model,maxID,addNoise,smart);
+  out[0] = wrap_shared_ptr(pairResult.first,"gtsam.NonlinearFactorGraph", false);
+  out[1] = wrap_shared_ptr(pairResult.second,"gtsam.Values", false);
+}
+void load2D_2(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("load2D",nargout,nargin,2);
+  string filename = unwrap< string >(in[0]);
+  boost::shared_ptr<gtsam::noiseModel::Diagonal> model = unwrap_shared_ptr< gtsam::noiseModel::Diagonal >(in[1], "ptr_gtsamnoiseModelDiagonal");
+  auto pairResult = load2D(filename,model);
+  out[0] = wrap_shared_ptr(pairResult.first,"gtsam.NonlinearFactorGraph", false);
+  out[1] = wrap_shared_ptr(pairResult.second,"gtsam.Values", false);
+}
+void aGlobalFunction_3(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("aGlobalFunction",nargout,nargin,0);
+  out[0] = wrap< Vector >(aGlobalFunction());
+}
+void overloadedGlobalFunction_4(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("overloadedGlobalFunction",nargout,nargin,1);
+  int a = unwrap< int >(in[0]);
+  out[0] = wrap< Vector >(overloadedGlobalFunction(a));
+}
+void overloadedGlobalFunction_5(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("overloadedGlobalFunction",nargout,nargin,2);
+  int a = unwrap< int >(in[0]);
+  double b = unwrap< double >(in[1]);
+  out[0] = wrap< Vector >(overloadedGlobalFunction(a,b));
+}
+void MultiTemplatedFunctionStringSize_tDouble_6(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("MultiTemplatedFunctionStringSize_tDouble",nargout,nargin,2);
+  T& x = *unwrap_shared_ptr< T >(in[0], "ptr_T");
+  size_t y = unwrap< size_t >(in[1]);
+  out[0] = wrap< double >(MultiTemplatedFunctionStringSize_tDouble(x,y));
+}
+void MultiTemplatedFunctionDoubleSize_tDouble_7(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("MultiTemplatedFunctionDoubleSize_tDouble",nargout,nargin,2);
+  T& x = *unwrap_shared_ptr< T >(in[0], "ptr_T");
+  size_t y = unwrap< size_t >(in[1]);
+  out[0] = wrap< double >(MultiTemplatedFunctionDoubleSize_tDouble(x,y));
+}
+void TemplatedFunctionRot3_8(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("TemplatedFunctionRot3",nargout,nargin,1);
+  gtsam::Rot3& t = *unwrap_shared_ptr< gtsam::Rot3 >(in[0], "ptr_gtsamRot3");
+  TemplatedFunctionRot3(t);
+}
+
+void mexFunction(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mstream mout;
+  std::streambuf *outbuf = std::cout.rdbuf(&mout);
+
+  _functions_RTTIRegister();
+
+  int id = unwrap<int>(in[0]);
+
+  try {
+    switch(id) {
+    case 0:
+      load2D_0(nargout, out, nargin-1, in+1);
+      break;
+    case 1:
+      load2D_1(nargout, out, nargin-1, in+1);
+      break;
+    case 2:
+      load2D_2(nargout, out, nargin-1, in+1);
+      break;
+    case 3:
+      aGlobalFunction_3(nargout, out, nargin-1, in+1);
+      break;
+    case 4:
+      overloadedGlobalFunction_4(nargout, out, nargin-1, in+1);
+      break;
+    case 5:
+      overloadedGlobalFunction_5(nargout, out, nargin-1, in+1);
+      break;
+    case 6:
+      MultiTemplatedFunctionStringSize_tDouble_6(nargout, out, nargin-1, in+1);
+      break;
+    case 7:
+      MultiTemplatedFunctionDoubleSize_tDouble_7(nargout, out, nargin-1, in+1);
+      break;
+    case 8:
+      TemplatedFunctionRot3_8(nargout, out, nargin-1, in+1);
+      break;
+    }
+  } catch(const std::exception& e) {
+    mexErrMsgTxt(("Exception from gtsam:\n" + std::string(e.what()) + "\n").c_str());
+  }
+
+  std::cout.rdbuf(outbuf);
+}
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/geometry_wrapper.cpp
@@ -0,0 +1,480 @@
+#include <gtwrap/matlab.h>
+#include <map>
+
+#include <boost/archive/text_iarchive.hpp>
+#include <boost/archive/text_oarchive.hpp>
+#include <boost/serialization/export.hpp>
+
+#include <folder/path/to/Test.h>
+#include <gtsam/geometry/Point2.h>
+#include <gtsam/geometry/Point3.h>
+
+typedef Fun<double> FunDouble;
+typedef PrimitiveRef<double> PrimitiveRefDouble;
+typedef MyVector<3> MyVector3;
+typedef MyVector<12> MyVector12;
+typedef MultipleTemplates<int, double> MultipleTemplatesIntDouble;
+typedef MultipleTemplates<int, float> MultipleTemplatesIntFloat;
+typedef MyFactor<gtsam::Pose2, gtsam::Matrix> MyFactorPosePoint2;
+
+BOOST_CLASS_EXPORT_GUID(gtsam::Point2, "gtsamPoint2");
+BOOST_CLASS_EXPORT_GUID(gtsam::Point3, "gtsamPoint3");
+
+typedef std::set<boost::shared_ptr<FunRange>*> Collector_FunRange;
+static Collector_FunRange collector_FunRange;
+typedef std::set<boost::shared_ptr<FunDouble>*> Collector_FunDouble;
+static Collector_FunDouble collector_FunDouble;
+typedef std::set<boost::shared_ptr<Test>*> Collector_Test;
+static Collector_Test collector_Test;
+typedef std::set<boost::shared_ptr<PrimitiveRefDouble>*> Collector_PrimitiveRefDouble;
+static Collector_PrimitiveRefDouble collector_PrimitiveRefDouble;
+typedef std::set<boost::shared_ptr<MyVector3>*> Collector_MyVector3;
+static Collector_MyVector3 collector_MyVector3;
+typedef std::set<boost::shared_ptr<MyVector12>*> Collector_MyVector12;
+static Collector_MyVector12 collector_MyVector12;
+typedef std::set<boost::shared_ptr<MultipleTemplatesIntDouble>*> Collector_MultipleTemplatesIntDouble;
+static Collector_MultipleTemplatesIntDouble collector_MultipleTemplatesIntDouble;
+typedef std::set<boost::shared_ptr<MultipleTemplatesIntFloat>*> Collector_MultipleTemplatesIntFloat;
+static Collector_MultipleTemplatesIntFloat collector_MultipleTemplatesIntFloat;
+typedef std::set<boost::shared_ptr<MyFactorPosePoint2>*> Collector_MyFactorPosePoint2;
+static Collector_MyFactorPosePoint2 collector_MyFactorPosePoint2;
+typedef std::set<boost::shared_ptr<gtsam::Point2>*> Collector_gtsamPoint2;
+static Collector_gtsamPoint2 collector_gtsamPoint2;
+typedef std::set<boost::shared_ptr<gtsam::Point3>*> Collector_gtsamPoint3;
+static Collector_gtsamPoint3 collector_gtsamPoint3;
+
+void _deleteAllObjects()
+{
+  mstream mout;
+  std::streambuf *outbuf = std::cout.rdbuf(&mout);
+
+  bool anyDeleted = false;
+  { for(Collector_FunRange::iterator iter = collector_FunRange.begin();
+      iter != collector_FunRange.end(); ) {
+    delete *iter;
+    collector_FunRange.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_FunDouble::iterator iter = collector_FunDouble.begin();
+      iter != collector_FunDouble.end(); ) {
+    delete *iter;
+    collector_FunDouble.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_Test::iterator iter = collector_Test.begin();
+      iter != collector_Test.end(); ) {
+    delete *iter;
+    collector_Test.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_PrimitiveRefDouble::iterator iter = collector_PrimitiveRefDouble.begin();
+      iter != collector_PrimitiveRefDouble.end(); ) {
+    delete *iter;
+    collector_PrimitiveRefDouble.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyVector3::iterator iter = collector_MyVector3.begin();
+      iter != collector_MyVector3.end(); ) {
+    delete *iter;
+    collector_MyVector3.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyVector12::iterator iter = collector_MyVector12.begin();
+      iter != collector_MyVector12.end(); ) {
+    delete *iter;
+    collector_MyVector12.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MultipleTemplatesIntDouble::iterator iter = collector_MultipleTemplatesIntDouble.begin();
+      iter != collector_MultipleTemplatesIntDouble.end(); ) {
+    delete *iter;
+    collector_MultipleTemplatesIntDouble.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MultipleTemplatesIntFloat::iterator iter = collector_MultipleTemplatesIntFloat.begin();
+      iter != collector_MultipleTemplatesIntFloat.end(); ) {
+    delete *iter;
+    collector_MultipleTemplatesIntFloat.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyFactorPosePoint2::iterator iter = collector_MyFactorPosePoint2.begin();
+      iter != collector_MyFactorPosePoint2.end(); ) {
+    delete *iter;
+    collector_MyFactorPosePoint2.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_gtsamPoint2::iterator iter = collector_gtsamPoint2.begin();
+      iter != collector_gtsamPoint2.end(); ) {
+    delete *iter;
+    collector_gtsamPoint2.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_gtsamPoint3::iterator iter = collector_gtsamPoint3.begin();
+      iter != collector_gtsamPoint3.end(); ) {
+    delete *iter;
+    collector_gtsamPoint3.erase(iter++);
+    anyDeleted = true;
+  } }
+  if(anyDeleted)
+    cout <<
+      "WARNING:  Wrap modules with variables in the workspace have been reloaded due to\n"
+      "calling destructors, call 'clear all' again if you plan to now recompile a wrap\n"
+      "module, so that your recompiled module is used instead of the old one." << endl;
+  std::cout.rdbuf(outbuf);
+}
+
+void _geometry_RTTIRegister() {
+  const mxArray *alreadyCreated = mexGetVariablePtr("global", "gtsam_geometry_rttiRegistry_created");
+  if(!alreadyCreated) {
+    std::map<std::string, std::string> types;
+
+    mxArray *registry = mexGetVariable("global", "gtsamwrap_rttiRegistry");
+    if(!registry)
+      registry = mxCreateStructMatrix(1, 1, 0, NULL);
+    typedef std::pair<std::string, std::string> StringPair;
+    for(const StringPair& rtti_matlab: types) {
+      int fieldId = mxAddField(registry, rtti_matlab.first.c_str());
+      if(fieldId < 0)
+        mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+      mxArray *matlabName = mxCreateString(rtti_matlab.second.c_str());
+      mxSetFieldByNumber(registry, 0, fieldId, matlabName);
+    }
+    if(mexPutVariable("global", "gtsamwrap_rttiRegistry", registry) != 0)
+      mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+    mxDestroyArray(registry);
+    
+    mxArray *newAlreadyCreated = mxCreateNumericMatrix(0, 0, mxINT8_CLASS, mxREAL);
+    if(mexPutVariable("global", "gtsam_geometry_rttiRegistry_created", newAlreadyCreated) != 0)
+      mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+    mxDestroyArray(newAlreadyCreated);
+  }
+}
+
+void gtsamPoint2_collectorInsertAndMakeBase_0(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<gtsam::Point2> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_gtsamPoint2.insert(self);
+}
+
+void gtsamPoint2_constructor_1(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<gtsam::Point2> Shared;
+
+  Shared *self = new Shared(new gtsam::Point2());
+  collector_gtsamPoint2.insert(self);
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<Shared**> (mxGetData(out[0])) = self;
+}
+
+void gtsamPoint2_constructor_2(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<gtsam::Point2> Shared;
+
+  double x = unwrap< double >(in[0]);
+  double y = unwrap< double >(in[1]);
+  Shared *self = new Shared(new gtsam::Point2(x,y));
+  collector_gtsamPoint2.insert(self);
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<Shared**> (mxGetData(out[0])) = self;
+}
+
+void gtsamPoint2_deconstructor_3(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<gtsam::Point2> Shared;
+  checkArguments("delete_gtsamPoint2",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_gtsamPoint2::iterator item;
+  item = collector_gtsamPoint2.find(self);
+  if(item != collector_gtsamPoint2.end()) {
+    delete self;
+    collector_gtsamPoint2.erase(item);
+  }
+}
+
+void gtsamPoint2_argChar_4(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("argChar",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<gtsam::Point2>(in[0], "ptr_gtsamPoint2");
+  char a = unwrap< char >(in[1]);
+  obj->argChar(a);
+}
+
+void gtsamPoint2_argChar_5(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("argChar",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<gtsam::Point2>(in[0], "ptr_gtsamPoint2");
+  boost::shared_ptr<char> a = unwrap_shared_ptr< char >(in[1], "ptr_char");
+  obj->argChar(a);
+}
+
+void gtsamPoint2_argChar_6(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("argChar",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<gtsam::Point2>(in[0], "ptr_gtsamPoint2");
+  char a = unwrap< char >(in[1]);
+  obj->argChar(a);
+}
+
+void gtsamPoint2_argChar_7(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("argChar",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<gtsam::Point2>(in[0], "ptr_gtsamPoint2");
+  boost::shared_ptr<char> a = unwrap_shared_ptr< char >(in[1], "ptr_char");
+  obj->argChar(a);
+}
+
+void gtsamPoint2_argChar_8(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("argChar",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<gtsam::Point2>(in[0], "ptr_gtsamPoint2");
+  boost::shared_ptr<char> a = unwrap_shared_ptr< char >(in[1], "ptr_char");
+  obj->argChar(a);
+}
+
+void gtsamPoint2_argChar_9(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("argChar",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<gtsam::Point2>(in[0], "ptr_gtsamPoint2");
+  char a = unwrap< char >(in[1]);
+  obj->argChar(a);
+}
+
+void gtsamPoint2_argChar_10(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("argChar",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<gtsam::Point2>(in[0], "ptr_gtsamPoint2");
+  boost::shared_ptr<char> a = unwrap_shared_ptr< char >(in[1], "ptr_char");
+  obj->argChar(a);
+}
+
+void gtsamPoint2_argUChar_11(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("argUChar",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<gtsam::Point2>(in[0], "ptr_gtsamPoint2");
+  unsigned char a = unwrap< unsigned char >(in[1]);
+  obj->argUChar(a);
+}
+
+void gtsamPoint2_dim_12(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("dim",nargout,nargin-1,0);
+  auto obj = unwrap_shared_ptr<gtsam::Point2>(in[0], "ptr_gtsamPoint2");
+  out[0] = wrap< int >(obj->dim());
+}
+
+void gtsamPoint2_eigenArguments_13(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("eigenArguments",nargout,nargin-1,2);
+  auto obj = unwrap_shared_ptr<gtsam::Point2>(in[0], "ptr_gtsamPoint2");
+  Vector v = unwrap< Vector >(in[1]);
+  Matrix m = unwrap< Matrix >(in[2]);
+  obj->eigenArguments(v,m);
+}
+
+void gtsamPoint2_returnChar_14(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("returnChar",nargout,nargin-1,0);
+  auto obj = unwrap_shared_ptr<gtsam::Point2>(in[0], "ptr_gtsamPoint2");
+  out[0] = wrap< char >(obj->returnChar());
+}
+
+void gtsamPoint2_vectorConfusion_15(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("vectorConfusion",nargout,nargin-1,0);
+  auto obj = unwrap_shared_ptr<gtsam::Point2>(in[0], "ptr_gtsamPoint2");
+  out[0] = wrap_shared_ptr(boost::make_shared<VectorNotEigen>(obj->vectorConfusion()),"VectorNotEigen", false);
+}
+
+void gtsamPoint2_x_16(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("x",nargout,nargin-1,0);
+  auto obj = unwrap_shared_ptr<gtsam::Point2>(in[0], "ptr_gtsamPoint2");
+  out[0] = wrap< double >(obj->x());
+}
+
+void gtsamPoint2_y_17(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("y",nargout,nargin-1,0);
+  auto obj = unwrap_shared_ptr<gtsam::Point2>(in[0], "ptr_gtsamPoint2");
+  out[0] = wrap< double >(obj->y());
+}
+
+void gtsamPoint3_collectorInsertAndMakeBase_18(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<gtsam::Point3> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_gtsamPoint3.insert(self);
+}
+
+void gtsamPoint3_constructor_19(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<gtsam::Point3> Shared;
+
+  double x = unwrap< double >(in[0]);
+  double y = unwrap< double >(in[1]);
+  double z = unwrap< double >(in[2]);
+  Shared *self = new Shared(new gtsam::Point3(x,y,z));
+  collector_gtsamPoint3.insert(self);
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<Shared**> (mxGetData(out[0])) = self;
+}
+
+void gtsamPoint3_deconstructor_20(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<gtsam::Point3> Shared;
+  checkArguments("delete_gtsamPoint3",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_gtsamPoint3::iterator item;
+  item = collector_gtsamPoint3.find(self);
+  if(item != collector_gtsamPoint3.end()) {
+    delete self;
+    collector_gtsamPoint3.erase(item);
+  }
+}
+
+void gtsamPoint3_norm_21(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("norm",nargout,nargin-1,0);
+  auto obj = unwrap_shared_ptr<gtsam::Point3>(in[0], "ptr_gtsamPoint3");
+  out[0] = wrap< double >(obj->norm());
+}
+
+void gtsamPoint3_string_serialize_22(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<gtsam::Point3> Shared;
+  checkArguments("string_serialize",nargout,nargin-1,0);
+  Shared obj = unwrap_shared_ptr<gtsam::Point3>(in[0], "ptr_gtsamPoint3");
+  ostringstream out_archive_stream;
+  boost::archive::text_oarchive out_archive(out_archive_stream);
+  out_archive << *obj;
+  out[0] = wrap< string >(out_archive_stream.str());
+}
+void gtsamPoint3_StaticFunctionRet_23(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("gtsamPoint3.StaticFunctionRet",nargout,nargin,1);
+  double z = unwrap< double >(in[0]);
+  out[0] = wrap< Point3 >(gtsam::Point3::StaticFunctionRet(z));
+}
+
+void gtsamPoint3_staticFunction_24(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("gtsamPoint3.staticFunction",nargout,nargin,0);
+  out[0] = wrap< double >(gtsam::Point3::staticFunction());
+}
+
+void gtsamPoint3_string_deserialize_25(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<gtsam::Point3> Shared;
+  checkArguments("gtsamPoint3.string_deserialize",nargout,nargin,1);
+  string serialized = unwrap< string >(in[0]);
+  istringstream in_archive_stream(serialized);
+  boost::archive::text_iarchive in_archive(in_archive_stream);
+  Shared output(new gtsam::Point3());
+  in_archive >> *output;
+  out[0] = wrap_shared_ptr(output,"gtsam.Point3", false);
+}
+
+void mexFunction(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mstream mout;
+  std::streambuf *outbuf = std::cout.rdbuf(&mout);
+
+  _geometry_RTTIRegister();
+
+  int id = unwrap<int>(in[0]);
+
+  try {
+    switch(id) {
+    case 0:
+      gtsamPoint2_collectorInsertAndMakeBase_0(nargout, out, nargin-1, in+1);
+      break;
+    case 1:
+      gtsamPoint2_constructor_1(nargout, out, nargin-1, in+1);
+      break;
+    case 2:
+      gtsamPoint2_constructor_2(nargout, out, nargin-1, in+1);
+      break;
+    case 3:
+      gtsamPoint2_deconstructor_3(nargout, out, nargin-1, in+1);
+      break;
+    case 4:
+      gtsamPoint2_argChar_4(nargout, out, nargin-1, in+1);
+      break;
+    case 5:
+      gtsamPoint2_argChar_5(nargout, out, nargin-1, in+1);
+      break;
+    case 6:
+      gtsamPoint2_argChar_6(nargout, out, nargin-1, in+1);
+      break;
+    case 7:
+      gtsamPoint2_argChar_7(nargout, out, nargin-1, in+1);
+      break;
+    case 8:
+      gtsamPoint2_argChar_8(nargout, out, nargin-1, in+1);
+      break;
+    case 9:
+      gtsamPoint2_argChar_9(nargout, out, nargin-1, in+1);
+      break;
+    case 10:
+      gtsamPoint2_argChar_10(nargout, out, nargin-1, in+1);
+      break;
+    case 11:
+      gtsamPoint2_argUChar_11(nargout, out, nargin-1, in+1);
+      break;
+    case 12:
+      gtsamPoint2_dim_12(nargout, out, nargin-1, in+1);
+      break;
+    case 13:
+      gtsamPoint2_eigenArguments_13(nargout, out, nargin-1, in+1);
+      break;
+    case 14:
+      gtsamPoint2_returnChar_14(nargout, out, nargin-1, in+1);
+      break;
+    case 15:
+      gtsamPoint2_vectorConfusion_15(nargout, out, nargin-1, in+1);
+      break;
+    case 16:
+      gtsamPoint2_x_16(nargout, out, nargin-1, in+1);
+      break;
+    case 17:
+      gtsamPoint2_y_17(nargout, out, nargin-1, in+1);
+      break;
+    case 18:
+      gtsamPoint3_collectorInsertAndMakeBase_18(nargout, out, nargin-1, in+1);
+      break;
+    case 19:
+      gtsamPoint3_constructor_19(nargout, out, nargin-1, in+1);
+      break;
+    case 20:
+      gtsamPoint3_deconstructor_20(nargout, out, nargin-1, in+1);
+      break;
+    case 21:
+      gtsamPoint3_norm_21(nargout, out, nargin-1, in+1);
+      break;
+    case 22:
+      gtsamPoint3_string_serialize_22(nargout, out, nargin-1, in+1);
+      break;
+    case 23:
+      gtsamPoint3_StaticFunctionRet_23(nargout, out, nargin-1, in+1);
+      break;
+    case 24:
+      gtsamPoint3_staticFunction_24(nargout, out, nargin-1, in+1);
+      break;
+    case 25:
+      gtsamPoint3_string_deserialize_25(nargout, out, nargin-1, in+1);
+      break;
+    }
+  } catch(const std::exception& e) {
+    mexErrMsgTxt(("Exception from gtsam:\n" + std::string(e.what()) + "\n").c_str());
+  }
+
+  std::cout.rdbuf(outbuf);
+}
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/inheritance_wrapper.cpp
@@ -0,0 +1,681 @@
+#include <gtwrap/matlab.h>
+#include <map>
+
+#include <boost/archive/text_iarchive.hpp>
+#include <boost/archive/text_oarchive.hpp>
+#include <boost/serialization/export.hpp>
+
+#include <folder/path/to/Test.h>
+#include <gtsam/geometry/Point2.h>
+#include <gtsam/geometry/Point3.h>
+
+typedef Fun<double> FunDouble;
+typedef PrimitiveRef<double> PrimitiveRefDouble;
+typedef MyVector<3> MyVector3;
+typedef MyVector<12> MyVector12;
+typedef MultipleTemplates<int, double> MultipleTemplatesIntDouble;
+typedef MultipleTemplates<int, float> MultipleTemplatesIntFloat;
+typedef MyFactor<gtsam::Pose2, gtsam::Matrix> MyFactorPosePoint2;
+typedef MyTemplate<gtsam::Point2> MyTemplatePoint2;
+typedef MyTemplate<gtsam::Matrix> MyTemplateMatrix;
+
+BOOST_CLASS_EXPORT_GUID(gtsam::Point2, "gtsamPoint2");
+BOOST_CLASS_EXPORT_GUID(gtsam::Point3, "gtsamPoint3");
+
+typedef std::set<boost::shared_ptr<FunRange>*> Collector_FunRange;
+static Collector_FunRange collector_FunRange;
+typedef std::set<boost::shared_ptr<FunDouble>*> Collector_FunDouble;
+static Collector_FunDouble collector_FunDouble;
+typedef std::set<boost::shared_ptr<Test>*> Collector_Test;
+static Collector_Test collector_Test;
+typedef std::set<boost::shared_ptr<PrimitiveRefDouble>*> Collector_PrimitiveRefDouble;
+static Collector_PrimitiveRefDouble collector_PrimitiveRefDouble;
+typedef std::set<boost::shared_ptr<MyVector3>*> Collector_MyVector3;
+static Collector_MyVector3 collector_MyVector3;
+typedef std::set<boost::shared_ptr<MyVector12>*> Collector_MyVector12;
+static Collector_MyVector12 collector_MyVector12;
+typedef std::set<boost::shared_ptr<MultipleTemplatesIntDouble>*> Collector_MultipleTemplatesIntDouble;
+static Collector_MultipleTemplatesIntDouble collector_MultipleTemplatesIntDouble;
+typedef std::set<boost::shared_ptr<MultipleTemplatesIntFloat>*> Collector_MultipleTemplatesIntFloat;
+static Collector_MultipleTemplatesIntFloat collector_MultipleTemplatesIntFloat;
+typedef std::set<boost::shared_ptr<MyFactorPosePoint2>*> Collector_MyFactorPosePoint2;
+static Collector_MyFactorPosePoint2 collector_MyFactorPosePoint2;
+typedef std::set<boost::shared_ptr<gtsam::Point2>*> Collector_gtsamPoint2;
+static Collector_gtsamPoint2 collector_gtsamPoint2;
+typedef std::set<boost::shared_ptr<gtsam::Point3>*> Collector_gtsamPoint3;
+static Collector_gtsamPoint3 collector_gtsamPoint3;
+typedef std::set<boost::shared_ptr<MyBase>*> Collector_MyBase;
+static Collector_MyBase collector_MyBase;
+typedef std::set<boost::shared_ptr<MyTemplatePoint2>*> Collector_MyTemplatePoint2;
+static Collector_MyTemplatePoint2 collector_MyTemplatePoint2;
+typedef std::set<boost::shared_ptr<MyTemplateMatrix>*> Collector_MyTemplateMatrix;
+static Collector_MyTemplateMatrix collector_MyTemplateMatrix;
+
+void _deleteAllObjects()
+{
+  mstream mout;
+  std::streambuf *outbuf = std::cout.rdbuf(&mout);
+
+  bool anyDeleted = false;
+  { for(Collector_FunRange::iterator iter = collector_FunRange.begin();
+      iter != collector_FunRange.end(); ) {
+    delete *iter;
+    collector_FunRange.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_FunDouble::iterator iter = collector_FunDouble.begin();
+      iter != collector_FunDouble.end(); ) {
+    delete *iter;
+    collector_FunDouble.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_Test::iterator iter = collector_Test.begin();
+      iter != collector_Test.end(); ) {
+    delete *iter;
+    collector_Test.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_PrimitiveRefDouble::iterator iter = collector_PrimitiveRefDouble.begin();
+      iter != collector_PrimitiveRefDouble.end(); ) {
+    delete *iter;
+    collector_PrimitiveRefDouble.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyVector3::iterator iter = collector_MyVector3.begin();
+      iter != collector_MyVector3.end(); ) {
+    delete *iter;
+    collector_MyVector3.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyVector12::iterator iter = collector_MyVector12.begin();
+      iter != collector_MyVector12.end(); ) {
+    delete *iter;
+    collector_MyVector12.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MultipleTemplatesIntDouble::iterator iter = collector_MultipleTemplatesIntDouble.begin();
+      iter != collector_MultipleTemplatesIntDouble.end(); ) {
+    delete *iter;
+    collector_MultipleTemplatesIntDouble.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MultipleTemplatesIntFloat::iterator iter = collector_MultipleTemplatesIntFloat.begin();
+      iter != collector_MultipleTemplatesIntFloat.end(); ) {
+    delete *iter;
+    collector_MultipleTemplatesIntFloat.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyFactorPosePoint2::iterator iter = collector_MyFactorPosePoint2.begin();
+      iter != collector_MyFactorPosePoint2.end(); ) {
+    delete *iter;
+    collector_MyFactorPosePoint2.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_gtsamPoint2::iterator iter = collector_gtsamPoint2.begin();
+      iter != collector_gtsamPoint2.end(); ) {
+    delete *iter;
+    collector_gtsamPoint2.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_gtsamPoint3::iterator iter = collector_gtsamPoint3.begin();
+      iter != collector_gtsamPoint3.end(); ) {
+    delete *iter;
+    collector_gtsamPoint3.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyBase::iterator iter = collector_MyBase.begin();
+      iter != collector_MyBase.end(); ) {
+    delete *iter;
+    collector_MyBase.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyTemplatePoint2::iterator iter = collector_MyTemplatePoint2.begin();
+      iter != collector_MyTemplatePoint2.end(); ) {
+    delete *iter;
+    collector_MyTemplatePoint2.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyTemplateMatrix::iterator iter = collector_MyTemplateMatrix.begin();
+      iter != collector_MyTemplateMatrix.end(); ) {
+    delete *iter;
+    collector_MyTemplateMatrix.erase(iter++);
+    anyDeleted = true;
+  } }
+  if(anyDeleted)
+    cout <<
+      "WARNING:  Wrap modules with variables in the workspace have been reloaded due to\n"
+      "calling destructors, call 'clear all' again if you plan to now recompile a wrap\n"
+      "module, so that your recompiled module is used instead of the old one." << endl;
+  std::cout.rdbuf(outbuf);
+}
+
+void _inheritance_RTTIRegister() {
+  const mxArray *alreadyCreated = mexGetVariablePtr("global", "gtsam_inheritance_rttiRegistry_created");
+  if(!alreadyCreated) {
+    std::map<std::string, std::string> types;
+    types.insert(std::make_pair(typeid(MyBase).name(), "MyBase"));
+    types.insert(std::make_pair(typeid(MyTemplatePoint2).name(), "MyTemplatePoint2"));
+    types.insert(std::make_pair(typeid(MyTemplateMatrix).name(), "MyTemplateMatrix"));
+
+    mxArray *registry = mexGetVariable("global", "gtsamwrap_rttiRegistry");
+    if(!registry)
+      registry = mxCreateStructMatrix(1, 1, 0, NULL);
+    typedef std::pair<std::string, std::string> StringPair;
+    for(const StringPair& rtti_matlab: types) {
+      int fieldId = mxAddField(registry, rtti_matlab.first.c_str());
+      if(fieldId < 0)
+        mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+      mxArray *matlabName = mxCreateString(rtti_matlab.second.c_str());
+      mxSetFieldByNumber(registry, 0, fieldId, matlabName);
+    }
+    if(mexPutVariable("global", "gtsamwrap_rttiRegistry", registry) != 0)
+      mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+    mxDestroyArray(registry);
+    
+    mxArray *newAlreadyCreated = mxCreateNumericMatrix(0, 0, mxINT8_CLASS, mxREAL);
+    if(mexPutVariable("global", "gtsam_geometry_rttiRegistry_created", newAlreadyCreated) != 0)
+      mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+    mxDestroyArray(newAlreadyCreated);
+  }
+}
+
+void gtsamPoint2_collectorInsertAndMakeBase_0(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<gtsam::Point2> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_gtsamPoint2.insert(self);
+}
+
+void MyBase_collectorInsertAndMakeBase_0(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<MyBase> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_MyBase.insert(self);
+}
+
+void MyBase_deconstructor_2(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<MyBase> Shared;
+  checkArguments("delete_MyBase",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_MyBase::iterator item;
+  item = collector_MyBase.find(self);
+  if(item != collector_MyBase.end()) {
+    delete self;
+    collector_MyBase.erase(item);
+  }
+}
+
+void gtsamPoint2_deconstructor_3(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<gtsam::Point2> Shared;
+  checkArguments("delete_gtsamPoint2",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_gtsamPoint2::iterator item;
+  item = collector_gtsamPoint2.find(self);
+  if(item != collector_gtsamPoint2.end()) {
+    delete self;
+    collector_gtsamPoint2.erase(item);
+  }
+}
+
+void MyTemplatePoint2_collectorInsertAndMakeBase_3(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<MyTemplate<gtsam::Point2>> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_MyTemplatePoint2.insert(self);
+
+  typedef boost::shared_ptr<MyBase> SharedBase;
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<SharedBase**>(mxGetData(out[0])) = new SharedBase(*self);
+}
+
+void MyTemplatePoint2_constructor_5(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<MyTemplate<gtsam::Point2>> Shared;
+
+  Shared *self = new Shared(new MyTemplate<gtsam::Point2>());
+  collector_MyTemplatePoint2.insert(self);
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<Shared**> (mxGetData(out[0])) = self;
+
+  typedef boost::shared_ptr<MyBase> SharedBase;
+  out[1] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<SharedBase**>(mxGetData(out[1])) = new SharedBase(*self);
+}
+
+void MyTemplatePoint2_deconstructor_6(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<MyTemplate<gtsam::Point2>> Shared;
+  checkArguments("delete_MyTemplatePoint2",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_MyTemplatePoint2::iterator item;
+  item = collector_MyTemplatePoint2.find(self);
+  if(item != collector_MyTemplatePoint2.end()) {
+    delete self;
+    collector_MyTemplatePoint2.erase(item);
+  }
+}
+
+void MyTemplatePoint2_accept_T_7(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("accept_T",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Point2>>(in[0], "ptr_MyTemplatePoint2");
+  Point2 value = unwrap< Point2 >(in[1]);
+  obj->accept_T(value);
+}
+
+void MyTemplatePoint2_accept_Tptr_8(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("accept_Tptr",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Point2>>(in[0], "ptr_MyTemplatePoint2");
+  Point2 value = unwrap< Point2 >(in[1]);
+  obj->accept_Tptr(value);
+}
+
+void MyTemplatePoint2_create_MixedPtrs_9(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("create_MixedPtrs",nargout,nargin-1,0);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Point2>>(in[0], "ptr_MyTemplatePoint2");
+  auto pairResult = obj->create_MixedPtrs();
+  out[0] = wrap< Point2 >(pairResult.first);
+  {
+  boost::shared_ptr<Point2> shared(pairResult.second);
+  out[1] = wrap_shared_ptr(shared,"Point2");
+  }
+}
+
+void MyTemplatePoint2_create_ptrs_10(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("create_ptrs",nargout,nargin-1,0);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Point2>>(in[0], "ptr_MyTemplatePoint2");
+  auto pairResult = obj->create_ptrs();
+  {
+  boost::shared_ptr<Point2> shared(pairResult.first);
+  out[0] = wrap_shared_ptr(shared,"Point2");
+  }
+  {
+  boost::shared_ptr<Point2> shared(pairResult.second);
+  out[1] = wrap_shared_ptr(shared,"Point2");
+  }
+}
+
+void MyTemplatePoint2_return_T_11(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_T",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Point2>>(in[0], "ptr_MyTemplatePoint2");
+  Point2 value = unwrap< Point2 >(in[1]);
+  out[0] = wrap< Point2 >(obj->return_T(value));
+}
+
+void MyTemplatePoint2_return_Tptr_12(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_Tptr",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Point2>>(in[0], "ptr_MyTemplatePoint2");
+  Point2 value = unwrap< Point2 >(in[1]);
+  {
+  boost::shared_ptr<Point2> shared(obj->return_Tptr(value));
+  out[0] = wrap_shared_ptr(shared,"Point2");
+  }
+}
+
+void MyTemplatePoint2_return_ptrs_13(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_ptrs",nargout,nargin-1,2);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Point2>>(in[0], "ptr_MyTemplatePoint2");
+  Point2 p1 = unwrap< Point2 >(in[1]);
+  Point2 p2 = unwrap< Point2 >(in[2]);
+  auto pairResult = obj->return_ptrs(p1,p2);
+  {
+  boost::shared_ptr<Point2> shared(pairResult.first);
+  out[0] = wrap_shared_ptr(shared,"Point2");
+  }
+  {
+  boost::shared_ptr<Point2> shared(pairResult.second);
+  out[1] = wrap_shared_ptr(shared,"Point2");
+  }
+}
+
+void MyTemplatePoint2_templatedMethod_14(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("templatedMethodMatrix",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Point2>>(in[0], "ptr_MyTemplatePoint2");
+  Matrix t = unwrap< Matrix >(in[1]);
+  out[0] = wrap< Matrix >(obj->templatedMethod<gtsam::Matrix>(t));
+}
+
+void MyTemplatePoint2_templatedMethod_15(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("templatedMethodPoint2",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Point2>>(in[0], "ptr_MyTemplatePoint2");
+  Point2 t = unwrap< Point2 >(in[1]);
+  out[0] = wrap< Point2 >(obj->templatedMethod<gtsam::Point2>(t));
+}
+
+void MyTemplatePoint2_templatedMethod_16(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("templatedMethodPoint3",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Point2>>(in[0], "ptr_MyTemplatePoint2");
+  Point3 t = unwrap< Point3 >(in[1]);
+  out[0] = wrap< Point3 >(obj->templatedMethod<gtsam::Point3>(t));
+}
+
+void MyTemplatePoint2_templatedMethod_17(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("templatedMethodVector",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Point2>>(in[0], "ptr_MyTemplatePoint2");
+  Vector t = unwrap< Vector >(in[1]);
+  out[0] = wrap< Vector >(obj->templatedMethod<gtsam::Vector>(t));
+}
+
+void MyTemplatePoint2_Level_18(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("MyTemplatePoint2.Level",nargout,nargin,1);
+  Point2 K = unwrap< Point2 >(in[0]);
+  out[0] = wrap_shared_ptr(boost::make_shared<MyTemplate<Point2>>(MyTemplate<gtsam::Point2>::Level(K)),"MyTemplatePoint2", false);
+}
+
+void gtsamPoint3_constructor_19(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<gtsam::Point3> Shared;
+
+  double x = unwrap< double >(in[0]);
+  double y = unwrap< double >(in[1]);
+  double z = unwrap< double >(in[2]);
+  Shared *self = new Shared(new gtsam::Point3(x,y,z));
+  collector_gtsamPoint3.insert(self);
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<Shared**> (mxGetData(out[0])) = self;
+}
+
+void MyTemplateMatrix_collectorInsertAndMakeBase_19(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<MyTemplate<gtsam::Matrix>> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_MyTemplateMatrix.insert(self);
+
+  typedef boost::shared_ptr<MyBase> SharedBase;
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<SharedBase**>(mxGetData(out[0])) = new SharedBase(*self);
+}
+
+void MyTemplateMatrix_constructor_21(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<MyTemplate<gtsam::Matrix>> Shared;
+
+  Shared *self = new Shared(new MyTemplate<gtsam::Matrix>());
+  collector_MyTemplateMatrix.insert(self);
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<Shared**> (mxGetData(out[0])) = self;
+
+  typedef boost::shared_ptr<MyBase> SharedBase;
+  out[1] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<SharedBase**>(mxGetData(out[1])) = new SharedBase(*self);
+}
+
+void MyTemplateMatrix_deconstructor_22(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<MyTemplate<gtsam::Matrix>> Shared;
+  checkArguments("delete_MyTemplateMatrix",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_MyTemplateMatrix::iterator item;
+  item = collector_MyTemplateMatrix.find(self);
+  if(item != collector_MyTemplateMatrix.end()) {
+    delete self;
+    collector_MyTemplateMatrix.erase(item);
+  }
+}
+
+void MyTemplateMatrix_accept_T_23(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("accept_T",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Matrix>>(in[0], "ptr_MyTemplateMatrix");
+  Matrix value = unwrap< Matrix >(in[1]);
+  obj->accept_T(value);
+}
+
+void MyTemplateMatrix_accept_Tptr_24(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("accept_Tptr",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Matrix>>(in[0], "ptr_MyTemplateMatrix");
+  Matrix value = unwrap< Matrix >(in[1]);
+  obj->accept_Tptr(value);
+}
+
+void MyTemplateMatrix_create_MixedPtrs_25(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("create_MixedPtrs",nargout,nargin-1,0);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Matrix>>(in[0], "ptr_MyTemplateMatrix");
+  auto pairResult = obj->create_MixedPtrs();
+  out[0] = wrap< Matrix >(pairResult.first);
+  {
+  boost::shared_ptr<Matrix> shared(pairResult.second);
+  out[1] = wrap_shared_ptr(shared,"Matrix");
+  }
+}
+
+void MyTemplateMatrix_create_ptrs_26(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("create_ptrs",nargout,nargin-1,0);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Matrix>>(in[0], "ptr_MyTemplateMatrix");
+  auto pairResult = obj->create_ptrs();
+  {
+  boost::shared_ptr<Matrix> shared(pairResult.first);
+  out[0] = wrap_shared_ptr(shared,"Matrix");
+  }
+  {
+  boost::shared_ptr<Matrix> shared(pairResult.second);
+  out[1] = wrap_shared_ptr(shared,"Matrix");
+  }
+}
+
+void MyTemplateMatrix_return_T_27(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_T",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Matrix>>(in[0], "ptr_MyTemplateMatrix");
+  Matrix value = unwrap< Matrix >(in[1]);
+  out[0] = wrap< Matrix >(obj->return_T(value));
+}
+
+void MyTemplateMatrix_return_Tptr_28(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_Tptr",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Matrix>>(in[0], "ptr_MyTemplateMatrix");
+  Matrix value = unwrap< Matrix >(in[1]);
+  {
+  boost::shared_ptr<Matrix> shared(obj->return_Tptr(value));
+  out[0] = wrap_shared_ptr(shared,"Matrix");
+  }
+}
+
+void MyTemplateMatrix_return_ptrs_29(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("return_ptrs",nargout,nargin-1,2);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Matrix>>(in[0], "ptr_MyTemplateMatrix");
+  Matrix p1 = unwrap< Matrix >(in[1]);
+  Matrix p2 = unwrap< Matrix >(in[2]);
+  auto pairResult = obj->return_ptrs(p1,p2);
+  {
+  boost::shared_ptr<Matrix> shared(pairResult.first);
+  out[0] = wrap_shared_ptr(shared,"Matrix");
+  }
+  {
+  boost::shared_ptr<Matrix> shared(pairResult.second);
+  out[1] = wrap_shared_ptr(shared,"Matrix");
+  }
+}
+
+void MyTemplateMatrix_templatedMethod_30(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("templatedMethodMatrix",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Matrix>>(in[0], "ptr_MyTemplateMatrix");
+  Matrix t = unwrap< Matrix >(in[1]);
+  out[0] = wrap< Matrix >(obj->templatedMethod<gtsam::Matrix>(t));
+}
+
+void MyTemplateMatrix_templatedMethod_31(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("templatedMethodPoint2",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Matrix>>(in[0], "ptr_MyTemplateMatrix");
+  Point2 t = unwrap< Point2 >(in[1]);
+  out[0] = wrap< Point2 >(obj->templatedMethod<gtsam::Point2>(t));
+}
+
+void MyTemplateMatrix_templatedMethod_32(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("templatedMethodPoint3",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Matrix>>(in[0], "ptr_MyTemplateMatrix");
+  Point3 t = unwrap< Point3 >(in[1]);
+  out[0] = wrap< Point3 >(obj->templatedMethod<gtsam::Point3>(t));
+}
+
+void MyTemplateMatrix_templatedMethod_33(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("templatedMethodVector",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<MyTemplate<gtsam::Matrix>>(in[0], "ptr_MyTemplateMatrix");
+  Vector t = unwrap< Vector >(in[1]);
+  out[0] = wrap< Vector >(obj->templatedMethod<gtsam::Vector>(t));
+}
+
+void MyTemplateMatrix_Level_34(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("MyTemplateMatrix.Level",nargout,nargin,1);
+  Matrix K = unwrap< Matrix >(in[0]);
+  out[0] = wrap_shared_ptr(boost::make_shared<MyTemplate<Matrix>>(MyTemplate<gtsam::Matrix>::Level(K)),"MyTemplateMatrix", false);
+}
+
+
+void mexFunction(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mstream mout;
+  std::streambuf *outbuf = std::cout.rdbuf(&mout);
+
+  _inheritance_RTTIRegister();
+
+  int id = unwrap<int>(in[0]);
+
+  try {
+    switch(id) {
+    case 0:
+      gtsamPoint2_collectorInsertAndMakeBase_0(nargout, out, nargin-1, in+1);
+      break;
+    case 1:
+      MyBase_collectorInsertAndMakeBase_0(nargout, out, nargin-1, in+1);
+      break;
+    case 2:
+      MyBase_deconstructor_2(nargout, out, nargin-1, in+1);
+      break;
+    case 3:
+      gtsamPoint2_deconstructor_3(nargout, out, nargin-1, in+1);
+      break;
+    case 4:
+      MyTemplatePoint2_collectorInsertAndMakeBase_3(nargout, out, nargin-1, in+1);
+      break;
+    case 5:
+      MyTemplatePoint2_constructor_5(nargout, out, nargin-1, in+1);
+      break;
+    case 6:
+      MyTemplatePoint2_deconstructor_6(nargout, out, nargin-1, in+1);
+      break;
+    case 7:
+      MyTemplatePoint2_accept_T_7(nargout, out, nargin-1, in+1);
+      break;
+    case 8:
+      MyTemplatePoint2_accept_Tptr_8(nargout, out, nargin-1, in+1);
+      break;
+    case 9:
+      MyTemplatePoint2_create_MixedPtrs_9(nargout, out, nargin-1, in+1);
+      break;
+    case 10:
+      MyTemplatePoint2_create_ptrs_10(nargout, out, nargin-1, in+1);
+      break;
+    case 11:
+      MyTemplatePoint2_return_T_11(nargout, out, nargin-1, in+1);
+      break;
+    case 12:
+      MyTemplatePoint2_return_Tptr_12(nargout, out, nargin-1, in+1);
+      break;
+    case 13:
+      MyTemplatePoint2_return_ptrs_13(nargout, out, nargin-1, in+1);
+      break;
+    case 14:
+      MyTemplatePoint2_templatedMethod_14(nargout, out, nargin-1, in+1);
+      break;
+    case 15:
+      MyTemplatePoint2_templatedMethod_15(nargout, out, nargin-1, in+1);
+      break;
+    case 16:
+      MyTemplatePoint2_templatedMethod_16(nargout, out, nargin-1, in+1);
+      break;
+    case 17:
+      MyTemplatePoint2_templatedMethod_17(nargout, out, nargin-1, in+1);
+      break;
+    case 18:
+      MyTemplatePoint2_Level_18(nargout, out, nargin-1, in+1);
+      break;
+    case 19:
+      gtsamPoint3_constructor_19(nargout, out, nargin-1, in+1);
+      break;
+    case 20:
+      MyTemplateMatrix_collectorInsertAndMakeBase_19(nargout, out, nargin-1, in+1);
+      break;
+    case 21:
+      MyTemplateMatrix_constructor_21(nargout, out, nargin-1, in+1);
+      break;
+    case 22:
+      MyTemplateMatrix_deconstructor_22(nargout, out, nargin-1, in+1);
+      break;
+    case 23:
+      MyTemplateMatrix_accept_T_23(nargout, out, nargin-1, in+1);
+      break;
+    case 24:
+      MyTemplateMatrix_accept_Tptr_24(nargout, out, nargin-1, in+1);
+      break;
+    case 25:
+      MyTemplateMatrix_create_MixedPtrs_25(nargout, out, nargin-1, in+1);
+      break;
+    case 26:
+      MyTemplateMatrix_create_ptrs_26(nargout, out, nargin-1, in+1);
+      break;
+    case 27:
+      MyTemplateMatrix_return_T_27(nargout, out, nargin-1, in+1);
+      break;
+    case 28:
+      MyTemplateMatrix_return_Tptr_28(nargout, out, nargin-1, in+1);
+      break;
+    case 29:
+      MyTemplateMatrix_return_ptrs_29(nargout, out, nargin-1, in+1);
+      break;
+    case 30:
+      MyTemplateMatrix_templatedMethod_30(nargout, out, nargin-1, in+1);
+      break;
+    case 31:
+      MyTemplateMatrix_templatedMethod_31(nargout, out, nargin-1, in+1);
+      break;
+    case 32:
+      MyTemplateMatrix_templatedMethod_32(nargout, out, nargin-1, in+1);
+      break;
+    case 33:
+      MyTemplateMatrix_templatedMethod_33(nargout, out, nargin-1, in+1);
+      break;
+    case 34:
+      MyTemplateMatrix_Level_34(nargout, out, nargin-1, in+1);
+      break;
+    }
+  } catch(const std::exception& e) {
+    mexErrMsgTxt(("Exception from gtsam:\n" + std::string(e.what()) + "\n").c_str());
+  }
+
+  std::cout.rdbuf(outbuf);
+}
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/load2D.m
@@ -0,0 +1,10 @@
+function varargout = load2D(varargin)
+      if length(varargin) == 5 && isa(varargin{1},'char') && isa(varargin{2},'Test') && isa(varargin{3},'numeric') && isa(varargin{4},'logical') && isa(varargin{5},'logical')
+        [ varargout{1} varargout{2} ] = functions_wrapper(0, varargin{:});
+      elseif length(varargin) == 5 && isa(varargin{1},'char') && isa(varargin{2},'gtsam.noiseModel.Diagonal') && isa(varargin{3},'numeric') && isa(varargin{4},'logical') && isa(varargin{5},'logical')
+        [ varargout{1} varargout{2} ] = functions_wrapper(1, varargin{:});
+      elseif length(varargin) == 2 && isa(varargin{1},'char') && isa(varargin{2},'gtsam.noiseModel.Diagonal')
+        [ varargout{1} varargout{2} ] = functions_wrapper(2, varargin{:});
+      else
+        error('Arguments do not match any overload of function load2D');
+      end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/namespaces_wrapper.cpp
@@ -0,0 +1,581 @@
+#include <gtwrap/matlab.h>
+#include <map>
+
+#include <boost/archive/text_iarchive.hpp>
+#include <boost/archive/text_oarchive.hpp>
+#include <boost/serialization/export.hpp>
+
+#include <folder/path/to/Test.h>
+#include <gtsam/geometry/Point2.h>
+#include <gtsam/geometry/Point3.h>
+#include <path/to/ns1.h>
+#include <path/to/ns1/ClassB.h>
+#include <path/to/ns2.h>
+#include <path/to/ns2/ClassA.h>
+#include <path/to/ns3.h>
+
+typedef Fun<double> FunDouble;
+typedef PrimitiveRef<double> PrimitiveRefDouble;
+typedef MyVector<3> MyVector3;
+typedef MyVector<12> MyVector12;
+typedef MultipleTemplates<int, double> MultipleTemplatesIntDouble;
+typedef MultipleTemplates<int, float> MultipleTemplatesIntFloat;
+typedef MyFactor<gtsam::Pose2, gtsam::Matrix> MyFactorPosePoint2;
+typedef MyTemplate<gtsam::Point2> MyTemplatePoint2;
+typedef MyTemplate<gtsam::Matrix> MyTemplateMatrix;
+
+BOOST_CLASS_EXPORT_GUID(gtsam::Point2, "gtsamPoint2");
+BOOST_CLASS_EXPORT_GUID(gtsam::Point3, "gtsamPoint3");
+
+typedef std::set<boost::shared_ptr<FunRange>*> Collector_FunRange;
+static Collector_FunRange collector_FunRange;
+typedef std::set<boost::shared_ptr<FunDouble>*> Collector_FunDouble;
+static Collector_FunDouble collector_FunDouble;
+typedef std::set<boost::shared_ptr<Test>*> Collector_Test;
+static Collector_Test collector_Test;
+typedef std::set<boost::shared_ptr<PrimitiveRefDouble>*> Collector_PrimitiveRefDouble;
+static Collector_PrimitiveRefDouble collector_PrimitiveRefDouble;
+typedef std::set<boost::shared_ptr<MyVector3>*> Collector_MyVector3;
+static Collector_MyVector3 collector_MyVector3;
+typedef std::set<boost::shared_ptr<MyVector12>*> Collector_MyVector12;
+static Collector_MyVector12 collector_MyVector12;
+typedef std::set<boost::shared_ptr<MultipleTemplatesIntDouble>*> Collector_MultipleTemplatesIntDouble;
+static Collector_MultipleTemplatesIntDouble collector_MultipleTemplatesIntDouble;
+typedef std::set<boost::shared_ptr<MultipleTemplatesIntFloat>*> Collector_MultipleTemplatesIntFloat;
+static Collector_MultipleTemplatesIntFloat collector_MultipleTemplatesIntFloat;
+typedef std::set<boost::shared_ptr<MyFactorPosePoint2>*> Collector_MyFactorPosePoint2;
+static Collector_MyFactorPosePoint2 collector_MyFactorPosePoint2;
+typedef std::set<boost::shared_ptr<gtsam::Point2>*> Collector_gtsamPoint2;
+static Collector_gtsamPoint2 collector_gtsamPoint2;
+typedef std::set<boost::shared_ptr<gtsam::Point3>*> Collector_gtsamPoint3;
+static Collector_gtsamPoint3 collector_gtsamPoint3;
+typedef std::set<boost::shared_ptr<MyBase>*> Collector_MyBase;
+static Collector_MyBase collector_MyBase;
+typedef std::set<boost::shared_ptr<MyTemplatePoint2>*> Collector_MyTemplatePoint2;
+static Collector_MyTemplatePoint2 collector_MyTemplatePoint2;
+typedef std::set<boost::shared_ptr<MyTemplateMatrix>*> Collector_MyTemplateMatrix;
+static Collector_MyTemplateMatrix collector_MyTemplateMatrix;
+typedef std::set<boost::shared_ptr<ns1::ClassA>*> Collector_ns1ClassA;
+static Collector_ns1ClassA collector_ns1ClassA;
+typedef std::set<boost::shared_ptr<ns1::ClassB>*> Collector_ns1ClassB;
+static Collector_ns1ClassB collector_ns1ClassB;
+typedef std::set<boost::shared_ptr<ns2::ClassA>*> Collector_ns2ClassA;
+static Collector_ns2ClassA collector_ns2ClassA;
+typedef std::set<boost::shared_ptr<ns2::ns3::ClassB>*> Collector_ns2ns3ClassB;
+static Collector_ns2ns3ClassB collector_ns2ns3ClassB;
+typedef std::set<boost::shared_ptr<ns2::ClassC>*> Collector_ns2ClassC;
+static Collector_ns2ClassC collector_ns2ClassC;
+typedef std::set<boost::shared_ptr<ClassD>*> Collector_ClassD;
+static Collector_ClassD collector_ClassD;
+
+void _deleteAllObjects()
+{
+  mstream mout;
+  std::streambuf *outbuf = std::cout.rdbuf(&mout);
+
+  bool anyDeleted = false;
+  { for(Collector_FunRange::iterator iter = collector_FunRange.begin();
+      iter != collector_FunRange.end(); ) {
+    delete *iter;
+    collector_FunRange.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_FunDouble::iterator iter = collector_FunDouble.begin();
+      iter != collector_FunDouble.end(); ) {
+    delete *iter;
+    collector_FunDouble.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_Test::iterator iter = collector_Test.begin();
+      iter != collector_Test.end(); ) {
+    delete *iter;
+    collector_Test.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_PrimitiveRefDouble::iterator iter = collector_PrimitiveRefDouble.begin();
+      iter != collector_PrimitiveRefDouble.end(); ) {
+    delete *iter;
+    collector_PrimitiveRefDouble.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyVector3::iterator iter = collector_MyVector3.begin();
+      iter != collector_MyVector3.end(); ) {
+    delete *iter;
+    collector_MyVector3.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyVector12::iterator iter = collector_MyVector12.begin();
+      iter != collector_MyVector12.end(); ) {
+    delete *iter;
+    collector_MyVector12.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MultipleTemplatesIntDouble::iterator iter = collector_MultipleTemplatesIntDouble.begin();
+      iter != collector_MultipleTemplatesIntDouble.end(); ) {
+    delete *iter;
+    collector_MultipleTemplatesIntDouble.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MultipleTemplatesIntFloat::iterator iter = collector_MultipleTemplatesIntFloat.begin();
+      iter != collector_MultipleTemplatesIntFloat.end(); ) {
+    delete *iter;
+    collector_MultipleTemplatesIntFloat.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyFactorPosePoint2::iterator iter = collector_MyFactorPosePoint2.begin();
+      iter != collector_MyFactorPosePoint2.end(); ) {
+    delete *iter;
+    collector_MyFactorPosePoint2.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_gtsamPoint2::iterator iter = collector_gtsamPoint2.begin();
+      iter != collector_gtsamPoint2.end(); ) {
+    delete *iter;
+    collector_gtsamPoint2.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_gtsamPoint3::iterator iter = collector_gtsamPoint3.begin();
+      iter != collector_gtsamPoint3.end(); ) {
+    delete *iter;
+    collector_gtsamPoint3.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyBase::iterator iter = collector_MyBase.begin();
+      iter != collector_MyBase.end(); ) {
+    delete *iter;
+    collector_MyBase.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyTemplatePoint2::iterator iter = collector_MyTemplatePoint2.begin();
+      iter != collector_MyTemplatePoint2.end(); ) {
+    delete *iter;
+    collector_MyTemplatePoint2.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyTemplateMatrix::iterator iter = collector_MyTemplateMatrix.begin();
+      iter != collector_MyTemplateMatrix.end(); ) {
+    delete *iter;
+    collector_MyTemplateMatrix.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_ns1ClassA::iterator iter = collector_ns1ClassA.begin();
+      iter != collector_ns1ClassA.end(); ) {
+    delete *iter;
+    collector_ns1ClassA.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_ns1ClassB::iterator iter = collector_ns1ClassB.begin();
+      iter != collector_ns1ClassB.end(); ) {
+    delete *iter;
+    collector_ns1ClassB.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_ns2ClassA::iterator iter = collector_ns2ClassA.begin();
+      iter != collector_ns2ClassA.end(); ) {
+    delete *iter;
+    collector_ns2ClassA.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_ns2ns3ClassB::iterator iter = collector_ns2ns3ClassB.begin();
+      iter != collector_ns2ns3ClassB.end(); ) {
+    delete *iter;
+    collector_ns2ns3ClassB.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_ns2ClassC::iterator iter = collector_ns2ClassC.begin();
+      iter != collector_ns2ClassC.end(); ) {
+    delete *iter;
+    collector_ns2ClassC.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_ClassD::iterator iter = collector_ClassD.begin();
+      iter != collector_ClassD.end(); ) {
+    delete *iter;
+    collector_ClassD.erase(iter++);
+    anyDeleted = true;
+  } }
+  if(anyDeleted)
+    cout <<
+      "WARNING:  Wrap modules with variables in the workspace have been reloaded due to\n"
+      "calling destructors, call 'clear all' again if you plan to now recompile a wrap\n"
+      "module, so that your recompiled module is used instead of the old one." << endl;
+  std::cout.rdbuf(outbuf);
+}
+
+void _namespaces_RTTIRegister() {
+  const mxArray *alreadyCreated = mexGetVariablePtr("global", "gtsam_namespaces_rttiRegistry_created");
+  if(!alreadyCreated) {
+    std::map<std::string, std::string> types;
+    types.insert(std::make_pair(typeid(MyBase).name(), "MyBase"));
+    types.insert(std::make_pair(typeid(MyTemplatePoint2).name(), "MyTemplatePoint2"));
+    types.insert(std::make_pair(typeid(MyTemplateMatrix).name(), "MyTemplateMatrix"));
+
+    mxArray *registry = mexGetVariable("global", "gtsamwrap_rttiRegistry");
+    if(!registry)
+      registry = mxCreateStructMatrix(1, 1, 0, NULL);
+    typedef std::pair<std::string, std::string> StringPair;
+    for(const StringPair& rtti_matlab: types) {
+      int fieldId = mxAddField(registry, rtti_matlab.first.c_str());
+      if(fieldId < 0)
+        mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+      mxArray *matlabName = mxCreateString(rtti_matlab.second.c_str());
+      mxSetFieldByNumber(registry, 0, fieldId, matlabName);
+    }
+    if(mexPutVariable("global", "gtsamwrap_rttiRegistry", registry) != 0)
+      mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+    mxDestroyArray(registry);
+    
+    mxArray *newAlreadyCreated = mxCreateNumericMatrix(0, 0, mxINT8_CLASS, mxREAL);
+    if(mexPutVariable("global", "gtsam_geometry_rttiRegistry_created", newAlreadyCreated) != 0)
+      mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+    mxDestroyArray(newAlreadyCreated);
+  }
+}
+
+void ns1ClassA_collectorInsertAndMakeBase_0(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<ns1::ClassA> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_ns1ClassA.insert(self);
+}
+
+void ns1ClassA_constructor_1(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<ns1::ClassA> Shared;
+
+  Shared *self = new Shared(new ns1::ClassA());
+  collector_ns1ClassA.insert(self);
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<Shared**> (mxGetData(out[0])) = self;
+}
+
+void ns1ClassA_deconstructor_2(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<ns1::ClassA> Shared;
+  checkArguments("delete_ns1ClassA",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_ns1ClassA::iterator item;
+  item = collector_ns1ClassA.find(self);
+  if(item != collector_ns1ClassA.end()) {
+    delete self;
+    collector_ns1ClassA.erase(item);
+  }
+}
+
+void ns1ClassB_collectorInsertAndMakeBase_3(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<ns1::ClassB> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_ns1ClassB.insert(self);
+}
+
+void ns1ClassB_constructor_4(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<ns1::ClassB> Shared;
+
+  Shared *self = new Shared(new ns1::ClassB());
+  collector_ns1ClassB.insert(self);
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<Shared**> (mxGetData(out[0])) = self;
+}
+
+void ns1ClassB_deconstructor_5(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<ns1::ClassB> Shared;
+  checkArguments("delete_ns1ClassB",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_ns1ClassB::iterator item;
+  item = collector_ns1ClassB.find(self);
+  if(item != collector_ns1ClassB.end()) {
+    delete self;
+    collector_ns1ClassB.erase(item);
+  }
+}
+
+void aGlobalFunction_6(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("aGlobalFunction",nargout,nargin,0);
+  out[0] = wrap< Vector >(ns1::aGlobalFunction());
+}
+void ns2ClassA_collectorInsertAndMakeBase_7(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<ns2::ClassA> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_ns2ClassA.insert(self);
+}
+
+void ns2ClassA_constructor_8(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<ns2::ClassA> Shared;
+
+  Shared *self = new Shared(new ns2::ClassA());
+  collector_ns2ClassA.insert(self);
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<Shared**> (mxGetData(out[0])) = self;
+}
+
+void ns2ClassA_deconstructor_9(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<ns2::ClassA> Shared;
+  checkArguments("delete_ns2ClassA",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_ns2ClassA::iterator item;
+  item = collector_ns2ClassA.find(self);
+  if(item != collector_ns2ClassA.end()) {
+    delete self;
+    collector_ns2ClassA.erase(item);
+  }
+}
+
+void ns2ClassA_memberFunction_10(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("memberFunction",nargout,nargin-1,0);
+  auto obj = unwrap_shared_ptr<ns2::ClassA>(in[0], "ptr_ns2ClassA");
+  out[0] = wrap< double >(obj->memberFunction());
+}
+
+void ns2ClassA_nsArg_11(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("nsArg",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<ns2::ClassA>(in[0], "ptr_ns2ClassA");
+  ns1::ClassB& arg = *unwrap_shared_ptr< ns1::ClassB >(in[1], "ptr_ns1ClassB");
+  out[0] = wrap< int >(obj->nsArg(arg));
+}
+
+void ns2ClassA_nsReturn_12(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("nsReturn",nargout,nargin-1,1);
+  auto obj = unwrap_shared_ptr<ns2::ClassA>(in[0], "ptr_ns2ClassA");
+  double q = unwrap< double >(in[1]);
+  out[0] = wrap_shared_ptr(boost::make_shared<ns2::ns3::ClassB>(obj->nsReturn(q)),"ns2.ns3.ClassB", false);
+}
+
+void ns2ClassA_afunction_13(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("ns2ClassA.afunction",nargout,nargin,0);
+  out[0] = wrap< double >(ns2::ClassA::afunction());
+}
+
+void ns2ns3ClassB_collectorInsertAndMakeBase_14(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<ns2::ns3::ClassB> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_ns2ns3ClassB.insert(self);
+}
+
+void ns2ns3ClassB_constructor_15(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<ns2::ns3::ClassB> Shared;
+
+  Shared *self = new Shared(new ns2::ns3::ClassB());
+  collector_ns2ns3ClassB.insert(self);
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<Shared**> (mxGetData(out[0])) = self;
+}
+
+void ns2ns3ClassB_deconstructor_16(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<ns2::ns3::ClassB> Shared;
+  checkArguments("delete_ns2ns3ClassB",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_ns2ns3ClassB::iterator item;
+  item = collector_ns2ns3ClassB.find(self);
+  if(item != collector_ns2ns3ClassB.end()) {
+    delete self;
+    collector_ns2ns3ClassB.erase(item);
+  }
+}
+
+void ns2ClassC_collectorInsertAndMakeBase_17(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<ns2::ClassC> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_ns2ClassC.insert(self);
+}
+
+void ns2ClassC_constructor_18(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<ns2::ClassC> Shared;
+
+  Shared *self = new Shared(new ns2::ClassC());
+  collector_ns2ClassC.insert(self);
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<Shared**> (mxGetData(out[0])) = self;
+}
+
+void ns2ClassC_deconstructor_19(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<ns2::ClassC> Shared;
+  checkArguments("delete_ns2ClassC",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_ns2ClassC::iterator item;
+  item = collector_ns2ClassC.find(self);
+  if(item != collector_ns2ClassC.end()) {
+    delete self;
+    collector_ns2ClassC.erase(item);
+  }
+}
+
+void aGlobalFunction_20(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("aGlobalFunction",nargout,nargin,0);
+  out[0] = wrap< Vector >(ns2::aGlobalFunction());
+}
+void overloadedGlobalFunction_21(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("overloadedGlobalFunction",nargout,nargin,1);
+  ns1::ClassA& a = *unwrap_shared_ptr< ns1::ClassA >(in[0], "ptr_ns1ClassA");
+  out[0] = wrap_shared_ptr(boost::make_shared<ns1::ClassA>(ns2::overloadedGlobalFunction(a)),"ns1.ClassA", false);
+}
+void overloadedGlobalFunction_22(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("overloadedGlobalFunction",nargout,nargin,2);
+  ns1::ClassA& a = *unwrap_shared_ptr< ns1::ClassA >(in[0], "ptr_ns1ClassA");
+  double b = unwrap< double >(in[1]);
+  out[0] = wrap_shared_ptr(boost::make_shared<ns1::ClassA>(ns2::overloadedGlobalFunction(a,b)),"ns1.ClassA", false);
+}
+void ClassD_collectorInsertAndMakeBase_23(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<ClassD> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_ClassD.insert(self);
+}
+
+void ClassD_constructor_24(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<ClassD> Shared;
+
+  Shared *self = new Shared(new ClassD());
+  collector_ClassD.insert(self);
+  out[0] = mxCreateNumericMatrix(1, 1, mxUINT32OR64_CLASS, mxREAL);
+  *reinterpret_cast<Shared**> (mxGetData(out[0])) = self;
+}
+
+void ClassD_deconstructor_25(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<ClassD> Shared;
+  checkArguments("delete_ClassD",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_ClassD::iterator item;
+  item = collector_ClassD.find(self);
+  if(item != collector_ClassD.end()) {
+    delete self;
+    collector_ClassD.erase(item);
+  }
+}
+
+
+void mexFunction(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mstream mout;
+  std::streambuf *outbuf = std::cout.rdbuf(&mout);
+
+  _namespaces_RTTIRegister();
+
+  int id = unwrap<int>(in[0]);
+
+  try {
+    switch(id) {
+    case 0:
+      ns1ClassA_collectorInsertAndMakeBase_0(nargout, out, nargin-1, in+1);
+      break;
+    case 1:
+      ns1ClassA_constructor_1(nargout, out, nargin-1, in+1);
+      break;
+    case 2:
+      ns1ClassA_deconstructor_2(nargout, out, nargin-1, in+1);
+      break;
+    case 3:
+      ns1ClassB_collectorInsertAndMakeBase_3(nargout, out, nargin-1, in+1);
+      break;
+    case 4:
+      ns1ClassB_constructor_4(nargout, out, nargin-1, in+1);
+      break;
+    case 5:
+      ns1ClassB_deconstructor_5(nargout, out, nargin-1, in+1);
+      break;
+    case 6:
+      aGlobalFunction_6(nargout, out, nargin-1, in+1);
+      break;
+    case 7:
+      ns2ClassA_collectorInsertAndMakeBase_7(nargout, out, nargin-1, in+1);
+      break;
+    case 8:
+      ns2ClassA_constructor_8(nargout, out, nargin-1, in+1);
+      break;
+    case 9:
+      ns2ClassA_deconstructor_9(nargout, out, nargin-1, in+1);
+      break;
+    case 10:
+      ns2ClassA_memberFunction_10(nargout, out, nargin-1, in+1);
+      break;
+    case 11:
+      ns2ClassA_nsArg_11(nargout, out, nargin-1, in+1);
+      break;
+    case 12:
+      ns2ClassA_nsReturn_12(nargout, out, nargin-1, in+1);
+      break;
+    case 13:
+      ns2ClassA_afunction_13(nargout, out, nargin-1, in+1);
+      break;
+    case 14:
+      ns2ns3ClassB_collectorInsertAndMakeBase_14(nargout, out, nargin-1, in+1);
+      break;
+    case 15:
+      ns2ns3ClassB_constructor_15(nargout, out, nargin-1, in+1);
+      break;
+    case 16:
+      ns2ns3ClassB_deconstructor_16(nargout, out, nargin-1, in+1);
+      break;
+    case 17:
+      ns2ClassC_collectorInsertAndMakeBase_17(nargout, out, nargin-1, in+1);
+      break;
+    case 18:
+      ns2ClassC_constructor_18(nargout, out, nargin-1, in+1);
+      break;
+    case 19:
+      ns2ClassC_deconstructor_19(nargout, out, nargin-1, in+1);
+      break;
+    case 20:
+      aGlobalFunction_20(nargout, out, nargin-1, in+1);
+      break;
+    case 21:
+      overloadedGlobalFunction_21(nargout, out, nargin-1, in+1);
+      break;
+    case 22:
+      overloadedGlobalFunction_22(nargout, out, nargin-1, in+1);
+      break;
+    case 23:
+      ClassD_collectorInsertAndMakeBase_23(nargout, out, nargin-1, in+1);
+      break;
+    case 24:
+      ClassD_constructor_24(nargout, out, nargin-1, in+1);
+      break;
+    case 25:
+      ClassD_deconstructor_25(nargout, out, nargin-1, in+1);
+      break;
+    }
+  } catch(const std::exception& e) {
+    mexErrMsgTxt(("Exception from gtsam:\n" + std::string(e.what()) + "\n").c_str());
+  }
+
+  std::cout.rdbuf(outbuf);
+}
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/overloadedGlobalFunction.m
@@ -0,0 +1,8 @@
+function varargout = overloadedGlobalFunction(varargin)
+      if length(varargin) == 1 && isa(varargin{1},'numeric')
+        varargout{1} = functions_wrapper(4, varargin{:});
+      elseif length(varargin) == 2 && isa(varargin{1},'numeric') && isa(varargin{2},'double')
+        varargout{1} = functions_wrapper(5, varargin{:});
+      else
+        error('Arguments do not match any overload of function overloadedGlobalFunction');
+      end
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/matlab/special_cases_wrapper.cpp
@@ -0,0 +1,413 @@
+#include <gtwrap/matlab.h>
+#include <map>
+
+#include <boost/archive/text_iarchive.hpp>
+#include <boost/archive/text_oarchive.hpp>
+#include <boost/serialization/export.hpp>
+
+#include <folder/path/to/Test.h>
+#include <gtsam/geometry/Cal3Bundler.h>
+#include <gtsam/geometry/Point2.h>
+#include <gtsam/geometry/Point3.h>
+#include <path/to/ns1.h>
+#include <path/to/ns1/ClassB.h>
+#include <path/to/ns2.h>
+#include <path/to/ns2/ClassA.h>
+#include <path/to/ns3.h>
+
+typedef Fun<double> FunDouble;
+typedef PrimitiveRef<double> PrimitiveRefDouble;
+typedef MyVector<3> MyVector3;
+typedef MyVector<12> MyVector12;
+typedef MultipleTemplates<int, double> MultipleTemplatesIntDouble;
+typedef MultipleTemplates<int, float> MultipleTemplatesIntFloat;
+typedef MyFactor<gtsam::Pose2, gtsam::Matrix> MyFactorPosePoint2;
+typedef MyTemplate<gtsam::Point2> MyTemplatePoint2;
+typedef MyTemplate<gtsam::Matrix> MyTemplateMatrix;
+typedef gtsam::PinholeCamera<gtsam::Cal3Bundler> PinholeCameraCal3Bundler;
+typedef gtsam::GeneralSFMFactor<gtsam::PinholeCamera<gtsam::Cal3Bundler>, gtsam::Point3> GeneralSFMFactorCal3Bundler;
+
+BOOST_CLASS_EXPORT_GUID(gtsam::Point2, "gtsamPoint2");
+BOOST_CLASS_EXPORT_GUID(gtsam::Point3, "gtsamPoint3");
+
+typedef std::set<boost::shared_ptr<FunRange>*> Collector_FunRange;
+static Collector_FunRange collector_FunRange;
+typedef std::set<boost::shared_ptr<FunDouble>*> Collector_FunDouble;
+static Collector_FunDouble collector_FunDouble;
+typedef std::set<boost::shared_ptr<Test>*> Collector_Test;
+static Collector_Test collector_Test;
+typedef std::set<boost::shared_ptr<PrimitiveRefDouble>*> Collector_PrimitiveRefDouble;
+static Collector_PrimitiveRefDouble collector_PrimitiveRefDouble;
+typedef std::set<boost::shared_ptr<MyVector3>*> Collector_MyVector3;
+static Collector_MyVector3 collector_MyVector3;
+typedef std::set<boost::shared_ptr<MyVector12>*> Collector_MyVector12;
+static Collector_MyVector12 collector_MyVector12;
+typedef std::set<boost::shared_ptr<MultipleTemplatesIntDouble>*> Collector_MultipleTemplatesIntDouble;
+static Collector_MultipleTemplatesIntDouble collector_MultipleTemplatesIntDouble;
+typedef std::set<boost::shared_ptr<MultipleTemplatesIntFloat>*> Collector_MultipleTemplatesIntFloat;
+static Collector_MultipleTemplatesIntFloat collector_MultipleTemplatesIntFloat;
+typedef std::set<boost::shared_ptr<MyFactorPosePoint2>*> Collector_MyFactorPosePoint2;
+static Collector_MyFactorPosePoint2 collector_MyFactorPosePoint2;
+typedef std::set<boost::shared_ptr<gtsam::Point2>*> Collector_gtsamPoint2;
+static Collector_gtsamPoint2 collector_gtsamPoint2;
+typedef std::set<boost::shared_ptr<gtsam::Point3>*> Collector_gtsamPoint3;
+static Collector_gtsamPoint3 collector_gtsamPoint3;
+typedef std::set<boost::shared_ptr<MyBase>*> Collector_MyBase;
+static Collector_MyBase collector_MyBase;
+typedef std::set<boost::shared_ptr<MyTemplatePoint2>*> Collector_MyTemplatePoint2;
+static Collector_MyTemplatePoint2 collector_MyTemplatePoint2;
+typedef std::set<boost::shared_ptr<MyTemplateMatrix>*> Collector_MyTemplateMatrix;
+static Collector_MyTemplateMatrix collector_MyTemplateMatrix;
+typedef std::set<boost::shared_ptr<ns1::ClassA>*> Collector_ns1ClassA;
+static Collector_ns1ClassA collector_ns1ClassA;
+typedef std::set<boost::shared_ptr<ns1::ClassB>*> Collector_ns1ClassB;
+static Collector_ns1ClassB collector_ns1ClassB;
+typedef std::set<boost::shared_ptr<ns2::ClassA>*> Collector_ns2ClassA;
+static Collector_ns2ClassA collector_ns2ClassA;
+typedef std::set<boost::shared_ptr<ns2::ns3::ClassB>*> Collector_ns2ns3ClassB;
+static Collector_ns2ns3ClassB collector_ns2ns3ClassB;
+typedef std::set<boost::shared_ptr<ns2::ClassC>*> Collector_ns2ClassC;
+static Collector_ns2ClassC collector_ns2ClassC;
+typedef std::set<boost::shared_ptr<ClassD>*> Collector_ClassD;
+static Collector_ClassD collector_ClassD;
+typedef std::set<boost::shared_ptr<gtsam::NonlinearFactorGraph>*> Collector_gtsamNonlinearFactorGraph;
+static Collector_gtsamNonlinearFactorGraph collector_gtsamNonlinearFactorGraph;
+typedef std::set<boost::shared_ptr<gtsam::SfmTrack>*> Collector_gtsamSfmTrack;
+static Collector_gtsamSfmTrack collector_gtsamSfmTrack;
+typedef std::set<boost::shared_ptr<PinholeCameraCal3Bundler>*> Collector_gtsamPinholeCameraCal3Bundler;
+static Collector_gtsamPinholeCameraCal3Bundler collector_gtsamPinholeCameraCal3Bundler;
+typedef std::set<boost::shared_ptr<GeneralSFMFactorCal3Bundler>*> Collector_gtsamGeneralSFMFactorCal3Bundler;
+static Collector_gtsamGeneralSFMFactorCal3Bundler collector_gtsamGeneralSFMFactorCal3Bundler;
+
+void _deleteAllObjects()
+{
+  mstream mout;
+  std::streambuf *outbuf = std::cout.rdbuf(&mout);
+
+  bool anyDeleted = false;
+  { for(Collector_FunRange::iterator iter = collector_FunRange.begin();
+      iter != collector_FunRange.end(); ) {
+    delete *iter;
+    collector_FunRange.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_FunDouble::iterator iter = collector_FunDouble.begin();
+      iter != collector_FunDouble.end(); ) {
+    delete *iter;
+    collector_FunDouble.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_Test::iterator iter = collector_Test.begin();
+      iter != collector_Test.end(); ) {
+    delete *iter;
+    collector_Test.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_PrimitiveRefDouble::iterator iter = collector_PrimitiveRefDouble.begin();
+      iter != collector_PrimitiveRefDouble.end(); ) {
+    delete *iter;
+    collector_PrimitiveRefDouble.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyVector3::iterator iter = collector_MyVector3.begin();
+      iter != collector_MyVector3.end(); ) {
+    delete *iter;
+    collector_MyVector3.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyVector12::iterator iter = collector_MyVector12.begin();
+      iter != collector_MyVector12.end(); ) {
+    delete *iter;
+    collector_MyVector12.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MultipleTemplatesIntDouble::iterator iter = collector_MultipleTemplatesIntDouble.begin();
+      iter != collector_MultipleTemplatesIntDouble.end(); ) {
+    delete *iter;
+    collector_MultipleTemplatesIntDouble.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MultipleTemplatesIntFloat::iterator iter = collector_MultipleTemplatesIntFloat.begin();
+      iter != collector_MultipleTemplatesIntFloat.end(); ) {
+    delete *iter;
+    collector_MultipleTemplatesIntFloat.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyFactorPosePoint2::iterator iter = collector_MyFactorPosePoint2.begin();
+      iter != collector_MyFactorPosePoint2.end(); ) {
+    delete *iter;
+    collector_MyFactorPosePoint2.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_gtsamPoint2::iterator iter = collector_gtsamPoint2.begin();
+      iter != collector_gtsamPoint2.end(); ) {
+    delete *iter;
+    collector_gtsamPoint2.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_gtsamPoint3::iterator iter = collector_gtsamPoint3.begin();
+      iter != collector_gtsamPoint3.end(); ) {
+    delete *iter;
+    collector_gtsamPoint3.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyBase::iterator iter = collector_MyBase.begin();
+      iter != collector_MyBase.end(); ) {
+    delete *iter;
+    collector_MyBase.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyTemplatePoint2::iterator iter = collector_MyTemplatePoint2.begin();
+      iter != collector_MyTemplatePoint2.end(); ) {
+    delete *iter;
+    collector_MyTemplatePoint2.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_MyTemplateMatrix::iterator iter = collector_MyTemplateMatrix.begin();
+      iter != collector_MyTemplateMatrix.end(); ) {
+    delete *iter;
+    collector_MyTemplateMatrix.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_ns1ClassA::iterator iter = collector_ns1ClassA.begin();
+      iter != collector_ns1ClassA.end(); ) {
+    delete *iter;
+    collector_ns1ClassA.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_ns1ClassB::iterator iter = collector_ns1ClassB.begin();
+      iter != collector_ns1ClassB.end(); ) {
+    delete *iter;
+    collector_ns1ClassB.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_ns2ClassA::iterator iter = collector_ns2ClassA.begin();
+      iter != collector_ns2ClassA.end(); ) {
+    delete *iter;
+    collector_ns2ClassA.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_ns2ns3ClassB::iterator iter = collector_ns2ns3ClassB.begin();
+      iter != collector_ns2ns3ClassB.end(); ) {
+    delete *iter;
+    collector_ns2ns3ClassB.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_ns2ClassC::iterator iter = collector_ns2ClassC.begin();
+      iter != collector_ns2ClassC.end(); ) {
+    delete *iter;
+    collector_ns2ClassC.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_ClassD::iterator iter = collector_ClassD.begin();
+      iter != collector_ClassD.end(); ) {
+    delete *iter;
+    collector_ClassD.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_gtsamNonlinearFactorGraph::iterator iter = collector_gtsamNonlinearFactorGraph.begin();
+      iter != collector_gtsamNonlinearFactorGraph.end(); ) {
+    delete *iter;
+    collector_gtsamNonlinearFactorGraph.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_gtsamSfmTrack::iterator iter = collector_gtsamSfmTrack.begin();
+      iter != collector_gtsamSfmTrack.end(); ) {
+    delete *iter;
+    collector_gtsamSfmTrack.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_gtsamPinholeCameraCal3Bundler::iterator iter = collector_gtsamPinholeCameraCal3Bundler.begin();
+      iter != collector_gtsamPinholeCameraCal3Bundler.end(); ) {
+    delete *iter;
+    collector_gtsamPinholeCameraCal3Bundler.erase(iter++);
+    anyDeleted = true;
+  } }
+  { for(Collector_gtsamGeneralSFMFactorCal3Bundler::iterator iter = collector_gtsamGeneralSFMFactorCal3Bundler.begin();
+      iter != collector_gtsamGeneralSFMFactorCal3Bundler.end(); ) {
+    delete *iter;
+    collector_gtsamGeneralSFMFactorCal3Bundler.erase(iter++);
+    anyDeleted = true;
+  } }
+  if(anyDeleted)
+    cout <<
+      "WARNING:  Wrap modules with variables in the workspace have been reloaded due to\n"
+      "calling destructors, call 'clear all' again if you plan to now recompile a wrap\n"
+      "module, so that your recompiled module is used instead of the old one." << endl;
+  std::cout.rdbuf(outbuf);
+}
+
+void _special_cases_RTTIRegister() {
+  const mxArray *alreadyCreated = mexGetVariablePtr("global", "gtsam_special_cases_rttiRegistry_created");
+  if(!alreadyCreated) {
+    std::map<std::string, std::string> types;
+    types.insert(std::make_pair(typeid(MyBase).name(), "MyBase"));
+    types.insert(std::make_pair(typeid(MyTemplatePoint2).name(), "MyTemplatePoint2"));
+    types.insert(std::make_pair(typeid(MyTemplateMatrix).name(), "MyTemplateMatrix"));
+
+    mxArray *registry = mexGetVariable("global", "gtsamwrap_rttiRegistry");
+    if(!registry)
+      registry = mxCreateStructMatrix(1, 1, 0, NULL);
+    typedef std::pair<std::string, std::string> StringPair;
+    for(const StringPair& rtti_matlab: types) {
+      int fieldId = mxAddField(registry, rtti_matlab.first.c_str());
+      if(fieldId < 0)
+        mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+      mxArray *matlabName = mxCreateString(rtti_matlab.second.c_str());
+      mxSetFieldByNumber(registry, 0, fieldId, matlabName);
+    }
+    if(mexPutVariable("global", "gtsamwrap_rttiRegistry", registry) != 0)
+      mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+    mxDestroyArray(registry);
+    
+    mxArray *newAlreadyCreated = mxCreateNumericMatrix(0, 0, mxINT8_CLASS, mxREAL);
+    if(mexPutVariable("global", "gtsam_geometry_rttiRegistry_created", newAlreadyCreated) != 0)
+      mexErrMsgTxt("gtsam wrap:  Error indexing RTTI types, inheritance will not work correctly");
+    mxDestroyArray(newAlreadyCreated);
+  }
+}
+
+void gtsamNonlinearFactorGraph_collectorInsertAndMakeBase_0(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<gtsam::NonlinearFactorGraph> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_gtsamNonlinearFactorGraph.insert(self);
+}
+
+void gtsamNonlinearFactorGraph_deconstructor_1(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<gtsam::NonlinearFactorGraph> Shared;
+  checkArguments("delete_gtsamNonlinearFactorGraph",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_gtsamNonlinearFactorGraph::iterator item;
+  item = collector_gtsamNonlinearFactorGraph.find(self);
+  if(item != collector_gtsamNonlinearFactorGraph.end()) {
+    delete self;
+    collector_gtsamNonlinearFactorGraph.erase(item);
+  }
+}
+
+void gtsamNonlinearFactorGraph_addPrior_2(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  checkArguments("addPriorPinholeCameraCal3Bundler",nargout,nargin-1,3);
+  auto obj = unwrap_shared_ptr<gtsam::NonlinearFactorGraph>(in[0], "ptr_gtsamNonlinearFactorGraph");
+  size_t key = unwrap< size_t >(in[1]);
+  gtsam::PinholeCamera<gtsam::Cal3Bundler>& prior = *unwrap_shared_ptr< gtsam::PinholeCamera<gtsam::Cal3Bundler> >(in[2], "ptr_gtsamPinholeCameraCal3Bundler");
+  boost::shared_ptr<gtsam::noiseModel::Base> noiseModel = unwrap_shared_ptr< gtsam::noiseModel::Base >(in[3], "ptr_gtsamnoiseModelBase");
+  obj->addPrior<gtsam::PinholeCamera<gtsam::Cal3Bundler>>(key,prior,noiseModel);
+}
+
+void gtsamSfmTrack_collectorInsertAndMakeBase_3(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<gtsam::SfmTrack> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_gtsamSfmTrack.insert(self);
+}
+
+void gtsamSfmTrack_deconstructor_4(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<gtsam::SfmTrack> Shared;
+  checkArguments("delete_gtsamSfmTrack",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_gtsamSfmTrack::iterator item;
+  item = collector_gtsamSfmTrack.find(self);
+  if(item != collector_gtsamSfmTrack.end()) {
+    delete self;
+    collector_gtsamSfmTrack.erase(item);
+  }
+}
+
+void gtsamPinholeCameraCal3Bundler_collectorInsertAndMakeBase_5(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<gtsam::PinholeCamera<gtsam::Cal3Bundler>> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_gtsamPinholeCameraCal3Bundler.insert(self);
+}
+
+void gtsamPinholeCameraCal3Bundler_deconstructor_6(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<gtsam::PinholeCamera<gtsam::Cal3Bundler>> Shared;
+  checkArguments("delete_gtsamPinholeCameraCal3Bundler",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_gtsamPinholeCameraCal3Bundler::iterator item;
+  item = collector_gtsamPinholeCameraCal3Bundler.find(self);
+  if(item != collector_gtsamPinholeCameraCal3Bundler.end()) {
+    delete self;
+    collector_gtsamPinholeCameraCal3Bundler.erase(item);
+  }
+}
+
+void gtsamGeneralSFMFactorCal3Bundler_collectorInsertAndMakeBase_7(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mexAtExit(&_deleteAllObjects);
+  typedef boost::shared_ptr<gtsam::GeneralSFMFactor<gtsam::PinholeCamera<gtsam::Cal3Bundler>, gtsam::Point3>> Shared;
+
+  Shared *self = *reinterpret_cast<Shared**> (mxGetData(in[0]));
+  collector_gtsamGeneralSFMFactorCal3Bundler.insert(self);
+}
+
+void gtsamGeneralSFMFactorCal3Bundler_deconstructor_8(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  typedef boost::shared_ptr<gtsam::GeneralSFMFactor<gtsam::PinholeCamera<gtsam::Cal3Bundler>, gtsam::Point3>> Shared;
+  checkArguments("delete_gtsamGeneralSFMFactorCal3Bundler",nargout,nargin,1);
+  Shared *self = *reinterpret_cast<Shared**>(mxGetData(in[0]));
+  Collector_gtsamGeneralSFMFactorCal3Bundler::iterator item;
+  item = collector_gtsamGeneralSFMFactorCal3Bundler.find(self);
+  if(item != collector_gtsamGeneralSFMFactorCal3Bundler.end()) {
+    delete self;
+    collector_gtsamGeneralSFMFactorCal3Bundler.erase(item);
+  }
+}
+
+
+void mexFunction(int nargout, mxArray *out[], int nargin, const mxArray *in[])
+{
+  mstream mout;
+  std::streambuf *outbuf = std::cout.rdbuf(&mout);
+
+  _special_cases_RTTIRegister();
+
+  int id = unwrap<int>(in[0]);
+
+  try {
+    switch(id) {
+    case 0:
+      gtsamNonlinearFactorGraph_collectorInsertAndMakeBase_0(nargout, out, nargin-1, in+1);
+      break;
+    case 1:
+      gtsamNonlinearFactorGraph_deconstructor_1(nargout, out, nargin-1, in+1);
+      break;
+    case 2:
+      gtsamNonlinearFactorGraph_addPrior_2(nargout, out, nargin-1, in+1);
+      break;
+    case 3:
+      gtsamSfmTrack_collectorInsertAndMakeBase_3(nargout, out, nargin-1, in+1);
+      break;
+    case 4:
+      gtsamSfmTrack_deconstructor_4(nargout, out, nargin-1, in+1);
+      break;
+    case 5:
+      gtsamPinholeCameraCal3Bundler_collectorInsertAndMakeBase_5(nargout, out, nargin-1, in+1);
+      break;
+    case 6:
+      gtsamPinholeCameraCal3Bundler_deconstructor_6(nargout, out, nargin-1, in+1);
+      break;
+    case 7:
+      gtsamGeneralSFMFactorCal3Bundler_collectorInsertAndMakeBase_7(nargout, out, nargin-1, in+1);
+      break;
+    case 8:
+      gtsamGeneralSFMFactorCal3Bundler_deconstructor_8(nargout, out, nargin-1, in+1);
+      break;
+    }
+  } catch(const std::exception& e) {
+    mexErrMsgTxt(("Exception from gtsam:\n" + std::string(e.what()) + "\n").c_str());
+  }
+
+  std::cout.rdbuf(outbuf);
+}
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/python/class_pybind.cpp
@@ -0,0 +1,92 @@
+
+
+#include <pybind11/eigen.h>
+#include <pybind11/stl_bind.h>
+#include <pybind11/pybind11.h>
+#include <pybind11/operators.h>
+#include "gtsam/nonlinear/utilities.h"  // for RedirectCout.
+
+#include "folder/path/to/Test.h"
+
+#include "wrap/serialization.h"
+#include <boost/serialization/export.hpp>
+
+
+
+
+
+using namespace std;
+
+namespace py = pybind11;
+
+PYBIND11_MODULE(class_py, m_) {
+    m_.doc() = "pybind11 wrapper of class_py";
+
+
+    py::class_<FunRange, std::shared_ptr<FunRange>>(m_, "FunRange")
+        .def(py::init<>())
+        .def("range",[](FunRange* self, double d){return self->range(d);}, py::arg("d"))
+        .def_static("create",[](){return FunRange::create();});
+
+    py::class_<Fun<double>, std::shared_ptr<Fun<double>>>(m_, "FunDouble")
+        .def("templatedMethodString",[](Fun<double>* self, double d, string t){return self->templatedMethod<string>(d, t);}, py::arg("d"), py::arg("t"))
+        .def("multiTemplatedMethodStringSize_t",[](Fun<double>* self, double d, string t, size_t u){return self->multiTemplatedMethod<string,size_t>(d, t, u);}, py::arg("d"), py::arg("t"), py::arg("u"))
+        .def_static("staticMethodWithThis",[](){return Fun<double>::staticMethodWithThis();});
+
+    py::class_<Test, std::shared_ptr<Test>>(m_, "Test")
+        .def(py::init<>())
+        .def(py::init<double, const gtsam::Matrix&>(), py::arg("a"), py::arg("b"))
+        .def("return_pair",[](Test* self, const gtsam::Vector& v, const gtsam::Matrix& A){return self->return_pair(v, A);}, py::arg("v"), py::arg("A"))
+        .def("return_pair",[](Test* self, const gtsam::Vector& v){return self->return_pair(v);}, py::arg("v"))
+        .def("return_bool",[](Test* self, bool value){return self->return_bool(value);}, py::arg("value"))
+        .def("return_size_t",[](Test* self, size_t value){return self->return_size_t(value);}, py::arg("value"))
+        .def("return_int",[](Test* self, int value){return self->return_int(value);}, py::arg("value"))
+        .def("return_double",[](Test* self, double value){return self->return_double(value);}, py::arg("value"))
+        .def("return_string",[](Test* self, string value){return self->return_string(value);}, py::arg("value"))
+        .def("return_vector1",[](Test* self, const gtsam::Vector& value){return self->return_vector1(value);}, py::arg("value"))
+        .def("return_matrix1",[](Test* self, const gtsam::Matrix& value){return self->return_matrix1(value);}, py::arg("value"))
+        .def("return_vector2",[](Test* self, const gtsam::Vector& value){return self->return_vector2(value);}, py::arg("value"))
+        .def("return_matrix2",[](Test* self, const gtsam::Matrix& value){return self->return_matrix2(value);}, py::arg("value"))
+        .def("arg_EigenConstRef",[](Test* self, const gtsam::Matrix& value){ self->arg_EigenConstRef(value);}, py::arg("value"))
+        .def("return_field",[](Test* self, const Test& t){return self->return_field(t);}, py::arg("t"))
+        .def("return_TestPtr",[](Test* self, const std::shared_ptr<Test> value){return self->return_TestPtr(value);}, py::arg("value"))
+        .def("return_Test",[](Test* self, std::shared_ptr<Test> value){return self->return_Test(value);}, py::arg("value"))
+        .def("return_Point2Ptr",[](Test* self, bool value){return self->return_Point2Ptr(value);}, py::arg("value"))
+        .def("create_ptrs",[](Test* self){return self->create_ptrs();})
+        .def("create_MixedPtrs",[](Test* self){return self->create_MixedPtrs();})
+        .def("return_ptrs",[](Test* self, std::shared_ptr<Test> p1, std::shared_ptr<Test> p2){return self->return_ptrs(p1, p2);}, py::arg("p1"), py::arg("p2"))
+        .def("print_",[](Test* self){ self->print();})
+        .def("__repr__",
+                    [](const Test &a) {
+                        gtsam::RedirectCout redirect;
+                        a.print();
+                        return redirect.str();
+                    })
+        .def("set_container",[](Test* self, std::vector<testing::Test> container){ self->set_container(container);}, py::arg("container"))
+        .def("set_container",[](Test* self, std::vector<std::shared_ptr<testing::Test>> container){ self->set_container(container);}, py::arg("container"))
+        .def("set_container",[](Test* self, std::vector<testing::Test&> container){ self->set_container(container);}, py::arg("container"))
+        .def("get_container",[](Test* self){return self->get_container();})
+        .def_readwrite("model_ptr", &Test::model_ptr);
+
+    py::class_<PrimitiveRef<double>, std::shared_ptr<PrimitiveRef<double>>>(m_, "PrimitiveRefDouble")
+        .def(py::init<>())
+        .def_static("Brutal",[](const double& t){return PrimitiveRef<double>::Brutal(t);}, py::arg("t"));
+
+    py::class_<MyVector<3>, std::shared_ptr<MyVector<3>>>(m_, "MyVector3")
+        .def(py::init<>());
+
+    py::class_<MyVector<12>, std::shared_ptr<MyVector<12>>>(m_, "MyVector12")
+        .def(py::init<>());
+
+    py::class_<MultipleTemplates<int, double>, std::shared_ptr<MultipleTemplates<int, double>>>(m_, "MultipleTemplatesIntDouble");
+
+    py::class_<MultipleTemplates<int, float>, std::shared_ptr<MultipleTemplates<int, float>>>(m_, "MultipleTemplatesIntFloat");
+
+    py::class_<MyFactor<gtsam::Pose2, gtsam::Matrix>, std::shared_ptr<MyFactor<gtsam::Pose2, gtsam::Matrix>>>(m_, "MyFactorPosePoint2")
+        .def(py::init<size_t, size_t, double, const std::shared_ptr<gtsam::noiseModel::Base>>(), py::arg("key1"), py::arg("key2"), py::arg("measured"), py::arg("noiseModel"));
+
+
+#include "python/specializations.h"
+
+}
+
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/python/functions_pybind.cpp
@@ -0,0 +1,38 @@
+
+
+#include <pybind11/eigen.h>
+#include <pybind11/stl_bind.h>
+#include <pybind11/pybind11.h>
+#include <pybind11/operators.h>
+#include "gtsam/nonlinear/utilities.h"  // for RedirectCout.
+
+
+#include "wrap/serialization.h"
+#include <boost/serialization/export.hpp>
+
+
+
+
+
+using namespace std;
+
+namespace py = pybind11;
+
+PYBIND11_MODULE(functions_py, m_) {
+    m_.doc() = "pybind11 wrapper of functions_py";
+
+
+    m_.def("load2D",[](string filename, std::shared_ptr<Test> model, int maxID, bool addNoise, bool smart){return ::load2D(filename, model, maxID, addNoise, smart);}, py::arg("filename"), py::arg("model"), py::arg("maxID"), py::arg("addNoise"), py::arg("smart"));
+    m_.def("load2D",[](string filename, const std::shared_ptr<gtsam::noiseModel::Diagonal> model, int maxID, bool addNoise, bool smart){return ::load2D(filename, model, maxID, addNoise, smart);}, py::arg("filename"), py::arg("model"), py::arg("maxID"), py::arg("addNoise"), py::arg("smart"));
+    m_.def("load2D",[](string filename, gtsam::noiseModel::Diagonal* model){return ::load2D(filename, model);}, py::arg("filename"), py::arg("model"));
+    m_.def("aGlobalFunction",[](){return ::aGlobalFunction();});
+    m_.def("overloadedGlobalFunction",[](int a){return ::overloadedGlobalFunction(a);}, py::arg("a"));
+    m_.def("overloadedGlobalFunction",[](int a, double b){return ::overloadedGlobalFunction(a, b);}, py::arg("a"), py::arg("b"));
+    m_.def("MultiTemplatedFunctionStringSize_tDouble",[](const T& x, size_t y){return ::MultiTemplatedFunction<string,size_t,double>(x, y);}, py::arg("x"), py::arg("y"));
+    m_.def("MultiTemplatedFunctionDoubleSize_tDouble",[](const T& x, size_t y){return ::MultiTemplatedFunction<double,size_t,double>(x, y);}, py::arg("x"), py::arg("y"));
+    m_.def("TemplatedFunctionRot3",[](const gtsam::Rot3& t){ ::TemplatedFunction<Rot3>(t);}, py::arg("t"));
+
+#include "python/specializations.h"
+
+}
+
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/python/geometry_pybind.cpp
@@ -0,0 +1,68 @@
+
+
+#include <pybind11/eigen.h>
+#include <pybind11/stl_bind.h>
+#include <pybind11/pybind11.h>
+#include <pybind11/operators.h>
+#include "gtsam/nonlinear/utilities.h"  // for RedirectCout.
+
+#include "gtsam/geometry/Point2.h"
+#include "gtsam/geometry/Point3.h"
+
+#include "wrap/serialization.h"
+#include <boost/serialization/export.hpp>
+
+BOOST_CLASS_EXPORT(gtsam::Point2)
+BOOST_CLASS_EXPORT(gtsam::Point3)
+
+
+
+
+using namespace std;
+
+namespace py = pybind11;
+
+PYBIND11_MODULE(geometry_py, m_) {
+    m_.doc() = "pybind11 wrapper of geometry_py";
+
+    pybind11::module m_gtsam = m_.def_submodule("gtsam", "gtsam submodule");
+
+    py::class_<gtsam::Point2, std::shared_ptr<gtsam::Point2>>(m_gtsam, "Point2")
+        .def(py::init<>())
+        .def(py::init<double, double>(), py::arg("x"), py::arg("y"))
+        .def("x",[](gtsam::Point2* self){return self->x();})
+        .def("y",[](gtsam::Point2* self){return self->y();})
+        .def("dim",[](gtsam::Point2* self){return self->dim();})
+        .def("returnChar",[](gtsam::Point2* self){return self->returnChar();})
+        .def("argChar",[](gtsam::Point2* self, char a){ self->argChar(a);}, py::arg("a"))
+        .def("argChar",[](gtsam::Point2* self, std::shared_ptr<char> a){ self->argChar(a);}, py::arg("a"))
+        .def("argChar",[](gtsam::Point2* self, char& a){ self->argChar(a);}, py::arg("a"))
+        .def("argChar",[](gtsam::Point2* self, char* a){ self->argChar(a);}, py::arg("a"))
+        .def("argChar",[](gtsam::Point2* self, const std::shared_ptr<char> a){ self->argChar(a);}, py::arg("a"))
+        .def("argChar",[](gtsam::Point2* self, const char& a){ self->argChar(a);}, py::arg("a"))
+        .def("argChar",[](gtsam::Point2* self, const char* a){ self->argChar(a);}, py::arg("a"))
+        .def("argUChar",[](gtsam::Point2* self, unsigned char a){ self->argUChar(a);}, py::arg("a"))
+        .def("eigenArguments",[](gtsam::Point2* self, const gtsam::Vector& v, const gtsam::Matrix& m){ self->eigenArguments(v, m);}, py::arg("v"), py::arg("m"))
+        .def("vectorConfusion",[](gtsam::Point2* self){return self->vectorConfusion();})
+        .def("serialize", [](gtsam::Point2* self){ return gtsam::serialize(*self); })
+        .def("deserialize", [](gtsam::Point2* self, string serialized){ gtsam::deserialize(serialized, *self); }, py::arg("serialized"))
+        .def(py::pickle(
+            [](const gtsam::Point2 &a){ /* __getstate__: Returns a string that encodes the state of the object */ return py::make_tuple(gtsam::serialize(a)); },
+            [](py::tuple t){ /* __setstate__ */ gtsam::Point2 obj; gtsam::deserialize(t[0].cast<std::string>(), obj); return obj; }));
+
+    py::class_<gtsam::Point3, std::shared_ptr<gtsam::Point3>>(m_gtsam, "Point3")
+        .def(py::init<double, double, double>(), py::arg("x"), py::arg("y"), py::arg("z"))
+        .def("norm",[](gtsam::Point3* self){return self->norm();})
+        .def("serialize", [](gtsam::Point3* self){ return gtsam::serialize(*self); })
+        .def("deserialize", [](gtsam::Point3* self, string serialized){ gtsam::deserialize(serialized, *self); }, py::arg("serialized"))
+        .def(py::pickle(
+            [](const gtsam::Point3 &a){ /* __getstate__: Returns a string that encodes the state of the object */ return py::make_tuple(gtsam::serialize(a)); },
+            [](py::tuple t){ /* __setstate__ */ gtsam::Point3 obj; gtsam::deserialize(t[0].cast<std::string>(), obj); return obj; }))
+        .def_static("staticFunction",[](){return gtsam::Point3::staticFunction();})
+        .def_static("StaticFunctionRet",[](double z){return gtsam::Point3::StaticFunctionRet(z);}, py::arg("z"));
+
+
+#include "python/specializations.h"
+
+}
+
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/python/inheritance_pybind.cpp
@@ -0,0 +1,61 @@
+
+
+#include <pybind11/eigen.h>
+#include <pybind11/stl_bind.h>
+#include <pybind11/pybind11.h>
+#include <pybind11/operators.h>
+#include "gtsam/nonlinear/utilities.h"  // for RedirectCout.
+
+
+#include "wrap/serialization.h"
+#include <boost/serialization/export.hpp>
+
+
+
+
+
+using namespace std;
+
+namespace py = pybind11;
+
+PYBIND11_MODULE(inheritance_py, m_) {
+    m_.doc() = "pybind11 wrapper of inheritance_py";
+
+
+    py::class_<MyBase, std::shared_ptr<MyBase>>(m_, "MyBase");
+
+    py::class_<MyTemplate<gtsam::Point2>, MyBase, std::shared_ptr<MyTemplate<gtsam::Point2>>>(m_, "MyTemplatePoint2")
+        .def(py::init<>())
+        .def("templatedMethodPoint2",[](MyTemplate<gtsam::Point2>* self, const gtsam::Point2& t){return self->templatedMethod<gtsam::Point2>(t);}, py::arg("t"))
+        .def("templatedMethodPoint3",[](MyTemplate<gtsam::Point2>* self, const gtsam::Point3& t){return self->templatedMethod<gtsam::Point3>(t);}, py::arg("t"))
+        .def("templatedMethodVector",[](MyTemplate<gtsam::Point2>* self, const gtsam::Vector& t){return self->templatedMethod<gtsam::Vector>(t);}, py::arg("t"))
+        .def("templatedMethodMatrix",[](MyTemplate<gtsam::Point2>* self, const gtsam::Matrix& t){return self->templatedMethod<gtsam::Matrix>(t);}, py::arg("t"))
+        .def("accept_T",[](MyTemplate<gtsam::Point2>* self, const gtsam::Point2& value){ self->accept_T(value);}, py::arg("value"))
+        .def("accept_Tptr",[](MyTemplate<gtsam::Point2>* self, std::shared_ptr<gtsam::Point2> value){ self->accept_Tptr(value);}, py::arg("value"))
+        .def("return_Tptr",[](MyTemplate<gtsam::Point2>* self, std::shared_ptr<gtsam::Point2> value){return self->return_Tptr(value);}, py::arg("value"))
+        .def("return_T",[](MyTemplate<gtsam::Point2>* self, gtsam::Point2* value){return self->return_T(value);}, py::arg("value"))
+        .def("create_ptrs",[](MyTemplate<gtsam::Point2>* self){return self->create_ptrs();})
+        .def("create_MixedPtrs",[](MyTemplate<gtsam::Point2>* self){return self->create_MixedPtrs();})
+        .def("return_ptrs",[](MyTemplate<gtsam::Point2>* self, std::shared_ptr<gtsam::Point2> p1, std::shared_ptr<gtsam::Point2> p2){return self->return_ptrs(p1, p2);}, py::arg("p1"), py::arg("p2"))
+        .def_static("Level",[](const gtsam::Point2& K){return MyTemplate<gtsam::Point2>::Level(K);}, py::arg("K"));
+
+    py::class_<MyTemplate<gtsam::Matrix>, MyBase, std::shared_ptr<MyTemplate<gtsam::Matrix>>>(m_, "MyTemplateMatrix")
+        .def(py::init<>())
+        .def("templatedMethodPoint2",[](MyTemplate<gtsam::Matrix>* self, const gtsam::Point2& t){return self->templatedMethod<gtsam::Point2>(t);}, py::arg("t"))
+        .def("templatedMethodPoint3",[](MyTemplate<gtsam::Matrix>* self, const gtsam::Point3& t){return self->templatedMethod<gtsam::Point3>(t);}, py::arg("t"))
+        .def("templatedMethodVector",[](MyTemplate<gtsam::Matrix>* self, const gtsam::Vector& t){return self->templatedMethod<gtsam::Vector>(t);}, py::arg("t"))
+        .def("templatedMethodMatrix",[](MyTemplate<gtsam::Matrix>* self, const gtsam::Matrix& t){return self->templatedMethod<gtsam::Matrix>(t);}, py::arg("t"))
+        .def("accept_T",[](MyTemplate<gtsam::Matrix>* self, const gtsam::Matrix& value){ self->accept_T(value);}, py::arg("value"))
+        .def("accept_Tptr",[](MyTemplate<gtsam::Matrix>* self, const std::shared_ptr<gtsam::Matrix> value){ self->accept_Tptr(value);}, py::arg("value"))
+        .def("return_Tptr",[](MyTemplate<gtsam::Matrix>* self, const std::shared_ptr<gtsam::Matrix> value){return self->return_Tptr(value);}, py::arg("value"))
+        .def("return_T",[](MyTemplate<gtsam::Matrix>* self, const gtsam::Matrix* value){return self->return_T(value);}, py::arg("value"))
+        .def("create_ptrs",[](MyTemplate<gtsam::Matrix>* self){return self->create_ptrs();})
+        .def("create_MixedPtrs",[](MyTemplate<gtsam::Matrix>* self){return self->create_MixedPtrs();})
+        .def("return_ptrs",[](MyTemplate<gtsam::Matrix>* self, const std::shared_ptr<gtsam::Matrix> p1, const std::shared_ptr<gtsam::Matrix> p2){return self->return_ptrs(p1, p2);}, py::arg("p1"), py::arg("p2"))
+        .def_static("Level",[](const gtsam::Matrix& K){return MyTemplate<gtsam::Matrix>::Level(K);}, py::arg("K"));
+
+
+#include "python/specializations.h"
+
+}
+
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/python/namespaces_pybind.cpp
@@ -0,0 +1,63 @@
+
+
+#include <pybind11/eigen.h>
+#include <pybind11/stl_bind.h>
+#include <pybind11/pybind11.h>
+#include <pybind11/operators.h>
+#include "gtsam/nonlinear/utilities.h"  // for RedirectCout.
+
+#include "path/to/ns1.h"
+#include "path/to/ns1/ClassB.h"
+#include "path/to/ns2.h"
+#include "path/to/ns2/ClassA.h"
+#include "path/to/ns3.h"
+
+#include "wrap/serialization.h"
+#include <boost/serialization/export.hpp>
+
+
+
+
+
+using namespace std;
+
+namespace py = pybind11;
+
+PYBIND11_MODULE(namespaces_py, m_) {
+    m_.doc() = "pybind11 wrapper of namespaces_py";
+
+    pybind11::module m_ns1 = m_.def_submodule("ns1", "ns1 submodule");
+
+    py::class_<ns1::ClassA, std::shared_ptr<ns1::ClassA>>(m_ns1, "ClassA")
+        .def(py::init<>());
+
+    py::class_<ns1::ClassB, std::shared_ptr<ns1::ClassB>>(m_ns1, "ClassB")
+        .def(py::init<>());
+
+    m_ns1.def("aGlobalFunction",[](){return ns1::aGlobalFunction();});    pybind11::module m_ns2 = m_.def_submodule("ns2", "ns2 submodule");
+
+    py::class_<ns2::ClassA, std::shared_ptr<ns2::ClassA>>(m_ns2, "ClassA")
+        .def(py::init<>())
+        .def("memberFunction",[](ns2::ClassA* self){return self->memberFunction();})
+        .def("nsArg",[](ns2::ClassA* self, const ns1::ClassB& arg){return self->nsArg(arg);}, py::arg("arg"))
+        .def("nsReturn",[](ns2::ClassA* self, double q){return self->nsReturn(q);}, py::arg("q"))
+        .def_static("afunction",[](){return ns2::ClassA::afunction();});
+    pybind11::module m_ns2_ns3 = m_ns2.def_submodule("ns3", "ns3 submodule");
+
+    py::class_<ns2::ns3::ClassB, std::shared_ptr<ns2::ns3::ClassB>>(m_ns2_ns3, "ClassB")
+        .def(py::init<>());
+
+    py::class_<ns2::ClassC, std::shared_ptr<ns2::ClassC>>(m_ns2, "ClassC")
+        .def(py::init<>());
+
+    m_ns2.def("aGlobalFunction",[](){return ns2::aGlobalFunction();});
+    m_ns2.def("overloadedGlobalFunction",[](const ns1::ClassA& a){return ns2::overloadedGlobalFunction(a);}, py::arg("a"));
+    m_ns2.def("overloadedGlobalFunction",[](const ns1::ClassA& a, double b){return ns2::overloadedGlobalFunction(a, b);}, py::arg("a"), py::arg("b"));
+    py::class_<ClassD, std::shared_ptr<ClassD>>(m_, "ClassD")
+        .def(py::init<>());
+
+
+#include "python/specializations.h"
+
+}
+
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/python/operator_pybind.cpp
@@ -0,0 +1,40 @@
+
+
+#include <pybind11/eigen.h>
+#include <pybind11/stl_bind.h>
+#include <pybind11/pybind11.h>
+#include <pybind11/operators.h>
+#include "gtsam/nonlinear/utilities.h"  // for RedirectCout.
+
+#include "gtsam/geometry/Pose3.h"
+
+#include "wrap/serialization.h"
+#include <boost/serialization/export.hpp>
+
+
+
+
+
+using namespace std;
+
+namespace py = pybind11;
+
+PYBIND11_MODULE(operator_py, m_) {
+    m_.doc() = "pybind11 wrapper of operator_py";
+
+    pybind11::module m_gtsam = m_.def_submodule("gtsam", "gtsam submodule");
+
+    py::class_<gtsam::Pose3, std::shared_ptr<gtsam::Pose3>>(m_gtsam, "Pose3")
+        .def(py::init<>())
+        .def(py::init<gtsam::Rot3, gtsam::Point3>(), py::arg("R"), py::arg("t"))
+        .def(py::self * py::self);
+
+    py::class_<gtsam::Container<gtsam::Matrix>, std::shared_ptr<gtsam::Container<gtsam::Matrix>>>(m_gtsam, "ContainerMatrix")
+        .def("__call__", &gtsam::Container<gtsam::Matrix>::operator())
+        .def("__getitem__", &gtsam::Container<gtsam::Matrix>::operator[]);
+
+
+#include "python/specializations.h"
+
+}
+
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/python/special_cases_pybind.cpp
@@ -0,0 +1,41 @@
+
+
+#include <pybind11/eigen.h>
+#include <pybind11/stl_bind.h>
+#include <pybind11/pybind11.h>
+#include <pybind11/operators.h>
+#include "gtsam/nonlinear/utilities.h"  // for RedirectCout.
+
+#include "gtsam/geometry/Cal3Bundler.h"
+
+#include "wrap/serialization.h"
+#include <boost/serialization/export.hpp>
+
+
+
+
+
+using namespace std;
+
+namespace py = pybind11;
+
+PYBIND11_MODULE(special_cases_py, m_) {
+    m_.doc() = "pybind11 wrapper of special_cases_py";
+
+    pybind11::module m_gtsam = m_.def_submodule("gtsam", "gtsam submodule");
+
+    py::class_<gtsam::NonlinearFactorGraph, std::shared_ptr<gtsam::NonlinearFactorGraph>>(m_gtsam, "NonlinearFactorGraph")
+        .def("addPriorPinholeCameraCal3Bundler",[](gtsam::NonlinearFactorGraph* self, size_t key, const gtsam::PinholeCamera<gtsam::Cal3Bundler>& prior, const std::shared_ptr<gtsam::noiseModel::Base> noiseModel){ self->addPrior<gtsam::PinholeCamera<gtsam::Cal3Bundler>>(key, prior, noiseModel);}, py::arg("key"), py::arg("prior"), py::arg("noiseModel"));
+
+    py::class_<gtsam::SfmTrack, std::shared_ptr<gtsam::SfmTrack>>(m_gtsam, "SfmTrack")
+        .def_readwrite("measurements", &gtsam::SfmTrack::measurements);
+
+    py::class_<gtsam::PinholeCamera<gtsam::Cal3Bundler>, std::shared_ptr<gtsam::PinholeCamera<gtsam::Cal3Bundler>>>(m_gtsam, "PinholeCameraCal3Bundler");
+
+    py::class_<gtsam::GeneralSFMFactor<gtsam::PinholeCamera<gtsam::Cal3Bundler>, gtsam::Point3>, std::shared_ptr<gtsam::GeneralSFMFactor<gtsam::PinholeCamera<gtsam::Cal3Bundler>, gtsam::Point3>>>(m_gtsam, "GeneralSFMFactorCal3Bundler");
+
+
+#include "python/specializations.h"
+
+}
+
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/JacobianFactorQ_8h.xml
@@ -0,0 +1,103 @@
+<?xml version='1.0' encoding='UTF-8' standalone='no'?>
+<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
+  <compounddef id="JacobianFactorQ_8h" kind="file" language="C++">
+    <compoundname>JacobianFactorQ.h</compoundname>
+    <includes local="no">gtsam/linear/RegularJacobianFactor.h</includes>
+    <incdepgraph>
+      <node id="10">
+        <label>gtsam/linear/RegularJacobianFactor.h</label>
+      </node>
+      <node id="9">
+        <label>tests/doc-test-files/JacobianFactorQ.h</label>
+        <link refid="JacobianFactorQ.h"/>
+        <childnode refid="10" relation="include">
+        </childnode>
+      </node>
+    </incdepgraph>
+    <innerclass refid="classgtsam_1_1JacobianFactorQ" prot="public">gtsam::JacobianFactorQ</innerclass>
+    <innerclass refid="structgtsam_1_1traits_3_01JacobianFactorQ_3_01D_00_01ZDim_01_4_01_4" prot="public">gtsam::traits&lt; JacobianFactorQ&lt; D, ZDim &gt; &gt;</innerclass>
+    <innernamespace refid="namespacegtsam">gtsam</innernamespace>
+    <briefdescription>
+    </briefdescription>
+    <detaileddescription>
+    </detaileddescription>
+    <programlisting>
+<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
+<codeline lineno="2"><highlight class="comment"></highlight></codeline>
+<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>GTSAM<sp/>Copyright<sp/>2010,<sp/>Georgia<sp/>Tech<sp/>Research<sp/>Corporation,</highlight></codeline>
+<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Atlanta,<sp/>Georgia<sp/>30332-0415</highlight></codeline>
+<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>All<sp/>Rights<sp/>Reserved</highlight></codeline>
+<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Authors:<sp/>Frank<sp/>Dellaert,<sp/>et<sp/>al.<sp/>(see<sp/>THANKS<sp/>for<sp/>the<sp/>full<sp/>author<sp/>list)</highlight></codeline>
+<codeline lineno="7"><highlight class="comment"></highlight></codeline>
+<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>See<sp/>LICENSE<sp/>for<sp/>the<sp/>license<sp/>information</highlight></codeline>
+<codeline lineno="9"><highlight class="comment"></highlight></codeline>
+<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="11"><highlight class="normal"></highlight></codeline>
+<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
+<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>@file<sp/><sp/>JacobianFactorQ.h</highlight></codeline>
+<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>@date<sp/><sp/>Oct<sp/>27,<sp/>2013</highlight></codeline>
+<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>@uthor<sp/>Frank<sp/>Dellaert</highlight></codeline>
+<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="17"><highlight class="normal"></highlight></codeline>
+<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="19"><highlight class="normal"></highlight></codeline>
+<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtsam/linear/RegularJacobianFactor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="21"><highlight class="normal"></highlight></codeline>
+<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegtsam" kindref="compound">gtsam</ref><sp/>{</highlight></codeline>
+<codeline lineno="26"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ZDim&gt;</highlight></codeline>
+<codeline lineno="27" refid="classgtsam_1_1JacobianFactorQ" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgtsam_1_1JacobianFactorQ" kindref="compound">JacobianFactorQ</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>RegularJacobianFactor&lt;D&gt;<sp/>{</highlight></codeline>
+<codeline lineno="28"><highlight class="normal"></highlight></codeline>
+<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>RegularJacobianFactor&lt;D&gt;<sp/>Base;</highlight></codeline>
+<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;double,<sp/>ZDim,<sp/>D&gt;<sp/>MatrixZD;</highlight></codeline>
+<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;Key,<sp/>Matrix&gt;<sp/>KeyMatrix;</highlight></codeline>
+<codeline lineno="32"><highlight class="normal"></highlight></codeline>
+<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="34"><highlight class="normal"></highlight></codeline>
+<codeline lineno="36" refid="classgtsam_1_1JacobianFactorQ_1a4dd3fbba46a6dff75bcf902931a3b769" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgtsam_1_1JacobianFactorQ_1a4dd3fbba46a6dff75bcf902931a3b769" kindref="member">JacobianFactorQ</ref>()<sp/>{</highlight></codeline>
+<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
+<codeline lineno="38"><highlight class="normal"></highlight></codeline>
+<codeline lineno="40" refid="classgtsam_1_1JacobianFactorQ_1abfb38e58b5b2d1293cf374b7eca2b2d4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgtsam_1_1JacobianFactorQ_1abfb38e58b5b2d1293cf374b7eca2b2d4" kindref="member">JacobianFactorQ</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KeyVector&amp;<sp/>keys,<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SharedDiagonal&amp;<sp/>model<sp/>=<sp/>SharedDiagonal())<sp/>:</highlight></codeline>
+<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Base()<sp/>{</highlight></codeline>
+<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix<sp/>zeroMatrix<sp/>=<sp/>Matrix::Zero(0,<sp/>D);</highlight></codeline>
+<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector<sp/>zeroVector<sp/>=<sp/>Vector::Zero(0);</highlight></codeline>
+<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;KeyMatrix&gt;<sp/>QF;</highlight></codeline>
+<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>QF.reserve(keys.size());</highlight></codeline>
+<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key&amp;<sp/>key:<sp/>keys)</highlight></codeline>
+<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QF.push_back(KeyMatrix(key,<sp/>zeroMatrix));</highlight></codeline>
+<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>JacobianFactor::fillTerms(QF,<sp/>zeroVector,<sp/>model);</highlight></codeline>
+<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
+<codeline lineno="51"><highlight class="normal"></highlight></codeline>
+<codeline lineno="53" refid="classgtsam_1_1JacobianFactorQ_1a549fef1272025c45472f2e4294bd319e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgtsam_1_1JacobianFactorQ_1a549fef1272025c45472f2e4294bd319e" kindref="member">JacobianFactorQ</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KeyVector&amp;<sp/>keys,</highlight></codeline>
+<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;MatrixZD,<sp/>Eigen::aligned_allocator&lt;MatrixZD&gt;<sp/>&gt;&amp;<sp/>FBlocks,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Matrix&amp;<sp/>E,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Matrix3&amp;<sp/>P,</highlight></codeline>
+<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&amp;<sp/>b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SharedDiagonal&amp;<sp/>model<sp/>=<sp/>SharedDiagonal())<sp/>:</highlight></codeline>
+<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Base()<sp/>{</highlight></codeline>
+<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0,<sp/>m2<sp/>=<sp/>E.rows(),<sp/>m<sp/>=<sp/>m2<sp/>/<sp/>ZDim;</highlight></codeline>
+<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>projector<sp/>Q</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix<sp/>Q<sp/>=<sp/>Matrix::Identity(m2,m2)<sp/>-<sp/>E<sp/>*<sp/>P<sp/>*<sp/>E.transpose();</highlight></codeline>
+<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>pre-computed<sp/>Jacobian<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>can<sp/>we<sp/>do<sp/>better<sp/>?</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;KeyMatrix&gt;<sp/>QF;</highlight></codeline>
+<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>QF.reserve(m);</highlight></codeline>
+<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Below,<sp/>we<sp/>compute<sp/>each<sp/>mZDim*D<sp/>block<sp/>A_j<sp/>=<sp/>Q_j<sp/>*<sp/>F_j<sp/>=<sp/>(mZDim*ZDim)<sp/>*<sp/>(Zdim*D)</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>FBlocks.size();<sp/>++k)<sp/>{</highlight></codeline>
+<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Key<sp/>key<sp/>=<sp/>keys[k];</highlight></codeline>
+<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QF.push_back(</highlight></codeline>
+<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KeyMatrix(key,<sp/>-<sp/>Q.block(0,<sp/>ZDim<sp/>*<sp/>j++,<sp/>m2,<sp/>ZDim)<sp/>*<sp/>FBlocks[k]));</highlight></codeline>
+<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
+<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Which<sp/>is<sp/>then<sp/>passed<sp/>to<sp/>the<sp/>normal<sp/>JacobianFactor<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>JacobianFactor::fillTerms(QF,<sp/>-<sp/>Q<sp/>*<sp/>b,<sp/>model);</highlight></codeline>
+<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
+<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
+<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>end<sp/>class<sp/>JacobianFactorQ</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="75"><highlight class="normal"></highlight></codeline>
+<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>traits</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="77" refid="structgtsam_1_1traits_3_01JacobianFactorQ_3_01D_00_01ZDim_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ZDim&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">traits&lt;<ref refid="classgtsam_1_1JacobianFactorQ" kindref="compound">JacobianFactorQ</ref>&lt;D,<sp/>ZDim&gt;<sp/>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Testable&lt;</highlight></codeline>
+<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>JacobianFactorQ&lt;D,<sp/>ZDim&gt;<sp/>&gt;<sp/>{</highlight></codeline>
+<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
+<codeline lineno="80"><highlight class="normal"></highlight></codeline>
+<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
+    </programlisting>
+    <location file="tests/doc-test-files/JacobianFactorQ.h"/>
+  </compounddef>
+</doxygen>
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/NonlinearFactor_8h.xml
@@ -0,0 +1,596 @@
+<?xml version='1.0' encoding='UTF-8' standalone='no'?>
+<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
+  <compounddef id="NonlinearFactor_8h" kind="file" language="C++">
+    <compoundname>NonlinearFactor.h</compoundname>
+    <includes local="no">gtsam/nonlinear/Values.h</includes>
+    <includes local="no">gtsam/linear/NoiseModel.h</includes>
+    <includes local="no">gtsam/linear/JacobianFactor.h</includes>
+    <includes local="no">gtsam/inference/Factor.h</includes>
+    <includes local="no">gtsam/base/OptionalJacobian.h</includes>
+    <includes local="no">boost/serialization/base_object.hpp</includes>
+    <includes local="no">boost/assign/list_of.hpp</includes>
+    <incdepgraph>
+      <node id="15">
+        <label>gtsam/linear/JacobianFactor.h</label>
+      </node>
+      <node id="17">
+        <label>gtsam/base/OptionalJacobian.h</label>
+      </node>
+      <node id="12">
+        <label>tests/doc-test-files/NonlinearFactor.h</label>
+        <link refid="NonlinearFactor.h"/>
+        <childnode refid="13" relation="include">
+        </childnode>
+        <childnode refid="14" relation="include">
+        </childnode>
+        <childnode refid="15" relation="include">
+        </childnode>
+        <childnode refid="16" relation="include">
+        </childnode>
+        <childnode refid="17" relation="include">
+        </childnode>
+        <childnode refid="18" relation="include">
+        </childnode>
+        <childnode refid="19" relation="include">
+        </childnode>
+      </node>
+      <node id="16">
+        <label>gtsam/inference/Factor.h</label>
+      </node>
+      <node id="14">
+        <label>gtsam/linear/NoiseModel.h</label>
+      </node>
+      <node id="18">
+        <label>boost/serialization/base_object.hpp</label>
+      </node>
+      <node id="19">
+        <label>boost/assign/list_of.hpp</label>
+      </node>
+      <node id="13">
+        <label>gtsam/nonlinear/Values.h</label>
+      </node>
+    </incdepgraph>
+    <innerclass refid="classgtsam_1_1NonlinearFactor" prot="public">gtsam::NonlinearFactor</innerclass>
+    <innerclass refid="structgtsam_1_1traits_3_01NonlinearFactor_01_4" prot="public">gtsam::traits&lt; NonlinearFactor &gt;</innerclass>
+    <innerclass refid="classgtsam_1_1NoiseModelFactor" prot="public">gtsam::NoiseModelFactor</innerclass>
+    <innerclass refid="classgtsam_1_1NoiseModelFactor1" prot="public">gtsam::NoiseModelFactor1</innerclass>
+    <innerclass refid="classgtsam_1_1NoiseModelFactor2" prot="public">gtsam::NoiseModelFactor2</innerclass>
+    <innerclass refid="classgtsam_1_1NoiseModelFactor3" prot="public">gtsam::NoiseModelFactor3</innerclass>
+    <innerclass refid="classgtsam_1_1NoiseModelFactor4" prot="public">gtsam::NoiseModelFactor4</innerclass>
+    <innerclass refid="classgtsam_1_1NoiseModelFactor5" prot="public">gtsam::NoiseModelFactor5</innerclass>
+    <innerclass refid="classgtsam_1_1NoiseModelFactor6" prot="public">gtsam::NoiseModelFactor6</innerclass>
+    <innernamespace refid="namespacegtsam">gtsam</innernamespace>
+      <sectiondef kind="define">
+      <memberdef kind="define" id="NonlinearFactor_8h_1acd444d887da7c7f7107e8a5caa703b22" prot="public" static="no">
+        <name>ADD_CLONE_NONLINEAR_FACTOR</name>
+        <param><defname>Derived</defname></param>
+        <initializer>virtual gtsam::NonlinearFactor::shared_ptr clone() const { \
+  return std::static_pointer_cast&lt;<ref refid="classgtsam_1_1NonlinearFactor" kindref="compound">gtsam::NonlinearFactor</ref>&gt;( \
+      gtsam::NonlinearFactor::shared_ptr(new Derived(*this))); }</initializer>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Macro to add a standard clone function to a derived factor <xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>: will go away shortly - just add the clone function directly </para></xrefdescription></xrefsect></para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="36" column="9" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="36" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+    <briefdescription>
+<para>Non-linear factor base classes. </para>    </briefdescription>
+    <detaileddescription>
+<para><simplesect kind="author"><para>Frank Dellaert </para></simplesect>
+<simplesect kind="author"><para>Richard Roberts </para></simplesect>
+</para>    </detaileddescription>
+    <programlisting>
+<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
+<codeline lineno="2"><highlight class="comment"></highlight></codeline>
+<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>GTSAM<sp/>Copyright<sp/>2010,<sp/>Georgia<sp/>Tech<sp/>Research<sp/>Corporation,</highlight></codeline>
+<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Atlanta,<sp/>Georgia<sp/>30332-0415</highlight></codeline>
+<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>All<sp/>Rights<sp/>Reserved</highlight></codeline>
+<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Authors:<sp/>Frank<sp/>Dellaert,<sp/>et<sp/>al.<sp/>(see<sp/>THANKS<sp/>for<sp/>the<sp/>full<sp/>author<sp/>list)</highlight></codeline>
+<codeline lineno="7"><highlight class="comment"></highlight></codeline>
+<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>See<sp/>LICENSE<sp/>for<sp/>the<sp/>license<sp/>information</highlight></codeline>
+<codeline lineno="9"><highlight class="comment"></highlight></codeline>
+<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="11"><highlight class="normal"></highlight></codeline>
+<codeline lineno="19"><highlight class="comment">//<sp/>\callgraph</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="20"><highlight class="normal"></highlight></codeline>
+<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="22"><highlight class="normal"></highlight></codeline>
+<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtsam/nonlinear/Values.h&gt;</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtsam/linear/NoiseModel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtsam/linear/JacobianFactor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtsam/inference/Factor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtsam/base/OptionalJacobian.h&gt;</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="28"><highlight class="normal"></highlight></codeline>
+<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/serialization/base_object.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/list_of.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="31"><highlight class="normal"></highlight></codeline>
+<codeline lineno="36" refid="NonlinearFactor_8h_1acd444d887da7c7f7107e8a5caa703b22" refkind="member"><highlight class="preprocessor">#define<sp/>ADD_CLONE_NONLINEAR_FACTOR(Derived)<sp/>\</highlight></codeline>
+<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/>virtual<sp/>gtsam::NonlinearFactor::shared_ptr<sp/>clone()<sp/>const<sp/>{<sp/>\</highlight></codeline>
+<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/>return<sp/>std::static_pointer_cast&lt;gtsam::NonlinearFactor&gt;(<sp/>\</highlight></codeline>
+<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>gtsam::NonlinearFactor::shared_ptr(new<sp/>Derived(*this)));<sp/>}</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="40"><highlight class="normal"></highlight></codeline>
+<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegtsam" kindref="compound">gtsam</ref><sp/>{</highlight></codeline>
+<codeline lineno="42"><highlight class="normal"></highlight></codeline>
+<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>boost::assign::cref_list_of;</highlight></codeline>
+<codeline lineno="44"><highlight class="normal"></highlight></codeline>
+<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*************************************************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="46"><highlight class="normal"></highlight></codeline>
+<codeline lineno="52" refid="classgtsam_1_1NonlinearFactor" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">GTSAM_EXPORT<sp/><ref refid="classgtsam_1_1NonlinearFactor" kindref="compound">NonlinearFactor</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Factor<sp/>{</highlight></codeline>
+<codeline lineno="53"><highlight class="normal"></highlight></codeline>
+<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="55"><highlight class="normal"></highlight></codeline>
+<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>handy<sp/>typedefs</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Factor<sp/>Base;</highlight></codeline>
+<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NonlinearFactor" kindref="compound">NonlinearFactor</ref><sp/><ref refid="classgtsam_1_1NonlinearFactor" kindref="compound">This</ref>;</highlight></codeline>
+<codeline lineno="59"><highlight class="normal"></highlight></codeline>
+<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="61"><highlight class="normal"></highlight></codeline>
+<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;This&gt;<sp/>shared_ptr;</highlight></codeline>
+<codeline lineno="63"><highlight class="normal"></highlight></codeline>
+<codeline lineno="66"></codeline>
+<codeline lineno="68" refid="classgtsam_1_1NonlinearFactor_1a7c719ae67f222f66569ccb3b526cb9cb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgtsam_1_1NonlinearFactor_1a7c719ae67f222f66569ccb3b526cb9cb" kindref="member">NonlinearFactor</ref>()<sp/>{}</highlight></codeline>
+<codeline lineno="69"><highlight class="normal"></highlight></codeline>
+<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CONTAINER&gt;</highlight></codeline>
+<codeline lineno="74" refid="classgtsam_1_1NonlinearFactor_1a8a7610dba7e9a6f878268c2769ea0e04" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgtsam_1_1NonlinearFactor_1a8a7610dba7e9a6f878268c2769ea0e04" kindref="member">NonlinearFactor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CONTAINER&amp;<sp/>keys)<sp/>:</highlight></codeline>
+<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>Base(keys)<sp/>{}</highlight></codeline>
+<codeline lineno="76"><highlight class="normal"></highlight></codeline>
+<codeline lineno="80"></codeline>
+<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
+<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KeyFormatter&amp;<sp/>keyFormatter<sp/>=<sp/>DefaultKeyFormatter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
+<codeline lineno="84"><highlight class="normal"></highlight></codeline>
+<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NonlinearFactor" kindref="compound">NonlinearFactor</ref>&amp;<sp/>f,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>1e-9)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
+<codeline lineno="90"></codeline>
+<codeline lineno="92" refid="classgtsam_1_1NonlinearFactor_1ac457810c504de58732d51d61f715c2de" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NonlinearFactor_1ac457810c504de58732d51d61f715c2de" kindref="member">~NonlinearFactor</ref>()<sp/>{}</highlight></codeline>
+<codeline lineno="93"><highlight class="normal"></highlight></codeline>
+<codeline lineno="94"><highlight class="normal"></highlight></codeline>
+<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Values&amp;<sp/>c)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
+<codeline lineno="101"><highlight class="normal"></highlight></codeline>
+<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dim()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
+<codeline lineno="104"><highlight class="normal"></highlight></codeline>
+<codeline lineno="115" refid="classgtsam_1_1NonlinearFactor_1a1968f471dc3ea33aaf0226ff7be5ae8c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NonlinearFactor_1a1968f471dc3ea33aaf0226ff7be5ae8c" kindref="member">active</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Values&amp;<sp/></highlight><highlight class="comment">/*c*/</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
+<codeline lineno="116"><highlight class="normal"></highlight></codeline>
+<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;GaussianFactor&gt;</highlight></codeline>
+<codeline lineno="119"><highlight class="normal"><sp/><sp/>linearize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Values&amp;<sp/>c)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
+<codeline lineno="120"><highlight class="normal"></highlight></codeline>
+<codeline lineno="127" refid="classgtsam_1_1NonlinearFactor_1aa98a30a78ade8489214ce2e5b8302777" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>shared_ptr<sp/><ref refid="classgtsam_1_1NonlinearFactor_1aa98a30a78ade8489214ce2e5b8302777" kindref="member">clone</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
+<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>choose<sp/>better<sp/>exception<sp/>to<sp/>throw<sp/>here</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;NonlinearFactor::clone():<sp/>Attempting<sp/>to<sp/>clone<sp/>factor<sp/>with<sp/>no<sp/>clone()<sp/>implemented!&quot;</highlight><highlight class="normal">);</highlight></codeline>
+<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shared_ptr();</highlight></codeline>
+<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
+<codeline lineno="132"><highlight class="normal"></highlight></codeline>
+<codeline lineno="138"><highlight class="normal"><sp/><sp/>shared_ptr<sp/>rekey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;Key,Key&gt;&amp;<sp/>rekey_mapping)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
+<codeline lineno="139"><highlight class="normal"></highlight></codeline>
+<codeline lineno="144"><highlight class="normal"><sp/><sp/>shared_ptr<sp/>rekey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KeyVector&amp;<sp/>new_keys)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
+<codeline lineno="145"><highlight class="normal"></highlight></codeline>
+<codeline lineno="146"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>\class<sp/>NonlinearFactor</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="147"><highlight class="normal"></highlight></codeline>
+<codeline lineno="149" refid="structgtsam_1_1traits_3_01NonlinearFactor_01_4" refkind="compound"><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">traits&lt;<ref refid="classgtsam_1_1NonlinearFactor" kindref="compound">NonlinearFactor</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Testable&lt;NonlinearFactor&gt;<sp/>{</highlight></codeline>
+<codeline lineno="150"><highlight class="normal">};</highlight></codeline>
+<codeline lineno="151"><highlight class="normal"></highlight></codeline>
+<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*************************************************************************<sp/>*/</highlight></codeline>
+<codeline lineno="163" refid="classgtsam_1_1NoiseModelFactor" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">GTSAM_EXPORT<sp/><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>NonlinearFactor<sp/>{</highlight></codeline>
+<codeline lineno="164"><highlight class="normal"></highlight></codeline>
+<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="166"><highlight class="normal"></highlight></codeline>
+<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>handy<sp/>typedefs</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>NonlinearFactor<sp/>Base;</highlight></codeline>
+<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref><sp/><ref refid="classgtsam_1_1NonlinearFactor" kindref="compound">This</ref>;</highlight></codeline>
+<codeline lineno="170"><highlight class="normal"></highlight></codeline>
+<codeline lineno="171"><highlight class="normal"><sp/><sp/>SharedNoiseModel<sp/>noiseModel_;<sp/></highlight></codeline>
+<codeline lineno="173"><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="174"><highlight class="normal"></highlight></codeline>
+<codeline lineno="175" refid="classgtsam_1_1NoiseModelFactor_1a57d98d52fb6f91ebc54d74746aeb90e4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;This&gt;<sp/><ref refid="classgtsam_1_1NoiseModelFactor_1a57d98d52fb6f91ebc54d74746aeb90e4" kindref="member">shared_ptr</ref>;</highlight></codeline>
+<codeline lineno="176"><highlight class="normal"></highlight></codeline>
+<codeline lineno="178" refid="classgtsam_1_1NoiseModelFactor_1ad6e8ef3348e042d598617d1d55f20300" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgtsam_1_1NoiseModelFactor_1ad6e8ef3348e042d598617d1d55f20300" kindref="member">NoiseModelFactor</ref>()<sp/>{}</highlight></codeline>
+<codeline lineno="179"><highlight class="normal"></highlight></codeline>
+<codeline lineno="181" refid="classgtsam_1_1NoiseModelFactor_1ae1ed5e0fa6c471b57172f7ebaf552187" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor_1ae1ed5e0fa6c471b57172f7ebaf552187" kindref="member">~NoiseModelFactor</ref>()<sp/>{}</highlight></codeline>
+<codeline lineno="182"><highlight class="normal"></highlight></codeline>
+<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CONTAINER&gt;</highlight></codeline>
+<codeline lineno="187" refid="classgtsam_1_1NoiseModelFactor_1a02cea97db30d27b51feaf1f0444d743c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgtsam_1_1NoiseModelFactor_1a02cea97db30d27b51feaf1f0444d743c" kindref="member">NoiseModelFactor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SharedNoiseModel&amp;<sp/>noiseModel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CONTAINER&amp;<sp/>keys)<sp/>:</highlight></codeline>
+<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>Base(keys),<sp/>noiseModel_(noiseModel)<sp/>{}</highlight></codeline>
+<codeline lineno="189"><highlight class="normal"></highlight></codeline>
+<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="191"><highlight class="normal"></highlight></codeline>
+<codeline lineno="195" refid="classgtsam_1_1NoiseModelFactor_1a4605224417029e9dc58c5267efa9a46d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgtsam_1_1NoiseModelFactor_1a4605224417029e9dc58c5267efa9a46d" kindref="member">NoiseModelFactor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SharedNoiseModel&amp;<sp/>noiseModel)<sp/>:<sp/>noiseModel_(noiseModel)<sp/>{}</highlight></codeline>
+<codeline lineno="196"><highlight class="normal"></highlight></codeline>
+<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="198"><highlight class="normal"></highlight></codeline>
+<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
+<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KeyFormatter&amp;<sp/>keyFormatter<sp/>=<sp/>DefaultKeyFormatter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
+<codeline lineno="202"><highlight class="normal"></highlight></codeline>
+<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NonlinearFactor&amp;<sp/>f,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>1e-9)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
+<codeline lineno="205"><highlight class="normal"></highlight></codeline>
+<codeline lineno="207" refid="classgtsam_1_1NoiseModelFactor_1af4f62b52fff1a0527ecdb279de023728" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor_1af4f62b52fff1a0527ecdb279de023728" kindref="member">dim</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
+<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>noiseModel_-&gt;dim();</highlight></codeline>
+<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
+<codeline lineno="210"><highlight class="normal"></highlight></codeline>
+<codeline lineno="212" refid="classgtsam_1_1NoiseModelFactor_1a123e5729d70b4acd6d7e1f70b1a7ced4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SharedNoiseModel&amp;<sp/><ref refid="classgtsam_1_1NoiseModelFactor_1a123e5729d70b4acd6d7e1f70b1a7ced4" kindref="member">noiseModel</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
+<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>noiseModel_;</highlight></codeline>
+<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
+<codeline lineno="215"><highlight class="normal"></highlight></codeline>
+<codeline lineno="217" refid="classgtsam_1_1NoiseModelFactor_1a16a8a23069ce6ae664f516edc8f36254" refkind="member"><highlight class="normal"><sp/><sp/>SharedNoiseModel<sp/><ref refid="classgtsam_1_1NoiseModelFactor_1a16a8a23069ce6ae664f516edc8f36254" kindref="member">get_noiseModel</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
+<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>noiseModel_;</highlight></codeline>
+<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
+<codeline lineno="220"><highlight class="normal"></highlight></codeline>
+<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Vector<sp/>unwhitenedError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Values&amp;<sp/>x,</highlight></codeline>
+<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::optional&lt;std::vector&lt;Matrix&gt;&amp;&gt;<sp/>H<sp/>=<sp/>boost::none)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
+<codeline lineno="229"><highlight class="normal"></highlight></codeline>
+<codeline lineno="234"><highlight class="normal"><sp/><sp/>Vector<sp/>whitenedError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Values&amp;<sp/>c)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
+<codeline lineno="235"><highlight class="normal"></highlight></codeline>
+<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Values&amp;<sp/>c)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
+<codeline lineno="243"><highlight class="normal"></highlight></codeline>
+<codeline lineno="249"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;GaussianFactor&gt;<sp/>linearize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Values&amp;<sp/>x)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
+<codeline lineno="250"><highlight class="normal"></highlight></codeline>
+<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="252"><highlight class="normal"></highlight></codeline>
+<codeline lineno="254" refid="classgtsam_1_1NoiseModelFactor_1ac98d07dd8f7b70e16ccb9a01abf56b9c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::serialization::access;</highlight></codeline>
+<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ARCHIVE&gt;</highlight></codeline>
+<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(ARCHIVE<sp/>&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*version*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
+<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>&amp;<sp/>boost::serialization::make_nvp(</highlight><highlight class="stringliteral">&quot;NonlinearFactor&quot;</highlight><highlight class="normal">,</highlight></codeline>
+<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::serialization::base_object&lt;Base&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
+<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>&amp;<sp/>BOOST_SERIALIZATION_NVP(noiseModel_);</highlight></codeline>
+<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
+<codeline lineno="261"><highlight class="normal"></highlight></codeline>
+<codeline lineno="262"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>\class<sp/>NoiseModelFactor</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="263"><highlight class="normal"></highlight></codeline>
+<codeline lineno="264"><highlight class="normal"></highlight></codeline>
+<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*************************************************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="266"><highlight class="normal"></highlight></codeline>
+<codeline lineno="275"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE&gt;</highlight></codeline>
+<codeline lineno="276" refid="classgtsam_1_1NoiseModelFactor1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgtsam_1_1NoiseModelFactor1" kindref="compound">NoiseModelFactor1</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref><sp/>{</highlight></codeline>
+<codeline lineno="277"><highlight class="normal"></highlight></codeline>
+<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="279"><highlight class="normal"></highlight></codeline>
+<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>typedefs<sp/>for<sp/>value<sp/>types<sp/>pulled<sp/>from<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE<sp/>X;</highlight></codeline>
+<codeline lineno="282"><highlight class="normal"></highlight></codeline>
+<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="284"><highlight class="normal"></highlight></codeline>
+<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref><sp/>Base;</highlight></codeline>
+<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor1" kindref="compound">NoiseModelFactor1&lt;VALUE&gt;</ref><sp/>This;</highlight></codeline>
+<codeline lineno="287"><highlight class="normal"></highlight></codeline>
+<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="289"><highlight class="normal"></highlight></codeline>
+<codeline lineno="291" refid="classgtsam_1_1NoiseModelFactor1_1a85c649f81b216f5b5d7e321febc7762c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgtsam_1_1NoiseModelFactor1_1a85c649f81b216f5b5d7e321febc7762c" kindref="member">NoiseModelFactor1</ref>()<sp/>{}</highlight></codeline>
+<codeline lineno="292"><highlight class="normal"></highlight></codeline>
+<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classgtsam_1_1NoiseModelFactor1" kindref="compound">NoiseModelFactor1</ref>()<sp/>{}</highlight></codeline>
+<codeline lineno="294"><highlight class="normal"></highlight></codeline>
+<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/>key()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[0];<sp/>}</highlight></codeline>
+<codeline lineno="296"><highlight class="normal"></highlight></codeline>
+<codeline lineno="302" refid="classgtsam_1_1NoiseModelFactor1_1a70a0b32dd5feba3631815614d8386c86" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgtsam_1_1NoiseModelFactor1_1a70a0b32dd5feba3631815614d8386c86" kindref="member">NoiseModelFactor1</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SharedNoiseModel&amp;<sp/>noiseModel,<sp/>Key<sp/>key1)<sp/>:</highlight></codeline>
+<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>Base(noiseModel,<sp/>cref_list_of&lt;1&gt;(key1))<sp/>{}</highlight></codeline>
+<codeline lineno="304"><highlight class="normal"></highlight></codeline>
+<codeline lineno="308" refid="classgtsam_1_1NoiseModelFactor1_1a886bb13688a62b2680c10cdaf7999918" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Vector<sp/><ref refid="classgtsam_1_1NoiseModelFactor1_1a886bb13688a62b2680c10cdaf7999918" kindref="member">unwhitenedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Values&amp;<sp/>x,<sp/>boost::optional&lt;std::vector&lt;Matrix&gt;&amp;&gt;<sp/>H<sp/>=<sp/>boost::none)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
+<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;active(x))<sp/>{</highlight></codeline>
+<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X&amp;<sp/>x1<sp/>=<sp/>x.at&lt;X&gt;(keys_[0]);</highlight></codeline>
+<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H)<sp/>{</highlight></codeline>
+<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evaluateError(x1,<sp/>(*H)[0]);</highlight></codeline>
+<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
+<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evaluateError(x1);</highlight></codeline>
+<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
+<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
+<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector::Zero(this-&gt;dim());</highlight></codeline>
+<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
+<codeline lineno="319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
+<codeline lineno="320"><highlight class="normal"></highlight></codeline>
+<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Vector<sp/>evaluateError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X&amp;<sp/>x,<sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H<sp/>=</highlight></codeline>
+<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::none)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
+<codeline lineno="328"><highlight class="normal"></highlight></codeline>
+<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="330"><highlight class="normal"></highlight></codeline>
+<codeline lineno="332" refid="classgtsam_1_1NoiseModelFactor1_1ac98d07dd8f7b70e16ccb9a01abf56b9c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::serialization::access;</highlight></codeline>
+<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ARCHIVE&gt;</highlight></codeline>
+<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(ARCHIVE<sp/>&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*version*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
+<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>&amp;<sp/>boost::serialization::make_nvp(</highlight><highlight class="stringliteral">&quot;NoiseModelFactor&quot;</highlight><highlight class="normal">,</highlight></codeline>
+<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::serialization::base_object&lt;Base&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
+<codeline lineno="337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
+<codeline lineno="338"><highlight class="normal">};</highlight><highlight class="comment">//<sp/>\class<sp/>NoiseModelFactor1</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="339"><highlight class="normal"></highlight></codeline>
+<codeline lineno="340"><highlight class="normal"></highlight></codeline>
+<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*************************************************************************<sp/>*/</highlight></codeline>
+<codeline lineno="344"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE2&gt;</highlight></codeline>
+<codeline lineno="345" refid="classgtsam_1_1NoiseModelFactor2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgtsam_1_1NoiseModelFactor2" kindref="compound">NoiseModelFactor2</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref><sp/>{</highlight></codeline>
+<codeline lineno="346"><highlight class="normal"></highlight></codeline>
+<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="348"><highlight class="normal"></highlight></codeline>
+<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>typedefs<sp/>for<sp/>value<sp/>types<sp/>pulled<sp/>from<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE1<sp/>X1;</highlight></codeline>
+<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE2<sp/>X2;</highlight></codeline>
+<codeline lineno="352"><highlight class="normal"></highlight></codeline>
+<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="354"><highlight class="normal"></highlight></codeline>
+<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref><sp/>Base;</highlight></codeline>
+<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor2" kindref="compound">NoiseModelFactor2&lt;VALUE1, VALUE2&gt;</ref><sp/>This;</highlight></codeline>
+<codeline lineno="357"><highlight class="normal"></highlight></codeline>
+<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="359"><highlight class="normal"></highlight></codeline>
+<codeline lineno="363" refid="classgtsam_1_1NoiseModelFactor2_1a04f5873776c784cafd55b4ac05b4b757" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgtsam_1_1NoiseModelFactor2_1a04f5873776c784cafd55b4ac05b4b757" kindref="member">NoiseModelFactor2</ref>()<sp/>{}</highlight></codeline>
+<codeline lineno="364"><highlight class="normal"></highlight></codeline>
+<codeline lineno="371" refid="classgtsam_1_1NoiseModelFactor2_1a35453b054509f5679a29a06b59340cf1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgtsam_1_1NoiseModelFactor2_1a35453b054509f5679a29a06b59340cf1" kindref="member">NoiseModelFactor2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SharedNoiseModel&amp;<sp/>noiseModel,<sp/>Key<sp/>j1,<sp/>Key<sp/>j2)<sp/>:</highlight></codeline>
+<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>Base(noiseModel,<sp/>cref_list_of&lt;2&gt;(j1)(j2))<sp/>{}</highlight></codeline>
+<codeline lineno="373"><highlight class="normal"></highlight></codeline>
+<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classgtsam_1_1NoiseModelFactor2" kindref="compound">NoiseModelFactor2</ref>()<sp/>{}</highlight></codeline>
+<codeline lineno="375"><highlight class="normal"></highlight></codeline>
+<codeline lineno="377" refid="classgtsam_1_1NoiseModelFactor2_1ae3b88b40b4ee6e9af9eefcde77bf9768" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/><ref refid="classgtsam_1_1NoiseModelFactor2_1ae3b88b40b4ee6e9af9eefcde77bf9768" kindref="member">key1</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[0];<sp/><sp/>}</highlight></codeline>
+<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/>key2()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[1];<sp/><sp/>}</highlight></codeline>
+<codeline lineno="379"><highlight class="normal"></highlight></codeline>
+<codeline lineno="382" refid="classgtsam_1_1NoiseModelFactor2_1a9640bbbb433383f0b40b5c2d9439415e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Vector<sp/><ref refid="classgtsam_1_1NoiseModelFactor2_1a9640bbbb433383f0b40b5c2d9439415e" kindref="member">unwhitenedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Values&amp;<sp/>x,<sp/>boost::optional&lt;std::vector&lt;Matrix&gt;&amp;&gt;<sp/>H<sp/>=<sp/>boost::none)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
+<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;active(x))<sp/>{</highlight></codeline>
+<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X1&amp;<sp/>x1<sp/>=<sp/>x.at&lt;X1&gt;(keys_[0]);</highlight></codeline>
+<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X2&amp;<sp/>x2<sp/>=<sp/>x.at&lt;X2&gt;(keys_[1]);</highlight></codeline>
+<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H)<sp/>{</highlight></codeline>
+<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evaluateError(x1,<sp/>x2,<sp/>(*H)[0],<sp/>(*H)[1]);</highlight></codeline>
+<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
+<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evaluateError(x1,<sp/>x2);</highlight></codeline>
+<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
+<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
+<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector::Zero(this-&gt;dim());</highlight></codeline>
+<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
+<codeline lineno="394"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
+<codeline lineno="395"><highlight class="normal"></highlight></codeline>
+<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Vector</highlight></codeline>
+<codeline lineno="402"><highlight class="normal"><sp/><sp/>evaluateError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X1&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X2&amp;,<sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H1<sp/>=</highlight></codeline>
+<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::none,<sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H2<sp/>=<sp/>boost::none)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
+<codeline lineno="404"><highlight class="normal"></highlight></codeline>
+<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="406"><highlight class="normal"></highlight></codeline>
+<codeline lineno="408" refid="classgtsam_1_1NoiseModelFactor2_1ac98d07dd8f7b70e16ccb9a01abf56b9c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::serialization::access;</highlight></codeline>
+<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ARCHIVE&gt;</highlight></codeline>
+<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(ARCHIVE<sp/>&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*version*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
+<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>&amp;<sp/>boost::serialization::make_nvp(</highlight><highlight class="stringliteral">&quot;NoiseModelFactor&quot;</highlight><highlight class="normal">,</highlight></codeline>
+<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::serialization::base_object&lt;Base&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
+<codeline lineno="413"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
+<codeline lineno="414"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>\class<sp/>NoiseModelFactor2</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="415"><highlight class="normal"></highlight></codeline>
+<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*************************************************************************<sp/>*/</highlight></codeline>
+<codeline lineno="419"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE3&gt;</highlight></codeline>
+<codeline lineno="420" refid="classgtsam_1_1NoiseModelFactor3" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgtsam_1_1NoiseModelFactor3" kindref="compound">NoiseModelFactor3</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref><sp/>{</highlight></codeline>
+<codeline lineno="421"><highlight class="normal"></highlight></codeline>
+<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="423"><highlight class="normal"></highlight></codeline>
+<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>typedefs<sp/>for<sp/>value<sp/>types<sp/>pulled<sp/>from<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE1<sp/>X1;</highlight></codeline>
+<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE2<sp/>X2;</highlight></codeline>
+<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE3<sp/>X3;</highlight></codeline>
+<codeline lineno="428"><highlight class="normal"></highlight></codeline>
+<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="430"><highlight class="normal"></highlight></codeline>
+<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref><sp/>Base;</highlight></codeline>
+<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor3" kindref="compound">NoiseModelFactor3&lt;VALUE1, VALUE2, VALUE3&gt;</ref><sp/>This;</highlight></codeline>
+<codeline lineno="433"><highlight class="normal"></highlight></codeline>
+<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="435"><highlight class="normal"></highlight></codeline>
+<codeline lineno="439" refid="classgtsam_1_1NoiseModelFactor3_1a0bf4383cea2cdb0d263e570e98499ac7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgtsam_1_1NoiseModelFactor3_1a0bf4383cea2cdb0d263e570e98499ac7" kindref="member">NoiseModelFactor3</ref>()<sp/>{}</highlight></codeline>
+<codeline lineno="440"><highlight class="normal"></highlight></codeline>
+<codeline lineno="448" refid="classgtsam_1_1NoiseModelFactor3_1ac2a8e8247e7d55768915fac27a4c078c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgtsam_1_1NoiseModelFactor3_1ac2a8e8247e7d55768915fac27a4c078c" kindref="member">NoiseModelFactor3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SharedNoiseModel&amp;<sp/>noiseModel,<sp/>Key<sp/>j1,<sp/>Key<sp/>j2,<sp/>Key<sp/>j3)<sp/>:</highlight></codeline>
+<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>Base(noiseModel,<sp/>cref_list_of&lt;3&gt;(j1)(j2)(j3))<sp/>{}</highlight></codeline>
+<codeline lineno="450"><highlight class="normal"></highlight></codeline>
+<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classgtsam_1_1NoiseModelFactor3" kindref="compound">NoiseModelFactor3</ref>()<sp/>{}</highlight></codeline>
+<codeline lineno="452"><highlight class="normal"></highlight></codeline>
+<codeline lineno="454" refid="classgtsam_1_1NoiseModelFactor3_1a535f2bec61538509696513b2ab6bbf0b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/><ref refid="classgtsam_1_1NoiseModelFactor3_1a535f2bec61538509696513b2ab6bbf0b" kindref="member">key1</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[0];<sp/>}</highlight></codeline>
+<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/>key2()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[1];<sp/>}</highlight></codeline>
+<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/>key3()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[2];<sp/>}</highlight></codeline>
+<codeline lineno="457"><highlight class="normal"></highlight></codeline>
+<codeline lineno="460" refid="classgtsam_1_1NoiseModelFactor3_1aab8e3316ef77cecc1bd1909a2c0eed33" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Vector<sp/><ref refid="classgtsam_1_1NoiseModelFactor3_1aab8e3316ef77cecc1bd1909a2c0eed33" kindref="member">unwhitenedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Values&amp;<sp/>x,<sp/>boost::optional&lt;std::vector&lt;Matrix&gt;&amp;&gt;<sp/>H<sp/>=<sp/>boost::none)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
+<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;active(x))<sp/>{</highlight></codeline>
+<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H)</highlight></codeline>
+<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evaluateError(x.at&lt;X1&gt;(keys_[0]),<sp/>x.at&lt;X2&gt;(keys_[1]),<sp/>x.at&lt;X3&gt;(keys_[2]),<sp/>(*H)[0],<sp/>(*H)[1],<sp/>(*H)[2]);</highlight></codeline>
+<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evaluateError(x.at&lt;X1&gt;(keys_[0]),<sp/>x.at&lt;X2&gt;(keys_[1]),<sp/>x.at&lt;X3&gt;(keys_[2]));</highlight></codeline>
+<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
+<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector::Zero(this-&gt;dim());</highlight></codeline>
+<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
+<codeline lineno="469"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
+<codeline lineno="470"><highlight class="normal"></highlight></codeline>
+<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Vector</highlight></codeline>
+<codeline lineno="477"><highlight class="normal"><sp/><sp/>evaluateError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X1&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X2&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X3&amp;,</highlight></codeline>
+<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H1<sp/>=<sp/>boost::none,</highlight></codeline>
+<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H2<sp/>=<sp/>boost::none,</highlight></codeline>
+<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H3<sp/>=<sp/>boost::none)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
+<codeline lineno="481"><highlight class="normal"></highlight></codeline>
+<codeline lineno="482"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="483"><highlight class="normal"></highlight></codeline>
+<codeline lineno="485" refid="classgtsam_1_1NoiseModelFactor3_1ac98d07dd8f7b70e16ccb9a01abf56b9c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::serialization::access;</highlight></codeline>
+<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ARCHIVE&gt;</highlight></codeline>
+<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(ARCHIVE<sp/>&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*version*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
+<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>&amp;<sp/>boost::serialization::make_nvp(</highlight><highlight class="stringliteral">&quot;NoiseModelFactor&quot;</highlight><highlight class="normal">,</highlight></codeline>
+<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::serialization::base_object&lt;Base&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
+<codeline lineno="490"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
+<codeline lineno="491"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>\class<sp/>NoiseModelFactor3</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="492"><highlight class="normal"></highlight></codeline>
+<codeline lineno="493"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*************************************************************************<sp/>*/</highlight></codeline>
+<codeline lineno="496"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE4&gt;</highlight></codeline>
+<codeline lineno="497" refid="classgtsam_1_1NoiseModelFactor4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgtsam_1_1NoiseModelFactor4" kindref="compound">NoiseModelFactor4</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref><sp/>{</highlight></codeline>
+<codeline lineno="498"><highlight class="normal"></highlight></codeline>
+<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="500"><highlight class="normal"></highlight></codeline>
+<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>typedefs<sp/>for<sp/>value<sp/>types<sp/>pulled<sp/>from<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE1<sp/>X1;</highlight></codeline>
+<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE2<sp/>X2;</highlight></codeline>
+<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE3<sp/>X3;</highlight></codeline>
+<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE4<sp/>X4;</highlight></codeline>
+<codeline lineno="506"><highlight class="normal"></highlight></codeline>
+<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="508"><highlight class="normal"></highlight></codeline>
+<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref><sp/>Base;</highlight></codeline>
+<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor4" kindref="compound">NoiseModelFactor4&lt;VALUE1, VALUE2, VALUE3, VALUE4&gt;</ref><sp/>This;</highlight></codeline>
+<codeline lineno="511"><highlight class="normal"></highlight></codeline>
+<codeline lineno="512"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="513"><highlight class="normal"></highlight></codeline>
+<codeline lineno="517" refid="classgtsam_1_1NoiseModelFactor4_1a65adc8d1272df63390168b26f4f7bc70" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgtsam_1_1NoiseModelFactor4_1a65adc8d1272df63390168b26f4f7bc70" kindref="member">NoiseModelFactor4</ref>()<sp/>{}</highlight></codeline>
+<codeline lineno="518"><highlight class="normal"></highlight></codeline>
+<codeline lineno="527" refid="classgtsam_1_1NoiseModelFactor4_1a8ce3daa05897e12db9e38a9c96043ce3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgtsam_1_1NoiseModelFactor4_1a8ce3daa05897e12db9e38a9c96043ce3" kindref="member">NoiseModelFactor4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SharedNoiseModel&amp;<sp/>noiseModel,<sp/>Key<sp/>j1,<sp/>Key<sp/>j2,<sp/>Key<sp/>j3,<sp/>Key<sp/>j4)<sp/>:</highlight></codeline>
+<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>Base(noiseModel,<sp/>cref_list_of&lt;4&gt;(j1)(j2)(j3)(j4))<sp/>{}</highlight></codeline>
+<codeline lineno="529"><highlight class="normal"></highlight></codeline>
+<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classgtsam_1_1NoiseModelFactor4" kindref="compound">NoiseModelFactor4</ref>()<sp/>{}</highlight></codeline>
+<codeline lineno="531"><highlight class="normal"></highlight></codeline>
+<codeline lineno="533" refid="classgtsam_1_1NoiseModelFactor4_1a4339880be87fa2a533aa07324481f7b6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/><ref refid="classgtsam_1_1NoiseModelFactor4_1a4339880be87fa2a533aa07324481f7b6" kindref="member">key1</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[0];<sp/>}</highlight></codeline>
+<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/>key2()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[1];<sp/>}</highlight></codeline>
+<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/>key3()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[2];<sp/>}</highlight></codeline>
+<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/>key4()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[3];<sp/>}</highlight></codeline>
+<codeline lineno="537"><highlight class="normal"></highlight></codeline>
+<codeline lineno="540" refid="classgtsam_1_1NoiseModelFactor4_1a6a79ae22fc40447c8dc183a951243440" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Vector<sp/><ref refid="classgtsam_1_1NoiseModelFactor4_1a6a79ae22fc40447c8dc183a951243440" kindref="member">unwhitenedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Values&amp;<sp/>x,<sp/>boost::optional&lt;std::vector&lt;Matrix&gt;&amp;&gt;<sp/>H<sp/>=<sp/>boost::none)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
+<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;active(x))<sp/>{</highlight></codeline>
+<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H)</highlight></codeline>
+<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evaluateError(x.at&lt;X1&gt;(keys_[0]),<sp/>x.at&lt;X2&gt;(keys_[1]),<sp/>x.at&lt;X3&gt;(keys_[2]),<sp/>x.at&lt;X4&gt;(keys_[3]),<sp/>(*H)[0],<sp/>(*H)[1],<sp/>(*H)[2],<sp/>(*H)[3]);</highlight></codeline>
+<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evaluateError(x.at&lt;X1&gt;(keys_[0]),<sp/>x.at&lt;X2&gt;(keys_[1]),<sp/>x.at&lt;X3&gt;(keys_[2]),<sp/>x.at&lt;X4&gt;(keys_[3]));</highlight></codeline>
+<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
+<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector::Zero(this-&gt;dim());</highlight></codeline>
+<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
+<codeline lineno="549"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
+<codeline lineno="550"><highlight class="normal"></highlight></codeline>
+<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Vector</highlight></codeline>
+<codeline lineno="557"><highlight class="normal"><sp/><sp/>evaluateError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X1&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X2&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X3&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X4&amp;,</highlight></codeline>
+<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H1<sp/>=<sp/>boost::none,</highlight></codeline>
+<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H2<sp/>=<sp/>boost::none,</highlight></codeline>
+<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H3<sp/>=<sp/>boost::none,</highlight></codeline>
+<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H4<sp/>=<sp/>boost::none)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
+<codeline lineno="562"><highlight class="normal"></highlight></codeline>
+<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="564"><highlight class="normal"></highlight></codeline>
+<codeline lineno="566" refid="classgtsam_1_1NoiseModelFactor4_1ac98d07dd8f7b70e16ccb9a01abf56b9c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::serialization::access;</highlight></codeline>
+<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ARCHIVE&gt;</highlight></codeline>
+<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(ARCHIVE<sp/>&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*version*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
+<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>&amp;<sp/>boost::serialization::make_nvp(</highlight><highlight class="stringliteral">&quot;NoiseModelFactor&quot;</highlight><highlight class="normal">,</highlight></codeline>
+<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::serialization::base_object&lt;Base&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
+<codeline lineno="571"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
+<codeline lineno="572"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>\class<sp/>NoiseModelFactor4</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="573"><highlight class="normal"></highlight></codeline>
+<codeline lineno="574"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*************************************************************************<sp/>*/</highlight></codeline>
+<codeline lineno="577"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE4,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE5&gt;</highlight></codeline>
+<codeline lineno="578" refid="classgtsam_1_1NoiseModelFactor5" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgtsam_1_1NoiseModelFactor5" kindref="compound">NoiseModelFactor5</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref><sp/>{</highlight></codeline>
+<codeline lineno="579"><highlight class="normal"></highlight></codeline>
+<codeline lineno="580"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="581"><highlight class="normal"></highlight></codeline>
+<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>typedefs<sp/>for<sp/>value<sp/>types<sp/>pulled<sp/>from<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE1<sp/>X1;</highlight></codeline>
+<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE2<sp/>X2;</highlight></codeline>
+<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE3<sp/>X3;</highlight></codeline>
+<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE4<sp/>X4;</highlight></codeline>
+<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE5<sp/>X5;</highlight></codeline>
+<codeline lineno="588"><highlight class="normal"></highlight></codeline>
+<codeline lineno="589"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="590"><highlight class="normal"></highlight></codeline>
+<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref><sp/>Base;</highlight></codeline>
+<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor5" kindref="compound">NoiseModelFactor5&lt;VALUE1, VALUE2, VALUE3, VALUE4, VALUE5&gt;</ref><sp/>This;</highlight></codeline>
+<codeline lineno="593"><highlight class="normal"></highlight></codeline>
+<codeline lineno="594"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="595"><highlight class="normal"></highlight></codeline>
+<codeline lineno="599" refid="classgtsam_1_1NoiseModelFactor5_1a424c4633f6c1907d0dd3381cffbed82a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgtsam_1_1NoiseModelFactor5_1a424c4633f6c1907d0dd3381cffbed82a" kindref="member">NoiseModelFactor5</ref>()<sp/>{}</highlight></codeline>
+<codeline lineno="600"><highlight class="normal"></highlight></codeline>
+<codeline lineno="610" refid="classgtsam_1_1NoiseModelFactor5_1a01d2e8a5253a67ceac02320a719c5280" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgtsam_1_1NoiseModelFactor5_1a01d2e8a5253a67ceac02320a719c5280" kindref="member">NoiseModelFactor5</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SharedNoiseModel&amp;<sp/>noiseModel,<sp/>Key<sp/>j1,<sp/>Key<sp/>j2,<sp/>Key<sp/>j3,<sp/>Key<sp/>j4,<sp/>Key<sp/>j5)<sp/>:</highlight></codeline>
+<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>Base(noiseModel,<sp/>cref_list_of&lt;5&gt;(j1)(j2)(j3)(j4)(j5))<sp/>{}</highlight></codeline>
+<codeline lineno="612"><highlight class="normal"></highlight></codeline>
+<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classgtsam_1_1NoiseModelFactor5" kindref="compound">NoiseModelFactor5</ref>()<sp/>{}</highlight></codeline>
+<codeline lineno="614"><highlight class="normal"></highlight></codeline>
+<codeline lineno="616" refid="classgtsam_1_1NoiseModelFactor5_1a23886196ba086677b1e2168e17a34280" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/><ref refid="classgtsam_1_1NoiseModelFactor5_1a23886196ba086677b1e2168e17a34280" kindref="member">key1</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[0];<sp/>}</highlight></codeline>
+<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/>key2()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[1];<sp/>}</highlight></codeline>
+<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/>key3()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[2];<sp/>}</highlight></codeline>
+<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/>key4()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[3];<sp/>}</highlight></codeline>
+<codeline lineno="620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/>key5()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[4];<sp/>}</highlight></codeline>
+<codeline lineno="621"><highlight class="normal"></highlight></codeline>
+<codeline lineno="624" refid="classgtsam_1_1NoiseModelFactor5_1a701b7a764f18310b4eea14ee023c922b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Vector<sp/><ref refid="classgtsam_1_1NoiseModelFactor5_1a701b7a764f18310b4eea14ee023c922b" kindref="member">unwhitenedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Values&amp;<sp/>x,<sp/>boost::optional&lt;std::vector&lt;Matrix&gt;&amp;&gt;<sp/>H<sp/>=<sp/>boost::none)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
+<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;active(x))<sp/>{</highlight></codeline>
+<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H)</highlight></codeline>
+<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evaluateError(x.at&lt;X1&gt;(keys_[0]),<sp/>x.at&lt;X2&gt;(keys_[1]),<sp/>x.at&lt;X3&gt;(keys_[2]),<sp/>x.at&lt;X4&gt;(keys_[3]),<sp/>x.at&lt;X5&gt;(keys_[4]),<sp/>(*H)[0],<sp/>(*H)[1],<sp/>(*H)[2],<sp/>(*H)[3],<sp/>(*H)[4]);</highlight></codeline>
+<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evaluateError(x.at&lt;X1&gt;(keys_[0]),<sp/>x.at&lt;X2&gt;(keys_[1]),<sp/>x.at&lt;X3&gt;(keys_[2]),<sp/>x.at&lt;X4&gt;(keys_[3]),<sp/>x.at&lt;X5&gt;(keys_[4]));</highlight></codeline>
+<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
+<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector::Zero(this-&gt;dim());</highlight></codeline>
+<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
+<codeline lineno="633"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
+<codeline lineno="634"><highlight class="normal"></highlight></codeline>
+<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Vector</highlight></codeline>
+<codeline lineno="641"><highlight class="normal"><sp/><sp/>evaluateError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X1&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X2&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X3&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X4&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X5&amp;,</highlight></codeline>
+<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H1<sp/>=<sp/>boost::none,</highlight></codeline>
+<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H2<sp/>=<sp/>boost::none,</highlight></codeline>
+<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H3<sp/>=<sp/>boost::none,</highlight></codeline>
+<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H4<sp/>=<sp/>boost::none,</highlight></codeline>
+<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H5<sp/>=<sp/>boost::none)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
+<codeline lineno="647"><highlight class="normal"></highlight></codeline>
+<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="649"><highlight class="normal"></highlight></codeline>
+<codeline lineno="651" refid="classgtsam_1_1NoiseModelFactor5_1ac98d07dd8f7b70e16ccb9a01abf56b9c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::serialization::access;</highlight></codeline>
+<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ARCHIVE&gt;</highlight></codeline>
+<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(ARCHIVE<sp/>&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*version*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
+<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>&amp;<sp/>boost::serialization::make_nvp(</highlight><highlight class="stringliteral">&quot;NoiseModelFactor&quot;</highlight><highlight class="normal">,</highlight></codeline>
+<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::serialization::base_object&lt;Base&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
+<codeline lineno="656"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
+<codeline lineno="657"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>\class<sp/>NoiseModelFactor5</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="658"><highlight class="normal"></highlight></codeline>
+<codeline lineno="659"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*************************************************************************<sp/>*/</highlight></codeline>
+<codeline lineno="662"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE4,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE5,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUE6&gt;</highlight></codeline>
+<codeline lineno="663" refid="classgtsam_1_1NoiseModelFactor6" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgtsam_1_1NoiseModelFactor6" kindref="compound">NoiseModelFactor6</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref><sp/>{</highlight></codeline>
+<codeline lineno="664"><highlight class="normal"></highlight></codeline>
+<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="666"><highlight class="normal"></highlight></codeline>
+<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>typedefs<sp/>for<sp/>value<sp/>types<sp/>pulled<sp/>from<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE1<sp/>X1;</highlight></codeline>
+<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE2<sp/>X2;</highlight></codeline>
+<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE3<sp/>X3;</highlight></codeline>
+<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE4<sp/>X4;</highlight></codeline>
+<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE5<sp/>X5;</highlight></codeline>
+<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUE6<sp/>X6;</highlight></codeline>
+<codeline lineno="674"><highlight class="normal"></highlight></codeline>
+<codeline lineno="675"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="676"><highlight class="normal"></highlight></codeline>
+<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref><sp/>Base;</highlight></codeline>
+<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classgtsam_1_1NoiseModelFactor6" kindref="compound">NoiseModelFactor6&lt;VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6&gt;</ref><sp/>This;</highlight></codeline>
+<codeline lineno="679"><highlight class="normal"></highlight></codeline>
+<codeline lineno="680"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="681"><highlight class="normal"></highlight></codeline>
+<codeline lineno="685" refid="classgtsam_1_1NoiseModelFactor6_1a15bcca054e397e486fb9dda0d0436cdb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgtsam_1_1NoiseModelFactor6_1a15bcca054e397e486fb9dda0d0436cdb" kindref="member">NoiseModelFactor6</ref>()<sp/>{}</highlight></codeline>
+<codeline lineno="686"><highlight class="normal"></highlight></codeline>
+<codeline lineno="697" refid="classgtsam_1_1NoiseModelFactor6_1ad3d89a85f0c70d7a424f2060d514cab9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgtsam_1_1NoiseModelFactor6_1ad3d89a85f0c70d7a424f2060d514cab9" kindref="member">NoiseModelFactor6</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SharedNoiseModel&amp;<sp/>noiseModel,<sp/>Key<sp/>j1,<sp/>Key<sp/>j2,<sp/>Key<sp/>j3,<sp/>Key<sp/>j4,<sp/>Key<sp/>j5,<sp/>Key<sp/>j6)<sp/>:</highlight></codeline>
+<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>Base(noiseModel,<sp/>cref_list_of&lt;6&gt;(j1)(j2)(j3)(j4)(j5)(j6))<sp/>{}</highlight></codeline>
+<codeline lineno="699"><highlight class="normal"></highlight></codeline>
+<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classgtsam_1_1NoiseModelFactor6" kindref="compound">NoiseModelFactor6</ref>()<sp/>{}</highlight></codeline>
+<codeline lineno="701"><highlight class="normal"></highlight></codeline>
+<codeline lineno="703" refid="classgtsam_1_1NoiseModelFactor6_1a587ce14373742350ff30a78c856ecaa0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/><ref refid="classgtsam_1_1NoiseModelFactor6_1a587ce14373742350ff30a78c856ecaa0" kindref="member">key1</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[0];<sp/>}</highlight></codeline>
+<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/>key2()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[1];<sp/>}</highlight></codeline>
+<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/>key3()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[2];<sp/>}</highlight></codeline>
+<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/>key4()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[3];<sp/>}</highlight></codeline>
+<codeline lineno="707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/>key5()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[4];<sp/>}</highlight></codeline>
+<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Key<sp/>key6()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys_[5];<sp/>}</highlight></codeline>
+<codeline lineno="709"><highlight class="normal"></highlight></codeline>
+<codeline lineno="712" refid="classgtsam_1_1NoiseModelFactor6_1a945d269f9a722d585e3332be23030450" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Vector<sp/><ref refid="classgtsam_1_1NoiseModelFactor6_1a945d269f9a722d585e3332be23030450" kindref="member">unwhitenedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Values&amp;<sp/>x,<sp/>boost::optional&lt;std::vector&lt;Matrix&gt;&amp;&gt;<sp/>H<sp/>=<sp/>boost::none)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
+<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;active(x))<sp/>{</highlight></codeline>
+<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(H)</highlight></codeline>
+<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evaluateError(x.at&lt;X1&gt;(keys_[0]),<sp/>x.at&lt;X2&gt;(keys_[1]),<sp/>x.at&lt;X3&gt;(keys_[2]),<sp/>x.at&lt;X4&gt;(keys_[3]),<sp/>x.at&lt;X5&gt;(keys_[4]),<sp/>x.at&lt;X6&gt;(keys_[5]),<sp/>(*H)[0],<sp/>(*H)[1],<sp/>(*H)[2],<sp/>(*H)[3],<sp/>(*H)[4],<sp/>(*H)[5]);</highlight></codeline>
+<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evaluateError(x.at&lt;X1&gt;(keys_[0]),<sp/>x.at&lt;X2&gt;(keys_[1]),<sp/>x.at&lt;X3&gt;(keys_[2]),<sp/>x.at&lt;X4&gt;(keys_[3]),<sp/>x.at&lt;X5&gt;(keys_[4]),<sp/>x.at&lt;X6&gt;(keys_[5]));</highlight></codeline>
+<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
+<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector::Zero(this-&gt;dim());</highlight></codeline>
+<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
+<codeline lineno="721"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
+<codeline lineno="722"><highlight class="normal"></highlight></codeline>
+<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Vector</highlight></codeline>
+<codeline lineno="729"><highlight class="normal"><sp/><sp/>evaluateError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X1&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X2&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X3&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X4&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X5&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>X6&amp;,</highlight></codeline>
+<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H1<sp/>=<sp/>boost::none,</highlight></codeline>
+<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H2<sp/>=<sp/>boost::none,</highlight></codeline>
+<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H3<sp/>=<sp/>boost::none,</highlight></codeline>
+<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H4<sp/>=<sp/>boost::none,</highlight></codeline>
+<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H5<sp/>=<sp/>boost::none,</highlight></codeline>
+<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::optional&lt;Matrix&amp;&gt;<sp/>H6<sp/>=<sp/>boost::none)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
+<codeline lineno="736"><highlight class="normal"></highlight></codeline>
+<codeline lineno="737"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
+<codeline lineno="738"><highlight class="normal"></highlight></codeline>
+<codeline lineno="740" refid="classgtsam_1_1NoiseModelFactor6_1ac98d07dd8f7b70e16ccb9a01abf56b9c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::serialization::access;</highlight></codeline>
+<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ARCHIVE&gt;</highlight></codeline>
+<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(ARCHIVE<sp/>&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*version*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
+<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>&amp;<sp/>boost::serialization::make_nvp(</highlight><highlight class="stringliteral">&quot;NoiseModelFactor&quot;</highlight><highlight class="normal">,</highlight></codeline>
+<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::serialization::base_object&lt;Base&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
+<codeline lineno="745"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
+<codeline lineno="746"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>\class<sp/>NoiseModelFactor6</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="747"><highlight class="normal"></highlight></codeline>
+<codeline lineno="748"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*************************************************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
+<codeline lineno="749"><highlight class="normal"></highlight></codeline>
+<codeline lineno="750"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>\namespace<sp/>gtsam</highlight><highlight class="normal"></highlight></codeline>
+    </programlisting>
+    <location file="tests/doc-test-files/NonlinearFactor.h"/>
+  </compounddef>
+</doxygen>
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/classgtsam_1_1JacobianFactorQ.xml
@@ -0,0 +1,171 @@
+<?xml version='1.0' encoding='UTF-8' standalone='no'?>
+<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
+  <compounddef id="classgtsam_1_1JacobianFactorQ" kind="class" language="C++" prot="public">
+    <compoundname>gtsam::JacobianFactorQ</compoundname>
+    <basecompoundref prot="public" virt="non-virtual">RegularJacobianFactor&lt; D &gt;</basecompoundref>
+    <includes refid="JacobianFactorQ_8h" local="no">JacobianFactorQ.h</includes>
+    <templateparamlist>
+      <param>
+        <type>size_t</type>
+        <declname>D</declname>
+        <defname>D</defname>
+      </param>
+      <param>
+        <type>size_t</type>
+        <declname>ZDim</declname>
+        <defname>ZDim</defname>
+      </param>
+    </templateparamlist>
+      <sectiondef kind="private-type">
+      <memberdef kind="typedef" id="classgtsam_1_1JacobianFactorQ_1abb244ea915349e3beb40b669fe8317c4" prot="private" static="no">
+        <type>RegularJacobianFactor&lt; D &gt;</type>
+        <definition>typedef RegularJacobianFactor&lt;D&gt; gtsam::JacobianFactorQ&lt; D, ZDim &gt;::Base</definition>
+        <argsstring></argsstring>
+        <name>Base</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/JacobianFactorQ.h" line="29" column="1" bodyfile="tests/doc-test-files/JacobianFactorQ.h" bodystart="29" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1JacobianFactorQ_1aa64b12e917e0c89d0d0e9782ea9e06a4" prot="private" static="no">
+        <type>Eigen::Matrix&lt; double, ZDim, D &gt;</type>
+        <definition>typedef Eigen::Matrix&lt;double, ZDim, D&gt; gtsam::JacobianFactorQ&lt; D, ZDim &gt;::MatrixZD</definition>
+        <argsstring></argsstring>
+        <name>MatrixZD</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/JacobianFactorQ.h" line="30" column="1" bodyfile="tests/doc-test-files/JacobianFactorQ.h" bodystart="30" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1JacobianFactorQ_1a2dbb8aa1aaf1d46d64181c5aeeb1a06c" prot="private" static="no">
+        <type>std::pair&lt; Key, Matrix &gt;</type>
+        <definition>typedef std::pair&lt;Key, Matrix&gt; gtsam::JacobianFactorQ&lt; D, ZDim &gt;::KeyMatrix</definition>
+        <argsstring></argsstring>
+        <name>KeyMatrix</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/JacobianFactorQ.h" line="31" column="1" bodyfile="tests/doc-test-files/JacobianFactorQ.h" bodystart="31" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="public-func">
+      <memberdef kind="function" id="classgtsam_1_1JacobianFactorQ_1a4dd3fbba46a6dff75bcf902931a3b769" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <type></type>
+        <definition>gtsam::JacobianFactorQ&lt; D, ZDim &gt;::JacobianFactorQ</definition>
+        <argsstring>()</argsstring>
+        <name>JacobianFactorQ</name>
+        <briefdescription>
+<para>Default constructor. </para>        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/JacobianFactorQ.h" line="36" column="1" bodyfile="tests/doc-test-files/JacobianFactorQ.h" bodystart="36" bodyend="37"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1JacobianFactorQ_1abfb38e58b5b2d1293cf374b7eca2b2d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <type></type>
+        <definition>gtsam::JacobianFactorQ&lt; D, ZDim &gt;::JacobianFactorQ</definition>
+        <argsstring>(const KeyVector &amp;keys, const SharedDiagonal &amp;model=SharedDiagonal())</argsstring>
+        <name>JacobianFactorQ</name>
+        <param>
+          <type>const KeyVector &amp;</type>
+          <declname>keys</declname>
+        </param>
+        <param>
+          <type>const SharedDiagonal &amp;</type>
+          <declname>model</declname>
+          <defval>SharedDiagonal()</defval>
+        </param>
+        <briefdescription>
+<para>Empty constructor with keys. </para>        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/JacobianFactorQ.h" line="40" column="1" bodyfile="tests/doc-test-files/JacobianFactorQ.h" bodystart="40" bodyend="50"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1JacobianFactorQ_1a549fef1272025c45472f2e4294bd319e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <type></type>
+        <definition>gtsam::JacobianFactorQ&lt; D, ZDim &gt;::JacobianFactorQ</definition>
+        <argsstring>(const KeyVector &amp;keys, const std::vector&lt; MatrixZD, Eigen::aligned_allocator&lt; MatrixZD &gt; &gt; &amp;FBlocks, const Matrix &amp;E, const Matrix3 &amp;P, const Vector &amp;b, const SharedDiagonal &amp;model=SharedDiagonal())</argsstring>
+        <name>JacobianFactorQ</name>
+        <param>
+          <type>const KeyVector &amp;</type>
+          <declname>keys</declname>
+        </param>
+        <param>
+          <type>const std::vector&lt; MatrixZD, Eigen::aligned_allocator&lt; MatrixZD &gt; &gt; &amp;</type>
+          <declname>FBlocks</declname>
+        </param>
+        <param>
+          <type>const Matrix &amp;</type>
+          <declname>E</declname>
+        </param>
+        <param>
+          <type>const Matrix3 &amp;</type>
+          <declname>P</declname>
+        </param>
+        <param>
+          <type>const Vector &amp;</type>
+          <declname>b</declname>
+        </param>
+        <param>
+          <type>const SharedDiagonal &amp;</type>
+          <declname>model</declname>
+          <defval>SharedDiagonal()</defval>
+        </param>
+        <briefdescription>
+<para>Constructor. </para>        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/JacobianFactorQ.h" line="53" column="1" bodyfile="tests/doc-test-files/JacobianFactorQ.h" bodystart="53" bodyend="72"/>
+      </memberdef>
+      </sectiondef>
+    <briefdescription>
+    </briefdescription>
+    <detaileddescription>
+<para>JacobianFactor for Schur complement that uses Q noise model </para>    </detaileddescription>
+    <inheritancegraph>
+      <node id="83">
+        <label>gtsam::JacobianFactorQ&lt; D, ZDim &gt;</label>
+        <link refid="classgtsam_1_1JacobianFactorQ"/>
+        <childnode refid="84" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="84">
+        <label>RegularJacobianFactor&lt; D &gt;</label>
+      </node>
+    </inheritancegraph>
+    <collaborationgraph>
+      <node id="85">
+        <label>gtsam::JacobianFactorQ&lt; D, ZDim &gt;</label>
+        <link refid="classgtsam_1_1JacobianFactorQ"/>
+        <childnode refid="86" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="86">
+        <label>RegularJacobianFactor&lt; D &gt;</label>
+      </node>
+    </collaborationgraph>
+    <location file="tests/doc-test-files/JacobianFactorQ.h" line="27" column="1" bodyfile="tests/doc-test-files/JacobianFactorQ.h" bodystart="27" bodyend="73"/>
+    <listofallmembers>
+      <member refid="classgtsam_1_1JacobianFactorQ_1abb244ea915349e3beb40b669fe8317c4" prot="private" virt="non-virtual"><scope>gtsam::JacobianFactorQ</scope><name>Base</name></member>
+      <member refid="classgtsam_1_1JacobianFactorQ_1a4dd3fbba46a6dff75bcf902931a3b769" prot="public" virt="non-virtual"><scope>gtsam::JacobianFactorQ</scope><name>JacobianFactorQ</name></member>
+      <member refid="classgtsam_1_1JacobianFactorQ_1abfb38e58b5b2d1293cf374b7eca2b2d4" prot="public" virt="non-virtual"><scope>gtsam::JacobianFactorQ</scope><name>JacobianFactorQ</name></member>
+      <member refid="classgtsam_1_1JacobianFactorQ_1a549fef1272025c45472f2e4294bd319e" prot="public" virt="non-virtual"><scope>gtsam::JacobianFactorQ</scope><name>JacobianFactorQ</name></member>
+      <member refid="classgtsam_1_1JacobianFactorQ_1a2dbb8aa1aaf1d46d64181c5aeeb1a06c" prot="private" virt="non-virtual"><scope>gtsam::JacobianFactorQ</scope><name>KeyMatrix</name></member>
+      <member refid="classgtsam_1_1JacobianFactorQ_1aa64b12e917e0c89d0d0e9782ea9e06a4" prot="private" virt="non-virtual"><scope>gtsam::JacobianFactorQ</scope><name>MatrixZD</name></member>
+    </listofallmembers>
+  </compounddef>
+</doxygen>
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/classgtsam_1_1NoiseModelFactor.xml
@@ -0,0 +1,459 @@
+<?xml version='1.0' encoding='UTF-8' standalone='no'?>
+<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
+  <compounddef id="classgtsam_1_1NoiseModelFactor" kind="class" language="C++" prot="public" abstract="yes">
+    <compoundname>gtsam::NoiseModelFactor</compoundname>
+    <basecompoundref refid="classgtsam_1_1NonlinearFactor" prot="public" virt="non-virtual">gtsam::NonlinearFactor</basecompoundref>
+    <derivedcompoundref refid="classgtsam_1_1NoiseModelFactor1" prot="public" virt="non-virtual">gtsam::NoiseModelFactor1&lt; VALUE &gt;</derivedcompoundref>
+    <derivedcompoundref refid="classgtsam_1_1NoiseModelFactor2" prot="public" virt="non-virtual">gtsam::NoiseModelFactor2&lt; VALUE1, VALUE2 &gt;</derivedcompoundref>
+    <derivedcompoundref refid="classgtsam_1_1NoiseModelFactor3" prot="public" virt="non-virtual">gtsam::NoiseModelFactor3&lt; VALUE1, VALUE2, VALUE3 &gt;</derivedcompoundref>
+    <derivedcompoundref refid="classgtsam_1_1NoiseModelFactor4" prot="public" virt="non-virtual">gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;</derivedcompoundref>
+    <derivedcompoundref refid="classgtsam_1_1NoiseModelFactor5" prot="public" virt="non-virtual">gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;</derivedcompoundref>
+    <derivedcompoundref refid="classgtsam_1_1NoiseModelFactor6" prot="public" virt="non-virtual">gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;</derivedcompoundref>
+    <includes refid="NonlinearFactor_8h" local="no">NonlinearFactor.h</includes>
+      <sectiondef kind="protected-type">
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor_1a9ac7f77c3ae2d5bfd14d25f4bdc3deaa" prot="protected" static="no">
+        <type><ref refid="classgtsam_1_1NonlinearFactor" kindref="compound">NonlinearFactor</ref></type>
+        <definition>typedef NonlinearFactor gtsam::NoiseModelFactor::Base</definition>
+        <argsstring></argsstring>
+        <name>Base</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="168" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="168" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor_1a44e242fb0945cf6c60d30c36c3f229af" prot="protected" static="no">
+        <type><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref></type>
+        <definition>typedef NoiseModelFactor gtsam::NoiseModelFactor::This</definition>
+        <argsstring></argsstring>
+        <name>This</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="169" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="169" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="public-type">
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor_1a57d98d52fb6f91ebc54d74746aeb90e4" prot="public" static="no">
+        <type>std::shared_ptr&lt; <ref refid="classgtsam_1_1NonlinearFactor" kindref="compound">This</ref> &gt;</type>
+        <definition>typedef std::shared_ptr&lt;This&gt; gtsam::NoiseModelFactor::shared_ptr</definition>
+        <argsstring></argsstring>
+        <name>shared_ptr</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Noise model </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="175" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="175" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="protected-attrib">
+      <memberdef kind="variable" id="classgtsam_1_1NoiseModelFactor_1a2263eabbefe0eede8c9d10486f61bb4d" prot="protected" static="no" mutable="no">
+        <type>SharedNoiseModel</type>
+        <definition>SharedNoiseModel gtsam::NoiseModelFactor::noiseModel_</definition>
+        <argsstring></argsstring>
+        <name>noiseModel_</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="171" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="171" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="friend">
+      <memberdef kind="friend" id="classgtsam_1_1NoiseModelFactor_1ac98d07dd8f7b70e16ccb9a01abf56b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
+        <type>friend class</type>
+        <definition>friend class boost::serialization::access</definition>
+        <argsstring></argsstring>
+        <name>boost::serialization::access</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Serialization function </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="254" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="254" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="public-func">
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor_1ad6e8ef3348e042d598617d1d55f20300" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <type></type>
+        <definition>gtsam::NoiseModelFactor::NoiseModelFactor</definition>
+        <argsstring>()</argsstring>
+        <name>NoiseModelFactor</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Default constructor for I/O only </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="178" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="178" bodyend="178"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor_1ae1ed5e0fa6c471b57172f7ebaf552187" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
+        <type></type>
+        <definition>virtual gtsam::NoiseModelFactor::~NoiseModelFactor</definition>
+        <argsstring>()</argsstring>
+        <name>~NoiseModelFactor</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Destructor </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="181" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="181" bodyend="181"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor_1a02cea97db30d27b51feaf1f0444d743c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <templateparamlist>
+          <param>
+            <type>typename CONTAINER</type>
+          </param>
+        </templateparamlist>
+        <type></type>
+        <definition>gtsam::NoiseModelFactor::NoiseModelFactor</definition>
+        <argsstring>(const SharedNoiseModel &amp;noiseModel, const CONTAINER &amp;keys)</argsstring>
+        <name>NoiseModelFactor</name>
+        <param>
+          <type>const SharedNoiseModel &amp;</type>
+          <declname>noiseModel</declname>
+        </param>
+        <param>
+          <type>const CONTAINER &amp;</type>
+          <declname>keys</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Constructor </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="187" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="187" bodyend="188"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor_1a682e0bbaf0c9638b7d0d96148082d1d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
+        <type>void</type>
+        <definition>virtual void gtsam::NoiseModelFactor::print</definition>
+        <argsstring>(const std::string &amp;s=&quot;&quot;, const KeyFormatter &amp;keyFormatter=DefaultKeyFormatter) const </argsstring>
+        <name>print</name>
+        <reimplements refid="classgtsam_1_1NonlinearFactor_1a758285fe17213cbf9c23b9f42fb960e6">print</reimplements>
+        <param>
+          <type>const std::string &amp;</type>
+          <declname>s</declname>
+          <defval>&quot;&quot;</defval>
+        </param>
+        <param>
+          <type>const KeyFormatter &amp;</type>
+          <declname>keyFormatter</declname>
+          <defval>DefaultKeyFormatter</defval>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Print </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="200" column="1"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor_1a616d0335db512e9c333cab83b1923399" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
+        <type>bool</type>
+        <definition>virtual bool gtsam::NoiseModelFactor::equals</definition>
+        <argsstring>(const NonlinearFactor &amp;f, double tol=1e-9) const </argsstring>
+        <name>equals</name>
+        <reimplements refid="classgtsam_1_1NonlinearFactor_1a38cdabb3302973815e357bd00573734a">equals</reimplements>
+        <param>
+          <type>const <ref refid="classgtsam_1_1NonlinearFactor" kindref="compound">NonlinearFactor</ref> &amp;</type>
+          <declname>f</declname>
+        </param>
+        <param>
+          <type>double</type>
+          <declname>tol</declname>
+          <defval>1e-9</defval>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Check if two factors are equal </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="204" column="1"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor_1af4f62b52fff1a0527ecdb279de023728" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
+        <type>size_t</type>
+        <definition>virtual size_t gtsam::NoiseModelFactor::dim</definition>
+        <argsstring>() const </argsstring>
+        <name>dim</name>
+        <reimplements refid="classgtsam_1_1NonlinearFactor_1a5f0fcf1c93ded207d4a31e8ede07d797">dim</reimplements>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>get the dimension of the factor (number of rows on linearization) </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="207" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="207" bodyend="209"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor_1a123e5729d70b4acd6d7e1f70b1a7ced4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>const SharedNoiseModel &amp;</type>
+        <definition>const SharedNoiseModel&amp; gtsam::NoiseModelFactor::noiseModel</definition>
+        <argsstring>() const </argsstring>
+        <name>noiseModel</name>
+        <briefdescription>
+<para>access to the noise model </para>        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="212" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="212" bodyend="214"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor_1a16a8a23069ce6ae664f516edc8f36254" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>SharedNoiseModel</type>
+        <definition>SharedNoiseModel gtsam::NoiseModelFactor::get_noiseModel</definition>
+        <argsstring>() const </argsstring>
+        <name>get_noiseModel</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para><xrefsect id="deprecated_1_deprecated000002"><xreftitle>Deprecated</xreftitle><xrefdescription><para>access to the noise model </para></xrefdescription></xrefsect></para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="217" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="217" bodyend="219"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor_1afd61874915a8076bf83f9d8311fc0e26" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
+        <type>Vector</type>
+        <definition>virtual Vector gtsam::NoiseModelFactor::unwhitenedError</definition>
+        <argsstring>(const Values &amp;x, boost::optional&lt; std::vector&lt; Matrix &gt; &amp; &gt; H=boost::none) const =0</argsstring>
+        <name>unwhitenedError</name>
+        <reimplementedby refid="classgtsam_1_1NoiseModelFactor1_1a886bb13688a62b2680c10cdaf7999918">unwhitenedError</reimplementedby>
+        <reimplementedby refid="classgtsam_1_1NoiseModelFactor2_1a9640bbbb433383f0b40b5c2d9439415e">unwhitenedError</reimplementedby>
+        <reimplementedby refid="classgtsam_1_1NoiseModelFactor3_1aab8e3316ef77cecc1bd1909a2c0eed33">unwhitenedError</reimplementedby>
+        <reimplementedby refid="classgtsam_1_1NoiseModelFactor4_1a6a79ae22fc40447c8dc183a951243440">unwhitenedError</reimplementedby>
+        <reimplementedby refid="classgtsam_1_1NoiseModelFactor5_1a701b7a764f18310b4eea14ee023c922b">unwhitenedError</reimplementedby>
+        <reimplementedby refid="classgtsam_1_1NoiseModelFactor6_1a945d269f9a722d585e3332be23030450">unwhitenedError</reimplementedby>
+        <param>
+          <type>const Values &amp;</type>
+          <declname>x</declname>
+        </param>
+        <param>
+          <type>boost::optional&lt; std::vector&lt; Matrix &gt; &amp; &gt;</type>
+          <declname>H</declname>
+          <defval>boost::none</defval>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Error function <emphasis>without</emphasis> the NoiseModel, <formula id="3">$ z-h(x) $</formula>. Override this method to finish implementing an N-way factor. If the optional arguments is specified, it should compute both the function evaluation and its derivative(s) in H. </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="227" column="1"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor_1a1b3ea51380315bfd63f60d8d9195b0c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
+        <type>Vector</type>
+        <definition>Vector gtsam::NoiseModelFactor::whitenedError</definition>
+        <argsstring>(const Values &amp;c) const </argsstring>
+        <name>whitenedError</name>
+        <param>
+          <type>const Values &amp;</type>
+          <declname>c</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Vector of errors, whitened This is the raw error, i.e., i.e. <formula id="4">$ (h(x)-z)/\sigma $</formula> in case of a Gaussian </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="234" column="1"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor_1af6147aff3a33f734435601f6dcafeaf9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
+        <type>double</type>
+        <definition>virtual double gtsam::NoiseModelFactor::error</definition>
+        <argsstring>(const Values &amp;c) const </argsstring>
+        <name>error</name>
+        <reimplements refid="classgtsam_1_1NonlinearFactor_1a8e67e58ff0e4f9d58f07e5eb227adc52">error</reimplements>
+        <param>
+          <type>const Values &amp;</type>
+          <declname>c</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Calculate the error of the factor. This is the log-likelihood, e.g. <formula id="5">$ 0.5(h(x)-z)^2/\sigma^2 $</formula> in case of Gaussian. In this class, we take the raw prediction error <formula id="6">$ h(x)-z $</formula>, ask the noise model to transform it to <formula id="7">$ (h(x)-z)^2/\sigma^2 $</formula>, and then multiply by 0.5. </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="242" column="1"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor_1a0c83582a0bd04e112e4c0a17cd4ed324" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
+        <type>std::shared_ptr&lt; GaussianFactor &gt;</type>
+        <definition>std::shared_ptr&lt;GaussianFactor&gt; gtsam::NoiseModelFactor::linearize</definition>
+        <argsstring>(const Values &amp;x) const </argsstring>
+        <name>linearize</name>
+        <reimplements refid="classgtsam_1_1NonlinearFactor_1af2cc20b4ec180610dbf224f2165fa50a">linearize</reimplements>
+        <param>
+          <type>const Values &amp;</type>
+          <declname>x</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Linearize a non-linearFactorN to get a GaussianFactor, <formula id="8">$ Ax-b \approx h(x+\delta x)-z = h(x) + A \delta x - z $</formula> Hence <formula id="9">$ b = z - h(x) = - \mathtt{error\_vector}(x) $</formula> </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="249" column="1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="protected-func">
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor_1a4605224417029e9dc58c5267efa9a46d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <type></type>
+        <definition>gtsam::NoiseModelFactor::NoiseModelFactor</definition>
+        <argsstring>(const SharedNoiseModel &amp;noiseModel)</argsstring>
+        <name>NoiseModelFactor</name>
+        <param>
+          <type>const SharedNoiseModel &amp;</type>
+          <declname>noiseModel</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Constructor - only for subclasses, as this does not set keys. </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="195" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="195" bodyend="195"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="private-func">
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor_1abb60fdb39cb6939b08744605713e153e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <templateparamlist>
+          <param>
+            <type>class ARCHIVE</type>
+          </param>
+        </templateparamlist>
+        <type>void</type>
+        <definition>void gtsam::NoiseModelFactor::serialize</definition>
+        <argsstring>(ARCHIVE &amp;ar, const unsigned int)</argsstring>
+        <name>serialize</name>
+        <param>
+          <type>ARCHIVE &amp;</type>
+          <declname>ar</declname>
+        </param>
+        <param>
+          <type>const unsigned</type>
+          <declname>int</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="256" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="256" bodyend="260"/>
+      </memberdef>
+      </sectiondef>
+    <briefdescription>
+    </briefdescription>
+    <detaileddescription>
+<para>A nonlinear sum-of-squares factor with a zero-mean noise model implementing the density <formula id="0">$ P(z|x) \propto exp -0.5*|z-h(x)|^2_C $</formula> Templated on the parameter type X and the values structure Values There is no return type specified for h(x). Instead, we require the derived class implements <formula id="1">$ \mathtt{error\_vector}(x) = h(x)-z \approx A \delta x - b $</formula> This allows a graph to have factors with measurements of mixed type.</para><para>The noise model is typically Gaussian, but robust and constrained error models are also supported. </para>    </detaileddescription>
+    <inheritancegraph>
+      <node id="89">
+        <label>Factor</label>
+      </node>
+      <node id="93">
+        <label>gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor4"/>
+        <childnode refid="87" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="95">
+        <label>gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor6"/>
+        <childnode refid="87" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="94">
+        <label>gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor5"/>
+        <childnode refid="87" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="88">
+        <label>gtsam::NonlinearFactor</label>
+        <link refid="classgtsam_1_1NonlinearFactor"/>
+        <childnode refid="89" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="87">
+        <label>gtsam::NoiseModelFactor</label>
+        <link refid="classgtsam_1_1NoiseModelFactor"/>
+        <childnode refid="88" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="90">
+        <label>gtsam::NoiseModelFactor1&lt; VALUE &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor1"/>
+        <childnode refid="87" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="92">
+        <label>gtsam::NoiseModelFactor3&lt; VALUE1, VALUE2, VALUE3 &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor3"/>
+        <childnode refid="87" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="91">
+        <label>gtsam::NoiseModelFactor2&lt; VALUE1, VALUE2 &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor2"/>
+        <childnode refid="87" relation="public-inheritance">
+        </childnode>
+      </node>
+    </inheritancegraph>
+    <collaborationgraph>
+      <node id="98">
+        <label>Factor</label>
+      </node>
+      <node id="97">
+        <label>gtsam::NonlinearFactor</label>
+        <link refid="classgtsam_1_1NonlinearFactor"/>
+        <childnode refid="98" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="96">
+        <label>gtsam::NoiseModelFactor</label>
+        <link refid="classgtsam_1_1NoiseModelFactor"/>
+        <childnode refid="97" relation="public-inheritance">
+        </childnode>
+      </node>
+    </collaborationgraph>
+    <location file="tests/doc-test-files/NonlinearFactor.h" line="163" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="163" bodyend="262"/>
+    <listofallmembers>
+      <member refid="classgtsam_1_1NonlinearFactor_1a1968f471dc3ea33aaf0226ff7be5ae8c" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor</scope><name>active</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a9ac7f77c3ae2d5bfd14d25f4bdc3deaa" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor</scope><name>Base</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1ac98d07dd8f7b70e16ccb9a01abf56b9c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor</scope><name>boost::serialization::access</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1aa98a30a78ade8489214ce2e5b8302777" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor</scope><name>clone</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1af4f62b52fff1a0527ecdb279de023728" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor</scope><name>dim</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a616d0335db512e9c333cab83b1923399" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor</scope><name>equals</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1af6147aff3a33f734435601f6dcafeaf9" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor</scope><name>error</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a16a8a23069ce6ae664f516edc8f36254" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor</scope><name>get_noiseModel</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a0c83582a0bd04e112e4c0a17cd4ed324" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor</scope><name>linearize</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a123e5729d70b4acd6d7e1f70b1a7ced4" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor</scope><name>noiseModel</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a2263eabbefe0eede8c9d10486f61bb4d" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor</scope><name>noiseModel_</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1ad6e8ef3348e042d598617d1d55f20300" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a02cea97db30d27b51feaf1f0444d743c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a4605224417029e9dc58c5267efa9a46d" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a7c719ae67f222f66569ccb3b526cb9cb" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor</scope><name>NonlinearFactor</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a8a7610dba7e9a6f878268c2769ea0e04" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor</scope><name>NonlinearFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a682e0bbaf0c9638b7d0d96148082d1d7" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor</scope><name>print</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a95f4d57e8646b6df634496aaabb683b5" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor</scope><name>rekey</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a5f760600e8608ef15c825a0f8d1d1855" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor</scope><name>rekey</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1abb60fdb39cb6939b08744605713e153e" prot="private" virt="non-virtual"><scope>gtsam::NoiseModelFactor</scope><name>serialize</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a57d98d52fb6f91ebc54d74746aeb90e4" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor</scope><name>shared_ptr</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a44e242fb0945cf6c60d30c36c3f229af" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor</scope><name>This</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1afd61874915a8076bf83f9d8311fc0e26" prot="public" virt="pure-virtual"><scope>gtsam::NoiseModelFactor</scope><name>unwhitenedError</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a1b3ea51380315bfd63f60d8d9195b0c1" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor</scope><name>whitenedError</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1ae1ed5e0fa6c471b57172f7ebaf552187" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor</scope><name>~NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1ac457810c504de58732d51d61f715c2de" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor</scope><name>~NonlinearFactor</name></member>
+    </listofallmembers>
+  </compounddef>
+</doxygen>
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/classgtsam_1_1NoiseModelFactor1.xml
@@ -0,0 +1,306 @@
+<?xml version='1.0' encoding='UTF-8' standalone='no'?>
+<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
+  <compounddef id="classgtsam_1_1NoiseModelFactor1" kind="class" language="C++" prot="public" abstract="yes">
+    <compoundname>gtsam::NoiseModelFactor1</compoundname>
+    <basecompoundref refid="classgtsam_1_1NoiseModelFactor" prot="public" virt="non-virtual">gtsam::NoiseModelFactor</basecompoundref>
+    <includes refid="NonlinearFactor_8h" local="no">NonlinearFactor.h</includes>
+    <templateparamlist>
+      <param>
+        <type>class VALUE</type>
+      </param>
+    </templateparamlist>
+      <sectiondef kind="public-type">
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor1_1a37d19c88478e96cf1dfc065229734ece" prot="public" static="no">
+        <type>VALUE</type>
+        <definition>typedef VALUE gtsam::NoiseModelFactor1&lt; VALUE &gt;::X</definition>
+        <argsstring></argsstring>
+        <name>X</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="281" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="281" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="protected-type">
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor1_1a8ed3a4fbfc8843df8a2f21a805e93ef0" prot="protected" static="no">
+        <type><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref></type>
+        <definition>typedef NoiseModelFactor gtsam::NoiseModelFactor1&lt; VALUE &gt;::Base</definition>
+        <argsstring></argsstring>
+        <name>Base</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="285" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="285" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor1_1a22cb5d89cc9ec25e2d94004917d890fc" prot="protected" static="no">
+        <type><ref refid="classgtsam_1_1NoiseModelFactor1" kindref="compound">NoiseModelFactor1</ref>&lt; VALUE &gt;</type>
+        <definition>typedef NoiseModelFactor1&lt;VALUE&gt; gtsam::NoiseModelFactor1&lt; VALUE &gt;::This</definition>
+        <argsstring></argsstring>
+        <name>This</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="286" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="286" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="friend">
+      <memberdef kind="friend" id="classgtsam_1_1NoiseModelFactor1_1ac98d07dd8f7b70e16ccb9a01abf56b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
+        <type>friend class</type>
+        <definition>friend class boost::serialization::access</definition>
+        <argsstring></argsstring>
+        <name>boost::serialization::access</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Serialization function </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="332" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="332" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="public-func">
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor1_1a85c649f81b216f5b5d7e321febc7762c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <type></type>
+        <definition>gtsam::NoiseModelFactor1&lt; VALUE &gt;::NoiseModelFactor1</definition>
+        <argsstring>()</argsstring>
+        <name>NoiseModelFactor1</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Default constructor for I/O only </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="291" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="291" bodyend="291"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor1_1aecf0afe14b2af551d62a6e62ee8a8d27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
+        <type></type>
+        <definition>virtual gtsam::NoiseModelFactor1&lt; VALUE &gt;::~NoiseModelFactor1</definition>
+        <argsstring>()</argsstring>
+        <name>~NoiseModelFactor1</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="293" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="293" bodyend="293"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor1_1af7fe05db115c50d7f3bc2aaa1d6c7950" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor1&lt; VALUE &gt;::key</definition>
+        <argsstring>() const </argsstring>
+        <name>key</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="295" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="295" bodyend="295"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor1_1a70a0b32dd5feba3631815614d8386c86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <type></type>
+        <definition>gtsam::NoiseModelFactor1&lt; VALUE &gt;::NoiseModelFactor1</definition>
+        <argsstring>(const SharedNoiseModel &amp;noiseModel, Key key1)</argsstring>
+        <name>NoiseModelFactor1</name>
+        <param>
+          <type>const SharedNoiseModel &amp;</type>
+          <declname>noiseModel</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>key1</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Constructor <parameterlist kind="param"><parameteritem>
+<parameternamelist>
+<parametername>noiseModel</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>shared pointer to noise model </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>key1</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>by which to look up X value in Values </para></parameterdescription>
+</parameteritem>
+</parameterlist>
+</para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="302" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="302" bodyend="303"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor1_1a886bb13688a62b2680c10cdaf7999918" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
+        <type>Vector</type>
+        <definition>virtual Vector gtsam::NoiseModelFactor1&lt; VALUE &gt;::unwhitenedError</definition>
+        <argsstring>(const Values &amp;x, boost::optional&lt; std::vector&lt; Matrix &gt; &amp; &gt; H=boost::none) const </argsstring>
+        <name>unwhitenedError</name>
+        <reimplements refid="classgtsam_1_1NoiseModelFactor_1afd61874915a8076bf83f9d8311fc0e26">unwhitenedError</reimplements>
+        <param>
+          <type>const Values &amp;</type>
+          <declname>x</declname>
+        </param>
+        <param>
+          <type>boost::optional&lt; std::vector&lt; Matrix &gt; &amp; &gt;</type>
+          <declname>H</declname>
+          <defval>boost::none</defval>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Calls the 1-key specific version of evaluateError, which is pure virtual so must be implemented in the derived class. </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="308" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="308" bodyend="319"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor1_1a42ed690bfeafe79ab396126886b05820" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
+        <type>Vector</type>
+        <definition>virtual Vector gtsam::NoiseModelFactor1&lt; VALUE &gt;::evaluateError</definition>
+        <argsstring>(const X &amp;x, boost::optional&lt; Matrix &amp; &gt; H=boost::none) const =0</argsstring>
+        <name>evaluateError</name>
+        <param>
+          <type>const X &amp;</type>
+          <declname>x</declname>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H</declname>
+          <defval>boost::none</defval>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Override this method to finish implementing a unary factor. If the optional Matrix reference argument is specified, it should compute both the function evaluation and its derivative in X. </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="326" column="1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="private-func">
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor1_1a7f153cb8f238a3be2260979af5b590ab" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <templateparamlist>
+          <param>
+            <type>class ARCHIVE</type>
+          </param>
+        </templateparamlist>
+        <type>void</type>
+        <definition>void gtsam::NoiseModelFactor1&lt; VALUE &gt;::serialize</definition>
+        <argsstring>(ARCHIVE &amp;ar, const unsigned int)</argsstring>
+        <name>serialize</name>
+        <param>
+          <type>ARCHIVE &amp;</type>
+          <declname>ar</declname>
+        </param>
+        <param>
+          <type>const unsigned</type>
+          <declname>int</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="334" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="334" bodyend="337"/>
+      </memberdef>
+      </sectiondef>
+    <briefdescription>
+    </briefdescription>
+    <detaileddescription>
+<para>A convenient base class for creating your own <ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref> with 1 variable. To derive from this class, implement <ref refid="classgtsam_1_1NoiseModelFactor1_1a42ed690bfeafe79ab396126886b05820" kindref="member">evaluateError()</ref>.</para><para>Templated on a values structure type. The values structures are typically more general than just vectors, e.g., Rot3 or Pose3, which are objects in non-linear manifolds (Lie groups). </para>    </detaileddescription>
+    <inheritancegraph>
+      <node id="102">
+        <label>Factor</label>
+      </node>
+      <node id="101">
+        <label>gtsam::NonlinearFactor</label>
+        <link refid="classgtsam_1_1NonlinearFactor"/>
+        <childnode refid="102" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="100">
+        <label>gtsam::NoiseModelFactor</label>
+        <link refid="classgtsam_1_1NoiseModelFactor"/>
+        <childnode refid="101" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="99">
+        <label>gtsam::NoiseModelFactor1&lt; VALUE &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor1"/>
+        <childnode refid="100" relation="public-inheritance">
+        </childnode>
+      </node>
+    </inheritancegraph>
+    <collaborationgraph>
+      <node id="106">
+        <label>Factor</label>
+      </node>
+      <node id="105">
+        <label>gtsam::NonlinearFactor</label>
+        <link refid="classgtsam_1_1NonlinearFactor"/>
+        <childnode refid="106" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="104">
+        <label>gtsam::NoiseModelFactor</label>
+        <link refid="classgtsam_1_1NoiseModelFactor"/>
+        <childnode refid="105" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="103">
+        <label>gtsam::NoiseModelFactor1&lt; VALUE &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor1"/>
+        <childnode refid="104" relation="public-inheritance">
+        </childnode>
+      </node>
+    </collaborationgraph>
+    <location file="tests/doc-test-files/NonlinearFactor.h" line="276" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="276" bodyend="338"/>
+    <listofallmembers>
+      <member refid="classgtsam_1_1NonlinearFactor_1a1968f471dc3ea33aaf0226ff7be5ae8c" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor1</scope><name>active</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor1_1a8ed3a4fbfc8843df8a2f21a805e93ef0" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>Base</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor1_1ac98d07dd8f7b70e16ccb9a01abf56b9c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>boost::serialization::access</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1aa98a30a78ade8489214ce2e5b8302777" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor1</scope><name>clone</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1af4f62b52fff1a0527ecdb279de023728" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor1</scope><name>dim</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a616d0335db512e9c333cab83b1923399" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor1</scope><name>equals</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1af6147aff3a33f734435601f6dcafeaf9" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor1</scope><name>error</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor1_1a42ed690bfeafe79ab396126886b05820" prot="public" virt="pure-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>evaluateError</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a16a8a23069ce6ae664f516edc8f36254" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>get_noiseModel</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor1_1af7fe05db115c50d7f3bc2aaa1d6c7950" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>key</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a0c83582a0bd04e112e4c0a17cd4ed324" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor1</scope><name>linearize</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a123e5729d70b4acd6d7e1f70b1a7ced4" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>noiseModel</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a2263eabbefe0eede8c9d10486f61bb4d" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>noiseModel_</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1ad6e8ef3348e042d598617d1d55f20300" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a02cea97db30d27b51feaf1f0444d743c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a4605224417029e9dc58c5267efa9a46d" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor1_1a85c649f81b216f5b5d7e321febc7762c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>NoiseModelFactor1</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor1_1a70a0b32dd5feba3631815614d8386c86" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>NoiseModelFactor1</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a7c719ae67f222f66569ccb3b526cb9cb" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>NonlinearFactor</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a8a7610dba7e9a6f878268c2769ea0e04" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>NonlinearFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a682e0bbaf0c9638b7d0d96148082d1d7" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor1</scope><name>print</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a95f4d57e8646b6df634496aaabb683b5" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>rekey</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a5f760600e8608ef15c825a0f8d1d1855" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>rekey</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor1_1a7f153cb8f238a3be2260979af5b590ab" prot="private" virt="non-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>serialize</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a57d98d52fb6f91ebc54d74746aeb90e4" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>shared_ptr</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor1_1a22cb5d89cc9ec25e2d94004917d890fc" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>This</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor1_1a886bb13688a62b2680c10cdaf7999918" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor1</scope><name>unwhitenedError</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a1b3ea51380315bfd63f60d8d9195b0c1" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>whitenedError</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor1_1a37d19c88478e96cf1dfc065229734ece" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor1</scope><name>X</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1ae1ed5e0fa6c471b57172f7ebaf552187" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor1</scope><name>~NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor1_1aecf0afe14b2af551d62a6e62ee8a8d27" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor1</scope><name>~NoiseModelFactor1</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1ac457810c504de58732d51d61f715c2de" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor1</scope><name>~NonlinearFactor</name></member>
+    </listofallmembers>
+  </compounddef>
+</doxygen>
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/classgtsam_1_1NoiseModelFactor2.xml
@@ -0,0 +1,355 @@
+<?xml version='1.0' encoding='UTF-8' standalone='no'?>
+<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
+  <compounddef id="classgtsam_1_1NoiseModelFactor2" kind="class" language="C++" prot="public" abstract="yes">
+    <compoundname>gtsam::NoiseModelFactor2</compoundname>
+    <basecompoundref refid="classgtsam_1_1NoiseModelFactor" prot="public" virt="non-virtual">gtsam::NoiseModelFactor</basecompoundref>
+    <includes refid="NonlinearFactor_8h" local="no">NonlinearFactor.h</includes>
+    <templateparamlist>
+      <param>
+        <type>class VALUE1</type>
+      </param>
+      <param>
+        <type>class VALUE2</type>
+      </param>
+    </templateparamlist>
+      <sectiondef kind="public-type">
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor2_1a5fb0fe8b056bad2171f84922c5184ef1" prot="public" static="no">
+        <type>VALUE1</type>
+        <definition>typedef VALUE1 gtsam::NoiseModelFactor2&lt; VALUE1, VALUE2 &gt;::X1</definition>
+        <argsstring></argsstring>
+        <name>X1</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="350" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="350" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor2_1a3b3777f359b34892f33784d73cb62234" prot="public" static="no">
+        <type>VALUE2</type>
+        <definition>typedef VALUE2 gtsam::NoiseModelFactor2&lt; VALUE1, VALUE2 &gt;::X2</definition>
+        <argsstring></argsstring>
+        <name>X2</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="351" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="351" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="protected-type">
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor2_1a8c2961991a7f2b253874612fc8124c09" prot="protected" static="no">
+        <type><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref></type>
+        <definition>typedef NoiseModelFactor gtsam::NoiseModelFactor2&lt; VALUE1, VALUE2 &gt;::Base</definition>
+        <argsstring></argsstring>
+        <name>Base</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="355" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="355" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor2_1a2743c4c486e80127e8eca591ee3ffbed" prot="protected" static="no">
+        <type><ref refid="classgtsam_1_1NoiseModelFactor2" kindref="compound">NoiseModelFactor2</ref>&lt; VALUE1, VALUE2 &gt;</type>
+        <definition>typedef NoiseModelFactor2&lt;VALUE1, VALUE2&gt; gtsam::NoiseModelFactor2&lt; VALUE1, VALUE2 &gt;::This</definition>
+        <argsstring></argsstring>
+        <name>This</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="356" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="356" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="friend">
+      <memberdef kind="friend" id="classgtsam_1_1NoiseModelFactor2_1ac98d07dd8f7b70e16ccb9a01abf56b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
+        <type>friend class</type>
+        <definition>friend class boost::serialization::access</definition>
+        <argsstring></argsstring>
+        <name>boost::serialization::access</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Serialization function </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="408" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="408" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="public-func">
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor2_1a04f5873776c784cafd55b4ac05b4b757" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <type></type>
+        <definition>gtsam::NoiseModelFactor2&lt; VALUE1, VALUE2 &gt;::NoiseModelFactor2</definition>
+        <argsstring>()</argsstring>
+        <name>NoiseModelFactor2</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Default Constructor for I/O </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="363" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="363" bodyend="363"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor2_1a35453b054509f5679a29a06b59340cf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <type></type>
+        <definition>gtsam::NoiseModelFactor2&lt; VALUE1, VALUE2 &gt;::NoiseModelFactor2</definition>
+        <argsstring>(const SharedNoiseModel &amp;noiseModel, Key j1, Key j2)</argsstring>
+        <name>NoiseModelFactor2</name>
+        <param>
+          <type>const SharedNoiseModel &amp;</type>
+          <declname>noiseModel</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>j1</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>j2</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Constructor <parameterlist kind="param"><parameteritem>
+<parameternamelist>
+<parametername>noiseModel</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>shared pointer to noise model </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>j1</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>key of the first variable </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>j2</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>key of the second variable </para></parameterdescription>
+</parameteritem>
+</parameterlist>
+</para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="371" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="371" bodyend="372"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor2_1ab629a5dc71461efe61d68faaf5a659f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
+        <type></type>
+        <definition>virtual gtsam::NoiseModelFactor2&lt; VALUE1, VALUE2 &gt;::~NoiseModelFactor2</definition>
+        <argsstring>()</argsstring>
+        <name>~NoiseModelFactor2</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="374" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="374" bodyend="374"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor2_1ae3b88b40b4ee6e9af9eefcde77bf9768" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor2&lt; VALUE1, VALUE2 &gt;::key1</definition>
+        <argsstring>() const </argsstring>
+        <name>key1</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>methods to retrieve both keys </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="377" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="377" bodyend="377"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor2_1a4d27f5d0beaa35e1e4a5f0ef8974c5a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor2&lt; VALUE1, VALUE2 &gt;::key2</definition>
+        <argsstring>() const </argsstring>
+        <name>key2</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="378" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="378" bodyend="378"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor2_1a9640bbbb433383f0b40b5c2d9439415e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
+        <type>Vector</type>
+        <definition>virtual Vector gtsam::NoiseModelFactor2&lt; VALUE1, VALUE2 &gt;::unwhitenedError</definition>
+        <argsstring>(const Values &amp;x, boost::optional&lt; std::vector&lt; Matrix &gt; &amp; &gt; H=boost::none) const </argsstring>
+        <name>unwhitenedError</name>
+        <reimplements refid="classgtsam_1_1NoiseModelFactor_1afd61874915a8076bf83f9d8311fc0e26">unwhitenedError</reimplements>
+        <param>
+          <type>const Values &amp;</type>
+          <declname>x</declname>
+        </param>
+        <param>
+          <type>boost::optional&lt; std::vector&lt; Matrix &gt; &amp; &gt;</type>
+          <declname>H</declname>
+          <defval>boost::none</defval>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Calls the 2-key specific version of evaluateError, which is pure virtual so must be implemented in the derived class. </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="382" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="382" bodyend="394"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor2_1a9aa6dcd7db6734479e2212213b021ec1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
+        <type>Vector</type>
+        <definition>virtual Vector gtsam::NoiseModelFactor2&lt; VALUE1, VALUE2 &gt;::evaluateError</definition>
+        <argsstring>(const X1 &amp;, const X2 &amp;, boost::optional&lt; Matrix &amp; &gt; H1=boost::none, boost::optional&lt; Matrix &amp; &gt; H2=boost::none) const =0</argsstring>
+        <name>evaluateError</name>
+        <param>
+          <type>const X1 &amp;</type>
+        </param>
+        <param>
+          <type>const X2 &amp;</type>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H1</declname>
+          <defval>boost::none</defval>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H2</declname>
+          <defval>boost::none</defval>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Override this method to finish implementing a binary factor. If any of the optional Matrix reference arguments are specified, it should compute both the function evaluation and its derivative(s) in X1 (and/or X2). </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="402" column="1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="private-func">
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor2_1ae600c15f59be175aca5b059e488d7166" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <templateparamlist>
+          <param>
+            <type>class ARCHIVE</type>
+          </param>
+        </templateparamlist>
+        <type>void</type>
+        <definition>void gtsam::NoiseModelFactor2&lt; VALUE1, VALUE2 &gt;::serialize</definition>
+        <argsstring>(ARCHIVE &amp;ar, const unsigned int)</argsstring>
+        <name>serialize</name>
+        <param>
+          <type>ARCHIVE &amp;</type>
+          <declname>ar</declname>
+        </param>
+        <param>
+          <type>const unsigned</type>
+          <declname>int</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="410" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="410" bodyend="413"/>
+      </memberdef>
+      </sectiondef>
+    <briefdescription>
+    </briefdescription>
+    <detaileddescription>
+<para>A convenient base class for creating your own <ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref> with 2 variables. To derive from this class, implement <ref refid="classgtsam_1_1NoiseModelFactor2_1a9aa6dcd7db6734479e2212213b021ec1" kindref="member">evaluateError()</ref>. </para>    </detaileddescription>
+    <inheritancegraph>
+      <node id="110">
+        <label>Factor</label>
+      </node>
+      <node id="109">
+        <label>gtsam::NonlinearFactor</label>
+        <link refid="classgtsam_1_1NonlinearFactor"/>
+        <childnode refid="110" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="108">
+        <label>gtsam::NoiseModelFactor</label>
+        <link refid="classgtsam_1_1NoiseModelFactor"/>
+        <childnode refid="109" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="107">
+        <label>gtsam::NoiseModelFactor2&lt; VALUE1, VALUE2 &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor2"/>
+        <childnode refid="108" relation="public-inheritance">
+        </childnode>
+      </node>
+    </inheritancegraph>
+    <collaborationgraph>
+      <node id="114">
+        <label>Factor</label>
+      </node>
+      <node id="113">
+        <label>gtsam::NonlinearFactor</label>
+        <link refid="classgtsam_1_1NonlinearFactor"/>
+        <childnode refid="114" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="112">
+        <label>gtsam::NoiseModelFactor</label>
+        <link refid="classgtsam_1_1NoiseModelFactor"/>
+        <childnode refid="113" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="111">
+        <label>gtsam::NoiseModelFactor2&lt; VALUE1, VALUE2 &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor2"/>
+        <childnode refid="112" relation="public-inheritance">
+        </childnode>
+      </node>
+    </collaborationgraph>
+    <location file="tests/doc-test-files/NonlinearFactor.h" line="345" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="345" bodyend="414"/>
+    <listofallmembers>
+      <member refid="classgtsam_1_1NonlinearFactor_1a1968f471dc3ea33aaf0226ff7be5ae8c" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor2</scope><name>active</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor2_1a8c2961991a7f2b253874612fc8124c09" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>Base</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor2_1ac98d07dd8f7b70e16ccb9a01abf56b9c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>boost::serialization::access</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1aa98a30a78ade8489214ce2e5b8302777" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor2</scope><name>clone</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1af4f62b52fff1a0527ecdb279de023728" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor2</scope><name>dim</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a616d0335db512e9c333cab83b1923399" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor2</scope><name>equals</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1af6147aff3a33f734435601f6dcafeaf9" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor2</scope><name>error</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor2_1a9aa6dcd7db6734479e2212213b021ec1" prot="public" virt="pure-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>evaluateError</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a16a8a23069ce6ae664f516edc8f36254" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>get_noiseModel</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor2_1ae3b88b40b4ee6e9af9eefcde77bf9768" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>key1</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor2_1a4d27f5d0beaa35e1e4a5f0ef8974c5a6" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>key2</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a0c83582a0bd04e112e4c0a17cd4ed324" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor2</scope><name>linearize</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a123e5729d70b4acd6d7e1f70b1a7ced4" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>noiseModel</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a2263eabbefe0eede8c9d10486f61bb4d" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>noiseModel_</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1ad6e8ef3348e042d598617d1d55f20300" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a02cea97db30d27b51feaf1f0444d743c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a4605224417029e9dc58c5267efa9a46d" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor2_1a04f5873776c784cafd55b4ac05b4b757" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>NoiseModelFactor2</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor2_1a35453b054509f5679a29a06b59340cf1" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>NoiseModelFactor2</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a7c719ae67f222f66569ccb3b526cb9cb" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>NonlinearFactor</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a8a7610dba7e9a6f878268c2769ea0e04" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>NonlinearFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a682e0bbaf0c9638b7d0d96148082d1d7" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor2</scope><name>print</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a95f4d57e8646b6df634496aaabb683b5" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>rekey</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a5f760600e8608ef15c825a0f8d1d1855" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>rekey</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor2_1ae600c15f59be175aca5b059e488d7166" prot="private" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>serialize</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a57d98d52fb6f91ebc54d74746aeb90e4" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>shared_ptr</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor2_1a2743c4c486e80127e8eca591ee3ffbed" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>This</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor2_1a9640bbbb433383f0b40b5c2d9439415e" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor2</scope><name>unwhitenedError</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a1b3ea51380315bfd63f60d8d9195b0c1" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>whitenedError</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor2_1a5fb0fe8b056bad2171f84922c5184ef1" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>X1</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor2_1a3b3777f359b34892f33784d73cb62234" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor2</scope><name>X2</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1ae1ed5e0fa6c471b57172f7ebaf552187" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor2</scope><name>~NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor2_1ab629a5dc71461efe61d68faaf5a659f3" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor2</scope><name>~NoiseModelFactor2</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1ac457810c504de58732d51d61f715c2de" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor2</scope><name>~NonlinearFactor</name></member>
+    </listofallmembers>
+  </compounddef>
+</doxygen>
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/classgtsam_1_1NoiseModelFactor3.xml
@@ -0,0 +1,405 @@
+<?xml version='1.0' encoding='UTF-8' standalone='no'?>
+<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
+  <compounddef id="classgtsam_1_1NoiseModelFactor3" kind="class" language="C++" prot="public" abstract="yes">
+    <compoundname>gtsam::NoiseModelFactor3</compoundname>
+    <basecompoundref refid="classgtsam_1_1NoiseModelFactor" prot="public" virt="non-virtual">gtsam::NoiseModelFactor</basecompoundref>
+    <includes refid="NonlinearFactor_8h" local="no">NonlinearFactor.h</includes>
+    <templateparamlist>
+      <param>
+        <type>class VALUE1</type>
+      </param>
+      <param>
+        <type>class VALUE2</type>
+      </param>
+      <param>
+        <type>class VALUE3</type>
+      </param>
+    </templateparamlist>
+      <sectiondef kind="public-type">
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor3_1a85e11c8ae6f70e0bdf17f9b6405e6501" prot="public" static="no">
+        <type>VALUE1</type>
+        <definition>typedef VALUE1 gtsam::NoiseModelFactor3&lt; VALUE1, VALUE2, VALUE3 &gt;::X1</definition>
+        <argsstring></argsstring>
+        <name>X1</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="425" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="425" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor3_1aaa8424af6ceb0ce3458efe56d52d5187" prot="public" static="no">
+        <type>VALUE2</type>
+        <definition>typedef VALUE2 gtsam::NoiseModelFactor3&lt; VALUE1, VALUE2, VALUE3 &gt;::X2</definition>
+        <argsstring></argsstring>
+        <name>X2</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="426" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="426" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor3_1a9924ba92623c9a10a286ddd1a8b33f2e" prot="public" static="no">
+        <type>VALUE3</type>
+        <definition>typedef VALUE3 gtsam::NoiseModelFactor3&lt; VALUE1, VALUE2, VALUE3 &gt;::X3</definition>
+        <argsstring></argsstring>
+        <name>X3</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="427" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="427" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="protected-type">
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor3_1a45c5f50294af1756fac4d4f59b7e31e5" prot="protected" static="no">
+        <type><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref></type>
+        <definition>typedef NoiseModelFactor gtsam::NoiseModelFactor3&lt; VALUE1, VALUE2, VALUE3 &gt;::Base</definition>
+        <argsstring></argsstring>
+        <name>Base</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="431" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="431" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor3_1a91a0dfdc66913a71ba5daea0ac681745" prot="protected" static="no">
+        <type><ref refid="classgtsam_1_1NoiseModelFactor3" kindref="compound">NoiseModelFactor3</ref>&lt; VALUE1, VALUE2, VALUE3 &gt;</type>
+        <definition>typedef NoiseModelFactor3&lt;VALUE1, VALUE2, VALUE3&gt; gtsam::NoiseModelFactor3&lt; VALUE1, VALUE2, VALUE3 &gt;::This</definition>
+        <argsstring></argsstring>
+        <name>This</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="432" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="432" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="friend">
+      <memberdef kind="friend" id="classgtsam_1_1NoiseModelFactor3_1ac98d07dd8f7b70e16ccb9a01abf56b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
+        <type>friend class</type>
+        <definition>friend class boost::serialization::access</definition>
+        <argsstring></argsstring>
+        <name>boost::serialization::access</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Serialization function </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="485" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="485" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="public-func">
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor3_1a0bf4383cea2cdb0d263e570e98499ac7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <type></type>
+        <definition>gtsam::NoiseModelFactor3&lt; VALUE1, VALUE2, VALUE3 &gt;::NoiseModelFactor3</definition>
+        <argsstring>()</argsstring>
+        <name>NoiseModelFactor3</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Default Constructor for I/O </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="439" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="439" bodyend="439"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor3_1ac2a8e8247e7d55768915fac27a4c078c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <type></type>
+        <definition>gtsam::NoiseModelFactor3&lt; VALUE1, VALUE2, VALUE3 &gt;::NoiseModelFactor3</definition>
+        <argsstring>(const SharedNoiseModel &amp;noiseModel, Key j1, Key j2, Key j3)</argsstring>
+        <name>NoiseModelFactor3</name>
+        <param>
+          <type>const SharedNoiseModel &amp;</type>
+          <declname>noiseModel</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>j1</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>j2</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>j3</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Constructor <parameterlist kind="param"><parameteritem>
+<parameternamelist>
+<parametername>noiseModel</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>shared pointer to noise model </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>j1</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>key of the first variable </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>j2</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>key of the second variable </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>j3</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>key of the third variable </para></parameterdescription>
+</parameteritem>
+</parameterlist>
+</para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="448" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="448" bodyend="449"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor3_1a4b4dcb0572c11a2f920b67d0ca7ac8b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
+        <type></type>
+        <definition>virtual gtsam::NoiseModelFactor3&lt; VALUE1, VALUE2, VALUE3 &gt;::~NoiseModelFactor3</definition>
+        <argsstring>()</argsstring>
+        <name>~NoiseModelFactor3</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="451" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="451" bodyend="451"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor3_1a535f2bec61538509696513b2ab6bbf0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor3&lt; VALUE1, VALUE2, VALUE3 &gt;::key1</definition>
+        <argsstring>() const </argsstring>
+        <name>key1</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>methods to retrieve keys </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="454" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="454" bodyend="454"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor3_1af049e3934c4588d78810051272bdd995" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor3&lt; VALUE1, VALUE2, VALUE3 &gt;::key2</definition>
+        <argsstring>() const </argsstring>
+        <name>key2</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="455" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="455" bodyend="455"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor3_1ae8722af2eb7ac282ba82e49fca1264e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor3&lt; VALUE1, VALUE2, VALUE3 &gt;::key3</definition>
+        <argsstring>() const </argsstring>
+        <name>key3</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="456" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="456" bodyend="456"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor3_1aab8e3316ef77cecc1bd1909a2c0eed33" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
+        <type>Vector</type>
+        <definition>virtual Vector gtsam::NoiseModelFactor3&lt; VALUE1, VALUE2, VALUE3 &gt;::unwhitenedError</definition>
+        <argsstring>(const Values &amp;x, boost::optional&lt; std::vector&lt; Matrix &gt; &amp; &gt; H=boost::none) const </argsstring>
+        <name>unwhitenedError</name>
+        <reimplements refid="classgtsam_1_1NoiseModelFactor_1afd61874915a8076bf83f9d8311fc0e26">unwhitenedError</reimplements>
+        <param>
+          <type>const Values &amp;</type>
+          <declname>x</declname>
+        </param>
+        <param>
+          <type>boost::optional&lt; std::vector&lt; Matrix &gt; &amp; &gt;</type>
+          <declname>H</declname>
+          <defval>boost::none</defval>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Calls the 3-key specific version of evaluateError, which is pure virtual so must be implemented in the derived class. </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="460" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="460" bodyend="469"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor3_1a78613881d348f96be1a158b9bb812950" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
+        <type>Vector</type>
+        <definition>virtual Vector gtsam::NoiseModelFactor3&lt; VALUE1, VALUE2, VALUE3 &gt;::evaluateError</definition>
+        <argsstring>(const X1 &amp;, const X2 &amp;, const X3 &amp;, boost::optional&lt; Matrix &amp; &gt; H1=boost::none, boost::optional&lt; Matrix &amp; &gt; H2=boost::none, boost::optional&lt; Matrix &amp; &gt; H3=boost::none) const =0</argsstring>
+        <name>evaluateError</name>
+        <param>
+          <type>const X1 &amp;</type>
+        </param>
+        <param>
+          <type>const X2 &amp;</type>
+        </param>
+        <param>
+          <type>const X3 &amp;</type>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H1</declname>
+          <defval>boost::none</defval>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H2</declname>
+          <defval>boost::none</defval>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H3</declname>
+          <defval>boost::none</defval>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Override this method to finish implementing a trinary factor. If any of the optional Matrix reference arguments are specified, it should compute both the function evaluation and its derivative(s) in X1 (and/or X2, X3). </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="477" column="1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="private-func">
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor3_1a61eb4f72c087d840f4c66db44772437b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <templateparamlist>
+          <param>
+            <type>class ARCHIVE</type>
+          </param>
+        </templateparamlist>
+        <type>void</type>
+        <definition>void gtsam::NoiseModelFactor3&lt; VALUE1, VALUE2, VALUE3 &gt;::serialize</definition>
+        <argsstring>(ARCHIVE &amp;ar, const unsigned int)</argsstring>
+        <name>serialize</name>
+        <param>
+          <type>ARCHIVE &amp;</type>
+          <declname>ar</declname>
+        </param>
+        <param>
+          <type>const unsigned</type>
+          <declname>int</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="487" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="487" bodyend="490"/>
+      </memberdef>
+      </sectiondef>
+    <briefdescription>
+    </briefdescription>
+    <detaileddescription>
+<para>A convenient base class for creating your own <ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref> with 3 variables. To derive from this class, implement <ref refid="classgtsam_1_1NoiseModelFactor3_1a78613881d348f96be1a158b9bb812950" kindref="member">evaluateError()</ref>. </para>    </detaileddescription>
+    <inheritancegraph>
+      <node id="118">
+        <label>Factor</label>
+      </node>
+      <node id="117">
+        <label>gtsam::NonlinearFactor</label>
+        <link refid="classgtsam_1_1NonlinearFactor"/>
+        <childnode refid="118" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="116">
+        <label>gtsam::NoiseModelFactor</label>
+        <link refid="classgtsam_1_1NoiseModelFactor"/>
+        <childnode refid="117" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="115">
+        <label>gtsam::NoiseModelFactor3&lt; VALUE1, VALUE2, VALUE3 &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor3"/>
+        <childnode refid="116" relation="public-inheritance">
+        </childnode>
+      </node>
+    </inheritancegraph>
+    <collaborationgraph>
+      <node id="122">
+        <label>Factor</label>
+      </node>
+      <node id="121">
+        <label>gtsam::NonlinearFactor</label>
+        <link refid="classgtsam_1_1NonlinearFactor"/>
+        <childnode refid="122" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="120">
+        <label>gtsam::NoiseModelFactor</label>
+        <link refid="classgtsam_1_1NoiseModelFactor"/>
+        <childnode refid="121" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="119">
+        <label>gtsam::NoiseModelFactor3&lt; VALUE1, VALUE2, VALUE3 &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor3"/>
+        <childnode refid="120" relation="public-inheritance">
+        </childnode>
+      </node>
+    </collaborationgraph>
+    <location file="tests/doc-test-files/NonlinearFactor.h" line="420" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="420" bodyend="491"/>
+    <listofallmembers>
+      <member refid="classgtsam_1_1NonlinearFactor_1a1968f471dc3ea33aaf0226ff7be5ae8c" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor3</scope><name>active</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor3_1a45c5f50294af1756fac4d4f59b7e31e5" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>Base</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor3_1ac98d07dd8f7b70e16ccb9a01abf56b9c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>boost::serialization::access</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1aa98a30a78ade8489214ce2e5b8302777" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor3</scope><name>clone</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1af4f62b52fff1a0527ecdb279de023728" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor3</scope><name>dim</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a616d0335db512e9c333cab83b1923399" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor3</scope><name>equals</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1af6147aff3a33f734435601f6dcafeaf9" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor3</scope><name>error</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor3_1a78613881d348f96be1a158b9bb812950" prot="public" virt="pure-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>evaluateError</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a16a8a23069ce6ae664f516edc8f36254" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>get_noiseModel</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor3_1a535f2bec61538509696513b2ab6bbf0b" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>key1</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor3_1af049e3934c4588d78810051272bdd995" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>key2</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor3_1ae8722af2eb7ac282ba82e49fca1264e1" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>key3</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a0c83582a0bd04e112e4c0a17cd4ed324" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor3</scope><name>linearize</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a123e5729d70b4acd6d7e1f70b1a7ced4" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>noiseModel</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a2263eabbefe0eede8c9d10486f61bb4d" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>noiseModel_</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1ad6e8ef3348e042d598617d1d55f20300" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a02cea97db30d27b51feaf1f0444d743c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a4605224417029e9dc58c5267efa9a46d" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor3_1a0bf4383cea2cdb0d263e570e98499ac7" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>NoiseModelFactor3</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor3_1ac2a8e8247e7d55768915fac27a4c078c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>NoiseModelFactor3</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a7c719ae67f222f66569ccb3b526cb9cb" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>NonlinearFactor</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a8a7610dba7e9a6f878268c2769ea0e04" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>NonlinearFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a682e0bbaf0c9638b7d0d96148082d1d7" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor3</scope><name>print</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a95f4d57e8646b6df634496aaabb683b5" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>rekey</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a5f760600e8608ef15c825a0f8d1d1855" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>rekey</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor3_1a61eb4f72c087d840f4c66db44772437b" prot="private" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>serialize</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a57d98d52fb6f91ebc54d74746aeb90e4" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>shared_ptr</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor3_1a91a0dfdc66913a71ba5daea0ac681745" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>This</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor3_1aab8e3316ef77cecc1bd1909a2c0eed33" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor3</scope><name>unwhitenedError</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a1b3ea51380315bfd63f60d8d9195b0c1" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>whitenedError</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor3_1a85e11c8ae6f70e0bdf17f9b6405e6501" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>X1</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor3_1aaa8424af6ceb0ce3458efe56d52d5187" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>X2</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor3_1a9924ba92623c9a10a286ddd1a8b33f2e" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor3</scope><name>X3</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1ae1ed5e0fa6c471b57172f7ebaf552187" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor3</scope><name>~NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor3_1a4b4dcb0572c11a2f920b67d0ca7ac8b7" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor3</scope><name>~NoiseModelFactor3</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1ac457810c504de58732d51d61f715c2de" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor3</scope><name>~NonlinearFactor</name></member>
+    </listofallmembers>
+  </compounddef>
+</doxygen>
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/classgtsam_1_1NoiseModelFactor4.xml
@@ -0,0 +1,455 @@
+<?xml version='1.0' encoding='UTF-8' standalone='no'?>
+<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
+  <compounddef id="classgtsam_1_1NoiseModelFactor4" kind="class" language="C++" prot="public" abstract="yes">
+    <compoundname>gtsam::NoiseModelFactor4</compoundname>
+    <basecompoundref refid="classgtsam_1_1NoiseModelFactor" prot="public" virt="non-virtual">gtsam::NoiseModelFactor</basecompoundref>
+    <includes refid="NonlinearFactor_8h" local="no">NonlinearFactor.h</includes>
+    <templateparamlist>
+      <param>
+        <type>class VALUE1</type>
+      </param>
+      <param>
+        <type>class VALUE2</type>
+      </param>
+      <param>
+        <type>class VALUE3</type>
+      </param>
+      <param>
+        <type>class VALUE4</type>
+      </param>
+    </templateparamlist>
+      <sectiondef kind="public-type">
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor4_1ae43138cc390ef4b2956e334f160df42e" prot="public" static="no">
+        <type>VALUE1</type>
+        <definition>typedef VALUE1 gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;::X1</definition>
+        <argsstring></argsstring>
+        <name>X1</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="502" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="502" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor4_1aafd5bc6e588c7e1084897814831713c5" prot="public" static="no">
+        <type>VALUE2</type>
+        <definition>typedef VALUE2 gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;::X2</definition>
+        <argsstring></argsstring>
+        <name>X2</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="503" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="503" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor4_1aa07132c1d7f42154fafd026c702ca240" prot="public" static="no">
+        <type>VALUE3</type>
+        <definition>typedef VALUE3 gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;::X3</definition>
+        <argsstring></argsstring>
+        <name>X3</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="504" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="504" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor4_1a6ca1a804d790e17f108c8e14df2c5077" prot="public" static="no">
+        <type>VALUE4</type>
+        <definition>typedef VALUE4 gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;::X4</definition>
+        <argsstring></argsstring>
+        <name>X4</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="505" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="505" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="protected-type">
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor4_1a846f05b113e5553fe7b42a9a49906f98" prot="protected" static="no">
+        <type><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref></type>
+        <definition>typedef NoiseModelFactor gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;::Base</definition>
+        <argsstring></argsstring>
+        <name>Base</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="509" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="509" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor4_1a372757bbf75dee8eaf33b479b31f06a1" prot="protected" static="no">
+        <type><ref refid="classgtsam_1_1NoiseModelFactor4" kindref="compound">NoiseModelFactor4</ref>&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;</type>
+        <definition>typedef NoiseModelFactor4&lt;VALUE1, VALUE2, VALUE3, VALUE4&gt; gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;::This</definition>
+        <argsstring></argsstring>
+        <name>This</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="510" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="510" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="friend">
+      <memberdef kind="friend" id="classgtsam_1_1NoiseModelFactor4_1ac98d07dd8f7b70e16ccb9a01abf56b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
+        <type>friend class</type>
+        <definition>friend class boost::serialization::access</definition>
+        <argsstring></argsstring>
+        <name>boost::serialization::access</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Serialization function </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="566" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="566" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="public-func">
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor4_1a65adc8d1272df63390168b26f4f7bc70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <type></type>
+        <definition>gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;::NoiseModelFactor4</definition>
+        <argsstring>()</argsstring>
+        <name>NoiseModelFactor4</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Default Constructor for I/O </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="517" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="517" bodyend="517"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor4_1a8ce3daa05897e12db9e38a9c96043ce3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <type></type>
+        <definition>gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;::NoiseModelFactor4</definition>
+        <argsstring>(const SharedNoiseModel &amp;noiseModel, Key j1, Key j2, Key j3, Key j4)</argsstring>
+        <name>NoiseModelFactor4</name>
+        <param>
+          <type>const SharedNoiseModel &amp;</type>
+          <declname>noiseModel</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>j1</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>j2</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>j3</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>j4</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Constructor <parameterlist kind="param"><parameteritem>
+<parameternamelist>
+<parametername>noiseModel</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>shared pointer to noise model </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>j1</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>key of the first variable </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>j2</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>key of the second variable </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>j3</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>key of the third variable </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>j4</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>key of the fourth variable </para></parameterdescription>
+</parameteritem>
+</parameterlist>
+</para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="527" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="527" bodyend="528"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor4_1a3e53af328261232767713e26fa0d35d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
+        <type></type>
+        <definition>virtual gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;::~NoiseModelFactor4</definition>
+        <argsstring>()</argsstring>
+        <name>~NoiseModelFactor4</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="530" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="530" bodyend="530"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor4_1a4339880be87fa2a533aa07324481f7b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;::key1</definition>
+        <argsstring>() const </argsstring>
+        <name>key1</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>methods to retrieve keys </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="533" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="533" bodyend="533"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor4_1acb1d3940d9b5ee1aa7c9c3c3c1a21ed9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;::key2</definition>
+        <argsstring>() const </argsstring>
+        <name>key2</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="534" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="534" bodyend="534"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor4_1ac1111c7becb0904f141dc07eff1a4e7c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;::key3</definition>
+        <argsstring>() const </argsstring>
+        <name>key3</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="535" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="535" bodyend="535"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor4_1a6d9ee65e09dfe61a663c60d97f01b341" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;::key4</definition>
+        <argsstring>() const </argsstring>
+        <name>key4</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="536" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="536" bodyend="536"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor4_1a6a79ae22fc40447c8dc183a951243440" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
+        <type>Vector</type>
+        <definition>virtual Vector gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;::unwhitenedError</definition>
+        <argsstring>(const Values &amp;x, boost::optional&lt; std::vector&lt; Matrix &gt; &amp; &gt; H=boost::none) const </argsstring>
+        <name>unwhitenedError</name>
+        <reimplements refid="classgtsam_1_1NoiseModelFactor_1afd61874915a8076bf83f9d8311fc0e26">unwhitenedError</reimplements>
+        <param>
+          <type>const Values &amp;</type>
+          <declname>x</declname>
+        </param>
+        <param>
+          <type>boost::optional&lt; std::vector&lt; Matrix &gt; &amp; &gt;</type>
+          <declname>H</declname>
+          <defval>boost::none</defval>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Calls the 4-key specific version of evaluateError, which is pure virtual so must be implemented in the derived class. </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="540" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="540" bodyend="549"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor4_1a5e4197ee6a113e77d2abc1dbbebb0857" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
+        <type>Vector</type>
+        <definition>virtual Vector gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;::evaluateError</definition>
+        <argsstring>(const X1 &amp;, const X2 &amp;, const X3 &amp;, const X4 &amp;, boost::optional&lt; Matrix &amp; &gt; H1=boost::none, boost::optional&lt; Matrix &amp; &gt; H2=boost::none, boost::optional&lt; Matrix &amp; &gt; H3=boost::none, boost::optional&lt; Matrix &amp; &gt; H4=boost::none) const =0</argsstring>
+        <name>evaluateError</name>
+        <param>
+          <type>const X1 &amp;</type>
+        </param>
+        <param>
+          <type>const X2 &amp;</type>
+        </param>
+        <param>
+          <type>const X3 &amp;</type>
+        </param>
+        <param>
+          <type>const X4 &amp;</type>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H1</declname>
+          <defval>boost::none</defval>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H2</declname>
+          <defval>boost::none</defval>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H3</declname>
+          <defval>boost::none</defval>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H4</declname>
+          <defval>boost::none</defval>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Override this method to finish implementing a 4-way factor. If any of the optional Matrix reference arguments are specified, it should compute both the function evaluation and its derivative(s) in X1 (and/or X2, X3). </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="557" column="1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="private-func">
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor4_1a51fda42bdf2b1b442b5a8ed204386816" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <templateparamlist>
+          <param>
+            <type>class ARCHIVE</type>
+          </param>
+        </templateparamlist>
+        <type>void</type>
+        <definition>void gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;::serialize</definition>
+        <argsstring>(ARCHIVE &amp;ar, const unsigned int)</argsstring>
+        <name>serialize</name>
+        <param>
+          <type>ARCHIVE &amp;</type>
+          <declname>ar</declname>
+        </param>
+        <param>
+          <type>const unsigned</type>
+          <declname>int</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="568" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="568" bodyend="571"/>
+      </memberdef>
+      </sectiondef>
+    <briefdescription>
+    </briefdescription>
+    <detaileddescription>
+<para>A convenient base class for creating your own <ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref> with 4 variables. To derive from this class, implement <ref refid="classgtsam_1_1NoiseModelFactor4_1a5e4197ee6a113e77d2abc1dbbebb0857" kindref="member">evaluateError()</ref>. </para>    </detaileddescription>
+    <inheritancegraph>
+      <node id="126">
+        <label>Factor</label>
+      </node>
+      <node id="123">
+        <label>gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor4"/>
+        <childnode refid="124" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="125">
+        <label>gtsam::NonlinearFactor</label>
+        <link refid="classgtsam_1_1NonlinearFactor"/>
+        <childnode refid="126" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="124">
+        <label>gtsam::NoiseModelFactor</label>
+        <link refid="classgtsam_1_1NoiseModelFactor"/>
+        <childnode refid="125" relation="public-inheritance">
+        </childnode>
+      </node>
+    </inheritancegraph>
+    <collaborationgraph>
+      <node id="130">
+        <label>Factor</label>
+      </node>
+      <node id="127">
+        <label>gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor4"/>
+        <childnode refid="128" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="129">
+        <label>gtsam::NonlinearFactor</label>
+        <link refid="classgtsam_1_1NonlinearFactor"/>
+        <childnode refid="130" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="128">
+        <label>gtsam::NoiseModelFactor</label>
+        <link refid="classgtsam_1_1NoiseModelFactor"/>
+        <childnode refid="129" relation="public-inheritance">
+        </childnode>
+      </node>
+    </collaborationgraph>
+    <location file="tests/doc-test-files/NonlinearFactor.h" line="497" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="497" bodyend="572"/>
+    <listofallmembers>
+      <member refid="classgtsam_1_1NonlinearFactor_1a1968f471dc3ea33aaf0226ff7be5ae8c" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor4</scope><name>active</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor4_1a846f05b113e5553fe7b42a9a49906f98" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>Base</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor4_1ac98d07dd8f7b70e16ccb9a01abf56b9c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>boost::serialization::access</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1aa98a30a78ade8489214ce2e5b8302777" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor4</scope><name>clone</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1af4f62b52fff1a0527ecdb279de023728" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor4</scope><name>dim</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a616d0335db512e9c333cab83b1923399" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor4</scope><name>equals</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1af6147aff3a33f734435601f6dcafeaf9" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor4</scope><name>error</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor4_1a5e4197ee6a113e77d2abc1dbbebb0857" prot="public" virt="pure-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>evaluateError</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a16a8a23069ce6ae664f516edc8f36254" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>get_noiseModel</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor4_1a4339880be87fa2a533aa07324481f7b6" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>key1</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor4_1acb1d3940d9b5ee1aa7c9c3c3c1a21ed9" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>key2</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor4_1ac1111c7becb0904f141dc07eff1a4e7c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>key3</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor4_1a6d9ee65e09dfe61a663c60d97f01b341" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>key4</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a0c83582a0bd04e112e4c0a17cd4ed324" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor4</scope><name>linearize</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a123e5729d70b4acd6d7e1f70b1a7ced4" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>noiseModel</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a2263eabbefe0eede8c9d10486f61bb4d" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>noiseModel_</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1ad6e8ef3348e042d598617d1d55f20300" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a02cea97db30d27b51feaf1f0444d743c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a4605224417029e9dc58c5267efa9a46d" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor4_1a65adc8d1272df63390168b26f4f7bc70" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>NoiseModelFactor4</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor4_1a8ce3daa05897e12db9e38a9c96043ce3" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>NoiseModelFactor4</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a7c719ae67f222f66569ccb3b526cb9cb" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>NonlinearFactor</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a8a7610dba7e9a6f878268c2769ea0e04" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>NonlinearFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a682e0bbaf0c9638b7d0d96148082d1d7" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor4</scope><name>print</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a95f4d57e8646b6df634496aaabb683b5" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>rekey</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a5f760600e8608ef15c825a0f8d1d1855" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>rekey</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor4_1a51fda42bdf2b1b442b5a8ed204386816" prot="private" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>serialize</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a57d98d52fb6f91ebc54d74746aeb90e4" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>shared_ptr</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor4_1a372757bbf75dee8eaf33b479b31f06a1" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>This</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor4_1a6a79ae22fc40447c8dc183a951243440" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor4</scope><name>unwhitenedError</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a1b3ea51380315bfd63f60d8d9195b0c1" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>whitenedError</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor4_1ae43138cc390ef4b2956e334f160df42e" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>X1</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor4_1aafd5bc6e588c7e1084897814831713c5" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>X2</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor4_1aa07132c1d7f42154fafd026c702ca240" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>X3</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor4_1a6ca1a804d790e17f108c8e14df2c5077" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor4</scope><name>X4</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1ae1ed5e0fa6c471b57172f7ebaf552187" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor4</scope><name>~NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor4_1a3e53af328261232767713e26fa0d35d5" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor4</scope><name>~NoiseModelFactor4</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1ac457810c504de58732d51d61f715c2de" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor4</scope><name>~NonlinearFactor</name></member>
+    </listofallmembers>
+  </compounddef>
+</doxygen>
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/classgtsam_1_1NoiseModelFactor5.xml
@@ -0,0 +1,505 @@
+<?xml version='1.0' encoding='UTF-8' standalone='no'?>
+<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
+  <compounddef id="classgtsam_1_1NoiseModelFactor5" kind="class" language="C++" prot="public" abstract="yes">
+    <compoundname>gtsam::NoiseModelFactor5</compoundname>
+    <basecompoundref refid="classgtsam_1_1NoiseModelFactor" prot="public" virt="non-virtual">gtsam::NoiseModelFactor</basecompoundref>
+    <includes refid="NonlinearFactor_8h" local="no">NonlinearFactor.h</includes>
+    <templateparamlist>
+      <param>
+        <type>class VALUE1</type>
+      </param>
+      <param>
+        <type>class VALUE2</type>
+      </param>
+      <param>
+        <type>class VALUE3</type>
+      </param>
+      <param>
+        <type>class VALUE4</type>
+      </param>
+      <param>
+        <type>class VALUE5</type>
+      </param>
+    </templateparamlist>
+      <sectiondef kind="public-type">
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor5_1a514869f1357a9e05118bfab0c6fa97e2" prot="public" static="no">
+        <type>VALUE1</type>
+        <definition>typedef VALUE1 gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::X1</definition>
+        <argsstring></argsstring>
+        <name>X1</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="583" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="583" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor5_1ad9181205117e8efb56ebe4f297645d3e" prot="public" static="no">
+        <type>VALUE2</type>
+        <definition>typedef VALUE2 gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::X2</definition>
+        <argsstring></argsstring>
+        <name>X2</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="584" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="584" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor5_1aeb3efb9dbda7a2fef53c55a4513ab4ec" prot="public" static="no">
+        <type>VALUE3</type>
+        <definition>typedef VALUE3 gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::X3</definition>
+        <argsstring></argsstring>
+        <name>X3</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="585" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="585" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor5_1a4e272b4742d0477f444995ec73e097c7" prot="public" static="no">
+        <type>VALUE4</type>
+        <definition>typedef VALUE4 gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::X4</definition>
+        <argsstring></argsstring>
+        <name>X4</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="586" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="586" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor5_1afaf024c990892895e5f5ed0b34758f27" prot="public" static="no">
+        <type>VALUE5</type>
+        <definition>typedef VALUE5 gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::X5</definition>
+        <argsstring></argsstring>
+        <name>X5</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="587" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="587" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="protected-type">
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor5_1a594617cffc3d1a9985cd64e34936a7f5" prot="protected" static="no">
+        <type><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref></type>
+        <definition>typedef NoiseModelFactor gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::Base</definition>
+        <argsstring></argsstring>
+        <name>Base</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="591" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="591" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor5_1a19020d6d909366475872911b6dfc16df" prot="protected" static="no">
+        <type><ref refid="classgtsam_1_1NoiseModelFactor5" kindref="compound">NoiseModelFactor5</ref>&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;</type>
+        <definition>typedef NoiseModelFactor5&lt;VALUE1, VALUE2, VALUE3, VALUE4, VALUE5&gt; gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::This</definition>
+        <argsstring></argsstring>
+        <name>This</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="592" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="592" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="friend">
+      <memberdef kind="friend" id="classgtsam_1_1NoiseModelFactor5_1ac98d07dd8f7b70e16ccb9a01abf56b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
+        <type>friend class</type>
+        <definition>friend class boost::serialization::access</definition>
+        <argsstring></argsstring>
+        <name>boost::serialization::access</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Serialization function </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="651" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="651" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="public-func">
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1a424c4633f6c1907d0dd3381cffbed82a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <type></type>
+        <definition>gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::NoiseModelFactor5</definition>
+        <argsstring>()</argsstring>
+        <name>NoiseModelFactor5</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Default Constructor for I/O </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="599" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="599" bodyend="599"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1a01d2e8a5253a67ceac02320a719c5280" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <type></type>
+        <definition>gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::NoiseModelFactor5</definition>
+        <argsstring>(const SharedNoiseModel &amp;noiseModel, Key j1, Key j2, Key j3, Key j4, Key j5)</argsstring>
+        <name>NoiseModelFactor5</name>
+        <param>
+          <type>const SharedNoiseModel &amp;</type>
+          <declname>noiseModel</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>j1</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>j2</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>j3</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>j4</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>j5</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Constructor <parameterlist kind="param"><parameteritem>
+<parameternamelist>
+<parametername>noiseModel</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>shared pointer to noise model </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>j1</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>key of the first variable </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>j2</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>key of the second variable </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>j3</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>key of the third variable </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>j4</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>key of the fourth variable </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>j5</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>key of the fifth variable </para></parameterdescription>
+</parameteritem>
+</parameterlist>
+</para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="610" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="610" bodyend="611"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1ae16654ff529ddcfedd1b394f7716412d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
+        <type></type>
+        <definition>virtual gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::~NoiseModelFactor5</definition>
+        <argsstring>()</argsstring>
+        <name>~NoiseModelFactor5</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="613" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="613" bodyend="613"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1a23886196ba086677b1e2168e17a34280" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::key1</definition>
+        <argsstring>() const </argsstring>
+        <name>key1</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>methods to retrieve keys </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="616" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="616" bodyend="616"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1a464749bd22a65ee29f99452f194eaf54" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::key2</definition>
+        <argsstring>() const </argsstring>
+        <name>key2</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="617" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="617" bodyend="617"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1a028c4fbddfe09a66ac3780e23bd25fcd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::key3</definition>
+        <argsstring>() const </argsstring>
+        <name>key3</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="618" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="618" bodyend="618"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1aac1933a0fa685709867f12cb636c98d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::key4</definition>
+        <argsstring>() const </argsstring>
+        <name>key4</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="619" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="619" bodyend="619"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1a529d24a558fe3e6bd1dc4839c9778f0c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::key5</definition>
+        <argsstring>() const </argsstring>
+        <name>key5</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="620" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="620" bodyend="620"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1a701b7a764f18310b4eea14ee023c922b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
+        <type>Vector</type>
+        <definition>virtual Vector gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::unwhitenedError</definition>
+        <argsstring>(const Values &amp;x, boost::optional&lt; std::vector&lt; Matrix &gt; &amp; &gt; H=boost::none) const </argsstring>
+        <name>unwhitenedError</name>
+        <reimplements refid="classgtsam_1_1NoiseModelFactor_1afd61874915a8076bf83f9d8311fc0e26">unwhitenedError</reimplements>
+        <param>
+          <type>const Values &amp;</type>
+          <declname>x</declname>
+        </param>
+        <param>
+          <type>boost::optional&lt; std::vector&lt; Matrix &gt; &amp; &gt;</type>
+          <declname>H</declname>
+          <defval>boost::none</defval>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Calls the 5-key specific version of evaluateError, which is pure virtual so must be implemented in the derived class. </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="624" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="624" bodyend="633"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1af0adaca3d551e42404aaf98c3053b009" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
+        <type>Vector</type>
+        <definition>virtual Vector gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::evaluateError</definition>
+        <argsstring>(const X1 &amp;, const X2 &amp;, const X3 &amp;, const X4 &amp;, const X5 &amp;, boost::optional&lt; Matrix &amp; &gt; H1=boost::none, boost::optional&lt; Matrix &amp; &gt; H2=boost::none, boost::optional&lt; Matrix &amp; &gt; H3=boost::none, boost::optional&lt; Matrix &amp; &gt; H4=boost::none, boost::optional&lt; Matrix &amp; &gt; H5=boost::none) const =0</argsstring>
+        <name>evaluateError</name>
+        <param>
+          <type>const X1 &amp;</type>
+        </param>
+        <param>
+          <type>const X2 &amp;</type>
+        </param>
+        <param>
+          <type>const X3 &amp;</type>
+        </param>
+        <param>
+          <type>const X4 &amp;</type>
+        </param>
+        <param>
+          <type>const X5 &amp;</type>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H1</declname>
+          <defval>boost::none</defval>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H2</declname>
+          <defval>boost::none</defval>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H3</declname>
+          <defval>boost::none</defval>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H4</declname>
+          <defval>boost::none</defval>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H5</declname>
+          <defval>boost::none</defval>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Override this method to finish implementing a 5-way factor. If any of the optional Matrix reference arguments are specified, it should compute both the function evaluation and its derivative(s) in X1 (and/or X2, X3). </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="641" column="1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="private-func">
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1a02db3a5d618d3738c5ec277626a2b598" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <templateparamlist>
+          <param>
+            <type>class ARCHIVE</type>
+          </param>
+        </templateparamlist>
+        <type>void</type>
+        <definition>void gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::serialize</definition>
+        <argsstring>(ARCHIVE &amp;ar, const unsigned int)</argsstring>
+        <name>serialize</name>
+        <param>
+          <type>ARCHIVE &amp;</type>
+          <declname>ar</declname>
+        </param>
+        <param>
+          <type>const unsigned</type>
+          <declname>int</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="653" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="653" bodyend="656"/>
+      </memberdef>
+      </sectiondef>
+    <briefdescription>
+    </briefdescription>
+    <detaileddescription>
+<para>A convenient base class for creating your own <ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref> with 5 variables. To derive from this class, implement <ref refid="classgtsam_1_1NoiseModelFactor5_1af0adaca3d551e42404aaf98c3053b009" kindref="member">evaluateError()</ref>. </para>    </detaileddescription>
+    <inheritancegraph>
+      <node id="134">
+        <label>Factor</label>
+      </node>
+      <node id="131">
+        <label>gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor5"/>
+        <childnode refid="132" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="133">
+        <label>gtsam::NonlinearFactor</label>
+        <link refid="classgtsam_1_1NonlinearFactor"/>
+        <childnode refid="134" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="132">
+        <label>gtsam::NoiseModelFactor</label>
+        <link refid="classgtsam_1_1NoiseModelFactor"/>
+        <childnode refid="133" relation="public-inheritance">
+        </childnode>
+      </node>
+    </inheritancegraph>
+    <collaborationgraph>
+      <node id="138">
+        <label>Factor</label>
+      </node>
+      <node id="135">
+        <label>gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor5"/>
+        <childnode refid="136" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="137">
+        <label>gtsam::NonlinearFactor</label>
+        <link refid="classgtsam_1_1NonlinearFactor"/>
+        <childnode refid="138" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="136">
+        <label>gtsam::NoiseModelFactor</label>
+        <link refid="classgtsam_1_1NoiseModelFactor"/>
+        <childnode refid="137" relation="public-inheritance">
+        </childnode>
+      </node>
+    </collaborationgraph>
+    <location file="tests/doc-test-files/NonlinearFactor.h" line="578" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="578" bodyend="657"/>
+    <listofallmembers>
+      <member refid="classgtsam_1_1NonlinearFactor_1a1968f471dc3ea33aaf0226ff7be5ae8c" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>active</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor5_1a594617cffc3d1a9985cd64e34936a7f5" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>Base</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor5_1ac98d07dd8f7b70e16ccb9a01abf56b9c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>boost::serialization::access</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1aa98a30a78ade8489214ce2e5b8302777" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>clone</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1af4f62b52fff1a0527ecdb279de023728" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>dim</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a616d0335db512e9c333cab83b1923399" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>equals</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1af6147aff3a33f734435601f6dcafeaf9" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>error</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor5_1af0adaca3d551e42404aaf98c3053b009" prot="public" virt="pure-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>evaluateError</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a16a8a23069ce6ae664f516edc8f36254" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>get_noiseModel</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor5_1a23886196ba086677b1e2168e17a34280" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>key1</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor5_1a464749bd22a65ee29f99452f194eaf54" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>key2</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor5_1a028c4fbddfe09a66ac3780e23bd25fcd" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>key3</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor5_1aac1933a0fa685709867f12cb636c98d3" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>key4</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor5_1a529d24a558fe3e6bd1dc4839c9778f0c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>key5</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a0c83582a0bd04e112e4c0a17cd4ed324" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>linearize</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a123e5729d70b4acd6d7e1f70b1a7ced4" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>noiseModel</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a2263eabbefe0eede8c9d10486f61bb4d" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>noiseModel_</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1ad6e8ef3348e042d598617d1d55f20300" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a02cea97db30d27b51feaf1f0444d743c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a4605224417029e9dc58c5267efa9a46d" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor5_1a424c4633f6c1907d0dd3381cffbed82a" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>NoiseModelFactor5</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor5_1a01d2e8a5253a67ceac02320a719c5280" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>NoiseModelFactor5</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a7c719ae67f222f66569ccb3b526cb9cb" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>NonlinearFactor</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a8a7610dba7e9a6f878268c2769ea0e04" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>NonlinearFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a682e0bbaf0c9638b7d0d96148082d1d7" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>print</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a95f4d57e8646b6df634496aaabb683b5" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>rekey</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a5f760600e8608ef15c825a0f8d1d1855" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>rekey</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor5_1a02db3a5d618d3738c5ec277626a2b598" prot="private" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>serialize</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a57d98d52fb6f91ebc54d74746aeb90e4" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>shared_ptr</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor5_1a19020d6d909366475872911b6dfc16df" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>This</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor5_1a701b7a764f18310b4eea14ee023c922b" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>unwhitenedError</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a1b3ea51380315bfd63f60d8d9195b0c1" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>whitenedError</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor5_1a514869f1357a9e05118bfab0c6fa97e2" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>X1</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor5_1ad9181205117e8efb56ebe4f297645d3e" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>X2</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor5_1aeb3efb9dbda7a2fef53c55a4513ab4ec" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>X3</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor5_1a4e272b4742d0477f444995ec73e097c7" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>X4</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor5_1afaf024c990892895e5f5ed0b34758f27" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>X5</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1ae1ed5e0fa6c471b57172f7ebaf552187" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>~NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor5_1ae16654ff529ddcfedd1b394f7716412d" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>~NoiseModelFactor5</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1ac457810c504de58732d51d61f715c2de" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>~NonlinearFactor</name></member>
+    </listofallmembers>
+  </compounddef>
+</doxygen>
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/classgtsam_1_1NoiseModelFactor6.xml
@@ -0,0 +1,555 @@
+<?xml version='1.0' encoding='UTF-8' standalone='no'?>
+<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
+  <compounddef id="classgtsam_1_1NoiseModelFactor6" kind="class" language="C++" prot="public" abstract="yes">
+    <compoundname>gtsam::NoiseModelFactor6</compoundname>
+    <basecompoundref refid="classgtsam_1_1NoiseModelFactor" prot="public" virt="non-virtual">gtsam::NoiseModelFactor</basecompoundref>
+    <includes refid="NonlinearFactor_8h" local="no">NonlinearFactor.h</includes>
+    <templateparamlist>
+      <param>
+        <type>class VALUE1</type>
+      </param>
+      <param>
+        <type>class VALUE2</type>
+      </param>
+      <param>
+        <type>class VALUE3</type>
+      </param>
+      <param>
+        <type>class VALUE4</type>
+      </param>
+      <param>
+        <type>class VALUE5</type>
+      </param>
+      <param>
+        <type>class VALUE6</type>
+      </param>
+    </templateparamlist>
+      <sectiondef kind="public-type">
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor6_1a369d9accd53012d84bbbaf87b176222b" prot="public" static="no">
+        <type>VALUE1</type>
+        <definition>typedef VALUE1 gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;::X1</definition>
+        <argsstring></argsstring>
+        <name>X1</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="668" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="668" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor6_1a6107bc96fff5d12783429158e79b9390" prot="public" static="no">
+        <type>VALUE2</type>
+        <definition>typedef VALUE2 gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;::X2</definition>
+        <argsstring></argsstring>
+        <name>X2</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="669" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="669" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor6_1a76c477f40c2b911a9f28d456ea9164a2" prot="public" static="no">
+        <type>VALUE3</type>
+        <definition>typedef VALUE3 gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;::X3</definition>
+        <argsstring></argsstring>
+        <name>X3</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="670" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="670" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor6_1a2a90aff22e4bd88dae81bf824956a113" prot="public" static="no">
+        <type>VALUE4</type>
+        <definition>typedef VALUE4 gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;::X4</definition>
+        <argsstring></argsstring>
+        <name>X4</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="671" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="671" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor6_1ae13e19a4b3a7a331d04d5b460e73216f" prot="public" static="no">
+        <type>VALUE5</type>
+        <definition>typedef VALUE5 gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;::X5</definition>
+        <argsstring></argsstring>
+        <name>X5</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="672" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="672" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor6_1af44204ef6947a65b973dee5707495601" prot="public" static="no">
+        <type>VALUE6</type>
+        <definition>typedef VALUE6 gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;::X6</definition>
+        <argsstring></argsstring>
+        <name>X6</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="673" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="673" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="protected-type">
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor6_1ad4a36f4c5b39c0ea03806592fc1c3474" prot="protected" static="no">
+        <type><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref></type>
+        <definition>typedef NoiseModelFactor gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;::Base</definition>
+        <argsstring></argsstring>
+        <name>Base</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="677" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="677" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor6_1a6939c52138ed37f395a57db8b50c71ec" prot="protected" static="no">
+        <type><ref refid="classgtsam_1_1NoiseModelFactor6" kindref="compound">NoiseModelFactor6</ref>&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;</type>
+        <definition>typedef NoiseModelFactor6&lt;VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6&gt; gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;::This</definition>
+        <argsstring></argsstring>
+        <name>This</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="678" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="678" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="friend">
+      <memberdef kind="friend" id="classgtsam_1_1NoiseModelFactor6_1ac98d07dd8f7b70e16ccb9a01abf56b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
+        <type>friend class</type>
+        <definition>friend class boost::serialization::access</definition>
+        <argsstring></argsstring>
+        <name>boost::serialization::access</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Serialization function </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="740" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="740" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="public-func">
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor6_1a15bcca054e397e486fb9dda0d0436cdb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <type></type>
+        <definition>gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;::NoiseModelFactor6</definition>
+        <argsstring>()</argsstring>
+        <name>NoiseModelFactor6</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Default Constructor for I/O </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="685" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="685" bodyend="685"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor6_1ad3d89a85f0c70d7a424f2060d514cab9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <type></type>
+        <definition>gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;::NoiseModelFactor6</definition>
+        <argsstring>(const SharedNoiseModel &amp;noiseModel, Key j1, Key j2, Key j3, Key j4, Key j5, Key j6)</argsstring>
+        <name>NoiseModelFactor6</name>
+        <param>
+          <type>const SharedNoiseModel &amp;</type>
+          <declname>noiseModel</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>j1</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>j2</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>j3</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>j4</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>j5</declname>
+        </param>
+        <param>
+          <type>Key</type>
+          <declname>j6</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Constructor <parameterlist kind="param"><parameteritem>
+<parameternamelist>
+<parametername>noiseModel</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>shared pointer to noise model </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>j1</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>key of the first variable </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>j2</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>key of the second variable </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>j3</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>key of the third variable </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>j4</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>key of the fourth variable </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>j5</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>key of the fifth variable </para></parameterdescription>
+</parameteritem>
+<parameteritem>
+<parameternamelist>
+<parametername>j6</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>key of the fifth variable </para></parameterdescription>
+</parameteritem>
+</parameterlist>
+</para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="697" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="697" bodyend="698"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor6_1ad62b1867b67dee83e8733392a0aa579b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
+        <type></type>
+        <definition>virtual gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;::~NoiseModelFactor6</definition>
+        <argsstring>()</argsstring>
+        <name>~NoiseModelFactor6</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="700" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="700" bodyend="700"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor6_1a587ce14373742350ff30a78c856ecaa0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;::key1</definition>
+        <argsstring>() const </argsstring>
+        <name>key1</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>methods to retrieve keys </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="703" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="703" bodyend="703"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor6_1a57f3ba7d334871bcb688727788ac95d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;::key2</definition>
+        <argsstring>() const </argsstring>
+        <name>key2</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="704" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="704" bodyend="704"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor6_1a37bbec5754c7c6bd7cee9b3e94d9cbb1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;::key3</definition>
+        <argsstring>() const </argsstring>
+        <name>key3</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="705" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="705" bodyend="705"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor6_1a675e3df6fed6189dd9b8977907348960" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;::key4</definition>
+        <argsstring>() const </argsstring>
+        <name>key4</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="706" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="706" bodyend="706"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor6_1a926065f63458a5673888e0b53054061d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;::key5</definition>
+        <argsstring>() const </argsstring>
+        <name>key5</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="707" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="707" bodyend="707"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor6_1a16a7857c857694bc66e19f455ad90a57" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
+        <type>Key</type>
+        <definition>Key gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;::key6</definition>
+        <argsstring>() const </argsstring>
+        <name>key6</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="708" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="708" bodyend="708"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor6_1a945d269f9a722d585e3332be23030450" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
+        <type>Vector</type>
+        <definition>virtual Vector gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;::unwhitenedError</definition>
+        <argsstring>(const Values &amp;x, boost::optional&lt; std::vector&lt; Matrix &gt; &amp; &gt; H=boost::none) const </argsstring>
+        <name>unwhitenedError</name>
+        <reimplements refid="classgtsam_1_1NoiseModelFactor_1afd61874915a8076bf83f9d8311fc0e26">unwhitenedError</reimplements>
+        <param>
+          <type>const Values &amp;</type>
+          <declname>x</declname>
+        </param>
+        <param>
+          <type>boost::optional&lt; std::vector&lt; Matrix &gt; &amp; &gt;</type>
+          <declname>H</declname>
+          <defval>boost::none</defval>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Calls the 6-key specific version of evaluateError, which is pure virtual so must be implemented in the derived class. </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="712" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="712" bodyend="721"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor6_1a896a223b88b621bfe9f45bf8e2cd9960" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
+        <type>Vector</type>
+        <definition>virtual Vector gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;::evaluateError</definition>
+        <argsstring>(const X1 &amp;, const X2 &amp;, const X3 &amp;, const X4 &amp;, const X5 &amp;, const X6 &amp;, boost::optional&lt; Matrix &amp; &gt; H1=boost::none, boost::optional&lt; Matrix &amp; &gt; H2=boost::none, boost::optional&lt; Matrix &amp; &gt; H3=boost::none, boost::optional&lt; Matrix &amp; &gt; H4=boost::none, boost::optional&lt; Matrix &amp; &gt; H5=boost::none, boost::optional&lt; Matrix &amp; &gt; H6=boost::none) const =0</argsstring>
+        <name>evaluateError</name>
+        <param>
+          <type>const X1 &amp;</type>
+        </param>
+        <param>
+          <type>const X2 &amp;</type>
+        </param>
+        <param>
+          <type>const X3 &amp;</type>
+        </param>
+        <param>
+          <type>const X4 &amp;</type>
+        </param>
+        <param>
+          <type>const X5 &amp;</type>
+        </param>
+        <param>
+          <type>const X6 &amp;</type>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H1</declname>
+          <defval>boost::none</defval>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H2</declname>
+          <defval>boost::none</defval>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H3</declname>
+          <defval>boost::none</defval>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H4</declname>
+          <defval>boost::none</defval>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H5</declname>
+          <defval>boost::none</defval>
+        </param>
+        <param>
+          <type>boost::optional&lt; Matrix &amp; &gt;</type>
+          <declname>H6</declname>
+          <defval>boost::none</defval>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Override this method to finish implementing a 6-way factor. If any of the optional Matrix reference arguments are specified, it should compute both the function evaluation and its derivative(s) in X1 (and/or X2, X3). </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="729" column="1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="private-func">
+      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor6_1ac8f738f856920913a79e5017c1ced402" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <templateparamlist>
+          <param>
+            <type>class ARCHIVE</type>
+          </param>
+        </templateparamlist>
+        <type>void</type>
+        <definition>void gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;::serialize</definition>
+        <argsstring>(ARCHIVE &amp;ar, const unsigned int)</argsstring>
+        <name>serialize</name>
+        <param>
+          <type>ARCHIVE &amp;</type>
+          <declname>ar</declname>
+        </param>
+        <param>
+          <type>const unsigned</type>
+          <declname>int</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="742" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="742" bodyend="745"/>
+      </memberdef>
+      </sectiondef>
+    <briefdescription>
+    </briefdescription>
+    <detaileddescription>
+<para>A convenient base class for creating your own <ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref> with 6 variables. To derive from this class, implement <ref refid="classgtsam_1_1NoiseModelFactor6_1a896a223b88b621bfe9f45bf8e2cd9960" kindref="member">evaluateError()</ref>. </para>    </detaileddescription>
+    <inheritancegraph>
+      <node id="142">
+        <label>Factor</label>
+      </node>
+      <node id="139">
+        <label>gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor6"/>
+        <childnode refid="140" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="141">
+        <label>gtsam::NonlinearFactor</label>
+        <link refid="classgtsam_1_1NonlinearFactor"/>
+        <childnode refid="142" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="140">
+        <label>gtsam::NoiseModelFactor</label>
+        <link refid="classgtsam_1_1NoiseModelFactor"/>
+        <childnode refid="141" relation="public-inheritance">
+        </childnode>
+      </node>
+    </inheritancegraph>
+    <collaborationgraph>
+      <node id="146">
+        <label>Factor</label>
+      </node>
+      <node id="143">
+        <label>gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor6"/>
+        <childnode refid="144" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="145">
+        <label>gtsam::NonlinearFactor</label>
+        <link refid="classgtsam_1_1NonlinearFactor"/>
+        <childnode refid="146" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="144">
+        <label>gtsam::NoiseModelFactor</label>
+        <link refid="classgtsam_1_1NoiseModelFactor"/>
+        <childnode refid="145" relation="public-inheritance">
+        </childnode>
+      </node>
+    </collaborationgraph>
+    <location file="tests/doc-test-files/NonlinearFactor.h" line="663" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="663" bodyend="746"/>
+    <listofallmembers>
+      <member refid="classgtsam_1_1NonlinearFactor_1a1968f471dc3ea33aaf0226ff7be5ae8c" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor6</scope><name>active</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1ad4a36f4c5b39c0ea03806592fc1c3474" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>Base</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1ac98d07dd8f7b70e16ccb9a01abf56b9c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>boost::serialization::access</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1aa98a30a78ade8489214ce2e5b8302777" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor6</scope><name>clone</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1af4f62b52fff1a0527ecdb279de023728" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor6</scope><name>dim</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a616d0335db512e9c333cab83b1923399" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor6</scope><name>equals</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1af6147aff3a33f734435601f6dcafeaf9" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor6</scope><name>error</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1a896a223b88b621bfe9f45bf8e2cd9960" prot="public" virt="pure-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>evaluateError</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a16a8a23069ce6ae664f516edc8f36254" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>get_noiseModel</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1a587ce14373742350ff30a78c856ecaa0" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>key1</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1a57f3ba7d334871bcb688727788ac95d3" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>key2</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1a37bbec5754c7c6bd7cee9b3e94d9cbb1" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>key3</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1a675e3df6fed6189dd9b8977907348960" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>key4</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1a926065f63458a5673888e0b53054061d" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>key5</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1a16a7857c857694bc66e19f455ad90a57" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>key6</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a0c83582a0bd04e112e4c0a17cd4ed324" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor6</scope><name>linearize</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a123e5729d70b4acd6d7e1f70b1a7ced4" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>noiseModel</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a2263eabbefe0eede8c9d10486f61bb4d" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>noiseModel_</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1ad6e8ef3348e042d598617d1d55f20300" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a02cea97db30d27b51feaf1f0444d743c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a4605224417029e9dc58c5267efa9a46d" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1a15bcca054e397e486fb9dda0d0436cdb" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>NoiseModelFactor6</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1ad3d89a85f0c70d7a424f2060d514cab9" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>NoiseModelFactor6</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a7c719ae67f222f66569ccb3b526cb9cb" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>NonlinearFactor</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a8a7610dba7e9a6f878268c2769ea0e04" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>NonlinearFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a682e0bbaf0c9638b7d0d96148082d1d7" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor6</scope><name>print</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a95f4d57e8646b6df634496aaabb683b5" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>rekey</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a5f760600e8608ef15c825a0f8d1d1855" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>rekey</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1ac8f738f856920913a79e5017c1ced402" prot="private" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>serialize</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a57d98d52fb6f91ebc54d74746aeb90e4" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>shared_ptr</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1a6939c52138ed37f395a57db8b50c71ec" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>This</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1a945d269f9a722d585e3332be23030450" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor6</scope><name>unwhitenedError</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1a1b3ea51380315bfd63f60d8d9195b0c1" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>whitenedError</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1a369d9accd53012d84bbbaf87b176222b" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>X1</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1a6107bc96fff5d12783429158e79b9390" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>X2</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1a76c477f40c2b911a9f28d456ea9164a2" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>X3</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1a2a90aff22e4bd88dae81bf824956a113" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>X4</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1ae13e19a4b3a7a331d04d5b460e73216f" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>X5</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1af44204ef6947a65b973dee5707495601" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor6</scope><name>X6</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor_1ae1ed5e0fa6c471b57172f7ebaf552187" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor6</scope><name>~NoiseModelFactor</name></member>
+      <member refid="classgtsam_1_1NoiseModelFactor6_1ad62b1867b67dee83e8733392a0aa579b" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor6</scope><name>~NoiseModelFactor6</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1ac457810c504de58732d51d61f715c2de" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor6</scope><name>~NonlinearFactor</name></member>
+    </listofallmembers>
+  </compounddef>
+</doxygen>
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/classgtsam_1_1NonlinearFactor.xml
@@ -0,0 +1,364 @@
+<?xml version='1.0' encoding='UTF-8' standalone='no'?>
+<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
+  <compounddef id="classgtsam_1_1NonlinearFactor" kind="class" language="C++" prot="public" abstract="yes">
+    <compoundname>gtsam::NonlinearFactor</compoundname>
+    <basecompoundref prot="public" virt="non-virtual">Factor</basecompoundref>
+    <derivedcompoundref refid="classgtsam_1_1NoiseModelFactor" prot="public" virt="non-virtual">gtsam::NoiseModelFactor</derivedcompoundref>
+    <includes refid="NonlinearFactor_8h" local="no">NonlinearFactor.h</includes>
+      <sectiondef kind="user-defined">
+      <header>Standard Constructors</header>
+      <memberdef kind="function" id="classgtsam_1_1NonlinearFactor_1a7c719ae67f222f66569ccb3b526cb9cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <type></type>
+        <definition>gtsam::NonlinearFactor::NonlinearFactor</definition>
+        <argsstring>()</argsstring>
+        <name>NonlinearFactor</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Default constructor for I/O only </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="68" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="68" bodyend="68"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NonlinearFactor_1a8a7610dba7e9a6f878268c2769ea0e04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
+        <templateparamlist>
+          <param>
+            <type>typename CONTAINER</type>
+          </param>
+        </templateparamlist>
+        <type></type>
+        <definition>gtsam::NonlinearFactor::NonlinearFactor</definition>
+        <argsstring>(const CONTAINER &amp;keys)</argsstring>
+        <name>NonlinearFactor</name>
+        <param>
+          <type>const CONTAINER &amp;</type>
+          <declname>keys</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Constructor from a collection of the keys involved in this factor </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="74" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="74" bodyend="75"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="user-defined">
+      <header>Testable</header>
+      <memberdef kind="function" id="classgtsam_1_1NonlinearFactor_1a758285fe17213cbf9c23b9f42fb960e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
+        <type>void</type>
+        <definition>virtual void gtsam::NonlinearFactor::print</definition>
+        <argsstring>(const std::string &amp;s=&quot;&quot;, const KeyFormatter &amp;keyFormatter=DefaultKeyFormatter) const </argsstring>
+        <name>print</name>
+        <reimplementedby refid="classgtsam_1_1NoiseModelFactor_1a682e0bbaf0c9638b7d0d96148082d1d7">print</reimplementedby>
+        <param>
+          <type>const std::string &amp;</type>
+          <declname>s</declname>
+          <defval>&quot;&quot;</defval>
+        </param>
+        <param>
+          <type>const KeyFormatter &amp;</type>
+          <declname>keyFormatter</declname>
+          <defval>DefaultKeyFormatter</defval>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>print </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="82" column="1"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NonlinearFactor_1a38cdabb3302973815e357bd00573734a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
+        <type>bool</type>
+        <definition>virtual bool gtsam::NonlinearFactor::equals</definition>
+        <argsstring>(const NonlinearFactor &amp;f, double tol=1e-9) const </argsstring>
+        <name>equals</name>
+        <reimplementedby refid="classgtsam_1_1NoiseModelFactor_1a616d0335db512e9c333cab83b1923399">equals</reimplementedby>
+        <param>
+          <type>const <ref refid="classgtsam_1_1NonlinearFactor" kindref="compound">NonlinearFactor</ref> &amp;</type>
+          <declname>f</declname>
+        </param>
+        <param>
+          <type>double</type>
+          <declname>tol</declname>
+          <defval>1e-9</defval>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Check if two factors are equal </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="86" column="1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="user-defined">
+      <header>Standard Interface</header>
+      <memberdef kind="function" id="classgtsam_1_1NonlinearFactor_1ac457810c504de58732d51d61f715c2de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
+        <type></type>
+        <definition>virtual gtsam::NonlinearFactor::~NonlinearFactor</definition>
+        <argsstring>()</argsstring>
+        <name>~NonlinearFactor</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Destructor </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="92" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="92" bodyend="92"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NonlinearFactor_1a8e67e58ff0e4f9d58f07e5eb227adc52" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
+        <type>double</type>
+        <definition>virtual double gtsam::NonlinearFactor::error</definition>
+        <argsstring>(const Values &amp;c) const =0</argsstring>
+        <name>error</name>
+        <reimplementedby refid="classgtsam_1_1NoiseModelFactor_1af6147aff3a33f734435601f6dcafeaf9">error</reimplementedby>
+        <param>
+          <type>const Values &amp;</type>
+          <declname>c</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Calculate the error of the factor This is typically equal to log-likelihood, e.g. <formula id="2">$ 0.5(h(x)-z)^2/sigma^2 $</formula> in case of Gaussian. You can override this for systems with unusual noise models. </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="100" column="1"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NonlinearFactor_1a5f0fcf1c93ded207d4a31e8ede07d797" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
+        <type>size_t</type>
+        <definition>virtual size_t gtsam::NonlinearFactor::dim</definition>
+        <argsstring>() const =0</argsstring>
+        <name>dim</name>
+        <reimplementedby refid="classgtsam_1_1NoiseModelFactor_1af4f62b52fff1a0527ecdb279de023728">dim</reimplementedby>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>get the dimension of the factor (number of rows on linearization) </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="103" column="1"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NonlinearFactor_1a1968f471dc3ea33aaf0226ff7be5ae8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
+        <type>bool</type>
+        <definition>virtual bool gtsam::NonlinearFactor::active</definition>
+        <argsstring>(const Values &amp;) const </argsstring>
+        <name>active</name>
+        <param>
+          <type>const Values &amp;</type>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Checks whether a factor should be used based on a set of values. This is primarily used to implment inequality constraints that require a variable active set. For all others, the default implementation returning true solves this problem.</para><para>In an inequality/bounding constraint, this <ref refid="classgtsam_1_1NonlinearFactor_1a1968f471dc3ea33aaf0226ff7be5ae8c" kindref="member">active()</ref> returns true when the constraint is <emphasis>NOT</emphasis> fulfilled. <simplesect kind="return"><para>true if the constraint is active </para></simplesect>
+</para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="115" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="115" bodyend="115"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NonlinearFactor_1af2cc20b4ec180610dbf224f2165fa50a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
+        <type>std::shared_ptr&lt; GaussianFactor &gt;</type>
+        <definition>virtual std::shared_ptr&lt;GaussianFactor&gt; gtsam::NonlinearFactor::linearize</definition>
+        <argsstring>(const Values &amp;c) const =0</argsstring>
+        <name>linearize</name>
+        <reimplementedby refid="classgtsam_1_1NoiseModelFactor_1a0c83582a0bd04e112e4c0a17cd4ed324">linearize</reimplementedby>
+        <param>
+          <type>const Values &amp;</type>
+          <declname>c</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>linearize to a GaussianFactor </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="119" column="1"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NonlinearFactor_1aa98a30a78ade8489214ce2e5b8302777" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
+        <type>shared_ptr</type>
+        <definition>virtual shared_ptr gtsam::NonlinearFactor::clone</definition>
+        <argsstring>() const </argsstring>
+        <name>clone</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Creates a shared_ptr clone of the factor - needs to be specialized to allow for subclasses</para><para>By default, throws exception if subclass does not implement the function. </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="127" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="127" bodyend="131"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NonlinearFactor_1a95f4d57e8646b6df634496aaabb683b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
+        <type>shared_ptr</type>
+        <definition>shared_ptr gtsam::NonlinearFactor::rekey</definition>
+        <argsstring>(const std::map&lt; Key, Key &gt; &amp;rekey_mapping) const </argsstring>
+        <name>rekey</name>
+        <param>
+          <type>const std::map&lt; Key, Key &gt; &amp;</type>
+          <declname>rekey_mapping</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Creates a shared_ptr clone of the factor with different keys using a map from old-&gt;new keys </para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="138" column="1"/>
+      </memberdef>
+      <memberdef kind="function" id="classgtsam_1_1NonlinearFactor_1a5f760600e8608ef15c825a0f8d1d1855" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
+        <type>shared_ptr</type>
+        <definition>shared_ptr gtsam::NonlinearFactor::rekey</definition>
+        <argsstring>(const KeyVector &amp;new_keys) const </argsstring>
+        <name>rekey</name>
+        <param>
+          <type>const KeyVector &amp;</type>
+          <declname>new_keys</declname>
+        </param>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+<para>Clones a factor and fully replaces its keys <parameterlist kind="param"><parameteritem>
+<parameternamelist>
+<parametername>new_keys</parametername>
+</parameternamelist>
+<parameterdescription>
+<para>is the full replacement set of keys </para></parameterdescription>
+</parameteritem>
+</parameterlist>
+</para>        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="144" column="1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="protected-type">
+      <memberdef kind="typedef" id="classgtsam_1_1NonlinearFactor_1aa76bae0d7aeb6591a824daa7c5dc2ac6" prot="protected" static="no">
+        <type>Factor</type>
+        <definition>typedef Factor gtsam::NonlinearFactor::Base</definition>
+        <argsstring></argsstring>
+        <name>Base</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="57" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="57" bodyend="-1"/>
+      </memberdef>
+      <memberdef kind="typedef" id="classgtsam_1_1NonlinearFactor_1a15c628be5e7433ee4ece0c5fd12d049e" prot="protected" static="no">
+        <type><ref refid="classgtsam_1_1NonlinearFactor" kindref="compound">NonlinearFactor</ref></type>
+        <definition>typedef NonlinearFactor gtsam::NonlinearFactor::This</definition>
+        <argsstring></argsstring>
+        <name>This</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="58" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="58" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+      <sectiondef kind="public-type">
+      <memberdef kind="typedef" id="classgtsam_1_1NonlinearFactor_1a3bf72f88f6e726577c89f894bf481515" prot="public" static="no">
+        <type>std::shared_ptr&lt; <ref refid="classgtsam_1_1NonlinearFactor" kindref="compound">This</ref> &gt;</type>
+        <definition>typedef std::shared_ptr&lt;This&gt; gtsam::NonlinearFactor::shared_ptr</definition>
+        <argsstring></argsstring>
+        <name>shared_ptr</name>
+        <briefdescription>
+        </briefdescription>
+        <detaileddescription>
+        </detaileddescription>
+        <inbodydescription>
+        </inbodydescription>
+        <location file="tests/doc-test-files/NonlinearFactor.h" line="62" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="62" bodyend="-1"/>
+      </memberdef>
+      </sectiondef>
+    <briefdescription>
+    </briefdescription>
+    <detaileddescription>
+<para>Nonlinear factor base class </para>    </detaileddescription>
+    <inheritancegraph>
+      <node id="148">
+        <label>Factor</label>
+      </node>
+      <node id="153">
+        <label>gtsam::NoiseModelFactor4&lt; VALUE1, VALUE2, VALUE3, VALUE4 &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor4"/>
+        <childnode refid="149" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="155">
+        <label>gtsam::NoiseModelFactor6&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6 &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor6"/>
+        <childnode refid="149" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="154">
+        <label>gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor5"/>
+        <childnode refid="149" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="147">
+        <label>gtsam::NonlinearFactor</label>
+        <link refid="classgtsam_1_1NonlinearFactor"/>
+        <childnode refid="148" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="149">
+        <label>gtsam::NoiseModelFactor</label>
+        <link refid="classgtsam_1_1NoiseModelFactor"/>
+        <childnode refid="147" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="150">
+        <label>gtsam::NoiseModelFactor1&lt; VALUE &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor1"/>
+        <childnode refid="149" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="152">
+        <label>gtsam::NoiseModelFactor3&lt; VALUE1, VALUE2, VALUE3 &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor3"/>
+        <childnode refid="149" relation="public-inheritance">
+        </childnode>
+      </node>
+      <node id="151">
+        <label>gtsam::NoiseModelFactor2&lt; VALUE1, VALUE2 &gt;</label>
+        <link refid="classgtsam_1_1NoiseModelFactor2"/>
+        <childnode refid="149" relation="public-inheritance">
+        </childnode>
+      </node>
+    </inheritancegraph>
+    <collaborationgraph>
+      <node id="157">
+        <label>Factor</label>
+      </node>
+      <node id="156">
+        <label>gtsam::NonlinearFactor</label>
+        <link refid="classgtsam_1_1NonlinearFactor"/>
+        <childnode refid="157" relation="public-inheritance">
+        </childnode>
+      </node>
+    </collaborationgraph>
+    <location file="tests/doc-test-files/NonlinearFactor.h" line="52" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="52" bodyend="146"/>
+    <listofallmembers>
+      <member refid="classgtsam_1_1NonlinearFactor_1a1968f471dc3ea33aaf0226ff7be5ae8c" prot="public" virt="virtual"><scope>gtsam::NonlinearFactor</scope><name>active</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1aa76bae0d7aeb6591a824daa7c5dc2ac6" prot="protected" virt="non-virtual"><scope>gtsam::NonlinearFactor</scope><name>Base</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1aa98a30a78ade8489214ce2e5b8302777" prot="public" virt="virtual"><scope>gtsam::NonlinearFactor</scope><name>clone</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a5f0fcf1c93ded207d4a31e8ede07d797" prot="public" virt="pure-virtual"><scope>gtsam::NonlinearFactor</scope><name>dim</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a38cdabb3302973815e357bd00573734a" prot="public" virt="virtual"><scope>gtsam::NonlinearFactor</scope><name>equals</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a8e67e58ff0e4f9d58f07e5eb227adc52" prot="public" virt="pure-virtual"><scope>gtsam::NonlinearFactor</scope><name>error</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1af2cc20b4ec180610dbf224f2165fa50a" prot="public" virt="pure-virtual"><scope>gtsam::NonlinearFactor</scope><name>linearize</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a7c719ae67f222f66569ccb3b526cb9cb" prot="public" virt="non-virtual"><scope>gtsam::NonlinearFactor</scope><name>NonlinearFactor</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a8a7610dba7e9a6f878268c2769ea0e04" prot="public" virt="non-virtual"><scope>gtsam::NonlinearFactor</scope><name>NonlinearFactor</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a758285fe17213cbf9c23b9f42fb960e6" prot="public" virt="virtual"><scope>gtsam::NonlinearFactor</scope><name>print</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a95f4d57e8646b6df634496aaabb683b5" prot="public" virt="non-virtual"><scope>gtsam::NonlinearFactor</scope><name>rekey</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a5f760600e8608ef15c825a0f8d1d1855" prot="public" virt="non-virtual"><scope>gtsam::NonlinearFactor</scope><name>rekey</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a3bf72f88f6e726577c89f894bf481515" prot="public" virt="non-virtual"><scope>gtsam::NonlinearFactor</scope><name>shared_ptr</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1a15c628be5e7433ee4ece0c5fd12d049e" prot="protected" virt="non-virtual"><scope>gtsam::NonlinearFactor</scope><name>This</name></member>
+      <member refid="classgtsam_1_1NonlinearFactor_1ac457810c504de58732d51d61f715c2de" prot="public" virt="virtual"><scope>gtsam::NonlinearFactor</scope><name>~NonlinearFactor</name></member>
+    </listofallmembers>
+  </compounddef>
+</doxygen>
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/combine.xslt
@@ -0,0 +1,15 @@
+<!-- XSLT script to combine the generated output into a single file. 
+     If you have xsltproc you could use:
+     xsltproc combine.xslt index.xml >all.xml
+-->
+<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
+  <xsl:output method="xml" version="1.0" indent="no" standalone="yes" />
+  <xsl:template match="/">
+    <doxygen version="{doxygenindex/@version}">
+      <!-- Load all doxgen generated xml files -->
+      <xsl:for-each select="doxygenindex/compound">
+        <xsl:copy-of select="document( concat( @refid, '.xml' ) )/doxygen/*" />
+      </xsl:for-each>
+    </doxygen>
+  </xsl:template>
+</xsl:stylesheet>
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/compound.xsd
@@ -0,0 +1,1115 @@
+<?xml version='1.0' encoding='utf-8' ?>
+<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
+  <xsd:element name="doxygen" type="DoxygenType"/>
+
+  <!-- Complex types -->
+
+  <xsd:complexType name="DoxygenType">
+    <xsd:sequence maxOccurs="unbounded">
+      <xsd:element name="compounddef" type="compounddefType" minOccurs="0" />
+    </xsd:sequence>
+    <xsd:attribute name="version" type="DoxVersionNumber" use="required" />
+  </xsd:complexType>
+
+  <xsd:complexType name="compounddefType">
+    <xsd:sequence>
+      <xsd:element name="compoundname" type="xsd:string"/>
+      <xsd:element name="title" type="xsd:string" minOccurs="0" />
+      <xsd:element name="basecompoundref" type="compoundRefType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="derivedcompoundref" type="compoundRefType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="includes" type="incType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="includedby" type="incType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="incdepgraph" type="graphType" minOccurs="0" />
+      <xsd:element name="invincdepgraph" type="graphType" minOccurs="0" />
+      <xsd:element name="innerdir" type="refType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="innerfile" type="refType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="innerclass" type="refType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="innernamespace" type="refType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="innerpage" type="refType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="innergroup" type="refType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="templateparamlist" type="templateparamlistType" minOccurs="0" />
+      <xsd:element name="sectiondef" type="sectiondefType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="briefdescription" type="descriptionType" minOccurs="0" />
+      <xsd:element name="detaileddescription" type="descriptionType" minOccurs="0" />
+      <xsd:element name="inheritancegraph" type="graphType" minOccurs="0" />
+      <xsd:element name="collaborationgraph" type="graphType" minOccurs="0" />
+      <xsd:element name="programlisting" type="listingType" minOccurs="0" />
+      <xsd:element name="location" type="locationType" minOccurs="0" />
+      <xsd:element name="listofallmembers" type="listofallmembersType" minOccurs="0" />
+    </xsd:sequence>
+    <xsd:attribute name="id" type="xsd:string" />
+    <xsd:attribute name="kind" type="DoxCompoundKind" />
+    <xsd:attribute name="language" type="DoxLanguage" use="optional"/>
+    <xsd:attribute name="prot" type="DoxProtectionKind" />
+    <xsd:attribute name="final" type="DoxBool" use="optional"/>
+    <xsd:attribute name="sealed" type="DoxBool" use="optional"/>
+    <xsd:attribute name="abstract" type="DoxBool" use="optional"/>
+  </xsd:complexType>
+
+  <xsd:complexType name="listofallmembersType">
+    <xsd:sequence>
+      <xsd:element name="member" type="memberRefType" minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="memberRefType">
+    <xsd:sequence>
+      <xsd:element name="scope" />
+      <xsd:element name="name" />
+    </xsd:sequence>
+    <xsd:attribute name="refid" type="xsd:string" />
+    <xsd:attribute name="prot" type="DoxProtectionKind" />
+    <xsd:attribute name="virt" type="DoxVirtualKind" />
+    <xsd:attribute name="ambiguityscope" type="xsd:string" />
+  </xsd:complexType>
+
+  <xsd:complexType name="compoundRefType">
+    <xsd:simpleContent>
+      <xsd:extension base="xsd:string">
+        <xsd:attribute name="refid" type="xsd:string" use="optional" />
+        <xsd:attribute name="prot" type="DoxProtectionKind" />
+        <xsd:attribute name="virt" type="DoxVirtualKind" />
+      </xsd:extension>
+    </xsd:simpleContent>
+  </xsd:complexType>
+
+  <xsd:complexType name="reimplementType">
+    <xsd:simpleContent>
+      <xsd:extension base="xsd:string">
+        <xsd:attribute name="refid" type="xsd:string" />
+      </xsd:extension>
+    </xsd:simpleContent>
+  </xsd:complexType>
+
+  <xsd:complexType name="incType">
+    <xsd:simpleContent>
+      <xsd:extension base="xsd:string">
+        <xsd:attribute name="refid" type="xsd:string" />
+        <xsd:attribute name="local" type="DoxBool" />
+      </xsd:extension>
+    </xsd:simpleContent>
+  </xsd:complexType>
+
+  <xsd:complexType name="refType">
+    <xsd:simpleContent>
+      <xsd:extension base="xsd:string">
+        <xsd:attribute name="refid" type="xsd:string" />
+        <xsd:attribute name="prot" type="DoxProtectionKind" use="optional"/>
+      </xsd:extension>
+    </xsd:simpleContent>
+  </xsd:complexType>
+
+  <xsd:complexType name="refTextType">
+    <xsd:simpleContent>
+      <xsd:extension base="xsd:string">
+       <xsd:attribute name="refid" type="xsd:string" />
+       <xsd:attribute name="kindref" type="DoxRefKind" />
+       <xsd:attribute name="external" type="xsd:string" use="optional"/>
+       <xsd:attribute name="tooltip" type="xsd:string" use="optional"/>
+      </xsd:extension>
+    </xsd:simpleContent>
+  </xsd:complexType>
+
+  <xsd:complexType name="sectiondefType">
+    <xsd:sequence>
+      <xsd:element name="header" type="xsd:string" minOccurs="0" />
+      <xsd:element name="description" type="descriptionType" minOccurs="0" />
+      <xsd:element name="memberdef" type="memberdefType" maxOccurs="unbounded" />
+    </xsd:sequence>
+    <xsd:attribute name="kind" type="DoxSectionKind" />
+  </xsd:complexType>
+
+  <xsd:complexType name="memberdefType">
+    <xsd:sequence>
+      <xsd:element name="templateparamlist" type="templateparamlistType" minOccurs="0" />
+      <xsd:element name="type" type="linkedTextType" minOccurs="0" />
+      <xsd:element name="definition" minOccurs="0" />
+      <xsd:element name="argsstring" minOccurs="0" />
+      <xsd:element name="name" />
+      <xsd:element name="read" minOccurs="0" />
+      <xsd:element name="write" minOccurs="0" />
+      <xsd:element name="bitfield" minOccurs="0" />
+      <xsd:element name="reimplements" type="reimplementType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="reimplementedby" type="reimplementType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="enumvalue" type="enumvalueType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="initializer" type="linkedTextType" minOccurs="0" />
+      <xsd:element name="exceptions" type="linkedTextType" minOccurs="0" />
+      <xsd:element name="briefdescription" type="descriptionType" minOccurs="0" />
+      <xsd:element name="detaileddescription" type="descriptionType" minOccurs="0" />
+      <xsd:element name="inbodydescription" type="descriptionType" minOccurs="0" />
+      <xsd:element name="location" type="locationType" />
+      <xsd:element name="references" type="referenceType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="referencedby" type="referenceType" minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+    <xsd:attribute name="kind" type="DoxMemberKind" />
+    <xsd:attribute name="id" type="xsd:string" />
+    <xsd:attribute name="prot" type="DoxProtectionKind" />
+    <xsd:attribute name="static" type="DoxBool" />
+    <xsd:attribute name="const" type="DoxBool" use="optional"/>
+    <xsd:attribute name="explicit" type="DoxBool" use="optional"/>
+    <xsd:attribute name="inline" type="DoxBool" use="optional"/>
+    <xsd:attribute name="virt" type="DoxVirtualKind" use="optional"/>
+    <xsd:attribute name="volatile" type="DoxBool" use="optional"/>
+    <xsd:attribute name="mutable" type="DoxBool" use="optional"/>
+    <!-- Qt property -->
+    <xsd:attribute name="readable" type="DoxBool" use="optional"/>
+    <xsd:attribute name="writable" type="DoxBool" use="optional"/>
+    <!-- C++/CLI variable -->
+    <xsd:attribute name="initonly" type="DoxBool" use="optional"/>
+    <!-- C++/CLI and C# property -->
+    <xsd:attribute name="settable" type="DoxBool" use="optional"/>
+    <xsd:attribute name="gettable" type="DoxBool" use="optional"/>
+    <!-- C++/CLI function -->
+    <xsd:attribute name="final" type="DoxBool" use="optional"/>
+    <xsd:attribute name="sealed" type="DoxBool" use="optional"/>
+    <xsd:attribute name="new" type="DoxBool" use="optional"/>
+    <!-- C++/CLI event -->
+    <xsd:attribute name="add" type="DoxBool" use="optional"/>
+    <xsd:attribute name="remove" type="DoxBool" use="optional"/>
+    <xsd:attribute name="raise" type="DoxBool" use="optional"/>
+    <!-- Objective-C 2.0 protocol method -->
+    <xsd:attribute name="optional" type="DoxBool" use="optional"/>
+    <xsd:attribute name="required" type="DoxBool" use="optional"/>
+    <!-- Objective-C 2.0 property accessor -->
+    <xsd:attribute name="accessor" type="DoxAccessor" use="optional"/>
+    <!-- UNO IDL -->
+    <xsd:attribute name="attribute" type="DoxBool" use="optional"/>
+    <xsd:attribute name="property" type="DoxBool" use="optional"/>
+    <xsd:attribute name="readonly" type="DoxBool" use="optional"/>
+    <xsd:attribute name="bound" type="DoxBool" use="optional"/>
+    <xsd:attribute name="removable" type="DoxBool" use="optional"/>
+    <xsd:attribute name="contrained" type="DoxBool" use="optional"/>
+    <xsd:attribute name="transient" type="DoxBool" use="optional"/>
+    <xsd:attribute name="maybevoid" type="DoxBool" use="optional"/>
+    <xsd:attribute name="maybedefault" type="DoxBool" use="optional"/>
+    <xsd:attribute name="maybeambiguous" type="DoxBool" use="optional"/>
+
+  </xsd:complexType>
+
+  <xsd:complexType name="descriptionType" mixed="true">
+    <xsd:sequence>
+      <xsd:element name="title" type="xsd:string" minOccurs="0"/>	    
+      <xsd:element name="para" type="docParaType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="sect1" type="docSect1Type" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="internal" type="docInternalType" minOccurs="0" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="enumvalueType" mixed="true">
+    <xsd:sequence>
+      <xsd:element name="name" />
+      <xsd:element name="initializer" type="linkedTextType" minOccurs="0" />
+      <xsd:element name="briefdescription" type="descriptionType" minOccurs="0" />
+      <xsd:element name="detaileddescription" type="descriptionType" minOccurs="0" />
+    </xsd:sequence>
+    <xsd:attribute name="id" type="xsd:string" />
+    <xsd:attribute name="prot" type="DoxProtectionKind" />
+  </xsd:complexType>
+
+  <xsd:complexType name="templateparamlistType">
+    <xsd:sequence>
+      <xsd:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="paramType">
+    <xsd:sequence>
+      <xsd:element name="type" type="linkedTextType" minOccurs="0" />
+      <xsd:element name="declname" minOccurs="0" />
+      <xsd:element name="defname" minOccurs="0" />
+      <xsd:element name="array" minOccurs="0" />
+      <xsd:element name="defval" type="linkedTextType" minOccurs="0" />
+      <xsd:element name="typeconstraint" type="linkedTextType" minOccurs="0" />
+      <xsd:element name="briefdescription" type="descriptionType" minOccurs="0" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="linkedTextType" mixed="true">
+    <xsd:sequence>
+    <xsd:element name="ref" type="refTextType" minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="graphType">
+    <xsd:sequence>
+      <xsd:element name="node" type="nodeType" maxOccurs="unbounded" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="nodeType">
+    <xsd:sequence>
+      <xsd:element name="label" />
+      <xsd:element name="link" type="linkType" minOccurs="0" />
+      <xsd:element name="childnode" type="childnodeType" minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+    <xsd:attribute name="id" type="xsd:string" />
+  </xsd:complexType>
+
+  <xsd:complexType name="childnodeType">
+    <xsd:sequence>
+      <xsd:element name="edgelabel" minOccurs="0" maxOccurs="unbounded"/>
+    </xsd:sequence>
+    <xsd:attribute name="refid" type="xsd:string" />
+    <xsd:attribute name="relation" type="DoxGraphRelation" />
+  </xsd:complexType>
+
+  <xsd:complexType name="linkType">
+    <xsd:attribute name="refid" type="xsd:string" />
+    <xsd:attribute name="external" type="xsd:string" use="optional"/>
+  </xsd:complexType>
+
+  <xsd:complexType name="listingType">
+    <xsd:sequence>
+      <xsd:element name="codeline" type="codelineType" minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="codelineType">
+    <xsd:sequence>
+      <xsd:element name="highlight" type="highlightType" minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+    <xsd:attribute name="lineno" type="xsd:integer" />
+    <xsd:attribute name="refid" type="xsd:string" />
+    <xsd:attribute name="refkind" type="DoxRefKind" />
+    <xsd:attribute name="external" type="DoxBool" />
+  </xsd:complexType>
+
+  <xsd:complexType name="highlightType" mixed="true">
+    <xsd:choice minOccurs="0" maxOccurs="unbounded">
+      <xsd:element name="sp" />
+      <xsd:element name="ref" type="refTextType" />
+    </xsd:choice>
+    <xsd:attribute name="class" type="DoxHighlightClass" />
+  </xsd:complexType>
+
+  <xsd:complexType name="referenceType" mixed="true">
+    <xsd:attribute name="refid" type="xsd:string" />
+    <xsd:attribute name="compoundref" type="xsd:string" use="optional" />
+    <xsd:attribute name="startline" type="xsd:integer" />
+    <xsd:attribute name="endline" type="xsd:integer" />
+  </xsd:complexType>
+
+  <xsd:complexType name="locationType">
+    <xsd:attribute name="file" type="xsd:string" />
+    <xsd:attribute name="line" type="xsd:integer" />
+    <xsd:attribute name="column" type="xsd:integer" use="optional"/>
+    <xsd:attribute name="bodyfile" type="xsd:string" />
+    <xsd:attribute name="bodystart" type="xsd:integer" />
+    <xsd:attribute name="bodyend" type="xsd:integer" />
+  </xsd:complexType>
+
+  <xsd:complexType name="docSect1Type" mixed="true">
+    <xsd:sequence>
+      <xsd:element name="title" type="xsd:string" />	    
+      <xsd:element name="para" type="docParaType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="sect2" type="docSect2Type" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="internal" type="docInternalS1Type" minOccurs="0" />
+    </xsd:sequence>
+    <xsd:attribute name="id" type="xsd:string" />
+  </xsd:complexType>
+
+  <xsd:complexType name="docSect2Type" mixed="true">
+    <xsd:sequence>
+      <xsd:element name="title" type="xsd:string" />	    
+      <xsd:element name="para" type="docParaType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="sect3" type="docSect3Type" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="internal" type="docInternalS2Type" minOccurs="0" />
+    </xsd:sequence>
+    <xsd:attribute name="id" type="xsd:string" />
+  </xsd:complexType>
+
+  <xsd:complexType name="docSect3Type" mixed="true">
+    <xsd:sequence>
+      <xsd:element name="title" type="xsd:string" />	    
+      <xsd:element name="para" type="docParaType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="sect4" type="docSect4Type" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="internal" type="docInternalS3Type" minOccurs="0" />
+    </xsd:sequence>
+    <xsd:attribute name="id" type="xsd:string" />
+  </xsd:complexType>
+
+  <xsd:complexType name="docSect4Type" mixed="true">
+    <xsd:sequence>
+      <xsd:element name="title" type="xsd:string" />	    
+      <xsd:element name="para" type="docParaType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="internal" type="docInternalS4Type" minOccurs="0" />
+    </xsd:sequence>
+    <xsd:attribute name="id" type="xsd:string" />
+  </xsd:complexType>
+
+  <xsd:complexType name="docInternalType" mixed="true">
+    <xsd:sequence>
+      <xsd:element name="para"  type="docParaType"  minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="sect1" type="docSect1Type" minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="docInternalS1Type" mixed="true">
+    <xsd:sequence>
+      <xsd:element name="para"  type="docParaType"  minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="sect2" type="docSect2Type" minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="docInternalS2Type" mixed="true">
+    <xsd:sequence>
+      <xsd:element name="para"  type="docParaType"  minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="sect3" type="docSect3Type" minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="docInternalS3Type" mixed="true">
+    <xsd:sequence>
+      <xsd:element name="para"  type="docParaType"  minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="sect3" type="docSect4Type" minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="docInternalS4Type" mixed="true">
+    <xsd:sequence>
+      <xsd:element name="para"  type="docParaType"  minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+  </xsd:complexType>
+ 
+  <xsd:group name="docTitleCmdGroup">
+    <xsd:choice>
+      <xsd:element name="ulink" type="docURLLink" />
+      <xsd:element name="bold" type="docMarkupType" />
+      <xsd:element name="emphasis" type="docMarkupType" />
+      <xsd:element name="computeroutput" type="docMarkupType" />
+      <xsd:element name="subscript" type="docMarkupType" />
+      <xsd:element name="superscript" type="docMarkupType" />
+      <xsd:element name="center" type="docMarkupType" />
+      <xsd:element name="small" type="docMarkupType" />
+      <xsd:element name="htmlonly" type="xsd:string" />
+      <xsd:element name="manonly" type="xsd:string" />
+      <xsd:element name="xmlonly" type="xsd:string" />
+      <xsd:element name="rtfonly" type="xsd:string" />
+      <xsd:element name="latexonly" type="xsd:string" />
+      <xsd:element name="dot" type="xsd:string" />
+      <xsd:element name="plantuml" type="xsd:string" />
+      <xsd:element name="anchor" type="docAnchorType" />
+      <xsd:element name="formula" type="docFormulaType" />
+      <xsd:element name="ref" type="docRefTextType" />
+      <xsd:element name="nonbreakablespace" type="docEmptyType" />
+      <xsd:element name="iexcl" type="docEmptyType" />
+      <xsd:element name="cent" type="docEmptyType" />
+      <xsd:element name="pound" type="docEmptyType" />
+      <xsd:element name="curren" type="docEmptyType" />
+      <xsd:element name="yen" type="docEmptyType" />
+      <xsd:element name="brvbar" type="docEmptyType" />
+      <xsd:element name="sect" type="docEmptyType" />
+      <xsd:element name="umlaut" type="docEmptyType" />
+      <xsd:element name="copy" type="docEmptyType" />
+      <xsd:element name="ordf" type="docEmptyType" />
+      <xsd:element name="laquo" type="docEmptyType" />
+      <xsd:element name="not" type="docEmptyType" />
+      <xsd:element name="shy" type="docEmptyType" />
+      <xsd:element name="registered" type="docEmptyType" />
+      <xsd:element name="macr" type="docEmptyType" />
+      <xsd:element name="deg" type="docEmptyType" />
+      <xsd:element name="plusmn" type="docEmptyType" />
+      <xsd:element name="sup2" type="docEmptyType" />
+      <xsd:element name="sup3" type="docEmptyType" />
+      <xsd:element name="acute" type="docEmptyType" />
+      <xsd:element name="micro" type="docEmptyType" />
+      <xsd:element name="para" type="docEmptyType" />
+      <xsd:element name="middot" type="docEmptyType" />
+      <xsd:element name="cedil" type="docEmptyType" />
+      <xsd:element name="sup1" type="docEmptyType" />
+      <xsd:element name="ordm" type="docEmptyType" />
+      <xsd:element name="raquo" type="docEmptyType" />
+      <xsd:element name="frac14" type="docEmptyType" />
+      <xsd:element name="frac12" type="docEmptyType" />
+      <xsd:element name="frac34" type="docEmptyType" />
+      <xsd:element name="iquest" type="docEmptyType" />
+      <xsd:element name="Agrave" type="docEmptyType" />
+      <xsd:element name="Aacute" type="docEmptyType" />
+      <xsd:element name="Acirc" type="docEmptyType" />
+      <xsd:element name="Atilde" type="docEmptyType" />
+      <xsd:element name="Aumlaut" type="docEmptyType" />
+      <xsd:element name="Aring" type="docEmptyType" />
+      <xsd:element name="AElig" type="docEmptyType" />
+      <xsd:element name="Ccedil" type="docEmptyType" />
+      <xsd:element name="Egrave" type="docEmptyType" />
+      <xsd:element name="Eacute" type="docEmptyType" />
+      <xsd:element name="Ecirc" type="docEmptyType" />
+      <xsd:element name="Eumlaut" type="docEmptyType" />
+      <xsd:element name="Igrave" type="docEmptyType" />
+      <xsd:element name="Iacute" type="docEmptyType" />
+      <xsd:element name="Icirc" type="docEmptyType" />
+      <xsd:element name="Iumlaut" type="docEmptyType" />
+      <xsd:element name="ETH" type="docEmptyType" />
+      <xsd:element name="Ntilde" type="docEmptyType" />
+      <xsd:element name="Ograve" type="docEmptyType" />
+      <xsd:element name="Oacute" type="docEmptyType" />
+      <xsd:element name="Ocirc" type="docEmptyType" />
+      <xsd:element name="Otilde" type="docEmptyType" />
+      <xsd:element name="Oumlaut" type="docEmptyType" />
+      <xsd:element name="times" type="docEmptyType" />
+      <xsd:element name="Oslash" type="docEmptyType" />
+      <xsd:element name="Ugrave" type="docEmptyType" />
+      <xsd:element name="Uacute" type="docEmptyType" />
+      <xsd:element name="Ucirc" type="docEmptyType" />
+      <xsd:element name="Uumlaut" type="docEmptyType" />
+      <xsd:element name="Yacute" type="docEmptyType" />
+      <xsd:element name="THORN" type="docEmptyType" />
+      <xsd:element name="szlig" type="docEmptyType" />
+      <xsd:element name="agrave" type="docEmptyType" />
+      <xsd:element name="aacute" type="docEmptyType" />
+      <xsd:element name="acirc" type="docEmptyType" />
+      <xsd:element name="atilde" type="docEmptyType" />
+      <xsd:element name="aumlaut" type="docEmptyType" />
+      <xsd:element name="aring" type="docEmptyType" />
+      <xsd:element name="aelig" type="docEmptyType" />
+      <xsd:element name="ccedil" type="docEmptyType" />
+      <xsd:element name="egrave" type="docEmptyType" />
+      <xsd:element name="eacute" type="docEmptyType" />
+      <xsd:element name="ecirc" type="docEmptyType" />
+      <xsd:element name="eumlaut" type="docEmptyType" />
+      <xsd:element name="igrave" type="docEmptyType" />
+      <xsd:element name="iacute" type="docEmptyType" />
+      <xsd:element name="icirc" type="docEmptyType" />
+      <xsd:element name="iumlaut" type="docEmptyType" />
+      <xsd:element name="eth" type="docEmptyType" />
+      <xsd:element name="ntilde" type="docEmptyType" />
+      <xsd:element name="ograve" type="docEmptyType" />
+      <xsd:element name="oacute" type="docEmptyType" />
+      <xsd:element name="ocirc" type="docEmptyType" />
+      <xsd:element name="otilde" type="docEmptyType" />
+      <xsd:element name="oumlaut" type="docEmptyType" />
+      <xsd:element name="divide" type="docEmptyType" />
+      <xsd:element name="oslash" type="docEmptyType" />
+      <xsd:element name="ugrave" type="docEmptyType" />
+      <xsd:element name="uacute" type="docEmptyType" />
+      <xsd:element name="ucirc" type="docEmptyType" />
+      <xsd:element name="uumlaut" type="docEmptyType" />
+      <xsd:element name="yacute" type="docEmptyType" />
+      <xsd:element name="thorn" type="docEmptyType" />
+      <xsd:element name="yumlaut" type="docEmptyType" />
+      <xsd:element name="fnof" type="docEmptyType" />
+      <xsd:element name="Alpha" type="docEmptyType" />
+      <xsd:element name="Beta" type="docEmptyType" />
+      <xsd:element name="Gamma" type="docEmptyType" />
+      <xsd:element name="Delta" type="docEmptyType" />
+      <xsd:element name="Epsilon" type="docEmptyType" />
+      <xsd:element name="Zeta" type="docEmptyType" />
+      <xsd:element name="Eta" type="docEmptyType" />
+      <xsd:element name="Theta" type="docEmptyType" />
+      <xsd:element name="Iota" type="docEmptyType" />
+      <xsd:element name="Kappa" type="docEmptyType" />
+      <xsd:element name="Lambda" type="docEmptyType" />
+      <xsd:element name="Mu" type="docEmptyType" />
+      <xsd:element name="Nu" type="docEmptyType" />
+      <xsd:element name="Xi" type="docEmptyType" />
+      <xsd:element name="Omicron" type="docEmptyType" />
+      <xsd:element name="Pi" type="docEmptyType" />
+      <xsd:element name="Rho" type="docEmptyType" />
+      <xsd:element name="Sigma" type="docEmptyType" />
+      <xsd:element name="Tau" type="docEmptyType" />
+      <xsd:element name="Upsilon" type="docEmptyType" />
+      <xsd:element name="Phi" type="docEmptyType" />
+      <xsd:element name="Chi" type="docEmptyType" />
+      <xsd:element name="Psi" type="docEmptyType" />
+      <xsd:element name="Omega" type="docEmptyType" />
+      <xsd:element name="alpha" type="docEmptyType" />
+      <xsd:element name="beta" type="docEmptyType" />
+      <xsd:element name="gamma" type="docEmptyType" />
+      <xsd:element name="delta" type="docEmptyType" />
+      <xsd:element name="epsilon" type="docEmptyType" />
+      <xsd:element name="zeta" type="docEmptyType" />
+      <xsd:element name="eta" type="docEmptyType" />
+      <xsd:element name="theta" type="docEmptyType" />
+      <xsd:element name="iota" type="docEmptyType" />
+      <xsd:element name="kappa" type="docEmptyType" />
+      <xsd:element name="lambda" type="docEmptyType" />
+      <xsd:element name="mu" type="docEmptyType" />
+      <xsd:element name="nu" type="docEmptyType" />
+      <xsd:element name="xi" type="docEmptyType" />
+      <xsd:element name="omicron" type="docEmptyType" />
+      <xsd:element name="pi" type="docEmptyType" />
+      <xsd:element name="rho" type="docEmptyType" />
+      <xsd:element name="sigmaf" type="docEmptyType" />
+      <xsd:element name="sigma" type="docEmptyType" />
+      <xsd:element name="tau" type="docEmptyType" />
+      <xsd:element name="upsilon" type="docEmptyType" />
+      <xsd:element name="phi" type="docEmptyType" />
+      <xsd:element name="chi" type="docEmptyType" />
+      <xsd:element name="psi" type="docEmptyType" />
+      <xsd:element name="omega" type="docEmptyType" />
+      <xsd:element name="thetasym" type="docEmptyType" />
+      <xsd:element name="upsih" type="docEmptyType" />
+      <xsd:element name="piv" type="docEmptyType" />
+      <xsd:element name="bull" type="docEmptyType" />
+      <xsd:element name="hellip" type="docEmptyType" />
+      <xsd:element name="prime" type="docEmptyType" />
+      <xsd:element name="Prime" type="docEmptyType" />
+      <xsd:element name="oline" type="docEmptyType" />
+      <xsd:element name="frasl" type="docEmptyType" />
+      <xsd:element name="weierp" type="docEmptyType" />
+      <xsd:element name="image" type="docEmptyType" />
+      <xsd:element name="real" type="docEmptyType" />
+      <xsd:element name="trademark" type="docEmptyType" />
+      <xsd:element name="alefsym" type="docEmptyType" />
+      <xsd:element name="larr" type="docEmptyType" />
+      <xsd:element name="uarr" type="docEmptyType" />
+      <xsd:element name="rarr" type="docEmptyType" />
+      <xsd:element name="darr" type="docEmptyType" />
+      <xsd:element name="harr" type="docEmptyType" />
+      <xsd:element name="crarr" type="docEmptyType" />
+      <xsd:element name="lArr" type="docEmptyType" />
+      <xsd:element name="uArr" type="docEmptyType" />
+      <xsd:element name="rArr" type="docEmptyType" />
+      <xsd:element name="dArr" type="docEmptyType" />
+      <xsd:element name="hArr" type="docEmptyType" />
+      <xsd:element name="forall" type="docEmptyType" />
+      <xsd:element name="part" type="docEmptyType" />
+      <xsd:element name="exist" type="docEmptyType" />
+      <xsd:element name="empty" type="docEmptyType" />
+      <xsd:element name="nabla" type="docEmptyType" />
+      <xsd:element name="isin" type="docEmptyType" />
+      <xsd:element name="notin" type="docEmptyType" />
+      <xsd:element name="ni" type="docEmptyType" />
+      <xsd:element name="prod" type="docEmptyType" />
+      <xsd:element name="sum" type="docEmptyType" />
+      <xsd:element name="minus" type="docEmptyType" />
+      <xsd:element name="lowast" type="docEmptyType" />
+      <xsd:element name="radic" type="docEmptyType" />
+      <xsd:element name="prop" type="docEmptyType" />
+      <xsd:element name="infin" type="docEmptyType" />
+      <xsd:element name="ang" type="docEmptyType" />
+      <xsd:element name="and" type="docEmptyType" />
+      <xsd:element name="or" type="docEmptyType" />
+      <xsd:element name="cap" type="docEmptyType" />
+      <xsd:element name="cup" type="docEmptyType" />
+      <xsd:element name="int" type="docEmptyType" />
+      <xsd:element name="there4" type="docEmptyType" />
+      <xsd:element name="sim" type="docEmptyType" />
+      <xsd:element name="cong" type="docEmptyType" />
+      <xsd:element name="asymp" type="docEmptyType" />
+      <xsd:element name="ne" type="docEmptyType" />
+      <xsd:element name="equiv" type="docEmptyType" />
+      <xsd:element name="le" type="docEmptyType" />
+      <xsd:element name="ge" type="docEmptyType" />
+      <xsd:element name="sub" type="docEmptyType" />
+      <xsd:element name="sup" type="docEmptyType" />
+      <xsd:element name="nsub" type="docEmptyType" />
+      <xsd:element name="sube" type="docEmptyType" />
+      <xsd:element name="supe" type="docEmptyType" />
+      <xsd:element name="oplus" type="docEmptyType" />
+      <xsd:element name="otimes" type="docEmptyType" />
+      <xsd:element name="perp" type="docEmptyType" />
+      <xsd:element name="sdot" type="docEmptyType" />
+      <xsd:element name="lceil" type="docEmptyType" />
+      <xsd:element name="rceil" type="docEmptyType" />
+      <xsd:element name="lfloor" type="docEmptyType" />
+      <xsd:element name="rfloor" type="docEmptyType" />
+      <xsd:element name="lang" type="docEmptyType" />
+      <xsd:element name="rang" type="docEmptyType" />
+      <xsd:element name="loz" type="docEmptyType" />
+      <xsd:element name="spades" type="docEmptyType" />
+      <xsd:element name="clubs" type="docEmptyType" />
+      <xsd:element name="hearts" type="docEmptyType" />
+      <xsd:element name="diams" type="docEmptyType" />
+      <xsd:element name="OElig" type="docEmptyType" />
+      <xsd:element name="oelig" type="docEmptyType" />
+      <xsd:element name="Scaron" type="docEmptyType" />
+      <xsd:element name="scaron" type="docEmptyType" />
+      <xsd:element name="Yumlaut" type="docEmptyType" />
+      <xsd:element name="circ" type="docEmptyType" />
+      <xsd:element name="tilde" type="docEmptyType" />
+      <xsd:element name="ensp" type="docEmptyType" />
+      <xsd:element name="emsp" type="docEmptyType" />
+      <xsd:element name="thinsp" type="docEmptyType" />
+      <xsd:element name="zwnj" type="docEmptyType" />
+      <xsd:element name="zwj" type="docEmptyType" />
+      <xsd:element name="lrm" type="docEmptyType" />
+      <xsd:element name="rlm" type="docEmptyType" />
+      <xsd:element name="ndash" type="docEmptyType" />
+      <xsd:element name="mdash" type="docEmptyType" />
+      <xsd:element name="lsquo" type="docEmptyType" />
+      <xsd:element name="rsquo" type="docEmptyType" />
+      <xsd:element name="sbquo" type="docEmptyType" />
+      <xsd:element name="ldquo" type="docEmptyType" />
+      <xsd:element name="rdquo" type="docEmptyType" />
+      <xsd:element name="bdquo" type="docEmptyType" />
+      <xsd:element name="dagger" type="docEmptyType" />
+      <xsd:element name="Dagger" type="docEmptyType" />
+      <xsd:element name="permil" type="docEmptyType" />
+      <xsd:element name="lsaquo" type="docEmptyType" />
+      <xsd:element name="rsaquo" type="docEmptyType" />
+      <xsd:element name="euro" type="docEmptyType" />
+      <xsd:element name="trademark" type="docEmptyType" />
+    </xsd:choice>
+  </xsd:group>
+
+  <xsd:complexType name="docTitleType" mixed="true">
+    <xsd:group ref="docTitleCmdGroup" minOccurs="0" maxOccurs="unbounded" />
+  </xsd:complexType>
+
+  <xsd:group name="docCmdGroup">
+    <xsd:choice>
+      <xsd:group ref="docTitleCmdGroup"/>
+      <xsd:element name="linebreak" type="docEmptyType" />
+      <xsd:element name="hruler" type="docEmptyType" />
+      <xsd:element name="preformatted" type="docMarkupType" />
+      <xsd:element name="programlisting" type="listingType" />
+      <xsd:element name="verbatim" type="xsd:string" />
+      <xsd:element name="indexentry" type="docIndexEntryType" />
+      <xsd:element name="orderedlist" type="docListType" />
+      <xsd:element name="itemizedlist" type="docListType" />
+      <xsd:element name="simplesect" type="docSimpleSectType" />
+      <xsd:element name="title" type="docTitleType" />
+      <xsd:element name="variablelist" type="docVariableListType" />
+      <xsd:element name="table" type="docTableType" />
+      <xsd:element name="heading" type="docHeadingType" />
+      <xsd:element name="image" type="docImageType" />
+      <xsd:element name="dotfile" type="docFileType" />
+      <xsd:element name="mscfile" type="docFileType" />
+      <xsd:element name="diafile" type="docFileType" />
+      <xsd:element name="toclist" type="docTocListType" />
+      <xsd:element name="language" type="docLanguageType" />
+      <xsd:element name="parameterlist" type="docParamListType" />
+      <xsd:element name="xrefsect" type="docXRefSectType" />
+      <xsd:element name="copydoc" type="docCopyType" />
+      <xsd:element name="blockquote" type="docBlockQuoteType" />
+      <xsd:element name="parblock" type="docParBlockType" />
+    </xsd:choice>
+  </xsd:group>
+
+  <xsd:complexType name="docParaType" mixed="true">
+    <xsd:group ref="docCmdGroup" minOccurs="0" maxOccurs="unbounded" />
+  </xsd:complexType>
+
+  <xsd:complexType name="docMarkupType" mixed="true">
+    <xsd:group ref="docCmdGroup" minOccurs="0" maxOccurs="unbounded" />
+  </xsd:complexType>
+
+  <xsd:complexType name="docURLLink" mixed="true">
+    <xsd:group ref="docTitleCmdGroup" minOccurs="0" maxOccurs="unbounded" />
+    <xsd:attribute name="url" type="xsd:string" />
+  </xsd:complexType>
+
+  <xsd:complexType name="docAnchorType" mixed="true">
+    <xsd:attribute name="id" type="xsd:string" />
+  </xsd:complexType>
+
+  <xsd:complexType name="docFormulaType" mixed="true">
+    <xsd:attribute name="id" type="xsd:string" />
+  </xsd:complexType>
+
+  <xsd:complexType name="docIndexEntryType">
+    <xsd:sequence>
+      <xsd:element name="primaryie" type="xsd:string" />
+      <xsd:element name="secondaryie" type="xsd:string" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="docListType">
+    <xsd:sequence>
+      <xsd:element name="listitem" type="docListItemType" maxOccurs="unbounded" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="docListItemType">
+    <xsd:sequence>
+      <xsd:element name="para" type="docParaType" minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="docSimpleSectType">
+    <xsd:sequence>
+      <xsd:element name="title" type="docTitleType" minOccurs="0" />
+      <xsd:sequence minOccurs="0" maxOccurs="unbounded">
+        <xsd:element name="para" type="docParaType" minOccurs="1" maxOccurs="unbounded" />
+      </xsd:sequence>
+    </xsd:sequence>
+    <xsd:attribute name="kind" type="DoxSimpleSectKind" />
+  </xsd:complexType>
+
+  <xsd:complexType name="docVarListEntryType">
+    <xsd:sequence>
+      <xsd:element name="term" type="docTitleType" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:group name="docVariableListGroup">
+    <xsd:sequence>
+      <xsd:element name="varlistentry" type="docVarListEntryType" />
+      <xsd:element name="listitem" type="docListItemType" />
+    </xsd:sequence>
+  </xsd:group>
+
+  <xsd:complexType name="docVariableListType">
+    <xsd:sequence>
+      <xsd:group ref="docVariableListGroup" maxOccurs="unbounded" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="docRefTextType" mixed="true">
+    <xsd:group ref="docTitleCmdGroup" minOccurs="0" maxOccurs="unbounded" />
+    <xsd:attribute name="refid" type="xsd:string" />
+    <xsd:attribute name="kindref" type="DoxRefKind" />
+    <xsd:attribute name="external" type="xsd:string" />
+  </xsd:complexType>
+
+  <xsd:complexType name="docTableType">
+    <xsd:sequence>
+      <xsd:element name="row" type="docRowType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="caption" type="docCaptionType" minOccurs="0" />
+    </xsd:sequence>
+    <xsd:attribute name="rows" type="xsd:integer" />
+    <xsd:attribute name="cols" type="xsd:integer" />
+  </xsd:complexType>
+
+  <xsd:complexType name="docRowType">
+    <xsd:sequence>
+      <xsd:element name="entry" type="docEntryType" minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="docEntryType">
+    <xsd:sequence>
+      <xsd:element name="para" type="docParaType" minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+    <xsd:attribute name="thead" type="DoxBool" />
+  </xsd:complexType>
+
+  <xsd:complexType name="docCaptionType" mixed="true">
+    <xsd:group ref="docTitleCmdGroup" minOccurs="0" maxOccurs="unbounded" />
+  </xsd:complexType>
+
+  <xsd:complexType name="docHeadingType" mixed="true">
+    <xsd:group ref="docTitleCmdGroup" minOccurs="0" maxOccurs="unbounded" />
+    <xsd:attribute name="level" type="xsd:integer" /> <!-- todo: range 1-6 -->
+  </xsd:complexType>
+
+  <xsd:complexType name="docImageType" mixed="true">
+    <xsd:group ref="docTitleCmdGroup" minOccurs="0" maxOccurs="unbounded" />
+    <xsd:attribute name="type" type="DoxImageKind" /> 
+    <xsd:attribute name="name" type="xsd:string" /> 
+    <xsd:attribute name="width" type="xsd:string" /> 
+    <xsd:attribute name="height" type="xsd:string" /> 
+  </xsd:complexType>
+
+  <xsd:complexType name="docFileType" mixed="true">
+    <xsd:group ref="docTitleCmdGroup" minOccurs="0" maxOccurs="unbounded" />
+    <xsd:attribute name="name" type="xsd:string" /> 
+  </xsd:complexType>
+
+  <xsd:complexType name="docTocItemType" mixed="true">
+    <xsd:group ref="docTitleCmdGroup" minOccurs="0" maxOccurs="unbounded" />
+    <xsd:attribute name="id" type="xsd:string" /> 
+  </xsd:complexType>
+
+  <xsd:complexType name="docTocListType">
+    <xsd:sequence>
+      <xsd:element name="tocitem" type="docTocItemType" minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="docLanguageType">
+    <xsd:sequence>
+      <xsd:element name="para" type="docParaType" minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+    <xsd:attribute name="langid" type="xsd:string" /> 
+  </xsd:complexType>
+
+  <xsd:complexType name="docParamListType">
+    <xsd:sequence>
+      <xsd:element name="parameteritem" type="docParamListItem" minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+    <xsd:attribute name="kind" type="DoxParamListKind" /> 
+  </xsd:complexType>
+
+  <xsd:complexType name="docParamListItem">
+    <xsd:sequence>
+      <xsd:element name="parameternamelist" type="docParamNameList" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="parameterdescription" type="descriptionType" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="docParamNameList">
+    <xsd:sequence>
+      <xsd:element name="parametertype" type="docParamType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="parametername" type="docParamName" minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="docParamType" mixed="true">
+    <xsd:sequence>
+      <xsd:element name="ref" type="refTextType" minOccurs="0" maxOccurs="1" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="docParamName" mixed="true">
+    <xsd:sequence>
+      <xsd:element name="ref" type="refTextType" minOccurs="0" maxOccurs="1" />
+    </xsd:sequence>
+    <xsd:attribute name="direction" type="DoxParamDir" use="optional" />
+  </xsd:complexType>
+
+  <xsd:complexType name="docXRefSectType">
+    <xsd:sequence>
+      <xsd:element name="xreftitle" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="xrefdescription" type="descriptionType" />
+    </xsd:sequence>
+    <xsd:attribute name="id" type="xsd:string" /> 
+  </xsd:complexType>
+
+  <xsd:complexType name="docCopyType">
+    <xsd:sequence>
+      <xsd:element name="para" type="docParaType" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="sect1" type="docSect1Type" minOccurs="0" maxOccurs="unbounded" />
+      <xsd:element name="internal" type="docInternalType" minOccurs="0" />
+    </xsd:sequence>
+    <xsd:attribute name="link" type="xsd:string" /> 
+  </xsd:complexType>
+
+  <xsd:complexType name="docBlockQuoteType">
+    <xsd:sequence>
+      <xsd:element name="para" type="docParaType" minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="docParBlockType">
+    <xsd:sequence>
+      <xsd:element name="para" type="docParaType" minOccurs="0" maxOccurs="unbounded" />
+    </xsd:sequence>
+  </xsd:complexType>
+
+  <xsd:complexType name="docEmptyType"/>
+
+  <!-- Simple types -->
+
+  <xsd:simpleType name="DoxBool">
+    <xsd:restriction base="xsd:string">
+      <xsd:enumeration value="yes" />
+      <xsd:enumeration value="no" />
+    </xsd:restriction>
+  </xsd:simpleType>
+
+  <xsd:simpleType name="DoxGraphRelation">
+    <xsd:restriction base="xsd:string">
+      <xsd:enumeration value="include" />
+      <xsd:enumeration value="usage" />
+      <xsd:enumeration value="template-instance" />
+      <xsd:enumeration value="public-inheritance" />
+      <xsd:enumeration value="protected-inheritance" />
+      <xsd:enumeration value="private-inheritance" />
+      <xsd:enumeration value="type-constraint" />
+    </xsd:restriction>
+  </xsd:simpleType>
+
+  <xsd:simpleType name="DoxRefKind">
+    <xsd:restriction base="xsd:string">
+      <xsd:enumeration value="compound" />
+      <xsd:enumeration value="member" />
+    </xsd:restriction>
+  </xsd:simpleType>
+
+  <xsd:simpleType name="DoxMemberKind">
+    <xsd:restriction base="xsd:string">
+      <xsd:enumeration value="define" />
+      <xsd:enumeration value="property" />
+      <xsd:enumeration value="event" />
+      <xsd:enumeration value="variable" />
+      <xsd:enumeration value="typedef" />
+      <xsd:enumeration value="enum" />
+      <xsd:enumeration value="function" />
+      <xsd:enumeration value="signal" />
+      <xsd:enumeration value="prototype" />
+      <xsd:enumeration value="friend" />
+      <xsd:enumeration value="dcop" />
+      <xsd:enumeration value="slot" />
+      <xsd:enumeration value="interface" />
+      <xsd:enumeration value="service" />
+    </xsd:restriction>
+  </xsd:simpleType>
+
+  <xsd:simpleType name="DoxProtectionKind">
+    <xsd:restriction base="xsd:string">
+      <xsd:enumeration value="public" />
+      <xsd:enumeration value="protected" />
+      <xsd:enumeration value="private" />
+      <xsd:enumeration value="package" />
+    </xsd:restriction>
+  </xsd:simpleType>
+
+  <xsd:simpleType name="DoxLanguage">
+    <xsd:restriction base="xsd:string">
+      <xsd:enumeration value="Unknown" />
+      <xsd:enumeration value="IDL" />
+      <xsd:enumeration value="Java" />
+      <xsd:enumeration value="C#" />
+      <xsd:enumeration value="D" />
+      <xsd:enumeration value="PHP" />
+      <xsd:enumeration value="Objective-C" />
+      <xsd:enumeration value="C++" />
+      <xsd:enumeration value="Javascript" />
+      <xsd:enumeration value="Python" />
+      <xsd:enumeration value="Fortran" />
+      <xsd:enumeration value="VHDL" />
+      <xsd:enumeration value="XML" />
+      <xsd:enumeration value="Tcl" />
+      <xsd:enumeration value="Markdown" />
+    </xsd:restriction>
+  </xsd:simpleType>
+
+  <xsd:simpleType name="DoxVirtualKind">
+    <xsd:restriction base="xsd:string">
+      <xsd:enumeration value="non-virtual" />
+      <xsd:enumeration value="virtual" />
+      <xsd:enumeration value="pure-virtual" />
+    </xsd:restriction>
+  </xsd:simpleType>
+
+  <xsd:simpleType name="DoxCompoundKind">
+    <xsd:restriction base="xsd:string">
+      <xsd:enumeration value="class" />
+      <xsd:enumeration value="struct" />
+      <xsd:enumeration value="union" />
+      <xsd:enumeration value="interface" />
+      <xsd:enumeration value="protocol" />
+      <xsd:enumeration value="category" />
+      <xsd:enumeration value="exception" />
+      <xsd:enumeration value="service" />
+      <xsd:enumeration value="singleton" />
+      <xsd:enumeration value="module" />
+      <xsd:enumeration value="type" />
+      <xsd:enumeration value="file" />
+      <xsd:enumeration value="namespace" />
+      <xsd:enumeration value="group" />
+      <xsd:enumeration value="page" />
+      <xsd:enumeration value="example" />
+      <xsd:enumeration value="dir" />
+    </xsd:restriction>
+  </xsd:simpleType>
+
+  <xsd:simpleType name="DoxSectionKind">
+    <xsd:restriction base="xsd:string">
+      <xsd:enumeration value="user-defined" />
+      <xsd:enumeration value="public-type" />
+      <xsd:enumeration value="public-func" />
+      <xsd:enumeration value="public-attrib" />
+      <xsd:enumeration value="public-slot" />
+      <xsd:enumeration value="signal" />
+      <xsd:enumeration value="dcop-func" />
+      <xsd:enumeration value="property" />
+      <xsd:enumeration value="event" />
+      <xsd:enumeration value="public-static-func" />
+      <xsd:enumeration value="public-static-attrib" />
+      <xsd:enumeration value="protected-type" />
+      <xsd:enumeration value="protected-func" />
+      <xsd:enumeration value="protected-attrib" />
+      <xsd:enumeration value="protected-slot" />
+      <xsd:enumeration value="protected-static-func" />
+      <xsd:enumeration value="protected-static-attrib" />
+      <xsd:enumeration value="package-type" />
+      <xsd:enumeration value="package-func" />
+      <xsd:enumeration value="package-attrib" />
+      <xsd:enumeration value="package-static-func" />
+      <xsd:enumeration value="package-static-attrib" />
+      <xsd:enumeration value="private-type" />
+      <xsd:enumeration value="private-func" />
+      <xsd:enumeration value="private-attrib" />
+      <xsd:enumeration value="private-slot" />
+      <xsd:enumeration value="private-static-func" />
+      <xsd:enumeration value="private-static-attrib" />
+      <xsd:enumeration value="friend" />
+      <xsd:enumeration value="related" />
+      <xsd:enumeration value="define" />
+      <xsd:enumeration value="prototype" />
+      <xsd:enumeration value="typedef" />
+      <xsd:enumeration value="enum" />
+      <xsd:enumeration value="func" />
+      <xsd:enumeration value="var" />
+    </xsd:restriction>
+  </xsd:simpleType>
+
+  <xsd:simpleType name="DoxHighlightClass">
+    <xsd:restriction base="xsd:string">
+      <xsd:enumeration value="comment" />
+      <xsd:enumeration value="normal" />
+      <xsd:enumeration value="preprocessor" />
+      <xsd:enumeration value="keyword" />
+      <xsd:enumeration value="keywordtype" />
+      <xsd:enumeration value="keywordflow" />
+      <xsd:enumeration value="stringliteral" />
+      <xsd:enumeration value="charliteral" />
+    </xsd:restriction>
+  </xsd:simpleType>
+
+  <xsd:simpleType name="DoxSimpleSectKind">
+    <xsd:restriction base="xsd:string">
+      <xsd:enumeration value="see" />
+      <xsd:enumeration value="return" />
+      <xsd:enumeration value="author" />
+      <xsd:enumeration value="authors" />
+      <xsd:enumeration value="version" />
+      <xsd:enumeration value="since" />
+      <xsd:enumeration value="date" />
+      <xsd:enumeration value="note" />
+      <xsd:enumeration value="warning" />
+      <xsd:enumeration value="pre" />
+      <xsd:enumeration value="post" />
+      <xsd:enumeration value="copyright" />
+      <xsd:enumeration value="invariant" />
+      <xsd:enumeration value="remark" />
+      <xsd:enumeration value="attention" />
+      <xsd:enumeration value="par" />
+      <xsd:enumeration value="rcs" />
+    </xsd:restriction>
+  </xsd:simpleType>
+
+  <xsd:simpleType name="DoxVersionNumber">
+    <xsd:restriction base="xsd:string">
+      <xsd:pattern value="\d+\.\d+.*" />
+    </xsd:restriction>
+  </xsd:simpleType>
+
+  <xsd:simpleType name="DoxImageKind">
+    <xsd:restriction base="xsd:string">
+      <xsd:enumeration value="html" />
+      <xsd:enumeration value="latex" />
+      <xsd:enumeration value="rtf" />
+    </xsd:restriction>
+  </xsd:simpleType>
+
+  <xsd:simpleType name="DoxParamListKind">
+    <xsd:restriction base="xsd:string">
+      <xsd:enumeration value="param" />
+      <xsd:enumeration value="retval" />
+      <xsd:enumeration value="exception" />
+      <xsd:enumeration value="templateparam" />
+    </xsd:restriction>
+  </xsd:simpleType>
+
+  <xsd:simpleType name="DoxCharRange">
+    <xsd:restriction base="xsd:string">
+      <xsd:pattern value="[aeiouncAEIOUNC]" />
+    </xsd:restriction>
+  </xsd:simpleType>
+
+  <xsd:simpleType name="DoxParamDir">
+    <xsd:restriction base="xsd:string">
+      <xsd:enumeration value="in"/>
+      <xsd:enumeration value="out"/>
+      <xsd:enumeration value="inout"/>
+    </xsd:restriction>
+  </xsd:simpleType>
+
+  <xsd:simpleType name="DoxAccessor">
+    <xsd:restriction base="xsd:string">
+      <xsd:enumeration value="retain"/>
+      <xsd:enumeration value="copy"/>
+      <xsd:enumeration value="assign"/>
+      <xsd:enumeration value="weak"/>
+      <xsd:enumeration value="strong"/>
+      <xsd:enumeration value="unretained"/>
+    </xsd:restriction>
+  </xsd:simpleType>
+
+</xsd:schema>
+
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/deprecated.xml
@@ -0,0 +1,15 @@
+<?xml version='1.0' encoding='UTF-8' standalone='no'?>
+<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
+  <compounddef id="deprecated" kind="page">
+    <compoundname>deprecated</compoundname>
+    <title>Deprecated List</title>
+    <detaileddescription>
+<para><variablelist>
+<varlistentry><term><anchor id="deprecated_1_deprecated000001"/>Member <ref refid="NonlinearFactor_8h_1acd444d887da7c7f7107e8a5caa703b22" kindref="member">ADD_CLONE_NONLINEAR_FACTOR</ref>  (Derived)</term></varlistentry>
+<listitem><para>: will go away shortly - just add the clone function directly  </para></listitem>
+<varlistentry><term><anchor id="deprecated_1_deprecated000002"/>Member <ref refid="classgtsam_1_1NoiseModelFactor_1a16a8a23069ce6ae664f516edc8f36254" kindref="member">gtsam::NoiseModelFactor::get_noiseModel</ref>  () const </term></varlistentry>
+<listitem><para>access to the noise model </para></listitem>
+</variablelist>
+</para>    </detaileddescription>
+  </compounddef>
+</doxygen>
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/dir_59425e443f801f1f2fd8bbe4959a3ccf.xml
@@ -0,0 +1,12 @@
+<?xml version='1.0' encoding='UTF-8' standalone='no'?>
+<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
+  <compounddef id="dir_59425e443f801f1f2fd8bbe4959a3ccf" kind="dir">
+    <compoundname>tests</compoundname>
+    <innerdir refid="dir_e4787312bc569bb879bb1171628269de">tests/doc-test-files</innerdir>
+    <briefdescription>
+    </briefdescription>
+    <detaileddescription>
+    </detaileddescription>
+    <location file="tests/"/>
+  </compounddef>
+</doxygen>
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/dir_e4787312bc569bb879bb1171628269de.xml
@@ -0,0 +1,13 @@
+<?xml version='1.0' encoding='UTF-8' standalone='no'?>
+<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
+  <compounddef id="dir_e4787312bc569bb879bb1171628269de" kind="dir">
+    <compoundname>tests/doc-test-files</compoundname>
+    <innerfile refid="JacobianFactorQ_8h">JacobianFactorQ.h</innerfile>
+    <innerfile refid="NonlinearFactor_8h">NonlinearFactor.h</innerfile>
+    <briefdescription>
+    </briefdescription>
+    <detaileddescription>
+    </detaileddescription>
+    <location file="tests/doc-test-files/"/>
+  </compounddef>
+</doxygen>
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/index.xml
@@ -0,0 +1,174 @@
+<?xml version='1.0' encoding='UTF-8' standalone='no'?>
+<doxygenindex xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd" version="1.8.11">
+  <compound refid="classgtsam_1_1JacobianFactorQ" kind="class"><name>gtsam::JacobianFactorQ</name>
+    <member refid="classgtsam_1_1JacobianFactorQ_1abb244ea915349e3beb40b669fe8317c4" kind="typedef"><name>Base</name></member>
+    <member refid="classgtsam_1_1JacobianFactorQ_1aa64b12e917e0c89d0d0e9782ea9e06a4" kind="typedef"><name>MatrixZD</name></member>
+    <member refid="classgtsam_1_1JacobianFactorQ_1a2dbb8aa1aaf1d46d64181c5aeeb1a06c" kind="typedef"><name>KeyMatrix</name></member>
+    <member refid="classgtsam_1_1JacobianFactorQ_1a4dd3fbba46a6dff75bcf902931a3b769" kind="function"><name>JacobianFactorQ</name></member>
+    <member refid="classgtsam_1_1JacobianFactorQ_1abfb38e58b5b2d1293cf374b7eca2b2d4" kind="function"><name>JacobianFactorQ</name></member>
+    <member refid="classgtsam_1_1JacobianFactorQ_1a549fef1272025c45472f2e4294bd319e" kind="function"><name>JacobianFactorQ</name></member>
+  </compound>
+  <compound refid="classgtsam_1_1NoiseModelFactor" kind="class"><name>gtsam::NoiseModelFactor</name>
+    <member refid="classgtsam_1_1NoiseModelFactor_1a9ac7f77c3ae2d5bfd14d25f4bdc3deaa" kind="typedef"><name>Base</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor_1a44e242fb0945cf6c60d30c36c3f229af" kind="typedef"><name>This</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor_1a57d98d52fb6f91ebc54d74746aeb90e4" kind="typedef"><name>shared_ptr</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor_1a2263eabbefe0eede8c9d10486f61bb4d" kind="variable"><name>noiseModel_</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor_1ac98d07dd8f7b70e16ccb9a01abf56b9c" kind="friend"><name>boost::serialization::access</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor_1ad6e8ef3348e042d598617d1d55f20300" kind="function"><name>NoiseModelFactor</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor_1ae1ed5e0fa6c471b57172f7ebaf552187" kind="function"><name>~NoiseModelFactor</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor_1a02cea97db30d27b51feaf1f0444d743c" kind="function"><name>NoiseModelFactor</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor_1a682e0bbaf0c9638b7d0d96148082d1d7" kind="function"><name>print</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor_1a616d0335db512e9c333cab83b1923399" kind="function"><name>equals</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor_1af4f62b52fff1a0527ecdb279de023728" kind="function"><name>dim</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor_1a123e5729d70b4acd6d7e1f70b1a7ced4" kind="function"><name>noiseModel</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor_1a16a8a23069ce6ae664f516edc8f36254" kind="function"><name>get_noiseModel</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor_1afd61874915a8076bf83f9d8311fc0e26" kind="function"><name>unwhitenedError</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor_1a1b3ea51380315bfd63f60d8d9195b0c1" kind="function"><name>whitenedError</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor_1af6147aff3a33f734435601f6dcafeaf9" kind="function"><name>error</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor_1a0c83582a0bd04e112e4c0a17cd4ed324" kind="function"><name>linearize</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor_1a4605224417029e9dc58c5267efa9a46d" kind="function"><name>NoiseModelFactor</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor_1abb60fdb39cb6939b08744605713e153e" kind="function"><name>serialize</name></member>
+  </compound>
+  <compound refid="classgtsam_1_1NoiseModelFactor1" kind="class"><name>gtsam::NoiseModelFactor1</name>
+    <member refid="classgtsam_1_1NoiseModelFactor1_1a37d19c88478e96cf1dfc065229734ece" kind="typedef"><name>X</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor1_1a8ed3a4fbfc8843df8a2f21a805e93ef0" kind="typedef"><name>Base</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor1_1a22cb5d89cc9ec25e2d94004917d890fc" kind="typedef"><name>This</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor1_1ac98d07dd8f7b70e16ccb9a01abf56b9c" kind="friend"><name>boost::serialization::access</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor1_1a85c649f81b216f5b5d7e321febc7762c" kind="function"><name>NoiseModelFactor1</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor1_1aecf0afe14b2af551d62a6e62ee8a8d27" kind="function"><name>~NoiseModelFactor1</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor1_1af7fe05db115c50d7f3bc2aaa1d6c7950" kind="function"><name>key</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor1_1a70a0b32dd5feba3631815614d8386c86" kind="function"><name>NoiseModelFactor1</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor1_1a886bb13688a62b2680c10cdaf7999918" kind="function"><name>unwhitenedError</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor1_1a42ed690bfeafe79ab396126886b05820" kind="function"><name>evaluateError</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor1_1a7f153cb8f238a3be2260979af5b590ab" kind="function"><name>serialize</name></member>
+  </compound>
+  <compound refid="classgtsam_1_1NoiseModelFactor2" kind="class"><name>gtsam::NoiseModelFactor2</name>
+    <member refid="classgtsam_1_1NoiseModelFactor2_1a5fb0fe8b056bad2171f84922c5184ef1" kind="typedef"><name>X1</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor2_1a3b3777f359b34892f33784d73cb62234" kind="typedef"><name>X2</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor2_1a8c2961991a7f2b253874612fc8124c09" kind="typedef"><name>Base</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor2_1a2743c4c486e80127e8eca591ee3ffbed" kind="typedef"><name>This</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor2_1ac98d07dd8f7b70e16ccb9a01abf56b9c" kind="friend"><name>boost::serialization::access</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor2_1a04f5873776c784cafd55b4ac05b4b757" kind="function"><name>NoiseModelFactor2</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor2_1a35453b054509f5679a29a06b59340cf1" kind="function"><name>NoiseModelFactor2</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor2_1ab629a5dc71461efe61d68faaf5a659f3" kind="function"><name>~NoiseModelFactor2</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor2_1ae3b88b40b4ee6e9af9eefcde77bf9768" kind="function"><name>key1</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor2_1a4d27f5d0beaa35e1e4a5f0ef8974c5a6" kind="function"><name>key2</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor2_1a9640bbbb433383f0b40b5c2d9439415e" kind="function"><name>unwhitenedError</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor2_1a9aa6dcd7db6734479e2212213b021ec1" kind="function"><name>evaluateError</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor2_1ae600c15f59be175aca5b059e488d7166" kind="function"><name>serialize</name></member>
+  </compound>
+  <compound refid="classgtsam_1_1NoiseModelFactor3" kind="class"><name>gtsam::NoiseModelFactor3</name>
+    <member refid="classgtsam_1_1NoiseModelFactor3_1a85e11c8ae6f70e0bdf17f9b6405e6501" kind="typedef"><name>X1</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor3_1aaa8424af6ceb0ce3458efe56d52d5187" kind="typedef"><name>X2</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor3_1a9924ba92623c9a10a286ddd1a8b33f2e" kind="typedef"><name>X3</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor3_1a45c5f50294af1756fac4d4f59b7e31e5" kind="typedef"><name>Base</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor3_1a91a0dfdc66913a71ba5daea0ac681745" kind="typedef"><name>This</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor3_1ac98d07dd8f7b70e16ccb9a01abf56b9c" kind="friend"><name>boost::serialization::access</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor3_1a0bf4383cea2cdb0d263e570e98499ac7" kind="function"><name>NoiseModelFactor3</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor3_1ac2a8e8247e7d55768915fac27a4c078c" kind="function"><name>NoiseModelFactor3</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor3_1a4b4dcb0572c11a2f920b67d0ca7ac8b7" kind="function"><name>~NoiseModelFactor3</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor3_1a535f2bec61538509696513b2ab6bbf0b" kind="function"><name>key1</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor3_1af049e3934c4588d78810051272bdd995" kind="function"><name>key2</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor3_1ae8722af2eb7ac282ba82e49fca1264e1" kind="function"><name>key3</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor3_1aab8e3316ef77cecc1bd1909a2c0eed33" kind="function"><name>unwhitenedError</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor3_1a78613881d348f96be1a158b9bb812950" kind="function"><name>evaluateError</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor3_1a61eb4f72c087d840f4c66db44772437b" kind="function"><name>serialize</name></member>
+  </compound>
+  <compound refid="classgtsam_1_1NoiseModelFactor4" kind="class"><name>gtsam::NoiseModelFactor4</name>
+    <member refid="classgtsam_1_1NoiseModelFactor4_1ae43138cc390ef4b2956e334f160df42e" kind="typedef"><name>X1</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor4_1aafd5bc6e588c7e1084897814831713c5" kind="typedef"><name>X2</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor4_1aa07132c1d7f42154fafd026c702ca240" kind="typedef"><name>X3</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor4_1a6ca1a804d790e17f108c8e14df2c5077" kind="typedef"><name>X4</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor4_1a846f05b113e5553fe7b42a9a49906f98" kind="typedef"><name>Base</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor4_1a372757bbf75dee8eaf33b479b31f06a1" kind="typedef"><name>This</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor4_1ac98d07dd8f7b70e16ccb9a01abf56b9c" kind="friend"><name>boost::serialization::access</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor4_1a65adc8d1272df63390168b26f4f7bc70" kind="function"><name>NoiseModelFactor4</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor4_1a8ce3daa05897e12db9e38a9c96043ce3" kind="function"><name>NoiseModelFactor4</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor4_1a3e53af328261232767713e26fa0d35d5" kind="function"><name>~NoiseModelFactor4</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor4_1a4339880be87fa2a533aa07324481f7b6" kind="function"><name>key1</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor4_1acb1d3940d9b5ee1aa7c9c3c3c1a21ed9" kind="function"><name>key2</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor4_1ac1111c7becb0904f141dc07eff1a4e7c" kind="function"><name>key3</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor4_1a6d9ee65e09dfe61a663c60d97f01b341" kind="function"><name>key4</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor4_1a6a79ae22fc40447c8dc183a951243440" kind="function"><name>unwhitenedError</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor4_1a5e4197ee6a113e77d2abc1dbbebb0857" kind="function"><name>evaluateError</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor4_1a51fda42bdf2b1b442b5a8ed204386816" kind="function"><name>serialize</name></member>
+  </compound>
+  <compound refid="classgtsam_1_1NoiseModelFactor5" kind="class"><name>gtsam::NoiseModelFactor5</name>
+    <member refid="classgtsam_1_1NoiseModelFactor5_1a514869f1357a9e05118bfab0c6fa97e2" kind="typedef"><name>X1</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor5_1ad9181205117e8efb56ebe4f297645d3e" kind="typedef"><name>X2</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor5_1aeb3efb9dbda7a2fef53c55a4513ab4ec" kind="typedef"><name>X3</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor5_1a4e272b4742d0477f444995ec73e097c7" kind="typedef"><name>X4</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor5_1afaf024c990892895e5f5ed0b34758f27" kind="typedef"><name>X5</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor5_1a594617cffc3d1a9985cd64e34936a7f5" kind="typedef"><name>Base</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor5_1a19020d6d909366475872911b6dfc16df" kind="typedef"><name>This</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor5_1ac98d07dd8f7b70e16ccb9a01abf56b9c" kind="friend"><name>boost::serialization::access</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor5_1a424c4633f6c1907d0dd3381cffbed82a" kind="function"><name>NoiseModelFactor5</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor5_1a01d2e8a5253a67ceac02320a719c5280" kind="function"><name>NoiseModelFactor5</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor5_1ae16654ff529ddcfedd1b394f7716412d" kind="function"><name>~NoiseModelFactor5</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor5_1a23886196ba086677b1e2168e17a34280" kind="function"><name>key1</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor5_1a464749bd22a65ee29f99452f194eaf54" kind="function"><name>key2</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor5_1a028c4fbddfe09a66ac3780e23bd25fcd" kind="function"><name>key3</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor5_1aac1933a0fa685709867f12cb636c98d3" kind="function"><name>key4</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor5_1a529d24a558fe3e6bd1dc4839c9778f0c" kind="function"><name>key5</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor5_1a701b7a764f18310b4eea14ee023c922b" kind="function"><name>unwhitenedError</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor5_1af0adaca3d551e42404aaf98c3053b009" kind="function"><name>evaluateError</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor5_1a02db3a5d618d3738c5ec277626a2b598" kind="function"><name>serialize</name></member>
+  </compound>
+  <compound refid="classgtsam_1_1NoiseModelFactor6" kind="class"><name>gtsam::NoiseModelFactor6</name>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1a369d9accd53012d84bbbaf87b176222b" kind="typedef"><name>X1</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1a6107bc96fff5d12783429158e79b9390" kind="typedef"><name>X2</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1a76c477f40c2b911a9f28d456ea9164a2" kind="typedef"><name>X3</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1a2a90aff22e4bd88dae81bf824956a113" kind="typedef"><name>X4</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1ae13e19a4b3a7a331d04d5b460e73216f" kind="typedef"><name>X5</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1af44204ef6947a65b973dee5707495601" kind="typedef"><name>X6</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1ad4a36f4c5b39c0ea03806592fc1c3474" kind="typedef"><name>Base</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1a6939c52138ed37f395a57db8b50c71ec" kind="typedef"><name>This</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1ac98d07dd8f7b70e16ccb9a01abf56b9c" kind="friend"><name>boost::serialization::access</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1a15bcca054e397e486fb9dda0d0436cdb" kind="function"><name>NoiseModelFactor6</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1ad3d89a85f0c70d7a424f2060d514cab9" kind="function"><name>NoiseModelFactor6</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1ad62b1867b67dee83e8733392a0aa579b" kind="function"><name>~NoiseModelFactor6</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1a587ce14373742350ff30a78c856ecaa0" kind="function"><name>key1</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1a57f3ba7d334871bcb688727788ac95d3" kind="function"><name>key2</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1a37bbec5754c7c6bd7cee9b3e94d9cbb1" kind="function"><name>key3</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1a675e3df6fed6189dd9b8977907348960" kind="function"><name>key4</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1a926065f63458a5673888e0b53054061d" kind="function"><name>key5</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1a16a7857c857694bc66e19f455ad90a57" kind="function"><name>key6</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1a945d269f9a722d585e3332be23030450" kind="function"><name>unwhitenedError</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1a896a223b88b621bfe9f45bf8e2cd9960" kind="function"><name>evaluateError</name></member>
+    <member refid="classgtsam_1_1NoiseModelFactor6_1ac8f738f856920913a79e5017c1ced402" kind="function"><name>serialize</name></member>
+  </compound>
+  <compound refid="classgtsam_1_1NonlinearFactor" kind="class"><name>gtsam::NonlinearFactor</name>
+    <member refid="classgtsam_1_1NonlinearFactor_1a7c719ae67f222f66569ccb3b526cb9cb" kind="function"><name>NonlinearFactor</name></member>
+    <member refid="classgtsam_1_1NonlinearFactor_1a8a7610dba7e9a6f878268c2769ea0e04" kind="function"><name>NonlinearFactor</name></member>
+    <member refid="classgtsam_1_1NonlinearFactor_1a758285fe17213cbf9c23b9f42fb960e6" kind="function"><name>print</name></member>
+    <member refid="classgtsam_1_1NonlinearFactor_1a38cdabb3302973815e357bd00573734a" kind="function"><name>equals</name></member>
+    <member refid="classgtsam_1_1NonlinearFactor_1ac457810c504de58732d51d61f715c2de" kind="function"><name>~NonlinearFactor</name></member>
+    <member refid="classgtsam_1_1NonlinearFactor_1a8e67e58ff0e4f9d58f07e5eb227adc52" kind="function"><name>error</name></member>
+    <member refid="classgtsam_1_1NonlinearFactor_1a5f0fcf1c93ded207d4a31e8ede07d797" kind="function"><name>dim</name></member>
+    <member refid="classgtsam_1_1NonlinearFactor_1a1968f471dc3ea33aaf0226ff7be5ae8c" kind="function"><name>active</name></member>
+    <member refid="classgtsam_1_1NonlinearFactor_1af2cc20b4ec180610dbf224f2165fa50a" kind="function"><name>linearize</name></member>
+    <member refid="classgtsam_1_1NonlinearFactor_1aa98a30a78ade8489214ce2e5b8302777" kind="function"><name>clone</name></member>
+    <member refid="classgtsam_1_1NonlinearFactor_1a95f4d57e8646b6df634496aaabb683b5" kind="function"><name>rekey</name></member>
+    <member refid="classgtsam_1_1NonlinearFactor_1a5f760600e8608ef15c825a0f8d1d1855" kind="function"><name>rekey</name></member>
+    <member refid="classgtsam_1_1NonlinearFactor_1aa76bae0d7aeb6591a824daa7c5dc2ac6" kind="typedef"><name>Base</name></member>
+    <member refid="classgtsam_1_1NonlinearFactor_1a15c628be5e7433ee4ece0c5fd12d049e" kind="typedef"><name>This</name></member>
+    <member refid="classgtsam_1_1NonlinearFactor_1a3bf72f88f6e726577c89f894bf481515" kind="typedef"><name>shared_ptr</name></member>
+  </compound>
+  <compound refid="structgtsam_1_1traits_3_01JacobianFactorQ_3_01D_00_01ZDim_01_4_01_4" kind="struct"><name>gtsam::traits&lt; JacobianFactorQ&lt; D, ZDim &gt; &gt;</name>
+  </compound>
+  <compound refid="structgtsam_1_1traits_3_01NonlinearFactor_01_4" kind="struct"><name>gtsam::traits&lt; NonlinearFactor &gt;</name>
+  </compound>
+  <compound refid="namespacegtsam" kind="namespace"><name>gtsam</name>
+  </compound>
+  <compound refid="JacobianFactorQ_8h" kind="file"><name>JacobianFactorQ.h</name>
+  </compound>
+  <compound refid="NonlinearFactor_8h" kind="file"><name>NonlinearFactor.h</name>
+    <member refid="NonlinearFactor_8h_1acd444d887da7c7f7107e8a5caa703b22" kind="define"><name>ADD_CLONE_NONLINEAR_FACTOR</name></member>
+  </compound>
+  <compound refid="deprecated" kind="page"><name>deprecated</name>
+  </compound>
+  <compound refid="dir_e4787312bc569bb879bb1171628269de" kind="dir"><name>tests/doc-test-files</name>
+  </compound>
+  <compound refid="dir_59425e443f801f1f2fd8bbe4959a3ccf" kind="dir"><name>tests</name>
+  </compound>
+</doxygenindex>
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/index.xsd
@@ -0,0 +1,66 @@
+<?xml version='1.0' encoding='utf-8' ?>
+<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
+  <xsd:element name="doxygenindex" type="DoxygenType"/>
+
+  <xsd:complexType name="DoxygenType">
+    <xsd:sequence>
+      <xsd:element name="compound" type="CompoundType" minOccurs="0" maxOccurs="unbounded"/>
+    </xsd:sequence>
+    <xsd:attribute name="version" type="xsd:string" use="required"/>
+  </xsd:complexType>
+
+  <xsd:complexType name="CompoundType">
+    <xsd:sequence>
+      <xsd:element name="name" type="xsd:string"/>
+      <xsd:element name="member" type="MemberType" minOccurs="0" maxOccurs="unbounded"/>
+    </xsd:sequence>
+    <xsd:attribute name="refid" type="xsd:string" use="required"/>
+    <xsd:attribute name="kind" type="CompoundKind" use="required"/>
+  </xsd:complexType>
+
+  <xsd:complexType name="MemberType">
+    <xsd:sequence>
+      <xsd:element name="name" type="xsd:string"/>
+    </xsd:sequence>
+    <xsd:attribute name="refid" type="xsd:string" use="required"/>
+    <xsd:attribute name="kind" type="MemberKind" use="required"/>
+  </xsd:complexType>
+  
+  <xsd:simpleType name="CompoundKind">
+    <xsd:restriction base="xsd:string">
+      <xsd:enumeration value="class"/>
+      <xsd:enumeration value="struct"/>
+      <xsd:enumeration value="union"/>
+      <xsd:enumeration value="interface"/>
+      <xsd:enumeration value="protocol"/>
+      <xsd:enumeration value="category"/>
+      <xsd:enumeration value="exception"/>
+      <xsd:enumeration value="file"/>
+      <xsd:enumeration value="namespace"/>
+      <xsd:enumeration value="group"/>
+      <xsd:enumeration value="page"/>
+      <xsd:enumeration value="example"/>
+      <xsd:enumeration value="dir"/>
+    </xsd:restriction>
+  </xsd:simpleType>
+
+  <xsd:simpleType name="MemberKind">
+    <xsd:restriction base="xsd:string">
+      <xsd:enumeration value="define"/>
+      <xsd:enumeration value="property"/>
+      <xsd:enumeration value="event"/>
+      <xsd:enumeration value="variable"/>
+      <xsd:enumeration value="typedef"/>
+      <xsd:enumeration value="enum"/>
+      <xsd:enumeration value="enumvalue"/>
+      <xsd:enumeration value="function"/>
+      <xsd:enumeration value="signal"/>
+      <xsd:enumeration value="prototype"/>
+      <xsd:enumeration value="friend"/>
+      <xsd:enumeration value="dcop"/>
+      <xsd:enumeration value="slot"/>
+    </xsd:restriction>
+  </xsd:simpleType>
+
+</xsd:schema>
+
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/namespacegtsam.xml
@@ -0,0 +1,22 @@
+<?xml version='1.0' encoding='UTF-8' standalone='no'?>
+<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
+  <compounddef id="namespacegtsam" kind="namespace" language="C++">
+    <compoundname>gtsam</compoundname>
+    <innerclass refid="classgtsam_1_1JacobianFactorQ" prot="public">gtsam::JacobianFactorQ</innerclass>
+    <innerclass refid="classgtsam_1_1NoiseModelFactor" prot="public">gtsam::NoiseModelFactor</innerclass>
+    <innerclass refid="classgtsam_1_1NoiseModelFactor1" prot="public">gtsam::NoiseModelFactor1</innerclass>
+    <innerclass refid="classgtsam_1_1NoiseModelFactor2" prot="public">gtsam::NoiseModelFactor2</innerclass>
+    <innerclass refid="classgtsam_1_1NoiseModelFactor3" prot="public">gtsam::NoiseModelFactor3</innerclass>
+    <innerclass refid="classgtsam_1_1NoiseModelFactor4" prot="public">gtsam::NoiseModelFactor4</innerclass>
+    <innerclass refid="classgtsam_1_1NoiseModelFactor5" prot="public">gtsam::NoiseModelFactor5</innerclass>
+    <innerclass refid="classgtsam_1_1NoiseModelFactor6" prot="public">gtsam::NoiseModelFactor6</innerclass>
+    <innerclass refid="classgtsam_1_1NonlinearFactor" prot="public">gtsam::NonlinearFactor</innerclass>
+    <innerclass refid="structgtsam_1_1traits_3_01JacobianFactorQ_3_01D_00_01ZDim_01_4_01_4" prot="public">gtsam::traits&lt; JacobianFactorQ&lt; D, ZDim &gt; &gt;</innerclass>
+    <innerclass refid="structgtsam_1_1traits_3_01NonlinearFactor_01_4" prot="public">gtsam::traits&lt; NonlinearFactor &gt;</innerclass>
+    <briefdescription>
+    </briefdescription>
+    <detaileddescription>
+    </detaileddescription>
+    <location file="tests/doc-test-files/JacobianFactorQ.h" line="22" column="1"/>
+  </compounddef>
+</doxygen>
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/structgtsam_1_1traits_3_01JacobianFactorQ_3_01D_00_01ZDim_01_4_01_4.xml
@@ -0,0 +1,48 @@
+<?xml version='1.0' encoding='UTF-8' standalone='no'?>
+<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
+  <compounddef id="structgtsam_1_1traits_3_01JacobianFactorQ_3_01D_00_01ZDim_01_4_01_4" kind="struct" language="C++" prot="public">
+    <compoundname>gtsam::traits&lt; JacobianFactorQ&lt; D, ZDim &gt; &gt;</compoundname>
+    <basecompoundref prot="public" virt="non-virtual">Testable&lt; JacobianFactorQ&lt; D, ZDim &gt; &gt;</basecompoundref>
+    <templateparamlist>
+      <param>
+        <type>size_t</type>
+        <declname>D</declname>
+        <defname>D</defname>
+      </param>
+      <param>
+        <type>size_t</type>
+        <declname>ZDim</declname>
+        <defname>ZDim</defname>
+      </param>
+    </templateparamlist>
+    <briefdescription>
+    </briefdescription>
+    <detaileddescription>
+    </detaileddescription>
+    <inheritancegraph>
+      <node id="159">
+        <label>Testable&lt; JacobianFactorQ&lt; D, ZDim &gt; &gt;</label>
+      </node>
+      <node id="158">
+        <label>gtsam::traits&lt; JacobianFactorQ&lt; D, ZDim &gt; &gt;</label>
+        <link refid="structgtsam_1_1traits_3_01JacobianFactorQ_3_01D_00_01ZDim_01_4_01_4"/>
+        <childnode refid="159" relation="public-inheritance">
+        </childnode>
+      </node>
+    </inheritancegraph>
+    <collaborationgraph>
+      <node id="161">
+        <label>Testable&lt; JacobianFactorQ&lt; D, ZDim &gt; &gt;</label>
+      </node>
+      <node id="160">
+        <label>gtsam::traits&lt; JacobianFactorQ&lt; D, ZDim &gt; &gt;</label>
+        <link refid="structgtsam_1_1traits_3_01JacobianFactorQ_3_01D_00_01ZDim_01_4_01_4"/>
+        <childnode refid="161" relation="public-inheritance">
+        </childnode>
+      </node>
+    </collaborationgraph>
+    <location file="tests/doc-test-files/JacobianFactorQ.h" line="78" column="1" bodyfile="tests/doc-test-files/JacobianFactorQ.h" bodystart="77" bodyend="79"/>
+    <listofallmembers>
+    </listofallmembers>
+  </compounddef>
+</doxygen>
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/expected/xml/structgtsam_1_1traits_3_01NonlinearFactor_01_4.xml
@@ -0,0 +1,39 @@
+<?xml version='1.0' encoding='UTF-8' standalone='no'?>
+<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
+  <compounddef id="structgtsam_1_1traits_3_01NonlinearFactor_01_4" kind="struct" language="C++" prot="public">
+    <compoundname>gtsam::traits&lt; NonlinearFactor &gt;</compoundname>
+    <basecompoundref prot="public" virt="non-virtual">Testable&lt; NonlinearFactor &gt;</basecompoundref>
+    <includes refid="NonlinearFactor_8h" local="no">NonlinearFactor.h</includes>
+    <templateparamlist>
+    </templateparamlist>
+    <briefdescription>
+<para>traits </para>    </briefdescription>
+    <detaileddescription>
+    </detaileddescription>
+    <inheritancegraph>
+      <node id="163">
+        <label>Testable&lt; NonlinearFactor &gt;</label>
+      </node>
+      <node id="162">
+        <label>gtsam::traits&lt; NonlinearFactor &gt;</label>
+        <link refid="structgtsam_1_1traits_3_01NonlinearFactor_01_4"/>
+        <childnode refid="163" relation="public-inheritance">
+        </childnode>
+      </node>
+    </inheritancegraph>
+    <collaborationgraph>
+      <node id="165">
+        <label>Testable&lt; NonlinearFactor &gt;</label>
+      </node>
+      <node id="164">
+        <label>gtsam::traits&lt; NonlinearFactor &gt;</label>
+        <link refid="structgtsam_1_1traits_3_01NonlinearFactor_01_4"/>
+        <childnode refid="165" relation="public-inheritance">
+        </childnode>
+      </node>
+    </collaborationgraph>
+    <location file="tests/doc-test-files/NonlinearFactor.h" line="149" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="149" bodyend="150"/>
+    <listofallmembers>
+    </listofallmembers>
+  </compounddef>
+</doxygen>
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/fixtures/class.i
@@ -0,0 +1,106 @@
+class FunRange {
+  FunRange();
+  This range(double d);
+
+  static This create();
+};
+
+template<M={double}>
+class Fun {
+  static This staticMethodWithThis();
+
+  template<T={string}>
+  This templatedMethod(double d, T t);
+
+  template<T={string}, U={size_t}>
+  This multiTemplatedMethod(double d, T t, U u);
+};
+
+
+// An include! Can go anywhere outside of a class, in any order
+#include <folder/path/to/Test.h>
+
+class Test {
+
+  /* a comment! */
+  // another comment
+  Test();
+
+  // Test a shared ptr property
+  gtsam::noiseModel::Base* model_ptr;
+
+  pair<Vector,Matrix> return_pair (Vector v, Matrix A) const; // intentionally the first method
+  pair<Vector,Matrix> return_pair (Vector v) const; // overload
+
+  bool   return_bool   (bool   value) const; // comment after a line!
+  size_t return_size_t (size_t value) const;
+  int    return_int    (int    value) const;
+  double return_double (double value) const;
+
+  Test(double a, Matrix b); // a constructor in the middle of a class
+
+  // comments in the middle!
+
+  // (more) comments in the middle!
+
+  string return_string (string value) const;
+  Vector return_vector1(Vector value) const;
+  Matrix return_matrix1(Matrix value) const;
+  Vector return_vector2(Vector value) const;
+  Matrix return_matrix2(Matrix value) const;
+  void arg_EigenConstRef(const Matrix& value) const;
+
+  bool return_field(const Test& t) const;
+
+  Test* return_TestPtr(const Test* value) const;
+  Test  return_Test(Test* value) const;
+
+  gtsam::Point2* return_Point2Ptr(bool value) const;
+
+  pair<Test*,Test*> create_ptrs () const;
+  pair<Test ,Test*> create_MixedPtrs () const;
+  pair<Test*,Test*> return_ptrs (Test* p1, Test* p2) const;
+
+  void print() const;
+
+  void set_container(std::vector<testing::Test> container);
+  void set_container(std::vector<testing::Test*> container);
+  void set_container(std::vector<testing::Test&> container);
+  std::vector<testing::Test*> get_container() const;
+
+  // comments at the end!
+
+  // even more comments at the end!
+};
+
+virtual class ns::OtherClass;
+
+// A doubly templated class
+template<POSE, POINT>
+class MyFactor {
+  MyFactor(size_t key1, size_t key2, double measured, const gtsam::noiseModel::Base* noiseModel);
+};
+
+// and a typedef specializing it
+typedef MyFactor<gtsam::Pose2, Matrix> MyFactorPosePoint2;
+
+template<T = {double}>
+class PrimitiveRef {
+  PrimitiveRef();
+
+  static This Brutal(const T& t);
+};
+
+// A class with integer template arguments
+template<N = {3,12}>
+class MyVector {
+  MyVector();
+};
+
+// comments at the end!
+
+// even more comments at the end!
+
+// Class with multiple instantiated templates
+template<T = {int}, U = {double, float}>
+class MultipleTemplates {};
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/fixtures/functions.i
@@ -0,0 +1,28 @@
+/**
+ * A multi-line comment!
+ */
+// another comment
+
+class gtsam::NonlinearFactorGraph;
+class gtsam::Values;
+class gtsam::noiseModel::Diagonal;
+
+pair<gtsam::NonlinearFactorGraph*, gtsam::Values*> load2D(string filename, Test* model, int maxID, bool addNoise, bool smart);
+pair<gtsam::NonlinearFactorGraph*, gtsam::Values*> load2D(string filename, const gtsam::noiseModel::Diagonal* model, int maxID, bool addNoise, bool smart);
+pair<gtsam::NonlinearFactorGraph*, gtsam::Values*> load2D(string filename, gtsam::noiseModel::Diagonal@ model);
+
+Vector aGlobalFunction();
+
+// An overloaded global function
+Vector overloadedGlobalFunction(int a);
+Vector overloadedGlobalFunction(int a, double b);
+
+// A templated free/global function. Multiple templates supported.
+template<T1 = {string, double}, T2 = {size_t}, R = {double}>
+R MultiTemplatedFunction(const T& x, T2 y);
+
+// Check if we can typedef the templated function
+template<T>
+void TemplatedFunction(const T& t);
+
+typedef TemplatedFunction<gtsam::Rot3> TemplatedFunctionRot3;
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/fixtures/geometry.i
@@ -0,0 +1,49 @@
+// comments!
+
+class VectorNotEigen;
+
+namespace gtsam {
+
+#include <gtsam/geometry/Point2.h>
+class Point2 {
+ Point2();
+ Point2(double x, double y);
+ double x() const;
+ double y() const;
+ int dim() const;
+ char returnChar() const;
+ void argChar(char a) const;
+ void argChar(char* a) const;
+ void argChar(char& a) const;
+ void argChar(char@ a) const;
+ void argChar(const char* a) const;
+ void argChar(const char& a) const;
+ void argChar(const char@ a) const;
+ void argUChar(unsigned char a) const;
+ void eigenArguments(Vector v, Matrix m) const;
+ VectorNotEigen vectorConfusion();
+
+ void serializable() const; // Sets flag and creates export, but does not make serialization functions
+
+ // enable pickling in python
+ void pickle() const;
+};
+
+#include <gtsam/geometry/Point3.h>
+class Point3 {
+  Point3(double x, double y, double z);
+  double norm() const;
+
+  // static functions - use static keyword and uppercase
+  static double staticFunction();
+  static gtsam::Point3 StaticFunctionRet(double z);
+
+  // enabling serialization functionality
+  void serialize() const; // Just triggers a flag internally and removes actual function
+
+  // enable pickling in python
+  void pickle() const;
+};
+
+}
+// another comment
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/fixtures/inheritance.i
@@ -0,0 +1,24 @@
+// A base class
+virtual class MyBase {
+
+};
+
+// A templated class
+template<T = {gtsam::Point2, Matrix}>
+virtual class MyTemplate : MyBase {
+  MyTemplate();
+
+  template<ARG = {gtsam::Point2, gtsam::Point3, Vector, Matrix}>
+  ARG templatedMethod(const ARG& t);
+
+  // Stress test templates and pointer combinations
+  void accept_T(const T& value) const;
+  void accept_Tptr(T* value) const;
+  T* return_Tptr(T* value) const;
+  T  return_T(T@ value) const;
+  pair<T*,T*> create_ptrs () const;
+  pair<T ,T*> create_MixedPtrs () const;
+  pair<T*,T*> return_ptrs (T* p1, T* p2) const;
+
+  static This Level(const T& K);
+};
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/fixtures/namespaces.i
@@ -0,0 +1,60 @@
+/**
+ * This is a wrap header to verify permutations on namespaces
+ */
+
+#include <path/to/ns1.h>
+namespace ns1 {
+
+class ClassA {
+  ClassA();
+};
+
+#include <path/to/ns1/ClassB.h>
+class ClassB {
+  ClassB();
+};
+
+// check namespace handling
+Vector aGlobalFunction();
+
+}
+
+#include <path/to/ns2.h>
+namespace ns2 {
+
+#include <path/to/ns2/ClassA.h>
+class ClassA {
+  ClassA();
+  static double afunction();
+  double memberFunction();
+  int nsArg(const ns1::ClassB& arg);
+  ns2::ns3::ClassB nsReturn(double q);
+};
+
+#include <path/to/ns3.h>
+namespace ns3 {
+
+class ClassB {
+  ClassB();
+};
+
+}
+
+class ClassC {
+  ClassC();
+};
+
+// separate namespace global function, same name
+Vector aGlobalFunction();
+
+// An overloaded global function
+ns1::ClassA overloadedGlobalFunction(const ns1::ClassA& a);
+ns1::ClassA overloadedGlobalFunction(const ns1::ClassA& a, double b);
+
+} //\namespace ns2
+
+class ClassD {
+  ClassD();
+};
+
+
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/fixtures/operator.i
@@ -0,0 +1,16 @@
+namespace gtsam {
+
+#include <gtsam/geometry/Pose3.h>
+class Pose3 {
+  Pose3();
+  Pose3(gtsam::Rot3 R, gtsam::Point3 t);
+
+  gtsam::Pose3 operator*(gtsam::Pose3 other) const;
+};
+
+template<T = {Matrix}>
+class Container {
+  gtsam::JacobianFactor operator()(const T& m) const;
+  T operator[](size_t idx) const;
+};
+}
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/fixtures/special_cases.i
@@ -0,0 +1,28 @@
+// Check for templated class as template argument for method!
+namespace gtsam {
+
+#include <gtsam/geometry/Cal3Bundler.h>
+
+class Cal3Bundler;
+
+template<CALIBRATION>
+class PinholeCamera {};
+typedef gtsam::PinholeCamera<gtsam::Cal3Bundler> PinholeCameraCal3Bundler;
+
+class NonlinearFactorGraph {
+  template <T = {gtsam::PinholeCamera<gtsam::Cal3Bundler>}>
+  void addPrior(size_t key, const T& prior,
+                const gtsam::noiseModel::Base* noiseModel);
+};
+
+// Typedef with template as template arg.
+template<CALIBRATION, POINT>
+class GeneralSFMFactor {};
+typedef gtsam::GeneralSFMFactor<gtsam::PinholeCamera<gtsam::Cal3Bundler>, gtsam::Point3> GeneralSFMFactorCal3Bundler;
+
+// Template as template arg for class property.
+class SfmTrack {
+  std::vector<std::pair<size_t, gtsam::Point2>> measurements;
+};
+
+}  // namespace gtsam
--- gtsam-4.1.0.orig/wrap/tests/pybind_wrapper.tpl
+++ gtsam-4.1.0/wrap/tests/pybind_wrapper.tpl
@@ -3,6 +3,7 @@
 #include <pybind11/eigen.h>
 #include <pybind11/stl_bind.h>
 #include <pybind11/pybind11.h>
+#include <pybind11/operators.h>
 #include "gtsam/nonlinear/utilities.h"  // for RedirectCout.
 
 {includes}
@@ -11,7 +12,7 @@
 
 {boost_class_export}
 
-{hoder_type}
+{holder_type}
 
 using namespace std;
 
--- gtsam-4.1.0.orig/wrap/tests/test_docs.py
+++ gtsam-4.1.0/wrap/tests/test_docs.py
@@ -1,11 +1,11 @@
 """
 Unit test for documentation generation
-Author: Matthew Sklar
+Author: Matthew Sklar, Varun Agrawal
 Date: May 2019
 """
 import filecmp
 import os
-import os.path as path
+from os import path
 import shutil
 import sys
 import unittest
@@ -16,7 +16,6 @@ sys.path.append(os.path.dirname(os.path.
 import docs.parser.parse_doxygen_xml as parser
 from docs.docs import ClassDoc, Doc, Docs, FreeDoc
 
-
 tree_root = ET.Element('a')
 tree_left = ET.SubElement(tree_root, 'b')
 tree_right = ET.SubElement(tree_root, 1)
@@ -31,44 +30,54 @@ d2 = ET.SubElement(d, 'd')
 
 
 class TestDocument(unittest.TestCase):
+    """Test class for document generation utilities."""
     DIR_NAME = path.dirname(__file__)
 
     DOC_DIR = 'doc-test-files'
-    OUTPUT_XML_DIR = 'actual-xml-generation'
-    EXPECTED_XML_DIR = 'expected-xml-generation'
+    OUTPUT_XML_DIR = 'actual/xml'
+    EXPECTED_XML_DIR = 'expected/xml'
 
     DOC_DIR_PATH = path.abspath(path.join(DIR_NAME, DOC_DIR))
     OUTPUT_XML_DIR_PATH = path.abspath(path.join(DIR_NAME, OUTPUT_XML_DIR))
     EXPECTED_XML_DIR_PATH = path.abspath(path.join(DIR_NAME, EXPECTED_XML_DIR))
 
+    @unittest.skip("DOC_DIR_PATH doesn't exist")
     def test_generate_xml(self):
-        '''Test parse_xml.generate_xml'''
-        shutil.rmtree(self.OUTPUT_XML_DIR_PATH, ignore_errors=True)
-        parser.generate_xml(
-            self.DOC_DIR_PATH, self.OUTPUT_XML_DIR_PATH, quiet=True)
+        """Test parse_xml.generate_xml"""
+        if path.exists(self.OUTPUT_XML_DIR_PATH):
+            shutil.rmtree(self.OUTPUT_XML_DIR_PATH, ignore_errors=True)
+
+        parser.generate_xml(self.DOC_DIR_PATH,
+                            self.OUTPUT_XML_DIR_PATH,
+                            quiet=True)
 
         self.assertTrue(os.path.isdir(self.OUTPUT_XML_DIR_PATH))
 
-        shutil.rmtree(path.join(self.OUTPUT_XML_DIR_PATH, 'xml'))
-        parser.generate_xml(
-            self.DOC_DIR_PATH, self.OUTPUT_XML_DIR_PATH, quiet=True)
+        xml_path = self.OUTPUT_XML_DIR_PATH
+        if path.exists(xml_path):
+            shutil.rmtree(xml_path)
+        parser.generate_xml(self.DOC_DIR_PATH,
+                            self.OUTPUT_XML_DIR_PATH,
+                            quiet=True)
 
-        dircmp = filecmp.dircmp(
-            self.OUTPUT_XML_DIR_PATH, self.EXPECTED_XML_DIR_PATH)
+        dircmp = filecmp.dircmp(self.OUTPUT_XML_DIR_PATH,
+                                self.EXPECTED_XML_DIR_PATH)
 
         self.assertTrue(not dircmp.diff_files and not dircmp.funny_files)
 
+    @unittest.skip("DOC_DIR_PATH doesn't exist")
     def test_parse(self):
-        docs = parser.ParseDoxygenXML(
-            self.DOC_DIR_PATH, self.OUTPUT_XML_DIR_PATH).run()
+        """Test the parsing of the XML generated by Doxygen."""
+        docs = parser.ParseDoxygenXML(self.DOC_DIR_PATH,
+                                      self.OUTPUT_XML_DIR_PATH).run()
 
         for class_name in docs.get_class_docs_keys_list():
             actual_tree_root = docs.get_class_docs(
                 class_name).get_tree().getroot()
             expected_tree_root = ET.parse(class_name).getroot()
 
-            self.assertEqual(
-                ET.tostring(actual_tree_root), ET.tostring(expected_tree_root))
+            self.assertEqual(ET.tostring(actual_tree_root),
+                             ET.tostring(expected_tree_root))
 
 
 class TestDocTemplate(unittest.TestCase):
@@ -102,7 +111,7 @@ class TestDocTemplate(unittest.TestCase)
 
     # ClassDoc
     def test_class_doc(self):
-        '''Test the constructor in ClassDoc'''
+        """Test the constructor in ClassDoc"""
         self.assertIs(self.class_doc_root.tree, tree_root)
         self.assertIs(self.class_doc_left.tree, tree_left)
         self.assertIs(self.class_doc_right.tree, tree_right)
@@ -110,7 +119,7 @@ class TestDocTemplate(unittest.TestCase)
         self.assertIs(self.class_doc_recursive.tree, tree_recursive)
 
     def test_class_doc_get_tree(self):
-        '''Test the get_tree() method is ClassDoc'''
+        """Test the get_tree() method is ClassDoc"""
         self.assertIs(self.class_doc_root.get_tree(), tree_root)
         self.assertIs(self.class_doc_left.get_tree(), tree_left)
         self.assertIs(self.class_doc_right.get_tree(), tree_right)
@@ -118,7 +127,7 @@ class TestDocTemplate(unittest.TestCase)
         self.assertIs(self.class_doc_recursive.get_tree(), tree_recursive)
 
     def test_class_doc_eq(self):
-        '''Test ClassDoc.__eq__'''
+        """Test ClassDoc.__eq__"""
         doc1 = ClassDoc(ET.ElementTree(a))
         doc2 = ClassDoc(ET.ElementTree(d))
         doc3 = ClassDoc(ET.ElementTree(d2))
@@ -132,7 +141,7 @@ class TestDocTemplate(unittest.TestCase)
 
     # FreeDoc
     def test_free_doc(self):
-        '''Test the constructor in FreeDoc'''
+        """Test the constructor in FreeDoc"""
         self.assertIs(self.free_doc_root.tree, tree_root)
         self.assertIs(self.free_doc_left.tree, tree_left)
         self.assertIs(self.free_doc_right.tree, tree_right)
@@ -140,7 +149,7 @@ class TestDocTemplate(unittest.TestCase)
         self.assertIs(self.free_doc_recursive.tree, tree_recursive)
 
     def test_free_doc_get_tree(self):
-        '''Test the get_tree() method is FreeDoc'''
+        """Test the get_tree() method is FreeDoc"""
         self.assertIs(self.free_doc_root.get_tree(), tree_root)
         self.assertIs(self.free_doc_left.get_tree(), tree_left)
         self.assertIs(self.free_doc_right.get_tree(), tree_right)
@@ -148,7 +157,7 @@ class TestDocTemplate(unittest.TestCase)
         self.assertIs(self.free_doc_recursive.get_tree(), tree_recursive)
 
     def test_free_doc_eq(self):
-        '''Test FreeDoc.__eq__'''
+        """Test FreeDoc.__eq__"""
         doc1 = FreeDoc(ET.ElementTree(a))
         doc2 = FreeDoc(ET.ElementTree(d))
         doc3 = FreeDoc(ET.ElementTree(d2))
@@ -162,7 +171,7 @@ class TestDocTemplate(unittest.TestCase)
 
     # Docs
     def test_docs(self):
-        '''Test Docs template constructor'''
+        """Test Docs template constructor"""
         docs = Docs(self.CLASS_DOCS, self.FREE_DOCS)
 
         self.assertIs(docs.class_docs, self.CLASS_DOCS)
@@ -172,15 +181,15 @@ class TestDocTemplate(unittest.TestCase)
         docs = Docs(self.CLASS_DOCS, self.FREE_DOCS)
 
         for doc_name in self.CLASS_DOCS.keys():
-            self.assertIs(
-                self.CLASS_DOCS.get(doc_name), docs.get_class_docs(doc_name))
+            self.assertIs(self.CLASS_DOCS.get(doc_name),
+                          docs.get_class_docs(doc_name))
 
     def test_get_free_docs(self):
         docs = Docs(self.CLASS_DOCS, self.FREE_DOCS)
 
         for doc_name in self.FREE_DOCS.keys():
-            self.assertIs(
-                self.FREE_DOCS.get(doc_name), docs.get_free_docs(doc_name))
+            self.assertIs(self.FREE_DOCS.get(doc_name),
+                          docs.get_free_docs(doc_name))
 
     def test_get_class_docs_keys_list(self):
         docs = Docs(self.CLASS_DOCS, self.FREE_DOCS)
--- /dev/null
+++ gtsam-4.1.0/wrap/tests/test_interface_parser.py
@@ -0,0 +1,486 @@
+"""
+GTSAM Copyright 2010-2020, Georgia Tech Research Corporation,
+Atlanta, Georgia 30332-0415
+All Rights Reserved
+
+See LICENSE for the license information
+
+Tests for interface_parser.
+
+Author: Varun Agrawal
+"""
+
+# pylint: disable=import-error,wrong-import-position
+
+import os
+import sys
+import unittest
+
+sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
+
+from gtwrap.interface_parser import (ArgumentList, Class, Constructor,
+                                     ForwardDeclaration, GlobalFunction,
+                                     Include, Method, Module, Namespace,
+                                     Operator, ReturnType, StaticMethod,
+                                     TemplatedType, Type,
+                                     TypedefTemplateInstantiation, Typename)
+
+
+class TestInterfaceParser(unittest.TestCase):
+    """Test driver for all classes in interface_parser.py."""
+    def test_typename(self):
+        """Test parsing of Typename."""
+        typename = Typename.rule.parseString("size_t")[0]
+        self.assertEqual("size_t", typename.name)
+
+    def test_basic_type(self):
+        """Tests for BasicType."""
+        # Check basis type
+        t = Type.rule.parseString("int x")[0]
+        self.assertEqual("int", t.typename.name)
+        self.assertTrue(t.is_basic)
+
+        # Check const
+        t = Type.rule.parseString("const int x")[0]
+        self.assertEqual("int", t.typename.name)
+        self.assertTrue(t.is_basic)
+        self.assertTrue(t.is_const)
+
+        # Check shared pointer
+        t = Type.rule.parseString("int* x")[0]
+        self.assertEqual("int", t.typename.name)
+        self.assertTrue(t.is_shared_ptr)
+
+        # Check raw pointer
+        t = Type.rule.parseString("int@ x")[0]
+        self.assertEqual("int", t.typename.name)
+        self.assertTrue(t.is_ptr)
+
+        # Check reference
+        t = Type.rule.parseString("int& x")[0]
+        self.assertEqual("int", t.typename.name)
+        self.assertTrue(t.is_ref)
+
+        # Check const reference
+        t = Type.rule.parseString("const int& x")[0]
+        self.assertEqual("int", t.typename.name)
+        self.assertTrue(t.is_const)
+        self.assertTrue(t.is_ref)
+
+    def test_custom_type(self):
+        """Tests for CustomType."""
+        # Check qualified type
+        t = Type.rule.parseString("gtsam::Pose3 x")[0]
+        self.assertEqual("Pose3", t.typename.name)
+        self.assertEqual(["gtsam"], t.typename.namespaces)
+        self.assertTrue(not t.is_basic)
+
+        # Check const
+        t = Type.rule.parseString("const gtsam::Pose3 x")[0]
+        self.assertEqual("Pose3", t.typename.name)
+        self.assertEqual(["gtsam"], t.typename.namespaces)
+        self.assertTrue(t.is_const)
+
+        # Check shared pointer
+        t = Type.rule.parseString("gtsam::Pose3* x")[0]
+        self.assertEqual("Pose3", t.typename.name)
+        self.assertEqual(["gtsam"], t.typename.namespaces)
+        self.assertTrue(t.is_shared_ptr)
+        self.assertEqual("std::shared_ptr<gtsam::Pose3>",
+                         t.to_cpp(use_boost=False))
+        self.assertEqual("boost::shared_ptr<gtsam::Pose3>",
+                         t.to_cpp(use_boost=True))
+
+        # Check raw pointer
+        t = Type.rule.parseString("gtsam::Pose3@ x")[0]
+        self.assertEqual("Pose3", t.typename.name)
+        self.assertEqual(["gtsam"], t.typename.namespaces)
+        self.assertTrue(t.is_ptr)
+
+        # Check reference
+        t = Type.rule.parseString("gtsam::Pose3& x")[0]
+        self.assertEqual("Pose3", t.typename.name)
+        self.assertEqual(["gtsam"], t.typename.namespaces)
+        self.assertTrue(t.is_ref)
+
+        # Check const reference
+        t = Type.rule.parseString("const gtsam::Pose3& x")[0]
+        self.assertEqual("Pose3", t.typename.name)
+        self.assertEqual(["gtsam"], t.typename.namespaces)
+        self.assertTrue(t.is_const)
+        self.assertTrue(t.is_ref)
+
+    def test_templated_type(self):
+        """Test a templated type."""
+        t = TemplatedType.rule.parseString("Eigen::Matrix<double, 3, 4>")[0]
+        self.assertEqual("Matrix", t.typename.name)
+        self.assertEqual(["Eigen"], t.typename.namespaces)
+        self.assertEqual("double", t.typename.instantiations[0].name)
+        self.assertEqual("3", t.typename.instantiations[1].name)
+        self.assertEqual("4", t.typename.instantiations[2].name)
+
+        t = TemplatedType.rule.parseString(
+            "gtsam::PinholeCamera<gtsam::Cal3S2>")[0]
+        self.assertEqual("PinholeCamera", t.typename.name)
+        self.assertEqual(["gtsam"], t.typename.namespaces)
+        self.assertEqual("Cal3S2", t.typename.instantiations[0].name)
+        self.assertEqual(["gtsam"], t.typename.instantiations[0].namespaces)
+
+        t = TemplatedType.rule.parseString("PinholeCamera<Cal3S2*>")[0]
+        self.assertEqual("PinholeCamera", t.typename.name)
+        self.assertEqual("Cal3S2", t.typename.instantiations[0].name)
+        self.assertTrue(t.template_params[0].is_shared_ptr)
+
+    def test_empty_arguments(self):
+        """Test no arguments."""
+        empty_args = ArgumentList.rule.parseString("")[0]
+        self.assertEqual(0, len(empty_args))
+
+    def test_argument_list(self):
+        """Test arguments list for a method/function."""
+        arg_string = "int a, C1 c1, C2& c2, C3* c3, "\
+            "const C4 c4, const C5& c5,"\
+            "const C6* c6"
+        args = ArgumentList.rule.parseString(arg_string)[0]
+
+        self.assertEqual(7, len(args.args_list))
+        self.assertEqual(['a', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6'],
+                         args.args_names())
+
+    def test_argument_list_qualifiers(self):
+        """
+        Test arguments list where the arguments are qualified with `const`
+        and can be either raw pointers, shared pointers or references.
+        """
+        arg_string = "double x1, double* x2, double& x3, double@ x4, " \
+            "const double x5, const double* x6, const double& x7, const double@ x8"
+        args = ArgumentList.rule.parseString(arg_string)[0].args_list
+        self.assertEqual(8, len(args))
+        self.assertFalse(args[1].ctype.is_ptr and args[1].ctype.is_shared_ptr
+                         and args[1].ctype.is_ref)
+        self.assertTrue(args[1].ctype.is_shared_ptr)
+        self.assertTrue(args[2].ctype.is_ref)
+        self.assertTrue(args[3].ctype.is_ptr)
+        self.assertTrue(args[4].ctype.is_const)
+        self.assertTrue(args[5].ctype.is_shared_ptr and args[5].ctype.is_const)
+        self.assertTrue(args[6].ctype.is_ref and args[6].ctype.is_const)
+        self.assertTrue(args[7].ctype.is_ptr and args[7].ctype.is_const)
+
+    def test_argument_list_templated(self):
+        """Test arguments list where the arguments can be templated."""
+        arg_string = "std::pair<string, double> steps, vector<T*> vector_of_pointers"
+        args = ArgumentList.rule.parseString(arg_string)[0]
+        args_list = args.args_list
+        self.assertEqual(2, len(args_list))
+        self.assertEqual("std::pair<string, double>",
+                         args_list[0].ctype.to_cpp(False))
+        self.assertEqual("vector<std::shared_ptr<T>>",
+                         args_list[1].ctype.to_cpp(False))
+        self.assertEqual("vector<boost::shared_ptr<T>>",
+                         args_list[1].ctype.to_cpp(True))
+
+    def test_return_type(self):
+        """Test ReturnType"""
+        # Test void
+        return_type = ReturnType.rule.parseString("void")[0]
+        self.assertEqual("void", return_type.type1.typename.name)
+        self.assertTrue(return_type.type1.is_basic)
+
+        # Test basis type
+        return_type = ReturnType.rule.parseString("size_t")[0]
+        self.assertEqual("size_t", return_type.type1.typename.name)
+        self.assertTrue(not return_type.type2)
+        self.assertTrue(return_type.type1.is_basic)
+
+        # Test with qualifiers
+        return_type = ReturnType.rule.parseString("int&")[0]
+        self.assertEqual("int", return_type.type1.typename.name)
+        self.assertTrue(return_type.type1.is_basic
+                        and return_type.type1.is_ref)
+
+        return_type = ReturnType.rule.parseString("const int")[0]
+        self.assertEqual("int", return_type.type1.typename.name)
+        self.assertTrue(return_type.type1.is_basic
+                        and return_type.type1.is_const)
+
+        # Test pair return
+        return_type = ReturnType.rule.parseString("pair<char, int>")[0]
+        self.assertEqual("char", return_type.type1.typename.name)
+        self.assertEqual("int", return_type.type2.typename.name)
+
+    def test_method(self):
+        """Test for a class method."""
+        ret = Method.rule.parseString("int f();")[0]
+        self.assertEqual("f", ret.name)
+        self.assertEqual(0, len(ret.args))
+        self.assertTrue(not ret.is_const)
+
+        ret = Method.rule.parseString("int f() const;")[0]
+        self.assertEqual("f", ret.name)
+        self.assertEqual(0, len(ret.args))
+        self.assertTrue(ret.is_const)
+
+        ret = Method.rule.parseString(
+            "int f(const int x, const Class& c, Class* t) const;")[0]
+        self.assertEqual("f", ret.name)
+        self.assertEqual(3, len(ret.args))
+
+    def test_static_method(self):
+        """Test for static methods."""
+        ret = StaticMethod.rule.parseString("static int f();")[0]
+        self.assertEqual("f", ret.name)
+        self.assertEqual(0, len(ret.args))
+
+        ret = StaticMethod.rule.parseString(
+            "static int f(const int x, const Class& c, Class* t);")[0]
+        self.assertEqual("f", ret.name)
+        self.assertEqual(3, len(ret.args))
+
+    def test_constructor(self):
+        """Test for class constructor."""
+        ret = Constructor.rule.parseString("f();")[0]
+        self.assertEqual("f", ret.name)
+        self.assertEqual(0, len(ret.args))
+
+        ret = Constructor.rule.parseString(
+            "f(const int x, const Class& c, Class* t);")[0]
+        self.assertEqual("f", ret.name)
+        self.assertEqual(3, len(ret.args))
+
+    def test_operator_overload(self):
+        """Test for operator overloading."""
+        # Unary operator
+        wrap_string = "gtsam::Vector2 operator-() const;"
+        ret = Operator.rule.parseString(wrap_string)[0]
+        self.assertEqual("operator", ret.name)
+        self.assertEqual("-", ret.operator)
+        self.assertEqual("Vector2", ret.return_type.type1.typename.name)
+        self.assertEqual("gtsam::Vector2",
+                         ret.return_type.type1.typename.to_cpp())
+        self.assertTrue(len(ret.args) == 0)
+        self.assertTrue(ret.is_unary)
+
+        # Binary operator
+        wrap_string = "gtsam::Vector2 operator*(const gtsam::Vector2 &v) const;"
+        ret = Operator.rule.parseString(wrap_string)[0]
+        self.assertEqual("operator", ret.name)
+        self.assertEqual("*", ret.operator)
+        self.assertEqual("Vector2", ret.return_type.type1.typename.name)
+        self.assertEqual("gtsam::Vector2",
+                         ret.return_type.type1.typename.to_cpp())
+        self.assertTrue(len(ret.args) == 1)
+        self.assertEqual("const gtsam::Vector2 &",
+                         repr(ret.args.args_list[0].ctype))
+        self.assertTrue(not ret.is_unary)
+
+    def test_typedef_template_instantiation(self):
+        """Test for typedef'd instantiation of a template."""
+        typedef = TypedefTemplateInstantiation.rule.parseString("""
+        typedef gtsam::BearingFactor<gtsam::Pose2, gtsam::Point2, gtsam::Rot2>
+            BearingFactor2D;
+        """)[0]
+        self.assertEqual("BearingFactor2D", typedef.new_name)
+        self.assertEqual("BearingFactor", typedef.typename.name)
+        self.assertEqual(["gtsam"], typedef.typename.namespaces)
+        self.assertEqual(3, len(typedef.typename.instantiations))
+
+    def test_base_class(self):
+        """Test a base class."""
+        ret = Class.rule.parseString("""
+            virtual class Base {
+            };
+            """)[0]
+        self.assertEqual("Base", ret.name)
+        self.assertEqual(0, len(ret.ctors))
+        self.assertEqual(0, len(ret.methods))
+        self.assertEqual(0, len(ret.static_methods))
+        self.assertEqual(0, len(ret.properties))
+        self.assertTrue(ret.is_virtual)
+
+    def test_empty_class(self):
+        """Test an empty class declaration."""
+        ret = Class.rule.parseString("""
+            class FactorIndices {};
+        """)[0]
+        self.assertEqual("FactorIndices", ret.name)
+        self.assertEqual(0, len(ret.ctors))
+        self.assertEqual(0, len(ret.methods))
+        self.assertEqual(0, len(ret.static_methods))
+        self.assertEqual(0, len(ret.properties))
+        self.assertTrue(not ret.is_virtual)
+
+    def test_class(self):
+        """Test a non-trivial class."""
+        ret = Class.rule.parseString("""
+        class SymbolicFactorGraph {
+            SymbolicFactorGraph();
+            SymbolicFactorGraph(const gtsam::SymbolicBayesNet& bayesNet);
+            SymbolicFactorGraph(const gtsam::SymbolicBayesTree& bayesTree);
+
+            // Dummy static method
+            static gtsam::SymbolidFactorGraph CreateGraph();
+
+            void push_back(gtsam::SymbolicFactor* factor);
+            void print(string s) const;
+            bool equals(const gtsam::SymbolicFactorGraph& rhs, double tol) const;
+            size_t size() const;
+            bool exists(size_t idx) const;
+
+            // Standard interface
+            gtsam::KeySet keys() const;
+            void push_back(const gtsam::SymbolicFactorGraph& graph);
+            void push_back(const gtsam::SymbolicBayesNet& bayesNet);
+            void push_back(const gtsam::SymbolicBayesTree& bayesTree);
+
+            /* Advanced interface */
+            void push_factor(size_t key);
+            void push_factor(size_t key1, size_t key2);
+            void push_factor(size_t key1, size_t key2, size_t key3);
+            void push_factor(size_t key1, size_t key2, size_t key3, size_t key4);
+
+            gtsam::SymbolicBayesNet* eliminateSequential();
+            gtsam::SymbolicBayesNet* eliminateSequential(
+                const gtsam::Ordering& ordering);
+            gtsam::SymbolicBayesTree* eliminateMultifrontal();
+            gtsam::SymbolicBayesTree* eliminateMultifrontal(
+                const gtsam::Ordering& ordering);
+            pair<gtsam::SymbolicBayesNet*, gtsam::SymbolicFactorGraph*>
+                eliminatePartialSequential(const gtsam::Ordering& ordering);
+            pair<gtsam::SymbolicBayesNet*, gtsam::SymbolicFactorGraph*>
+                eliminatePartialSequential(const gtsam::KeyVector& keys);
+            pair<gtsam::SymbolicBayesTree*, gtsam::SymbolicFactorGraph*>
+                eliminatePartialMultifrontal(const gtsam::Ordering& ordering);
+            gtsam::SymbolicBayesNet* marginalMultifrontalBayesNet(
+                const gtsam::Ordering& ordering);
+            gtsam::SymbolicBayesNet* marginalMultifrontalBayesNet(
+                const gtsam::KeyVector& key_vector,
+                const gtsam::Ordering& marginalizedVariableOrdering);
+            gtsam::SymbolicFactorGraph* marginal(const gtsam::KeyVector& key_vector);
+            };
+        """)[0]
+
+        self.assertEqual("SymbolicFactorGraph", ret.name)
+        self.assertEqual(3, len(ret.ctors))
+        self.assertEqual(23, len(ret.methods))
+        self.assertEqual(1, len(ret.static_methods))
+        self.assertEqual(0, len(ret.properties))
+        self.assertTrue(not ret.is_virtual)
+
+    def test_class_inheritance(self):
+        """Test for class inheritance."""
+        ret = Class.rule.parseString("""
+        virtual class Null: gtsam::noiseModel::mEstimator::Base {
+          Null();
+          void print(string s) const;
+          static gtsam::noiseModel::mEstimator::Null* Create();
+
+          // enabling serialization functionality
+          void serializable() const;
+        };
+        """)[0]
+        self.assertEqual("Null", ret.name)
+        self.assertEqual(1, len(ret.ctors))
+        self.assertEqual(2, len(ret.methods))
+        self.assertEqual(1, len(ret.static_methods))
+        self.assertEqual(0, len(ret.properties))
+        self.assertEqual("Base", ret.parent_class.name)
+        self.assertEqual(["gtsam", "noiseModel", "mEstimator"],
+                         ret.parent_class.namespaces)
+        self.assertTrue(ret.is_virtual)
+
+    def test_include(self):
+        """Test for include statements."""
+        include = Include.rule.parseString(
+            "#include <gtsam/slam/PriorFactor.h>")[0]
+        self.assertEqual("gtsam/slam/PriorFactor.h", include.header)
+
+    def test_forward_declaration(self):
+        """Test for forward declarations."""
+        fwd = ForwardDeclaration.rule.parseString(
+            "virtual class Test:gtsam::Point3;")[0]
+
+        fwd_name = fwd.name
+        self.assertEqual("Test", fwd_name.name)
+        self.assertTrue(fwd.is_virtual)
+
+    def test_function(self):
+        """Test for global/free function."""
+        func = GlobalFunction.rule.parseString("""
+        gtsam::Values localToWorld(const gtsam::Values& local,
+            const gtsam::Pose2& base, const gtsam::KeyVector& keys);
+        """)[0]
+        self.assertEqual("localToWorld", func.name)
+        self.assertEqual("Values", func.return_type.type1.typename.name)
+        self.assertEqual(3, len(func.args))
+
+    def test_namespace(self):
+        """Test for namespace parsing."""
+        namespace = Namespace.rule.parseString("""
+        namespace gtsam {
+          #include <gtsam/geometry/Point2.h>
+          class Point2 {
+            Point2();
+            Point2(double x, double y);
+            double x() const;
+            double y() const;
+            int dim() const;
+            char returnChar() const;
+            void argChar(char a) const;
+            void argUChar(unsigned char a) const;
+          };
+
+          #include <gtsam/geometry/Point3.h>
+          class Point3 {
+            Point3(double x, double y, double z);
+            double norm() const;
+
+            // static functions - use static keyword and uppercase
+            static double staticFunction();
+            static gtsam::Point3 StaticFunctionRet(double z);
+
+            // enabling serialization functionality
+            void serialize() const; // Just triggers a flag internally
+          };
+        }""")[0]
+        self.assertEqual("gtsam", namespace.name)
+
+    def test_module(self):
+        """Test module parsing."""
+        module = Module.parseString("""
+        namespace one {
+            namespace two {
+                namespace three {
+                    class Class123 {
+                    };
+                }
+                class Class12a {
+                };
+            }
+            namespace two_dummy {
+                namespace three_dummy{
+
+                }
+                namespace fourth_dummy{
+
+                }
+            }
+            namespace two {
+                class Class12b {
+
+                };
+            }
+        }
+
+        class Global{
+        };
+        """)
+
+        # print("module: ", module)
+        # print(dir(module.content[0].name))
+        self.assertEqual(["one", "Global"], [x.name for x in module.content])
+        self.assertEqual(["two", "two_dummy", "two"],
+                         [x.name for x in module.content[0].content])
+
+
+if __name__ == '__main__':
+    unittest.main()
--- gtsam-4.1.0.orig/wrap/tests/test_matlab_wrapper.py
+++ gtsam-4.1.0/wrap/tests/test_matlab_wrapper.py
@@ -1,26 +1,42 @@
 """
-Unit test for Matlab wrap program
-Author: Matthew Sklar
+Unit tests for Matlab wrap program
+Author: Matthew Sklar, Varun Agrawal
 Date: March 2019
 """
+# pylint: disable=import-error, wrong-import-position
+
+import filecmp
 import os
+import os.path as osp
 import sys
 import unittest
-import filecmp
 
-sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
+from loguru import logger
+
+sys.path.append(osp.dirname(osp.dirname(osp.abspath(__file__))))
 
-import template_instantiator as instantiator
-import interface_parser as parser
-from matlab_wrapper import MatlabWrapper
+import gtwrap.interface_parser as parser
+import gtwrap.template_instantiator as instantiator
+from gtwrap.matlab_wrapper import MatlabWrapper
 
 
 class TestWrap(unittest.TestCase):
-    TEST_DIR = os.path.dirname(os.path.realpath(__file__)) + "/"
-    MATLAB_TEST_DIR = TEST_DIR + "expected-matlab/"
-    MATLAB_ACTUAL_DIR = TEST_DIR + "actual-matlab/"
+    """
+    Test the Matlab wrapper
+    """
+    TEST_DIR = osp.dirname(osp.realpath(__file__))
+    INTERFACE_DIR = osp.join(TEST_DIR, "fixtures")
+    MATLAB_TEST_DIR = osp.join(TEST_DIR, "expected", "matlab")
+    MATLAB_ACTUAL_DIR = osp.join(TEST_DIR, "actual", "matlab")
+
+    # Create the `actual/matlab` directory
+    os.makedirs(MATLAB_ACTUAL_DIR, exist_ok=True)
+
+    # set the log level to INFO by default
+    logger.remove()  # remove the default sink
+    logger.add(sys.stderr, format="{time} {level} {message}", level="INFO")
 
-    def _generate_content(self, cc_content, path=''):
+    def generate_content(self, cc_content, path=MATLAB_ACTUAL_DIR):
         """Generate files and folders from matlab wrapper content.
 
         Keyword arguments:
@@ -29,48 +45,45 @@ class TestWrap(unittest.TestCase):
             (folder_name, [(file_name, file_content)])
         path -- the path to the files parent folder within the main folder
         """
-        if path == '':
-            path = self.MATLAB_ACTUAL_DIR
         for c in cc_content:
-            if type(c) == list:
+            if isinstance(c, list):
                 if len(c) == 0:
                     continue
-                import sys
-                print("c object: {}".format(c[0][0]), file=sys.stderr)
-                path_to_folder = path + '/' + c[0][0]
+                logger.debug("c object: {}".format(c[0][0]))
+                path_to_folder = osp.join(path, c[0][0])
 
-                if not os.path.isdir(path_to_folder):
+                if not osp.isdir(path_to_folder):
                     try:
                         os.makedirs(path_to_folder, exist_ok=True)
                     except OSError:
                         pass
 
                 for sub_content in c:
-                    import sys
-                    print("sub object: {}".format(sub_content[1][0][0]), file=sys.stderr)
-                    self._generate_content(sub_content[1], path_to_folder)
-            elif type(c[1]) == list:
-                path_to_folder = path + '/' + c[0]
-
-                import sys
-                print("[generate_content_global]: {}".format(path_to_folder), file=sys.stderr)
-                if not os.path.isdir(path_to_folder):
+                    logger.debug("sub object: {}".format(sub_content[1][0][0]))
+                    self.generate_content(sub_content[1], path_to_folder)
+
+            elif isinstance(c[1], list):
+                path_to_folder = osp.join(path, c[0])
+
+                logger.debug(
+                    "[generate_content_global]: {}".format(path_to_folder))
+                if not osp.isdir(path_to_folder):
                     try:
                         os.makedirs(path_to_folder, exist_ok=True)
                     except OSError:
                         pass
                 for sub_content in c[1]:
-                    import sys
-                    path_to_file = path_to_folder + '/' + sub_content[0]
-                    print("[generate_global_method]: {}".format(path_to_file), file=sys.stderr)
+                    path_to_file = osp.join(path_to_folder, sub_content[0])
+                    logger.debug(
+                        "[generate_global_method]: {}".format(path_to_file))
                     with open(path_to_file, 'w') as f:
                         f.write(sub_content[1])
+
             else:
-                path_to_file = path + '/' + c[0]
+                path_to_file = osp.join(path, c[0])
 
-                import sys
-                print("[generate_content]: {}".format(path_to_file), file=sys.stderr)
-                if not os.path.isdir(path_to_file):
+                logger.debug("[generate_content]: {}".format(path_to_file))
+                if not osp.isdir(path_to_file):
                     try:
                         os.mkdir(path)
                     except OSError:
@@ -79,15 +92,29 @@ class TestWrap(unittest.TestCase):
                 with open(path_to_file, 'w') as f:
                     f.write(c[1])
 
-    def test_geometry_matlab(self):
-        """ Check generation of matlab geometry wrapper.
+    def compare_and_diff(self, file):
+        """
+        Compute the comparison between the expected and actual file,
+        and assert if diff is zero.
+        """
+        output = osp.join(self.MATLAB_ACTUAL_DIR, file)
+        expected = osp.join(self.MATLAB_TEST_DIR, file)
+        success = filecmp.cmp(output, expected)
+        if not success:
+            print("Differ in file: {}".format(file))
+            os.system("diff {} {}".format(output, expected))
+        self.assertTrue(success, "Mismatch for file {0}".format(file))
+
+    def test_geometry(self):
+        """
+        Check generation of matlab geometry wrapper.
         python3 wrap/matlab_wrapper.py --src wrap/tests/geometry.h
             --module_name geometry --out wrap/tests/actual-matlab
         """
-        with open(self.TEST_DIR + 'geometry.h', 'r') as f:
+        with open(osp.join(self.INTERFACE_DIR, 'geometry.i'), 'r') as f:
             content = f.read()
 
-        if not os.path.exists(self.MATLAB_ACTUAL_DIR):
+        if not osp.exists(self.MATLAB_ACTUAL_DIR):
             os.mkdir(self.MATLAB_ACTUAL_DIR)
 
         module = parser.Module.parseString(content)
@@ -104,37 +131,180 @@ class TestWrap(unittest.TestCase):
 
         cc_content = wrapper.wrap()
 
-        self._generate_content(cc_content)
+        self.generate_content(cc_content)
+
+        self.assertTrue(osp.isdir(osp.join(self.MATLAB_ACTUAL_DIR, '+gtsam')))
+
+        files = ['+gtsam/Point2.m', '+gtsam/Point3.m', 'geometry_wrapper.cpp']
+
+        for file in files:
+            self.compare_and_diff(file)
+
+    def test_functions(self):
+        """Test interface file with function info."""
+        with open(osp.join(self.INTERFACE_DIR, 'functions.i'), 'r') as f:
+            content = f.read()
+
+        if not osp.exists(self.MATLAB_ACTUAL_DIR):
+            os.mkdir(self.MATLAB_ACTUAL_DIR)
+
+        module = parser.Module.parseString(content)
+
+        instantiator.instantiate_namespace_inplace(module)
+
+        wrapper = MatlabWrapper(
+            module=module,
+            module_name='functions',
+            top_module_namespace=['gtsam'],
+            ignore_classes=[''],
+        )
+
+        cc_content = wrapper.wrap()
+
+        self.generate_content(cc_content)
+
+        files = [
+            'functions_wrapper.cpp', 'aGlobalFunction.m', 'load2D.m',
+            'MultiTemplatedFunctionDoubleSize_tDouble.m',
+            'MultiTemplatedFunctionStringSize_tDouble.m',
+            'overloadedGlobalFunction.m', 'TemplatedFunctionRot3.m'
+        ]
+
+        for file in files:
+            self.compare_and_diff(file)
+
+    def test_class(self):
+        """Test interface file with only class info."""
+        with open(osp.join(self.INTERFACE_DIR, 'class.i'), 'r') as f:
+            content = f.read()
+
+        if not osp.exists(self.MATLAB_ACTUAL_DIR):
+            os.mkdir(self.MATLAB_ACTUAL_DIR)
+
+        module = parser.Module.parseString(content)
+
+        instantiator.instantiate_namespace_inplace(module)
+
+        wrapper = MatlabWrapper(
+            module=module,
+            module_name='class',
+            top_module_namespace=['gtsam'],
+            ignore_classes=[''],
+        )
+
+        cc_content = wrapper.wrap()
+
+        self.generate_content(cc_content)
+
+        files = [
+            'class_wrapper.cpp', 'FunDouble.m', 'FunRange.m',
+            'MultipleTemplatesIntDouble.m', 'MultipleTemplatesIntFloat.m',
+            'MyFactorPosePoint2.m', 'MyVector3.m', 'MyVector12.m',
+            'PrimitiveRefDouble.m', 'Test.m'
+        ]
+
+        for file in files:
+            self.compare_and_diff(file)
+
+    def test_inheritance(self):
+        """Test interface file with class inheritance definitions."""
+        with open(osp.join(self.INTERFACE_DIR, 'inheritance.i'), 'r') as f:
+            content = f.read()
+
+        if not osp.exists(self.MATLAB_ACTUAL_DIR):
+            os.mkdir(self.MATLAB_ACTUAL_DIR)
+
+        module = parser.Module.parseString(content)
+
+        instantiator.instantiate_namespace_inplace(module)
+
+        wrapper = MatlabWrapper(
+            module=module,
+            module_name='inheritance',
+            top_module_namespace=['gtsam'],
+            ignore_classes=[''],
+        )
+
+        cc_content = wrapper.wrap()
+
+        self.generate_content(cc_content)
 
-        def compare_and_diff(file):
-            output = self.MATLAB_ACTUAL_DIR + file
-            expected = self.MATLAB_TEST_DIR + file
-            success = filecmp.cmp(output, expected)
-            if not success:
-                print("Differ in file: {}".format(file))
-                os.system("diff {} {}".format(output, expected))
-            self.assertTrue(success)
+        files = [
+            'inheritance_wrapper.cpp', 'MyBase.m', 'MyTemplateMatrix.m',
+            'MyTemplatePoint2.m'
+        ]
+
+        for file in files:
+            self.compare_and_diff(file)
+
+    def test_namspaces(self):
+        """
+        Test interface file with full namespace definition.
+        """
+        with open(osp.join(self.INTERFACE_DIR, 'namespaces.i'), 'r') as f:
+            content = f.read()
+
+        if not osp.exists(self.MATLAB_ACTUAL_DIR):
+            os.mkdir(self.MATLAB_ACTUAL_DIR)
+
+        module = parser.Module.parseString(content)
+
+        instantiator.instantiate_namespace_inplace(module)
+
+        wrapper = MatlabWrapper(
+            module=module,
+            module_name='namespaces',
+            top_module_namespace=['gtsam'],
+            ignore_classes=[''],
+        )
+
+        cc_content = wrapper.wrap()
+
+        self.generate_content(cc_content)
+
+        files = [
+            'namespaces_wrapper.cpp', '+ns1/aGlobalFunction.m',
+            '+ns1/ClassA.m', '+ns1/ClassB.m', '+ns2/+ns3/ClassB.m',
+            '+ns2/aGlobalFunction.m', '+ns2/ClassA.m', '+ns2/ClassC.m',
+            '+ns2/overloadedGlobalFunction.m', 'ClassD.m'
+        ]
+
+        for file in files:
+            self.compare_and_diff(file)
+
+    def test_special_cases(self):
+        """
+        Tests for some unique, non-trivial features.
+        """
+        with open(osp.join(self.INTERFACE_DIR, 'special_cases.i'), 'r') as f:
+            content = f.read()
+
+        if not osp.exists(self.MATLAB_ACTUAL_DIR):
+            os.mkdir(self.MATLAB_ACTUAL_DIR)
+
+        module = parser.Module.parseString(content)
+
+        instantiator.instantiate_namespace_inplace(module)
+
+        wrapper = MatlabWrapper(
+            module=module,
+            module_name='special_cases',
+            top_module_namespace=['gtsam'],
+            ignore_classes=[''],
+        )
+
+        cc_content = wrapper.wrap()
 
-        self.assertTrue(os.path.isdir(self.MATLAB_ACTUAL_DIR + '+gtsam'))
+        self.generate_content(cc_content)
 
         files = [
-            '+gtsam/Point2.m',
-            '+gtsam/Point3.m',
-            'Test.m',
-            'MyBase.m',
-            'load2D.m',
-            'MyTemplatePoint2.m',
-            'MyTemplateMatrix.m',
-            'MyVector3.m',
-            'MyVector12.m',
-            'MyFactorPosePoint2.m',
-            'aGlobalFunction.m',
-            'overloadedGlobalFunction.m',
-            'geometry_wrapper.cpp'
+            'special_cases_wrapper.cpp',
+            '+gtsam/PinholeCameraCal3Bundler.m',
+            '+gtsam/NonlinearFactorGraph.m', 
         ]
 
         for file in files:
-            compare_and_diff(file)
+            self.compare_and_diff(file)
 
 if __name__ == '__main__':
     unittest.main()
--- gtsam-4.1.0.orig/wrap/tests/test_pybind_wrapper.py
+++ gtsam-4.1.0/wrap/tests/test_pybind_wrapper.py
@@ -1,71 +1,163 @@
 """
 Unit test for Pybind wrap program
-Author: Matthew Sklar
+Author: Matthew Sklar, Varun Agrawal
 Date: February 2019
 """
 
+# pylint: disable=import-error, wrong-import-position, too-many-branches
+
+import filecmp
 import os
+import os.path as osp
 import sys
 import unittest
-import filecmp
-
-import os.path as path
 
-sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
-sys.path.append(os.path.normpath(os.path.abspath(os.path.join(__file__, '../../../build/wrap'))))
+sys.path.append(osp.dirname(osp.dirname(osp.abspath(__file__))))
+sys.path.append(
+    osp.normpath(osp.abspath(osp.join(__file__, '../../../build/wrap'))))
+
+import gtwrap.interface_parser as parser
+import gtwrap.template_instantiator as instantiator
+from gtwrap.pybind_wrapper import PybindWrapper
 
-from pybind_wrapper import PybindWrapper
-import interface_parser as parser
-import template_instantiator as instantiator
-
-sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
+sys.path.append(osp.dirname(osp.dirname(osp.abspath(__file__))))
 
 
 class TestWrap(unittest.TestCase):
-    TEST_DIR = os.path.dirname(os.path.realpath(__file__)) + "/"
+    """Tests for Python wrapper based on Pybind11."""
+    TEST_DIR = osp.dirname(osp.realpath(__file__))
+    INTERFACE_DIR = osp.join(TEST_DIR, 'fixtures')
+    PYTHON_TEST_DIR = osp.join(TEST_DIR, 'expected', 'python')
+    PYTHON_ACTUAL_DIR = osp.join(TEST_DIR, "actual", "python")
+
+    # Create the `actual/python` directory
+    os.makedirs(PYTHON_ACTUAL_DIR, exist_ok=True)
 
-    def test_geometry_python(self):
+    def wrap_content(self, content, module_name, output_dir):
         """
-        Check generation of python geometry wrapper.
-        python3 ../pybind_wrapper.py --src geometry.h --module_name
-            geometry_py --out output/geometry_py.cc"
+        Common function to wrap content.
         """
-        with open(os.path.join(self.TEST_DIR, 'geometry.h'), 'r') as f:
-            content = f.read()
-
         module = parser.Module.parseString(content)
 
         instantiator.instantiate_namespace_inplace(module)
 
-        with open(self.TEST_DIR + "pybind_wrapper.tpl") as template_file:
+        with open(osp.join(self.TEST_DIR,
+                           "pybind_wrapper.tpl")) as template_file:
             module_template = template_file.read()
-        
+
         # Create Pybind wrapper instance
-        wrapper = PybindWrapper(
-            module=module,
-            module_name='geometry_py',
-            use_boost=False,
-            top_module_namespaces=[''],
-            ignore_classes=[''],
-            module_template=module_template
-        )
+        wrapper = PybindWrapper(module=module,
+                                module_name=module_name,
+                                use_boost=False,
+                                top_module_namespaces=[''],
+                                ignore_classes=[''],
+                                module_template=module_template)
 
         cc_content = wrapper.wrap()
 
-        output = path.join(self.TEST_DIR, 'actual-python/geometry_py.cpp')
+        output = osp.join(self.TEST_DIR, output_dir, module_name + ".cpp")
 
-        if not path.exists(path.join(self.TEST_DIR, 'actual-python')):
-            os.mkdir(path.join(self.TEST_DIR, 'actual-python'))
+        if not osp.exists(osp.join(self.TEST_DIR, output_dir)):
+            os.mkdir(osp.join(self.TEST_DIR, output_dir))
 
         with open(output, 'w') as f:
             f.write(cc_content)
 
-        expected = path.join(self.TEST_DIR, 'expected-python/geometry_pybind.cpp')
-        success = filecmp.cmp(output, expected)
+        return output
+
+    def compare_and_diff(self, file, actual):
+        """
+        Compute the comparison between the expected and actual file,
+        and assert if diff is zero.
+        """
+        expected = osp.join(self.PYTHON_TEST_DIR, file)
+        success = filecmp.cmp(actual, expected)
 
         if not success:
-            os.system("diff {} {}".format(output, expected))
-        self.assertTrue(success)
+            os.system("diff {} {}".format(actual, expected))
+        self.assertTrue(success, "Mismatch for file {0}".format(file))
+
+    def test_geometry(self):
+        """
+        Check generation of python geometry wrapper.
+        python3 ../pybind_wrapper.py --src geometry.h --module_name
+            geometry_py --out output/geometry_py.cc
+        """
+        with open(osp.join(self.INTERFACE_DIR, 'geometry.i'), 'r') as f:
+            content = f.read()
+
+        output = self.wrap_content(content, 'geometry_py',
+                                   self.PYTHON_ACTUAL_DIR)
+
+        self.compare_and_diff('geometry_pybind.cpp', output)
+
+    def test_functions(self):
+        """Test interface file with function info."""
+        with open(osp.join(self.INTERFACE_DIR, 'functions.i'), 'r') as f:
+            content = f.read()
+
+        output = self.wrap_content(content, 'functions_py',
+                                   self.PYTHON_ACTUAL_DIR)
+
+        self.compare_and_diff('functions_pybind.cpp', output)
+
+    def test_class(self):
+        """Test interface file with only class info."""
+        with open(osp.join(self.INTERFACE_DIR, 'class.i'), 'r') as f:
+            content = f.read()
+
+        output = self.wrap_content(content, 'class_py', self.PYTHON_ACTUAL_DIR)
+
+        self.compare_and_diff('class_pybind.cpp', output)
+
+    def test_inheritance(self):
+        """Test interface file with class inheritance definitions."""
+        with open(osp.join(self.INTERFACE_DIR, 'inheritance.i'), 'r') as f:
+            content = f.read()
+
+        output = self.wrap_content(content, 'inheritance_py',
+                                   self.PYTHON_ACTUAL_DIR)
+
+        self.compare_and_diff('inheritance_pybind.cpp', output)
+
+    def test_namespaces(self):
+        """
+        Check generation of python wrapper for full namespace definition.
+        python3 ../pybind_wrapper.py --src namespaces.i --module_name
+            namespaces_py --out output/namespaces_py.cpp
+        """
+        with open(osp.join(self.INTERFACE_DIR, 'namespaces.i'), 'r') as f:
+            content = f.read()
+
+        output = self.wrap_content(content, 'namespaces_py',
+                                   self.PYTHON_ACTUAL_DIR)
+
+        self.compare_and_diff('namespaces_pybind.cpp', output)
+
+    def test_operator_overload(self):
+        """
+        Tests for operator overloading.
+        """
+        with open(osp.join(self.INTERFACE_DIR, 'operator.i'), 'r') as f:
+            content = f.read()
+
+        output = self.wrap_content(content, 'operator_py',
+                                   self.PYTHON_ACTUAL_DIR)
+
+        self.compare_and_diff('operator_pybind.cpp', output)
+
+    def test_special_cases(self):
+        """
+        Tests for some unique, non-trivial features.
+        """
+        with open(osp.join(self.INTERFACE_DIR, 'special_cases.i'), 'r') as f:
+            content = f.read()
+
+        output = self.wrap_content(content, 'special_cases_py',
+                                   self.PYTHON_ACTUAL_DIR)
+
+        self.compare_and_diff('special_cases_pybind.cpp', output)
+
 
 if __name__ == '__main__':
     unittest.main()
