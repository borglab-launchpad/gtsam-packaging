gtsam (4.1.1-1ubuntu9) focal; urgency=medium

  [ Frank Dellaert ]
  * Added a number of docker images

  [ Ellon Paiva Mendes ]
  * Bump version to 4.0.2
  * Install GTSAMConfigVersion.cmake

  [ Jose Luis Blanco-Claraco ]
  * Remove obsolete cmake FindXX modules.

  [ Michael Bosse ]
  * Make variable names consistent with math

  [ Fan Jiang ]
  * Add pybind11

  [ Thomas Jespersen ]
  * Added ported C++ version of ISAM2 Kitti example

  [ kvmanohar22 ]
  * adding functionality to use ISAM2 for imu preintegration example

  [ yetongumich ]
  * remove distance in noisemodel, replace with error
  * add test on robust loss functions to behave like quadratic
  * Revert "add implementation for deprecated Mahalanobis"
  * merge with mahalanobis renaming
  * re-add implemntation for deprecated Mahalanobis
  * renamed mahalanobisDistance
  * add document for robust noise model
  * noise in robust should be gaussian, change variable names
  * revised comments
  * change test cases to use the updated names, remove 2nd Create in robust
  * modified document, remove commented function, add deprecated distance
  * check if noisemodel is gaussian, if not throw exception
  * change unweightedwhiten back
  * rename residual to loss
  * modified document

  [ Varun Agrawal ]
  * typo fix

  [ Frank dellaert ]
  * Inlined derivatives and fixed one issue with Jacobians around image center
  * Re-ordered  and cleaned up tests, added derivative tests for image center

  [ Frank Dellaert ]
  * Setup and simulateMeasurements
  * Built TranslationFactor class and partially completed TranslationRecovery class
  * Added initalizeRandomly
  * Running optimization
  * Moved TranslationFactor prototype into sfm directory
  * unit test, incl Jacobians
  * Optimization works!
  * copyright 2020
  * Move to its own compilation unit

  [ Binit Shah ]
  * Include corrupting noise param to parse3DFactors

  [ Jose Luis Blanco-Claraco ]
  * more precise use of setZero() and add comments

  [ Binit Shah ]
  * Sampler initialized with noise argument
  * Using optional sampler outside loop

  [ Varun Agrawal ]
  * Added FunctorizedFactor and corresponding tests
  * fixes, better tests, docs
  * remove TODO
  * improved documentation

  [ Martin Vonheim Larsen ]
  * Added test for Unit3::operator=
  * Properly handle basis in Unit3::operator=

  [ Varun Agrawal ]
  * removed dependency on Eigen3 since we provide Eigen 3.3.7 and Ubuntu Bionic provides Eigen 3.3.4.

  [ Martin V. Larsen ]
  * Update testUnit3.cpp

  [ Varun Agrawal ]
  * improve and modernize the Dockerfiles
  * small logistical fixes

  [ Gerry Chen ]
  * put file stream inside scope to force buffer flush This was already fixed for serializeXML but not for serializeToXMLFile or deserializeFromXMLFile.
  * bypass assert_equal tests for file roundtrips
  * better comments on serializationTestHelper functions

  [ Jose Luis Blanco-Claraco ]
  * unhide doc section in PDF

  [ Varun Agrawal ]
  * remove extra semicolon

  [ David ]
  * Add unit test for oriented plane 3 factor jacobian

  [ Frank dellaert ]
  * Fixed override warnings and added a few missing headers

  [ Varun Agrawal ]
  * renamed testScenarios to testScenarioRunner
  * fix deprecation warnings from Matplotlib
  * reduce for loops, add titles to plots, better space subplots for IMU data
  * vastly improved the basic ImuFactorExample script
  * move Eigen format definition to Matrix.h
  * use Eigen formatting for Rot3 ostream
  * updated filename in brief
  * don't align matrix columns
  * fix print tests for Rot3 and Pose3
  * set CMAKE_VERBOSE_MAKEFILE flag to OFF
  * Cleaned up printing of Rot3
  * Cleaned up printing of Pose3
  * Cleaned up printing of NavState

  [ Jose Luis Blanco-Claraco ]
  * Finish undo of #310 fill with zeros (not actually needed)

  [ Varun Agrawal ]
  * moved matlab-style matrix format definition back to cpp, updated all formatters
  * use static_cast for Rot3 matrix

  [ David ]
  * Add Pose3-Point3 factor
  * Update incorrect test name
  * Add more documentation and clang-format

  [ Frank Dellaert ]
  * Importing Frobenius error factors from Shonan effort

  [ Fan Jiang ]
  * Fix UAF

  [ David ]
  * Fix OrientedPlane3Factor jacobian using numericalDerivative

  [ Fan Jiang ]
  * Fixed all alignment problems
  * Add missing include
  * Fix wrap tests
  * Address Frank's comments
  * Move away from boost

  [ Varun Agrawal ]
  * export cython install path so it can be picked up by other cmake projects
  * cmake function to install python package once make install is completed

  [ Gerry Chen ]
  * use boost paths append to have platform agnostic path separators

  [ Varun Agrawal ]
  * add new make command for installing python wrapper

  [ Gerry Chen ]
  * Separate stream creation and serialization Recommended by @ProfFan in #343 with the objective of making (de)serialize to string and to file more similar
  * formatting to Google style

  [ Varun Agrawal ]
  * added comments and removed unnecessary code

  [ Gerry Chen ]
  * fixed unit test failure on `testSerializationBase` object `output` was getting reused, but should be re-loaded into a "blank" object each time.

  [ David ]
  * Address Frank's comments and clean up changes

  [ Gerry Chen ]
  * reset filesystem - forgot to uncomment these after debugging

  [ akrishnan86 ]
  * optional initialization for LMParams

  [ Varun Agrawal ]
  * Set minimum supported numpy version to 1.11.0 (#366)

  [ Fan Jiang ]
  * Revise comments

  [ David ]
  * Update style and switch to errorVector()

  [ Gerry Chen ]
  * remove file roundtrip test for pointers

  [ Varun Agrawal ]
  * updated comments in shell script
  * added Windows batch script to install python wrapped package

  [ Fan Jiang ]
  * Style fixes as commented by @dellaert

  [ Gerry Chen ]
  * serialization docstrings
  * rename serialization functions with less ambiguous names According to Varun's suggestion. Note: string functions should be automatically inlined by compiler to avoid passing big strings.

  [ Varun Agrawal ]
  * pure CMake script to install Python wrapper after compiling
  * removed extra line
  * reset to previous version

  [ Fan Jiang ]
  * Add comments
  * Switch to the new alignment marker type

  [ Varun Agrawal ]
  * Load Cython requirements file instead of reading it in cmake
  * Added cmake variable GTSAM_CYTHON_INSTALL_FULLPATH to include build tag directly
  * Vastly improved setup.py template
  * Specify working directory from where to call setup.py
  * print Eigen Unsupported status message correctly
  * wrap the biasHat function for PreintegratedMeasurement
  * added .gitignore for when building the sample cmake projects

  [ Fan Jiang ]
  * Add missing lf

  [ akrishnan86 ]
  * fix SfmData naming

  [ Varun Agrawal ]
  * Revert "added .gitignore for when building the sample cmake projects"

  [ akrishnan86 ]
  * review1 changes

  [ Varun Agrawal ]
  * improved result printing and use of flags for ImuFactorExample.py
  * renamed ImuFactorExample2 to ImuFactorISAM2Example
  * added function to plot trajectory incrementally
  * improvements to ImuFactorExample
  * updated file docstring for ImuFactorExample2.cpp
  * make python-install command depends on gtsam target
  * cleaner version of execution script which only needs 'make install'
  * run setup.py after installing the gtsam_eigency module
  * capture stdout in python test [only for python3]
  * newline added to end of CMake file
  * Set high level Cython/Eigency variables to reduce duplication
  * Create and use cython build directory
  * Use the high level cython variables, improve install process
  * Remove redundant postfix checking since the postfix is already added at the top level
  * updated cython wrapper README
  * In-place cython build
  * fixed CYTHON_INSTALL_PATH cmake variable wrt cache
  * Python Wrapper CMake update
  * removed unneeded install commands and updated README
  * Add python-install dependency for gtsam_unstable as well
  * make utils and test code python2 compliant
  * small improvements to the ImuFactorExample.py

  [ akrishnan86 ]
  * forking code for mfas from 1dsfm

  [ Varun Agrawal ]
  * update python build location in travis script

  [ Fan Jiang ]
  * Fix memory leak in Expressions
  * Fix TranslationFactor with Vector3 as Point3
  * Fix MSVC build

  [ Varun Agrawal ]
  * Improved paths and added checks

  [ akrishnan86 ]
  * changing mfas to use gtsam keys

  [ Jose Luis Blanco-Claraco ]
  * Fix missing DLL exported symbol

  [ Varun Agrawal ]
  * new definition for FunctorizedFactor to allow for using std::function and lambdas
  * Simplified FunctorizedFactor

  [ Fan Jiang ]
  * Fix FrobeniusWormholeFactor Python test

  [ Varun Agrawal ]
  * fix working directory for python install target
  * test SmartFactor when body_P_sensor is passed in

  [ Thomas Jespersen ]
  * ISAM2 Kitti example: Addressed review comments

  [ akrishnan86 ]
  * adding tests

  [ Mike Sheffler ]
  * Second attempt at a wrapper fix.

  [ Varun Agrawal ]
  * Abstracted out serialization code for PreintegrationBase

  [ Mike Sheffler ]
  * Unnecessary include statement

  [ Varun Agrawal ]
  * Updated  PreintegratedImuMeasurements docstring

  [ Fan Jiang ]
  * Fix lambda check in logging optimizer

  [ Varun Agrawal ]
  * Replace scoped name with direct name and instantiate base class in constructor
  * Major updates to CombinedImuFactor to make it Testable as well as serializable
  * Fix typo
  * Added and updated serialization tests to include all IMU factors
  * revert variable change

  [ akrishnan86 ]
  * tests and documentation
  * formatting headers and removing debugging code

  [ Varun Agrawal ]
  * reduced tolerance for checking jacobian

  [ Fan Jiang ]
  * add return value in gtsam_optimize

  [ Frank dellaert ]
  * Eliminated some copy/paste
  * Added g2o test files
  * Added tests on determinants of read rotations
  * Normalized quaternions before converting to Rot3 to account for limited precision in text files.
  * Avoided extra conversions to quaternions

  [ Varun Agrawal ]
  * Add indentation
  * Handle extrinsics and intrinsics for jacobian

  [ Frank dellaert ]
  * Formatted and fixed discrete examples

  [ Varun Agrawal ]
  * Use built in Matrix serialization
  * Generic Eigen::Matrix serialization for boost
  * add compiler flags to suppress warnings if built in release mode
  * Add MATLAB root and Mex paths to cmake output, align GTSAM specific output
  * Quote variable so it works on Windows
  * Use static matrix and constexpr
  * use boost serialization macro instead of make_array

  [ Fan Jiang ]
  * Added wrapping for the PCG solver in Cython
  * add comments

  [ Varun Agrawal ]
  * suppress warnings only for 3rd party code for Release builds
  * fix init issues with Vector3, use static matrices where possible
  * added note about code source and eigen resize for both static and dynamic matrices
  * Explicit type definition to handle warning
  * support for landmarks in g2o files

  [ Fan Jiang ]
  * Add check to ensure we are calling lambda on a LM

  [ Varun Agrawal ]
  * correct compiler flag for Windows

  [ Fan Jiang ]
  * Add unit test
  * use isinstance

  [ Varun Agrawal ]
  * added cmake policy for AppleClang compiler identification

  [ Fan Jiang ]
  * Move the declaration to cpp

  [ Varun Agrawal ]
  * Better way of exporting Boost serialization guid

  [ Frank dellaert ]
  * Resurrecting DiscreteBayesTree tests

  [ yetongumich ]
  * modified test

  [ Frank dellaert ]
  * Checked in pdf for easy reference
  * added printSignature and evaluate
  * Fixed link issue
  * Cleaned up formatting
  * Fixed tests

  [ Varun Agrawal ]
  * perform equality comparison on root of class hierarchy
  * correct vector init
  * delete extra pdf file
  * Revert "delete extra pdf file"

  [ yetongumich ]
  * deprecate error in noisemodel, use loss instead; revise virtual with override
  * deprecate error in noisemodel, use loss instead; revise virtual with override

  [ Frank dellaert ]
  * Extra tests on frontal keys
  * Some more refactoring of marginals
  * Fix confusion between parents and frontals
  * Added code to re-jigger Signature cpt so that frontal keys are always first, consistent with how the DiscreteElimination function works.
  * New discrete example
  * Better print
  * Cleaned up tests
  * Use dict notation in print
  * Add explicit HMM example
  * Modernized sample function

  [ yetongumich ]
  * modify testNoiseModel to use loss instead of error
  * change doc

  [ Varun Agrawal ]
  * fix serialization warning for boost::optional<Vector3>

  [ Frank dellaert ]
  * Partial Specialization
  * Add BayesNet-inst.h at end of BayesNet.h

  [ Varun Agrawal ]
  * correct indentation for Python version

  [ Mike Sheffler ]
  * Missing BOOST_SERIALIZATION_NVP wrapper macro for an argument to be serialized

  [ Jose Luis Blanco Claraco ]
  * docker tag and pip3 fixes; add a readme
  * complete README

  [ David ]
  * Fix all unit tests. Only remaining item is the analytical Jacobian for Unit3::localCoordinates.

  [ acxz ]
  * set default initialization

  [ akrishnan86 ]
  * changing MFAS to oops and refactoring
  * minor comments change

  [ Frank dellaert ]
  * Fixed conventions for Jacobians
  * Unit test for transformPoseFrom
  * Some more name changes and documentation

  [ Varun Agrawal ]
  * Added more comments for clearer understanding

  [ Fan Jiang ]
  * Bump version and switch Pose3 expmap default

  [ Varun Agrawal ]
  * nicer formatting when printing values

  [ Fan Jiang ]
  * Fix test for full Pose3 expmap
  * Remove pybind11

  [ Frank dellaert ]
  * Replaced flag with 4.1 version
  * Removed all deprecated code w Stephanie...

  [ akrishnan86 ]
  * constructor API change after review1

  [ acxz ]
  * replace boost random with std random

  [ Varun Agrawal ]
  * add axis labels to the trajectory plot

  [ acxz ]
  * use reasonable distribution names
  * use reasonable distribution name
  * remove unused base variable

  [ Varun Agrawal ]
  * fix test for FunctorizedFactor printing
  * Fix minor bugs
  * test for readG2o
  * added axis labels and figure titles as optional params
  * increase number of build cores and remove sudo requirement
  * added backwards compatibility for parseVertex

  [ Frank dellaert ]
  * Improved comment
  * Made params const

  [ acxz ]
  * pass in expected Rot3 and parameter p

  [ Jose Luis Blanco Claraco ]
  * recover SLAM serialization test

  [ akrishnan86 ]
  * changes after review - removing positiveEdgeWeights

  [ Jose Luis Blanco Claraco ]
  * Add docs on serializing expressions.
  * enable compiler warnings and errors for safer code
  * Fix all new gcc warnings/errors: make explicit virtual/override methods.
  * Avoid -Woverride in clang <12.0.0
  * relax override -Werror for now
  * Fix missing virtual dtors
  * Fix warnings on incorrect for range reference bindings
  * remove leftover cmake debug trace

  [ acxz ]
  * fix warnings on incorrect for range reference bindings
  * remove useless Planning test
  * fix return copy

  [ Fan Jiang ]
  * Copy cython files
  * Add unstable files
  * Replace with new python tests
  * Sync ImuFactorExample
  * Sync ImuFactorExample2
  * Fix Pose2 plot
  * Update to match cython
  * Update more to match cython

  [ Varun Agrawal ]
  * update ImuFactorExample.py
  * fix warnings from subplots and improve code
  * add incremental plotting function
  * update ImuFactorExample2.py
  * rename ImuFactorExample2 to more descriptive name

  [ acxz ]
  * add override keyword

  [ Varun Agrawal ]
  * replaced SimpleCamera with PinholeCamera and updated tests
  * sort imports in python examples

  [ acxz ]
  * workaround to dereferencing a nullptr

  [ Jose Luis Blanco Claraco ]
  * Add genericValue() helper
  * Values initializer_list constructor

  [ Varun Agrawal ]
  * use \n instead of endl

  [ Jose Luis Blanco-Claraco ]
  * docs and missing traits
  * Add variadic-template N-ary ExpressionFactor
  * typo

  [ Jose Luis Blanco Claraco ]
  * Deprecate ExpressionFactor2
  * port ExpressionFactor{2->N}

  [ Jose Luis Blanco-Claraco ]
  * Add unit test revealing deserialization error
  * Fix serialization bug in RangeFactor

  [ Fan Jiang ]
  * Fix import typo
  * Change to new KeyVector accessor

  [ Jose Luis Blanco Claraco ]
  * Deprecate ExpressionFactor2 for 4.1
  * Recover the convenient evaluateError() method
  * fix evaluateError() methods

  [ Varun Agrawal ]
  * fixed tests

  [ acxz ]
  * remove empty smart folder
  * remove smart from cmake

  [ Varun Agrawal ]
  * fix indentation of macro guard

  [ Fan Jiang ]
  * Sync with varun's pr

  [ akrishnan86 ]
  * add binary measurement class

  [ Varun Agrawal ]
  * wrap preintegrated function

  [ Fan Jiang ]
  * Moved python files
  * import from is working
  * Sync with new_wrapper develop branch
  * remove function import
  * Import classes used more than once
  * Newline

  [ Stephanie McCormick ]
  * change from const Params back to non-const Params

  [ Varun Agrawal ]
  * remove virtual

  [ Frank Dellaert ]
  * Allow graph to be queried
  * VectorizedGenerators
  * Removed superfluous size, added doxygen partitions
  * Allow to pass in pre-computed generators. Should save some energy.
  * Update README.md

  [ Varun Agrawal ]
  * fix warning in FrobeniusWormholeFactor

  [ akrishnan86 ]
  * changes with passing unit tests

  [ mawallace ]
  * Remove set_zlabel from plot_pose2

  [ akrishnan86 ]
  * binary measurement wrap

  [ ss ]
  * Fix pose2 align bug.

  [ Sam Bateman ]
  * added mutex to BayesTreeCliqueBase for access to cached variable and added copy/copy assignment constructors to allow for full previous functionality while adding thread safety to marginalCovariance.
  * update spelling/indent

  [ Varun Agrawal ]
  * Revert "fix warning in FrobeniusWormholeFactor"
  * fix warning in FrobeniusWormholeFactor
  * function for consistent width printing of CMake flags

  [ akrishnan86 ]
  * sfm changes to docs, format, wrapper

  [ ss ]
  * Finish Sim3 align and transformFrom functions.

  [ akrishnan86 ]
  * update binary measurement brief

  [ ss ]
  * Fix document.
  * Improve code quality.
  * Update doc.

  [ Frank Dellaert ]
  * Added Spectra 0.9.0 to 3rdparty

  [ Varun Agrawal ]
  * example using CombinedImuFactor
  * renamed ImuFactorExample2 to be more consistent with naming
  * revert author change
  * reworked basic ImuFactorsExample
  * use boost program_options for command line parsing

  [ alexma3312 ]
  * Change typedef into using.

  [ Varun Agrawal ]
  * default string value for printing Imu factors
  * fix FrobeniusBetweenFactor declaration
  * comment out timing-out CI stage

  [ Frank Dellaert ]
  * Templated some methods internally
  * Very generic parseToVector
  * refactored load2d
  * Templated parse methods
  * Turn off gcc build as it times out every time
  * Avoid clang warnings about double-brace initialization
  * Hunted down deprecated use of parse3DLandmarks

  [ Fan Jiang ]
  * Backport GitHub Actions CI (#259)
  * Remove travis and appveyor
  * Limit python triggering
  * Remove pybind build
  * Correct .travis.sh
  * switch to boost 1.69.0
  * typo
  * Add a display for current boost version
  * Manually specify BOOST_ROOT

  [ Frank Dellaert ]
  * Some behavior changes.

  [ Fan Jiang ]
  * typo
  * Ignore system boost
  * Fix wrong include path
  * Do not search for the cmake boost file
  * Real reason why cannot find boost

  [ Varun Agrawal ]
  * renamed from build-cython to build-python
  * remove travis.python.sh and instead add script in .github folder
  * updates to python CI yml file
  * moved CI script for unix based systems
  * updates to macOS and Linux CIs
  * fix script name
  * fix cython path

  [ Frank Dellaert ]
  * Fixed covariance bug

  [ Varun Agrawal ]
  * fix build script
  * set LD_LIBRARY_PATH
  * test LD_LIBRARY_PATH
  * correctly add LD_LIBRARY_PATH boost lib directory
  * remove unnecessary prints
  * add description for CI scripts

  [ alexma3312 ]
  * Fix GTSAM_TYPEDEF_POINTS_TO_VECTORS.

  [ Frank Dellaert ]
  * Addressed review comments

  [ Fan Jiang ]
  * Always build unstable
  * Add Python to the name of CI

  [ Frank Dellaert ]
  * Feature/shonan averaging (#473)

  [ Varun Agrawal ]
  * replace atof/atoi with standardized stof/stoi

  [ Fan Jiang ]
  * Ported MATLAB Examples
  * Python supplementary files
  * Remove old wrap
  * Squashed 'wrap/' content from commit 21ee82f75
  * Initial migration
  * Fixes the specialization order
  * Squashed 'wrap/' changes from 21ee82f75..49d831588

  [ alexma3312 ]
  * Correct variable names and refactor code.

  [ Fan Jiang ]
  * Fix some unstable MATLAB examples
  * Small fixes
  * Change build target
  * No submodules

  [ Jose Luis Blanco-Claraco ]
  * Include 3rdparty libraries as 'system' headers to avoid warnings

  [ Fan Jiang ]
  * Remove offending include
  * Remove python folder temporarily
  * Renamed cython to python
  * Remove eigency
  * Migrated all examples and tests
  * Add supplimentary files used by the new pybind11 wrapper
  * update readme
  * Disable unstable MATLAB by default
  * Add documentation to the templates
  * Document tricks to allow direct import from xxx
  * Add docs for preamble and specialization.h
  * Reformat CMake files
  * Add MATLAB root prompt
  * Fix CI Script for Pybind11

  [ Varun Agrawal ]
  * Improve Github Actions (#476)

  [ Fan Jiang ]
  * Add dependency for python-install

  [ Frank Dellaert ]
  * Fix override warning
  * Recreated initializeRandomlyAt
  * Added Shonan Averaging unit tests

  [ Frank dellaert ]
  * Fixed example printing

  [ Varun Agrawal ]
  * CI for special cases
  * reduce special cases to only Ubuntu+GCC, disable Python CI for Ubuntu GCC9
  * updated step name
  * comment out python ubuntu-gcc-9 completely

  [ Claudius Tewari ]
  * Fix "Wrapper" heading anchor link in README.

  [ Frank dellaert ]
  * Added g2o to search
  * Transpose translation when printing
  * Moved common code to InitializePose

  [ alexma3312 ]
  * Change sim3 variable from T to S.

  [ Frank dellaert ]
  * Shonan C++ CLI
  * Python CLI

  [ Fan Jiang ]
  * Add script to update the wrap subtree

  [ alexma3312 ]
  * Modify the print function print out format.

  [ Frank dellaert ]
  * Fixed test

  [ Fan Jiang ]
  * Fix Python wrapper with TBB on
  * Add missing newline

  [ Frank dellaert ]
  * Fixed Point2 and Point3 to have similar behavior as in C++ - to also take vectors - to be initialized to Nan
  * Added more support for Pose2 data
  * Now plots 2D or 3D trajectories (on a 3D plot)
  * Made 2D and 3D translation recovery work, and added plot
  * Remove distinction between Typedef and Point3.

  [ Fan Jiang ]
  * Remove GTSAM_DEFINE_POINTS_TO_VECTORS
  * Cleanup preamble and specialization
  * Add TBB test for Python and GTSAM C++
  * Fix special builds
  * Add TBB Python CI to matrix

  [ Frank dellaert ]
  * Address review comments
  * Fixed compilation and removed absolute path.

  [ Fan Jiang ]
  * Fix TBB env not propagated
  * Fix preamble.h

  [ alexma3312 ]
  * Replace rotAveraging with gtsam::FindKarcherMean.
  * Add Compatibility unittest.
  * reformat pose3 declaration.
  * create a helper function to remove repeat code.
  * Add a comment for transformFrom pose.

  [ Fan Jiang ]
  * Bump version to 4.1.0

  [ alexma3312 ]
  * Modify comments and move header file declaration.

  [ jingwuOUO ]
  * Replace MakeATangentVector with MakeATangentVectorValues

  [ Fan Jiang ]
  * Make sure our readme is proper restructuredText

  [ alexma3312 ]
  * Add mean function into Point3 class.
  * Create AlignGivenR function and refactor code.
  * Change CMakelist file to fix merge conflict.

  [ Fan Jiang ]
  * Remove unnecessary comment
  * Proper method to deal with markdown in setup.py

  [ Frank dellaert ]
  * Linting and getAnchor wrap

  [ jingwuOUO ]
  * Fixed checkwitheigen testcase failure

  [ Frank dellaert ]
  * added missing namespace

  [ jingwuOUO ]
  * Rename and small fix.
  * Changed TangentVectorValues test

  [ akrishnan86 ]
  * wrapping translation recovery doesnt build

  [ Christian Berg ]
  * Added Jacobians for Rot3::RzRyRx and related named constructors

  [ akrishnan86 ]
  * TAvg wrapper builds

  [ Varun Agrawal ]
  * Define dataset directory for Python package
  * Add python dataset directory to search options
  * Add data files to python package
  * Better location for setting Python dataset directory in CMake

  [ Christian Berg ]
  * Also add jacobians to Rot3::RzRyRx for when quaternions are selected

  [ Varun Agrawal ]
  * Print Vectors horizontally for easier reading
  * Undo previous changes for common directory
  * don't wrap findExampleDataFile
  * Add python version of findExampleDataFile
  * Undo Point operator overloading and instead update NavState print
  * check for null pointer in general

  [ Timothy Setterfield ]
  * fixed issue that pos and vel are in nav frame
  * added another coriolis unit test
  * added cached rotation bRn
  * cleaned up notation
  * fixed typo

  [ Varun Agrawal ]
  * new function readBal which returns the SfmData object, allowing for single line calling
  * follow Google Style for function naming
  * Wrapper updates

  [ JIanzhu Huai ]
  * correct coefficients of approximated SE3 Q_r

  [ Varun Agrawal ]
  * update minimum Boost version required

  [ JIanzhu Huai ]
  * test computeQforExpmapDerivative

  [ Fan Jiang ]
  * Wrap DSFMap so SFM can use them
  * Add the unit test for DSF in Python
  * Fix include issue

  [ akrishnan86 ]
  * translation recovery py test

  [ Akshay Krishnan ]
  * translation recovery unit tests pass
  * remove binarymeasurementsunit3 class in wrapper

  [ alexma3312 ]
  * remove commented out code
  * document and use std::tie
  * Refactor mean and mean_pair test case.

  [ akrishnan86 ]
  * adding binarymeasurementsunit3

  [ Frank dellaert ]
  * Fix typo

  [ Varun Agrawal ]
  * ISAM2 helper methods and wrapper to evaluate nonlinear error

  [ Christian Berg ]
  * Added Jacobians for Rot3::xyz and related conversions to euler angles

  [ akrishnan86 ]
  * code changes to increase modularity
  * fixes1
  * fixes2

  [ Akshay Krishnan ]
  * fixes3

  [ alexma3312 ]
  * Fix double computation.

  [ Christian Berg ]
  * Throw exception in Rot3::RQ for derivatives close to singularity

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from 49d831588..314b121fd
  * Use cmake to identify best Python version if Default requested
  * Make SharedNoiseModel as optional parameter, remove hardcoded verbosity, and silence test.
  * print version of TBB found
  * Don't print private compile options
  * fix wrapper TODOs for ISAM2 and BearingRange
  * minor formatting

  [ akrishnan86 ]
  * wrap MFAS

  [ Akshay Krishnan ]
  * changing to boost shared_ptr

  [ Ayush Baid ]
  * Adding logmap API which applied a logarithmic map taking the object to the argument
  * Removing logmap in case of failure

  [ alexma3312 ]
  * Refactor Align with short functions.

  [ Akshay Krishnan ]
  * remove unusede ptr member in MFAS
  * translation averaging example

  [ John Lambert ]
  * Update README.md
  * improve python wrapper cmake flag instructions
  * Update README.md
  * Update README.md
  * Update README.md
  * use cleaner checkmark symbol in readme
  * update example list
  * update python examples list
  * add p
  * add python equivalent of c++ sfm data calls
  * cannot retrieve p attribute

  [ akrishnan86 ]
  * adding documentation for example

  [ Varun Agrawal ]
  * update numericalDerivative functions to take in optional dimension template parameter and added corresponding tests

  [ John Lambert ]
  * remove BAL for now, and add get3dPoint() for p access
  * mark SFMExample_bal as still in progress

  [ Varun Agrawal ]
  * remove logmap function from LieVector and LieMatrix
  * added calibrate with jacobians for Cal3Bundler

  [ John Lambert ]
  * rename get3dPoint() to point3()

  [ Varun Agrawal ]
  * combine the calibrate functions into one
  * put the jacobians at the end so that the calibrate function can be wrapped
  * make tolerance as a constructor param
  * update calibrate in wrapper

  [ lcarlone ]
  * adding robust cost function - version 1
  * robust noise in place - test fails due to non-isotropic covariance?
  * solving issue with robust model

  [ Varun Agrawal ]
  * small fixes to ensure marginals are computed correctly

  [ lcarlone ]
  * attempting robustification in Frobenius factor

  [ Varun Agrawal ]
  * update wrapper to also work for Matlab

  [ lcarlone ]
  * added nice unit test
  * improved test

  [ akrishnan86 ]
  * naming and other changes - review1

  [ JIanzhu Huai ]
  * test Qr with old codebase fails
  * correct Qr coefficients in approximation

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from 314b121fd..5e1373486

  [ alexma3312 ]
  * Move private func to .cpp.
  * Change getXY to calculateScale.
  * Emphasize Rdb is a vector.
  * Change input into centroids.
  * Refactor code to increase speed.

  [ Varun Agrawal ]
  * wrapped BearingRange::Measure method and removed deprecated classes

  [ lcarlone ]
  * added check and unit test

  [ Varun Agrawal ]
  * remove all LieScalar/LieVector/LieMatrix references from wrapper
  * MATLAB readme update
  * remove Point3 serialization test since Point3 is now just a vector

  [ lcarlone ]
  * added control over minimum rank in ShonanAveraging example, and resolved hard-coded sigma in FrobeniusFactor

  [ alexma3312 ]
  * Fix quaternions test failure.

  [ akrishnan86 ]
  * updating defaultdict init

  [ alexma3312 ]
  * Throw an exception when n=0 .

  [ Varun Agrawal ]
  * use implicit function theorem to compute jacobians of Cal3Bundler::calibrate
  * added test for Cal3Bundler::calibrate Jacobians1
  * make Cal3Bundler wrapper constructor backwards compatible
  * fixed sized matrices and minor improvements

  [ alexma3312 ]
  * Modify error message to be more descriptive.

  [ Varun Agrawal ]
  * compute inverse only once
  * wrap PinholeCameraCal3Bundler

  [ Frank Dellaert ]
  * Small formatting changes and removal of test header
  * New method "add" as in GaussianFactorGraph
  * Re-formatting and using "add"/"auto" where we can.
  * Fixed spelling mistake

  [ lcarlone ]
  * reverted changes to cproject and language settings
  * fixed typo
  * reverted changes to cproject

  [ akrishnan86 ]
  * renaming variables

  [ Frank Dellaert ]
  * Changed name to avoid template confusion in VC 2016
  * Clean up code and tests and use "means"

  [ Varun Agrawal ]
  * remove all Cython references

  [ Frank Dellaert ]
  * Update Point3.h

  [ John Lambert ]
  * add

  [ akrishnan86 ]
  * outlier rejection in separate fn and other readability changes
  * readability changes
  * fixing one variable that was not renamed

  [ Varun Agrawal ]
  * find python if using Default

  [ Frank Dellaert ]
  * Fixed include error

  [ Varun Agrawal ]
  * check if mex compiler exists for Matlab wrapper, formatting

  [ akrishnan86 ]
  * removing shared ptr, iostream, renaming

  [ Varun Agrawal ]
  * added normalize function to orthogonalize the rotation after composition
  * normalized needs to be called explicitly

  [ John Lambert ]
  * add WIP PR

  [ Varun Agrawal ]
  * Moved normalize next to ClosestTo and add more docs

  [ Jose Luis Blanco Claraco ]
  * refactor cmake scripts into smaller files
  * Remove obsolete comments
  * Use system eigen3 only if first quietly found.

  [ Fan Jiang ]
  * Squashed 'wrap/' changes from 5e1373486..2192b194e
  * Resurrect serialization tests
  * Add unit test for python serdes
  * Squashed 'wrap/' changes from 2192b194e..dfa624e77

  [ Jose Luis Blanco Claraco ]
  * Use camel case for cmake files
  * Revert use system Eigen if found

  [ Akshay Krishnan ]
  * Wrapping SfmCamera to be used with GeneralSFMFactor

  [ John Lambert ]
  * remove breakpoints

  [ Akshay Krishnan ]
  * Renaming SFMCamera to PinholeCameraCal3Bundler

  [ Fan Jiang ]
  * Fix LLVM repo keys

  [ jingwuOUO ]
  * Add acc power method in Alg6
  * Completed and tested power method with unittest
  * Added PowerMinimumEigenValue method and unittest.
  * feat: Add  Best Heavy Ball alg  to set beta
  * Refactor power and accelerated method

  [ Sushmita ]
  * python wrapper for sfmdata

  [ Fan Jiang ]
  * Add comments

  [ Frank dellaert ]
  * Fix warning on clang
  * Fixed some warnings
  * Printing now transpose
  * Simplified evaluateError
  * Use keyFormatter
  * Added unit test for issue 561

  [ jingwuOUO ]
  * Reformat code.
  * Small fix

  [ John Lambert ]
  * use argparse defaults
  * make a note about how the eror drops

  [ Fan Jiang ]
  * Add comments
  * Add comments

  [ John Lambert ]
  * fix typo

  [ Fan Jiang ]
  * Fix inteminent sks keyserver failure
  * Add notes

  [ John Lambert ]
  * clean up comments

  [ Sushmita ]
  * unittested features in SfmData
  * python wrapped SfmData and SfmTrack
  * python wrapper sfmtrack reflected in other files

  [ Jose Luis Blanco-Claraco ]
  * Use METIS system library if so selected

  [ John Lambert ]
  * renamed myData to scene_data, and explained BAL parameterization
  * update list of C++ examples that have been ported to Python

  [ Sushmita ]
  * changed Measurements to measurements
  * wrapped sfmtrack
  * removed measurements from sfmdata

  [ jingwuOUO ]
  * Revise according to Frank and David's comments
  * Correct unittest input error
  * Added more detailed documentation
  * Fixed not solve errors and detailed documentation

  [ Jose Luis Blanco-Claraco ]
  * Add alternativeName()

  [ Jose Luis Blanco Claraco ]
  * replaced lambda with class plus functor
  * less verbose name path for SymbolGenerator

  [ Sushmita ]
  * changed setP method name removed commented code
  * remved commented code

  [ jingwuOUO ]
  * Revised as David's second review
  * Refined unittest

  [ Sushmita ]
  * added new constructor and changed to emplace

  [ Jose Luis Blanco-Claraco ]
  * Automatic detection of correct suggest-override flag

  [ Tim McGrath ]
  * adding additional Unit3 support in the wrapper: PriorFactorUnit3, Values::insert/update/at(Unit3)

  [ jingwuOUO ]
  * Delete forcing compare eigenvector in unittest
  * Revised documentation

  [ Sushmita ]
  * sfmtrack constructor changed to accept point

  [ Fan Jiang ]
  * Attempt to fix spooky boost in Homebrew
  * Use my tap
  * Use my tap
  * Use explict tap name
  * Last resort: use the explict 1.73 formula
  * Use my tap

  [ jingwuOUO ]
  * Fixed forcing comparing eigenvector.

  [ Varun Agrawal ]
  * Added flag for absolute error
  * add test
  * cleaner assertion
  * Consistent interface for pixel center (#579)
  * minor typo fixes
  * Fix python discovery for MATLAB wrapper

  [ Jose Luis Blanco-Claraco ]
  * Avoid redundant calls to error()
  * Add iteration hook in non-linear optimizers

  [ Varun Agrawal ]
  * Use new env files for github actions
  * Roustify BinaryMeasurements in a functional way, plus formatting
  * Remove goto, update docs, formatting
  * delete old, unused file
  * ubuntu with gcc-9 in CI
  * fix path setting for Windows

  [ Martin Vonheim Larsen ]
  * Docs: Use https for mathjax

  [ Varun Agrawal ]
  * Force EXPMAP option for both if either POSE3 or ROT3 is set
  * uncomment tests
  * Improved CayleyChart Local
  * Similarity3 test only for Rot3 Expmap
  * comment out Windows build which is timing out
  * Update Boost since 1.69.0 has been deprecated in CI images
  * Comment out Windows 2016 since it times out
  * Revert "Improved CayleyChart Local"
  * Use older and faster Cayley transform but add det check and docs
  * Print message when either Pose3 or Rot3 expmap is ON
  * CI path for Cayley transform
  * small doc fix
  * Add new assertions and update tests
  * pass in params to optimizer
  * upload build directory after workflow completes

  [ jingwuOUO ]
  * Fixed doxygen

  [ Jose Luis Blanco Claraco ]
  * Add docs, fix ctor placement
  * further extended docs

  [ Varun Agrawal ]
  * use KeyVector to allow proper wrapping with TBB
  * update MFAS tests
  * fix indentation and add upload for Windows
  * correct form for workspace env variable
  * differentiate between Release and Debug builds
  * Better fkag naming, and more docs
  * placed MEX check to new cmake file
  * restructuring
  * encapsulated and updated all the CMake related to Matlab
  * better flag name and docs
  * only upload release builds
  * enforce constant term in quadratic to be 0
  * Make Values::at return as const
  * correct conditional syntax
  * FIx indentation for Values-inl.h
  * syntax update

  [ jingwuOUO ]
  * Added test for subgraph preconditioner in shonan
  * Refined error message in subgraphbuilder

  [ Frank dellaert ]
  * Initial design

  [ lcarlone ]
  * starting to create test and code for gncParams

  [ Sushmita ]
  * vector of cameras and triangulation function wrapped

  [ lcarlone ]
  * added equals in NonlinearOptimizerParams
  * params parsed correctly
  * added gnc loop
  * now we have very cool tests!
  * 2 tests to go
  * simplified small test to make it more understandable
  * 1 test to go
  * stuck on conversion of noise model
  * finally I have a way to properly change the noise model!
  * working on make graph
  * new constructor test which gets rid of robust loss now passes!
  * yay! only the final monster to go!

  [ Varun Agrawal ]
  * Assign pointer to prevent errors
  * fixes to plot code
  * suppress warnings from clang as well

  [ lcarlone ]
  * added verbosity
  * ladies and gents... GNC!
  * added functionality to fix weights
  * correct formatting
  * done - PGO works like a charm!

  [ Sushmita ]
  * docs fixed and error threshold reduced
  * moved landmark variable to setup
  * push back arguments changed to const reference
  * removed commented code

  [ akrishnan86 ]
  * new test doesnt pass
  * translation recovery unit tests pass

  [ Varun Agrawal ]
  * Deprecate SimpleCamera properly
  * deprecate SimpleCamera tests

  [ jingwuOUO ]
  * Fixed typo

  [ Varun Agrawal ]
  * Jacobians for Camera models
  * update Python test
  * Revert "FIx indentation for Values-inl.h"
  * uncomment calibration applications
  * Removed unnecessary copy constructor and robust noise model is caller's responsibility
  * throw runtime errors and explicitly form robust noise model
  * makeNoiseModelRobust assumes responsibility for robustifying noise models
  * use goto flow
  * formatting

  [ jingwuOUO ]
  * Added more description to the toyExample.g2o

  [ Varun Agrawal ]
  * fix tests
  * Don't throw error for Kappa and test parameter print

  [ jingwuOUO ]
  * Added dense matrix test case in power/acc

  [ Varun Agrawal ]
  * added Imu parameter units to doc
  * formatting
  * Common function to compute Jacobians of calibrate method

  [ akrishnan86 ]
  * changing test names and adding documentation

  [ Varun Agrawal ]
  * Revert "added Imu parameter units to doc"
  * Revert "formatting"

  [ akrishnan86 ]
  * documenting member variables

  [ Varun Agrawal ]
  * Added units for imu noise and bias sigmas
  * common header file for all calibration models
  * Base class for all calibration models
  * Refactor Cal3_S2 and Cal3_S2Stereo classes
  * Refactor all Cal3D based models
  * Refactor Bundler and Fisheye models
  * Minor updates
  * Remove deprecated calibration method from wrapper
  * replace typedef with using

  [ Sushmita ]
  * templated functions where possible
  * removed push_back method from cameraset wrapper
  * added utility functions and code cleanup

  [ Varun Agrawal ]
  * modernized default constructors
  * Cal3 code improvements
  * matrix_inverse() -> inverse()
  * remove using-namespace and fix print test
  * Added tests for printing, plus small formatting
  * stream printing for all calibration models
  * Improved constructor for loading parameters from file
  * Override dim(), cleanup, and add unicode
  * Added tests for checking calibration model dimensions
  * Consistent and better formatting
  * additional formatting

  [ Jose Luis Blanco Claraco ]
  * SymbolGenerator: add chr() and made constexpr-capable

  [ Varun Agrawal ]
  * mark getters as const
  * Helper method to robustify measurements
  * calibrate and uncalibrate for Cal3_S2Stereo model
  * throw error if robust model used but not specified in parameters

  [ Sushmita ]
  * added cmake and preamble
  * moved measurement generation to separate function
  * code formatted

  [ Varun Agrawal ]
  * disambiguate overloaded base class

  [ Sushmita ]
  * removed typedef and formatted code

  [ Varun Agrawal ]
  * function to save graph as graphviz file via wrapper

  [ Sushmita ]
  * moved camera_set to generate_measurements

  [ lcarlone ]
  * moved class to .h
  * added comments
  * fixed typo
  * added more explanation on throw

  [ Varun Agrawal ]
  * added flag to enable optimality certification, some formatting
  * correct flag checking
  * Revert "code formatted"
  * format python triangulation tests
  * more formatting
  * remove unused imports

  [ jingnanshi ]
  * fix comment

  [ Varun Agrawal ]
  * formatting and small fixes

  [ jingnanshi ]
  * TLS wip
  * tls done except unit tests
  * minor fix
  * fix scoping
  * mu initialization test & minor formatting fixes
  * mu update test
  * correctly check relative difference between mu valus at consecutive iterations
  * test fix
  * more unit tests

  [ Varun Agrawal ]
  * better documentation

  [ Russell Buchanan ]
  * Adds unit test for imu preintegration of a single step

  [ lcarlone ]
  * fixed small typos

  [ Varun Agrawal ]
  * explicitly initialize Point3
  * formatting

  [ jingwuOUO ]
  * Added the example graph in powerMethodExample.h
  * Refined reference documentation
  * Make purturb static

  [ Varun Agrawal ]
  * refactored code for ImuMeasurements
  * refactored code for testing ImuPreintegration with impact
  * add simulation data
  * save time in CSV, formatting

  [ lcarlone ]
  * templating on params is still problematic
  * finally fixed the typedef
  * fixed templating, added a strict unit test on inlier threshold
  * made function name less ambiguous, added more comments on inlierThreshold

  [ jingnanshi ]
  * Fix TLS convergence check
  * update function name
  * fix test

  [ lcarlone ]
  * - fixed stopping conditions - handled degenerate case in mu initialization - set TLS as default - added more unit tests

  [ jingnanshi ]
  * minor fixes

  [ Varun Agrawal ]
  * wrap Symbol class and methods
  * minor formatting of cmake file

  [ Ayush Baid ]
  * Wrapping Cal3Bundler's prior and GeneralSFMFactor2

  [ lcarlone ]
  * moved GncParams to separate file, addressing comments by Frank, 1/n
  * renamed enum
  * addressed all except 2 comments by Frank. waiting for inputs on the 2 outstanding issues

  [ Ayush Baid ]
  * Adding Cal3DS2 prior factor and using template instead of typedefs

  [ lcarlone ]
  * moved gncLossType outside params

  [ cttdev ]
  * Adding BearingFactor3D to the wrapper definition.

  [ lcarlone ]
  * addressed final comments by Frank

  [ Varun Agrawal ]
  * Pose3 interpolateRt method (#647)

  [ Ayush Baid ]
  * adding serialization and other functions to enable testing
  * adding track serialization and testable trait
  * improving formatting
  * fixing variable names and comments
  * adding serialization functions to wrapper

  [ Varun Agrawal ]
  * remove build upload since it can't be used downstream

  [ Ayush Baid ]
  * fixing xml serialization issues
  * reverting SfmTrack to struct
  * printing out the 3d point
  * adding equals function to wrapper
  * adding inline comment for round trip
  * Adding serialization support to be used for GT-SFM (#650)

  [ Varun Agrawal ]
  * documentation for compiling on windows
  * improvements to windows doc
  * Squashed 'wrap/' changes from dfa624e77..09f8bbf71
  * updates to Cmake to use the new wrap package
  * updated python setup files so that example data is loaded correctly
  * more precise python version control in CI
  * Revert "more precise python version control in CI"

  [ Frank Dellaert ]
  * add virtual constructor
  * Removed reference for iterating over values. Also used auto where I could, when changing.

  [ Varun Agrawal ]
  * fix metis based warnings in CMake and compiling
  * add std namespacing
  * fix warnings for vectors and matrices
  * verbose printing of exceptions
  * remove verbose flag and print exception to std::cerr
  * cleanly initialize matrices in test
  * remove exception print, add TODO

  [ Ayush Baid ]
  * adding default color values to fix equality check

  [ Varun Agrawal ]
  * update completed TODOs
  * add unit test for NonlinearFactor weight with different noise models

  [ John Lambert ]
  * make r,g,b part of constructor w/ default values
  * add getter for rgb
  * make getter const

  [ Varun Agrawal ]
  * use older form of CMake install
  * add docs for cmake update
  * follow correct doxygen format
  * Squashed 'wrap/' changes from 09f8bbf71..186ed2c79
  * Squashed 'wrap/' changes from 186ed2c79..85d34351c

  [ David ]
  * Add getters to line3

  [ John Lambert ]
  * add robust shonan updates to python wrapper

  [ RamadanAhmed ]
  * Fix GTSAM_EXPORT for some classes and function

  [ Varun Agrawal ]
  * added FunctorizedFactor2

  [ Toni ]
  * Split .h/.cpp, use const& (WIP)

  [ Jose-Luis Blanco Claraco ]
  * CMake scripts compatible with gtsam as git submodule

  [ Ayush Baid ]
  * changing robust noise model to Gaussian

  [ Toni ]
  * Move example to gtsam_unstable
  * Fix formatting
  * Remove gtsam_unstable lib from examples
  * Fix formatting

  [ Gerry Chen ]
  * Mandy+Fan's original code for converting sparse matrices to Eigen format
  * merge Mandy + Fan's sparseJacobian unit test additions
  * organize/isolate sparseEigen functionality
  * fix off-by-one bug
  * cleanup

  [ jingwuOUO ]
  * Set estimateBeta() as optional

  [ Russell Buchanan ]
  * clean up

  [ Gerry Chen ]
  * rename matrix type from `SpMat` to `SparseEigen`
  * roll back some cosmetic changes to minimize the diff
  * SparseEigen docstring
  * typo: `expected` changed to `expectedMatlab`

  [ David Wisth ]
  * Add a simplifed version of the minimal failing example

  [ Gerry Chen ]
  * timing sparse eigen
  * minor efficiency modifications

  [ Varun Agrawal ]
  * use streams instead of printf
  * use of passed in stream for print capture
  * stream printing for Pose2
  * add BearingRange measured to wrapper
  * add override and formatting
  * remove cout statements from testImuPreintegration tests

  [ David Wisth ]
  * Add hessian calculation

  [ Gerry Chen ]
  * add generic optional parameters to sparseJacobian Also, the unit test changed due to a 0 entry that was previously wrongly included in the b-column of the sparse representation.
  * more generic sparseJacobianInPlace function
  * eliminate copy/pasta from SparseEigen with generic version of sparseJacobian
  * populate sparse matrix with `insert` rather than `setFromTriplets` About 5% speed improvement.

  [ Varun Agrawal ]
  * upgrade minimum required Boost version to 1.67.
  * Revert "upgrade minimum required Boost version to 1.67."
  * add known issues section with info about march=native

  [ Gerry Chen ]
  * move SparseMatrixBoostTriplets typedef to gfg
  * remove templating while maintaining efficiency Templating still used in cpp file for generic-ness, but not exposed anymore
  * revert Matrix.h
  * formatting

  [ Frank Dellaert ]
  * use transform rather than deprecated static function
  * Got rid of extra keys
  * Got rid of static versions of methods
  * Cleaned up derivative code
  * Cleanup

  [ Toni ]
  * Fix can be marked override warning

  [ Varun Agrawal ]
  * make non-editable CMake variables as INTERNAL
  * set TBB default to Release unless TBB_USE_DEBUG_BUILD is set

  [ lcarlone ]
  * changed barcsq to be a vector, such that the user can provide a bound for each factor
  * trying to include chi2
  * working unit tests: added chi2
  * done with new default noise thresholds!

  [ Varun Agrawal ]
  * fix bug in Pose2 print
  * use standard function to check for empty string

  [ Gerry Chen ]
  * remove unnecessary function overloads and typedefs
  * remove InPlace jacobian from .h file
  * fix comment and remove whitespace diff
  * disambiguate double template >>
  * replace sparseJacobian with "fast" version
  * auto and reserve fewer

  [ Peter Mullen ]
  * type in test hidden by duplicate test values

  [ Toni ]
  * Fix override warnings: modernize-use-override

  [ Frank Dellaert ]
  * cleanup

  [ lcarlone ]
  * improved comments
  * removed commented line

  [ jingnanshi ]
  * use std namespace qualifier

  [ Frank Dellaert ]
  * Comments

  [ Toni ]
  * Fix issue #689
  * Remove unnecessary include eigen3

  [ Jose Luis Blanco Claraco ]
  * Avoid target collision if gtsam used as submodule

  [ Mostafa ]
  * Update LieGroups.lyx
  * Generate LieGroups.pdf

  [ lcarlone ]
  * starting to implement tests and class for DisplacedPinholeCamera

  [ David Wisth ]
  * Add new oriented plane 3 factors with local linearisation point
  * Update print method of OrientedPlane3Factor
  * remove deprecated Unit3::error() which is replaced by Unit3::errorVector()
  * Update documentation on new factor

  [ Fan Jiang ]
  * Fix GTSAM MATLAB
  * Squashed 'wrap/' changes from 85d34351c..b28b3570d
  * Use latest Boost

  [ David Wisth ]
  * Revert "remove deprecated Unit3::error() which is replaced by Unit3::errorVector()"
  * remove the error() function from OrientedPlane3 (it had incorrect derivatives)
  * Tidy up comments and use cpplint
  * small tidy and fix unit tests

  [ John Lambert ]
  * Start moving Sim(3) functionality into Python wrapper

  [ David Wisth ]
  * Add inline comments on commented-out unit tests

  [ Asa Hammond ]
  * Initial implimentation of a Constant Velocity Constraint between NavStates
  * add gtsam namespace
  * bind a lambda instead of a static function

  [ John Lambert ]
  * add sim3 Point3 align to wrapper
  * Fix typo in using -> typedef conversion
  * move sim3 to stable version
  * move unit test out of gtsam unstable
  * move typedef to header file
  * add Align() for pose3pairs

  [ Asa Hammond ]
  * Add docstrings, use update() to build predicted state and build the error calc
  * remove AAA style for Dellaert style on simpler types
  * rename some vars for consistency
  * static const for placeholder vars
  * fixup noisemodel so its correct dimension
  * cleanup some cruft, add license text
  * corrected license header

  [ John Lambert ]
  * add standard interface for Sim3 in wrapper

  [ Asa Hammond ]
  * test cleanup

  [ John Lambert ]
  * add interface for transformFrom
  * PointPairs to Point3Pairs, and move to Point3.h
  * move PointPairs to Point3.h
  * update the docstring
  * Rename PointPairs to Point3Pairs everywhere per popular demand
  * add a unit test for line case
  * add another unit test, but this one fails
  * move Point3Pairs to Point3.h part of gtsam.i
  * fix notation
  * fix bugs in Karcher mean
  * switch typedef to using per popular request
  * update author list

  [ Akshay Krishnan ]
  * unit test + fix segfault

  [ akrishnan86 ]
  * formatting changes

  [ John Lambert ]
  * Use brew's boost, instead of Fan's version
  * fix notations
  * clean up Sim(3) notations
  * update test notation to have just 1 world frame, and fix typo in abPointPairs
  * dont conflate notation on aTb

  [ Ayush Baid ]
  * Squashed 'wrap/' changes from b28b3570d..d37b8a972
  * Squashed 'wrap/' changes from d37b8a972..10e1efd6f
  * enabling markers and testing pickle roundtrip for few classes

  [ Varun Agrawal ]
  * offload matlab wrapping to the wrap project
  * Make matlab wrapping rely completely on the wrap project

  [ John Lambert ]
  * improve docstring
  * improve docstring

  [ Varun Agrawal ]
  * update Matlab CMakeLists.txt to use the wrapper
  * delete example project since it is now its own git template
  * Squashed 'wrap/' changes from b28b3570d..b0eb968f2

  [ John Lambert ]
  * add const on Rot3
  * improve docstring
  * reformat with black
  * use different brace indent format

  [ Varun Agrawal ]
  * Fix Matlab tests and add saveGraph method to GaussianBayesNet

  [ Asa Hammond ]
  * Avoid derivative calcs if they aren't asked for
  * Move to fixed size matrix for derivative calculations

  [ John Lambert ]
  * temporarily turn off Python + tbb in CI because of OOM

  [ Frank Dellaert ]
  * fixed inhertance
  * Added explicit header as suggested in issue #634

  [ lcarlone ]
  * removed new class and test

  [ Varun Agrawal ]
  * clean up the CMake
  * Squashed 'wrap/' changes from b0eb968f2..d19cda546
  * templated return types are now supported
  * Move wrapper documentation to the wrap project

  [ lcarlone ]
  * added test
  * created .h
  * done factor!
  * compiles and all tests pass!!
  * simple tests are passing, but now we start on the serious ones
  * fixed equals
  * error computation also looks fine!
  * moving to other tests
  * moving to noisy tests
  * fixed unit test
  * got it!
  * test failure: now we can start computing jacobians

  [ Varun Agrawal ]
  * fix holder_type typo
  * make ignore list consistent across Python and Matlab
  * Squashed 'wrap/' changes from d19cda546..91f3835a8
  * Squashed 'wrap/' changes from 91f3835a8..aae9b4605

  [ lcarlone ]
  * trying to figure out jacobians

  [ Varun Agrawal ]
  * undo ignore updates, all tests now pass

  [ lcarlone ]
  * isolated schur complement!
  * pipeline up and running, need to fix Jacobians next, then Schur complement
  * debugging jacobians
  * still segfaults

  [ Jose Luis Blanco Claraco ]
  * fix missing verbosityLMTranslator case

  [ Varun Agrawal ]
  * fix the Similarity3 export declarations and wrapper
  * Fix CI with separate boost install
  * temporarily added required check
  * explicitly add python version

  [ lcarlone ]
  * working on new sym matrix

  [ Milo Knowles ]
  * Three examples of failing PartialPriorFactor<Pose3> Jacobians
  * Add successful unit test for identity pose
  * Correct Jacobian in PartialPriorFactor, modify derived factors for compatibility
  * Change mask to indices and update factor docstring

  [ lcarlone ]
  * solving key problem
  * trying to fix crucial test
  * fixed optimization test: now we have to (i) allow reuse of same calibration, (ii) enable all other tests, (iii) remove cout

  [ Milo Knowles ]
  * Prefer localCoordinates over logmap

  [ lcarlone ]
  * adding test with single key
  * removed tests that are not applicable - merging to develop now

  [ Navid Mahabadi ]
  * fix: UnaryFactor Jacobian
  * update: use avialble rot2 class

  [ Varun Agrawal ]
  * fix numpy deprecation warnings
  * more specific version of python to test against
  * Squashed 'wrap/' changes from aae9b4605..3eff76f60
  * Squashed 'wrap/' changes from 3eff76f60..548e61b1f
  * added CMake variable to set the matlab.h include
  * Squashed 'wrap/' changes from 548e61b1f..29628426d
  * switch back to simple python3
  * fix number of arguments to matlab_wrap for unstable
  * Squashed 'wrap/' changes from 29628426d..9a467794e

  [ lcarlone ]
  * fixed print, removed cout, test still failing
  * amended

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from 9a467794e..96ccdfd0b

  [ Milo Knowles ]
  * Fix x/y mismatch in unit tests
  * Add constructor tests and extend tests to Pose2
  * Switch to cleaner T::Logmap
  * Fix incorrect Vector dimension that was causing CI failures
  * Add LocalCoordinates() to ProductLieGroup and remove unnecessary <Eigen/Core> include to reduce compile memory

  [ lcarlone ]
  * moving to more appropriate construction of Hessian

  [ Milo Knowles ]
  * Fix Rot3::LocalCoordinates runtime error when using Cayley map

  [ lcarlone ]
  * getting better
  * test still failing
  * now I have a working prototype!
  * works now!!
  * getting ready to enable monocular operation
  * 2 tests to go
  * 1 test to go!
  * need to clean up templates and remove 2 redundant lines
  * removed extra "else"

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from 96ccdfd0b..5ddaff8ba
  * operator overloading for compose
  * add operator overloading and fix some TODOs in the wrapper

  [ lcarlone ]
  * added extra unit test
  * formatting
  * improved naming, formatting, comments
  * cleanup
  * fixed glitch highlighted by CI
  * trying to fix CI error

  [ Frank Dellaert ]
  * Added double as template arg

  [ lcarlone ]
  * added comment

  [ Varun Agrawal ]
  * added double as a template for PriorFactor, NavState retract and local, some formatting

  [ Aleksei Evlampev ]
  * fix boost serialization version includes
  * remove unnecessary includes in SubgraphBuilder.h

  [ Varun Agrawal ]
  * disable Wrapper CI for GCC 5 until we optimize the wrapper
  * change KeyFormatter from boost::function to std::function
  * bunch of minor fixes

  [ Gerry Chen ]
  * remove boost::function from Key.h
  * Squashed 'wrap/' changes from 5ddaff8ba..b43f7c6d7
  * update gtsam.i print function declarations
  * update default args to match with c++
  * include pybind11/function

  [ Aleksei Evlampev ]
  * return back including boost version.hpp header

  [ Gerry Chen ]
  * Squashed 'wrap/' changes from 5ddaff8ba..bae34fac8
  * include pybind::iostream to the python wrapper cpp template
  * documentation about wrap update instructions

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from bae34fac8..b80bc63cf

  [ Asa Hammond ]
  * Remove unused body_P_sensor param
  * update docstring for dt param

  [ Varun Agrawal ]
  * remove redundant stuff
  * Squashed 'wrap/' changes from b80bc63cf..903694b77
  * Squashed 'wrap/' changes from 903694b77..b2144a712
  * Squashed 'wrap/' changes from b2144a712..0124bcc45
  * assign default variables for string in print()

  [ yotams ]
  * rolling shutter projection factor

  [ Milo Knowles ]
  * Add MagPoseFactor
  * Compute error in the body frame and fix print()
  * Improve docs

  [ Ayush Baid ]
  * Adding factor with shared calibration as a variable

  [ Varun Agrawal ]
  * fix printing of preintegration params

  [ Ayush Baid ]
  * fixing tests by moving to Cal3_S2
  * using fixed size matrix, and adding jacobian in homogeneous conversion
  * renaming key variable
  * fixing docstring
  * reverting jacobian computation from homogeneous function

  [ Jose Luis Blanco-Claraco ]
  * Avoid potential wrong memory access

  [ Varun Agrawal ]
  * print default arguments update

  [ Ayush Baid ]
  * adding prior on calibrations

  [ Varun Agrawal ]
  * override print methods and update wrapper
  * remove virtual from overridden methods, add virtual destructors to appease compiler
  * fix warnings from tests
  * fix unused warning
  * fix some interface todos
  * add pybind11/operators.h to interface template
  * update boost download link

  [ lcarlone ]
  * addeed gnc example
  * added GNC example
  * adding knownOutlier input to GNC
  * all tests done!
  * user can now also set the weights to initialize gnc!

  [ yetongumich ]
  * refactor tests and add comments
  * resolve some nits

  [ lcarlone ]
  * added comment on example interface
  * amended

  [ Fan Jiang ]
  * Working CustomFactor
  * Change to using nullptr
  * Allow KeyVector to just be lists
  * Add comment on functor signature
  * Add comment in gtsam.i
  * Add printing for CustomFactor
  * Remove unnecessary comment
  * Add documentation
  * Address Frank's comments
  * Add more comments

  [ lcarlone ]
  * fixed formatting glitch

  [ HMellor ]
  * Correct ImuFactorExamples frame description

  [ Varun Agrawal ]
  * update docstrings and format
  * Add Akshay's Cal3Bundler test
  * account for radial distortion in initial guess for `calibrate`
  * add test for rekey of LinearContainerFactor
  * override the rekey methods so as to update the properties as well
  * added destructor for CameraSet to remove warning

  [ Tim McGrath ]
  * fix bug on computation of SO(3) logmap

  [ Milo Knowles ]
  * Update commment syntax and replace typedef with using

  [ Varun Agrawal ]
  * initialize with intrinsic coordinates which has radial distortion modeled
  * add all of Akshay's tests for default model
  * addressed comments and added an additional test
  * make rr and g as const

  [ Dan Barladeanu ]
  * Comments Only.
  * fix comment to docstring

  [ Frank Dellaert ]
  * Added Range to Point2

  [ Fan Jiang ]
  * Fixed Python factor for TBB
  * Trajectory Estimation example
  * Add unit test for optimization a factor graph
  * Address Frank's comments
  * Fix example in docs

  [ Varun Agrawal ]
  * fix bug in LinearContainerFactor and warnings about Point3
  * added test for this issue

  [ Ayush Baid ]
  * updating tests
  * creating 18 point example

  [ Milo Knowles ]
  * Move MagPoseFactor to gtsam

  [ Ayush Baid ]
  * switching to sampson point line error
  * fixing jacobians and reformatting
  * changing error values in test
  * adding jacobians on input points
  * adding jacobians on input points
  * moving to squared sampson error
  * using correct jacobian computation for calibration
  * fixing unit tests

  [ John Lambert ]
  * add transformFrom() for Point3 in Similarity3

  [ Ayush Baid ]
  * adding 11 point example for cal3bundler
  * fixing test cases

  [ Jose Luis Blanco Claraco ]
  * add expressions for cross() and dot()

  [ Varun Agrawal ]
  * merge double into Values templates
  * add cmake command to run GTSAM python tests

  [ Akshay Krishnan ]
  * removing Sampson error + some tests cleanup
  * increasing calibrate() tolerance
  * small covariance change

  [ akrishnan86 ]
  * formatting changes
  * removing duplicate data file

  [ acxz ]
  * use size_t variable type
  * update timeLago.cpp with newer Sampler interface
  * use size_t variable type
  * update boost::bind usage

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from 0124bcc45..07330d100

  [ Akshay Krishnan ]
  * removing failing test and unused data

  [ akrishnan86 ]
  * updating documentation for factor

  [ acxz ]
  * explicitly use boost::placeholders:_X for compilers that do not respect function scope
  * replace deprecated tbb functionality

  [ Akash Patel ]
  * formatting

  [ acxz ]
  * formatting
  * using using for boost placeholders in tests
  * add comment for purpose of variable
  * formatting

  [ Akshay Krishnan ]
  * updating points name, constexpr
  * changing to macro EssenstialMatrixfactor4
  * all jacobian tests for essential matrix use macro

  [ akrishnan86 ]
  * formatting example

  [ Varun Agrawal ]
  * update the pgp servers to get the LLVM GPG key
  * update key server in other workflow files

  [ Jay Elrod ]
  * Add user-defined copy constructor for Rot2

  [ roderick-koehle ]
  * Forward declaration of PinholeCameraCal3Fisheye
  * Forward declaration for Set of Fisheye Cameras
  * Extend python wrapper to include fisheye models.
  * Forward declaration of fisheye camera.
  * Unit test for equidistant fisheye
  * Extend unit testing of omnidirectional projection

  [ Varun Agrawal ]
  * Added lots of tests for BetweenFactor
  * add Pose3 expmap to wrapper
  * typo fix

  [ roderick-koehle ]
  * Introduce setUpClass, python snake_case variables
  * Use of common setUpClass method
  * Correct tab to spaces to fix formatting
  * Improved accuracy for analytic undistortion

  [ Varun Agrawal ]
  * cleaner variables
  * fix dimension for Pose3 test

  [ Scott ]
  * Fix serialization of ISAM2 class

  [ John Lambert ]
  * Update ShonanAveraging.h
  * add interface in C++, and helper extractRot2Measurements()
  * fix typo
  * add ShonanAveraging2 constructor to wrapper, that accepts BetweenFactorPose2s as input
  * add conversion function for Pose2 -> BinaryMeasurement<Rot2>
  * fix typo on 3x3 matrix def

  [ Scott ]
  * Added ISAM2 serialize test

  [ John Lambert ]
  * use default parameters if none provided, and remove gtsam namespace prefix in .h file
  * check in python unit test for new functionality

  [ roderick-koehle ]
  * Add comment about initial guess in undistortion

  [ John Lambert ]
  * add missing import to python unit test
  * improve docs about compiling without TBB
  * improve wrapper compilation instructions, when TBB not installed
  * set pmin and pmax in unit test

  [ roderick-koehle ]
  * Add ambiguous calibrate/uncalibrate declarations.
  * Missing CameraSet binding specialisations
  * Update ignore list in CMakeFile

  [ Varun Agrawal ]
  * replaced boost with std for placeholders, bind and function
  * update all the tests

  [ John Lambert ]
  * fix typo in block indexing, 3x3 covariance for Pose2 should have just 1x1 block for theta

  [ roderick-koehle ]
  * Testing CameraSet and triangulatePoint3
  * Unittest, triangulation for Cal3Unified

  [ Varun Agrawal ]
  * break interface file into multiple files
  * break up preamble and specializations so there are no duplicate includes
  * update template for wrapper
  * move RedirectCout to base/utilities.h
  * update CMake
  * wrapper updates
  * enable CI builds
  * fixes
  * Squashed 'wrap/' changes from 07330d100..d9ae5ce03

  [ John Lambert ]
  * try increasing pmax to pass test
  * fix typo

  [ Varun Agrawal ]
  * matlab wrapper header update

  [ John Lambert ]
  * use simple example for unit test
  * use mod when comparing angles
  * fix assert on angles
  * update logic in angular error comparison

  [ roderick-koehle ]
  * Shared data for triangulation unit tests
  * Shared setup triangulation unit test
  * Minor fix test_Cal3Unified
  * Minor fix test_Cal3Fisheye
  * Remove commented out line
  * Remove comment
  * Remove spaces in empty line

  [ Varun Agrawal ]
  * update interface files with latest develop
  * remove extraneous file

  [ Akash Patel ]
  * Revert "replace deprecated tbb functionality"

  [ Scott ]
  * Try macOS fix

  [ lcarlone ]
  * added templates for factors
  * setting up .h and tests - compiles and tests pass.
  * put in place initial functions
  * removed cpp
  * now I need to move to testing and interpolation
  * added interpolation function from shteren1
  * removed interp from Pose3, starting to take pass on projection factor and test
  * amended
  * pass on projection factor, but looks great overall
  * everything working out so far with the tests
  * all tests are passing!
  * added nice test on cheirality exception - done with projectionFactorRollingShutter

  [ Akshay Krishnan ]
  * wrapping triangulate nonlinear

  [ John Lambert ]
  * use upper 3x3 sub-block of covariance matrix for converting BetweenFactor to BinaryMeasurement, and use Isotropic in ShonanAveraging2
  * add comments about tangent space and covariance matrix ordering

  [ lcarlone ]
  * started serious testing: all tests pass for now
  * solidified add and equal
  * finding best way to test RS errors
  * yay! error test passes!
  * jacobians are good to go!
  * jacobians and errors are well tested now
  * got to the final monster. Now I need to implement createHessian
  * stuck on compile issue

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from d9ae5ce03..571c23952

  [ lcarlone ]
  * all pass!
  * all pass!
  * moved common function to cameraSet. commented issues with templated calls to functions in cameraSet
  * removed comments. Code is complete now. Need few more unit tests and we are good to go
  * removed printout, solved CI issue

  [ akrishnan86 ]
  * adding gtsam scope

  [ lcarlone ]
  * fixed another test, few more to go
  * fixed test with lmk distance
  * test with EPI fixed
  * working on testing + cosmetic improvements to print for smart factors
  * fixed another test.
  * done with tests, now I only have to rename gamma to keep consistency with the projection factors RS
  * renamed params. need one last test
  * extra cleanup
  * added timing test
  * CHECK -> EXPECT
  * test still in progress; removed a tmp function
  * fixed last test - this is good to go!
  * fixing ci issue

  [ Varun Agrawal ]
  * add Windows export symbols for PinholeCamera
  * first pass at IMUKittiExampleGPS.py
  * speed up boost install
  * improvements to CI files
  * Install boost directly from binary
  * use Boost 1.67.0 for Windows
  * use env variables and fix setting of GITHUB_ENV
  * use more cores for make on unix systems
  * improvements to windows builds
  * Boost 1.72.0 for Windows

  [ Jose Luis Blanco Claraco ]
  * Add missing getter

  [ John Lambert ]
  * start wrapping GNC
  * Remove std prefix in .i fn signatures
  * Remove ‘class’ from template specifications
  * try imports
  * provide template list of typedef
  * test GNC along with other non-linear optimizers in python unit tests
  * remove Dogleg from GNC-supported base-optimizers, and use nested templates
  * add virtual to all classes in the .i file
  * add GTSAM_EXPORT to GncParams.h
  * add GTSAM_EXPORT to GncOptimizer.h
  * clean up test_Pose3SLAMExample.py
  * add type hints, use numpy instead of math module
  * add type hints to visual_data_generator.py
  * clean up plot.py with modern type hints
  * add more missing type hints
  * add missing type hint
  * add missing docstring for an input arg
  * use custom typedefs for GNC + GaussNewton and GNC + LM
  * import GncLMParams, GncLMOptimizer to prevent pybind's automatic long names from name concat
  * add missing gtsam prefix
  * add Optional type annotations where needed

  [ lcarlone ]
  * now using MakeJacobian
  * simplified jacobian computation, improved comments
  * reformatted using google style
  * renamed interp param to alpha, improved comments, added cpp

  [ John Lambert ]
  * Start wrapping the verbosity options for GNC

  [ Varun Agrawal ]
  * modernize NonlinearEquality.h
  * update docs to reflect min Boost version
  * small wrapper updates
  * fix extractPoint2/3 and added C++ tests
  * added Python tests
  * updated docs
  * full slew of tests
  * update wrapper with defaults
  * set lowest common boost version
  * Link to GTSAM-EXPORT doc
  * only format c++ file (no code changes)
  * working implementation

  [ Eric ]
  * Small clarification and md cleanup

  [ John Lambert ]
  * Expand DSF map unit tests
  * improve docstring
  * clean up SFMdata

  [ Varun Agrawal ]
  * format and modernize NonlinearEquality2
  * wrap NonlinearEquality2 + python unit test
  * Update `make python-test` so that it works even if GTSAM is already installed
  * Add section about Boost version requirement
  * add missing import of Pose3

  [ lcarlone ]
  * starting to make templates for smart projection factors uniform (all on cameras)
  * investigating potential templating alternatives
  * don't like it - going to create a different class
  * reverted all changes back to master
  * and created a new factor instead - moving to testing now
  * compiles, testing now
  * fixed bug
  * progress on tests
  * removed line
  * still challenging to parse extrinsics
  * tests finally passing!

  [ Varun Agrawal ]
  * add guards for system Metis
  * CI special case for using system version of 3rd party libraries
  * formatting
  * add appropriate guards for metis

  [ lcarlone ]
  * plot twist: templating new factor on CAMERA
  * added capability to use multiple measurements from the same pose. unfortunately still had to define a non-templated function from cameraSet
  * all tests pass except one on serialization
  * passing tough test - nice!
  * done with all tests

  [ Varun Agrawal ]
  * Basis functions (#403)

  [ Gerry Chen ]
  * python unit test for FitBasis
  * add <pybind/stl.h> and fix constructor argument order
  * docstrings and formatting

  [ Varun Agrawal ]
  * fix python tests and make verbose so they are easy to debug

  [ Frank Dellaert ]
  * Added override
  * Some formatting
  * Got rid of SchurComplementAndRearrangeBlocks_3_12_6
  * Check equals not assert_equal
  * Google-style formatting in new files.
  * Cleaned up interpolate

  [ Varun Agrawal ]
  * verbose python testing

  [ lcarlone ]
  * Merge branch 'develop' into feature/cameraTemplateForAllSmartFactors

  [ Varun Agrawal ]
  * Fix bug in FourierBasis
  * break down tests to make reporting clearer

  [ Frank Dellaert ]
  * Removed types defined in Base class
  * Documented linear factors better.
  * Formatting and better documentation
  * Added two ReadMe files to document the plethora of smart factors.
  * Address review comments, docs only.

  [ John Lambert ]
  * add Pose2.align() to wrapper
  * add Point2Pairs typedef to Point2.h
  * add gtsam::Point2Pairs to CMakeLists.txt
  * add Point2Pairs to specializations
  * move align as function, not as class method
  * start python unit test for align()
  * add python unit test on Pose2.align()
  * fix missing imports
  * import align from gtsam directly
  * directly import only classes from gtsam
  * use boost::optional in .i file directly

  [ Varun Agrawal ]
  * add a cmake flag for easy toggling BetweenFactor jacobian computations
  * add support for boost::optional return type in geometry.i
  * formatting
  * update documentation for boost::optional binding

  [ John Lambert ]
  * use updated wrap syntax for Verbosity enum in .i file

  [ Varun Agrawal ]
  * refactor to remove all pylint errors
  * fix matplotlib deprecation
  * removed duplicate
  * wrap smart flags for various noise models

  [ Frank Dellaert ]
  * Added virtual constructor and re-formatted constructors
  * Switched to borglab hub
  * Updated README
  * Fixed TODOs

  [ Frank dellaert ]
  * Fixed VNC docs for Mac

  [ Varun Agrawal ]
  * clean up and refactoring to use custom preintegration params
  * formatting
  * wrap key printing funcs and remove redundancy
  * wrap more JacobianFactor constructors
  * update template to record correct name of cpp file

  [ Akash Sharma ]
  * Update Find TBB to handle TBB installed with homebrew on OS X Better Error message for TBB handling with versions greater than 2021.1 on OS X

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from 571c23952..add6075e8
  * make TBB finding depend on the GTSAM_WITH_TBB flag
  * Squashed 'wrap/' changes from add6075e8..d6350c214

  [ lcarlone ]
  * renamed smartProjectionFactorP -> smartProjectionRigFactor
  * modernized factor
  * fixed equal
  * fixing tests
  * halfway there
  * working on tests
  * all tests work except serialization
  * added extra test with multi cam

  [ Gerry Chen ]
  * OptionalJacobian fixed constructor with dynamic pointer
  * AdjointMap jacobians for Pose3
  * only compute jacobians when needed
  * AdjointTranspose
  * only compute intermediate jacobians when needed
  * review comment: move check outside lambda

  [ lcarlone ]
  * added more comments here and there
  * changing API for rolling shutter
  * bug fix - finalizing last few tests
  * all tests are passing!
  * done with tests
  * now I only need to fix comments in rolling shutter factor
  * all set here!

  [ John Lambert ]
  * add failing unit test on axisAngle for Rot3 in c++
  * add python unit test for Rot3
  * fix typo
  * fix assert

  [ Varun Agrawal ]
  * run tests for C++ CI

  [ Fan Jiang ]
  * Revert "Revert "replace deprecated tbb functionality""
  * Fixed numerical problems near +-pi
  * Revert "Revert "Revert "replace deprecated tbb functionality"""
  * Cleanup equation

  [ Varun Agrawal ]
  * update proxy functions to use the Adjoint and AdjointTranpose methods
  * add docs explaining why pRw_H_t is the same as Rw_H_R
  * make threshold more lenient

  [ jerredchen ]
  * added new Python examples using iSAM2
  * Added minor comments for documentation

  [ Fan Jiang ]
  * simplify logic of biggest diagonal
  * Fix typo

  [ John Lambert ]
  * Add specific examples to stress-test the log map
  * loosen tolerance on trace(R) == -1

  [ Fan Jiang ]
  * Fix again with better approximation

  [ jerredchen ]
  * adjusted docstrings to match google style guide

  [ Fan Jiang ]
  * Revert "Revert "replace deprecated tbb functionality""

  [ Gerry Chen ]
  * correct jacobians
  * documentation
  * explicitly define simpified jacobian expressions for efficiency
  * stricter tolerances
  * Revert "stricter tolerances"
  * address frank review comments

  [ Varun Agrawal ]
  * use variables to store targets
  * clean up the __init__ file
  * address review comments

  [ yetongumich ]
  * add logmap expression
  * add logmap expression

  [ John Lambert ]
  * add LAGO (for Pose2) to python wrapper

  [ Ivor Wanders ]
  * Fix dangling reference in static allocation.

  [ John Lambert ]
  * add LAGO example to Python
  * use nested namespace in wrapper from Varun's suggestion
  * use nested namespace

  [ Varun Agrawal ]
  * add type annotations
  * fix type annotation
  * use python f-strings

  [ John Lambert ]
  * fix typos in python example file
  * add lago unit test, since lago namespace cannot be imported properly be wrapper

  [ Varun Agrawal ]
  * refactor the example to make it cleaner
  * replace static variable with variable of greater scope in cpp example
  * fix the included_imu_measurement_count scope

  [ Fan Jiang ]
  * TBB revival

  [ John Lambert ]
  * use unittest framework instead of pytest
  * add missing default arg on useOdometricPath

  [ roderick-koehle ]
  * Test of jacobian of Cal3Fisheye for on-axis point
  * Test jacobian of Cal3Unified for on-axis point
  * Avoid division by zero in jacobian calculation

  [ Varun Agrawal ]
  * put all example scripts inside main() functions and apply formatting

  [ John Lambert ]
  * use Point3 instead of artificial vector3
  * use Point3 instead of artificial vector3

  [ Varun Agrawal ]
  * add type annotations
  * add conjoining constructor for VectorValues
  * generate GTSAM_UNSTABLE Cmake exports
  * update cmake function to set default package version number

  [ jerredchen ]
  * made changes according to Frank

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from d6350c214..0ab10c359
  * update CMake
  * Add tests for Lie::interpolate jacobians

  [ Gerry Chen ]
  * much cleaner Adjoint jacobian
  * delete "FIXME" because `compose` unit tests check `AdjointMap`

  [ Varun Agrawal ]
  * address review comments
  * fix small bug
  * specify optional args as Optional type

  [ jerredchen ]
  * removed ground truth; angles set in deg and converted to rad
  * removed ground truth; set ang in deg and convert to rad for Pose3iSAM2

  [ roderick-koehle ]
  * Check numeric stability close to optical axis
  * Numerically stable refactoring of fisheye jacobian
  * Fix missing semicolons
  * Undo change in scaling function
  * Fix type in extression for dyd_dyi
  * Convergence of equidistant scaling utilizing atan2

  [ Varun Agrawal ]
  * address review comments

  [ roderick-koehle ]
  * Fix calling scaling_factor static method.

  [ jerredchen ]
  * formatting by Google style

  [ Varun Agrawal ]
  * address review comments

  [ Gerry Chen ]
  * Address review comments: negative sign and AdjointTranspose section

  [ yetongumich ]
  * enable expression double multiply

  [ Gerry Chen ]
  * add jacobian of second argument to adjoint and adjointTranpsose

  [ Jose Luis Blanco Claraco ]
  * Fix warnings raised by GCC -Wpedactic
  * more consistent notation of macros

  [ Varun Agrawal ]
  * add printErrors method to GaussianFactorGraph

  [ Frank Dellaert ]
  * Use Eigen expressions more effectively and kill & in code.
  * Cleaner Jacobian.

  [ lcarlone ]
  * fixed formatting (plus small fix: std::vector -> fastVector)
  * formatting + const&
  * more const&
  * now throwing exception is params are incorrect
  * added variable in loop
  * point2 -> measurement
  * this will need to be applied in #861
  * disabled timing for test
  * fixed readme
  * serialization is still off
  * final cosmetics
  * added intermediate camera variable for clarity
  * got rid of second constructor
  * further cleanup before moving to sharedPtrs
  * moved rig to use shared ptrs
  * now using shared ptrs

  [ Jose Luis Blanco Claraco ]
  * prefer semicolon in definitions
  * more extra semicolon warnings fixed

  [ Varun Agrawal ]
  * fix warning
  * reduce call stack
  * use safer eigen indexing syntax
  * wrap Colamd function
  * format and refactor the SFM BAL example
  * properly deprecate eliminate functions
  * address reviewer comments
  * add return type definitions
  * fix OrderingType declaration
  * update cmake to copy python tests whenever they are updated

  [ Gerry Chen ]
  * update python wrapper

  [ Varun Agrawal ]
  * properly deprecate additional methods to fully finish deprecation
  * fix VectorValues include

  [ duembgen ]
  * Add namespace to ambiguous placeholders

  [ Frank Dellaert ]
  * Formatting with Google style
  * Formatted sudokus better

  [ Varun Agrawal ]
  * wrap KeyVector methods

  [ Fan Jiang ]
  * Add deprecations
  * Fix windows build

  [ beetleskin ]
  * Use FastDefaultAllocator for Values to adhere allocation compile flags

  [ Fan Jiang ]
  * Remove Exports

  [ roderick-koehle ]
  * Removed comments

  [ Varun Agrawal ]
  * wrap additional ISAM2 methods
  * comment out method
  * make noise model default constructors available for serialization
  * enable pickling for a bunch of objects
  * comment out incomplete code
  * remove commented out code
  * fix all axpy deprecations
  * update the packaged Eigen to 3.3.9
  * Revert "update the packaged Eigen to 3.3.9"
  * add workaround for Eigen serialization issue
  * Add Eigen/Core header
  * make LinearContainerFactor public for serialization
  * wrap other ISAM2 methods
  * wrap alternate ISAM2::update method

  [ Brice Rebsamen ]
  * .gitignore: swp files
  * don't return a const
  * missing shared_ptr include
  * ParseMeasurement<Pose2> initializer list needs an extra argument

  [ Fan Jiang ]
  * Bump version to 4.1.1

 -- Bernd Pfrommer <bernd.pfrommer@gmail.com>  Fri, 13 Jan 2023 18:59:09 -0500

gtsam (4.1.1-1ubuntu5) focal; urgency=medium

  [ Frank Dellaert ]
  * Added a number of docker images

  [ Ellon Paiva Mendes ]
  * Bump version to 4.0.2
  * Install GTSAMConfigVersion.cmake

  [ Jose Luis Blanco-Claraco ]
  * Remove obsolete cmake FindXX modules.

  [ Michael Bosse ]
  * Make variable names consistent with math

  [ Fan Jiang ]
  * Add pybind11

  [ Thomas Jespersen ]
  * Added ported C++ version of ISAM2 Kitti example

  [ kvmanohar22 ]
  * adding functionality to use ISAM2 for imu preintegration example

  [ yetongumich ]
  * remove distance in noisemodel, replace with error
  * add test on robust loss functions to behave like quadratic
  * Revert "add implementation for deprecated Mahalanobis"
  * merge with mahalanobis renaming
  * re-add implemntation for deprecated Mahalanobis
  * renamed mahalanobisDistance
  * add document for robust noise model
  * noise in robust should be gaussian, change variable names
  * revised comments
  * change test cases to use the updated names, remove 2nd Create in robust
  * modified document, remove commented function, add deprecated distance
  * check if noisemodel is gaussian, if not throw exception
  * change unweightedwhiten back
  * rename residual to loss
  * modified document

  [ Varun Agrawal ]
  * typo fix

  [ Frank dellaert ]
  * Inlined derivatives and fixed one issue with Jacobians around image center
  * Re-ordered  and cleaned up tests, added derivative tests for image center

  [ Frank Dellaert ]
  * Setup and simulateMeasurements
  * Built TranslationFactor class and partially completed TranslationRecovery class
  * Added initalizeRandomly
  * Running optimization
  * Moved TranslationFactor prototype into sfm directory
  * unit test, incl Jacobians
  * Optimization works!
  * copyright 2020
  * Move to its own compilation unit

  [ Binit Shah ]
  * Include corrupting noise param to parse3DFactors

  [ Jose Luis Blanco-Claraco ]
  * more precise use of setZero() and add comments

  [ Binit Shah ]
  * Sampler initialized with noise argument
  * Using optional sampler outside loop

  [ Varun Agrawal ]
  * Added FunctorizedFactor and corresponding tests
  * fixes, better tests, docs
  * remove TODO
  * improved documentation

  [ Martin Vonheim Larsen ]
  * Added test for Unit3::operator=
  * Properly handle basis in Unit3::operator=

  [ Varun Agrawal ]
  * removed dependency on Eigen3 since we provide Eigen 3.3.7 and Ubuntu Bionic provides Eigen 3.3.4.

  [ Martin V. Larsen ]
  * Update testUnit3.cpp

  [ Varun Agrawal ]
  * improve and modernize the Dockerfiles
  * small logistical fixes

  [ Gerry Chen ]
  * put file stream inside scope to force buffer flush This was already fixed for serializeXML but not for serializeToXMLFile or deserializeFromXMLFile.
  * bypass assert_equal tests for file roundtrips
  * better comments on serializationTestHelper functions

  [ Jose Luis Blanco-Claraco ]
  * unhide doc section in PDF

  [ Varun Agrawal ]
  * remove extra semicolon

  [ David ]
  * Add unit test for oriented plane 3 factor jacobian

  [ Frank dellaert ]
  * Fixed override warnings and added a few missing headers

  [ Varun Agrawal ]
  * renamed testScenarios to testScenarioRunner
  * fix deprecation warnings from Matplotlib
  * reduce for loops, add titles to plots, better space subplots for IMU data
  * vastly improved the basic ImuFactorExample script
  * move Eigen format definition to Matrix.h
  * use Eigen formatting for Rot3 ostream
  * updated filename in brief
  * don't align matrix columns
  * fix print tests for Rot3 and Pose3
  * set CMAKE_VERBOSE_MAKEFILE flag to OFF
  * Cleaned up printing of Rot3
  * Cleaned up printing of Pose3
  * Cleaned up printing of NavState

  [ Jose Luis Blanco-Claraco ]
  * Finish undo of #310 fill with zeros (not actually needed)

  [ Varun Agrawal ]
  * moved matlab-style matrix format definition back to cpp, updated all formatters
  * use static_cast for Rot3 matrix

  [ David ]
  * Add Pose3-Point3 factor
  * Update incorrect test name
  * Add more documentation and clang-format

  [ Frank Dellaert ]
  * Importing Frobenius error factors from Shonan effort

  [ Fan Jiang ]
  * Fix UAF

  [ David ]
  * Fix OrientedPlane3Factor jacobian using numericalDerivative

  [ Fan Jiang ]
  * Fixed all alignment problems
  * Add missing include
  * Fix wrap tests
  * Address Frank's comments
  * Move away from boost

  [ Varun Agrawal ]
  * export cython install path so it can be picked up by other cmake projects
  * cmake function to install python package once make install is completed

  [ Gerry Chen ]
  * use boost paths append to have platform agnostic path separators

  [ Varun Agrawal ]
  * add new make command for installing python wrapper

  [ Gerry Chen ]
  * Separate stream creation and serialization Recommended by @ProfFan in #343 with the objective of making (de)serialize to string and to file more similar
  * formatting to Google style

  [ Varun Agrawal ]
  * added comments and removed unnecessary code

  [ Gerry Chen ]
  * fixed unit test failure on `testSerializationBase` object `output` was getting reused, but should be re-loaded into a "blank" object each time.

  [ David ]
  * Address Frank's comments and clean up changes

  [ Gerry Chen ]
  * reset filesystem - forgot to uncomment these after debugging

  [ akrishnan86 ]
  * optional initialization for LMParams

  [ Varun Agrawal ]
  * Set minimum supported numpy version to 1.11.0 (#366)

  [ Fan Jiang ]
  * Revise comments

  [ David ]
  * Update style and switch to errorVector()

  [ Gerry Chen ]
  * remove file roundtrip test for pointers

  [ Varun Agrawal ]
  * updated comments in shell script
  * added Windows batch script to install python wrapped package

  [ Fan Jiang ]
  * Style fixes as commented by @dellaert

  [ Gerry Chen ]
  * serialization docstrings
  * rename serialization functions with less ambiguous names According to Varun's suggestion. Note: string functions should be automatically inlined by compiler to avoid passing big strings.

  [ Varun Agrawal ]
  * pure CMake script to install Python wrapper after compiling
  * removed extra line
  * reset to previous version

  [ Fan Jiang ]
  * Add comments
  * Switch to the new alignment marker type

  [ Varun Agrawal ]
  * Load Cython requirements file instead of reading it in cmake
  * Added cmake variable GTSAM_CYTHON_INSTALL_FULLPATH to include build tag directly
  * Vastly improved setup.py template
  * Specify working directory from where to call setup.py
  * print Eigen Unsupported status message correctly
  * wrap the biasHat function for PreintegratedMeasurement
  * added .gitignore for when building the sample cmake projects

  [ Fan Jiang ]
  * Add missing lf

  [ akrishnan86 ]
  * fix SfmData naming

  [ Varun Agrawal ]
  * Revert "added .gitignore for when building the sample cmake projects"

  [ akrishnan86 ]
  * review1 changes

  [ Varun Agrawal ]
  * improved result printing and use of flags for ImuFactorExample.py
  * renamed ImuFactorExample2 to ImuFactorISAM2Example
  * added function to plot trajectory incrementally
  * improvements to ImuFactorExample
  * updated file docstring for ImuFactorExample2.cpp
  * make python-install command depends on gtsam target
  * cleaner version of execution script which only needs 'make install'
  * run setup.py after installing the gtsam_eigency module
  * capture stdout in python test [only for python3]
  * newline added to end of CMake file
  * Set high level Cython/Eigency variables to reduce duplication
  * Create and use cython build directory
  * Use the high level cython variables, improve install process
  * Remove redundant postfix checking since the postfix is already added at the top level
  * updated cython wrapper README
  * In-place cython build
  * fixed CYTHON_INSTALL_PATH cmake variable wrt cache
  * Python Wrapper CMake update
  * removed unneeded install commands and updated README
  * Add python-install dependency for gtsam_unstable as well
  * make utils and test code python2 compliant
  * small improvements to the ImuFactorExample.py

  [ akrishnan86 ]
  * forking code for mfas from 1dsfm

  [ Varun Agrawal ]
  * update python build location in travis script

  [ Fan Jiang ]
  * Fix memory leak in Expressions
  * Fix TranslationFactor with Vector3 as Point3
  * Fix MSVC build

  [ Varun Agrawal ]
  * Improved paths and added checks

  [ akrishnan86 ]
  * changing mfas to use gtsam keys

  [ Jose Luis Blanco-Claraco ]
  * Fix missing DLL exported symbol

  [ Varun Agrawal ]
  * new definition for FunctorizedFactor to allow for using std::function and lambdas
  * Simplified FunctorizedFactor

  [ Fan Jiang ]
  * Fix FrobeniusWormholeFactor Python test

  [ Varun Agrawal ]
  * fix working directory for python install target
  * test SmartFactor when body_P_sensor is passed in

  [ Thomas Jespersen ]
  * ISAM2 Kitti example: Addressed review comments

  [ akrishnan86 ]
  * adding tests

  [ Mike Sheffler ]
  * Second attempt at a wrapper fix.

  [ Varun Agrawal ]
  * Abstracted out serialization code for PreintegrationBase

  [ Mike Sheffler ]
  * Unnecessary include statement

  [ Varun Agrawal ]
  * Updated  PreintegratedImuMeasurements docstring

  [ Fan Jiang ]
  * Fix lambda check in logging optimizer

  [ Varun Agrawal ]
  * Replace scoped name with direct name and instantiate base class in constructor
  * Major updates to CombinedImuFactor to make it Testable as well as serializable
  * Fix typo
  * Added and updated serialization tests to include all IMU factors
  * revert variable change

  [ akrishnan86 ]
  * tests and documentation
  * formatting headers and removing debugging code

  [ Varun Agrawal ]
  * reduced tolerance for checking jacobian

  [ Fan Jiang ]
  * add return value in gtsam_optimize

  [ Frank dellaert ]
  * Eliminated some copy/paste
  * Added g2o test files
  * Added tests on determinants of read rotations
  * Normalized quaternions before converting to Rot3 to account for limited precision in text files.
  * Avoided extra conversions to quaternions

  [ Varun Agrawal ]
  * Add indentation
  * Handle extrinsics and intrinsics for jacobian

  [ Frank dellaert ]
  * Formatted and fixed discrete examples

  [ Varun Agrawal ]
  * Use built in Matrix serialization
  * Generic Eigen::Matrix serialization for boost
  * add compiler flags to suppress warnings if built in release mode
  * Add MATLAB root and Mex paths to cmake output, align GTSAM specific output
  * Quote variable so it works on Windows
  * Use static matrix and constexpr
  * use boost serialization macro instead of make_array

  [ Fan Jiang ]
  * Added wrapping for the PCG solver in Cython
  * add comments

  [ Varun Agrawal ]
  * suppress warnings only for 3rd party code for Release builds
  * fix init issues with Vector3, use static matrices where possible
  * added note about code source and eigen resize for both static and dynamic matrices
  * Explicit type definition to handle warning
  * support for landmarks in g2o files

  [ Fan Jiang ]
  * Add check to ensure we are calling lambda on a LM

  [ Varun Agrawal ]
  * correct compiler flag for Windows

  [ Fan Jiang ]
  * Add unit test
  * use isinstance

  [ Varun Agrawal ]
  * added cmake policy for AppleClang compiler identification

  [ Fan Jiang ]
  * Move the declaration to cpp

  [ Varun Agrawal ]
  * Better way of exporting Boost serialization guid

  [ Frank dellaert ]
  * Resurrecting DiscreteBayesTree tests

  [ yetongumich ]
  * modified test

  [ Frank dellaert ]
  * Checked in pdf for easy reference
  * added printSignature and evaluate
  * Fixed link issue
  * Cleaned up formatting
  * Fixed tests

  [ Varun Agrawal ]
  * perform equality comparison on root of class hierarchy
  * correct vector init
  * delete extra pdf file
  * Revert "delete extra pdf file"

  [ yetongumich ]
  * deprecate error in noisemodel, use loss instead; revise virtual with override
  * deprecate error in noisemodel, use loss instead; revise virtual with override

  [ Frank dellaert ]
  * Extra tests on frontal keys
  * Some more refactoring of marginals
  * Fix confusion between parents and frontals
  * Added code to re-jigger Signature cpt so that frontal keys are always first, consistent with how the DiscreteElimination function works.
  * New discrete example
  * Better print
  * Cleaned up tests
  * Use dict notation in print
  * Add explicit HMM example
  * Modernized sample function

  [ yetongumich ]
  * modify testNoiseModel to use loss instead of error
  * change doc

  [ Varun Agrawal ]
  * fix serialization warning for boost::optional<Vector3>

  [ Frank dellaert ]
  * Partial Specialization
  * Add BayesNet-inst.h at end of BayesNet.h

  [ Varun Agrawal ]
  * correct indentation for Python version

  [ Mike Sheffler ]
  * Missing BOOST_SERIALIZATION_NVP wrapper macro for an argument to be serialized

  [ Jose Luis Blanco Claraco ]
  * docker tag and pip3 fixes; add a readme
  * complete README

  [ David ]
  * Fix all unit tests. Only remaining item is the analytical Jacobian for Unit3::localCoordinates.

  [ acxz ]
  * set default initialization

  [ akrishnan86 ]
  * changing MFAS to oops and refactoring
  * minor comments change

  [ Frank dellaert ]
  * Fixed conventions for Jacobians
  * Unit test for transformPoseFrom
  * Some more name changes and documentation

  [ Varun Agrawal ]
  * Added more comments for clearer understanding

  [ Fan Jiang ]
  * Bump version and switch Pose3 expmap default

  [ Varun Agrawal ]
  * nicer formatting when printing values

  [ Fan Jiang ]
  * Fix test for full Pose3 expmap
  * Remove pybind11

  [ Frank dellaert ]
  * Replaced flag with 4.1 version
  * Removed all deprecated code w Stephanie...

  [ akrishnan86 ]
  * constructor API change after review1

  [ acxz ]
  * replace boost random with std random

  [ Varun Agrawal ]
  * add axis labels to the trajectory plot

  [ acxz ]
  * use reasonable distribution names
  * use reasonable distribution name
  * remove unused base variable

  [ Varun Agrawal ]
  * fix test for FunctorizedFactor printing
  * Fix minor bugs
  * test for readG2o
  * added axis labels and figure titles as optional params
  * increase number of build cores and remove sudo requirement
  * added backwards compatibility for parseVertex

  [ Frank dellaert ]
  * Improved comment
  * Made params const

  [ acxz ]
  * pass in expected Rot3 and parameter p

  [ Jose Luis Blanco Claraco ]
  * recover SLAM serialization test

  [ akrishnan86 ]
  * changes after review - removing positiveEdgeWeights

  [ Jose Luis Blanco Claraco ]
  * Add docs on serializing expressions.
  * enable compiler warnings and errors for safer code
  * Fix all new gcc warnings/errors: make explicit virtual/override methods.
  * Avoid -Woverride in clang <12.0.0
  * relax override -Werror for now
  * Fix missing virtual dtors
  * Fix warnings on incorrect for range reference bindings
  * remove leftover cmake debug trace

  [ acxz ]
  * fix warnings on incorrect for range reference bindings
  * remove useless Planning test
  * fix return copy

  [ Fan Jiang ]
  * Copy cython files
  * Add unstable files
  * Replace with new python tests
  * Sync ImuFactorExample
  * Sync ImuFactorExample2
  * Fix Pose2 plot
  * Update to match cython
  * Update more to match cython

  [ Varun Agrawal ]
  * update ImuFactorExample.py
  * fix warnings from subplots and improve code
  * add incremental plotting function
  * update ImuFactorExample2.py
  * rename ImuFactorExample2 to more descriptive name

  [ acxz ]
  * add override keyword

  [ Varun Agrawal ]
  * replaced SimpleCamera with PinholeCamera and updated tests
  * sort imports in python examples

  [ acxz ]
  * workaround to dereferencing a nullptr

  [ Jose Luis Blanco Claraco ]
  * Add genericValue() helper
  * Values initializer_list constructor

  [ Varun Agrawal ]
  * use \n instead of endl

  [ Jose Luis Blanco-Claraco ]
  * docs and missing traits
  * Add variadic-template N-ary ExpressionFactor
  * typo

  [ Jose Luis Blanco Claraco ]
  * Deprecate ExpressionFactor2
  * port ExpressionFactor{2->N}

  [ Jose Luis Blanco-Claraco ]
  * Add unit test revealing deserialization error
  * Fix serialization bug in RangeFactor

  [ Fan Jiang ]
  * Fix import typo
  * Change to new KeyVector accessor

  [ Jose Luis Blanco Claraco ]
  * Deprecate ExpressionFactor2 for 4.1
  * Recover the convenient evaluateError() method
  * fix evaluateError() methods

  [ Varun Agrawal ]
  * fixed tests

  [ acxz ]
  * remove empty smart folder
  * remove smart from cmake

  [ Varun Agrawal ]
  * fix indentation of macro guard

  [ Fan Jiang ]
  * Sync with varun's pr

  [ akrishnan86 ]
  * add binary measurement class

  [ Varun Agrawal ]
  * wrap preintegrated function

  [ Fan Jiang ]
  * Moved python files
  * import from is working
  * Sync with new_wrapper develop branch
  * remove function import
  * Import classes used more than once
  * Newline

  [ Stephanie McCormick ]
  * change from const Params back to non-const Params

  [ Varun Agrawal ]
  * remove virtual

  [ Frank Dellaert ]
  * Allow graph to be queried
  * VectorizedGenerators
  * Removed superfluous size, added doxygen partitions
  * Allow to pass in pre-computed generators. Should save some energy.
  * Update README.md

  [ Varun Agrawal ]
  * fix warning in FrobeniusWormholeFactor

  [ akrishnan86 ]
  * changes with passing unit tests

  [ mawallace ]
  * Remove set_zlabel from plot_pose2

  [ akrishnan86 ]
  * binary measurement wrap

  [ ss ]
  * Fix pose2 align bug.

  [ Sam Bateman ]
  * added mutex to BayesTreeCliqueBase for access to cached variable and added copy/copy assignment constructors to allow for full previous functionality while adding thread safety to marginalCovariance.
  * update spelling/indent

  [ Varun Agrawal ]
  * Revert "fix warning in FrobeniusWormholeFactor"
  * fix warning in FrobeniusWormholeFactor
  * function for consistent width printing of CMake flags

  [ akrishnan86 ]
  * sfm changes to docs, format, wrapper

  [ ss ]
  * Finish Sim3 align and transformFrom functions.

  [ akrishnan86 ]
  * update binary measurement brief

  [ ss ]
  * Fix document.
  * Improve code quality.
  * Update doc.

  [ Frank Dellaert ]
  * Added Spectra 0.9.0 to 3rdparty

  [ Varun Agrawal ]
  * example using CombinedImuFactor
  * renamed ImuFactorExample2 to be more consistent with naming
  * revert author change
  * reworked basic ImuFactorsExample
  * use boost program_options for command line parsing

  [ alexma3312 ]
  * Change typedef into using.

  [ Varun Agrawal ]
  * default string value for printing Imu factors
  * fix FrobeniusBetweenFactor declaration
  * comment out timing-out CI stage

  [ Frank Dellaert ]
  * Templated some methods internally
  * Very generic parseToVector
  * refactored load2d
  * Templated parse methods
  * Turn off gcc build as it times out every time
  * Avoid clang warnings about double-brace initialization
  * Hunted down deprecated use of parse3DLandmarks

  [ Fan Jiang ]
  * Backport GitHub Actions CI (#259)
  * Remove travis and appveyor
  * Limit python triggering
  * Remove pybind build
  * Correct .travis.sh
  * switch to boost 1.69.0
  * typo
  * Add a display for current boost version
  * Manually specify BOOST_ROOT

  [ Frank Dellaert ]
  * Some behavior changes.

  [ Fan Jiang ]
  * typo
  * Ignore system boost
  * Fix wrong include path
  * Do not search for the cmake boost file
  * Real reason why cannot find boost

  [ Varun Agrawal ]
  * renamed from build-cython to build-python
  * remove travis.python.sh and instead add script in .github folder
  * updates to python CI yml file
  * moved CI script for unix based systems
  * updates to macOS and Linux CIs
  * fix script name
  * fix cython path

  [ Frank Dellaert ]
  * Fixed covariance bug

  [ Varun Agrawal ]
  * fix build script
  * set LD_LIBRARY_PATH
  * test LD_LIBRARY_PATH
  * correctly add LD_LIBRARY_PATH boost lib directory
  * remove unnecessary prints
  * add description for CI scripts

  [ alexma3312 ]
  * Fix GTSAM_TYPEDEF_POINTS_TO_VECTORS.

  [ Frank Dellaert ]
  * Addressed review comments

  [ Fan Jiang ]
  * Always build unstable
  * Add Python to the name of CI

  [ Frank Dellaert ]
  * Feature/shonan averaging (#473)

  [ Varun Agrawal ]
  * replace atof/atoi with standardized stof/stoi

  [ Fan Jiang ]
  * Ported MATLAB Examples
  * Python supplementary files
  * Remove old wrap
  * Squashed 'wrap/' content from commit 21ee82f75
  * Initial migration
  * Fixes the specialization order
  * Squashed 'wrap/' changes from 21ee82f75..49d831588

  [ alexma3312 ]
  * Correct variable names and refactor code.

  [ Fan Jiang ]
  * Fix some unstable MATLAB examples
  * Small fixes
  * Change build target
  * No submodules

  [ Jose Luis Blanco-Claraco ]
  * Include 3rdparty libraries as 'system' headers to avoid warnings

  [ Fan Jiang ]
  * Remove offending include
  * Remove python folder temporarily
  * Renamed cython to python
  * Remove eigency
  * Migrated all examples and tests
  * Add supplimentary files used by the new pybind11 wrapper
  * update readme
  * Disable unstable MATLAB by default
  * Add documentation to the templates
  * Document tricks to allow direct import from xxx
  * Add docs for preamble and specialization.h
  * Reformat CMake files
  * Add MATLAB root prompt
  * Fix CI Script for Pybind11

  [ Varun Agrawal ]
  * Improve Github Actions (#476)

  [ Fan Jiang ]
  * Add dependency for python-install

  [ Frank Dellaert ]
  * Fix override warning
  * Recreated initializeRandomlyAt
  * Added Shonan Averaging unit tests

  [ Frank dellaert ]
  * Fixed example printing

  [ Varun Agrawal ]
  * CI for special cases
  * reduce special cases to only Ubuntu+GCC, disable Python CI for Ubuntu GCC9
  * updated step name
  * comment out python ubuntu-gcc-9 completely

  [ Claudius Tewari ]
  * Fix "Wrapper" heading anchor link in README.

  [ Frank dellaert ]
  * Added g2o to search
  * Transpose translation when printing
  * Moved common code to InitializePose

  [ alexma3312 ]
  * Change sim3 variable from T to S.

  [ Frank dellaert ]
  * Shonan C++ CLI
  * Python CLI

  [ Fan Jiang ]
  * Add script to update the wrap subtree

  [ alexma3312 ]
  * Modify the print function print out format.

  [ Frank dellaert ]
  * Fixed test

  [ Fan Jiang ]
  * Fix Python wrapper with TBB on
  * Add missing newline

  [ Frank dellaert ]
  * Fixed Point2 and Point3 to have similar behavior as in C++ - to also take vectors - to be initialized to Nan
  * Added more support for Pose2 data
  * Now plots 2D or 3D trajectories (on a 3D plot)
  * Made 2D and 3D translation recovery work, and added plot
  * Remove distinction between Typedef and Point3.

  [ Fan Jiang ]
  * Remove GTSAM_DEFINE_POINTS_TO_VECTORS
  * Cleanup preamble and specialization
  * Add TBB test for Python and GTSAM C++
  * Fix special builds
  * Add TBB Python CI to matrix

  [ Frank dellaert ]
  * Address review comments
  * Fixed compilation and removed absolute path.

  [ Fan Jiang ]
  * Fix TBB env not propagated
  * Fix preamble.h

  [ alexma3312 ]
  * Replace rotAveraging with gtsam::FindKarcherMean.
  * Add Compatibility unittest.
  * reformat pose3 declaration.
  * create a helper function to remove repeat code.
  * Add a comment for transformFrom pose.

  [ Fan Jiang ]
  * Bump version to 4.1.0

  [ alexma3312 ]
  * Modify comments and move header file declaration.

  [ jingwuOUO ]
  * Replace MakeATangentVector with MakeATangentVectorValues

  [ Fan Jiang ]
  * Make sure our readme is proper restructuredText

  [ alexma3312 ]
  * Add mean function into Point3 class.
  * Create AlignGivenR function and refactor code.
  * Change CMakelist file to fix merge conflict.

  [ Fan Jiang ]
  * Remove unnecessary comment
  * Proper method to deal with markdown in setup.py

  [ Frank dellaert ]
  * Linting and getAnchor wrap

  [ jingwuOUO ]
  * Fixed checkwitheigen testcase failure

  [ Frank dellaert ]
  * added missing namespace

  [ jingwuOUO ]
  * Rename and small fix.
  * Changed TangentVectorValues test

  [ akrishnan86 ]
  * wrapping translation recovery doesnt build

  [ Christian Berg ]
  * Added Jacobians for Rot3::RzRyRx and related named constructors

  [ akrishnan86 ]
  * TAvg wrapper builds

  [ Varun Agrawal ]
  * Define dataset directory for Python package
  * Add python dataset directory to search options
  * Add data files to python package
  * Better location for setting Python dataset directory in CMake

  [ Christian Berg ]
  * Also add jacobians to Rot3::RzRyRx for when quaternions are selected

  [ Varun Agrawal ]
  * Print Vectors horizontally for easier reading
  * Undo previous changes for common directory
  * don't wrap findExampleDataFile
  * Add python version of findExampleDataFile
  * Undo Point operator overloading and instead update NavState print
  * check for null pointer in general

  [ Timothy Setterfield ]
  * fixed issue that pos and vel are in nav frame
  * added another coriolis unit test
  * added cached rotation bRn
  * cleaned up notation
  * fixed typo

  [ Varun Agrawal ]
  * new function readBal which returns the SfmData object, allowing for single line calling
  * follow Google Style for function naming
  * Wrapper updates

  [ JIanzhu Huai ]
  * correct coefficients of approximated SE3 Q_r

  [ Varun Agrawal ]
  * update minimum Boost version required

  [ JIanzhu Huai ]
  * test computeQforExpmapDerivative

  [ Fan Jiang ]
  * Wrap DSFMap so SFM can use them
  * Add the unit test for DSF in Python
  * Fix include issue

  [ akrishnan86 ]
  * translation recovery py test

  [ Akshay Krishnan ]
  * translation recovery unit tests pass
  * remove binarymeasurementsunit3 class in wrapper

  [ alexma3312 ]
  * remove commented out code
  * document and use std::tie
  * Refactor mean and mean_pair test case.

  [ akrishnan86 ]
  * adding binarymeasurementsunit3

  [ Frank dellaert ]
  * Fix typo

  [ Varun Agrawal ]
  * ISAM2 helper methods and wrapper to evaluate nonlinear error

  [ Christian Berg ]
  * Added Jacobians for Rot3::xyz and related conversions to euler angles

  [ akrishnan86 ]
  * code changes to increase modularity
  * fixes1
  * fixes2

  [ Akshay Krishnan ]
  * fixes3

  [ alexma3312 ]
  * Fix double computation.

  [ Christian Berg ]
  * Throw exception in Rot3::RQ for derivatives close to singularity

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from 49d831588..314b121fd
  * Use cmake to identify best Python version if Default requested
  * Make SharedNoiseModel as optional parameter, remove hardcoded verbosity, and silence test.
  * print version of TBB found
  * Don't print private compile options
  * fix wrapper TODOs for ISAM2 and BearingRange
  * minor formatting

  [ akrishnan86 ]
  * wrap MFAS

  [ Akshay Krishnan ]
  * changing to boost shared_ptr

  [ Ayush Baid ]
  * Adding logmap API which applied a logarithmic map taking the object to the argument
  * Removing logmap in case of failure

  [ alexma3312 ]
  * Refactor Align with short functions.

  [ Akshay Krishnan ]
  * remove unusede ptr member in MFAS
  * translation averaging example

  [ John Lambert ]
  * Update README.md
  * improve python wrapper cmake flag instructions
  * Update README.md
  * Update README.md
  * Update README.md
  * use cleaner checkmark symbol in readme
  * update example list
  * update python examples list
  * add p
  * add python equivalent of c++ sfm data calls
  * cannot retrieve p attribute

  [ akrishnan86 ]
  * adding documentation for example

  [ Varun Agrawal ]
  * update numericalDerivative functions to take in optional dimension template parameter and added corresponding tests

  [ John Lambert ]
  * remove BAL for now, and add get3dPoint() for p access
  * mark SFMExample_bal as still in progress

  [ Varun Agrawal ]
  * remove logmap function from LieVector and LieMatrix
  * added calibrate with jacobians for Cal3Bundler

  [ John Lambert ]
  * rename get3dPoint() to point3()

  [ Varun Agrawal ]
  * combine the calibrate functions into one
  * put the jacobians at the end so that the calibrate function can be wrapped
  * make tolerance as a constructor param
  * update calibrate in wrapper

  [ lcarlone ]
  * adding robust cost function - version 1
  * robust noise in place - test fails due to non-isotropic covariance?
  * solving issue with robust model

  [ Varun Agrawal ]
  * small fixes to ensure marginals are computed correctly

  [ lcarlone ]
  * attempting robustification in Frobenius factor

  [ Varun Agrawal ]
  * update wrapper to also work for Matlab

  [ lcarlone ]
  * added nice unit test
  * improved test

  [ akrishnan86 ]
  * naming and other changes - review1

  [ JIanzhu Huai ]
  * test Qr with old codebase fails
  * correct Qr coefficients in approximation

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from 314b121fd..5e1373486

  [ alexma3312 ]
  * Move private func to .cpp.
  * Change getXY to calculateScale.
  * Emphasize Rdb is a vector.
  * Change input into centroids.
  * Refactor code to increase speed.

  [ Varun Agrawal ]
  * wrapped BearingRange::Measure method and removed deprecated classes

  [ lcarlone ]
  * added check and unit test

  [ Varun Agrawal ]
  * remove all LieScalar/LieVector/LieMatrix references from wrapper
  * MATLAB readme update
  * remove Point3 serialization test since Point3 is now just a vector

  [ lcarlone ]
  * added control over minimum rank in ShonanAveraging example, and resolved hard-coded sigma in FrobeniusFactor

  [ alexma3312 ]
  * Fix quaternions test failure.

  [ akrishnan86 ]
  * updating defaultdict init

  [ alexma3312 ]
  * Throw an exception when n=0 .

  [ Varun Agrawal ]
  * use implicit function theorem to compute jacobians of Cal3Bundler::calibrate
  * added test for Cal3Bundler::calibrate Jacobians1
  * make Cal3Bundler wrapper constructor backwards compatible
  * fixed sized matrices and minor improvements

  [ alexma3312 ]
  * Modify error message to be more descriptive.

  [ Varun Agrawal ]
  * compute inverse only once
  * wrap PinholeCameraCal3Bundler

  [ Frank Dellaert ]
  * Small formatting changes and removal of test header
  * New method "add" as in GaussianFactorGraph
  * Re-formatting and using "add"/"auto" where we can.
  * Fixed spelling mistake

  [ lcarlone ]
  * reverted changes to cproject and language settings
  * fixed typo
  * reverted changes to cproject

  [ akrishnan86 ]
  * renaming variables

  [ Frank Dellaert ]
  * Changed name to avoid template confusion in VC 2016
  * Clean up code and tests and use "means"

  [ Varun Agrawal ]
  * remove all Cython references

  [ Frank Dellaert ]
  * Update Point3.h

  [ John Lambert ]
  * add

  [ akrishnan86 ]
  * outlier rejection in separate fn and other readability changes
  * readability changes
  * fixing one variable that was not renamed

  [ Varun Agrawal ]
  * find python if using Default

  [ Frank Dellaert ]
  * Fixed include error

  [ Varun Agrawal ]
  * check if mex compiler exists for Matlab wrapper, formatting

  [ akrishnan86 ]
  * removing shared ptr, iostream, renaming

  [ Varun Agrawal ]
  * added normalize function to orthogonalize the rotation after composition
  * normalized needs to be called explicitly

  [ John Lambert ]
  * add WIP PR

  [ Varun Agrawal ]
  * Moved normalize next to ClosestTo and add more docs

  [ Jose Luis Blanco Claraco ]
  * refactor cmake scripts into smaller files
  * Remove obsolete comments
  * Use system eigen3 only if first quietly found.

  [ Fan Jiang ]
  * Squashed 'wrap/' changes from 5e1373486..2192b194e
  * Resurrect serialization tests
  * Add unit test for python serdes
  * Squashed 'wrap/' changes from 2192b194e..dfa624e77

  [ Jose Luis Blanco Claraco ]
  * Use camel case for cmake files
  * Revert use system Eigen if found

  [ Akshay Krishnan ]
  * Wrapping SfmCamera to be used with GeneralSFMFactor

  [ John Lambert ]
  * remove breakpoints

  [ Akshay Krishnan ]
  * Renaming SFMCamera to PinholeCameraCal3Bundler

  [ Fan Jiang ]
  * Fix LLVM repo keys

  [ jingwuOUO ]
  * Add acc power method in Alg6
  * Completed and tested power method with unittest
  * Added PowerMinimumEigenValue method and unittest.
  * feat: Add  Best Heavy Ball alg  to set beta
  * Refactor power and accelerated method

  [ Sushmita ]
  * python wrapper for sfmdata

  [ Fan Jiang ]
  * Add comments

  [ Frank dellaert ]
  * Fix warning on clang
  * Fixed some warnings
  * Printing now transpose
  * Simplified evaluateError
  * Use keyFormatter
  * Added unit test for issue 561

  [ jingwuOUO ]
  * Reformat code.
  * Small fix

  [ John Lambert ]
  * use argparse defaults
  * make a note about how the eror drops

  [ Fan Jiang ]
  * Add comments
  * Add comments

  [ John Lambert ]
  * fix typo

  [ Fan Jiang ]
  * Fix inteminent sks keyserver failure
  * Add notes

  [ John Lambert ]
  * clean up comments

  [ Sushmita ]
  * unittested features in SfmData
  * python wrapped SfmData and SfmTrack
  * python wrapper sfmtrack reflected in other files

  [ Jose Luis Blanco-Claraco ]
  * Use METIS system library if so selected

  [ John Lambert ]
  * renamed myData to scene_data, and explained BAL parameterization
  * update list of C++ examples that have been ported to Python

  [ Sushmita ]
  * changed Measurements to measurements
  * wrapped sfmtrack
  * removed measurements from sfmdata

  [ jingwuOUO ]
  * Revise according to Frank and David's comments
  * Correct unittest input error
  * Added more detailed documentation
  * Fixed not solve errors and detailed documentation

  [ Jose Luis Blanco-Claraco ]
  * Add alternativeName()

  [ Jose Luis Blanco Claraco ]
  * replaced lambda with class plus functor
  * less verbose name path for SymbolGenerator

  [ Sushmita ]
  * changed setP method name removed commented code
  * remved commented code

  [ jingwuOUO ]
  * Revised as David's second review
  * Refined unittest

  [ Sushmita ]
  * added new constructor and changed to emplace

  [ Jose Luis Blanco-Claraco ]
  * Automatic detection of correct suggest-override flag

  [ Tim McGrath ]
  * adding additional Unit3 support in the wrapper: PriorFactorUnit3, Values::insert/update/at(Unit3)

  [ jingwuOUO ]
  * Delete forcing compare eigenvector in unittest
  * Revised documentation

  [ Sushmita ]
  * sfmtrack constructor changed to accept point

  [ Fan Jiang ]
  * Attempt to fix spooky boost in Homebrew
  * Use my tap
  * Use my tap
  * Use explict tap name
  * Last resort: use the explict 1.73 formula
  * Use my tap

  [ jingwuOUO ]
  * Fixed forcing comparing eigenvector.

  [ Varun Agrawal ]
  * Added flag for absolute error
  * add test
  * cleaner assertion
  * Consistent interface for pixel center (#579)
  * minor typo fixes
  * Fix python discovery for MATLAB wrapper

  [ Jose Luis Blanco-Claraco ]
  * Avoid redundant calls to error()
  * Add iteration hook in non-linear optimizers

  [ Varun Agrawal ]
  * Use new env files for github actions
  * Roustify BinaryMeasurements in a functional way, plus formatting
  * Remove goto, update docs, formatting
  * delete old, unused file
  * ubuntu with gcc-9 in CI
  * fix path setting for Windows

  [ Martin Vonheim Larsen ]
  * Docs: Use https for mathjax

  [ Varun Agrawal ]
  * Force EXPMAP option for both if either POSE3 or ROT3 is set
  * uncomment tests
  * Improved CayleyChart Local
  * Similarity3 test only for Rot3 Expmap
  * comment out Windows build which is timing out
  * Update Boost since 1.69.0 has been deprecated in CI images
  * Comment out Windows 2016 since it times out
  * Revert "Improved CayleyChart Local"
  * Use older and faster Cayley transform but add det check and docs
  * Print message when either Pose3 or Rot3 expmap is ON
  * CI path for Cayley transform
  * small doc fix
  * Add new assertions and update tests
  * pass in params to optimizer
  * upload build directory after workflow completes

  [ jingwuOUO ]
  * Fixed doxygen

  [ Jose Luis Blanco Claraco ]
  * Add docs, fix ctor placement
  * further extended docs

  [ Varun Agrawal ]
  * use KeyVector to allow proper wrapping with TBB
  * update MFAS tests
  * fix indentation and add upload for Windows
  * correct form for workspace env variable
  * differentiate between Release and Debug builds
  * Better fkag naming, and more docs
  * placed MEX check to new cmake file
  * restructuring
  * encapsulated and updated all the CMake related to Matlab
  * better flag name and docs
  * only upload release builds
  * enforce constant term in quadratic to be 0
  * Make Values::at return as const
  * correct conditional syntax
  * FIx indentation for Values-inl.h
  * syntax update

  [ jingwuOUO ]
  * Added test for subgraph preconditioner in shonan
  * Refined error message in subgraphbuilder

  [ Frank dellaert ]
  * Initial design

  [ lcarlone ]
  * starting to create test and code for gncParams

  [ Sushmita ]
  * vector of cameras and triangulation function wrapped

  [ lcarlone ]
  * added equals in NonlinearOptimizerParams
  * params parsed correctly
  * added gnc loop
  * now we have very cool tests!
  * 2 tests to go
  * simplified small test to make it more understandable
  * 1 test to go
  * stuck on conversion of noise model
  * finally I have a way to properly change the noise model!
  * working on make graph
  * new constructor test which gets rid of robust loss now passes!
  * yay! only the final monster to go!

  [ Varun Agrawal ]
  * Assign pointer to prevent errors
  * fixes to plot code
  * suppress warnings from clang as well

  [ lcarlone ]
  * added verbosity
  * ladies and gents... GNC!
  * added functionality to fix weights
  * correct formatting
  * done - PGO works like a charm!

  [ Sushmita ]
  * docs fixed and error threshold reduced
  * moved landmark variable to setup
  * push back arguments changed to const reference
  * removed commented code

  [ akrishnan86 ]
  * new test doesnt pass
  * translation recovery unit tests pass

  [ Varun Agrawal ]
  * Deprecate SimpleCamera properly
  * deprecate SimpleCamera tests

  [ jingwuOUO ]
  * Fixed typo

  [ Varun Agrawal ]
  * Jacobians for Camera models
  * update Python test
  * Revert "FIx indentation for Values-inl.h"
  * uncomment calibration applications
  * Removed unnecessary copy constructor and robust noise model is caller's responsibility
  * throw runtime errors and explicitly form robust noise model
  * makeNoiseModelRobust assumes responsibility for robustifying noise models
  * use goto flow
  * formatting

  [ jingwuOUO ]
  * Added more description to the toyExample.g2o

  [ Varun Agrawal ]
  * fix tests
  * Don't throw error for Kappa and test parameter print

  [ jingwuOUO ]
  * Added dense matrix test case in power/acc

  [ Varun Agrawal ]
  * added Imu parameter units to doc
  * formatting
  * Common function to compute Jacobians of calibrate method

  [ akrishnan86 ]
  * changing test names and adding documentation

  [ Varun Agrawal ]
  * Revert "added Imu parameter units to doc"
  * Revert "formatting"

  [ akrishnan86 ]
  * documenting member variables

  [ Varun Agrawal ]
  * Added units for imu noise and bias sigmas
  * common header file for all calibration models
  * Base class for all calibration models
  * Refactor Cal3_S2 and Cal3_S2Stereo classes
  * Refactor all Cal3D based models
  * Refactor Bundler and Fisheye models
  * Minor updates
  * Remove deprecated calibration method from wrapper
  * replace typedef with using

  [ Sushmita ]
  * templated functions where possible
  * removed push_back method from cameraset wrapper
  * added utility functions and code cleanup

  [ Varun Agrawal ]
  * modernized default constructors
  * Cal3 code improvements
  * matrix_inverse() -> inverse()
  * remove using-namespace and fix print test
  * Added tests for printing, plus small formatting
  * stream printing for all calibration models
  * Improved constructor for loading parameters from file
  * Override dim(), cleanup, and add unicode
  * Added tests for checking calibration model dimensions
  * Consistent and better formatting
  * additional formatting

  [ Jose Luis Blanco Claraco ]
  * SymbolGenerator: add chr() and made constexpr-capable

  [ Varun Agrawal ]
  * mark getters as const
  * Helper method to robustify measurements
  * calibrate and uncalibrate for Cal3_S2Stereo model
  * throw error if robust model used but not specified in parameters

  [ Sushmita ]
  * added cmake and preamble
  * moved measurement generation to separate function
  * code formatted

  [ Varun Agrawal ]
  * disambiguate overloaded base class

  [ Sushmita ]
  * removed typedef and formatted code

  [ Varun Agrawal ]
  * function to save graph as graphviz file via wrapper

  [ Sushmita ]
  * moved camera_set to generate_measurements

  [ lcarlone ]
  * moved class to .h
  * added comments
  * fixed typo
  * added more explanation on throw

  [ Varun Agrawal ]
  * added flag to enable optimality certification, some formatting
  * correct flag checking
  * Revert "code formatted"
  * format python triangulation tests
  * more formatting
  * remove unused imports

  [ jingnanshi ]
  * fix comment

  [ Varun Agrawal ]
  * formatting and small fixes

  [ jingnanshi ]
  * TLS wip
  * tls done except unit tests
  * minor fix
  * fix scoping
  * mu initialization test & minor formatting fixes
  * mu update test
  * correctly check relative difference between mu valus at consecutive iterations
  * test fix
  * more unit tests

  [ Varun Agrawal ]
  * better documentation

  [ Russell Buchanan ]
  * Adds unit test for imu preintegration of a single step

  [ lcarlone ]
  * fixed small typos

  [ Varun Agrawal ]
  * explicitly initialize Point3
  * formatting

  [ jingwuOUO ]
  * Added the example graph in powerMethodExample.h
  * Refined reference documentation
  * Make purturb static

  [ Varun Agrawal ]
  * refactored code for ImuMeasurements
  * refactored code for testing ImuPreintegration with impact
  * add simulation data
  * save time in CSV, formatting

  [ lcarlone ]
  * templating on params is still problematic
  * finally fixed the typedef
  * fixed templating, added a strict unit test on inlier threshold
  * made function name less ambiguous, added more comments on inlierThreshold

  [ jingnanshi ]
  * Fix TLS convergence check
  * update function name
  * fix test

  [ lcarlone ]
  * - fixed stopping conditions - handled degenerate case in mu initialization - set TLS as default - added more unit tests

  [ jingnanshi ]
  * minor fixes

  [ Varun Agrawal ]
  * wrap Symbol class and methods
  * minor formatting of cmake file

  [ Ayush Baid ]
  * Wrapping Cal3Bundler's prior and GeneralSFMFactor2

  [ lcarlone ]
  * moved GncParams to separate file, addressing comments by Frank, 1/n
  * renamed enum
  * addressed all except 2 comments by Frank. waiting for inputs on the 2 outstanding issues

  [ Ayush Baid ]
  * Adding Cal3DS2 prior factor and using template instead of typedefs

  [ lcarlone ]
  * moved gncLossType outside params

  [ cttdev ]
  * Adding BearingFactor3D to the wrapper definition.

  [ lcarlone ]
  * addressed final comments by Frank

  [ Varun Agrawal ]
  * Pose3 interpolateRt method (#647)

  [ Ayush Baid ]
  * adding serialization and other functions to enable testing
  * adding track serialization and testable trait
  * improving formatting
  * fixing variable names and comments
  * adding serialization functions to wrapper

  [ Varun Agrawal ]
  * remove build upload since it can't be used downstream

  [ Ayush Baid ]
  * fixing xml serialization issues
  * reverting SfmTrack to struct
  * printing out the 3d point
  * adding equals function to wrapper
  * adding inline comment for round trip
  * Adding serialization support to be used for GT-SFM (#650)

  [ Varun Agrawal ]
  * documentation for compiling on windows
  * improvements to windows doc
  * Squashed 'wrap/' changes from dfa624e77..09f8bbf71
  * updates to Cmake to use the new wrap package
  * updated python setup files so that example data is loaded correctly
  * more precise python version control in CI
  * Revert "more precise python version control in CI"

  [ Frank Dellaert ]
  * add virtual constructor
  * Removed reference for iterating over values. Also used auto where I could, when changing.

  [ Varun Agrawal ]
  * fix metis based warnings in CMake and compiling
  * add std namespacing
  * fix warnings for vectors and matrices
  * verbose printing of exceptions
  * remove verbose flag and print exception to std::cerr
  * cleanly initialize matrices in test
  * remove exception print, add TODO

  [ Ayush Baid ]
  * adding default color values to fix equality check

  [ Varun Agrawal ]
  * update completed TODOs
  * add unit test for NonlinearFactor weight with different noise models

  [ John Lambert ]
  * make r,g,b part of constructor w/ default values
  * add getter for rgb
  * make getter const

  [ Varun Agrawal ]
  * use older form of CMake install
  * add docs for cmake update
  * follow correct doxygen format
  * Squashed 'wrap/' changes from 09f8bbf71..186ed2c79
  * Squashed 'wrap/' changes from 186ed2c79..85d34351c

  [ David ]
  * Add getters to line3

  [ John Lambert ]
  * add robust shonan updates to python wrapper

  [ RamadanAhmed ]
  * Fix GTSAM_EXPORT for some classes and function

  [ Varun Agrawal ]
  * added FunctorizedFactor2

  [ Toni ]
  * Split .h/.cpp, use const& (WIP)

  [ Jose-Luis Blanco Claraco ]
  * CMake scripts compatible with gtsam as git submodule

  [ Ayush Baid ]
  * changing robust noise model to Gaussian

  [ Toni ]
  * Move example to gtsam_unstable
  * Fix formatting
  * Remove gtsam_unstable lib from examples
  * Fix formatting

  [ Gerry Chen ]
  * Mandy+Fan's original code for converting sparse matrices to Eigen format
  * merge Mandy + Fan's sparseJacobian unit test additions
  * organize/isolate sparseEigen functionality
  * fix off-by-one bug
  * cleanup

  [ jingwuOUO ]
  * Set estimateBeta() as optional

  [ Russell Buchanan ]
  * clean up

  [ Gerry Chen ]
  * rename matrix type from `SpMat` to `SparseEigen`
  * roll back some cosmetic changes to minimize the diff
  * SparseEigen docstring
  * typo: `expected` changed to `expectedMatlab`

  [ David Wisth ]
  * Add a simplifed version of the minimal failing example

  [ Gerry Chen ]
  * timing sparse eigen
  * minor efficiency modifications

  [ Varun Agrawal ]
  * use streams instead of printf
  * use of passed in stream for print capture
  * stream printing for Pose2
  * add BearingRange measured to wrapper
  * add override and formatting
  * remove cout statements from testImuPreintegration tests

  [ David Wisth ]
  * Add hessian calculation

  [ Gerry Chen ]
  * add generic optional parameters to sparseJacobian Also, the unit test changed due to a 0 entry that was previously wrongly included in the b-column of the sparse representation.
  * more generic sparseJacobianInPlace function
  * eliminate copy/pasta from SparseEigen with generic version of sparseJacobian
  * populate sparse matrix with `insert` rather than `setFromTriplets` About 5% speed improvement.

  [ Varun Agrawal ]
  * upgrade minimum required Boost version to 1.67.
  * Revert "upgrade minimum required Boost version to 1.67."
  * add known issues section with info about march=native

  [ Gerry Chen ]
  * move SparseMatrixBoostTriplets typedef to gfg
  * remove templating while maintaining efficiency Templating still used in cpp file for generic-ness, but not exposed anymore
  * revert Matrix.h
  * formatting

  [ Frank Dellaert ]
  * use transform rather than deprecated static function
  * Got rid of extra keys
  * Got rid of static versions of methods
  * Cleaned up derivative code
  * Cleanup

  [ Toni ]
  * Fix can be marked override warning

  [ Varun Agrawal ]
  * make non-editable CMake variables as INTERNAL
  * set TBB default to Release unless TBB_USE_DEBUG_BUILD is set

  [ lcarlone ]
  * changed barcsq to be a vector, such that the user can provide a bound for each factor
  * trying to include chi2
  * working unit tests: added chi2
  * done with new default noise thresholds!

  [ Varun Agrawal ]
  * fix bug in Pose2 print
  * use standard function to check for empty string

  [ Gerry Chen ]
  * remove unnecessary function overloads and typedefs
  * remove InPlace jacobian from .h file
  * fix comment and remove whitespace diff
  * disambiguate double template >>
  * replace sparseJacobian with "fast" version
  * auto and reserve fewer

  [ Peter Mullen ]
  * type in test hidden by duplicate test values

  [ Toni ]
  * Fix override warnings: modernize-use-override

  [ Frank Dellaert ]
  * cleanup

  [ lcarlone ]
  * improved comments
  * removed commented line

  [ jingnanshi ]
  * use std namespace qualifier

  [ Frank Dellaert ]
  * Comments

  [ Toni ]
  * Fix issue #689
  * Remove unnecessary include eigen3

  [ Jose Luis Blanco Claraco ]
  * Avoid target collision if gtsam used as submodule

  [ Mostafa ]
  * Update LieGroups.lyx
  * Generate LieGroups.pdf

  [ lcarlone ]
  * starting to implement tests and class for DisplacedPinholeCamera

  [ David Wisth ]
  * Add new oriented plane 3 factors with local linearisation point
  * Update print method of OrientedPlane3Factor
  * remove deprecated Unit3::error() which is replaced by Unit3::errorVector()
  * Update documentation on new factor

  [ Fan Jiang ]
  * Fix GTSAM MATLAB
  * Squashed 'wrap/' changes from 85d34351c..b28b3570d
  * Use latest Boost

  [ David Wisth ]
  * Revert "remove deprecated Unit3::error() which is replaced by Unit3::errorVector()"
  * remove the error() function from OrientedPlane3 (it had incorrect derivatives)
  * Tidy up comments and use cpplint
  * small tidy and fix unit tests

  [ John Lambert ]
  * Start moving Sim(3) functionality into Python wrapper

  [ David Wisth ]
  * Add inline comments on commented-out unit tests

  [ Asa Hammond ]
  * Initial implimentation of a Constant Velocity Constraint between NavStates
  * add gtsam namespace
  * bind a lambda instead of a static function

  [ John Lambert ]
  * add sim3 Point3 align to wrapper
  * Fix typo in using -> typedef conversion
  * move sim3 to stable version
  * move unit test out of gtsam unstable
  * move typedef to header file
  * add Align() for pose3pairs

  [ Asa Hammond ]
  * Add docstrings, use update() to build predicted state and build the error calc
  * remove AAA style for Dellaert style on simpler types
  * rename some vars for consistency
  * static const for placeholder vars
  * fixup noisemodel so its correct dimension
  * cleanup some cruft, add license text
  * corrected license header

  [ John Lambert ]
  * add standard interface for Sim3 in wrapper

  [ Asa Hammond ]
  * test cleanup

  [ John Lambert ]
  * add interface for transformFrom
  * PointPairs to Point3Pairs, and move to Point3.h
  * move PointPairs to Point3.h
  * update the docstring
  * Rename PointPairs to Point3Pairs everywhere per popular demand
  * add a unit test for line case
  * add another unit test, but this one fails
  * move Point3Pairs to Point3.h part of gtsam.i
  * fix notation
  * fix bugs in Karcher mean
  * switch typedef to using per popular request
  * update author list

  [ Akshay Krishnan ]
  * unit test + fix segfault

  [ akrishnan86 ]
  * formatting changes

  [ John Lambert ]
  * Use brew's boost, instead of Fan's version
  * fix notations
  * clean up Sim(3) notations
  * update test notation to have just 1 world frame, and fix typo in abPointPairs
  * dont conflate notation on aTb

  [ Ayush Baid ]
  * Squashed 'wrap/' changes from b28b3570d..d37b8a972
  * Squashed 'wrap/' changes from d37b8a972..10e1efd6f
  * enabling markers and testing pickle roundtrip for few classes

  [ Varun Agrawal ]
  * offload matlab wrapping to the wrap project
  * Make matlab wrapping rely completely on the wrap project

  [ John Lambert ]
  * improve docstring
  * improve docstring

  [ Varun Agrawal ]
  * update Matlab CMakeLists.txt to use the wrapper
  * delete example project since it is now its own git template
  * Squashed 'wrap/' changes from b28b3570d..b0eb968f2

  [ John Lambert ]
  * add const on Rot3
  * improve docstring
  * reformat with black
  * use different brace indent format

  [ Varun Agrawal ]
  * Fix Matlab tests and add saveGraph method to GaussianBayesNet

  [ Asa Hammond ]
  * Avoid derivative calcs if they aren't asked for
  * Move to fixed size matrix for derivative calculations

  [ John Lambert ]
  * temporarily turn off Python + tbb in CI because of OOM

  [ Frank Dellaert ]
  * fixed inhertance
  * Added explicit header as suggested in issue #634

  [ lcarlone ]
  * removed new class and test

  [ Varun Agrawal ]
  * clean up the CMake
  * Squashed 'wrap/' changes from b0eb968f2..d19cda546
  * templated return types are now supported
  * Move wrapper documentation to the wrap project

  [ lcarlone ]
  * added test
  * created .h
  * done factor!
  * compiles and all tests pass!!
  * simple tests are passing, but now we start on the serious ones
  * fixed equals
  * error computation also looks fine!
  * moving to other tests
  * moving to noisy tests
  * fixed unit test
  * got it!
  * test failure: now we can start computing jacobians

  [ Varun Agrawal ]
  * fix holder_type typo
  * make ignore list consistent across Python and Matlab
  * Squashed 'wrap/' changes from d19cda546..91f3835a8
  * Squashed 'wrap/' changes from 91f3835a8..aae9b4605

  [ lcarlone ]
  * trying to figure out jacobians

  [ Varun Agrawal ]
  * undo ignore updates, all tests now pass

  [ lcarlone ]
  * isolated schur complement!
  * pipeline up and running, need to fix Jacobians next, then Schur complement
  * debugging jacobians
  * still segfaults

  [ Jose Luis Blanco Claraco ]
  * fix missing verbosityLMTranslator case

  [ Varun Agrawal ]
  * fix the Similarity3 export declarations and wrapper
  * Fix CI with separate boost install
  * temporarily added required check
  * explicitly add python version

  [ lcarlone ]
  * working on new sym matrix

  [ Milo Knowles ]
  * Three examples of failing PartialPriorFactor<Pose3> Jacobians
  * Add successful unit test for identity pose
  * Correct Jacobian in PartialPriorFactor, modify derived factors for compatibility
  * Change mask to indices and update factor docstring

  [ lcarlone ]
  * solving key problem
  * trying to fix crucial test
  * fixed optimization test: now we have to (i) allow reuse of same calibration, (ii) enable all other tests, (iii) remove cout

  [ Milo Knowles ]
  * Prefer localCoordinates over logmap

  [ lcarlone ]
  * adding test with single key
  * removed tests that are not applicable - merging to develop now

  [ Navid Mahabadi ]
  * fix: UnaryFactor Jacobian
  * update: use avialble rot2 class

  [ Varun Agrawal ]
  * fix numpy deprecation warnings
  * more specific version of python to test against
  * Squashed 'wrap/' changes from aae9b4605..3eff76f60
  * Squashed 'wrap/' changes from 3eff76f60..548e61b1f
  * added CMake variable to set the matlab.h include
  * Squashed 'wrap/' changes from 548e61b1f..29628426d
  * switch back to simple python3
  * fix number of arguments to matlab_wrap for unstable
  * Squashed 'wrap/' changes from 29628426d..9a467794e

  [ lcarlone ]
  * fixed print, removed cout, test still failing
  * amended

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from 9a467794e..96ccdfd0b

  [ Milo Knowles ]
  * Fix x/y mismatch in unit tests
  * Add constructor tests and extend tests to Pose2
  * Switch to cleaner T::Logmap
  * Fix incorrect Vector dimension that was causing CI failures
  * Add LocalCoordinates() to ProductLieGroup and remove unnecessary <Eigen/Core> include to reduce compile memory

  [ lcarlone ]
  * moving to more appropriate construction of Hessian

  [ Milo Knowles ]
  * Fix Rot3::LocalCoordinates runtime error when using Cayley map

  [ lcarlone ]
  * getting better
  * test still failing
  * now I have a working prototype!
  * works now!!
  * getting ready to enable monocular operation
  * 2 tests to go
  * 1 test to go!
  * need to clean up templates and remove 2 redundant lines
  * removed extra "else"

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from 96ccdfd0b..5ddaff8ba
  * operator overloading for compose
  * add operator overloading and fix some TODOs in the wrapper

  [ lcarlone ]
  * added extra unit test
  * formatting
  * improved naming, formatting, comments
  * cleanup
  * fixed glitch highlighted by CI
  * trying to fix CI error

  [ Frank Dellaert ]
  * Added double as template arg

  [ lcarlone ]
  * added comment

  [ Varun Agrawal ]
  * added double as a template for PriorFactor, NavState retract and local, some formatting

  [ Aleksei Evlampev ]
  * fix boost serialization version includes
  * remove unnecessary includes in SubgraphBuilder.h

  [ Varun Agrawal ]
  * disable Wrapper CI for GCC 5 until we optimize the wrapper
  * change KeyFormatter from boost::function to std::function
  * bunch of minor fixes

  [ Gerry Chen ]
  * remove boost::function from Key.h
  * Squashed 'wrap/' changes from 5ddaff8ba..b43f7c6d7
  * update gtsam.i print function declarations
  * update default args to match with c++
  * include pybind11/function

  [ Aleksei Evlampev ]
  * return back including boost version.hpp header

  [ Gerry Chen ]
  * Squashed 'wrap/' changes from 5ddaff8ba..bae34fac8
  * include pybind::iostream to the python wrapper cpp template
  * documentation about wrap update instructions

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from bae34fac8..b80bc63cf

  [ Asa Hammond ]
  * Remove unused body_P_sensor param
  * update docstring for dt param

  [ Varun Agrawal ]
  * remove redundant stuff
  * Squashed 'wrap/' changes from b80bc63cf..903694b77
  * Squashed 'wrap/' changes from 903694b77..b2144a712
  * Squashed 'wrap/' changes from b2144a712..0124bcc45
  * assign default variables for string in print()

  [ yotams ]
  * rolling shutter projection factor

  [ Milo Knowles ]
  * Add MagPoseFactor
  * Compute error in the body frame and fix print()
  * Improve docs

  [ Ayush Baid ]
  * Adding factor with shared calibration as a variable

  [ Varun Agrawal ]
  * fix printing of preintegration params

  [ Ayush Baid ]
  * fixing tests by moving to Cal3_S2
  * using fixed size matrix, and adding jacobian in homogeneous conversion
  * renaming key variable
  * fixing docstring
  * reverting jacobian computation from homogeneous function

  [ Jose Luis Blanco-Claraco ]
  * Avoid potential wrong memory access

  [ Varun Agrawal ]
  * print default arguments update

  [ Ayush Baid ]
  * adding prior on calibrations

  [ Varun Agrawal ]
  * override print methods and update wrapper
  * remove virtual from overridden methods, add virtual destructors to appease compiler
  * fix warnings from tests
  * fix unused warning
  * fix some interface todos
  * add pybind11/operators.h to interface template
  * update boost download link

  [ lcarlone ]
  * addeed gnc example
  * added GNC example
  * adding knownOutlier input to GNC
  * all tests done!
  * user can now also set the weights to initialize gnc!

  [ yetongumich ]
  * refactor tests and add comments
  * resolve some nits

  [ lcarlone ]
  * added comment on example interface
  * amended

  [ Fan Jiang ]
  * Working CustomFactor
  * Change to using nullptr
  * Allow KeyVector to just be lists
  * Add comment on functor signature
  * Add comment in gtsam.i
  * Add printing for CustomFactor
  * Remove unnecessary comment
  * Add documentation
  * Address Frank's comments
  * Add more comments

  [ lcarlone ]
  * fixed formatting glitch

  [ HMellor ]
  * Correct ImuFactorExamples frame description

  [ Varun Agrawal ]
  * update docstrings and format
  * Add Akshay's Cal3Bundler test
  * account for radial distortion in initial guess for `calibrate`
  * add test for rekey of LinearContainerFactor
  * override the rekey methods so as to update the properties as well
  * added destructor for CameraSet to remove warning

  [ Tim McGrath ]
  * fix bug on computation of SO(3) logmap

  [ Milo Knowles ]
  * Update commment syntax and replace typedef with using

  [ Varun Agrawal ]
  * initialize with intrinsic coordinates which has radial distortion modeled
  * add all of Akshay's tests for default model
  * addressed comments and added an additional test
  * make rr and g as const

  [ Dan Barladeanu ]
  * Comments Only.
  * fix comment to docstring

  [ Frank Dellaert ]
  * Added Range to Point2

  [ Fan Jiang ]
  * Fixed Python factor for TBB
  * Trajectory Estimation example
  * Add unit test for optimization a factor graph
  * Address Frank's comments
  * Fix example in docs

  [ Varun Agrawal ]
  * fix bug in LinearContainerFactor and warnings about Point3
  * added test for this issue

  [ Ayush Baid ]
  * updating tests
  * creating 18 point example

  [ Milo Knowles ]
  * Move MagPoseFactor to gtsam

  [ Ayush Baid ]
  * switching to sampson point line error
  * fixing jacobians and reformatting
  * changing error values in test
  * adding jacobians on input points
  * adding jacobians on input points
  * moving to squared sampson error
  * using correct jacobian computation for calibration
  * fixing unit tests

  [ John Lambert ]
  * add transformFrom() for Point3 in Similarity3

  [ Ayush Baid ]
  * adding 11 point example for cal3bundler
  * fixing test cases

  [ Jose Luis Blanco Claraco ]
  * add expressions for cross() and dot()

  [ Varun Agrawal ]
  * merge double into Values templates
  * add cmake command to run GTSAM python tests

  [ Akshay Krishnan ]
  * removing Sampson error + some tests cleanup
  * increasing calibrate() tolerance
  * small covariance change

  [ akrishnan86 ]
  * formatting changes
  * removing duplicate data file

  [ acxz ]
  * use size_t variable type
  * update timeLago.cpp with newer Sampler interface
  * use size_t variable type
  * update boost::bind usage

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from 0124bcc45..07330d100

  [ Akshay Krishnan ]
  * removing failing test and unused data

  [ akrishnan86 ]
  * updating documentation for factor

  [ acxz ]
  * explicitly use boost::placeholders:_X for compilers that do not respect function scope
  * replace deprecated tbb functionality

  [ Akash Patel ]
  * formatting

  [ acxz ]
  * formatting
  * using using for boost placeholders in tests
  * add comment for purpose of variable
  * formatting

  [ Akshay Krishnan ]
  * updating points name, constexpr
  * changing to macro EssenstialMatrixfactor4
  * all jacobian tests for essential matrix use macro

  [ akrishnan86 ]
  * formatting example

  [ Varun Agrawal ]
  * update the pgp servers to get the LLVM GPG key
  * update key server in other workflow files

  [ Jay Elrod ]
  * Add user-defined copy constructor for Rot2

  [ roderick-koehle ]
  * Forward declaration of PinholeCameraCal3Fisheye
  * Forward declaration for Set of Fisheye Cameras
  * Extend python wrapper to include fisheye models.
  * Forward declaration of fisheye camera.
  * Unit test for equidistant fisheye
  * Extend unit testing of omnidirectional projection

  [ Varun Agrawal ]
  * Added lots of tests for BetweenFactor
  * add Pose3 expmap to wrapper
  * typo fix

  [ roderick-koehle ]
  * Introduce setUpClass, python snake_case variables
  * Use of common setUpClass method
  * Correct tab to spaces to fix formatting
  * Improved accuracy for analytic undistortion

  [ Varun Agrawal ]
  * cleaner variables
  * fix dimension for Pose3 test

  [ Scott ]
  * Fix serialization of ISAM2 class

  [ John Lambert ]
  * Update ShonanAveraging.h
  * add interface in C++, and helper extractRot2Measurements()
  * fix typo
  * add ShonanAveraging2 constructor to wrapper, that accepts BetweenFactorPose2s as input
  * add conversion function for Pose2 -> BinaryMeasurement<Rot2>
  * fix typo on 3x3 matrix def

  [ Scott ]
  * Added ISAM2 serialize test

  [ John Lambert ]
  * use default parameters if none provided, and remove gtsam namespace prefix in .h file
  * check in python unit test for new functionality

  [ roderick-koehle ]
  * Add comment about initial guess in undistortion

  [ John Lambert ]
  * add missing import to python unit test
  * improve docs about compiling without TBB
  * improve wrapper compilation instructions, when TBB not installed
  * set pmin and pmax in unit test

  [ roderick-koehle ]
  * Add ambiguous calibrate/uncalibrate declarations.
  * Missing CameraSet binding specialisations
  * Update ignore list in CMakeFile

  [ Varun Agrawal ]
  * replaced boost with std for placeholders, bind and function
  * update all the tests

  [ John Lambert ]
  * fix typo in block indexing, 3x3 covariance for Pose2 should have just 1x1 block for theta

  [ roderick-koehle ]
  * Testing CameraSet and triangulatePoint3
  * Unittest, triangulation for Cal3Unified

  [ Varun Agrawal ]
  * break interface file into multiple files
  * break up preamble and specializations so there are no duplicate includes
  * update template for wrapper
  * move RedirectCout to base/utilities.h
  * update CMake
  * wrapper updates
  * enable CI builds
  * fixes
  * Squashed 'wrap/' changes from 07330d100..d9ae5ce03

  [ John Lambert ]
  * try increasing pmax to pass test
  * fix typo

  [ Varun Agrawal ]
  * matlab wrapper header update

  [ John Lambert ]
  * use simple example for unit test
  * use mod when comparing angles
  * fix assert on angles
  * update logic in angular error comparison

  [ roderick-koehle ]
  * Shared data for triangulation unit tests
  * Shared setup triangulation unit test
  * Minor fix test_Cal3Unified
  * Minor fix test_Cal3Fisheye
  * Remove commented out line
  * Remove comment
  * Remove spaces in empty line

  [ Varun Agrawal ]
  * update interface files with latest develop
  * remove extraneous file

  [ Akash Patel ]
  * Revert "replace deprecated tbb functionality"

  [ Scott ]
  * Try macOS fix

  [ lcarlone ]
  * added templates for factors
  * setting up .h and tests - compiles and tests pass.
  * put in place initial functions
  * removed cpp
  * now I need to move to testing and interpolation
  * added interpolation function from shteren1
  * removed interp from Pose3, starting to take pass on projection factor and test
  * amended
  * pass on projection factor, but looks great overall
  * everything working out so far with the tests
  * all tests are passing!
  * added nice test on cheirality exception - done with projectionFactorRollingShutter

  [ Akshay Krishnan ]
  * wrapping triangulate nonlinear

  [ John Lambert ]
  * use upper 3x3 sub-block of covariance matrix for converting BetweenFactor to BinaryMeasurement, and use Isotropic in ShonanAveraging2
  * add comments about tangent space and covariance matrix ordering

  [ lcarlone ]
  * started serious testing: all tests pass for now
  * solidified add and equal
  * finding best way to test RS errors
  * yay! error test passes!
  * jacobians are good to go!
  * jacobians and errors are well tested now
  * got to the final monster. Now I need to implement createHessian
  * stuck on compile issue

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from d9ae5ce03..571c23952

  [ lcarlone ]
  * all pass!
  * all pass!
  * moved common function to cameraSet. commented issues with templated calls to functions in cameraSet
  * removed comments. Code is complete now. Need few more unit tests and we are good to go
  * removed printout, solved CI issue

  [ akrishnan86 ]
  * adding gtsam scope

  [ lcarlone ]
  * fixed another test, few more to go
  * fixed test with lmk distance
  * test with EPI fixed
  * working on testing + cosmetic improvements to print for smart factors
  * fixed another test.
  * done with tests, now I only have to rename gamma to keep consistency with the projection factors RS
  * renamed params. need one last test
  * extra cleanup
  * added timing test
  * CHECK -> EXPECT
  * test still in progress; removed a tmp function
  * fixed last test - this is good to go!
  * fixing ci issue

  [ Varun Agrawal ]
  * add Windows export symbols for PinholeCamera
  * first pass at IMUKittiExampleGPS.py
  * speed up boost install
  * improvements to CI files
  * Install boost directly from binary
  * use Boost 1.67.0 for Windows
  * use env variables and fix setting of GITHUB_ENV
  * use more cores for make on unix systems
  * improvements to windows builds
  * Boost 1.72.0 for Windows

  [ Jose Luis Blanco Claraco ]
  * Add missing getter

  [ John Lambert ]
  * start wrapping GNC
  * Remove std prefix in .i fn signatures
  * Remove ‘class’ from template specifications
  * try imports
  * provide template list of typedef
  * test GNC along with other non-linear optimizers in python unit tests
  * remove Dogleg from GNC-supported base-optimizers, and use nested templates
  * add virtual to all classes in the .i file
  * add GTSAM_EXPORT to GncParams.h
  * add GTSAM_EXPORT to GncOptimizer.h
  * clean up test_Pose3SLAMExample.py
  * add type hints, use numpy instead of math module
  * add type hints to visual_data_generator.py
  * clean up plot.py with modern type hints
  * add more missing type hints
  * add missing type hint
  * add missing docstring for an input arg
  * use custom typedefs for GNC + GaussNewton and GNC + LM
  * import GncLMParams, GncLMOptimizer to prevent pybind's automatic long names from name concat
  * add missing gtsam prefix
  * add Optional type annotations where needed

  [ lcarlone ]
  * now using MakeJacobian
  * simplified jacobian computation, improved comments
  * reformatted using google style
  * renamed interp param to alpha, improved comments, added cpp

  [ John Lambert ]
  * Start wrapping the verbosity options for GNC

  [ Varun Agrawal ]
  * modernize NonlinearEquality.h
  * update docs to reflect min Boost version
  * small wrapper updates
  * fix extractPoint2/3 and added C++ tests
  * added Python tests
  * updated docs
  * full slew of tests
  * update wrapper with defaults
  * set lowest common boost version
  * Link to GTSAM-EXPORT doc
  * only format c++ file (no code changes)
  * working implementation

  [ Eric ]
  * Small clarification and md cleanup

  [ John Lambert ]
  * Expand DSF map unit tests
  * improve docstring
  * clean up SFMdata

  [ Varun Agrawal ]
  * format and modernize NonlinearEquality2
  * wrap NonlinearEquality2 + python unit test
  * Update `make python-test` so that it works even if GTSAM is already installed
  * Add section about Boost version requirement
  * add missing import of Pose3

  [ lcarlone ]
  * starting to make templates for smart projection factors uniform (all on cameras)
  * investigating potential templating alternatives
  * don't like it - going to create a different class
  * reverted all changes back to master
  * and created a new factor instead - moving to testing now
  * compiles, testing now
  * fixed bug
  * progress on tests
  * removed line
  * still challenging to parse extrinsics
  * tests finally passing!

  [ Varun Agrawal ]
  * add guards for system Metis
  * CI special case for using system version of 3rd party libraries
  * formatting
  * add appropriate guards for metis

  [ lcarlone ]
  * plot twist: templating new factor on CAMERA
  * added capability to use multiple measurements from the same pose. unfortunately still had to define a non-templated function from cameraSet
  * all tests pass except one on serialization
  * passing tough test - nice!
  * done with all tests

  [ Varun Agrawal ]
  * Basis functions (#403)

  [ Gerry Chen ]
  * python unit test for FitBasis
  * add <pybind/stl.h> and fix constructor argument order
  * docstrings and formatting

  [ Varun Agrawal ]
  * fix python tests and make verbose so they are easy to debug

  [ Frank Dellaert ]
  * Added override
  * Some formatting
  * Got rid of SchurComplementAndRearrangeBlocks_3_12_6
  * Check equals not assert_equal
  * Google-style formatting in new files.
  * Cleaned up interpolate

  [ Varun Agrawal ]
  * verbose python testing

  [ lcarlone ]
  * Merge branch 'develop' into feature/cameraTemplateForAllSmartFactors

  [ Varun Agrawal ]
  * Fix bug in FourierBasis
  * break down tests to make reporting clearer

  [ Frank Dellaert ]
  * Removed types defined in Base class
  * Documented linear factors better.
  * Formatting and better documentation
  * Added two ReadMe files to document the plethora of smart factors.
  * Address review comments, docs only.

  [ John Lambert ]
  * add Pose2.align() to wrapper
  * add Point2Pairs typedef to Point2.h
  * add gtsam::Point2Pairs to CMakeLists.txt
  * add Point2Pairs to specializations
  * move align as function, not as class method
  * start python unit test for align()
  * add python unit test on Pose2.align()
  * fix missing imports
  * import align from gtsam directly
  * directly import only classes from gtsam
  * use boost::optional in .i file directly

  [ Varun Agrawal ]
  * add a cmake flag for easy toggling BetweenFactor jacobian computations
  * add support for boost::optional return type in geometry.i
  * formatting
  * update documentation for boost::optional binding

  [ John Lambert ]
  * use updated wrap syntax for Verbosity enum in .i file

  [ Varun Agrawal ]
  * refactor to remove all pylint errors
  * fix matplotlib deprecation
  * removed duplicate
  * wrap smart flags for various noise models

  [ Frank Dellaert ]
  * Added virtual constructor and re-formatted constructors
  * Switched to borglab hub
  * Updated README
  * Fixed TODOs

  [ Frank dellaert ]
  * Fixed VNC docs for Mac

  [ Varun Agrawal ]
  * clean up and refactoring to use custom preintegration params
  * formatting
  * wrap key printing funcs and remove redundancy
  * wrap more JacobianFactor constructors
  * update template to record correct name of cpp file

  [ Akash Sharma ]
  * Update Find TBB to handle TBB installed with homebrew on OS X Better Error message for TBB handling with versions greater than 2021.1 on OS X

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from 571c23952..add6075e8
  * make TBB finding depend on the GTSAM_WITH_TBB flag
  * Squashed 'wrap/' changes from add6075e8..d6350c214

  [ lcarlone ]
  * renamed smartProjectionFactorP -> smartProjectionRigFactor
  * modernized factor
  * fixed equal
  * fixing tests
  * halfway there
  * working on tests
  * all tests work except serialization
  * added extra test with multi cam

  [ Gerry Chen ]
  * OptionalJacobian fixed constructor with dynamic pointer
  * AdjointMap jacobians for Pose3
  * only compute jacobians when needed
  * AdjointTranspose
  * only compute intermediate jacobians when needed
  * review comment: move check outside lambda

  [ lcarlone ]
  * added more comments here and there
  * changing API for rolling shutter
  * bug fix - finalizing last few tests
  * all tests are passing!
  * done with tests
  * now I only need to fix comments in rolling shutter factor
  * all set here!

  [ John Lambert ]
  * add failing unit test on axisAngle for Rot3 in c++
  * add python unit test for Rot3
  * fix typo
  * fix assert

  [ Varun Agrawal ]
  * run tests for C++ CI

  [ Fan Jiang ]
  * Revert "Revert "replace deprecated tbb functionality""
  * Fixed numerical problems near +-pi
  * Revert "Revert "Revert "replace deprecated tbb functionality"""
  * Cleanup equation

  [ Varun Agrawal ]
  * update proxy functions to use the Adjoint and AdjointTranpose methods
  * add docs explaining why pRw_H_t is the same as Rw_H_R
  * make threshold more lenient

  [ jerredchen ]
  * added new Python examples using iSAM2
  * Added minor comments for documentation

  [ Fan Jiang ]
  * simplify logic of biggest diagonal
  * Fix typo

  [ John Lambert ]
  * Add specific examples to stress-test the log map
  * loosen tolerance on trace(R) == -1

  [ Fan Jiang ]
  * Fix again with better approximation

  [ jerredchen ]
  * adjusted docstrings to match google style guide

  [ Fan Jiang ]
  * Revert "Revert "replace deprecated tbb functionality""

  [ Gerry Chen ]
  * correct jacobians
  * documentation
  * explicitly define simpified jacobian expressions for efficiency
  * stricter tolerances
  * Revert "stricter tolerances"
  * address frank review comments

  [ Varun Agrawal ]
  * use variables to store targets
  * clean up the __init__ file
  * address review comments

  [ yetongumich ]
  * add logmap expression
  * add logmap expression

  [ John Lambert ]
  * add LAGO (for Pose2) to python wrapper

  [ Ivor Wanders ]
  * Fix dangling reference in static allocation.

  [ John Lambert ]
  * add LAGO example to Python
  * use nested namespace in wrapper from Varun's suggestion
  * use nested namespace

  [ Varun Agrawal ]
  * add type annotations
  * fix type annotation
  * use python f-strings

  [ John Lambert ]
  * fix typos in python example file
  * add lago unit test, since lago namespace cannot be imported properly be wrapper

  [ Varun Agrawal ]
  * refactor the example to make it cleaner
  * replace static variable with variable of greater scope in cpp example
  * fix the included_imu_measurement_count scope

  [ Fan Jiang ]
  * TBB revival

  [ John Lambert ]
  * use unittest framework instead of pytest
  * add missing default arg on useOdometricPath

  [ roderick-koehle ]
  * Test of jacobian of Cal3Fisheye for on-axis point
  * Test jacobian of Cal3Unified for on-axis point
  * Avoid division by zero in jacobian calculation

  [ Varun Agrawal ]
  * put all example scripts inside main() functions and apply formatting

  [ John Lambert ]
  * use Point3 instead of artificial vector3
  * use Point3 instead of artificial vector3

  [ Varun Agrawal ]
  * add type annotations
  * add conjoining constructor for VectorValues
  * generate GTSAM_UNSTABLE Cmake exports
  * update cmake function to set default package version number

  [ jerredchen ]
  * made changes according to Frank

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from d6350c214..0ab10c359
  * update CMake
  * Add tests for Lie::interpolate jacobians

  [ Gerry Chen ]
  * much cleaner Adjoint jacobian
  * delete "FIXME" because `compose` unit tests check `AdjointMap`

  [ Varun Agrawal ]
  * address review comments
  * fix small bug
  * specify optional args as Optional type

  [ jerredchen ]
  * removed ground truth; angles set in deg and converted to rad
  * removed ground truth; set ang in deg and convert to rad for Pose3iSAM2

  [ roderick-koehle ]
  * Check numeric stability close to optical axis
  * Numerically stable refactoring of fisheye jacobian
  * Fix missing semicolons
  * Undo change in scaling function
  * Fix type in extression for dyd_dyi
  * Convergence of equidistant scaling utilizing atan2

  [ Varun Agrawal ]
  * address review comments

  [ roderick-koehle ]
  * Fix calling scaling_factor static method.

  [ jerredchen ]
  * formatting by Google style

  [ Varun Agrawal ]
  * address review comments

  [ Gerry Chen ]
  * Address review comments: negative sign and AdjointTranspose section

  [ yetongumich ]
  * enable expression double multiply

  [ Gerry Chen ]
  * add jacobian of second argument to adjoint and adjointTranpsose

  [ Jose Luis Blanco Claraco ]
  * Fix warnings raised by GCC -Wpedactic
  * more consistent notation of macros

  [ Varun Agrawal ]
  * add printErrors method to GaussianFactorGraph

  [ Frank Dellaert ]
  * Use Eigen expressions more effectively and kill & in code.
  * Cleaner Jacobian.

  [ lcarlone ]
  * fixed formatting (plus small fix: std::vector -> fastVector)
  * formatting + const&
  * more const&
  * now throwing exception is params are incorrect
  * added variable in loop
  * point2 -> measurement
  * this will need to be applied in #861
  * disabled timing for test
  * fixed readme
  * serialization is still off
  * final cosmetics
  * added intermediate camera variable for clarity
  * got rid of second constructor
  * further cleanup before moving to sharedPtrs
  * moved rig to use shared ptrs
  * now using shared ptrs

  [ Jose Luis Blanco Claraco ]
  * prefer semicolon in definitions
  * more extra semicolon warnings fixed

  [ Varun Agrawal ]
  * fix warning
  * reduce call stack
  * use safer eigen indexing syntax
  * wrap Colamd function
  * format and refactor the SFM BAL example
  * properly deprecate eliminate functions
  * address reviewer comments
  * add return type definitions
  * fix OrderingType declaration
  * update cmake to copy python tests whenever they are updated

  [ Gerry Chen ]
  * update python wrapper

  [ Varun Agrawal ]
  * properly deprecate additional methods to fully finish deprecation
  * fix VectorValues include

  [ duembgen ]
  * Add namespace to ambiguous placeholders

  [ Frank Dellaert ]
  * Formatting with Google style
  * Formatted sudokus better

  [ Varun Agrawal ]
  * wrap KeyVector methods

  [ Fan Jiang ]
  * Add deprecations
  * Fix windows build

  [ beetleskin ]
  * Use FastDefaultAllocator for Values to adhere allocation compile flags

  [ Fan Jiang ]
  * Remove Exports

  [ roderick-koehle ]
  * Removed comments

  [ Varun Agrawal ]
  * wrap additional ISAM2 methods
  * comment out method
  * make noise model default constructors available for serialization
  * enable pickling for a bunch of objects
  * comment out incomplete code
  * remove commented out code
  * fix all axpy deprecations
  * update the packaged Eigen to 3.3.9
  * Revert "update the packaged Eigen to 3.3.9"
  * add workaround for Eigen serialization issue
  * Add Eigen/Core header
  * make LinearContainerFactor public for serialization
  * wrap other ISAM2 methods
  * wrap alternate ISAM2::update method

  [ Brice Rebsamen ]
  * .gitignore: swp files
  * don't return a const
  * missing shared_ptr include
  * ParseMeasurement<Pose2> initializer list needs an extra argument

  [ Fan Jiang ]
  * Bump version to 4.1.1

 -- Bernd Pfrommer <bernd.pfrommer@gmail.com>  Fri, 13 Jan 2023 18:03:57 -0500

gtsam (4.1.1-1ubuntu4) focal; urgency=medium

  [ Frank Dellaert ]
  * Added a number of docker images

  [ Ellon Paiva Mendes ]
  * Bump version to 4.0.2
  * Install GTSAMConfigVersion.cmake

  [ Jose Luis Blanco-Claraco ]
  * Remove obsolete cmake FindXX modules.

  [ Michael Bosse ]
  * Make variable names consistent with math

  [ Fan Jiang ]
  * Add pybind11

  [ Thomas Jespersen ]
  * Added ported C++ version of ISAM2 Kitti example

  [ kvmanohar22 ]
  * adding functionality to use ISAM2 for imu preintegration example

  [ yetongumich ]
  * remove distance in noisemodel, replace with error
  * add test on robust loss functions to behave like quadratic
  * Revert "add implementation for deprecated Mahalanobis"
  * merge with mahalanobis renaming
  * re-add implemntation for deprecated Mahalanobis
  * renamed mahalanobisDistance
  * add document for robust noise model
  * noise in robust should be gaussian, change variable names
  * revised comments
  * change test cases to use the updated names, remove 2nd Create in robust
  * modified document, remove commented function, add deprecated distance
  * check if noisemodel is gaussian, if not throw exception
  * change unweightedwhiten back
  * rename residual to loss
  * modified document

  [ Varun Agrawal ]
  * typo fix

  [ Frank dellaert ]
  * Inlined derivatives and fixed one issue with Jacobians around image center
  * Re-ordered  and cleaned up tests, added derivative tests for image center

  [ Frank Dellaert ]
  * Setup and simulateMeasurements
  * Built TranslationFactor class and partially completed TranslationRecovery class
  * Added initalizeRandomly
  * Running optimization
  * Moved TranslationFactor prototype into sfm directory
  * unit test, incl Jacobians
  * Optimization works!
  * copyright 2020
  * Move to its own compilation unit

  [ Binit Shah ]
  * Include corrupting noise param to parse3DFactors

  [ Jose Luis Blanco-Claraco ]
  * more precise use of setZero() and add comments

  [ Binit Shah ]
  * Sampler initialized with noise argument
  * Using optional sampler outside loop

  [ Varun Agrawal ]
  * Added FunctorizedFactor and corresponding tests
  * fixes, better tests, docs
  * remove TODO
  * improved documentation

  [ Martin Vonheim Larsen ]
  * Added test for Unit3::operator=
  * Properly handle basis in Unit3::operator=

  [ Varun Agrawal ]
  * removed dependency on Eigen3 since we provide Eigen 3.3.7 and Ubuntu Bionic provides Eigen 3.3.4.

  [ Martin V. Larsen ]
  * Update testUnit3.cpp

  [ Varun Agrawal ]
  * improve and modernize the Dockerfiles
  * small logistical fixes

  [ Gerry Chen ]
  * put file stream inside scope to force buffer flush This was already fixed for serializeXML but not for serializeToXMLFile or deserializeFromXMLFile.
  * bypass assert_equal tests for file roundtrips
  * better comments on serializationTestHelper functions

  [ Jose Luis Blanco-Claraco ]
  * unhide doc section in PDF

  [ Varun Agrawal ]
  * remove extra semicolon

  [ David ]
  * Add unit test for oriented plane 3 factor jacobian

  [ Frank dellaert ]
  * Fixed override warnings and added a few missing headers

  [ Varun Agrawal ]
  * renamed testScenarios to testScenarioRunner
  * fix deprecation warnings from Matplotlib
  * reduce for loops, add titles to plots, better space subplots for IMU data
  * vastly improved the basic ImuFactorExample script
  * move Eigen format definition to Matrix.h
  * use Eigen formatting for Rot3 ostream
  * updated filename in brief
  * don't align matrix columns
  * fix print tests for Rot3 and Pose3
  * set CMAKE_VERBOSE_MAKEFILE flag to OFF
  * Cleaned up printing of Rot3
  * Cleaned up printing of Pose3
  * Cleaned up printing of NavState

  [ Jose Luis Blanco-Claraco ]
  * Finish undo of #310 fill with zeros (not actually needed)

  [ Varun Agrawal ]
  * moved matlab-style matrix format definition back to cpp, updated all formatters
  * use static_cast for Rot3 matrix

  [ David ]
  * Add Pose3-Point3 factor
  * Update incorrect test name
  * Add more documentation and clang-format

  [ Frank Dellaert ]
  * Importing Frobenius error factors from Shonan effort

  [ Fan Jiang ]
  * Fix UAF

  [ David ]
  * Fix OrientedPlane3Factor jacobian using numericalDerivative

  [ Fan Jiang ]
  * Fixed all alignment problems
  * Add missing include
  * Fix wrap tests
  * Address Frank's comments
  * Move away from boost

  [ Varun Agrawal ]
  * export cython install path so it can be picked up by other cmake projects
  * cmake function to install python package once make install is completed

  [ Gerry Chen ]
  * use boost paths append to have platform agnostic path separators

  [ Varun Agrawal ]
  * add new make command for installing python wrapper

  [ Gerry Chen ]
  * Separate stream creation and serialization Recommended by @ProfFan in #343 with the objective of making (de)serialize to string and to file more similar
  * formatting to Google style

  [ Varun Agrawal ]
  * added comments and removed unnecessary code

  [ Gerry Chen ]
  * fixed unit test failure on `testSerializationBase` object `output` was getting reused, but should be re-loaded into a "blank" object each time.

  [ David ]
  * Address Frank's comments and clean up changes

  [ Gerry Chen ]
  * reset filesystem - forgot to uncomment these after debugging

  [ akrishnan86 ]
  * optional initialization for LMParams

  [ Varun Agrawal ]
  * Set minimum supported numpy version to 1.11.0 (#366)

  [ Fan Jiang ]
  * Revise comments

  [ David ]
  * Update style and switch to errorVector()

  [ Gerry Chen ]
  * remove file roundtrip test for pointers

  [ Varun Agrawal ]
  * updated comments in shell script
  * added Windows batch script to install python wrapped package

  [ Fan Jiang ]
  * Style fixes as commented by @dellaert

  [ Gerry Chen ]
  * serialization docstrings
  * rename serialization functions with less ambiguous names According to Varun's suggestion. Note: string functions should be automatically inlined by compiler to avoid passing big strings.

  [ Varun Agrawal ]
  * pure CMake script to install Python wrapper after compiling
  * removed extra line
  * reset to previous version

  [ Fan Jiang ]
  * Add comments
  * Switch to the new alignment marker type

  [ Varun Agrawal ]
  * Load Cython requirements file instead of reading it in cmake
  * Added cmake variable GTSAM_CYTHON_INSTALL_FULLPATH to include build tag directly
  * Vastly improved setup.py template
  * Specify working directory from where to call setup.py
  * print Eigen Unsupported status message correctly
  * wrap the biasHat function for PreintegratedMeasurement
  * added .gitignore for when building the sample cmake projects

  [ Fan Jiang ]
  * Add missing lf

  [ akrishnan86 ]
  * fix SfmData naming

  [ Varun Agrawal ]
  * Revert "added .gitignore for when building the sample cmake projects"

  [ akrishnan86 ]
  * review1 changes

  [ Varun Agrawal ]
  * improved result printing and use of flags for ImuFactorExample.py
  * renamed ImuFactorExample2 to ImuFactorISAM2Example
  * added function to plot trajectory incrementally
  * improvements to ImuFactorExample
  * updated file docstring for ImuFactorExample2.cpp
  * make python-install command depends on gtsam target
  * cleaner version of execution script which only needs 'make install'
  * run setup.py after installing the gtsam_eigency module
  * capture stdout in python test [only for python3]
  * newline added to end of CMake file
  * Set high level Cython/Eigency variables to reduce duplication
  * Create and use cython build directory
  * Use the high level cython variables, improve install process
  * Remove redundant postfix checking since the postfix is already added at the top level
  * updated cython wrapper README
  * In-place cython build
  * fixed CYTHON_INSTALL_PATH cmake variable wrt cache
  * Python Wrapper CMake update
  * removed unneeded install commands and updated README
  * Add python-install dependency for gtsam_unstable as well
  * make utils and test code python2 compliant
  * small improvements to the ImuFactorExample.py

  [ akrishnan86 ]
  * forking code for mfas from 1dsfm

  [ Varun Agrawal ]
  * update python build location in travis script

  [ Fan Jiang ]
  * Fix memory leak in Expressions
  * Fix TranslationFactor with Vector3 as Point3
  * Fix MSVC build

  [ Varun Agrawal ]
  * Improved paths and added checks

  [ akrishnan86 ]
  * changing mfas to use gtsam keys

  [ Jose Luis Blanco-Claraco ]
  * Fix missing DLL exported symbol

  [ Varun Agrawal ]
  * new definition for FunctorizedFactor to allow for using std::function and lambdas
  * Simplified FunctorizedFactor

  [ Fan Jiang ]
  * Fix FrobeniusWormholeFactor Python test

  [ Varun Agrawal ]
  * fix working directory for python install target
  * test SmartFactor when body_P_sensor is passed in

  [ Thomas Jespersen ]
  * ISAM2 Kitti example: Addressed review comments

  [ akrishnan86 ]
  * adding tests

  [ Mike Sheffler ]
  * Second attempt at a wrapper fix.

  [ Varun Agrawal ]
  * Abstracted out serialization code for PreintegrationBase

  [ Mike Sheffler ]
  * Unnecessary include statement

  [ Varun Agrawal ]
  * Updated  PreintegratedImuMeasurements docstring

  [ Fan Jiang ]
  * Fix lambda check in logging optimizer

  [ Varun Agrawal ]
  * Replace scoped name with direct name and instantiate base class in constructor
  * Major updates to CombinedImuFactor to make it Testable as well as serializable
  * Fix typo
  * Added and updated serialization tests to include all IMU factors
  * revert variable change

  [ akrishnan86 ]
  * tests and documentation
  * formatting headers and removing debugging code

  [ Varun Agrawal ]
  * reduced tolerance for checking jacobian

  [ Fan Jiang ]
  * add return value in gtsam_optimize

  [ Frank dellaert ]
  * Eliminated some copy/paste
  * Added g2o test files
  * Added tests on determinants of read rotations
  * Normalized quaternions before converting to Rot3 to account for limited precision in text files.
  * Avoided extra conversions to quaternions

  [ Varun Agrawal ]
  * Add indentation
  * Handle extrinsics and intrinsics for jacobian

  [ Frank dellaert ]
  * Formatted and fixed discrete examples

  [ Varun Agrawal ]
  * Use built in Matrix serialization
  * Generic Eigen::Matrix serialization for boost
  * add compiler flags to suppress warnings if built in release mode
  * Add MATLAB root and Mex paths to cmake output, align GTSAM specific output
  * Quote variable so it works on Windows
  * Use static matrix and constexpr
  * use boost serialization macro instead of make_array

  [ Fan Jiang ]
  * Added wrapping for the PCG solver in Cython
  * add comments

  [ Varun Agrawal ]
  * suppress warnings only for 3rd party code for Release builds
  * fix init issues with Vector3, use static matrices where possible
  * added note about code source and eigen resize for both static and dynamic matrices
  * Explicit type definition to handle warning
  * support for landmarks in g2o files

  [ Fan Jiang ]
  * Add check to ensure we are calling lambda on a LM

  [ Varun Agrawal ]
  * correct compiler flag for Windows

  [ Fan Jiang ]
  * Add unit test
  * use isinstance

  [ Varun Agrawal ]
  * added cmake policy for AppleClang compiler identification

  [ Fan Jiang ]
  * Move the declaration to cpp

  [ Varun Agrawal ]
  * Better way of exporting Boost serialization guid

  [ Frank dellaert ]
  * Resurrecting DiscreteBayesTree tests

  [ yetongumich ]
  * modified test

  [ Frank dellaert ]
  * Checked in pdf for easy reference
  * added printSignature and evaluate
  * Fixed link issue
  * Cleaned up formatting
  * Fixed tests

  [ Varun Agrawal ]
  * perform equality comparison on root of class hierarchy
  * correct vector init
  * delete extra pdf file
  * Revert "delete extra pdf file"

  [ yetongumich ]
  * deprecate error in noisemodel, use loss instead; revise virtual with override
  * deprecate error in noisemodel, use loss instead; revise virtual with override

  [ Frank dellaert ]
  * Extra tests on frontal keys
  * Some more refactoring of marginals
  * Fix confusion between parents and frontals
  * Added code to re-jigger Signature cpt so that frontal keys are always first, consistent with how the DiscreteElimination function works.
  * New discrete example
  * Better print
  * Cleaned up tests
  * Use dict notation in print
  * Add explicit HMM example
  * Modernized sample function

  [ yetongumich ]
  * modify testNoiseModel to use loss instead of error
  * change doc

  [ Varun Agrawal ]
  * fix serialization warning for boost::optional<Vector3>

  [ Frank dellaert ]
  * Partial Specialization
  * Add BayesNet-inst.h at end of BayesNet.h

  [ Varun Agrawal ]
  * correct indentation for Python version

  [ Mike Sheffler ]
  * Missing BOOST_SERIALIZATION_NVP wrapper macro for an argument to be serialized

  [ Jose Luis Blanco Claraco ]
  * docker tag and pip3 fixes; add a readme
  * complete README

  [ David ]
  * Fix all unit tests. Only remaining item is the analytical Jacobian for Unit3::localCoordinates.

  [ acxz ]
  * set default initialization

  [ akrishnan86 ]
  * changing MFAS to oops and refactoring
  * minor comments change

  [ Frank dellaert ]
  * Fixed conventions for Jacobians
  * Unit test for transformPoseFrom
  * Some more name changes and documentation

  [ Varun Agrawal ]
  * Added more comments for clearer understanding

  [ Fan Jiang ]
  * Bump version and switch Pose3 expmap default

  [ Varun Agrawal ]
  * nicer formatting when printing values

  [ Fan Jiang ]
  * Fix test for full Pose3 expmap
  * Remove pybind11

  [ Frank dellaert ]
  * Replaced flag with 4.1 version
  * Removed all deprecated code w Stephanie...

  [ akrishnan86 ]
  * constructor API change after review1

  [ acxz ]
  * replace boost random with std random

  [ Varun Agrawal ]
  * add axis labels to the trajectory plot

  [ acxz ]
  * use reasonable distribution names
  * use reasonable distribution name
  * remove unused base variable

  [ Varun Agrawal ]
  * fix test for FunctorizedFactor printing
  * Fix minor bugs
  * test for readG2o
  * added axis labels and figure titles as optional params
  * increase number of build cores and remove sudo requirement
  * added backwards compatibility for parseVertex

  [ Frank dellaert ]
  * Improved comment
  * Made params const

  [ acxz ]
  * pass in expected Rot3 and parameter p

  [ Jose Luis Blanco Claraco ]
  * recover SLAM serialization test

  [ akrishnan86 ]
  * changes after review - removing positiveEdgeWeights

  [ Jose Luis Blanco Claraco ]
  * Add docs on serializing expressions.
  * enable compiler warnings and errors for safer code
  * Fix all new gcc warnings/errors: make explicit virtual/override methods.
  * Avoid -Woverride in clang <12.0.0
  * relax override -Werror for now
  * Fix missing virtual dtors
  * Fix warnings on incorrect for range reference bindings
  * remove leftover cmake debug trace

  [ acxz ]
  * fix warnings on incorrect for range reference bindings
  * remove useless Planning test
  * fix return copy

  [ Fan Jiang ]
  * Copy cython files
  * Add unstable files
  * Replace with new python tests
  * Sync ImuFactorExample
  * Sync ImuFactorExample2
  * Fix Pose2 plot
  * Update to match cython
  * Update more to match cython

  [ Varun Agrawal ]
  * update ImuFactorExample.py
  * fix warnings from subplots and improve code
  * add incremental plotting function
  * update ImuFactorExample2.py
  * rename ImuFactorExample2 to more descriptive name

  [ acxz ]
  * add override keyword

  [ Varun Agrawal ]
  * replaced SimpleCamera with PinholeCamera and updated tests
  * sort imports in python examples

  [ acxz ]
  * workaround to dereferencing a nullptr

  [ Jose Luis Blanco Claraco ]
  * Add genericValue() helper
  * Values initializer_list constructor

  [ Varun Agrawal ]
  * use \n instead of endl

  [ Jose Luis Blanco-Claraco ]
  * docs and missing traits
  * Add variadic-template N-ary ExpressionFactor
  * typo

  [ Jose Luis Blanco Claraco ]
  * Deprecate ExpressionFactor2
  * port ExpressionFactor{2->N}

  [ Jose Luis Blanco-Claraco ]
  * Add unit test revealing deserialization error
  * Fix serialization bug in RangeFactor

  [ Fan Jiang ]
  * Fix import typo
  * Change to new KeyVector accessor

  [ Jose Luis Blanco Claraco ]
  * Deprecate ExpressionFactor2 for 4.1
  * Recover the convenient evaluateError() method
  * fix evaluateError() methods

  [ Varun Agrawal ]
  * fixed tests

  [ acxz ]
  * remove empty smart folder
  * remove smart from cmake

  [ Varun Agrawal ]
  * fix indentation of macro guard

  [ Fan Jiang ]
  * Sync with varun's pr

  [ akrishnan86 ]
  * add binary measurement class

  [ Varun Agrawal ]
  * wrap preintegrated function

  [ Fan Jiang ]
  * Moved python files
  * import from is working
  * Sync with new_wrapper develop branch
  * remove function import
  * Import classes used more than once
  * Newline

  [ Stephanie McCormick ]
  * change from const Params back to non-const Params

  [ Varun Agrawal ]
  * remove virtual

  [ Frank Dellaert ]
  * Allow graph to be queried
  * VectorizedGenerators
  * Removed superfluous size, added doxygen partitions
  * Allow to pass in pre-computed generators. Should save some energy.
  * Update README.md

  [ Varun Agrawal ]
  * fix warning in FrobeniusWormholeFactor

  [ akrishnan86 ]
  * changes with passing unit tests

  [ mawallace ]
  * Remove set_zlabel from plot_pose2

  [ akrishnan86 ]
  * binary measurement wrap

  [ ss ]
  * Fix pose2 align bug.

  [ Sam Bateman ]
  * added mutex to BayesTreeCliqueBase for access to cached variable and added copy/copy assignment constructors to allow for full previous functionality while adding thread safety to marginalCovariance.
  * update spelling/indent

  [ Varun Agrawal ]
  * Revert "fix warning in FrobeniusWormholeFactor"
  * fix warning in FrobeniusWormholeFactor
  * function for consistent width printing of CMake flags

  [ akrishnan86 ]
  * sfm changes to docs, format, wrapper

  [ ss ]
  * Finish Sim3 align and transformFrom functions.

  [ akrishnan86 ]
  * update binary measurement brief

  [ ss ]
  * Fix document.
  * Improve code quality.
  * Update doc.

  [ Frank Dellaert ]
  * Added Spectra 0.9.0 to 3rdparty

  [ Varun Agrawal ]
  * example using CombinedImuFactor
  * renamed ImuFactorExample2 to be more consistent with naming
  * revert author change
  * reworked basic ImuFactorsExample
  * use boost program_options for command line parsing

  [ alexma3312 ]
  * Change typedef into using.

  [ Varun Agrawal ]
  * default string value for printing Imu factors
  * fix FrobeniusBetweenFactor declaration
  * comment out timing-out CI stage

  [ Frank Dellaert ]
  * Templated some methods internally
  * Very generic parseToVector
  * refactored load2d
  * Templated parse methods
  * Turn off gcc build as it times out every time
  * Avoid clang warnings about double-brace initialization
  * Hunted down deprecated use of parse3DLandmarks

  [ Fan Jiang ]
  * Backport GitHub Actions CI (#259)
  * Remove travis and appveyor
  * Limit python triggering
  * Remove pybind build
  * Correct .travis.sh
  * switch to boost 1.69.0
  * typo
  * Add a display for current boost version
  * Manually specify BOOST_ROOT

  [ Frank Dellaert ]
  * Some behavior changes.

  [ Fan Jiang ]
  * typo
  * Ignore system boost
  * Fix wrong include path
  * Do not search for the cmake boost file
  * Real reason why cannot find boost

  [ Varun Agrawal ]
  * renamed from build-cython to build-python
  * remove travis.python.sh and instead add script in .github folder
  * updates to python CI yml file
  * moved CI script for unix based systems
  * updates to macOS and Linux CIs
  * fix script name
  * fix cython path

  [ Frank Dellaert ]
  * Fixed covariance bug

  [ Varun Agrawal ]
  * fix build script
  * set LD_LIBRARY_PATH
  * test LD_LIBRARY_PATH
  * correctly add LD_LIBRARY_PATH boost lib directory
  * remove unnecessary prints
  * add description for CI scripts

  [ alexma3312 ]
  * Fix GTSAM_TYPEDEF_POINTS_TO_VECTORS.

  [ Frank Dellaert ]
  * Addressed review comments

  [ Fan Jiang ]
  * Always build unstable
  * Add Python to the name of CI

  [ Frank Dellaert ]
  * Feature/shonan averaging (#473)

  [ Varun Agrawal ]
  * replace atof/atoi with standardized stof/stoi

  [ Fan Jiang ]
  * Ported MATLAB Examples
  * Python supplementary files
  * Remove old wrap
  * Squashed 'wrap/' content from commit 21ee82f75
  * Initial migration
  * Fixes the specialization order
  * Squashed 'wrap/' changes from 21ee82f75..49d831588

  [ alexma3312 ]
  * Correct variable names and refactor code.

  [ Fan Jiang ]
  * Fix some unstable MATLAB examples
  * Small fixes
  * Change build target
  * No submodules

  [ Jose Luis Blanco-Claraco ]
  * Include 3rdparty libraries as 'system' headers to avoid warnings

  [ Fan Jiang ]
  * Remove offending include
  * Remove python folder temporarily
  * Renamed cython to python
  * Remove eigency
  * Migrated all examples and tests
  * Add supplimentary files used by the new pybind11 wrapper
  * update readme
  * Disable unstable MATLAB by default
  * Add documentation to the templates
  * Document tricks to allow direct import from xxx
  * Add docs for preamble and specialization.h
  * Reformat CMake files
  * Add MATLAB root prompt
  * Fix CI Script for Pybind11

  [ Varun Agrawal ]
  * Improve Github Actions (#476)

  [ Fan Jiang ]
  * Add dependency for python-install

  [ Frank Dellaert ]
  * Fix override warning
  * Recreated initializeRandomlyAt
  * Added Shonan Averaging unit tests

  [ Frank dellaert ]
  * Fixed example printing

  [ Varun Agrawal ]
  * CI for special cases
  * reduce special cases to only Ubuntu+GCC, disable Python CI for Ubuntu GCC9
  * updated step name
  * comment out python ubuntu-gcc-9 completely

  [ Claudius Tewari ]
  * Fix "Wrapper" heading anchor link in README.

  [ Frank dellaert ]
  * Added g2o to search
  * Transpose translation when printing
  * Moved common code to InitializePose

  [ alexma3312 ]
  * Change sim3 variable from T to S.

  [ Frank dellaert ]
  * Shonan C++ CLI
  * Python CLI

  [ Fan Jiang ]
  * Add script to update the wrap subtree

  [ alexma3312 ]
  * Modify the print function print out format.

  [ Frank dellaert ]
  * Fixed test

  [ Fan Jiang ]
  * Fix Python wrapper with TBB on
  * Add missing newline

  [ Frank dellaert ]
  * Fixed Point2 and Point3 to have similar behavior as in C++ - to also take vectors - to be initialized to Nan
  * Added more support for Pose2 data
  * Now plots 2D or 3D trajectories (on a 3D plot)
  * Made 2D and 3D translation recovery work, and added plot
  * Remove distinction between Typedef and Point3.

  [ Fan Jiang ]
  * Remove GTSAM_DEFINE_POINTS_TO_VECTORS
  * Cleanup preamble and specialization
  * Add TBB test for Python and GTSAM C++
  * Fix special builds
  * Add TBB Python CI to matrix

  [ Frank dellaert ]
  * Address review comments
  * Fixed compilation and removed absolute path.

  [ Fan Jiang ]
  * Fix TBB env not propagated
  * Fix preamble.h

  [ alexma3312 ]
  * Replace rotAveraging with gtsam::FindKarcherMean.
  * Add Compatibility unittest.
  * reformat pose3 declaration.
  * create a helper function to remove repeat code.
  * Add a comment for transformFrom pose.

  [ Fan Jiang ]
  * Bump version to 4.1.0

  [ alexma3312 ]
  * Modify comments and move header file declaration.

  [ jingwuOUO ]
  * Replace MakeATangentVector with MakeATangentVectorValues

  [ Fan Jiang ]
  * Make sure our readme is proper restructuredText

  [ alexma3312 ]
  * Add mean function into Point3 class.
  * Create AlignGivenR function and refactor code.
  * Change CMakelist file to fix merge conflict.

  [ Fan Jiang ]
  * Remove unnecessary comment
  * Proper method to deal with markdown in setup.py

  [ Frank dellaert ]
  * Linting and getAnchor wrap

  [ jingwuOUO ]
  * Fixed checkwitheigen testcase failure

  [ Frank dellaert ]
  * added missing namespace

  [ jingwuOUO ]
  * Rename and small fix.
  * Changed TangentVectorValues test

  [ akrishnan86 ]
  * wrapping translation recovery doesnt build

  [ Christian Berg ]
  * Added Jacobians for Rot3::RzRyRx and related named constructors

  [ akrishnan86 ]
  * TAvg wrapper builds

  [ Varun Agrawal ]
  * Define dataset directory for Python package
  * Add python dataset directory to search options
  * Add data files to python package
  * Better location for setting Python dataset directory in CMake

  [ Christian Berg ]
  * Also add jacobians to Rot3::RzRyRx for when quaternions are selected

  [ Varun Agrawal ]
  * Print Vectors horizontally for easier reading
  * Undo previous changes for common directory
  * don't wrap findExampleDataFile
  * Add python version of findExampleDataFile
  * Undo Point operator overloading and instead update NavState print
  * check for null pointer in general

  [ Timothy Setterfield ]
  * fixed issue that pos and vel are in nav frame
  * added another coriolis unit test
  * added cached rotation bRn
  * cleaned up notation
  * fixed typo

  [ Varun Agrawal ]
  * new function readBal which returns the SfmData object, allowing for single line calling
  * follow Google Style for function naming
  * Wrapper updates

  [ JIanzhu Huai ]
  * correct coefficients of approximated SE3 Q_r

  [ Varun Agrawal ]
  * update minimum Boost version required

  [ JIanzhu Huai ]
  * test computeQforExpmapDerivative

  [ Fan Jiang ]
  * Wrap DSFMap so SFM can use them
  * Add the unit test for DSF in Python
  * Fix include issue

  [ akrishnan86 ]
  * translation recovery py test

  [ Akshay Krishnan ]
  * translation recovery unit tests pass
  * remove binarymeasurementsunit3 class in wrapper

  [ alexma3312 ]
  * remove commented out code
  * document and use std::tie
  * Refactor mean and mean_pair test case.

  [ akrishnan86 ]
  * adding binarymeasurementsunit3

  [ Frank dellaert ]
  * Fix typo

  [ Varun Agrawal ]
  * ISAM2 helper methods and wrapper to evaluate nonlinear error

  [ Christian Berg ]
  * Added Jacobians for Rot3::xyz and related conversions to euler angles

  [ akrishnan86 ]
  * code changes to increase modularity
  * fixes1
  * fixes2

  [ Akshay Krishnan ]
  * fixes3

  [ alexma3312 ]
  * Fix double computation.

  [ Christian Berg ]
  * Throw exception in Rot3::RQ for derivatives close to singularity

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from 49d831588..314b121fd
  * Use cmake to identify best Python version if Default requested
  * Make SharedNoiseModel as optional parameter, remove hardcoded verbosity, and silence test.
  * print version of TBB found
  * Don't print private compile options
  * fix wrapper TODOs for ISAM2 and BearingRange
  * minor formatting

  [ akrishnan86 ]
  * wrap MFAS

  [ Akshay Krishnan ]
  * changing to boost shared_ptr

  [ Ayush Baid ]
  * Adding logmap API which applied a logarithmic map taking the object to the argument
  * Removing logmap in case of failure

  [ alexma3312 ]
  * Refactor Align with short functions.

  [ Akshay Krishnan ]
  * remove unusede ptr member in MFAS
  * translation averaging example

  [ John Lambert ]
  * Update README.md
  * improve python wrapper cmake flag instructions
  * Update README.md
  * Update README.md
  * Update README.md
  * use cleaner checkmark symbol in readme
  * update example list
  * update python examples list
  * add p
  * add python equivalent of c++ sfm data calls
  * cannot retrieve p attribute

  [ akrishnan86 ]
  * adding documentation for example

  [ Varun Agrawal ]
  * update numericalDerivative functions to take in optional dimension template parameter and added corresponding tests

  [ John Lambert ]
  * remove BAL for now, and add get3dPoint() for p access
  * mark SFMExample_bal as still in progress

  [ Varun Agrawal ]
  * remove logmap function from LieVector and LieMatrix
  * added calibrate with jacobians for Cal3Bundler

  [ John Lambert ]
  * rename get3dPoint() to point3()

  [ Varun Agrawal ]
  * combine the calibrate functions into one
  * put the jacobians at the end so that the calibrate function can be wrapped
  * make tolerance as a constructor param
  * update calibrate in wrapper

  [ lcarlone ]
  * adding robust cost function - version 1
  * robust noise in place - test fails due to non-isotropic covariance?
  * solving issue with robust model

  [ Varun Agrawal ]
  * small fixes to ensure marginals are computed correctly

  [ lcarlone ]
  * attempting robustification in Frobenius factor

  [ Varun Agrawal ]
  * update wrapper to also work for Matlab

  [ lcarlone ]
  * added nice unit test
  * improved test

  [ akrishnan86 ]
  * naming and other changes - review1

  [ JIanzhu Huai ]
  * test Qr with old codebase fails
  * correct Qr coefficients in approximation

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from 314b121fd..5e1373486

  [ alexma3312 ]
  * Move private func to .cpp.
  * Change getXY to calculateScale.
  * Emphasize Rdb is a vector.
  * Change input into centroids.
  * Refactor code to increase speed.

  [ Varun Agrawal ]
  * wrapped BearingRange::Measure method and removed deprecated classes

  [ lcarlone ]
  * added check and unit test

  [ Varun Agrawal ]
  * remove all LieScalar/LieVector/LieMatrix references from wrapper
  * MATLAB readme update
  * remove Point3 serialization test since Point3 is now just a vector

  [ lcarlone ]
  * added control over minimum rank in ShonanAveraging example, and resolved hard-coded sigma in FrobeniusFactor

  [ alexma3312 ]
  * Fix quaternions test failure.

  [ akrishnan86 ]
  * updating defaultdict init

  [ alexma3312 ]
  * Throw an exception when n=0 .

  [ Varun Agrawal ]
  * use implicit function theorem to compute jacobians of Cal3Bundler::calibrate
  * added test for Cal3Bundler::calibrate Jacobians1
  * make Cal3Bundler wrapper constructor backwards compatible
  * fixed sized matrices and minor improvements

  [ alexma3312 ]
  * Modify error message to be more descriptive.

  [ Varun Agrawal ]
  * compute inverse only once
  * wrap PinholeCameraCal3Bundler

  [ Frank Dellaert ]
  * Small formatting changes and removal of test header
  * New method "add" as in GaussianFactorGraph
  * Re-formatting and using "add"/"auto" where we can.
  * Fixed spelling mistake

  [ lcarlone ]
  * reverted changes to cproject and language settings
  * fixed typo
  * reverted changes to cproject

  [ akrishnan86 ]
  * renaming variables

  [ Frank Dellaert ]
  * Changed name to avoid template confusion in VC 2016
  * Clean up code and tests and use "means"

  [ Varun Agrawal ]
  * remove all Cython references

  [ Frank Dellaert ]
  * Update Point3.h

  [ John Lambert ]
  * add

  [ akrishnan86 ]
  * outlier rejection in separate fn and other readability changes
  * readability changes
  * fixing one variable that was not renamed

  [ Varun Agrawal ]
  * find python if using Default

  [ Frank Dellaert ]
  * Fixed include error

  [ Varun Agrawal ]
  * check if mex compiler exists for Matlab wrapper, formatting

  [ akrishnan86 ]
  * removing shared ptr, iostream, renaming

  [ Varun Agrawal ]
  * added normalize function to orthogonalize the rotation after composition
  * normalized needs to be called explicitly

  [ John Lambert ]
  * add WIP PR

  [ Varun Agrawal ]
  * Moved normalize next to ClosestTo and add more docs

  [ Jose Luis Blanco Claraco ]
  * refactor cmake scripts into smaller files
  * Remove obsolete comments
  * Use system eigen3 only if first quietly found.

  [ Fan Jiang ]
  * Squashed 'wrap/' changes from 5e1373486..2192b194e
  * Resurrect serialization tests
  * Add unit test for python serdes
  * Squashed 'wrap/' changes from 2192b194e..dfa624e77

  [ Jose Luis Blanco Claraco ]
  * Use camel case for cmake files
  * Revert use system Eigen if found

  [ Akshay Krishnan ]
  * Wrapping SfmCamera to be used with GeneralSFMFactor

  [ John Lambert ]
  * remove breakpoints

  [ Akshay Krishnan ]
  * Renaming SFMCamera to PinholeCameraCal3Bundler

  [ Fan Jiang ]
  * Fix LLVM repo keys

  [ jingwuOUO ]
  * Add acc power method in Alg6
  * Completed and tested power method with unittest
  * Added PowerMinimumEigenValue method and unittest.
  * feat: Add  Best Heavy Ball alg  to set beta
  * Refactor power and accelerated method

  [ Sushmita ]
  * python wrapper for sfmdata

  [ Fan Jiang ]
  * Add comments

  [ Frank dellaert ]
  * Fix warning on clang
  * Fixed some warnings
  * Printing now transpose
  * Simplified evaluateError
  * Use keyFormatter
  * Added unit test for issue 561

  [ jingwuOUO ]
  * Reformat code.
  * Small fix

  [ John Lambert ]
  * use argparse defaults
  * make a note about how the eror drops

  [ Fan Jiang ]
  * Add comments
  * Add comments

  [ John Lambert ]
  * fix typo

  [ Fan Jiang ]
  * Fix inteminent sks keyserver failure
  * Add notes

  [ John Lambert ]
  * clean up comments

  [ Sushmita ]
  * unittested features in SfmData
  * python wrapped SfmData and SfmTrack
  * python wrapper sfmtrack reflected in other files

  [ Jose Luis Blanco-Claraco ]
  * Use METIS system library if so selected

  [ John Lambert ]
  * renamed myData to scene_data, and explained BAL parameterization
  * update list of C++ examples that have been ported to Python

  [ Sushmita ]
  * changed Measurements to measurements
  * wrapped sfmtrack
  * removed measurements from sfmdata

  [ jingwuOUO ]
  * Revise according to Frank and David's comments
  * Correct unittest input error
  * Added more detailed documentation
  * Fixed not solve errors and detailed documentation

  [ Jose Luis Blanco-Claraco ]
  * Add alternativeName()

  [ Jose Luis Blanco Claraco ]
  * replaced lambda with class plus functor
  * less verbose name path for SymbolGenerator

  [ Sushmita ]
  * changed setP method name removed commented code
  * remved commented code

  [ jingwuOUO ]
  * Revised as David's second review
  * Refined unittest

  [ Sushmita ]
  * added new constructor and changed to emplace

  [ Jose Luis Blanco-Claraco ]
  * Automatic detection of correct suggest-override flag

  [ Tim McGrath ]
  * adding additional Unit3 support in the wrapper: PriorFactorUnit3, Values::insert/update/at(Unit3)

  [ jingwuOUO ]
  * Delete forcing compare eigenvector in unittest
  * Revised documentation

  [ Sushmita ]
  * sfmtrack constructor changed to accept point

  [ Fan Jiang ]
  * Attempt to fix spooky boost in Homebrew
  * Use my tap
  * Use my tap
  * Use explict tap name
  * Last resort: use the explict 1.73 formula
  * Use my tap

  [ jingwuOUO ]
  * Fixed forcing comparing eigenvector.

  [ Varun Agrawal ]
  * Added flag for absolute error
  * add test
  * cleaner assertion
  * Consistent interface for pixel center (#579)
  * minor typo fixes
  * Fix python discovery for MATLAB wrapper

  [ Jose Luis Blanco-Claraco ]
  * Avoid redundant calls to error()
  * Add iteration hook in non-linear optimizers

  [ Varun Agrawal ]
  * Use new env files for github actions
  * Roustify BinaryMeasurements in a functional way, plus formatting
  * Remove goto, update docs, formatting
  * delete old, unused file
  * ubuntu with gcc-9 in CI
  * fix path setting for Windows

  [ Martin Vonheim Larsen ]
  * Docs: Use https for mathjax

  [ Varun Agrawal ]
  * Force EXPMAP option for both if either POSE3 or ROT3 is set
  * uncomment tests
  * Improved CayleyChart Local
  * Similarity3 test only for Rot3 Expmap
  * comment out Windows build which is timing out
  * Update Boost since 1.69.0 has been deprecated in CI images
  * Comment out Windows 2016 since it times out
  * Revert "Improved CayleyChart Local"
  * Use older and faster Cayley transform but add det check and docs
  * Print message when either Pose3 or Rot3 expmap is ON
  * CI path for Cayley transform
  * small doc fix
  * Add new assertions and update tests
  * pass in params to optimizer
  * upload build directory after workflow completes

  [ jingwuOUO ]
  * Fixed doxygen

  [ Jose Luis Blanco Claraco ]
  * Add docs, fix ctor placement
  * further extended docs

  [ Varun Agrawal ]
  * use KeyVector to allow proper wrapping with TBB
  * update MFAS tests
  * fix indentation and add upload for Windows
  * correct form for workspace env variable
  * differentiate between Release and Debug builds
  * Better fkag naming, and more docs
  * placed MEX check to new cmake file
  * restructuring
  * encapsulated and updated all the CMake related to Matlab
  * better flag name and docs
  * only upload release builds
  * enforce constant term in quadratic to be 0
  * Make Values::at return as const
  * correct conditional syntax
  * FIx indentation for Values-inl.h
  * syntax update

  [ jingwuOUO ]
  * Added test for subgraph preconditioner in shonan
  * Refined error message in subgraphbuilder

  [ Frank dellaert ]
  * Initial design

  [ lcarlone ]
  * starting to create test and code for gncParams

  [ Sushmita ]
  * vector of cameras and triangulation function wrapped

  [ lcarlone ]
  * added equals in NonlinearOptimizerParams
  * params parsed correctly
  * added gnc loop
  * now we have very cool tests!
  * 2 tests to go
  * simplified small test to make it more understandable
  * 1 test to go
  * stuck on conversion of noise model
  * finally I have a way to properly change the noise model!
  * working on make graph
  * new constructor test which gets rid of robust loss now passes!
  * yay! only the final monster to go!

  [ Varun Agrawal ]
  * Assign pointer to prevent errors
  * fixes to plot code
  * suppress warnings from clang as well

  [ lcarlone ]
  * added verbosity
  * ladies and gents... GNC!
  * added functionality to fix weights
  * correct formatting
  * done - PGO works like a charm!

  [ Sushmita ]
  * docs fixed and error threshold reduced
  * moved landmark variable to setup
  * push back arguments changed to const reference
  * removed commented code

  [ akrishnan86 ]
  * new test doesnt pass
  * translation recovery unit tests pass

  [ Varun Agrawal ]
  * Deprecate SimpleCamera properly
  * deprecate SimpleCamera tests

  [ jingwuOUO ]
  * Fixed typo

  [ Varun Agrawal ]
  * Jacobians for Camera models
  * update Python test
  * Revert "FIx indentation for Values-inl.h"
  * uncomment calibration applications
  * Removed unnecessary copy constructor and robust noise model is caller's responsibility
  * throw runtime errors and explicitly form robust noise model
  * makeNoiseModelRobust assumes responsibility for robustifying noise models
  * use goto flow
  * formatting

  [ jingwuOUO ]
  * Added more description to the toyExample.g2o

  [ Varun Agrawal ]
  * fix tests
  * Don't throw error for Kappa and test parameter print

  [ jingwuOUO ]
  * Added dense matrix test case in power/acc

  [ Varun Agrawal ]
  * added Imu parameter units to doc
  * formatting
  * Common function to compute Jacobians of calibrate method

  [ akrishnan86 ]
  * changing test names and adding documentation

  [ Varun Agrawal ]
  * Revert "added Imu parameter units to doc"
  * Revert "formatting"

  [ akrishnan86 ]
  * documenting member variables

  [ Varun Agrawal ]
  * Added units for imu noise and bias sigmas
  * common header file for all calibration models
  * Base class for all calibration models
  * Refactor Cal3_S2 and Cal3_S2Stereo classes
  * Refactor all Cal3D based models
  * Refactor Bundler and Fisheye models
  * Minor updates
  * Remove deprecated calibration method from wrapper
  * replace typedef with using

  [ Sushmita ]
  * templated functions where possible
  * removed push_back method from cameraset wrapper
  * added utility functions and code cleanup

  [ Varun Agrawal ]
  * modernized default constructors
  * Cal3 code improvements
  * matrix_inverse() -> inverse()
  * remove using-namespace and fix print test
  * Added tests for printing, plus small formatting
  * stream printing for all calibration models
  * Improved constructor for loading parameters from file
  * Override dim(), cleanup, and add unicode
  * Added tests for checking calibration model dimensions
  * Consistent and better formatting
  * additional formatting

  [ Jose Luis Blanco Claraco ]
  * SymbolGenerator: add chr() and made constexpr-capable

  [ Varun Agrawal ]
  * mark getters as const
  * Helper method to robustify measurements
  * calibrate and uncalibrate for Cal3_S2Stereo model
  * throw error if robust model used but not specified in parameters

  [ Sushmita ]
  * added cmake and preamble
  * moved measurement generation to separate function
  * code formatted

  [ Varun Agrawal ]
  * disambiguate overloaded base class

  [ Sushmita ]
  * removed typedef and formatted code

  [ Varun Agrawal ]
  * function to save graph as graphviz file via wrapper

  [ Sushmita ]
  * moved camera_set to generate_measurements

  [ lcarlone ]
  * moved class to .h
  * added comments
  * fixed typo
  * added more explanation on throw

  [ Varun Agrawal ]
  * added flag to enable optimality certification, some formatting
  * correct flag checking
  * Revert "code formatted"
  * format python triangulation tests
  * more formatting
  * remove unused imports

  [ jingnanshi ]
  * fix comment

  [ Varun Agrawal ]
  * formatting and small fixes

  [ jingnanshi ]
  * TLS wip
  * tls done except unit tests
  * minor fix
  * fix scoping
  * mu initialization test & minor formatting fixes
  * mu update test
  * correctly check relative difference between mu valus at consecutive iterations
  * test fix
  * more unit tests

  [ Varun Agrawal ]
  * better documentation

  [ Russell Buchanan ]
  * Adds unit test for imu preintegration of a single step

  [ lcarlone ]
  * fixed small typos

  [ Varun Agrawal ]
  * explicitly initialize Point3
  * formatting

  [ jingwuOUO ]
  * Added the example graph in powerMethodExample.h
  * Refined reference documentation
  * Make purturb static

  [ Varun Agrawal ]
  * refactored code for ImuMeasurements
  * refactored code for testing ImuPreintegration with impact
  * add simulation data
  * save time in CSV, formatting

  [ lcarlone ]
  * templating on params is still problematic
  * finally fixed the typedef
  * fixed templating, added a strict unit test on inlier threshold
  * made function name less ambiguous, added more comments on inlierThreshold

  [ jingnanshi ]
  * Fix TLS convergence check
  * update function name
  * fix test

  [ lcarlone ]
  * - fixed stopping conditions - handled degenerate case in mu initialization - set TLS as default - added more unit tests

  [ jingnanshi ]
  * minor fixes

  [ Varun Agrawal ]
  * wrap Symbol class and methods
  * minor formatting of cmake file

  [ Ayush Baid ]
  * Wrapping Cal3Bundler's prior and GeneralSFMFactor2

  [ lcarlone ]
  * moved GncParams to separate file, addressing comments by Frank, 1/n
  * renamed enum
  * addressed all except 2 comments by Frank. waiting for inputs on the 2 outstanding issues

  [ Ayush Baid ]
  * Adding Cal3DS2 prior factor and using template instead of typedefs

  [ lcarlone ]
  * moved gncLossType outside params

  [ cttdev ]
  * Adding BearingFactor3D to the wrapper definition.

  [ lcarlone ]
  * addressed final comments by Frank

  [ Varun Agrawal ]
  * Pose3 interpolateRt method (#647)

  [ Ayush Baid ]
  * adding serialization and other functions to enable testing
  * adding track serialization and testable trait
  * improving formatting
  * fixing variable names and comments
  * adding serialization functions to wrapper

  [ Varun Agrawal ]
  * remove build upload since it can't be used downstream

  [ Ayush Baid ]
  * fixing xml serialization issues
  * reverting SfmTrack to struct
  * printing out the 3d point
  * adding equals function to wrapper
  * adding inline comment for round trip
  * Adding serialization support to be used for GT-SFM (#650)

  [ Varun Agrawal ]
  * documentation for compiling on windows
  * improvements to windows doc
  * Squashed 'wrap/' changes from dfa624e77..09f8bbf71
  * updates to Cmake to use the new wrap package
  * updated python setup files so that example data is loaded correctly
  * more precise python version control in CI
  * Revert "more precise python version control in CI"

  [ Frank Dellaert ]
  * add virtual constructor
  * Removed reference for iterating over values. Also used auto where I could, when changing.

  [ Varun Agrawal ]
  * fix metis based warnings in CMake and compiling
  * add std namespacing
  * fix warnings for vectors and matrices
  * verbose printing of exceptions
  * remove verbose flag and print exception to std::cerr
  * cleanly initialize matrices in test
  * remove exception print, add TODO

  [ Ayush Baid ]
  * adding default color values to fix equality check

  [ Varun Agrawal ]
  * update completed TODOs
  * add unit test for NonlinearFactor weight with different noise models

  [ John Lambert ]
  * make r,g,b part of constructor w/ default values
  * add getter for rgb
  * make getter const

  [ Varun Agrawal ]
  * use older form of CMake install
  * add docs for cmake update
  * follow correct doxygen format
  * Squashed 'wrap/' changes from 09f8bbf71..186ed2c79
  * Squashed 'wrap/' changes from 186ed2c79..85d34351c

  [ David ]
  * Add getters to line3

  [ John Lambert ]
  * add robust shonan updates to python wrapper

  [ RamadanAhmed ]
  * Fix GTSAM_EXPORT for some classes and function

  [ Varun Agrawal ]
  * added FunctorizedFactor2

  [ Toni ]
  * Split .h/.cpp, use const& (WIP)

  [ Jose-Luis Blanco Claraco ]
  * CMake scripts compatible with gtsam as git submodule

  [ Ayush Baid ]
  * changing robust noise model to Gaussian

  [ Toni ]
  * Move example to gtsam_unstable
  * Fix formatting
  * Remove gtsam_unstable lib from examples
  * Fix formatting

  [ Gerry Chen ]
  * Mandy+Fan's original code for converting sparse matrices to Eigen format
  * merge Mandy + Fan's sparseJacobian unit test additions
  * organize/isolate sparseEigen functionality
  * fix off-by-one bug
  * cleanup

  [ jingwuOUO ]
  * Set estimateBeta() as optional

  [ Russell Buchanan ]
  * clean up

  [ Gerry Chen ]
  * rename matrix type from `SpMat` to `SparseEigen`
  * roll back some cosmetic changes to minimize the diff
  * SparseEigen docstring
  * typo: `expected` changed to `expectedMatlab`

  [ David Wisth ]
  * Add a simplifed version of the minimal failing example

  [ Gerry Chen ]
  * timing sparse eigen
  * minor efficiency modifications

  [ Varun Agrawal ]
  * use streams instead of printf
  * use of passed in stream for print capture
  * stream printing for Pose2
  * add BearingRange measured to wrapper
  * add override and formatting
  * remove cout statements from testImuPreintegration tests

  [ David Wisth ]
  * Add hessian calculation

  [ Gerry Chen ]
  * add generic optional parameters to sparseJacobian Also, the unit test changed due to a 0 entry that was previously wrongly included in the b-column of the sparse representation.
  * more generic sparseJacobianInPlace function
  * eliminate copy/pasta from SparseEigen with generic version of sparseJacobian
  * populate sparse matrix with `insert` rather than `setFromTriplets` About 5% speed improvement.

  [ Varun Agrawal ]
  * upgrade minimum required Boost version to 1.67.
  * Revert "upgrade minimum required Boost version to 1.67."
  * add known issues section with info about march=native

  [ Gerry Chen ]
  * move SparseMatrixBoostTriplets typedef to gfg
  * remove templating while maintaining efficiency Templating still used in cpp file for generic-ness, but not exposed anymore
  * revert Matrix.h
  * formatting

  [ Frank Dellaert ]
  * use transform rather than deprecated static function
  * Got rid of extra keys
  * Got rid of static versions of methods
  * Cleaned up derivative code
  * Cleanup

  [ Toni ]
  * Fix can be marked override warning

  [ Varun Agrawal ]
  * make non-editable CMake variables as INTERNAL
  * set TBB default to Release unless TBB_USE_DEBUG_BUILD is set

  [ lcarlone ]
  * changed barcsq to be a vector, such that the user can provide a bound for each factor
  * trying to include chi2
  * working unit tests: added chi2
  * done with new default noise thresholds!

  [ Varun Agrawal ]
  * fix bug in Pose2 print
  * use standard function to check for empty string

  [ Gerry Chen ]
  * remove unnecessary function overloads and typedefs
  * remove InPlace jacobian from .h file
  * fix comment and remove whitespace diff
  * disambiguate double template >>
  * replace sparseJacobian with "fast" version
  * auto and reserve fewer

  [ Peter Mullen ]
  * type in test hidden by duplicate test values

  [ Toni ]
  * Fix override warnings: modernize-use-override

  [ Frank Dellaert ]
  * cleanup

  [ lcarlone ]
  * improved comments
  * removed commented line

  [ jingnanshi ]
  * use std namespace qualifier

  [ Frank Dellaert ]
  * Comments

  [ Toni ]
  * Fix issue #689
  * Remove unnecessary include eigen3

  [ Jose Luis Blanco Claraco ]
  * Avoid target collision if gtsam used as submodule

  [ Mostafa ]
  * Update LieGroups.lyx
  * Generate LieGroups.pdf

  [ lcarlone ]
  * starting to implement tests and class for DisplacedPinholeCamera

  [ David Wisth ]
  * Add new oriented plane 3 factors with local linearisation point
  * Update print method of OrientedPlane3Factor
  * remove deprecated Unit3::error() which is replaced by Unit3::errorVector()
  * Update documentation on new factor

  [ Fan Jiang ]
  * Fix GTSAM MATLAB
  * Squashed 'wrap/' changes from 85d34351c..b28b3570d
  * Use latest Boost

  [ David Wisth ]
  * Revert "remove deprecated Unit3::error() which is replaced by Unit3::errorVector()"
  * remove the error() function from OrientedPlane3 (it had incorrect derivatives)
  * Tidy up comments and use cpplint
  * small tidy and fix unit tests

  [ John Lambert ]
  * Start moving Sim(3) functionality into Python wrapper

  [ David Wisth ]
  * Add inline comments on commented-out unit tests

  [ Asa Hammond ]
  * Initial implimentation of a Constant Velocity Constraint between NavStates
  * add gtsam namespace
  * bind a lambda instead of a static function

  [ John Lambert ]
  * add sim3 Point3 align to wrapper
  * Fix typo in using -> typedef conversion
  * move sim3 to stable version
  * move unit test out of gtsam unstable
  * move typedef to header file
  * add Align() for pose3pairs

  [ Asa Hammond ]
  * Add docstrings, use update() to build predicted state and build the error calc
  * remove AAA style for Dellaert style on simpler types
  * rename some vars for consistency
  * static const for placeholder vars
  * fixup noisemodel so its correct dimension
  * cleanup some cruft, add license text
  * corrected license header

  [ John Lambert ]
  * add standard interface for Sim3 in wrapper

  [ Asa Hammond ]
  * test cleanup

  [ John Lambert ]
  * add interface for transformFrom
  * PointPairs to Point3Pairs, and move to Point3.h
  * move PointPairs to Point3.h
  * update the docstring
  * Rename PointPairs to Point3Pairs everywhere per popular demand
  * add a unit test for line case
  * add another unit test, but this one fails
  * move Point3Pairs to Point3.h part of gtsam.i
  * fix notation
  * fix bugs in Karcher mean
  * switch typedef to using per popular request
  * update author list

  [ Akshay Krishnan ]
  * unit test + fix segfault

  [ akrishnan86 ]
  * formatting changes

  [ John Lambert ]
  * Use brew's boost, instead of Fan's version
  * fix notations
  * clean up Sim(3) notations
  * update test notation to have just 1 world frame, and fix typo in abPointPairs
  * dont conflate notation on aTb

  [ Ayush Baid ]
  * Squashed 'wrap/' changes from b28b3570d..d37b8a972
  * Squashed 'wrap/' changes from d37b8a972..10e1efd6f
  * enabling markers and testing pickle roundtrip for few classes

  [ Varun Agrawal ]
  * offload matlab wrapping to the wrap project
  * Make matlab wrapping rely completely on the wrap project

  [ John Lambert ]
  * improve docstring
  * improve docstring

  [ Varun Agrawal ]
  * update Matlab CMakeLists.txt to use the wrapper
  * delete example project since it is now its own git template
  * Squashed 'wrap/' changes from b28b3570d..b0eb968f2

  [ John Lambert ]
  * add const on Rot3
  * improve docstring
  * reformat with black
  * use different brace indent format

  [ Varun Agrawal ]
  * Fix Matlab tests and add saveGraph method to GaussianBayesNet

  [ Asa Hammond ]
  * Avoid derivative calcs if they aren't asked for
  * Move to fixed size matrix for derivative calculations

  [ John Lambert ]
  * temporarily turn off Python + tbb in CI because of OOM

  [ Frank Dellaert ]
  * fixed inhertance
  * Added explicit header as suggested in issue #634

  [ lcarlone ]
  * removed new class and test

  [ Varun Agrawal ]
  * clean up the CMake
  * Squashed 'wrap/' changes from b0eb968f2..d19cda546
  * templated return types are now supported
  * Move wrapper documentation to the wrap project

  [ lcarlone ]
  * added test
  * created .h
  * done factor!
  * compiles and all tests pass!!
  * simple tests are passing, but now we start on the serious ones
  * fixed equals
  * error computation also looks fine!
  * moving to other tests
  * moving to noisy tests
  * fixed unit test
  * got it!
  * test failure: now we can start computing jacobians

  [ Varun Agrawal ]
  * fix holder_type typo
  * make ignore list consistent across Python and Matlab
  * Squashed 'wrap/' changes from d19cda546..91f3835a8
  * Squashed 'wrap/' changes from 91f3835a8..aae9b4605

  [ lcarlone ]
  * trying to figure out jacobians

  [ Varun Agrawal ]
  * undo ignore updates, all tests now pass

  [ lcarlone ]
  * isolated schur complement!
  * pipeline up and running, need to fix Jacobians next, then Schur complement
  * debugging jacobians
  * still segfaults

  [ Jose Luis Blanco Claraco ]
  * fix missing verbosityLMTranslator case

  [ Varun Agrawal ]
  * fix the Similarity3 export declarations and wrapper
  * Fix CI with separate boost install
  * temporarily added required check
  * explicitly add python version

  [ lcarlone ]
  * working on new sym matrix

  [ Milo Knowles ]
  * Three examples of failing PartialPriorFactor<Pose3> Jacobians
  * Add successful unit test for identity pose
  * Correct Jacobian in PartialPriorFactor, modify derived factors for compatibility
  * Change mask to indices and update factor docstring

  [ lcarlone ]
  * solving key problem
  * trying to fix crucial test
  * fixed optimization test: now we have to (i) allow reuse of same calibration, (ii) enable all other tests, (iii) remove cout

  [ Milo Knowles ]
  * Prefer localCoordinates over logmap

  [ lcarlone ]
  * adding test with single key
  * removed tests that are not applicable - merging to develop now

  [ Navid Mahabadi ]
  * fix: UnaryFactor Jacobian
  * update: use avialble rot2 class

  [ Varun Agrawal ]
  * fix numpy deprecation warnings
  * more specific version of python to test against
  * Squashed 'wrap/' changes from aae9b4605..3eff76f60
  * Squashed 'wrap/' changes from 3eff76f60..548e61b1f
  * added CMake variable to set the matlab.h include
  * Squashed 'wrap/' changes from 548e61b1f..29628426d
  * switch back to simple python3
  * fix number of arguments to matlab_wrap for unstable
  * Squashed 'wrap/' changes from 29628426d..9a467794e

  [ lcarlone ]
  * fixed print, removed cout, test still failing
  * amended

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from 9a467794e..96ccdfd0b

  [ Milo Knowles ]
  * Fix x/y mismatch in unit tests
  * Add constructor tests and extend tests to Pose2
  * Switch to cleaner T::Logmap
  * Fix incorrect Vector dimension that was causing CI failures
  * Add LocalCoordinates() to ProductLieGroup and remove unnecessary <Eigen/Core> include to reduce compile memory

  [ lcarlone ]
  * moving to more appropriate construction of Hessian

  [ Milo Knowles ]
  * Fix Rot3::LocalCoordinates runtime error when using Cayley map

  [ lcarlone ]
  * getting better
  * test still failing
  * now I have a working prototype!
  * works now!!
  * getting ready to enable monocular operation
  * 2 tests to go
  * 1 test to go!
  * need to clean up templates and remove 2 redundant lines
  * removed extra "else"

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from 96ccdfd0b..5ddaff8ba
  * operator overloading for compose
  * add operator overloading and fix some TODOs in the wrapper

  [ lcarlone ]
  * added extra unit test
  * formatting
  * improved naming, formatting, comments
  * cleanup
  * fixed glitch highlighted by CI
  * trying to fix CI error

  [ Frank Dellaert ]
  * Added double as template arg

  [ lcarlone ]
  * added comment

  [ Varun Agrawal ]
  * added double as a template for PriorFactor, NavState retract and local, some formatting

  [ Aleksei Evlampev ]
  * fix boost serialization version includes
  * remove unnecessary includes in SubgraphBuilder.h

  [ Varun Agrawal ]
  * disable Wrapper CI for GCC 5 until we optimize the wrapper
  * change KeyFormatter from boost::function to std::function
  * bunch of minor fixes

  [ Gerry Chen ]
  * remove boost::function from Key.h
  * Squashed 'wrap/' changes from 5ddaff8ba..b43f7c6d7
  * update gtsam.i print function declarations
  * update default args to match with c++
  * include pybind11/function

  [ Aleksei Evlampev ]
  * return back including boost version.hpp header

  [ Gerry Chen ]
  * Squashed 'wrap/' changes from 5ddaff8ba..bae34fac8
  * include pybind::iostream to the python wrapper cpp template
  * documentation about wrap update instructions

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from bae34fac8..b80bc63cf

  [ Asa Hammond ]
  * Remove unused body_P_sensor param
  * update docstring for dt param

  [ Varun Agrawal ]
  * remove redundant stuff
  * Squashed 'wrap/' changes from b80bc63cf..903694b77
  * Squashed 'wrap/' changes from 903694b77..b2144a712
  * Squashed 'wrap/' changes from b2144a712..0124bcc45
  * assign default variables for string in print()

  [ yotams ]
  * rolling shutter projection factor

  [ Milo Knowles ]
  * Add MagPoseFactor
  * Compute error in the body frame and fix print()
  * Improve docs

  [ Ayush Baid ]
  * Adding factor with shared calibration as a variable

  [ Varun Agrawal ]
  * fix printing of preintegration params

  [ Ayush Baid ]
  * fixing tests by moving to Cal3_S2
  * using fixed size matrix, and adding jacobian in homogeneous conversion
  * renaming key variable
  * fixing docstring
  * reverting jacobian computation from homogeneous function

  [ Jose Luis Blanco-Claraco ]
  * Avoid potential wrong memory access

  [ Varun Agrawal ]
  * print default arguments update

  [ Ayush Baid ]
  * adding prior on calibrations

  [ Varun Agrawal ]
  * override print methods and update wrapper
  * remove virtual from overridden methods, add virtual destructors to appease compiler
  * fix warnings from tests
  * fix unused warning
  * fix some interface todos
  * add pybind11/operators.h to interface template
  * update boost download link

  [ lcarlone ]
  * addeed gnc example
  * added GNC example
  * adding knownOutlier input to GNC
  * all tests done!
  * user can now also set the weights to initialize gnc!

  [ yetongumich ]
  * refactor tests and add comments
  * resolve some nits

  [ lcarlone ]
  * added comment on example interface
  * amended

  [ Fan Jiang ]
  * Working CustomFactor
  * Change to using nullptr
  * Allow KeyVector to just be lists
  * Add comment on functor signature
  * Add comment in gtsam.i
  * Add printing for CustomFactor
  * Remove unnecessary comment
  * Add documentation
  * Address Frank's comments
  * Add more comments

  [ lcarlone ]
  * fixed formatting glitch

  [ HMellor ]
  * Correct ImuFactorExamples frame description

  [ Varun Agrawal ]
  * update docstrings and format
  * Add Akshay's Cal3Bundler test
  * account for radial distortion in initial guess for `calibrate`
  * add test for rekey of LinearContainerFactor
  * override the rekey methods so as to update the properties as well
  * added destructor for CameraSet to remove warning

  [ Tim McGrath ]
  * fix bug on computation of SO(3) logmap

  [ Milo Knowles ]
  * Update commment syntax and replace typedef with using

  [ Varun Agrawal ]
  * initialize with intrinsic coordinates which has radial distortion modeled
  * add all of Akshay's tests for default model
  * addressed comments and added an additional test
  * make rr and g as const

  [ Dan Barladeanu ]
  * Comments Only.
  * fix comment to docstring

  [ Frank Dellaert ]
  * Added Range to Point2

  [ Fan Jiang ]
  * Fixed Python factor for TBB
  * Trajectory Estimation example
  * Add unit test for optimization a factor graph
  * Address Frank's comments
  * Fix example in docs

  [ Varun Agrawal ]
  * fix bug in LinearContainerFactor and warnings about Point3
  * added test for this issue

  [ Ayush Baid ]
  * updating tests
  * creating 18 point example

  [ Milo Knowles ]
  * Move MagPoseFactor to gtsam

  [ Ayush Baid ]
  * switching to sampson point line error
  * fixing jacobians and reformatting
  * changing error values in test
  * adding jacobians on input points
  * adding jacobians on input points
  * moving to squared sampson error
  * using correct jacobian computation for calibration
  * fixing unit tests

  [ John Lambert ]
  * add transformFrom() for Point3 in Similarity3

  [ Ayush Baid ]
  * adding 11 point example for cal3bundler
  * fixing test cases

  [ Jose Luis Blanco Claraco ]
  * add expressions for cross() and dot()

  [ Varun Agrawal ]
  * merge double into Values templates
  * add cmake command to run GTSAM python tests

  [ Akshay Krishnan ]
  * removing Sampson error + some tests cleanup
  * increasing calibrate() tolerance
  * small covariance change

  [ akrishnan86 ]
  * formatting changes
  * removing duplicate data file

  [ acxz ]
  * use size_t variable type
  * update timeLago.cpp with newer Sampler interface
  * use size_t variable type
  * update boost::bind usage

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from 0124bcc45..07330d100

  [ Akshay Krishnan ]
  * removing failing test and unused data

  [ akrishnan86 ]
  * updating documentation for factor

  [ acxz ]
  * explicitly use boost::placeholders:_X for compilers that do not respect function scope
  * replace deprecated tbb functionality

  [ Akash Patel ]
  * formatting

  [ acxz ]
  * formatting
  * using using for boost placeholders in tests
  * add comment for purpose of variable
  * formatting

  [ Akshay Krishnan ]
  * updating points name, constexpr
  * changing to macro EssenstialMatrixfactor4
  * all jacobian tests for essential matrix use macro

  [ akrishnan86 ]
  * formatting example

  [ Varun Agrawal ]
  * update the pgp servers to get the LLVM GPG key
  * update key server in other workflow files

  [ Jay Elrod ]
  * Add user-defined copy constructor for Rot2

  [ roderick-koehle ]
  * Forward declaration of PinholeCameraCal3Fisheye
  * Forward declaration for Set of Fisheye Cameras
  * Extend python wrapper to include fisheye models.
  * Forward declaration of fisheye camera.
  * Unit test for equidistant fisheye
  * Extend unit testing of omnidirectional projection

  [ Varun Agrawal ]
  * Added lots of tests for BetweenFactor
  * add Pose3 expmap to wrapper
  * typo fix

  [ roderick-koehle ]
  * Introduce setUpClass, python snake_case variables
  * Use of common setUpClass method
  * Correct tab to spaces to fix formatting
  * Improved accuracy for analytic undistortion

  [ Varun Agrawal ]
  * cleaner variables
  * fix dimension for Pose3 test

  [ Scott ]
  * Fix serialization of ISAM2 class

  [ John Lambert ]
  * Update ShonanAveraging.h
  * add interface in C++, and helper extractRot2Measurements()
  * fix typo
  * add ShonanAveraging2 constructor to wrapper, that accepts BetweenFactorPose2s as input
  * add conversion function for Pose2 -> BinaryMeasurement<Rot2>
  * fix typo on 3x3 matrix def

  [ Scott ]
  * Added ISAM2 serialize test

  [ John Lambert ]
  * use default parameters if none provided, and remove gtsam namespace prefix in .h file
  * check in python unit test for new functionality

  [ roderick-koehle ]
  * Add comment about initial guess in undistortion

  [ John Lambert ]
  * add missing import to python unit test
  * improve docs about compiling without TBB
  * improve wrapper compilation instructions, when TBB not installed
  * set pmin and pmax in unit test

  [ roderick-koehle ]
  * Add ambiguous calibrate/uncalibrate declarations.
  * Missing CameraSet binding specialisations
  * Update ignore list in CMakeFile

  [ Varun Agrawal ]
  * replaced boost with std for placeholders, bind and function
  * update all the tests

  [ John Lambert ]
  * fix typo in block indexing, 3x3 covariance for Pose2 should have just 1x1 block for theta

  [ roderick-koehle ]
  * Testing CameraSet and triangulatePoint3
  * Unittest, triangulation for Cal3Unified

  [ Varun Agrawal ]
  * break interface file into multiple files
  * break up preamble and specializations so there are no duplicate includes
  * update template for wrapper
  * move RedirectCout to base/utilities.h
  * update CMake
  * wrapper updates
  * enable CI builds
  * fixes
  * Squashed 'wrap/' changes from 07330d100..d9ae5ce03

  [ John Lambert ]
  * try increasing pmax to pass test
  * fix typo

  [ Varun Agrawal ]
  * matlab wrapper header update

  [ John Lambert ]
  * use simple example for unit test
  * use mod when comparing angles
  * fix assert on angles
  * update logic in angular error comparison

  [ roderick-koehle ]
  * Shared data for triangulation unit tests
  * Shared setup triangulation unit test
  * Minor fix test_Cal3Unified
  * Minor fix test_Cal3Fisheye
  * Remove commented out line
  * Remove comment
  * Remove spaces in empty line

  [ Varun Agrawal ]
  * update interface files with latest develop
  * remove extraneous file

  [ Akash Patel ]
  * Revert "replace deprecated tbb functionality"

  [ Scott ]
  * Try macOS fix

  [ lcarlone ]
  * added templates for factors
  * setting up .h and tests - compiles and tests pass.
  * put in place initial functions
  * removed cpp
  * now I need to move to testing and interpolation
  * added interpolation function from shteren1
  * removed interp from Pose3, starting to take pass on projection factor and test
  * amended
  * pass on projection factor, but looks great overall
  * everything working out so far with the tests
  * all tests are passing!
  * added nice test on cheirality exception - done with projectionFactorRollingShutter

  [ Akshay Krishnan ]
  * wrapping triangulate nonlinear

  [ John Lambert ]
  * use upper 3x3 sub-block of covariance matrix for converting BetweenFactor to BinaryMeasurement, and use Isotropic in ShonanAveraging2
  * add comments about tangent space and covariance matrix ordering

  [ lcarlone ]
  * started serious testing: all tests pass for now
  * solidified add and equal
  * finding best way to test RS errors
  * yay! error test passes!
  * jacobians are good to go!
  * jacobians and errors are well tested now
  * got to the final monster. Now I need to implement createHessian
  * stuck on compile issue

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from d9ae5ce03..571c23952

  [ lcarlone ]
  * all pass!
  * all pass!
  * moved common function to cameraSet. commented issues with templated calls to functions in cameraSet
  * removed comments. Code is complete now. Need few more unit tests and we are good to go
  * removed printout, solved CI issue

  [ akrishnan86 ]
  * adding gtsam scope

  [ lcarlone ]
  * fixed another test, few more to go
  * fixed test with lmk distance
  * test with EPI fixed
  * working on testing + cosmetic improvements to print for smart factors
  * fixed another test.
  * done with tests, now I only have to rename gamma to keep consistency with the projection factors RS
  * renamed params. need one last test
  * extra cleanup
  * added timing test
  * CHECK -> EXPECT
  * test still in progress; removed a tmp function
  * fixed last test - this is good to go!
  * fixing ci issue

  [ Varun Agrawal ]
  * add Windows export symbols for PinholeCamera
  * first pass at IMUKittiExampleGPS.py
  * speed up boost install
  * improvements to CI files
  * Install boost directly from binary
  * use Boost 1.67.0 for Windows
  * use env variables and fix setting of GITHUB_ENV
  * use more cores for make on unix systems
  * improvements to windows builds
  * Boost 1.72.0 for Windows

  [ Jose Luis Blanco Claraco ]
  * Add missing getter

  [ John Lambert ]
  * start wrapping GNC
  * Remove std prefix in .i fn signatures
  * Remove ‘class’ from template specifications
  * try imports
  * provide template list of typedef
  * test GNC along with other non-linear optimizers in python unit tests
  * remove Dogleg from GNC-supported base-optimizers, and use nested templates
  * add virtual to all classes in the .i file
  * add GTSAM_EXPORT to GncParams.h
  * add GTSAM_EXPORT to GncOptimizer.h
  * clean up test_Pose3SLAMExample.py
  * add type hints, use numpy instead of math module
  * add type hints to visual_data_generator.py
  * clean up plot.py with modern type hints
  * add more missing type hints
  * add missing type hint
  * add missing docstring for an input arg
  * use custom typedefs for GNC + GaussNewton and GNC + LM
  * import GncLMParams, GncLMOptimizer to prevent pybind's automatic long names from name concat
  * add missing gtsam prefix
  * add Optional type annotations where needed

  [ lcarlone ]
  * now using MakeJacobian
  * simplified jacobian computation, improved comments
  * reformatted using google style
  * renamed interp param to alpha, improved comments, added cpp

  [ John Lambert ]
  * Start wrapping the verbosity options for GNC

  [ Varun Agrawal ]
  * modernize NonlinearEquality.h
  * update docs to reflect min Boost version
  * small wrapper updates
  * fix extractPoint2/3 and added C++ tests
  * added Python tests
  * updated docs
  * full slew of tests
  * update wrapper with defaults
  * set lowest common boost version
  * Link to GTSAM-EXPORT doc
  * only format c++ file (no code changes)
  * working implementation

  [ Eric ]
  * Small clarification and md cleanup

  [ John Lambert ]
  * Expand DSF map unit tests
  * improve docstring
  * clean up SFMdata

  [ Varun Agrawal ]
  * format and modernize NonlinearEquality2
  * wrap NonlinearEquality2 + python unit test
  * Update `make python-test` so that it works even if GTSAM is already installed
  * Add section about Boost version requirement
  * add missing import of Pose3

  [ lcarlone ]
  * starting to make templates for smart projection factors uniform (all on cameras)
  * investigating potential templating alternatives
  * don't like it - going to create a different class
  * reverted all changes back to master
  * and created a new factor instead - moving to testing now
  * compiles, testing now
  * fixed bug
  * progress on tests
  * removed line
  * still challenging to parse extrinsics
  * tests finally passing!

  [ Varun Agrawal ]
  * add guards for system Metis
  * CI special case for using system version of 3rd party libraries
  * formatting
  * add appropriate guards for metis

  [ lcarlone ]
  * plot twist: templating new factor on CAMERA
  * added capability to use multiple measurements from the same pose. unfortunately still had to define a non-templated function from cameraSet
  * all tests pass except one on serialization
  * passing tough test - nice!
  * done with all tests

  [ Varun Agrawal ]
  * Basis functions (#403)

  [ Gerry Chen ]
  * python unit test for FitBasis
  * add <pybind/stl.h> and fix constructor argument order
  * docstrings and formatting

  [ Varun Agrawal ]
  * fix python tests and make verbose so they are easy to debug

  [ Frank Dellaert ]
  * Added override
  * Some formatting
  * Got rid of SchurComplementAndRearrangeBlocks_3_12_6
  * Check equals not assert_equal
  * Google-style formatting in new files.
  * Cleaned up interpolate

  [ Varun Agrawal ]
  * verbose python testing

  [ lcarlone ]
  * Merge branch 'develop' into feature/cameraTemplateForAllSmartFactors

  [ Varun Agrawal ]
  * Fix bug in FourierBasis
  * break down tests to make reporting clearer

  [ Frank Dellaert ]
  * Removed types defined in Base class
  * Documented linear factors better.
  * Formatting and better documentation
  * Added two ReadMe files to document the plethora of smart factors.
  * Address review comments, docs only.

  [ John Lambert ]
  * add Pose2.align() to wrapper
  * add Point2Pairs typedef to Point2.h
  * add gtsam::Point2Pairs to CMakeLists.txt
  * add Point2Pairs to specializations
  * move align as function, not as class method
  * start python unit test for align()
  * add python unit test on Pose2.align()
  * fix missing imports
  * import align from gtsam directly
  * directly import only classes from gtsam
  * use boost::optional in .i file directly

  [ Varun Agrawal ]
  * add a cmake flag for easy toggling BetweenFactor jacobian computations
  * add support for boost::optional return type in geometry.i
  * formatting
  * update documentation for boost::optional binding

  [ John Lambert ]
  * use updated wrap syntax for Verbosity enum in .i file

  [ Varun Agrawal ]
  * refactor to remove all pylint errors
  * fix matplotlib deprecation
  * removed duplicate
  * wrap smart flags for various noise models

  [ Frank Dellaert ]
  * Added virtual constructor and re-formatted constructors
  * Switched to borglab hub
  * Updated README
  * Fixed TODOs

  [ Frank dellaert ]
  * Fixed VNC docs for Mac

  [ Varun Agrawal ]
  * clean up and refactoring to use custom preintegration params
  * formatting
  * wrap key printing funcs and remove redundancy
  * wrap more JacobianFactor constructors
  * update template to record correct name of cpp file

  [ Akash Sharma ]
  * Update Find TBB to handle TBB installed with homebrew on OS X Better Error message for TBB handling with versions greater than 2021.1 on OS X

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from 571c23952..add6075e8
  * make TBB finding depend on the GTSAM_WITH_TBB flag
  * Squashed 'wrap/' changes from add6075e8..d6350c214

  [ lcarlone ]
  * renamed smartProjectionFactorP -> smartProjectionRigFactor
  * modernized factor
  * fixed equal
  * fixing tests
  * halfway there
  * working on tests
  * all tests work except serialization
  * added extra test with multi cam

  [ Gerry Chen ]
  * OptionalJacobian fixed constructor with dynamic pointer
  * AdjointMap jacobians for Pose3
  * only compute jacobians when needed
  * AdjointTranspose
  * only compute intermediate jacobians when needed
  * review comment: move check outside lambda

  [ lcarlone ]
  * added more comments here and there
  * changing API for rolling shutter
  * bug fix - finalizing last few tests
  * all tests are passing!
  * done with tests
  * now I only need to fix comments in rolling shutter factor
  * all set here!

  [ John Lambert ]
  * add failing unit test on axisAngle for Rot3 in c++
  * add python unit test for Rot3
  * fix typo
  * fix assert

  [ Varun Agrawal ]
  * run tests for C++ CI

  [ Fan Jiang ]
  * Revert "Revert "replace deprecated tbb functionality""
  * Fixed numerical problems near +-pi
  * Revert "Revert "Revert "replace deprecated tbb functionality"""
  * Cleanup equation

  [ Varun Agrawal ]
  * update proxy functions to use the Adjoint and AdjointTranpose methods
  * add docs explaining why pRw_H_t is the same as Rw_H_R
  * make threshold more lenient

  [ jerredchen ]
  * added new Python examples using iSAM2
  * Added minor comments for documentation

  [ Fan Jiang ]
  * simplify logic of biggest diagonal
  * Fix typo

  [ John Lambert ]
  * Add specific examples to stress-test the log map
  * loosen tolerance on trace(R) == -1

  [ Fan Jiang ]
  * Fix again with better approximation

  [ jerredchen ]
  * adjusted docstrings to match google style guide

  [ Fan Jiang ]
  * Revert "Revert "replace deprecated tbb functionality""

  [ Gerry Chen ]
  * correct jacobians
  * documentation
  * explicitly define simpified jacobian expressions for efficiency
  * stricter tolerances
  * Revert "stricter tolerances"
  * address frank review comments

  [ Varun Agrawal ]
  * use variables to store targets
  * clean up the __init__ file
  * address review comments

  [ yetongumich ]
  * add logmap expression
  * add logmap expression

  [ John Lambert ]
  * add LAGO (for Pose2) to python wrapper

  [ Ivor Wanders ]
  * Fix dangling reference in static allocation.

  [ John Lambert ]
  * add LAGO example to Python
  * use nested namespace in wrapper from Varun's suggestion
  * use nested namespace

  [ Varun Agrawal ]
  * add type annotations
  * fix type annotation
  * use python f-strings

  [ John Lambert ]
  * fix typos in python example file
  * add lago unit test, since lago namespace cannot be imported properly be wrapper

  [ Varun Agrawal ]
  * refactor the example to make it cleaner
  * replace static variable with variable of greater scope in cpp example
  * fix the included_imu_measurement_count scope

  [ Fan Jiang ]
  * TBB revival

  [ John Lambert ]
  * use unittest framework instead of pytest
  * add missing default arg on useOdometricPath

  [ roderick-koehle ]
  * Test of jacobian of Cal3Fisheye for on-axis point
  * Test jacobian of Cal3Unified for on-axis point
  * Avoid division by zero in jacobian calculation

  [ Varun Agrawal ]
  * put all example scripts inside main() functions and apply formatting

  [ John Lambert ]
  * use Point3 instead of artificial vector3
  * use Point3 instead of artificial vector3

  [ Varun Agrawal ]
  * add type annotations
  * add conjoining constructor for VectorValues
  * generate GTSAM_UNSTABLE Cmake exports
  * update cmake function to set default package version number

  [ jerredchen ]
  * made changes according to Frank

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from d6350c214..0ab10c359
  * update CMake
  * Add tests for Lie::interpolate jacobians

  [ Gerry Chen ]
  * much cleaner Adjoint jacobian
  * delete "FIXME" because `compose` unit tests check `AdjointMap`

  [ Varun Agrawal ]
  * address review comments
  * fix small bug
  * specify optional args as Optional type

  [ jerredchen ]
  * removed ground truth; angles set in deg and converted to rad
  * removed ground truth; set ang in deg and convert to rad for Pose3iSAM2

  [ roderick-koehle ]
  * Check numeric stability close to optical axis
  * Numerically stable refactoring of fisheye jacobian
  * Fix missing semicolons
  * Undo change in scaling function
  * Fix type in extression for dyd_dyi
  * Convergence of equidistant scaling utilizing atan2

  [ Varun Agrawal ]
  * address review comments

  [ roderick-koehle ]
  * Fix calling scaling_factor static method.

  [ jerredchen ]
  * formatting by Google style

  [ Varun Agrawal ]
  * address review comments

  [ Gerry Chen ]
  * Address review comments: negative sign and AdjointTranspose section

  [ yetongumich ]
  * enable expression double multiply

  [ Gerry Chen ]
  * add jacobian of second argument to adjoint and adjointTranpsose

  [ Jose Luis Blanco Claraco ]
  * Fix warnings raised by GCC -Wpedactic
  * more consistent notation of macros

  [ Varun Agrawal ]
  * add printErrors method to GaussianFactorGraph

  [ Frank Dellaert ]
  * Use Eigen expressions more effectively and kill & in code.
  * Cleaner Jacobian.

  [ lcarlone ]
  * fixed formatting (plus small fix: std::vector -> fastVector)
  * formatting + const&
  * more const&
  * now throwing exception is params are incorrect
  * added variable in loop
  * point2 -> measurement
  * this will need to be applied in #861
  * disabled timing for test
  * fixed readme
  * serialization is still off
  * final cosmetics
  * added intermediate camera variable for clarity
  * got rid of second constructor
  * further cleanup before moving to sharedPtrs
  * moved rig to use shared ptrs
  * now using shared ptrs

  [ Jose Luis Blanco Claraco ]
  * prefer semicolon in definitions
  * more extra semicolon warnings fixed

  [ Varun Agrawal ]
  * fix warning
  * reduce call stack
  * use safer eigen indexing syntax
  * wrap Colamd function
  * format and refactor the SFM BAL example
  * properly deprecate eliminate functions
  * address reviewer comments
  * add return type definitions
  * fix OrderingType declaration
  * update cmake to copy python tests whenever they are updated

  [ Gerry Chen ]
  * update python wrapper

  [ Varun Agrawal ]
  * properly deprecate additional methods to fully finish deprecation
  * fix VectorValues include

  [ duembgen ]
  * Add namespace to ambiguous placeholders

  [ Frank Dellaert ]
  * Formatting with Google style
  * Formatted sudokus better

  [ Varun Agrawal ]
  * wrap KeyVector methods

  [ Fan Jiang ]
  * Add deprecations
  * Fix windows build

  [ beetleskin ]
  * Use FastDefaultAllocator for Values to adhere allocation compile flags

  [ Fan Jiang ]
  * Remove Exports

  [ roderick-koehle ]
  * Removed comments

  [ Varun Agrawal ]
  * wrap additional ISAM2 methods
  * comment out method
  * make noise model default constructors available for serialization
  * enable pickling for a bunch of objects
  * comment out incomplete code
  * remove commented out code
  * fix all axpy deprecations
  * update the packaged Eigen to 3.3.9
  * Revert "update the packaged Eigen to 3.3.9"
  * add workaround for Eigen serialization issue
  * Add Eigen/Core header
  * make LinearContainerFactor public for serialization
  * wrap other ISAM2 methods
  * wrap alternate ISAM2::update method

  [ Brice Rebsamen ]
  * .gitignore: swp files
  * don't return a const
  * missing shared_ptr include
  * ParseMeasurement<Pose2> initializer list needs an extra argument

  [ Fan Jiang ]
  * Bump version to 4.1.1

 -- Bernd Pfrommer <bernd.pfrommer@gmail.com>  Fri, 18 Feb 2022 08:28:48 -0500
